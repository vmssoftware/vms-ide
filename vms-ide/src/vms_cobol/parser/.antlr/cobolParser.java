// Generated from d:\vmssoftware.work\vms-ide\src\vms_cobol\parser\cobol.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.misc.*;
import org.antlr.v4.runtime.tree.*;
import java.util.List;
import java.util.Iterator;
import java.util.ArrayList;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class cobolParser extends Parser {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		DECLARATIVES_IN_A_AREA=1, END_IN_A_AREA=2, IDENTIFICATION_IN_A_AREA=3, 
		ACCEPT=4, ACCESS=5, ADD=6, AFTER=7, ALL=8, ALPHA=9, ALPHABET=10, ALPHABETIC=11, 
		ALPHABETIC_LOWER=12, ALPHABETIC_UPPER=13, ALSO=14, ALTER=15, ALTERNATE=16, 
		AND=17, APPLY=18, ARE=19, AREA=20, AREAS=21, ARGUMENT_NUMBER=22, ARGUMENT_VALUE=23, 
		ARITHMETIC=24, ASCENDING=25, ASCII=26, ASSIGN=27, AT=28, AUTHOR=29, AUTO=30, 
		AUTOMATIC=31, AUTOTERMINATE=32, BACKGROUND_COLOR=33, BEFORE=34, BELL=35, 
		BINARY=36, BINARY_CHAR=37, BINARY_DOUBLE=38, BINARY_LONG=39, BINARY_SHORT=40, 
		BLANK=41, BLINK=42, BLINKING=43, BLOCK=44, BOLD=45, BOTTOM=46, BY=47, 
		C01=48, CALL=49, CANCEL=50, CARD_READER=51, CF=52, CH=53, CHARACTER=54, 
		CHARACTERS=55, CLASS=56, CLOCK_UNITS=57, CLOSE=58, CODE=59, CODE_SET=60, 
		COLLATING=61, COLUMN=62, COMMA=63, COMMON=64, COMP=65, COMPUTATIONAL=66, 
		COMPUTATIONAL_1=67, COMPUTATIONAL_2=68, COMPUTATIONAL_3=69, COMPUTATIONAL_4=70, 
		COMPUTATIONAL_5=71, COMPUTATIONAL_X=72, COMPUTE=73, COMP_1=74, COMP_2=75, 
		COMP_3=76, COMP_4=77, COMP_5=78, COMP_X=79, CONFIGURATION=80, CONSOLE=81, 
		CONTAINS=82, CONTIGUOUS=83, CONTIGUOUS_BEST_TRY=84, CONTINUE=85, CONTROL=86, 
		CONTROLS=87, CONVERSION=88, CONVERTING=89, COPY=90, CRT=91, CURRENCY=92, 
		CURRENT=93, CURSOR=94, DATA=95, DATE=96, DATE_COMPILED=97, DATE_WRITTEN=98, 
		DAY=99, DAY_OF_WEEK=100, DE=101, DEBUGGING=102, DECIMAL_POINT=103, DECLARATIVES=104, 
		DEFAULT=105, DEFERRED_WRITE=106, DELETE=107, DELIMITER=108, DEPENDING=109, 
		DESCENDING=110, DETAIL=111, DISK=112, DISPLAY=113, DIVIDE=114, DIVISION=115, 
		DOWN=116, DUPLICATES=117, DYNAMIC=118, EBCDIC=119, ECHO=120, EDITING=121, 
		END=122, END_ACCEPT=123, END_ADD=124, END_CALL=125, END_COMPUTE=126, END_DELETE=127, 
		END_DIVIDE=128, END_DISPLAY=129, END_EVALUATE=130, END_IF=131, END_MULTIPLY=132, 
		END_OF_PAGE=133, END_PERFORM=134, END_READ=135, END_RETURN=136, END_REWRITE=137, 
		END_SEARCH=138, END_START=139, END_STRING=140, END_SUBTRACT=141, END_UNSTRING=142, 
		END_WRITE=143, ENVIRONMENT=144, ENVIRONMENT_NAME=145, ENVIRONMENT_VALUE=146, 
		EOL=147, EOS=148, EQUAL=149, ERASE=150, ERROR=151, EVALUATE=152, EVERY=153, 
		EXCEPTION=154, EXCLUSIVE=155, EXIT=156, EXTEND=157, EXTENSION=158, EXTERNAL=159, 
		FAILURE=160, FD=161, FILE=162, FILE_CONTROL=163, FILE_ID=164, FILLER=165, 
		FILL_SIZE=166, FINAL=167, FIRST=168, FLOAT_EXTENDED=169, FLOAT_LONG=170, 
		FLOAT_SHORT=171, FOOTING=172, FOR=173, FOREGROUND_COLOR=174, FROM=175, 
		FULL=176, FUNCTION=177, GENERATE=178, GIVING=179, GLOBAL=180, GO=181, 
		GREATER=182, GROUP=183, HEADING=184, HIGHLIGHT=185, HIGH_VALUE=186, HIGH_VALUES=187, 
		I64=188, ID=189, IDENT=190, IDENTIFICATION=191, IF=192, IN=193, INDEX=194, 
		INDEXED=195, INDICATE=196, INITIAL=197, INITIALIZE=198, INITIATE=199, 
		INPUT=200, INPUT_OUTPUT=201, INSPECT=202, INSTALLATION=203, INVALID=204, 
		IS=205, I_O=206, I_O_CONTROL=207, JUST=208, JUSTIFIED=209, KEY=210, LABEL=211, 
		LAST=212, LEADING=213, LEFT=214, LESS=215, LIMIT=216, LIMITS=217, LINAGE=218, 
		LINE=219, LINES=220, LINE_PRINTER=221, LINKAGE=222, LOCK=223, LOCK_HOLDING=224, 
		LOWLIGHT=225, LOW_VALUE=226, LOW_VALUES=227, MANUAL=228, MASS_INSERT=229, 
		MEMORY=230, MERGE=231, MODE=232, MODULES=233, MOVE=234, MULTIPLE=235, 
		MULTIPLY=236, NATIVE=237, NEGATIVE=238, NEXT=239, NO=240, NOT=241, NUMBER=242, 
		NUMERIC=243, OBJECT_COMPUTER=244, OCCURS=245, OF=246, OFF=247, OMITTED=248, 
		ON=249, OPEN=250, OPTIONAL=251, OPTIONS=252, OR=253, ORGANIZATION=254, 
		OUTPUT=255, OVERFLOW=256, PACKED_DECIMAL=257, PADDING=258, PAGE=259, PAPER_TAPE_PUNCH=260, 
		PAPER_TAPE_READER=261, PERFORM=262, PF=263, PH=264, PIC=265, PICTURE=266, 
		PLUS=267, POINTER=268, POINTER_64=269, POSITION=270, POSITIVE=271, PREALLOCATION=272, 
		PRINTER=273, PRINT_CONTROL=274, PROCEDURE=275, PROGRAM=276, PROGRAM_ID=277, 
		PROTECTED=278, QUOTE=279, QUOTES=280, RANDOM=281, RD=282, READ=283, RECORD=284, 
		RECORDS=285, REDEFINES=286, REEL=287, REFERENCE=288, RELATIVE=289, RELEASE=290, 
		RENAMES=291, REPLACE=292, REPLACING=293, REPORT=294, REPORTING=295, REPORTS=296, 
		REQUIRED=297, RERUN=298, RESERVE=299, RESET=300, RETURN=301, REVERSED=302, 
		REVERSE_VIDEO=303, REWRITE=304, RF=305, RH=306, RIGHT=307, ROLLBACK=308, 
		SAME=309, SCREEN=310, SD=311, SEARCH=312, SECTION=313, SECURE=314, SECURITY=315, 
		SEGMENT_LIMIT=316, SELECT=317, SEPARATE=318, SEQUENCE=319, SEQUENTIAL=320, 
		SET=321, SIGN=322, SIGNED=323, SIZE=324, SORT=325, SORT_MERGE=326, SOURCE=327, 
		SOURCE_COMPUTER=328, SPACE=329, SPACES=330, SPECIAL_NAMES=331, STANDARD=332, 
		STANDARD_1=333, STANDARD_2=334, START=335, STATUS=336, STOP=337, STRING=338, 
		SUBTRACT=339, SUCCESS=340, SUM=341, SUPPRESS=342, SWITCH=343, SYMBOL=344, 
		SYMBOLIC=345, SYNC=346, SYNCHRONIZED=347, SYSERR=348, SYSIN=349, SYSOUT=350, 
		TALLYING=351, TAPE=352, TERMINATE=353, THAN=354, THROUGH=355, THRU=356, 
		TIME=357, TIMES=358, TO=359, TOP=360, TRAILING=361, TRUE=362, TYPE=363, 
		UNDERLINE=364, UNDERLINED=365, UNIT=366, UNLOCK=367, UNSIGNED=368, UNSTRING=369, 
		UP=370, UPON=371, USAGE=372, USE=373, USING=374, VALUE=375, VALUES=376, 
		VARYING=377, VAX=378, WHEN=379, WINDOW=380, WITH=381, WORDS=382, WORKING_STORAGE=383, 
		WRITE=384, YYYYDDD=385, YYYYMMDD=386, ZERO=387, ZEROES=388, ZEROS=389, 
		ROUNDED=390, CORRESPONDING=391, CORR=392, PROCEED=393, CONTENT=394, DESCRIPTOR=395, 
		REMOVAL=396, REWIND=397, ADVANCING=398, INTO=399, REMAINDER=400, START_SLASH_=401, 
		START_STAR_=402, EXCLAM_=403, UNDER_=404, PLUS_=405, MINUS_=406, STAR_=407, 
		SLASH_=408, COMMA_=409, SEMI_=410, COLON_=411, EQUAL_=412, LT_=413, LE_=414, 
		GE_=415, GT_=416, LPAREN_=417, RPAREN_=418, LBRACK_=419, RBRACK_=420, 
		POINTER_=421, ATP_=422, DOT_=423, LCURLY_=424, RCURLY_=425, STRING_LITERAL=426, 
		NUMERIC_LITERAL=427, HEX_LITERAL=428, USER_DEFINED_WORD=429, START_FOUR_SPACES=430, 
		WHITESPACE=431, NEWLINE=432;
	public static final int
		RULE_cobol_source = 0, RULE_figurative_constant = 1, RULE_separator = 2, 
		RULE_arithmetic_separator = 3, RULE_line_comment = 4, RULE_program = 5, 
		RULE_procedure_division = 6, RULE_end_program = 7, RULE_procedure_division_header = 8, 
		RULE_section = 9, RULE_declaratives = 10, RULE_declaratives_section = 11, 
		RULE_declarative_paragraph = 12, RULE_paragraph = 13, RULE_sentense = 14, 
		RULE_use_statement = 15, RULE_group_data_name = 16, RULE_use_on = 17, 
		RULE_section_header = 18, RULE_paragraph_name = 19, RULE_section_name = 20, 
		RULE_using = 21, RULE_giving = 22, RULE_procedure_test_line = 23, RULE_statement = 24, 
		RULE_divide_statement = 25, RULE_divide_statement_form1 = 26, RULE_divide_statement_form2 = 27, 
		RULE_remaind = 28, RULE_divide_num = 29, RULE_display_statement = 30, 
		RULE_display_statement_form1 = 31, RULE_display_statement_form2 = 32, 
		RULE_display_statement_form3 = 33, RULE_display_statement_form4 = 34, 
		RULE_src_item = 35, RULE_display_upon = 36, RULE_disp_f3_line = 37, RULE_disp_f3_column = 38, 
		RULE_display_form1_clause = 39, RULE_display_form2_clause = 40, RULE_at_line_number = 41, 
		RULE_at_column_number = 42, RULE_out_dest = 43, RULE_delete_statement = 44, 
		RULE_continue_statement = 45, RULE_compute_statement = 46, RULE_close_statement = 47, 
		RULE_close_params = 48, RULE_cancel_statement = 49, RULE_call_statement = 50, 
		RULE_call_giving = 51, RULE_call_using = 52, RULE_using_arg = 53, RULE_using_prefix = 54, 
		RULE_argument = 55, RULE_prog_name = 56, RULE_alter_statement = 57, RULE_alter_new_proc = 58, 
		RULE_alter_proc = 59, RULE_add_statement = 60, RULE_add_grp = 61, RULE_add_num = 62, 
		RULE_accept_statement = 63, RULE_on_exception_variants = 64, RULE_at_end_variants = 65, 
		RULE_on_size_variants = 66, RULE_on_key_variants = 67, RULE_accept_form6 = 68, 
		RULE_accept6_item = 69, RULE_accept_form1 = 70, RULE_accept_form2 = 71, 
		RULE_accept_form3 = 72, RULE_accept_form4 = 73, RULE_accept_form5 = 74, 
		RULE_accept_at = 75, RULE_accept_at_line = 76, RULE_accept_at_column = 77, 
		RULE_accept_form4_clause = 78, RULE_accept_form3_clause = 79, RULE_key_dest_item = 80, 
		RULE_def_value = 81, RULE_protected_value = 82, RULE_prot_fill_lit = 83, 
		RULE_prot_size_value = 84, RULE_number_value = 85, RULE_date_time = 86, 
		RULE_dest_item = 87, RULE_input_source = 88, RULE_at_end = 89, RULE_on_exception = 90, 
		RULE_on_size = 91, RULE_on_key = 92, RULE_data_division = 93, RULE_file_section = 94, 
		RULE_working_storage_section = 95, RULE_linkage_section = 96, RULE_report_section = 97, 
		RULE_screen_section = 98, RULE_file_description_entry = 99, RULE_sort_merge_file_description_entry = 100, 
		RULE_report_description_entry = 101, RULE_fd_clause = 102, RULE_record_description_entry = 103, 
		RULE_data_description_entry = 104, RULE_level_number = 105, RULE_data_description_clause = 106, 
		RULE_renames = 107, RULE_rename_start = 108, RULE_rename_end = 109, RULE_value_is = 110, 
		RULE_value_is_definition = 111, RULE_value_is_definition_part = 112, RULE_value_is_definition_thru = 113, 
		RULE_external_name = 114, RULE_ref_data_name = 115, RULE_value_is_literal = 116, 
		RULE_occurs = 117, RULE_indexed_by = 118, RULE_ind_name = 119, RULE_key_is = 120, 
		RULE_key_name = 121, RULE_times_definition = 122, RULE_table_size = 123, 
		RULE_min_times = 124, RULE_max_times = 125, RULE_report_group_description_entry = 126, 
		RULE_report_group_data_description = 127, RULE_report_group_data_description_clause = 128, 
		RULE_sign_is = 129, RULE_sum = 130, RULE_control_foot_name = 131, RULE_detail_report_group_name = 132, 
		RULE_sum_name = 133, RULE_source_name = 134, RULE_column_number = 135, 
		RULE_type_is_definition = 136, RULE_type_control_name = 137, RULE_next_group_definition = 138, 
		RULE_line_num_definition = 139, RULE_line_num = 140, RULE_rd_clause = 141, 
		RULE_footing_line_rd = 142, RULE_last_detail_line = 143, RULE_first_detail_line = 144, 
		RULE_heading_line = 145, RULE_page_size_rd = 146, RULE_control_name = 147, 
		RULE_report_code = 148, RULE_usage = 149, RULE_usage_definition = 150, 
		RULE_picture = 151, RULE_character_string = 152, RULE_char_str_part = 153, 
		RULE_other_data_item = 154, RULE_data_name = 155, RULE_sd_clause = 156, 
		RULE_report_is = 157, RULE_report_name = 158, RULE_linage = 159, RULE_bottom_lines = 160, 
		RULE_top_lines = 161, RULE_footing_line = 162, RULE_page_size = 163, RULE_data_rec = 164, 
		RULE_rec_name = 165, RULE_value_of_id = 166, RULE_value_of_id_definition = 167, 
		RULE_label = 168, RULE_record = 169, RULE_record_definition = 170, RULE_depending_item = 171, 
		RULE_shortest_rec = 172, RULE_longest_rec = 173, RULE_screen_description_entry = 174, 
		RULE_screen_name = 175, RULE_screen_description_clause = 176, RULE_scr_pic_using = 177, 
		RULE_scr_pic_from = 178, RULE_scr_pic_to = 179, RULE_nonnumeric_literal = 180, 
		RULE_src_number = 181, RULE_color_num = 182, RULE_identification_division = 183, 
		RULE_identification_division_paragraph = 184, RULE_program_id = 185, RULE_program_name = 186, 
		RULE_is_program = 187, RULE_with_ident = 188, RULE_ident_string = 189, 
		RULE_comment_entry = 190, RULE_author = 191, RULE_installation = 192, 
		RULE_date_written = 193, RULE_date_compiled = 194, RULE_security = 195, 
		RULE_options_ = 196, RULE_arithmetic = 197, RULE_environment_division = 198, 
		RULE_configuration_section = 199, RULE_input_output_section = 200, RULE_source_computer = 201, 
		RULE_computer_type = 202, RULE_with_debugging = 203, RULE_object_computer = 204, 
		RULE_memory_size = 205, RULE_memory_size_amount = 206, RULE_memory_size_unit = 207, 
		RULE_program_collating = 208, RULE_alpha_name = 209, RULE_segment_limit = 210, 
		RULE_segment_number = 211, RULE_special_names = 212, RULE_special_names_content = 213, 
		RULE_qualified_data_item = 214, RULE_currency = 215, RULE_currency_definition = 216, 
		RULE_literal_7 = 217, RULE_literal_8 = 218, RULE_class_ = 219, RULE_class_name = 220, 
		RULE_user_class = 221, RULE_symbolic_chars = 222, RULE_symb_ch_definition = 223, 
		RULE_symb_ch_def_clause = 224, RULE_symb_ch_def_in_alphabet = 225, RULE_symbol_char = 226, 
		RULE_char_val = 227, RULE_alphabet = 228, RULE_alpha_value = 229, RULE_user_alpha = 230, 
		RULE_first_literal = 231, RULE_last_literal = 232, RULE_same_literal = 233, 
		RULE_switch_ = 234, RULE_switch_clause_on = 235, RULE_switch_clause_off = 236, 
		RULE_cond_name = 237, RULE_switch_name = 238, RULE_switch_num = 239, RULE_top_of_page_name = 240, 
		RULE_predefined_device = 241, RULE_device_name = 242, RULE_arg_env = 243, 
		RULE_arg_env_name = 244, RULE_file_control = 245, RULE_select = 246, RULE_file_status = 247, 
		RULE_file_stat = 248, RULE_record_key = 249, RULE_record_key_definition = 250, 
		RULE_access_mode = 251, RULE_reserve = 252, RULE_reserve_num = 253, RULE_record_delimiter = 254, 
		RULE_padding = 255, RULE_pad_char = 256, RULE_organization = 257, RULE_lock_mode = 258, 
		RULE_lock_mode_definition = 259, RULE_code_set = 260, RULE_block_contains = 261, 
		RULE_smallest_block = 262, RULE_blocksize = 263, RULE_assign_to = 264, 
		RULE_assign_to_definition = 265, RULE_file_spec = 266, RULE_file_name = 267, 
		RULE_i_o_control = 268, RULE_multiple_file = 269, RULE_multiple_file_definition = 270, 
		RULE_multiple_file_name = 271, RULE_pos_integer = 272, RULE_rerun = 273, 
		RULE_rerun_definition = 274, RULE_clock_count = 275, RULE_condition_name = 276, 
		RULE_rerun_def_file = 277, RULE_rec_count = 278, RULE_same = 279, RULE_same_area_file = 280, 
		RULE_apply = 281, RULE_apply_definition = 282, RULE_window_ptrs = 283, 
		RULE_preall_amt = 284, RULE_extend_amt = 285, RULE_arithmetic_expression = 286, 
		RULE_constant = 287, RULE_binary_arithmetic_operator = 288, RULE_unary_arithmetic_operator = 289, 
		RULE_logic_expression = 290, RULE_success_failure_condition = 291, RULE_logic_condition = 292, 
		RULE_logic_operation = 293, RULE_sign_condition = 294, RULE_sign_condition_name = 295, 
		RULE_class_condition = 296, RULE_class_condition_name = 297, RULE_condition_operator = 298, 
		RULE_identifier_result = 299, RULE_identifier = 300, RULE_arguments = 301, 
		RULE_subscripting = 302, RULE_reference_modification = 303, RULE_leftmost_character_position = 304, 
		RULE_length = 305, RULE_function_name = 306;
	public static final String[] ruleNames = {
		"cobol_source", "figurative_constant", "separator", "arithmetic_separator", 
		"line_comment", "program", "procedure_division", "end_program", "procedure_division_header", 
		"section", "declaratives", "declaratives_section", "declarative_paragraph", 
		"paragraph", "sentense", "use_statement", "group_data_name", "use_on", 
		"section_header", "paragraph_name", "section_name", "using", "giving", 
		"procedure_test_line", "statement", "divide_statement", "divide_statement_form1", 
		"divide_statement_form2", "remaind", "divide_num", "display_statement", 
		"display_statement_form1", "display_statement_form2", "display_statement_form3", 
		"display_statement_form4", "src_item", "display_upon", "disp_f3_line", 
		"disp_f3_column", "display_form1_clause", "display_form2_clause", "at_line_number", 
		"at_column_number", "out_dest", "delete_statement", "continue_statement", 
		"compute_statement", "close_statement", "close_params", "cancel_statement", 
		"call_statement", "call_giving", "call_using", "using_arg", "using_prefix", 
		"argument", "prog_name", "alter_statement", "alter_new_proc", "alter_proc", 
		"add_statement", "add_grp", "add_num", "accept_statement", "on_exception_variants", 
		"at_end_variants", "on_size_variants", "on_key_variants", "accept_form6", 
		"accept6_item", "accept_form1", "accept_form2", "accept_form3", "accept_form4", 
		"accept_form5", "accept_at", "accept_at_line", "accept_at_column", "accept_form4_clause", 
		"accept_form3_clause", "key_dest_item", "def_value", "protected_value", 
		"prot_fill_lit", "prot_size_value", "number_value", "date_time", "dest_item", 
		"input_source", "at_end", "on_exception", "on_size", "on_key", "data_division", 
		"file_section", "working_storage_section", "linkage_section", "report_section", 
		"screen_section", "file_description_entry", "sort_merge_file_description_entry", 
		"report_description_entry", "fd_clause", "record_description_entry", "data_description_entry", 
		"level_number", "data_description_clause", "renames", "rename_start", 
		"rename_end", "value_is", "value_is_definition", "value_is_definition_part", 
		"value_is_definition_thru", "external_name", "ref_data_name", "value_is_literal", 
		"occurs", "indexed_by", "ind_name", "key_is", "key_name", "times_definition", 
		"table_size", "min_times", "max_times", "report_group_description_entry", 
		"report_group_data_description", "report_group_data_description_clause", 
		"sign_is", "sum", "control_foot_name", "detail_report_group_name", "sum_name", 
		"source_name", "column_number", "type_is_definition", "type_control_name", 
		"next_group_definition", "line_num_definition", "line_num", "rd_clause", 
		"footing_line_rd", "last_detail_line", "first_detail_line", "heading_line", 
		"page_size_rd", "control_name", "report_code", "usage", "usage_definition", 
		"picture", "character_string", "char_str_part", "other_data_item", "data_name", 
		"sd_clause", "report_is", "report_name", "linage", "bottom_lines", "top_lines", 
		"footing_line", "page_size", "data_rec", "rec_name", "value_of_id", "value_of_id_definition", 
		"label", "record", "record_definition", "depending_item", "shortest_rec", 
		"longest_rec", "screen_description_entry", "screen_name", "screen_description_clause", 
		"scr_pic_using", "scr_pic_from", "scr_pic_to", "nonnumeric_literal", "src_number", 
		"color_num", "identification_division", "identification_division_paragraph", 
		"program_id", "program_name", "is_program", "with_ident", "ident_string", 
		"comment_entry", "author", "installation", "date_written", "date_compiled", 
		"security", "options_", "arithmetic", "environment_division", "configuration_section", 
		"input_output_section", "source_computer", "computer_type", "with_debugging", 
		"object_computer", "memory_size", "memory_size_amount", "memory_size_unit", 
		"program_collating", "alpha_name", "segment_limit", "segment_number", 
		"special_names", "special_names_content", "qualified_data_item", "currency", 
		"currency_definition", "literal_7", "literal_8", "class_", "class_name", 
		"user_class", "symbolic_chars", "symb_ch_definition", "symb_ch_def_clause", 
		"symb_ch_def_in_alphabet", "symbol_char", "char_val", "alphabet", "alpha_value", 
		"user_alpha", "first_literal", "last_literal", "same_literal", "switch_", 
		"switch_clause_on", "switch_clause_off", "cond_name", "switch_name", "switch_num", 
		"top_of_page_name", "predefined_device", "device_name", "arg_env", "arg_env_name", 
		"file_control", "select", "file_status", "file_stat", "record_key", "record_key_definition", 
		"access_mode", "reserve", "reserve_num", "record_delimiter", "padding", 
		"pad_char", "organization", "lock_mode", "lock_mode_definition", "code_set", 
		"block_contains", "smallest_block", "blocksize", "assign_to", "assign_to_definition", 
		"file_spec", "file_name", "i_o_control", "multiple_file", "multiple_file_definition", 
		"multiple_file_name", "pos_integer", "rerun", "rerun_definition", "clock_count", 
		"condition_name", "rerun_def_file", "rec_count", "same", "same_area_file", 
		"apply", "apply_definition", "window_ptrs", "preall_amt", "extend_amt", 
		"arithmetic_expression", "constant", "binary_arithmetic_operator", "unary_arithmetic_operator", 
		"logic_expression", "success_failure_condition", "logic_condition", "logic_operation", 
		"sign_condition", "sign_condition_name", "class_condition", "class_condition_name", 
		"condition_operator", "identifier_result", "identifier", "arguments", 
		"subscripting", "reference_modification", "leftmost_character_position", 
		"length", "function_name"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "'!'", "'_'", "'+'", "'-'", 
		null, null, "','", "';'", "':'", "'='", "'<'", "'<='", "'>='", "'>'", 
		"'('", "')'", "'['", "']'", "'^'", "'@'", "'.'", "'{'", "'}'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "DECLARATIVES_IN_A_AREA", "END_IN_A_AREA", "IDENTIFICATION_IN_A_AREA", 
		"ACCEPT", "ACCESS", "ADD", "AFTER", "ALL", "ALPHA", "ALPHABET", "ALPHABETIC", 
		"ALPHABETIC_LOWER", "ALPHABETIC_UPPER", "ALSO", "ALTER", "ALTERNATE", 
		"AND", "APPLY", "ARE", "AREA", "AREAS", "ARGUMENT_NUMBER", "ARGUMENT_VALUE", 
		"ARITHMETIC", "ASCENDING", "ASCII", "ASSIGN", "AT", "AUTHOR", "AUTO", 
		"AUTOMATIC", "AUTOTERMINATE", "BACKGROUND_COLOR", "BEFORE", "BELL", "BINARY", 
		"BINARY_CHAR", "BINARY_DOUBLE", "BINARY_LONG", "BINARY_SHORT", "BLANK", 
		"BLINK", "BLINKING", "BLOCK", "BOLD", "BOTTOM", "BY", "C01", "CALL", "CANCEL", 
		"CARD_READER", "CF", "CH", "CHARACTER", "CHARACTERS", "CLASS", "CLOCK_UNITS", 
		"CLOSE", "CODE", "CODE_SET", "COLLATING", "COLUMN", "COMMA", "COMMON", 
		"COMP", "COMPUTATIONAL", "COMPUTATIONAL_1", "COMPUTATIONAL_2", "COMPUTATIONAL_3", 
		"COMPUTATIONAL_4", "COMPUTATIONAL_5", "COMPUTATIONAL_X", "COMPUTE", "COMP_1", 
		"COMP_2", "COMP_3", "COMP_4", "COMP_5", "COMP_X", "CONFIGURATION", "CONSOLE", 
		"CONTAINS", "CONTIGUOUS", "CONTIGUOUS_BEST_TRY", "CONTINUE", "CONTROL", 
		"CONTROLS", "CONVERSION", "CONVERTING", "COPY", "CRT", "CURRENCY", "CURRENT", 
		"CURSOR", "DATA", "DATE", "DATE_COMPILED", "DATE_WRITTEN", "DAY", "DAY_OF_WEEK", 
		"DE", "DEBUGGING", "DECIMAL_POINT", "DECLARATIVES", "DEFAULT", "DEFERRED_WRITE", 
		"DELETE", "DELIMITER", "DEPENDING", "DESCENDING", "DETAIL", "DISK", "DISPLAY", 
		"DIVIDE", "DIVISION", "DOWN", "DUPLICATES", "DYNAMIC", "EBCDIC", "ECHO", 
		"EDITING", "END", "END_ACCEPT", "END_ADD", "END_CALL", "END_COMPUTE", 
		"END_DELETE", "END_DIVIDE", "END_DISPLAY", "END_EVALUATE", "END_IF", "END_MULTIPLY", 
		"END_OF_PAGE", "END_PERFORM", "END_READ", "END_RETURN", "END_REWRITE", 
		"END_SEARCH", "END_START", "END_STRING", "END_SUBTRACT", "END_UNSTRING", 
		"END_WRITE", "ENVIRONMENT", "ENVIRONMENT_NAME", "ENVIRONMENT_VALUE", "EOL", 
		"EOS", "EQUAL", "ERASE", "ERROR", "EVALUATE", "EVERY", "EXCEPTION", "EXCLUSIVE", 
		"EXIT", "EXTEND", "EXTENSION", "EXTERNAL", "FAILURE", "FD", "FILE", "FILE_CONTROL", 
		"FILE_ID", "FILLER", "FILL_SIZE", "FINAL", "FIRST", "FLOAT_EXTENDED", 
		"FLOAT_LONG", "FLOAT_SHORT", "FOOTING", "FOR", "FOREGROUND_COLOR", "FROM", 
		"FULL", "FUNCTION", "GENERATE", "GIVING", "GLOBAL", "GO", "GREATER", "GROUP", 
		"HEADING", "HIGHLIGHT", "HIGH_VALUE", "HIGH_VALUES", "I64", "ID", "IDENT", 
		"IDENTIFICATION", "IF", "IN", "INDEX", "INDEXED", "INDICATE", "INITIAL", 
		"INITIALIZE", "INITIATE", "INPUT", "INPUT_OUTPUT", "INSPECT", "INSTALLATION", 
		"INVALID", "IS", "I_O", "I_O_CONTROL", "JUST", "JUSTIFIED", "KEY", "LABEL", 
		"LAST", "LEADING", "LEFT", "LESS", "LIMIT", "LIMITS", "LINAGE", "LINE", 
		"LINES", "LINE_PRINTER", "LINKAGE", "LOCK", "LOCK_HOLDING", "LOWLIGHT", 
		"LOW_VALUE", "LOW_VALUES", "MANUAL", "MASS_INSERT", "MEMORY", "MERGE", 
		"MODE", "MODULES", "MOVE", "MULTIPLE", "MULTIPLY", "NATIVE", "NEGATIVE", 
		"NEXT", "NO", "NOT", "NUMBER", "NUMERIC", "OBJECT_COMPUTER", "OCCURS", 
		"OF", "OFF", "OMITTED", "ON", "OPEN", "OPTIONAL", "OPTIONS", "OR", "ORGANIZATION", 
		"OUTPUT", "OVERFLOW", "PACKED_DECIMAL", "PADDING", "PAGE", "PAPER_TAPE_PUNCH", 
		"PAPER_TAPE_READER", "PERFORM", "PF", "PH", "PIC", "PICTURE", "PLUS", 
		"POINTER", "POINTER_64", "POSITION", "POSITIVE", "PREALLOCATION", "PRINTER", 
		"PRINT_CONTROL", "PROCEDURE", "PROGRAM", "PROGRAM_ID", "PROTECTED", "QUOTE", 
		"QUOTES", "RANDOM", "RD", "READ", "RECORD", "RECORDS", "REDEFINES", "REEL", 
		"REFERENCE", "RELATIVE", "RELEASE", "RENAMES", "REPLACE", "REPLACING", 
		"REPORT", "REPORTING", "REPORTS", "REQUIRED", "RERUN", "RESERVE", "RESET", 
		"RETURN", "REVERSED", "REVERSE_VIDEO", "REWRITE", "RF", "RH", "RIGHT", 
		"ROLLBACK", "SAME", "SCREEN", "SD", "SEARCH", "SECTION", "SECURE", "SECURITY", 
		"SEGMENT_LIMIT", "SELECT", "SEPARATE", "SEQUENCE", "SEQUENTIAL", "SET", 
		"SIGN", "SIGNED", "SIZE", "SORT", "SORT_MERGE", "SOURCE", "SOURCE_COMPUTER", 
		"SPACE", "SPACES", "SPECIAL_NAMES", "STANDARD", "STANDARD_1", "STANDARD_2", 
		"START", "STATUS", "STOP", "STRING", "SUBTRACT", "SUCCESS", "SUM", "SUPPRESS", 
		"SWITCH", "SYMBOL", "SYMBOLIC", "SYNC", "SYNCHRONIZED", "SYSERR", "SYSIN", 
		"SYSOUT", "TALLYING", "TAPE", "TERMINATE", "THAN", "THROUGH", "THRU", 
		"TIME", "TIMES", "TO", "TOP", "TRAILING", "TRUE", "TYPE", "UNDERLINE", 
		"UNDERLINED", "UNIT", "UNLOCK", "UNSIGNED", "UNSTRING", "UP", "UPON", 
		"USAGE", "USE", "USING", "VALUE", "VALUES", "VARYING", "VAX", "WHEN", 
		"WINDOW", "WITH", "WORDS", "WORKING_STORAGE", "WRITE", "YYYYDDD", "YYYYMMDD", 
		"ZERO", "ZEROES", "ZEROS", "ROUNDED", "CORRESPONDING", "CORR", "PROCEED", 
		"CONTENT", "DESCRIPTOR", "REMOVAL", "REWIND", "ADVANCING", "INTO", "REMAINDER", 
		"START_SLASH_", "START_STAR_", "EXCLAM_", "UNDER_", "PLUS_", "MINUS_", 
		"STAR_", "SLASH_", "COMMA_", "SEMI_", "COLON_", "EQUAL_", "LT_", "LE_", 
		"GE_", "GT_", "LPAREN_", "RPAREN_", "LBRACK_", "RBRACK_", "POINTER_", 
		"ATP_", "DOT_", "LCURLY_", "RCURLY_", "STRING_LITERAL", "NUMERIC_LITERAL", 
		"HEX_LITERAL", "USER_DEFINED_WORD", "START_FOUR_SPACES", "WHITESPACE", 
		"NEWLINE"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	@Override
	public String getGrammarFileName() { return "cobol.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public ATN getATN() { return _ATN; }

	public cobolParser(TokenStream input) {
		super(input);
		_interp = new ParserATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}
	public static class Cobol_sourceContext extends ParserRuleContext {
		public TerminalNode EOF() { return getToken(cobolParser.EOF, 0); }
		public List<ProgramContext> program() {
			return getRuleContexts(ProgramContext.class);
		}
		public ProgramContext program(int i) {
			return getRuleContext(ProgramContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Cobol_sourceContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_cobol_source; }
	}

	public final Cobol_sourceContext cobol_source() throws RecognitionException {
		Cobol_sourceContext _localctx = new Cobol_sourceContext(_ctx, getState());
		enterRule(_localctx, 0, RULE_cobol_source);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(618);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==IDENTIFICATION_IN_A_AREA || ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				setState(616);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case IDENTIFICATION_IN_A_AREA:
					{
					setState(614);
					program();
					}
					break;
				case START_SLASH_:
				case START_STAR_:
				case COMMA_:
				case SEMI_:
				case START_FOUR_SPACES:
				case WHITESPACE:
				case NEWLINE:
					{
					setState(615);
					separator();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				setState(620);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(621);
			match(EOF);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Figurative_constantContext extends ParserRuleContext {
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode SPACE() { return getToken(cobolParser.SPACE, 0); }
		public TerminalNode SPACES() { return getToken(cobolParser.SPACES, 0); }
		public TerminalNode HIGH_VALUE() { return getToken(cobolParser.HIGH_VALUE, 0); }
		public TerminalNode HIGH_VALUES() { return getToken(cobolParser.HIGH_VALUES, 0); }
		public TerminalNode LOW_VALUE() { return getToken(cobolParser.LOW_VALUE, 0); }
		public TerminalNode LOW_VALUES() { return getToken(cobolParser.LOW_VALUES, 0); }
		public TerminalNode QUOTE() { return getToken(cobolParser.QUOTE, 0); }
		public TerminalNode QUOTES() { return getToken(cobolParser.QUOTES, 0); }
		public TerminalNode ALL() { return getToken(cobolParser.ALL, 0); }
		public TerminalNode WHITESPACE() { return getToken(cobolParser.WHITESPACE, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Figurative_constantContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_figurative_constant; }
	}

	public final Figurative_constantContext figurative_constant() throws RecognitionException {
		Figurative_constantContext _localctx = new Figurative_constantContext(_ctx, getState());
		enterRule(_localctx, 2, RULE_figurative_constant);
		try {
			setState(635);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ZERO:
				enterOuterAlt(_localctx, 1);
				{
				setState(623);
				match(ZERO);
				}
				break;
			case SPACE:
				enterOuterAlt(_localctx, 2);
				{
				setState(624);
				match(SPACE);
				}
				break;
			case SPACES:
				enterOuterAlt(_localctx, 3);
				{
				setState(625);
				match(SPACES);
				}
				break;
			case HIGH_VALUE:
				enterOuterAlt(_localctx, 4);
				{
				setState(626);
				match(HIGH_VALUE);
				}
				break;
			case HIGH_VALUES:
				enterOuterAlt(_localctx, 5);
				{
				setState(627);
				match(HIGH_VALUES);
				}
				break;
			case LOW_VALUE:
				enterOuterAlt(_localctx, 6);
				{
				setState(628);
				match(LOW_VALUE);
				}
				break;
			case LOW_VALUES:
				enterOuterAlt(_localctx, 7);
				{
				setState(629);
				match(LOW_VALUES);
				}
				break;
			case QUOTE:
				enterOuterAlt(_localctx, 8);
				{
				setState(630);
				match(QUOTE);
				}
				break;
			case QUOTES:
				enterOuterAlt(_localctx, 9);
				{
				setState(631);
				match(QUOTES);
				}
				break;
			case ALL:
				enterOuterAlt(_localctx, 10);
				{
				setState(632);
				match(ALL);
				setState(633);
				match(WHITESPACE);
				setState(634);
				match(STRING_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SeparatorContext extends ParserRuleContext {
		public TerminalNode WHITESPACE() { return getToken(cobolParser.WHITESPACE, 0); }
		public TerminalNode NEWLINE() { return getToken(cobolParser.NEWLINE, 0); }
		public TerminalNode START_FOUR_SPACES() { return getToken(cobolParser.START_FOUR_SPACES, 0); }
		public TerminalNode COMMA_() { return getToken(cobolParser.COMMA_, 0); }
		public TerminalNode SEMI_() { return getToken(cobolParser.SEMI_, 0); }
		public Line_commentContext line_comment() {
			return getRuleContext(Line_commentContext.class,0);
		}
		public SeparatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_separator; }
	}

	public final SeparatorContext separator() throws RecognitionException {
		SeparatorContext _localctx = new SeparatorContext(_ctx, getState());
		enterRule(_localctx, 4, RULE_separator);
		try {
			setState(643);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case WHITESPACE:
				enterOuterAlt(_localctx, 1);
				{
				setState(637);
				match(WHITESPACE);
				}
				break;
			case NEWLINE:
				enterOuterAlt(_localctx, 2);
				{
				setState(638);
				match(NEWLINE);
				}
				break;
			case START_FOUR_SPACES:
				enterOuterAlt(_localctx, 3);
				{
				setState(639);
				match(START_FOUR_SPACES);
				}
				break;
			case COMMA_:
				enterOuterAlt(_localctx, 4);
				{
				setState(640);
				match(COMMA_);
				}
				break;
			case SEMI_:
				enterOuterAlt(_localctx, 5);
				{
				setState(641);
				match(SEMI_);
				}
				break;
			case START_SLASH_:
			case START_STAR_:
				enterOuterAlt(_localctx, 6);
				{
				setState(642);
				line_comment();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arithmetic_separatorContext extends ParserRuleContext {
		public TerminalNode WHITESPACE() { return getToken(cobolParser.WHITESPACE, 0); }
		public TerminalNode NEWLINE() { return getToken(cobolParser.NEWLINE, 0); }
		public TerminalNode START_FOUR_SPACES() { return getToken(cobolParser.START_FOUR_SPACES, 0); }
		public Line_commentContext line_comment() {
			return getRuleContext(Line_commentContext.class,0);
		}
		public Arithmetic_separatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arithmetic_separator; }
	}

	public final Arithmetic_separatorContext arithmetic_separator() throws RecognitionException {
		Arithmetic_separatorContext _localctx = new Arithmetic_separatorContext(_ctx, getState());
		enterRule(_localctx, 6, RULE_arithmetic_separator);
		try {
			setState(649);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case WHITESPACE:
				enterOuterAlt(_localctx, 1);
				{
				setState(645);
				match(WHITESPACE);
				}
				break;
			case NEWLINE:
				enterOuterAlt(_localctx, 2);
				{
				setState(646);
				match(NEWLINE);
				}
				break;
			case START_FOUR_SPACES:
				enterOuterAlt(_localctx, 3);
				{
				setState(647);
				match(START_FOUR_SPACES);
				}
				break;
			case START_SLASH_:
			case START_STAR_:
				enterOuterAlt(_localctx, 4);
				{
				setState(648);
				line_comment();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Line_commentContext extends ParserRuleContext {
		public TerminalNode START_SLASH_() { return getToken(cobolParser.START_SLASH_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public TerminalNode START_STAR_() { return getToken(cobolParser.START_STAR_, 0); }
		public Line_commentContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_line_comment; }
	}

	public final Line_commentContext line_comment() throws RecognitionException {
		Line_commentContext _localctx = new Line_commentContext(_ctx, getState());
		enterRule(_localctx, 8, RULE_line_comment);
		int _la;
		try {
			setState(667);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case START_SLASH_:
				enterOuterAlt(_localctx, 1);
				{
				setState(651);
				match(START_SLASH_);
				setState(655);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_DIVIDE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (ROUNDED - 384)) | (1L << (CORRESPONDING - 384)) | (1L << (CORR - 384)) | (1L << (PROCEED - 384)) | (1L << (CONTENT - 384)) | (1L << (DESCRIPTOR - 384)) | (1L << (REMOVAL - 384)) | (1L << (REWIND - 384)) | (1L << (ADVANCING - 384)) | (1L << (INTO - 384)) | (1L << (REMAINDER - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
					{
					{
					setState(652);
					_la = _input.LA(1);
					if ( _la <= 0 || (_la==NEWLINE) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					}
					setState(657);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(658);
				match(NEWLINE);
				}
				break;
			case START_STAR_:
				enterOuterAlt(_localctx, 2);
				{
				setState(659);
				match(START_STAR_);
				setState(663);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_DIVIDE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (ROUNDED - 384)) | (1L << (CORRESPONDING - 384)) | (1L << (CORR - 384)) | (1L << (PROCEED - 384)) | (1L << (CONTENT - 384)) | (1L << (DESCRIPTOR - 384)) | (1L << (REMOVAL - 384)) | (1L << (REWIND - 384)) | (1L << (ADVANCING - 384)) | (1L << (INTO - 384)) | (1L << (REMAINDER - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
					{
					{
					setState(660);
					_la = _input.LA(1);
					if ( _la <= 0 || (_la==NEWLINE) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					}
					setState(665);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(666);
				match(NEWLINE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ProgramContext extends ParserRuleContext {
		public Identification_divisionContext identification_division() {
			return getRuleContext(Identification_divisionContext.class,0);
		}
		public Environment_divisionContext environment_division() {
			return getRuleContext(Environment_divisionContext.class,0);
		}
		public Data_divisionContext data_division() {
			return getRuleContext(Data_divisionContext.class,0);
		}
		public Procedure_divisionContext procedure_division() {
			return getRuleContext(Procedure_divisionContext.class,0);
		}
		public ProgramContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program; }
	}

	public final ProgramContext program() throws RecognitionException {
		ProgramContext _localctx = new ProgramContext(_ctx, getState());
		enterRule(_localctx, 10, RULE_program);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(669);
			identification_division();
			setState(671);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ENVIRONMENT) {
				{
				setState(670);
				environment_division();
				}
			}

			setState(674);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==DATA) {
				{
				setState(673);
				data_division();
				}
			}

			setState(677);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==PROCEDURE) {
				{
				setState(676);
				procedure_division();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Procedure_divisionContext extends ParserRuleContext {
		public Procedure_division_headerContext procedure_division_header() {
			return getRuleContext(Procedure_division_headerContext.class,0);
		}
		public DeclarativesContext declaratives() {
			return getRuleContext(DeclarativesContext.class,0);
		}
		public End_programContext end_program() {
			return getRuleContext(End_programContext.class,0);
		}
		public List<Procedure_test_lineContext> procedure_test_line() {
			return getRuleContexts(Procedure_test_lineContext.class);
		}
		public Procedure_test_lineContext procedure_test_line(int i) {
			return getRuleContext(Procedure_test_lineContext.class,i);
		}
		public List<SectionContext> section() {
			return getRuleContexts(SectionContext.class);
		}
		public SectionContext section(int i) {
			return getRuleContext(SectionContext.class,i);
		}
		public List<ParagraphContext> paragraph() {
			return getRuleContexts(ParagraphContext.class);
		}
		public ParagraphContext paragraph(int i) {
			return getRuleContext(ParagraphContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Procedure_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_procedure_division; }
	}

	public final Procedure_divisionContext procedure_division() throws RecognitionException {
		Procedure_divisionContext _localctx = new Procedure_divisionContext(_ctx, getState());
		enterRule(_localctx, 12, RULE_procedure_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(679);
			procedure_division_header();
			setState(681);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==DECLARATIVES_IN_A_AREA) {
				{
				setState(680);
				declaratives();
				}
			}

			setState(707);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,16,_ctx) ) {
			case 1:
				{
				setState(692);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,13,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(683);
						section();
						setState(687);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,12,_ctx);
						while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
							if ( _alt==1 ) {
								{
								{
								setState(684);
								separator();
								}
								} 
							}
							setState(689);
							_errHandler.sync(this);
							_alt = getInterpreter().adaptivePredict(_input,12,_ctx);
						}
						}
						} 
					}
					setState(694);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,13,_ctx);
				}
				}
				break;
			case 2:
				{
				setState(704);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,15,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(695);
						paragraph();
						setState(699);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,14,_ctx);
						while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
							if ( _alt==1 ) {
								{
								{
								setState(696);
								separator();
								}
								} 
							}
							setState(701);
							_errHandler.sync(this);
							_alt = getInterpreter().adaptivePredict(_input,14,_ctx);
						}
						}
						} 
					}
					setState(706);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,15,_ctx);
				}
				}
				break;
			}
			setState(716);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,18,_ctx) ) {
			case 1:
				{
				setState(712);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(709);
					separator();
					}
					}
					setState(714);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(715);
				end_program();
				}
				break;
			}
			setState(733);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,21,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(721);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,19,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(718);
							separator();
							}
							} 
						}
						setState(723);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,19,_ctx);
					}
					setState(724);
					procedure_test_line();
					setState(728);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,20,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(725);
							separator();
							}
							} 
						}
						setState(730);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,20,_ctx);
					}
					}
					} 
				}
				setState(735);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,21,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class End_programContext extends ParserRuleContext {
		public TerminalNode END_IN_A_AREA() { return getToken(cobolParser.END_IN_A_AREA, 0); }
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Program_nameContext program_name() {
			return getRuleContext(Program_nameContext.class,0);
		}
		public End_programContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_end_program; }
	}

	public final End_programContext end_program() throws RecognitionException {
		End_programContext _localctx = new End_programContext(_ctx, getState());
		enterRule(_localctx, 14, RULE_end_program);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(736);
			match(END_IN_A_AREA);
			setState(738); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(737);
				separator();
				}
				}
				setState(740); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(742);
			match(PROGRAM);
			setState(750);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,24,_ctx) ) {
			case 1:
				{
				setState(744); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(743);
					separator();
					}
					}
					setState(746); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(748);
				program_name();
				}
				break;
			}
			setState(755);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(752);
				separator();
				}
				}
				setState(757);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(758);
			match(DOT_);
			setState(762);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,26,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(759);
					separator();
					}
					} 
				}
				setState(764);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,26,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Procedure_division_headerContext extends ParserRuleContext {
		public TerminalNode PROCEDURE() { return getToken(cobolParser.PROCEDURE, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public UsingContext using() {
			return getRuleContext(UsingContext.class,0);
		}
		public GivingContext giving() {
			return getRuleContext(GivingContext.class,0);
		}
		public Procedure_division_headerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_procedure_division_header; }
	}

	public final Procedure_division_headerContext procedure_division_header() throws RecognitionException {
		Procedure_division_headerContext _localctx = new Procedure_division_headerContext(_ctx, getState());
		enterRule(_localctx, 16, RULE_procedure_division_header);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(765);
			match(PROCEDURE);
			setState(767); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(766);
				separator();
				}
				}
				setState(769); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(771);
			match(DIVISION);
			setState(779);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,29,_ctx) ) {
			case 1:
				{
				setState(773); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(772);
					separator();
					}
					}
					setState(775); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(777);
				using();
				}
				break;
			}
			setState(788);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,31,_ctx) ) {
			case 1:
				{
				setState(782); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(781);
					separator();
					}
					}
					setState(784); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(786);
				giving();
				}
				break;
			}
			setState(793);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(790);
				separator();
				}
				}
				setState(795);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(796);
			match(DOT_);
			setState(800);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,33,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(797);
					separator();
					}
					} 
				}
				setState(802);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,33,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SectionContext extends ParserRuleContext {
		public Section_headerContext section_header() {
			return getRuleContext(Section_headerContext.class,0);
		}
		public SectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_section; }
	}

	public final SectionContext section() throws RecognitionException {
		SectionContext _localctx = new SectionContext(_ctx, getState());
		enterRule(_localctx, 18, RULE_section);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(803);
			section_header();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class DeclarativesContext extends ParserRuleContext {
		public TerminalNode DECLARATIVES_IN_A_AREA() { return getToken(cobolParser.DECLARATIVES_IN_A_AREA, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public TerminalNode END_IN_A_AREA() { return getToken(cobolParser.END_IN_A_AREA, 0); }
		public TerminalNode DECLARATIVES() { return getToken(cobolParser.DECLARATIVES, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Declaratives_sectionContext> declaratives_section() {
			return getRuleContexts(Declaratives_sectionContext.class);
		}
		public Declaratives_sectionContext declaratives_section(int i) {
			return getRuleContext(Declaratives_sectionContext.class,i);
		}
		public DeclarativesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_declaratives; }
	}

	public final DeclarativesContext declaratives() throws RecognitionException {
		DeclarativesContext _localctx = new DeclarativesContext(_ctx, getState());
		enterRule(_localctx, 20, RULE_declaratives);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(805);
			match(DECLARATIVES_IN_A_AREA);
			setState(809);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(806);
				separator();
				}
				}
				setState(811);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(812);
			match(DOT_);
			setState(816);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(813);
				separator();
				}
				}
				setState(818);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(826); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(819);
				declaratives_section();
				setState(823);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(820);
					separator();
					}
					}
					setState(825);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(828); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			setState(830);
			match(END_IN_A_AREA);
			setState(832); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(831);
				separator();
				}
				}
				setState(834); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(836);
			match(DECLARATIVES);
			setState(840);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(837);
				separator();
				}
				}
				setState(842);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(843);
			match(DOT_);
			setState(847);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,40,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(844);
					separator();
					}
					} 
				}
				setState(849);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,40,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Declaratives_sectionContext extends ParserRuleContext {
		public Section_headerContext section_header() {
			return getRuleContext(Section_headerContext.class,0);
		}
		public Use_statementContext use_statement() {
			return getRuleContext(Use_statementContext.class,0);
		}
		public List<Declarative_paragraphContext> declarative_paragraph() {
			return getRuleContexts(Declarative_paragraphContext.class);
		}
		public Declarative_paragraphContext declarative_paragraph(int i) {
			return getRuleContext(Declarative_paragraphContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Declaratives_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_declaratives_section; }
	}

	public final Declaratives_sectionContext declaratives_section() throws RecognitionException {
		Declaratives_sectionContext _localctx = new Declaratives_sectionContext(_ctx, getState());
		enterRule(_localctx, 22, RULE_declaratives_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(850);
			section_header();
			setState(851);
			use_statement();
			setState(861);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,42,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(853); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(852);
						separator();
						}
						}
						setState(855); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(857);
					declarative_paragraph();
					}
					} 
				}
				setState(863);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,42,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Declarative_paragraphContext extends ParserRuleContext {
		public ParagraphContext paragraph() {
			return getRuleContext(ParagraphContext.class,0);
		}
		public Declarative_paragraphContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_declarative_paragraph; }
	}

	public final Declarative_paragraphContext declarative_paragraph() throws RecognitionException {
		Declarative_paragraphContext _localctx = new Declarative_paragraphContext(_ctx, getState());
		enterRule(_localctx, 24, RULE_declarative_paragraph);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(864);
			paragraph();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ParagraphContext extends ParserRuleContext {
		public Paragraph_nameContext paragraph_name() {
			return getRuleContext(Paragraph_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<SentenseContext> sentense() {
			return getRuleContexts(SentenseContext.class);
		}
		public SentenseContext sentense(int i) {
			return getRuleContext(SentenseContext.class,i);
		}
		public ParagraphContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_paragraph; }
	}

	public final ParagraphContext paragraph() throws RecognitionException {
		ParagraphContext _localctx = new ParagraphContext(_ctx, getState());
		enterRule(_localctx, 26, RULE_paragraph);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(866);
			paragraph_name();
			setState(870);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(867);
				separator();
				}
				}
				setState(872);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(873);
			match(DOT_);
			setState(877);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,44,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(874);
					separator();
					}
					} 
				}
				setState(879);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,44,_ctx);
			}
			setState(889);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCEPT) | (1L << ADD) | (1L << ALTER) | (1L << CALL) | (1L << CANCEL) | (1L << CLOSE))) != 0) || ((((_la - 73)) & ~0x3f) == 0 && ((1L << (_la - 73)) & ((1L << (COMPUTE - 73)) | (1L << (CONTINUE - 73)) | (1L << (DELETE - 73)) | (1L << (DISPLAY - 73)) | (1L << (DIVIDE - 73)))) != 0)) {
				{
				{
				setState(880);
				sentense();
				setState(884);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,45,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(881);
						separator();
						}
						} 
					}
					setState(886);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,45,_ctx);
				}
				}
				}
				setState(891);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SentenseContext extends ParserRuleContext {
		public List<StatementContext> statement() {
			return getRuleContexts(StatementContext.class);
		}
		public StatementContext statement(int i) {
			return getRuleContext(StatementContext.class,i);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public SentenseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sentense; }
	}

	public final SentenseContext sentense() throws RecognitionException {
		SentenseContext _localctx = new SentenseContext(_ctx, getState());
		enterRule(_localctx, 28, RULE_sentense);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(899); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(892);
					statement();
					setState(896);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,47,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(893);
							separator();
							}
							} 
						}
						setState(898);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,47,_ctx);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(901); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,48,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(916);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,51,_ctx) ) {
			case 1:
				{
				setState(906);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(903);
					separator();
					}
					}
					setState(908);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(909);
				match(DOT_);
				setState(913);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,50,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(910);
						separator();
						}
						} 
					}
					setState(915);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,50,_ctx);
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Use_statementContext extends ParserRuleContext {
		public TerminalNode USE() { return getToken(cobolParser.USE, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public TerminalNode AFTER() { return getToken(cobolParser.AFTER, 0); }
		public TerminalNode PROCEDURE() { return getToken(cobolParser.PROCEDURE, 0); }
		public Use_onContext use_on() {
			return getRuleContext(Use_onContext.class,0);
		}
		public TerminalNode BEFORE() { return getToken(cobolParser.BEFORE, 0); }
		public TerminalNode REPORTING() { return getToken(cobolParser.REPORTING, 0); }
		public Group_data_nameContext group_data_name() {
			return getRuleContext(Group_data_nameContext.class,0);
		}
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode EXCEPTION() { return getToken(cobolParser.EXCEPTION, 0); }
		public TerminalNode ERROR() { return getToken(cobolParser.ERROR, 0); }
		public TerminalNode STANDARD() { return getToken(cobolParser.STANDARD, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Use_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_use_statement; }
	}

	public final Use_statementContext use_statement() throws RecognitionException {
		Use_statementContext _localctx = new Use_statementContext(_ctx, getState());
		enterRule(_localctx, 30, RULE_use_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(918);
			match(USE);
			setState(926);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,53,_ctx) ) {
			case 1:
				{
				setState(920); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(919);
					separator();
					}
					}
					setState(922); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(924);
				match(GLOBAL);
				}
				break;
			}
			setState(929); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(928);
				separator();
				}
				}
				setState(931); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(997);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case AFTER:
				{
				setState(933);
				match(AFTER);
				setState(941);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,56,_ctx) ) {
				case 1:
					{
					setState(935); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(934);
						separator();
						}
						}
						setState(937); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(939);
					match(STANDARD);
					}
					break;
				}
				setState(944); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(943);
					separator();
					}
					}
					setState(946); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(948);
				_la = _input.LA(1);
				if ( !(_la==ERROR || _la==EXCEPTION) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(950); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(949);
					separator();
					}
					}
					setState(952); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(954);
				match(PROCEDURE);
				setState(962);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,60,_ctx) ) {
				case 1:
					{
					setState(956); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(955);
						separator();
						}
						}
						setState(958); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(960);
					match(ON);
					}
					break;
				}
				setState(965); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(964);
					separator();
					}
					}
					setState(967); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(969);
				use_on();
				setState(973);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(970);
					separator();
					}
					}
					setState(975);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(976);
				match(DOT_);
				setState(980);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,63,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(977);
						separator();
						}
						} 
					}
					setState(982);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,63,_ctx);
				}
				}
				break;
			case BEFORE:
				{
				setState(983);
				match(BEFORE);
				setState(985); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(984);
					separator();
					}
					}
					setState(987); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(989);
				match(REPORTING);
				setState(991); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(990);
					separator();
					}
					}
					setState(993); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(995);
				group_data_name();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(1002);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(999);
				separator();
				}
				}
				setState(1004);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1005);
			match(DOT_);
			setState(1009);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,68,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1006);
					separator();
					}
					} 
				}
				setState(1011);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,68,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Group_data_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Group_data_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_group_data_name; }
	}

	public final Group_data_nameContext group_data_name() throws RecognitionException {
		Group_data_nameContext _localctx = new Group_data_nameContext(_ctx, getState());
		enterRule(_localctx, 32, RULE_group_data_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1012);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Use_onContext extends ParserRuleContext {
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode INPUT() { return getToken(cobolParser.INPUT, 0); }
		public TerminalNode OUTPUT() { return getToken(cobolParser.OUTPUT, 0); }
		public TerminalNode I_O() { return getToken(cobolParser.I_O, 0); }
		public TerminalNode EXTEND() { return getToken(cobolParser.EXTEND, 0); }
		public Use_onContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_use_on; }
	}

	public final Use_onContext use_on() throws RecognitionException {
		Use_onContext _localctx = new Use_onContext(_ctx, getState());
		enterRule(_localctx, 34, RULE_use_on);
		int _la;
		try {
			int _alt;
			setState(1031);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(1014);
				file_name();
				setState(1024);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,70,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1016); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1015);
							separator();
							}
							}
							setState(1018); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(1020);
						file_name();
						}
						} 
					}
					setState(1026);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,70,_ctx);
				}
				}
				break;
			case INPUT:
				enterOuterAlt(_localctx, 2);
				{
				setState(1027);
				match(INPUT);
				}
				break;
			case OUTPUT:
				enterOuterAlt(_localctx, 3);
				{
				setState(1028);
				match(OUTPUT);
				}
				break;
			case I_O:
				enterOuterAlt(_localctx, 4);
				{
				setState(1029);
				match(I_O);
				}
				break;
			case EXTEND:
				enterOuterAlt(_localctx, 5);
				{
				setState(1030);
				match(EXTEND);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Section_headerContext extends ParserRuleContext {
		public Section_nameContext section_name() {
			return getRuleContext(Section_nameContext.class,0);
		}
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Segment_numberContext segment_number() {
			return getRuleContext(Segment_numberContext.class,0);
		}
		public Section_headerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_section_header; }
	}

	public final Section_headerContext section_header() throws RecognitionException {
		Section_headerContext _localctx = new Section_headerContext(_ctx, getState());
		enterRule(_localctx, 36, RULE_section_header);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1033);
			section_name();
			setState(1035); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1034);
				separator();
				}
				}
				setState(1037); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1039);
			match(SECTION);
			setState(1047);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,74,_ctx) ) {
			case 1:
				{
				setState(1041); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1040);
					separator();
					}
					}
					setState(1043); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1045);
				segment_number();
				}
				break;
			}
			setState(1052);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(1049);
				separator();
				}
				}
				setState(1054);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1055);
			match(DOT_);
			setState(1059);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,76,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1056);
					separator();
					}
					} 
				}
				setState(1061);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,76,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Paragraph_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Paragraph_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_paragraph_name; }
	}

	public final Paragraph_nameContext paragraph_name() throws RecognitionException {
		Paragraph_nameContext _localctx = new Paragraph_nameContext(_ctx, getState());
		enterRule(_localctx, 38, RULE_paragraph_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1062);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Section_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Section_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_section_name; }
	}

	public final Section_nameContext section_name() throws RecognitionException {
		Section_nameContext _localctx = new Section_nameContext(_ctx, getState());
		enterRule(_localctx, 40, RULE_section_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1064);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class UsingContext extends ParserRuleContext {
		public TerminalNode USING() { return getToken(cobolParser.USING, 0); }
		public List<Qualified_data_itemContext> qualified_data_item() {
			return getRuleContexts(Qualified_data_itemContext.class);
		}
		public Qualified_data_itemContext qualified_data_item(int i) {
			return getRuleContext(Qualified_data_itemContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public UsingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_using; }
	}

	public final UsingContext using() throws RecognitionException {
		UsingContext _localctx = new UsingContext(_ctx, getState());
		enterRule(_localctx, 42, RULE_using);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1066);
			match(USING);
			setState(1068); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1067);
				separator();
				}
				}
				setState(1070); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1072);
			qualified_data_item();
			setState(1082);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,79,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1074); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1073);
						separator();
						}
						}
						setState(1076); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1078);
					qualified_data_item();
					}
					} 
				}
				setState(1084);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,79,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class GivingContext extends ParserRuleContext {
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public GivingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_giving; }
	}

	public final GivingContext giving() throws RecognitionException {
		GivingContext _localctx = new GivingContext(_ctx, getState());
		enterRule(_localctx, 44, RULE_giving);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1085);
			match(GIVING);
			setState(1087); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1086);
				separator();
				}
				}
				setState(1089); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1091);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Procedure_test_lineContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Logic_expressionContext logic_expression() {
			return getRuleContext(Logic_expressionContext.class,0);
		}
		public Procedure_test_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_procedure_test_line; }
	}

	public final Procedure_test_lineContext procedure_test_line() throws RecognitionException {
		Procedure_test_lineContext _localctx = new Procedure_test_lineContext(_ctx, getState());
		enterRule(_localctx, 46, RULE_procedure_test_line);
		int _la;
		try {
			setState(1112);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,83,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1093);
				arithmetic_expression(0);
				setState(1097);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(1094);
					separator();
					}
					}
					setState(1099);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(1100);
				match(DOT_);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1102);
				logic_expression(0);
				setState(1106);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(1103);
					separator();
					}
					}
					setState(1108);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(1109);
				match(DOT_);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1111);
				separator();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class StatementContext extends ParserRuleContext {
		public Accept_statementContext accept_statement() {
			return getRuleContext(Accept_statementContext.class,0);
		}
		public Add_statementContext add_statement() {
			return getRuleContext(Add_statementContext.class,0);
		}
		public Alter_statementContext alter_statement() {
			return getRuleContext(Alter_statementContext.class,0);
		}
		public Call_statementContext call_statement() {
			return getRuleContext(Call_statementContext.class,0);
		}
		public Cancel_statementContext cancel_statement() {
			return getRuleContext(Cancel_statementContext.class,0);
		}
		public Close_statementContext close_statement() {
			return getRuleContext(Close_statementContext.class,0);
		}
		public Compute_statementContext compute_statement() {
			return getRuleContext(Compute_statementContext.class,0);
		}
		public Continue_statementContext continue_statement() {
			return getRuleContext(Continue_statementContext.class,0);
		}
		public Delete_statementContext delete_statement() {
			return getRuleContext(Delete_statementContext.class,0);
		}
		public Display_statementContext display_statement() {
			return getRuleContext(Display_statementContext.class,0);
		}
		public Divide_statementContext divide_statement() {
			return getRuleContext(Divide_statementContext.class,0);
		}
		public StatementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_statement; }
	}

	public final StatementContext statement() throws RecognitionException {
		StatementContext _localctx = new StatementContext(_ctx, getState());
		enterRule(_localctx, 48, RULE_statement);
		try {
			setState(1125);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ACCEPT:
				enterOuterAlt(_localctx, 1);
				{
				setState(1114);
				accept_statement();
				}
				break;
			case ADD:
				enterOuterAlt(_localctx, 2);
				{
				setState(1115);
				add_statement();
				}
				break;
			case ALTER:
				enterOuterAlt(_localctx, 3);
				{
				setState(1116);
				alter_statement();
				}
				break;
			case CALL:
				enterOuterAlt(_localctx, 4);
				{
				setState(1117);
				call_statement();
				}
				break;
			case CANCEL:
				enterOuterAlt(_localctx, 5);
				{
				setState(1118);
				cancel_statement();
				}
				break;
			case CLOSE:
				enterOuterAlt(_localctx, 6);
				{
				setState(1119);
				close_statement();
				}
				break;
			case COMPUTE:
				enterOuterAlt(_localctx, 7);
				{
				setState(1120);
				compute_statement();
				}
				break;
			case CONTINUE:
				enterOuterAlt(_localctx, 8);
				{
				setState(1121);
				continue_statement();
				}
				break;
			case DELETE:
				enterOuterAlt(_localctx, 9);
				{
				setState(1122);
				delete_statement();
				}
				break;
			case DISPLAY:
				enterOuterAlt(_localctx, 10);
				{
				setState(1123);
				display_statement();
				}
				break;
			case DIVIDE:
				enterOuterAlt(_localctx, 11);
				{
				setState(1124);
				divide_statement();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Divide_statementContext extends ParserRuleContext {
		public Divide_statement_form1Context divide_statement_form1() {
			return getRuleContext(Divide_statement_form1Context.class,0);
		}
		public Divide_statement_form2Context divide_statement_form2() {
			return getRuleContext(Divide_statement_form2Context.class,0);
		}
		public Divide_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_divide_statement; }
	}

	public final Divide_statementContext divide_statement() throws RecognitionException {
		Divide_statementContext _localctx = new Divide_statementContext(_ctx, getState());
		enterRule(_localctx, 50, RULE_divide_statement);
		try {
			setState(1129);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,85,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1127);
				divide_statement_form1();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1128);
				divide_statement_form2();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Divide_statement_form1Context extends ParserRuleContext {
		public TerminalNode DIVIDE() { return getToken(cobolParser.DIVIDE, 0); }
		public List<Divide_numContext> divide_num() {
			return getRuleContexts(Divide_numContext.class);
		}
		public Divide_numContext divide_num(int i) {
			return getRuleContext(Divide_numContext.class,i);
		}
		public TerminalNode INTO() { return getToken(cobolParser.INTO, 0); }
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public List<Identifier_resultContext> identifier_result() {
			return getRuleContexts(Identifier_resultContext.class);
		}
		public Identifier_resultContext identifier_result(int i) {
			return getRuleContext(Identifier_resultContext.class,i);
		}
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_DIVIDE() { return getToken(cobolParser.END_DIVIDE, 0); }
		public List<TerminalNode> ROUNDED() { return getTokens(cobolParser.ROUNDED); }
		public TerminalNode ROUNDED(int i) {
			return getToken(cobolParser.ROUNDED, i);
		}
		public Divide_statement_form1Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_divide_statement_form1; }
	}

	public final Divide_statement_form1Context divide_statement_form1() throws RecognitionException {
		Divide_statement_form1Context _localctx = new Divide_statement_form1Context(_ctx, getState());
		enterRule(_localctx, 52, RULE_divide_statement_form1);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1131);
			match(DIVIDE);
			setState(1133); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1132);
				separator();
				}
				}
				setState(1135); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1137);
			divide_num();
			setState(1139); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1138);
				separator();
				}
				}
				setState(1141); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1143);
			_la = _input.LA(1);
			if ( !(_la==BY || _la==INTO) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(1157);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,90,_ctx) ) {
			case 1:
				{
				setState(1145); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1144);
					separator();
					}
					}
					setState(1147); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1149);
				divide_num();
				setState(1151); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1150);
					separator();
					}
					}
					setState(1153); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1155);
				match(GIVING);
				}
				break;
			}
			setState(1174); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1160); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1159);
						separator();
						}
						}
						setState(1162); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1164);
					identifier_result();
					setState(1172);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,93,_ctx) ) {
					case 1:
						{
						setState(1166); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1165);
							separator();
							}
							}
							setState(1168); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(1170);
						match(ROUNDED);
						}
						break;
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1176); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,94,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(1185);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,96,_ctx) ) {
			case 1:
				{
				setState(1179); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1178);
					separator();
					}
					}
					setState(1181); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1183);
				on_size_variants();
				}
				break;
			}
			setState(1194);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,98,_ctx) ) {
			case 1:
				{
				setState(1188); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1187);
					separator();
					}
					}
					setState(1190); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1192);
				match(END_DIVIDE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Divide_statement_form2Context extends ParserRuleContext {
		public TerminalNode DIVIDE() { return getToken(cobolParser.DIVIDE, 0); }
		public List<Divide_numContext> divide_num() {
			return getRuleContexts(Divide_numContext.class);
		}
		public Divide_numContext divide_num(int i) {
			return getRuleContext(Divide_numContext.class,i);
		}
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public TerminalNode REMAINDER() { return getToken(cobolParser.REMAINDER, 0); }
		public RemaindContext remaind() {
			return getRuleContext(RemaindContext.class,0);
		}
		public TerminalNode INTO() { return getToken(cobolParser.INTO, 0); }
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public TerminalNode ROUNDED() { return getToken(cobolParser.ROUNDED, 0); }
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_DIVIDE() { return getToken(cobolParser.END_DIVIDE, 0); }
		public Divide_statement_form2Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_divide_statement_form2; }
	}

	public final Divide_statement_form2Context divide_statement_form2() throws RecognitionException {
		Divide_statement_form2Context _localctx = new Divide_statement_form2Context(_ctx, getState());
		enterRule(_localctx, 54, RULE_divide_statement_form2);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1196);
			match(DIVIDE);
			setState(1198); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1197);
				separator();
				}
				}
				setState(1200); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1202);
			divide_num();
			setState(1204); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1203);
				separator();
				}
				}
				setState(1206); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1208);
			_la = _input.LA(1);
			if ( !(_la==BY || _la==INTO) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(1222);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,103,_ctx) ) {
			case 1:
				{
				setState(1210); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1209);
					separator();
					}
					}
					setState(1212); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1214);
				divide_num();
				setState(1216); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1215);
					separator();
					}
					}
					setState(1218); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1220);
				match(GIVING);
				}
				break;
			}
			setState(1225); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1224);
				separator();
				}
				}
				setState(1227); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1229);
			identifier_result();
			setState(1237);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,106,_ctx) ) {
			case 1:
				{
				setState(1231); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1230);
					separator();
					}
					}
					setState(1233); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1235);
				match(ROUNDED);
				}
				break;
			}
			setState(1240); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1239);
				separator();
				}
				}
				setState(1242); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1244);
			match(REMAINDER);
			setState(1246); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1245);
				separator();
				}
				}
				setState(1248); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1250);
			remaind();
			setState(1258);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,110,_ctx) ) {
			case 1:
				{
				setState(1252); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1251);
					separator();
					}
					}
					setState(1254); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1256);
				on_size_variants();
				}
				break;
			}
			setState(1267);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,112,_ctx) ) {
			case 1:
				{
				setState(1261); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1260);
					separator();
					}
					}
					setState(1263); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1265);
				match(END_DIVIDE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RemaindContext extends ParserRuleContext {
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public RemaindContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_remaind; }
	}

	public final RemaindContext remaind() throws RecognitionException {
		RemaindContext _localctx = new RemaindContext(_ctx, getState());
		enterRule(_localctx, 56, RULE_remaind);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1269);
			identifier_result();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Divide_numContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Divide_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_divide_num; }
	}

	public final Divide_numContext divide_num() throws RecognitionException {
		Divide_numContext _localctx = new Divide_numContext(_ctx, getState());
		enterRule(_localctx, 58, RULE_divide_num);
		try {
			setState(1273);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(1271);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(1272);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statementContext extends ParserRuleContext {
		public Display_statement_form1Context display_statement_form1() {
			return getRuleContext(Display_statement_form1Context.class,0);
		}
		public Display_statement_form2Context display_statement_form2() {
			return getRuleContext(Display_statement_form2Context.class,0);
		}
		public Display_statement_form3Context display_statement_form3() {
			return getRuleContext(Display_statement_form3Context.class,0);
		}
		public Display_statement_form4Context display_statement_form4() {
			return getRuleContext(Display_statement_form4Context.class,0);
		}
		public Display_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement; }
	}

	public final Display_statementContext display_statement() throws RecognitionException {
		Display_statementContext _localctx = new Display_statementContext(_ctx, getState());
		enterRule(_localctx, 60, RULE_display_statement);
		try {
			setState(1279);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,114,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1275);
				display_statement_form1();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1276);
				display_statement_form2();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1277);
				display_statement_form3();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(1278);
				display_statement_form4();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statement_form1Context extends ParserRuleContext {
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public List<Src_itemContext> src_item() {
			return getRuleContexts(Src_itemContext.class);
		}
		public Src_itemContext src_item(int i) {
			return getRuleContext(Src_itemContext.class,i);
		}
		public TerminalNode END_DISPLAY() { return getToken(cobolParser.END_DISPLAY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Display_form1_clauseContext> display_form1_clause() {
			return getRuleContexts(Display_form1_clauseContext.class);
		}
		public Display_form1_clauseContext display_form1_clause(int i) {
			return getRuleContext(Display_form1_clauseContext.class,i);
		}
		public Display_statement_form1Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement_form1; }
	}

	public final Display_statement_form1Context display_statement_form1() throws RecognitionException {
		Display_statement_form1Context _localctx = new Display_statement_form1Context(_ctx, getState());
		enterRule(_localctx, 62, RULE_display_statement_form1);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1281);
			match(DISPLAY);
			setState(1300); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1283); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1282);
						separator();
						}
						}
						setState(1285); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1287);
					src_item();
					setState(1297);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,117,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(1289); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(1288);
								separator();
								}
								}
								setState(1291); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
							setState(1293);
							display_form1_clause();
							}
							} 
						}
						setState(1299);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,117,_ctx);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1302); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,118,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(1311);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,120,_ctx) ) {
			case 1:
				{
				setState(1305); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1304);
					separator();
					}
					}
					setState(1307); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1309);
				match(END_DISPLAY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statement_form2Context extends ParserRuleContext {
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public List<Src_itemContext> src_item() {
			return getRuleContexts(Src_itemContext.class);
		}
		public Src_itemContext src_item(int i) {
			return getRuleContext(Src_itemContext.class,i);
		}
		public TerminalNode END_DISPLAY() { return getToken(cobolParser.END_DISPLAY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Display_form2_clauseContext> display_form2_clause() {
			return getRuleContexts(Display_form2_clauseContext.class);
		}
		public Display_form2_clauseContext display_form2_clause(int i) {
			return getRuleContext(Display_form2_clauseContext.class,i);
		}
		public Display_statement_form2Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement_form2; }
	}

	public final Display_statement_form2Context display_statement_form2() throws RecognitionException {
		Display_statement_form2Context _localctx = new Display_statement_form2Context(_ctx, getState());
		enterRule(_localctx, 64, RULE_display_statement_form2);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1313);
			match(DISPLAY);
			setState(1332); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1315); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1314);
						separator();
						}
						}
						setState(1317); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1319);
					src_item();
					setState(1329);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,123,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(1321); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(1320);
								separator();
								}
								}
								setState(1323); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
							setState(1325);
							display_form2_clause();
							}
							} 
						}
						setState(1331);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,123,_ctx);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1334); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,124,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(1343);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,126,_ctx) ) {
			case 1:
				{
				setState(1337); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1336);
					separator();
					}
					}
					setState(1339); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1341);
				match(END_DISPLAY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statement_form3Context extends ParserRuleContext {
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode END_DISPLAY() { return getToken(cobolParser.END_DISPLAY, 0); }
		public Disp_f3_lineContext disp_f3_line() {
			return getRuleContext(Disp_f3_lineContext.class,0);
		}
		public Disp_f3_columnContext disp_f3_column() {
			return getRuleContext(Disp_f3_columnContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public Display_statement_form3Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement_form3; }
	}

	public final Display_statement_form3Context display_statement_form3() throws RecognitionException {
		Display_statement_form3Context _localctx = new Display_statement_form3Context(_ctx, getState());
		enterRule(_localctx, 66, RULE_display_statement_form3);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1345);
			match(DISPLAY);
			setState(1347); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1346);
				separator();
				}
				}
				setState(1349); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1351);
			qualified_data_item();
			setState(1378);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,134,_ctx) ) {
			case 1:
				{
				setState(1353); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1352);
					separator();
					}
					}
					setState(1355); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1363);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(1357);
					match(AT);
					setState(1359); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1358);
						separator();
						}
						}
						setState(1361); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1376);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case LINE:
					{
					setState(1365);
					disp_f3_line();
					setState(1373);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,132,_ctx) ) {
					case 1:
						{
						setState(1367); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1366);
							separator();
							}
							}
							setState(1369); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(1371);
						disp_f3_column();
						}
						break;
					}
					}
					break;
				case COLUMN:
					{
					setState(1375);
					disp_f3_column();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(1387);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,136,_ctx) ) {
			case 1:
				{
				setState(1381); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1380);
					separator();
					}
					}
					setState(1383); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1385);
				match(END_DISPLAY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statement_form4Context extends ParserRuleContext {
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public Src_itemContext src_item() {
			return getRuleContext(Src_itemContext.class,0);
		}
		public TerminalNode UPON() { return getToken(cobolParser.UPON, 0); }
		public Display_uponContext display_upon() {
			return getRuleContext(Display_uponContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_DISPLAY() { return getToken(cobolParser.END_DISPLAY, 0); }
		public Display_statement_form4Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement_form4; }
	}

	public final Display_statement_form4Context display_statement_form4() throws RecognitionException {
		Display_statement_form4Context _localctx = new Display_statement_form4Context(_ctx, getState());
		enterRule(_localctx, 68, RULE_display_statement_form4);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1389);
			match(DISPLAY);
			setState(1391); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1390);
				separator();
				}
				}
				setState(1393); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1395);
			src_item();
			setState(1397); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1396);
				separator();
				}
				}
				setState(1399); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1401);
			match(UPON);
			setState(1403); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1402);
				separator();
				}
				}
				setState(1405); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1407);
			display_upon();
			setState(1415);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,141,_ctx) ) {
			case 1:
				{
				setState(1409); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1408);
					separator();
					}
					}
					setState(1411); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1413);
				on_exception_variants();
				}
				break;
			}
			setState(1424);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,143,_ctx) ) {
			case 1:
				{
				setState(1418); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1417);
					separator();
					}
					}
					setState(1420); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1422);
				match(END_DISPLAY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Src_itemContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public ConstantContext constant() {
			return getRuleContext(ConstantContext.class,0);
		}
		public Src_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_src_item; }
	}

	public final Src_itemContext src_item() throws RecognitionException {
		Src_itemContext _localctx = new Src_itemContext(_ctx, getState());
		enterRule(_localctx, 70, RULE_src_item);
		try {
			setState(1428);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(1426);
				identifier();
				}
				break;
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(1427);
				constant();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_uponContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Display_uponContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_upon; }
	}

	public final Display_uponContext display_upon() throws RecognitionException {
		Display_uponContext _localctx = new Display_uponContext(_ctx, getState());
		enterRule(_localctx, 72, RULE_display_upon);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1430);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Disp_f3_lineContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Disp_f3_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_disp_f3_line; }
	}

	public final Disp_f3_lineContext disp_f3_line() throws RecognitionException {
		Disp_f3_lineContext _localctx = new Disp_f3_lineContext(_ctx, getState());
		enterRule(_localctx, 74, RULE_disp_f3_line);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1432);
			match(LINE);
			{
			setState(1434); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1433);
				separator();
				}
				}
				setState(1436); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1438);
			match(NUMBER);
			}
			setState(1441); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1440);
				separator();
				}
				}
				setState(1443); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1447);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				{
				setState(1445);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				{
				setState(1446);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Disp_f3_columnContext extends ParserRuleContext {
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Disp_f3_columnContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_disp_f3_column; }
	}

	public final Disp_f3_columnContext disp_f3_column() throws RecognitionException {
		Disp_f3_columnContext _localctx = new Disp_f3_columnContext(_ctx, getState());
		enterRule(_localctx, 76, RULE_disp_f3_column);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1449);
			match(COLUMN);
			{
			setState(1451); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1450);
				separator();
				}
				}
				setState(1453); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1455);
			match(NUMBER);
			}
			setState(1458); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1457);
				separator();
				}
				}
				setState(1460); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1464);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				{
				setState(1462);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				{
				setState(1463);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_form1_clauseContext extends ParserRuleContext {
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode UPON() { return getToken(cobolParser.UPON, 0); }
		public Out_destContext out_dest() {
			return getRuleContext(Out_destContext.class,0);
		}
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode ADVANCING() { return getToken(cobolParser.ADVANCING, 0); }
		public Display_form1_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_form1_clause; }
	}

	public final Display_form1_clauseContext display_form1_clause() throws RecognitionException {
		Display_form1_clauseContext _localctx = new Display_form1_clauseContext(_ctx, getState());
		enterRule(_localctx, 78, RULE_display_form1_clause);
		int _la;
		try {
			setState(1501);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,158,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1472);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1466);
					match(WITH);
					setState(1468); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1467);
						separator();
						}
						}
						setState(1470); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1474);
				match(CONVERSION);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1475);
				match(UPON);
				setState(1477); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1476);
					separator();
					}
					}
					setState(1479); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1481);
				out_dest();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1489);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1483);
					match(WITH);
					setState(1485); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1484);
						separator();
						}
						}
						setState(1487); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1491);
				match(NO);
				setState(1499);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,157,_ctx) ) {
				case 1:
					{
					setState(1493); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1492);
						separator();
						}
						}
						setState(1495); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1497);
					match(ADVANCING);
					}
					break;
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_form2_clauseContext extends ParserRuleContext {
		public Display_form1_clauseContext display_form1_clause() {
			return getRuleContext(Display_form1_clauseContext.class,0);
		}
		public At_line_numberContext at_line_number() {
			return getRuleContext(At_line_numberContext.class,0);
		}
		public At_column_numberContext at_column_number() {
			return getRuleContext(At_column_numberContext.class,0);
		}
		public TerminalNode ERASE() { return getToken(cobolParser.ERASE, 0); }
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public TerminalNode BELL() { return getToken(cobolParser.BELL, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode UNDERLINED() { return getToken(cobolParser.UNDERLINED, 0); }
		public TerminalNode BOLD() { return getToken(cobolParser.BOLD, 0); }
		public TerminalNode BLINKING() { return getToken(cobolParser.BLINKING, 0); }
		public TerminalNode REVERSED() { return getToken(cobolParser.REVERSED, 0); }
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode ADVANCING() { return getToken(cobolParser.ADVANCING, 0); }
		public Display_form2_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_form2_clause; }
	}

	public final Display_form2_clauseContext display_form2_clause() throws RecognitionException {
		Display_form2_clauseContext _localctx = new Display_form2_clauseContext(_ctx, getState());
		enterRule(_localctx, 80, RULE_display_form2_clause);
		int _la;
		try {
			setState(1587);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,176,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1503);
				display_form1_clause();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1504);
				at_line_number();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1505);
				at_column_number();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(1506);
				match(ERASE);
				setState(1530);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,164,_ctx) ) {
				case 1:
					{
					setState(1508); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1507);
						separator();
						}
						}
						setState(1510); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1518);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==TO) {
						{
						setState(1512);
						match(TO);
						setState(1514); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1513);
							separator();
							}
							}
							setState(1516); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						}
					}

					setState(1520);
					match(END);
					setState(1528);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,163,_ctx) ) {
					case 1:
						{
						setState(1522); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1521);
							separator();
							}
							}
							setState(1524); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(1526);
						match(OF);
						}
						break;
					}
					}
					break;
				}
				setState(1533); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1532);
					separator();
					}
					}
					setState(1535); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1537);
				_la = _input.LA(1);
				if ( !(_la==LINE || _la==SCREEN) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(1545);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1539);
					match(WITH);
					setState(1541); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1540);
						separator();
						}
						}
						setState(1543); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1547);
				match(BELL);
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(1548);
				match(UNDERLINED);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(1549);
				match(BOLD);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(1556);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1550);
					match(WITH);
					setState(1552); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1551);
						separator();
						}
						}
						setState(1554); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1558);
				match(BLINKING);
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(1559);
				match(REVERSED);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(1566);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1560);
					match(WITH);
					setState(1562); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1561);
						separator();
						}
						}
						setState(1564); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1568);
				match(CONVERSION);
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(1575);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1569);
					match(WITH);
					setState(1571); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1570);
						separator();
						}
						}
						setState(1573); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1577);
				match(NO);
				setState(1585);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,175,_ctx) ) {
				case 1:
					{
					setState(1579); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1578);
						separator();
						}
						}
						setState(1581); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1583);
					match(ADVANCING);
					}
					break;
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_line_numberContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public Number_valueContext number_value() {
			return getRuleContext(Number_valueContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_line_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_line_number; }
	}

	public final At_line_numberContext at_line_number() throws RecognitionException {
		At_line_numberContext _localctx = new At_line_numberContext(_ctx, getState());
		enterRule(_localctx, 82, RULE_at_line_number);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1595);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(1589);
				match(AT);
				setState(1591); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1590);
					separator();
					}
					}
					setState(1593); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(1597);
			match(LINE);
			setState(1605);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,180,_ctx) ) {
			case 1:
				{
				setState(1599); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1598);
					separator();
					}
					}
					setState(1601); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1603);
				match(NUMBER);
				}
				break;
			}
			setState(1608); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1607);
				separator();
				}
				}
				setState(1610); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1612);
			number_value();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_column_numberContext extends ParserRuleContext {
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public Number_valueContext number_value() {
			return getRuleContext(Number_valueContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_column_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_column_number; }
	}

	public final At_column_numberContext at_column_number() throws RecognitionException {
		At_column_numberContext _localctx = new At_column_numberContext(_ctx, getState());
		enterRule(_localctx, 84, RULE_at_column_number);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1620);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(1614);
				match(AT);
				setState(1616); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1615);
					separator();
					}
					}
					setState(1618); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(1622);
			match(COLUMN);
			setState(1630);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,185,_ctx) ) {
			case 1:
				{
				setState(1624); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1623);
					separator();
					}
					}
					setState(1626); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1628);
				match(NUMBER);
				}
				break;
			}
			setState(1633); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1632);
				separator();
				}
				}
				setState(1635); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1637);
			number_value();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Out_destContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Out_destContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_out_dest; }
	}

	public final Out_destContext out_dest() throws RecognitionException {
		Out_destContext _localctx = new Out_destContext(_ctx, getState());
		enterRule(_localctx, 86, RULE_out_dest);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1639);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Delete_statementContext extends ParserRuleContext {
		public TerminalNode DELETE() { return getToken(cobolParser.DELETE, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public On_key_variantsContext on_key_variants() {
			return getRuleContext(On_key_variantsContext.class,0);
		}
		public TerminalNode END_DELETE() { return getToken(cobolParser.END_DELETE, 0); }
		public Delete_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_delete_statement; }
	}

	public final Delete_statementContext delete_statement() throws RecognitionException {
		Delete_statementContext _localctx = new Delete_statementContext(_ctx, getState());
		enterRule(_localctx, 88, RULE_delete_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1641);
			match(DELETE);
			setState(1643); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1642);
				separator();
				}
				}
				setState(1645); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1647);
			file_name();
			setState(1655);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,189,_ctx) ) {
			case 1:
				{
				setState(1649); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1648);
					separator();
					}
					}
					setState(1651); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1653);
				match(RECORD);
				}
				break;
			}
			setState(1664);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,191,_ctx) ) {
			case 1:
				{
				setState(1658); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1657);
					separator();
					}
					}
					setState(1660); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1662);
				on_key_variants();
				}
				break;
			}
			setState(1673);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,193,_ctx) ) {
			case 1:
				{
				setState(1667); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1666);
					separator();
					}
					}
					setState(1669); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1671);
				match(END_DELETE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Continue_statementContext extends ParserRuleContext {
		public TerminalNode CONTINUE() { return getToken(cobolParser.CONTINUE, 0); }
		public Continue_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_continue_statement; }
	}

	public final Continue_statementContext continue_statement() throws RecognitionException {
		Continue_statementContext _localctx = new Continue_statementContext(_ctx, getState());
		enterRule(_localctx, 90, RULE_continue_statement);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1675);
			match(CONTINUE);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Compute_statementContext extends ParserRuleContext {
		public TerminalNode COMPUTE() { return getToken(cobolParser.COMPUTE, 0); }
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public TerminalNode EQUAL() { return getToken(cobolParser.EQUAL, 0); }
		public TerminalNode EQUAL_() { return getToken(cobolParser.EQUAL_, 0); }
		public List<Identifier_resultContext> identifier_result() {
			return getRuleContexts(Identifier_resultContext.class);
		}
		public Identifier_resultContext identifier_result(int i) {
			return getRuleContext(Identifier_resultContext.class,i);
		}
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_COMPUTE() { return getToken(cobolParser.END_COMPUTE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> ROUNDED() { return getTokens(cobolParser.ROUNDED); }
		public TerminalNode ROUNDED(int i) {
			return getToken(cobolParser.ROUNDED, i);
		}
		public Compute_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_compute_statement; }
	}

	public final Compute_statementContext compute_statement() throws RecognitionException {
		Compute_statementContext _localctx = new Compute_statementContext(_ctx, getState());
		enterRule(_localctx, 92, RULE_compute_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1677);
			match(COMPUTE);
			setState(1693); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1679); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1678);
						separator();
						}
						}
						setState(1681); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1683);
					identifier_result();
					setState(1691);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,196,_ctx) ) {
					case 1:
						{
						setState(1685); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1684);
							separator();
							}
							}
							setState(1687); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(1689);
						match(ROUNDED);
						}
						break;
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1695); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,197,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(1721);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,202,_ctx) ) {
			case 1:
				{
				setState(1698); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1697);
					separator();
					}
					}
					setState(1700); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1702);
				match(EQUAL);
				setState(1704); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1703);
					separator();
					}
					}
					setState(1706); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
				break;
			case 2:
				{
				setState(1711);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(1708);
					separator();
					}
					}
					setState(1713);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(1714);
				match(EQUAL_);
				setState(1718);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(1715);
					separator();
					}
					}
					setState(1720);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				break;
			}
			setState(1723);
			arithmetic_expression(0);
			setState(1731);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,204,_ctx) ) {
			case 1:
				{
				setState(1725); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1724);
					separator();
					}
					}
					setState(1727); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1729);
				on_size_variants();
				}
				break;
			}
			setState(1740);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,206,_ctx) ) {
			case 1:
				{
				setState(1734); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1733);
					separator();
					}
					}
					setState(1736); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1738);
				match(END_COMPUTE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Close_statementContext extends ParserRuleContext {
		public TerminalNode CLOSE() { return getToken(cobolParser.CLOSE, 0); }
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Close_paramsContext> close_params() {
			return getRuleContexts(Close_paramsContext.class);
		}
		public Close_paramsContext close_params(int i) {
			return getRuleContext(Close_paramsContext.class,i);
		}
		public Close_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_close_statement; }
	}

	public final Close_statementContext close_statement() throws RecognitionException {
		Close_statementContext _localctx = new Close_statementContext(_ctx, getState());
		enterRule(_localctx, 94, RULE_close_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1742);
			match(CLOSE);
			setState(1758); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1744); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1743);
						separator();
						}
						}
						setState(1746); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1748);
					file_name();
					setState(1756);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,209,_ctx) ) {
					case 1:
						{
						setState(1750); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1749);
							separator();
							}
							}
							setState(1752); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(1754);
						close_params();
						}
						break;
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1760); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,210,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Close_paramsContext extends ParserRuleContext {
		public TerminalNode REEL() { return getToken(cobolParser.REEL, 0); }
		public TerminalNode UNIT() { return getToken(cobolParser.UNIT, 0); }
		public TerminalNode REMOVAL() { return getToken(cobolParser.REMOVAL, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode REWIND() { return getToken(cobolParser.REWIND, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FOR() { return getToken(cobolParser.FOR, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public Close_paramsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_close_params; }
	}

	public final Close_paramsContext close_params() throws RecognitionException {
		Close_paramsContext _localctx = new Close_paramsContext(_ctx, getState());
		enterRule(_localctx, 96, RULE_close_params);
		int _la;
		try {
			setState(1816);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case REEL:
			case UNIT:
				enterOuterAlt(_localctx, 1);
				{
				setState(1762);
				_la = _input.LA(1);
				if ( !(_la==REEL || _la==UNIT) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(1795);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,218,_ctx) ) {
				case 1:
					{
					setState(1764); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1763);
						separator();
						}
						}
						setState(1766); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1793);
					_errHandler.sync(this);
					switch (_input.LA(1)) {
					case FOR:
					case REMOVAL:
						{
						setState(1774);
						_errHandler.sync(this);
						_la = _input.LA(1);
						if (_la==FOR) {
							{
							setState(1768);
							match(FOR);
							setState(1770); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(1769);
								separator();
								}
								}
								setState(1772); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
							}
						}

						setState(1776);
						match(REMOVAL);
						}
						break;
					case NO:
					case WITH:
						{
						setState(1783);
						_errHandler.sync(this);
						_la = _input.LA(1);
						if (_la==WITH) {
							{
							setState(1777);
							match(WITH);
							setState(1779); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(1778);
								separator();
								}
								}
								setState(1781); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
							}
						}

						setState(1785);
						match(NO);
						setState(1787); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1786);
							separator();
							}
							}
							setState(1789); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(1791);
						match(REWIND);
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					}
					break;
				}
				}
				break;
			case LOCK:
			case NO:
			case WITH:
				enterOuterAlt(_localctx, 2);
				{
				setState(1803);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1797);
					match(WITH);
					setState(1799); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1798);
						separator();
						}
						}
						setState(1801); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1814);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case NO:
					{
					setState(1805);
					match(NO);
					setState(1807); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1806);
						separator();
						}
						}
						setState(1809); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1811);
					match(REWIND);
					}
					break;
				case LOCK:
					{
					setState(1813);
					match(LOCK);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Cancel_statementContext extends ParserRuleContext {
		public TerminalNode CANCEL() { return getToken(cobolParser.CANCEL, 0); }
		public List<Prog_nameContext> prog_name() {
			return getRuleContexts(Prog_nameContext.class);
		}
		public Prog_nameContext prog_name(int i) {
			return getRuleContext(Prog_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Cancel_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_cancel_statement; }
	}

	public final Cancel_statementContext cancel_statement() throws RecognitionException {
		Cancel_statementContext _localctx = new Cancel_statementContext(_ctx, getState());
		enterRule(_localctx, 98, RULE_cancel_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1818);
			match(CANCEL);
			setState(1826); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1820); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1819);
						separator();
						}
						}
						setState(1822); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1824);
					prog_name();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1828); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,225,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Call_statementContext extends ParserRuleContext {
		public TerminalNode CALL() { return getToken(cobolParser.CALL, 0); }
		public Prog_nameContext prog_name() {
			return getRuleContext(Prog_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Call_usingContext call_using() {
			return getRuleContext(Call_usingContext.class,0);
		}
		public Call_givingContext call_giving() {
			return getRuleContext(Call_givingContext.class,0);
		}
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_CALL() { return getToken(cobolParser.END_CALL, 0); }
		public Call_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_call_statement; }
	}

	public final Call_statementContext call_statement() throws RecognitionException {
		Call_statementContext _localctx = new Call_statementContext(_ctx, getState());
		enterRule(_localctx, 100, RULE_call_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1830);
			match(CALL);
			setState(1832); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1831);
				separator();
				}
				}
				setState(1834); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1836);
			prog_name();
			setState(1844);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,228,_ctx) ) {
			case 1:
				{
				setState(1838); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1837);
					separator();
					}
					}
					setState(1840); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1842);
				call_using();
				}
				break;
			}
			setState(1853);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,230,_ctx) ) {
			case 1:
				{
				setState(1847); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1846);
					separator();
					}
					}
					setState(1849); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1851);
				call_giving();
				}
				break;
			}
			setState(1862);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,232,_ctx) ) {
			case 1:
				{
				setState(1856); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1855);
					separator();
					}
					}
					setState(1858); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1860);
				on_exception_variants();
				}
				break;
			}
			setState(1871);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,234,_ctx) ) {
			case 1:
				{
				setState(1865); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1864);
					separator();
					}
					}
					setState(1867); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(1869);
				match(END_CALL);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Call_givingContext extends ParserRuleContext {
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Call_givingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_call_giving; }
	}

	public final Call_givingContext call_giving() throws RecognitionException {
		Call_givingContext _localctx = new Call_givingContext(_ctx, getState());
		enterRule(_localctx, 102, RULE_call_giving);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1873);
			match(GIVING);
			setState(1875); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1874);
				separator();
				}
				}
				setState(1877); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(1879);
			identifier_result();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Call_usingContext extends ParserRuleContext {
		public TerminalNode USING() { return getToken(cobolParser.USING, 0); }
		public List<Using_argContext> using_arg() {
			return getRuleContexts(Using_argContext.class);
		}
		public Using_argContext using_arg(int i) {
			return getRuleContext(Using_argContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Call_usingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_call_using; }
	}

	public final Call_usingContext call_using() throws RecognitionException {
		Call_usingContext _localctx = new Call_usingContext(_ctx, getState());
		enterRule(_localctx, 104, RULE_call_using);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1881);
			match(USING);
			setState(1889); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1883); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1882);
						separator();
						}
						}
						setState(1885); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1887);
					using_arg();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1891); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,237,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Using_argContext extends ParserRuleContext {
		public TerminalNode OMITTED() { return getToken(cobolParser.OMITTED, 0); }
		public List<ArgumentContext> argument() {
			return getRuleContexts(ArgumentContext.class);
		}
		public ArgumentContext argument(int i) {
			return getRuleContext(ArgumentContext.class,i);
		}
		public Using_prefixContext using_prefix() {
			return getRuleContext(Using_prefixContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Using_argContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_using_arg; }
	}

	public final Using_argContext using_arg() throws RecognitionException {
		Using_argContext _localctx = new Using_argContext(_ctx, getState());
		enterRule(_localctx, 106, RULE_using_arg);
		int _la;
		try {
			int _alt;
			setState(1915);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case OMITTED:
				enterOuterAlt(_localctx, 1);
				{
				setState(1893);
				match(OMITTED);
				}
				break;
			case BY:
			case REFERENCE:
			case VALUE:
			case CONTENT:
			case DESCRIPTOR:
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(1900);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY || _la==REFERENCE || ((((_la - 375)) & ~0x3f) == 0 && ((1L << (_la - 375)) & ((1L << (VALUE - 375)) | (1L << (CONTENT - 375)) | (1L << (DESCRIPTOR - 375)))) != 0)) {
					{
					setState(1894);
					using_prefix();
					setState(1896); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1895);
						separator();
						}
						}
						setState(1898); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1902);
				argument();
				setState(1912);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,241,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1904); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1903);
							separator();
							}
							}
							setState(1906); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(1908);
						argument();
						}
						} 
					}
					setState(1914);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,241,_ctx);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Using_prefixContext extends ParserRuleContext {
		public TerminalNode REFERENCE() { return getToken(cobolParser.REFERENCE, 0); }
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CONTENT() { return getToken(cobolParser.CONTENT, 0); }
		public TerminalNode DESCRIPTOR() { return getToken(cobolParser.DESCRIPTOR, 0); }
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public Using_prefixContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_using_prefix; }
	}

	public final Using_prefixContext using_prefix() throws RecognitionException {
		Using_prefixContext _localctx = new Using_prefixContext(_ctx, getState());
		enterRule(_localctx, 108, RULE_using_prefix);
		int _la;
		try {
			setState(1953);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,251,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1923);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY) {
					{
					setState(1917);
					match(BY);
					setState(1919); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1918);
						separator();
						}
						}
						setState(1921); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1925);
				match(REFERENCE);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1932);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY) {
					{
					setState(1926);
					match(BY);
					setState(1928); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1927);
						separator();
						}
						}
						setState(1930); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1934);
				match(CONTENT);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1941);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY) {
					{
					setState(1935);
					match(BY);
					setState(1937); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1936);
						separator();
						}
						}
						setState(1939); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1943);
				match(DESCRIPTOR);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(1950);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY) {
					{
					setState(1944);
					match(BY);
					setState(1946); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1945);
						separator();
						}
						}
						setState(1948); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(1952);
				match(VALUE);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArgumentContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public ArgumentContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_argument; }
	}

	public final ArgumentContext argument() throws RecognitionException {
		ArgumentContext _localctx = new ArgumentContext(_ctx, getState());
		enterRule(_localctx, 110, RULE_argument);
		try {
			setState(1958);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(1955);
				qualified_data_item();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(1956);
				match(NUMERIC_LITERAL);
				}
				break;
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 3);
				{
				setState(1957);
				match(STRING_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Prog_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Prog_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prog_name; }
	}

	public final Prog_nameContext prog_name() throws RecognitionException {
		Prog_nameContext _localctx = new Prog_nameContext(_ctx, getState());
		enterRule(_localctx, 112, RULE_prog_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1960);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alter_statementContext extends ParserRuleContext {
		public TerminalNode ALTER() { return getToken(cobolParser.ALTER, 0); }
		public List<Alter_procContext> alter_proc() {
			return getRuleContexts(Alter_procContext.class);
		}
		public Alter_procContext alter_proc(int i) {
			return getRuleContext(Alter_procContext.class,i);
		}
		public List<TerminalNode> TO() { return getTokens(cobolParser.TO); }
		public TerminalNode TO(int i) {
			return getToken(cobolParser.TO, i);
		}
		public List<Alter_new_procContext> alter_new_proc() {
			return getRuleContexts(Alter_new_procContext.class);
		}
		public Alter_new_procContext alter_new_proc(int i) {
			return getRuleContext(Alter_new_procContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> PROCEED() { return getTokens(cobolParser.PROCEED); }
		public TerminalNode PROCEED(int i) {
			return getToken(cobolParser.PROCEED, i);
		}
		public Alter_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alter_statement; }
	}

	public final Alter_statementContext alter_statement() throws RecognitionException {
		Alter_statementContext _localctx = new Alter_statementContext(_ctx, getState());
		enterRule(_localctx, 114, RULE_alter_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1962);
			match(ALTER);
			setState(1996); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1964); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1963);
						separator();
						}
						}
						setState(1966); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1968);
					alter_proc();
					setState(1970); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1969);
						separator();
						}
						}
						setState(1972); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1974);
					match(TO);
					setState(1976); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1975);
						separator();
						}
						}
						setState(1978); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(1992);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==PROCEED) {
						{
						setState(1980);
						match(PROCEED);
						setState(1982); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1981);
							separator();
							}
							}
							setState(1984); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(1986);
						match(TO);
						setState(1988); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1987);
							separator();
							}
							}
							setState(1990); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						}
					}

					setState(1994);
					alter_new_proc();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1998); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,259,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alter_new_procContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Alter_new_procContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alter_new_proc; }
	}

	public final Alter_new_procContext alter_new_proc() throws RecognitionException {
		Alter_new_procContext _localctx = new Alter_new_procContext(_ctx, getState());
		enterRule(_localctx, 116, RULE_alter_new_proc);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2000);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alter_procContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Alter_procContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alter_proc; }
	}

	public final Alter_procContext alter_proc() throws RecognitionException {
		Alter_procContext _localctx = new Alter_procContext(_ctx, getState());
		enterRule(_localctx, 118, RULE_alter_proc);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2002);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Add_statementContext extends ParserRuleContext {
		public TerminalNode ADD() { return getToken(cobolParser.ADD, 0); }
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public List<Add_grpContext> add_grp() {
			return getRuleContexts(Add_grpContext.class);
		}
		public Add_grpContext add_grp(int i) {
			return getRuleContext(Add_grpContext.class,i);
		}
		public TerminalNode CORR() { return getToken(cobolParser.CORR, 0); }
		public TerminalNode CORRESPONDING() { return getToken(cobolParser.CORRESPONDING, 0); }
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_ADD() { return getToken(cobolParser.END_ADD, 0); }
		public List<Add_numContext> add_num() {
			return getRuleContexts(Add_numContext.class);
		}
		public Add_numContext add_num(int i) {
			return getRuleContext(Add_numContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Identifier_resultContext> identifier_result() {
			return getRuleContexts(Identifier_resultContext.class);
		}
		public Identifier_resultContext identifier_result(int i) {
			return getRuleContext(Identifier_resultContext.class,i);
		}
		public List<TerminalNode> ROUNDED() { return getTokens(cobolParser.ROUNDED); }
		public TerminalNode ROUNDED(int i) {
			return getToken(cobolParser.ROUNDED, i);
		}
		public Add_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_add_statement; }
	}

	public final Add_statementContext add_statement() throws RecognitionException {
		Add_statementContext _localctx = new Add_statementContext(_ctx, getState());
		enterRule(_localctx, 120, RULE_add_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2133);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,284,_ctx) ) {
			case 1:
				{
				setState(2004);
				match(ADD);
				setState(2012); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(2006); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2005);
							separator();
							}
							}
							setState(2008); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(2010);
						add_num();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(2014); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,261,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				setState(2017); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2016);
					separator();
					}
					}
					setState(2019); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2021);
				match(TO);
				setState(2037); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(2023); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2022);
							separator();
							}
							}
							setState(2025); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(2027);
						identifier_result();
						setState(2035);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,265,_ctx) ) {
						case 1:
							{
							setState(2029); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2028);
								separator();
								}
								}
								setState(2031); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
							setState(2033);
							match(ROUNDED);
							}
							break;
						}
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(2039); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,266,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				break;
			case 2:
				{
				setState(2041);
				match(ADD);
				setState(2051);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,268,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(2043); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2042);
							separator();
							}
							}
							setState(2045); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(2047);
						add_num();
						}
						} 
					}
					setState(2053);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,268,_ctx);
				}
				setState(2061);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,270,_ctx) ) {
				case 1:
					{
					setState(2055); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2054);
						separator();
						}
						}
						setState(2057); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2059);
					match(TO);
					}
					break;
				}
				setState(2070); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(2064); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2063);
							separator();
							}
							}
							setState(2066); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(2068);
						add_num();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(2072); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,272,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				setState(2075); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2074);
					separator();
					}
					}
					setState(2077); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2079);
				match(GIVING);
				setState(2095); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(2081); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2080);
							separator();
							}
							}
							setState(2083); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(2085);
						identifier_result();
						setState(2093);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,276,_ctx) ) {
						case 1:
							{
							setState(2087); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2086);
								separator();
								}
								}
								setState(2089); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
							setState(2091);
							match(ROUNDED);
							}
							break;
						}
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(2097); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,277,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				break;
			case 3:
				{
				setState(2099);
				match(ADD);
				setState(2101); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2100);
					separator();
					}
					}
					setState(2103); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2105);
				_la = _input.LA(1);
				if ( !(_la==CORRESPONDING || _la==CORR) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(2107); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2106);
					separator();
					}
					}
					setState(2109); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2111);
				add_grp();
				setState(2113); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2112);
					separator();
					}
					}
					setState(2115); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2117);
				match(TO);
				setState(2119); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2118);
					separator();
					}
					}
					setState(2121); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2123);
				add_grp();
				setState(2131);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,283,_ctx) ) {
				case 1:
					{
					setState(2125); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2124);
						separator();
						}
						}
						setState(2127); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2129);
					match(ROUNDED);
					}
					break;
				}
				}
				break;
			}
			setState(2142);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,286,_ctx) ) {
			case 1:
				{
				setState(2136); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2135);
					separator();
					}
					}
					setState(2138); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2140);
				on_size_variants();
				}
				break;
			}
			setState(2151);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,288,_ctx) ) {
			case 1:
				{
				setState(2145); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2144);
					separator();
					}
					}
					setState(2147); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2149);
				match(END_ADD);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Add_grpContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Add_grpContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_add_grp; }
	}

	public final Add_grpContext add_grp() throws RecognitionException {
		Add_grpContext _localctx = new Add_grpContext(_ctx, getState());
		enterRule(_localctx, 122, RULE_add_grp);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2153);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Add_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public Add_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_add_num; }
	}

	public final Add_numContext add_num() throws RecognitionException {
		Add_numContext _localctx = new Add_numContext(_ctx, getState());
		enterRule(_localctx, 124, RULE_add_num);
		try {
			setState(2157);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(2155);
				match(NUMERIC_LITERAL);
				}
				break;
			case FUNCTION:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(2156);
				identifier();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_statementContext extends ParserRuleContext {
		public Accept_form1Context accept_form1() {
			return getRuleContext(Accept_form1Context.class,0);
		}
		public Accept_form2Context accept_form2() {
			return getRuleContext(Accept_form2Context.class,0);
		}
		public Accept_form3Context accept_form3() {
			return getRuleContext(Accept_form3Context.class,0);
		}
		public Accept_form4Context accept_form4() {
			return getRuleContext(Accept_form4Context.class,0);
		}
		public Accept_form5Context accept_form5() {
			return getRuleContext(Accept_form5Context.class,0);
		}
		public Accept_form6Context accept_form6() {
			return getRuleContext(Accept_form6Context.class,0);
		}
		public Accept_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_statement; }
	}

	public final Accept_statementContext accept_statement() throws RecognitionException {
		Accept_statementContext _localctx = new Accept_statementContext(_ctx, getState());
		enterRule(_localctx, 126, RULE_accept_statement);
		try {
			setState(2165);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,290,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2159);
				accept_form1();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2160);
				accept_form2();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(2161);
				accept_form3();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(2162);
				accept_form4();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(2163);
				accept_form5();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(2164);
				accept_form6();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_exception_variantsContext extends ParserRuleContext {
		public List<On_exceptionContext> on_exception() {
			return getRuleContexts(On_exceptionContext.class);
		}
		public On_exceptionContext on_exception(int i) {
			return getRuleContext(On_exceptionContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_exception_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_exception_variants; }
	}

	public final On_exception_variantsContext on_exception_variants() throws RecognitionException {
		On_exception_variantsContext _localctx = new On_exception_variantsContext(_ctx, getState());
		enterRule(_localctx, 128, RULE_on_exception_variants);
		int _la;
		try {
			setState(2199);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case EXCEPTION:
			case ON:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(2167);
				on_exception();
				setState(2181);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,293,_ctx) ) {
				case 1:
					{
					setState(2169); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2168);
						separator();
						}
						}
						setState(2171); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2173);
					match(NOT);
					setState(2175); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2174);
						separator();
						}
						}
						setState(2177); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2179);
					on_exception();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(2183);
				match(NOT);
				setState(2185); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2184);
					separator();
					}
					}
					setState(2187); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2189);
				on_exception();
				setState(2197);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,296,_ctx) ) {
				case 1:
					{
					setState(2191); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2190);
						separator();
						}
						}
						setState(2193); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2195);
					on_exception();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_end_variantsContext extends ParserRuleContext {
		public List<At_endContext> at_end() {
			return getRuleContexts(At_endContext.class);
		}
		public At_endContext at_end(int i) {
			return getRuleContext(At_endContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_end_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_end_variants; }
	}

	public final At_end_variantsContext at_end_variants() throws RecognitionException {
		At_end_variantsContext _localctx = new At_end_variantsContext(_ctx, getState());
		enterRule(_localctx, 130, RULE_at_end_variants);
		int _la;
		try {
			setState(2233);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case AT:
			case END:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(2201);
				at_end();
				setState(2215);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,300,_ctx) ) {
				case 1:
					{
					setState(2203); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2202);
						separator();
						}
						}
						setState(2205); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2207);
					match(NOT);
					setState(2209); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2208);
						separator();
						}
						}
						setState(2211); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2213);
					at_end();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(2217);
				match(NOT);
				setState(2219); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2218);
					separator();
					}
					}
					setState(2221); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2223);
				at_end();
				setState(2231);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,303,_ctx) ) {
				case 1:
					{
					setState(2225); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2224);
						separator();
						}
						}
						setState(2227); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2229);
					at_end();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_size_variantsContext extends ParserRuleContext {
		public List<On_sizeContext> on_size() {
			return getRuleContexts(On_sizeContext.class);
		}
		public On_sizeContext on_size(int i) {
			return getRuleContext(On_sizeContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_size_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_size_variants; }
	}

	public final On_size_variantsContext on_size_variants() throws RecognitionException {
		On_size_variantsContext _localctx = new On_size_variantsContext(_ctx, getState());
		enterRule(_localctx, 132, RULE_on_size_variants);
		int _la;
		try {
			setState(2267);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ON:
			case SIZE:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(2235);
				on_size();
				setState(2249);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,307,_ctx) ) {
				case 1:
					{
					setState(2237); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2236);
						separator();
						}
						}
						setState(2239); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2241);
					match(NOT);
					setState(2243); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2242);
						separator();
						}
						}
						setState(2245); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2247);
					on_size();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(2251);
				match(NOT);
				setState(2253); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2252);
					separator();
					}
					}
					setState(2255); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2257);
				on_size();
				setState(2265);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,310,_ctx) ) {
				case 1:
					{
					setState(2259); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2258);
						separator();
						}
						}
						setState(2261); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2263);
					on_size();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_key_variantsContext extends ParserRuleContext {
		public List<On_keyContext> on_key() {
			return getRuleContexts(On_keyContext.class);
		}
		public On_keyContext on_key(int i) {
			return getRuleContext(On_keyContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_key_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_key_variants; }
	}

	public final On_key_variantsContext on_key_variants() throws RecognitionException {
		On_key_variantsContext _localctx = new On_key_variantsContext(_ctx, getState());
		enterRule(_localctx, 134, RULE_on_key_variants);
		int _la;
		try {
			setState(2301);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case INVALID:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(2269);
				on_key();
				setState(2283);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,314,_ctx) ) {
				case 1:
					{
					setState(2271); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2270);
						separator();
						}
						}
						setState(2273); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2275);
					match(NOT);
					setState(2277); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2276);
						separator();
						}
						}
						setState(2279); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2281);
					on_key();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(2285);
				match(NOT);
				setState(2287); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2286);
					separator();
					}
					}
					setState(2289); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2291);
				on_key();
				setState(2299);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,317,_ctx) ) {
				case 1:
					{
					setState(2293); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2292);
						separator();
						}
						}
						setState(2295); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2297);
					on_key();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form6Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public Accept6_itemContext accept6_item() {
			return getRuleContext(Accept6_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public Accept_form6Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form6; }
	}

	public final Accept_form6Context accept_form6() throws RecognitionException {
		Accept_form6Context _localctx = new Accept_form6Context(_ctx, getState());
		enterRule(_localctx, 136, RULE_accept_form6);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2303);
			match(ACCEPT);
			setState(2305); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2304);
				separator();
				}
				}
				setState(2307); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2309);
			dest_item();
			setState(2311); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2310);
				separator();
				}
				}
				setState(2313); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2321);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FROM) {
				{
				setState(2315);
				match(FROM);
				setState(2317); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2316);
					separator();
					}
					}
					setState(2319); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(2323);
			accept6_item();
			setState(2331);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,324,_ctx) ) {
			case 1:
				{
				setState(2325); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2324);
					separator();
					}
					}
					setState(2327); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2329);
				on_exception_variants();
				}
				break;
			}
			setState(2340);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,326,_ctx) ) {
			case 1:
				{
				setState(2334); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2333);
					separator();
					}
					}
					setState(2336); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2338);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept6_itemContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Accept6_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept6_item; }
	}

	public final Accept6_itemContext accept6_item() throws RecognitionException {
		Accept6_itemContext _localctx = new Accept6_itemContext(_ctx, getState());
		enterRule(_localctx, 138, RULE_accept6_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2342);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form1Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Input_sourceContext input_source() {
			return getRuleContext(Input_sourceContext.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public Accept_form1Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form1; }
	}

	public final Accept_form1Context accept_form1() throws RecognitionException {
		Accept_form1Context _localctx = new Accept_form1Context(_ctx, getState());
		enterRule(_localctx, 140, RULE_accept_form1);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2344);
			match(ACCEPT);
			setState(2346); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2345);
				separator();
				}
				}
				setState(2348); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2350);
			dest_item();
			setState(2364);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,330,_ctx) ) {
			case 1:
				{
				setState(2352); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2351);
					separator();
					}
					}
					setState(2354); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2356);
				match(FROM);
				setState(2358); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2357);
					separator();
					}
					}
					setState(2360); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2362);
				input_source();
				}
				break;
			}
			setState(2379);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,333,_ctx) ) {
			case 1:
				{
				setState(2367); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2366);
					separator();
					}
					}
					setState(2369); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2371);
				match(WITH);
				setState(2373); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2372);
					separator();
					}
					}
					setState(2375); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2377);
				match(CONVERSION);
				}
				break;
			}
			setState(2388);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,335,_ctx) ) {
			case 1:
				{
				setState(2382); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2381);
					separator();
					}
					}
					setState(2384); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2386);
				at_end_variants();
				}
				break;
			}
			setState(2397);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,337,_ctx) ) {
			case 1:
				{
				setState(2391); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2390);
					separator();
					}
					}
					setState(2393); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2395);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form2Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Date_timeContext date_time() {
			return getRuleContext(Date_timeContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Accept_form2Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form2; }
	}

	public final Accept_form2Context accept_form2() throws RecognitionException {
		Accept_form2Context _localctx = new Accept_form2Context(_ctx, getState());
		enterRule(_localctx, 142, RULE_accept_form2);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2399);
			match(ACCEPT);
			setState(2401); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2400);
				separator();
				}
				}
				setState(2403); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2405);
			dest_item();
			setState(2407); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2406);
				separator();
				}
				}
				setState(2409); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2411);
			match(FROM);
			setState(2413); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2412);
				separator();
				}
				}
				setState(2415); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2417);
			date_time();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form3Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Accept_form3_clauseContext> accept_form3_clause() {
			return getRuleContexts(Accept_form3_clauseContext.class);
		}
		public Accept_form3_clauseContext accept_form3_clause(int i) {
			return getRuleContext(Accept_form3_clauseContext.class,i);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public Accept_form3Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form3; }
	}

	public final Accept_form3Context accept_form3() throws RecognitionException {
		Accept_form3Context _localctx = new Accept_form3Context(_ctx, getState());
		enterRule(_localctx, 144, RULE_accept_form3);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2419);
			match(ACCEPT);
			setState(2421); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2420);
				separator();
				}
				}
				setState(2423); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2425);
			dest_item();
			setState(2433); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2427); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2426);
						separator();
						}
						}
						setState(2429); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2431);
					accept_form3_clause();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2435); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,343,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(2446);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,346,_ctx) ) {
			case 1:
				{
				setState(2438); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2437);
					separator();
					}
					}
					setState(2440); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2444);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,345,_ctx) ) {
				case 1:
					{
					setState(2442);
					on_exception_variants();
					}
					break;
				case 2:
					{
					setState(2443);
					at_end_variants();
					}
					break;
				}
				}
				break;
			}
			setState(2455);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,348,_ctx) ) {
			case 1:
				{
				setState(2449); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2448);
					separator();
					}
					}
					setState(2451); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2453);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form4Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Key_dest_itemContext key_dest_item() {
			return getRuleContext(Key_dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public List<Accept_form4_clauseContext> accept_form4_clause() {
			return getRuleContexts(Accept_form4_clauseContext.class);
		}
		public Accept_form4_clauseContext accept_form4_clause(int i) {
			return getRuleContext(Accept_form4_clauseContext.class,i);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public Accept_form4Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form4; }
	}

	public final Accept_form4Context accept_form4() throws RecognitionException {
		Accept_form4Context _localctx = new Accept_form4Context(_ctx, getState());
		enterRule(_localctx, 146, RULE_accept_form4);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2457);
			match(ACCEPT);
			setState(2459); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2458);
				separator();
				}
				}
				setState(2461); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2469);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONTROL) {
				{
				setState(2463);
				match(CONTROL);
				setState(2465); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2464);
					separator();
					}
					}
					setState(2467); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(2471);
			match(KEY);
			setState(2473); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2472);
				separator();
				}
				}
				setState(2475); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2483);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IN) {
				{
				setState(2477);
				match(IN);
				setState(2479); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2478);
					separator();
					}
					}
					setState(2481); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(2485);
			key_dest_item();
			setState(2493); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2487); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2486);
						separator();
						}
						}
						setState(2489); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2491);
					accept_form4_clause();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2495); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,356,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(2506);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,359,_ctx) ) {
			case 1:
				{
				setState(2498); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2497);
					separator();
					}
					}
					setState(2500); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2504);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,358,_ctx) ) {
				case 1:
					{
					setState(2502);
					on_exception_variants();
					}
					break;
				case 2:
					{
					setState(2503);
					at_end_variants();
					}
					break;
				}
				}
				break;
			}
			setState(2515);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,361,_ctx) ) {
			case 1:
				{
				setState(2509); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2508);
					separator();
					}
					}
					setState(2511); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2513);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form5Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Screen_nameContext screen_name() {
			return getRuleContext(Screen_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Accept_atContext accept_at() {
			return getRuleContext(Accept_atContext.class,0);
		}
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public Accept_form5Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form5; }
	}

	public final Accept_form5Context accept_form5() throws RecognitionException {
		Accept_form5Context _localctx = new Accept_form5Context(_ctx, getState());
		enterRule(_localctx, 148, RULE_accept_form5);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2517);
			match(ACCEPT);
			setState(2519); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2518);
				separator();
				}
				}
				setState(2521); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2523);
			screen_name();
			setState(2531);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,364,_ctx) ) {
			case 1:
				{
				setState(2525); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2524);
					separator();
					}
					}
					setState(2527); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2529);
				accept_at();
				}
				break;
			}
			setState(2540);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,366,_ctx) ) {
			case 1:
				{
				setState(2534); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2533);
					separator();
					}
					}
					setState(2536); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2538);
				on_exception_variants();
				}
				break;
			}
			setState(2549);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,368,_ctx) ) {
			case 1:
				{
				setState(2543); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2542);
					separator();
					}
					}
					setState(2545); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2547);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_atContext extends ParserRuleContext {
		public Accept_at_lineContext accept_at_line() {
			return getRuleContext(Accept_at_lineContext.class,0);
		}
		public Accept_at_columnContext accept_at_column() {
			return getRuleContext(Accept_at_columnContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Accept_atContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_at; }
	}

	public final Accept_atContext accept_at() throws RecognitionException {
		Accept_atContext _localctx = new Accept_atContext(_ctx, getState());
		enterRule(_localctx, 150, RULE_accept_at);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2557);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(2551);
				match(AT);
				setState(2553); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2552);
					separator();
					}
					}
					setState(2555); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(2579);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LINE:
				{
				setState(2559);
				accept_at_line();
				setState(2567);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,372,_ctx) ) {
				case 1:
					{
					setState(2561); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2560);
						separator();
						}
						}
						setState(2563); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2565);
					accept_at_column();
					}
					break;
				}
				}
				break;
			case COLUMN:
				{
				setState(2569);
				accept_at_column();
				setState(2577);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,374,_ctx) ) {
				case 1:
					{
					setState(2571); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2570);
						separator();
						}
						}
						setState(2573); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2575);
					accept_at_line();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_at_lineContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public Accept_at_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_at_line; }
	}

	public final Accept_at_lineContext accept_at_line() throws RecognitionException {
		Accept_at_lineContext _localctx = new Accept_at_lineContext(_ctx, getState());
		enterRule(_localctx, 152, RULE_accept_at_line);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2581);
			match(LINE);
			setState(2583); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2582);
				separator();
				}
				}
				setState(2585); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2593);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==NUMBER) {
				{
				setState(2587);
				match(NUMBER);
				setState(2589); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2588);
					separator();
					}
					}
					setState(2591); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(2597);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				{
				setState(2595);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				{
				setState(2596);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_at_columnContext extends ParserRuleContext {
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public Accept_at_columnContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_at_column; }
	}

	public final Accept_at_columnContext accept_at_column() throws RecognitionException {
		Accept_at_columnContext _localctx = new Accept_at_columnContext(_ctx, getState());
		enterRule(_localctx, 154, RULE_accept_at_column);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2599);
			match(COLUMN);
			setState(2601); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2600);
				separator();
				}
				}
				setState(2603); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2611);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==NUMBER) {
				{
				setState(2605);
				match(NUMBER);
				setState(2607); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2606);
					separator();
					}
					}
					setState(2609); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(2615);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				{
				setState(2613);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				{
				setState(2614);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form4_clauseContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public Number_valueContext number_value() {
			return getRuleContext(Number_valueContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode ERASE() { return getToken(cobolParser.ERASE, 0); }
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public TerminalNode BELL() { return getToken(cobolParser.BELL, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public Accept_form4_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form4_clause; }
	}

	public final Accept_form4_clauseContext accept_form4_clause() throws RecognitionException {
		Accept_form4_clauseContext _localctx = new Accept_form4_clauseContext(_ctx, getState());
		enterRule(_localctx, 156, RULE_accept_form4_clause);
		int _la;
		try {
			setState(2709);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,403,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2623);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==FROM) {
					{
					setState(2617);
					match(FROM);
					setState(2619); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2618);
						separator();
						}
						}
						setState(2621); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(2625);
				match(LINE);
				setState(2633);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,387,_ctx) ) {
				case 1:
					{
					setState(2627); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2626);
						separator();
						}
						}
						setState(2629); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2631);
					match(NUMBER);
					}
					break;
				}
				setState(2636); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2635);
					separator();
					}
					}
					setState(2638); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2640);
				number_value();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2648);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==FROM) {
					{
					setState(2642);
					match(FROM);
					setState(2644); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2643);
						separator();
						}
						}
						setState(2646); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(2650);
				match(COLUMN);
				setState(2658);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,392,_ctx) ) {
				case 1:
					{
					setState(2652); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2651);
						separator();
						}
						}
						setState(2654); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2656);
					match(NUMBER);
					}
					break;
				}
				setState(2661); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2660);
					separator();
					}
					}
					setState(2663); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2665);
				number_value();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(2667);
				match(ERASE);
				setState(2691);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,399,_ctx) ) {
				case 1:
					{
					setState(2669); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2668);
						separator();
						}
						}
						setState(2671); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2679);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==TO) {
						{
						setState(2673);
						match(TO);
						setState(2675); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2674);
							separator();
							}
							}
							setState(2677); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						}
					}

					setState(2681);
					match(END);
					setState(2689);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,398,_ctx) ) {
					case 1:
						{
						setState(2683); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2682);
							separator();
							}
							}
							setState(2685); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(2687);
						match(OF);
						}
						break;
					}
					}
					break;
				}
				setState(2694); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2693);
					separator();
					}
					}
					setState(2696); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2698);
				_la = _input.LA(1);
				if ( !(_la==LINE || _la==SCREEN) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(2706);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(2700);
					match(WITH);
					setState(2702); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2701);
						separator();
						}
						}
						setState(2704); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(2708);
				match(BELL);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form3_clauseContext extends ParserRuleContext {
		public Accept_form4_clauseContext accept_form4_clause() {
			return getRuleContext(Accept_form4_clauseContext.class,0);
		}
		public TerminalNode UNDERLINED() { return getToken(cobolParser.UNDERLINED, 0); }
		public TerminalNode BOLD() { return getToken(cobolParser.BOLD, 0); }
		public TerminalNode BLINKING() { return getToken(cobolParser.BLINKING, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode PROTECTED() { return getToken(cobolParser.PROTECTED, 0); }
		public Protected_valueContext protected_value() {
			return getRuleContext(Protected_valueContext.class,0);
		}
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public TerminalNode REVERSED() { return getToken(cobolParser.REVERSED, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode ECHO() { return getToken(cobolParser.ECHO, 0); }
		public TerminalNode DEFAULT() { return getToken(cobolParser.DEFAULT, 0); }
		public Def_valueContext def_value() {
			return getRuleContext(Def_valueContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Key_dest_itemContext key_dest_item() {
			return getRuleContext(Key_dest_itemContext.class,0);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public Accept_form3_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form3_clause; }
	}

	public final Accept_form3_clauseContext accept_form3_clause() throws RecognitionException {
		Accept_form3_clauseContext _localctx = new Accept_form3_clauseContext(_ctx, getState());
		enterRule(_localctx, 158, RULE_accept_form3_clause);
		int _la;
		try {
			setState(2800);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,421,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2711);
				accept_form4_clause();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2712);
				match(UNDERLINED);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(2713);
				match(BOLD);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(2720);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(2714);
					match(WITH);
					setState(2716); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2715);
						separator();
						}
						}
						setState(2718); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(2722);
				match(BLINKING);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(2723);
				match(PROTECTED);
				setState(2731);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,407,_ctx) ) {
				case 1:
					{
					setState(2725); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2724);
						separator();
						}
						}
						setState(2727); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2729);
					protected_value();
					}
					break;
				}
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(2739);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(2733);
					match(WITH);
					setState(2735); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2734);
						separator();
						}
						}
						setState(2737); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(2741);
				match(CONVERSION);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(2742);
				match(REVERSED);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(2749);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(2743);
					match(WITH);
					setState(2745); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2744);
						separator();
						}
						}
						setState(2747); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(2751);
				match(NO);
				setState(2753); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2752);
					separator();
					}
					}
					setState(2755); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2757);
				match(ECHO);
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(2759);
				match(DEFAULT);
				setState(2761); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2760);
					separator();
					}
					}
					setState(2763); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2771);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2765);
					match(IS);
					setState(2767); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2766);
						separator();
						}
						}
						setState(2769); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(2773);
				def_value();
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(2781);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CONTROL) {
					{
					setState(2775);
					match(CONTROL);
					setState(2777); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2776);
						separator();
						}
						}
						setState(2779); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(2783);
				match(KEY);
				setState(2791);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,419,_ctx) ) {
				case 1:
					{
					setState(2785); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2784);
						separator();
						}
						}
						setState(2787); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2789);
					match(IN);
					}
					break;
				}
				setState(2794); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2793);
					separator();
					}
					}
					setState(2796); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2798);
				key_dest_item();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Key_dest_itemContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Key_dest_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_key_dest_item; }
	}

	public final Key_dest_itemContext key_dest_item() throws RecognitionException {
		Key_dest_itemContext _localctx = new Key_dest_itemContext(_ctx, getState());
		enterRule(_localctx, 160, RULE_key_dest_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2802);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Def_valueContext extends ParserRuleContext {
		public Figurative_constantContext figurative_constant() {
			return getRuleContext(Figurative_constantContext.class,0);
		}
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode CURRENT() { return getToken(cobolParser.CURRENT, 0); }
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Def_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_def_value; }
	}

	public final Def_valueContext def_value() throws RecognitionException {
		Def_valueContext _localctx = new Def_valueContext(_ctx, getState());
		enterRule(_localctx, 162, RULE_def_value);
		int _la;
		try {
			setState(2817);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
				enterOuterAlt(_localctx, 1);
				{
				setState(2804);
				figurative_constant();
				}
				break;
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(2805);
				match(STRING_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 3);
				{
				setState(2806);
				qualified_data_item();
				}
				break;
			case CURRENT:
				enterOuterAlt(_localctx, 4);
				{
				setState(2807);
				match(CURRENT);
				setState(2815);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,423,_ctx) ) {
				case 1:
					{
					setState(2809); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2808);
						separator();
						}
						}
						setState(2811); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2813);
					match(VALUE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Protected_valueContext extends ParserRuleContext {
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public Prot_size_valueContext prot_size_value() {
			return getRuleContext(Prot_size_valueContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode AUTOTERMINATE() { return getToken(cobolParser.AUTOTERMINATE, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode EDITING() { return getToken(cobolParser.EDITING, 0); }
		public TerminalNode FILLER() { return getToken(cobolParser.FILLER, 0); }
		public Prot_fill_litContext prot_fill_lit() {
			return getRuleContext(Prot_fill_litContext.class,0);
		}
		public Protected_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_protected_value; }
	}

	public final Protected_valueContext protected_value() throws RecognitionException {
		Protected_valueContext _localctx = new Protected_valueContext(_ctx, getState());
		enterRule(_localctx, 164, RULE_protected_value);
		int _la;
		try {
			setState(2877);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,436,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2819);
				match(SIZE);
				setState(2821); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2820);
					separator();
					}
					}
					setState(2823); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2825);
				prot_size_value();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2833);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(2827);
					match(WITH);
					setState(2829); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2828);
						separator();
						}
						}
						setState(2831); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(2835);
				match(AUTOTERMINATE);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(2842);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(2836);
					match(WITH);
					setState(2838); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2837);
						separator();
						}
						}
						setState(2840); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(2844);
				match(NO);
				setState(2846); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2845);
					separator();
					}
					}
					setState(2848); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2850);
				match(BLANK);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(2858);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(2852);
					match(WITH);
					setState(2854); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2853);
						separator();
						}
						}
						setState(2856); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(2860);
				match(EDITING);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(2867);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(2861);
					match(WITH);
					setState(2863); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2862);
						separator();
						}
						}
						setState(2865); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(2869);
				match(FILLER);
				setState(2871); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2870);
					separator();
					}
					}
					setState(2873); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2875);
				prot_fill_lit();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Prot_fill_litContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Prot_fill_litContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prot_fill_lit; }
	}

	public final Prot_fill_litContext prot_fill_lit() throws RecognitionException {
		Prot_fill_litContext _localctx = new Prot_fill_litContext(_ctx, getState());
		enterRule(_localctx, 166, RULE_prot_fill_lit);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2879);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Prot_size_valueContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Prot_size_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prot_size_value; }
	}

	public final Prot_size_valueContext prot_size_value() throws RecognitionException {
		Prot_size_valueContext _localctx = new Prot_size_valueContext(_ctx, getState());
		enterRule(_localctx, 168, RULE_prot_size_value);
		try {
			setState(2883);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(2881);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(2882);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Number_valueContext extends ParserRuleContext {
		public Line_numContext line_num() {
			return getRuleContext(Line_numContext.class,0);
		}
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Number_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_number_value; }
	}

	public final Number_valueContext number_value() throws RecognitionException {
		Number_valueContext _localctx = new Number_valueContext(_ctx, getState());
		enterRule(_localctx, 170, RULE_number_value);
		int _la;
		try {
			setState(2914);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(2885);
				line_num();
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(2886);
				qualified_data_item();
				setState(2902);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,441,_ctx) ) {
				case 1:
					{
					setState(2888); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2887);
						separator();
						}
						}
						setState(2890); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2892);
					match(PLUS);
					setState(2900);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,440,_ctx) ) {
					case 1:
						{
						setState(2894); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2893);
							separator();
							}
							}
							setState(2896); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(2898);
						line_num();
						}
						break;
					}
					}
					break;
				}
				}
				break;
			case PLUS:
				enterOuterAlt(_localctx, 3);
				{
				setState(2904);
				match(PLUS);
				setState(2912);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,443,_ctx) ) {
				case 1:
					{
					setState(2906); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2905);
						separator();
						}
						}
						setState(2908); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2910);
					line_num();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Date_timeContext extends ParserRuleContext {
		public TerminalNode DATE() { return getToken(cobolParser.DATE, 0); }
		public TerminalNode YYYYMMDD() { return getToken(cobolParser.YYYYMMDD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode DAY() { return getToken(cobolParser.DAY, 0); }
		public TerminalNode YYYYDDD() { return getToken(cobolParser.YYYYDDD, 0); }
		public TerminalNode DAY_OF_WEEK() { return getToken(cobolParser.DAY_OF_WEEK, 0); }
		public TerminalNode TIME() { return getToken(cobolParser.TIME, 0); }
		public Date_timeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_date_time; }
	}

	public final Date_timeContext date_time() throws RecognitionException {
		Date_timeContext _localctx = new Date_timeContext(_ctx, getState());
		enterRule(_localctx, 172, RULE_date_time);
		int _la;
		try {
			setState(2938);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DATE:
				enterOuterAlt(_localctx, 1);
				{
				setState(2916);
				match(DATE);
				setState(2924);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,446,_ctx) ) {
				case 1:
					{
					setState(2918); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2917);
						separator();
						}
						}
						setState(2920); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2922);
					match(YYYYMMDD);
					}
					break;
				}
				}
				break;
			case DAY:
				enterOuterAlt(_localctx, 2);
				{
				setState(2926);
				match(DAY);
				setState(2934);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,448,_ctx) ) {
				case 1:
					{
					setState(2928); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2927);
						separator();
						}
						}
						setState(2930); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(2932);
					match(YYYYDDD);
					}
					break;
				}
				}
				break;
			case DAY_OF_WEEK:
				enterOuterAlt(_localctx, 3);
				{
				setState(2936);
				match(DAY_OF_WEEK);
				}
				break;
			case TIME:
				enterOuterAlt(_localctx, 4);
				{
				setState(2937);
				match(TIME);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Dest_itemContext extends ParserRuleContext {
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public Dest_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_dest_item; }
	}

	public final Dest_itemContext dest_item() throws RecognitionException {
		Dest_itemContext _localctx = new Dest_itemContext(_ctx, getState());
		enterRule(_localctx, 174, RULE_dest_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2940);
			identifier_result();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Input_sourceContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Input_sourceContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_input_source; }
	}

	public final Input_sourceContext input_source() throws RecognitionException {
		Input_sourceContext _localctx = new Input_sourceContext(_ctx, getState());
		enterRule(_localctx, 176, RULE_input_source);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2942);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_endContext extends ParserRuleContext {
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public SentenseContext sentense() {
			return getRuleContext(SentenseContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_endContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_end; }
	}

	public final At_endContext at_end() throws RecognitionException {
		At_endContext _localctx = new At_endContext(_ctx, getState());
		enterRule(_localctx, 178, RULE_at_end);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2950);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(2944);
				match(AT);
				setState(2946); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2945);
					separator();
					}
					}
					setState(2948); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(2952);
			match(END);
			setState(2960);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,453,_ctx) ) {
			case 1:
				{
				setState(2954); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2953);
					separator();
					}
					}
					setState(2956); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2958);
				sentense();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_exceptionContext extends ParserRuleContext {
		public TerminalNode EXCEPTION() { return getToken(cobolParser.EXCEPTION, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public SentenseContext sentense() {
			return getRuleContext(SentenseContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_exceptionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_exception; }
	}

	public final On_exceptionContext on_exception() throws RecognitionException {
		On_exceptionContext _localctx = new On_exceptionContext(_ctx, getState());
		enterRule(_localctx, 180, RULE_on_exception);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2968);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ON) {
				{
				setState(2962);
				match(ON);
				setState(2964); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2963);
					separator();
					}
					}
					setState(2966); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(2970);
			match(EXCEPTION);
			setState(2978);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,457,_ctx) ) {
			case 1:
				{
				setState(2972); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2971);
					separator();
					}
					}
					setState(2974); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(2976);
				sentense();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_sizeContext extends ParserRuleContext {
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public TerminalNode ERROR() { return getToken(cobolParser.ERROR, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public SentenseContext sentense() {
			return getRuleContext(SentenseContext.class,0);
		}
		public On_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_size; }
	}

	public final On_sizeContext on_size() throws RecognitionException {
		On_sizeContext _localctx = new On_sizeContext(_ctx, getState());
		enterRule(_localctx, 182, RULE_on_size);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2986);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ON) {
				{
				setState(2980);
				match(ON);
				setState(2982); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2981);
					separator();
					}
					}
					setState(2984); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(2988);
			match(SIZE);
			setState(2990); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2989);
				separator();
				}
				}
				setState(2992); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(2994);
			match(ERROR);
			setState(3002);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,462,_ctx) ) {
			case 1:
				{
				setState(2996); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2995);
					separator();
					}
					}
					setState(2998); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3000);
				sentense();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_keyContext extends ParserRuleContext {
		public TerminalNode INVALID() { return getToken(cobolParser.INVALID, 0); }
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public SentenseContext sentense() {
			return getRuleContext(SentenseContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_keyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_key; }
	}

	public final On_keyContext on_key() throws RecognitionException {
		On_keyContext _localctx = new On_keyContext(_ctx, getState());
		enterRule(_localctx, 184, RULE_on_key);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3004);
			match(INVALID);
			setState(3012);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,464,_ctx) ) {
			case 1:
				{
				setState(3006); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3005);
					separator();
					}
					}
					setState(3008); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3010);
				match(KEY);
				}
				break;
			}
			setState(3021);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,466,_ctx) ) {
			case 1:
				{
				setState(3015); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3014);
					separator();
					}
					}
					setState(3017); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3019);
				sentense();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_divisionContext extends ParserRuleContext {
		public TerminalNode DATA() { return getToken(cobolParser.DATA, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public File_sectionContext file_section() {
			return getRuleContext(File_sectionContext.class,0);
		}
		public Working_storage_sectionContext working_storage_section() {
			return getRuleContext(Working_storage_sectionContext.class,0);
		}
		public Linkage_sectionContext linkage_section() {
			return getRuleContext(Linkage_sectionContext.class,0);
		}
		public Report_sectionContext report_section() {
			return getRuleContext(Report_sectionContext.class,0);
		}
		public Screen_sectionContext screen_section() {
			return getRuleContext(Screen_sectionContext.class,0);
		}
		public Data_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_division; }
	}

	public final Data_divisionContext data_division() throws RecognitionException {
		Data_divisionContext _localctx = new Data_divisionContext(_ctx, getState());
		enterRule(_localctx, 186, RULE_data_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3023);
			match(DATA);
			setState(3025); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3024);
				separator();
				}
				}
				setState(3027); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3029);
			match(DIVISION);
			setState(3033);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(3030);
				separator();
				}
				}
				setState(3035);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3036);
			match(DOT_);
			setState(3040);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,469,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3037);
					separator();
					}
					} 
				}
				setState(3042);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,469,_ctx);
			}
			setState(3050);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE) {
				{
				setState(3043);
				file_section();
				setState(3047);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,470,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3044);
						separator();
						}
						} 
					}
					setState(3049);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,470,_ctx);
				}
				}
			}

			setState(3059);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WORKING_STORAGE) {
				{
				setState(3052);
				working_storage_section();
				setState(3056);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,472,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3053);
						separator();
						}
						} 
					}
					setState(3058);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,472,_ctx);
				}
				}
			}

			setState(3068);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==LINKAGE) {
				{
				setState(3061);
				linkage_section();
				setState(3065);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,474,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3062);
						separator();
						}
						} 
					}
					setState(3067);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,474,_ctx);
				}
				}
			}

			setState(3077);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==REPORT) {
				{
				setState(3070);
				report_section();
				setState(3074);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,476,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3071);
						separator();
						}
						} 
					}
					setState(3076);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,476,_ctx);
				}
				}
			}

			setState(3086);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SCREEN) {
				{
				setState(3079);
				screen_section();
				setState(3083);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,478,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3080);
						separator();
						}
						} 
					}
					setState(3085);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,478,_ctx);
				}
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_sectionContext extends ParserRuleContext {
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<File_description_entryContext> file_description_entry() {
			return getRuleContexts(File_description_entryContext.class);
		}
		public File_description_entryContext file_description_entry(int i) {
			return getRuleContext(File_description_entryContext.class,i);
		}
		public List<Report_description_entryContext> report_description_entry() {
			return getRuleContexts(Report_description_entryContext.class);
		}
		public Report_description_entryContext report_description_entry(int i) {
			return getRuleContext(Report_description_entryContext.class,i);
		}
		public List<Sort_merge_file_description_entryContext> sort_merge_file_description_entry() {
			return getRuleContexts(Sort_merge_file_description_entryContext.class);
		}
		public Sort_merge_file_description_entryContext sort_merge_file_description_entry(int i) {
			return getRuleContext(Sort_merge_file_description_entryContext.class,i);
		}
		public List<Record_description_entryContext> record_description_entry() {
			return getRuleContexts(Record_description_entryContext.class);
		}
		public Record_description_entryContext record_description_entry(int i) {
			return getRuleContext(Record_description_entryContext.class,i);
		}
		public File_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_section; }
	}

	public final File_sectionContext file_section() throws RecognitionException {
		File_sectionContext _localctx = new File_sectionContext(_ctx, getState());
		enterRule(_localctx, 188, RULE_file_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3088);
			match(FILE);
			setState(3090); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3089);
				separator();
				}
				}
				setState(3092); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3094);
			match(SECTION);
			setState(3098);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(3095);
				separator();
				}
				}
				setState(3100);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3101);
			match(DOT_);
			setState(3105);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,482,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3102);
					separator();
					}
					} 
				}
				setState(3107);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,482,_ctx);
			}
			setState(3145);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==FD || _la==RD || _la==SD) {
				{
				{
				setState(3135);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case FD:
					{
					setState(3108);
					file_description_entry();
					setState(3118);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,484,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(3112);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
								{
								{
								setState(3109);
								separator();
								}
								}
								setState(3114);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(3115);
							record_description_entry();
							}
							} 
						}
						setState(3120);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,484,_ctx);
					}
					}
					break;
				case RD:
					{
					setState(3121);
					report_description_entry();
					}
					break;
				case SD:
					{
					setState(3122);
					sort_merge_file_description_entry();
					setState(3132);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,486,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(3126);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
								{
								{
								setState(3123);
								separator();
								}
								}
								setState(3128);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(3129);
							record_description_entry();
							}
							} 
						}
						setState(3134);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,486,_ctx);
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(3140);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,488,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3137);
						separator();
						}
						} 
					}
					setState(3142);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,488,_ctx);
				}
				}
				}
				setState(3147);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Working_storage_sectionContext extends ParserRuleContext {
		public TerminalNode WORKING_STORAGE() { return getToken(cobolParser.WORKING_STORAGE, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Record_description_entryContext> record_description_entry() {
			return getRuleContexts(Record_description_entryContext.class);
		}
		public Record_description_entryContext record_description_entry(int i) {
			return getRuleContext(Record_description_entryContext.class,i);
		}
		public Working_storage_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_working_storage_section; }
	}

	public final Working_storage_sectionContext working_storage_section() throws RecognitionException {
		Working_storage_sectionContext _localctx = new Working_storage_sectionContext(_ctx, getState());
		enterRule(_localctx, 190, RULE_working_storage_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3148);
			match(WORKING_STORAGE);
			setState(3150); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3149);
				separator();
				}
				}
				setState(3152); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3154);
			match(SECTION);
			setState(3158);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(3155);
				separator();
				}
				}
				setState(3160);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3161);
			match(DOT_);
			setState(3165);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,492,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3162);
					separator();
					}
					} 
				}
				setState(3167);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,492,_ctx);
			}
			setState(3177);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==NUMERIC_LITERAL) {
				{
				{
				setState(3168);
				record_description_entry();
				setState(3172);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,493,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3169);
						separator();
						}
						} 
					}
					setState(3174);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,493,_ctx);
				}
				}
				}
				setState(3179);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Linkage_sectionContext extends ParserRuleContext {
		public TerminalNode LINKAGE() { return getToken(cobolParser.LINKAGE, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Record_description_entryContext> record_description_entry() {
			return getRuleContexts(Record_description_entryContext.class);
		}
		public Record_description_entryContext record_description_entry(int i) {
			return getRuleContext(Record_description_entryContext.class,i);
		}
		public Linkage_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_linkage_section; }
	}

	public final Linkage_sectionContext linkage_section() throws RecognitionException {
		Linkage_sectionContext _localctx = new Linkage_sectionContext(_ctx, getState());
		enterRule(_localctx, 192, RULE_linkage_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3180);
			match(LINKAGE);
			setState(3182); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3181);
				separator();
				}
				}
				setState(3184); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3186);
			match(SECTION);
			setState(3190);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(3187);
				separator();
				}
				}
				setState(3192);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3193);
			match(DOT_);
			setState(3197);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,497,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3194);
					separator();
					}
					} 
				}
				setState(3199);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,497,_ctx);
			}
			setState(3209);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==NUMERIC_LITERAL) {
				{
				{
				setState(3200);
				record_description_entry();
				setState(3204);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,498,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3201);
						separator();
						}
						} 
					}
					setState(3206);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,498,_ctx);
				}
				}
				}
				setState(3211);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_sectionContext extends ParserRuleContext {
		public TerminalNode REPORT() { return getToken(cobolParser.REPORT, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Report_description_entryContext> report_description_entry() {
			return getRuleContexts(Report_description_entryContext.class);
		}
		public Report_description_entryContext report_description_entry(int i) {
			return getRuleContext(Report_description_entryContext.class,i);
		}
		public List<Report_group_description_entryContext> report_group_description_entry() {
			return getRuleContexts(Report_group_description_entryContext.class);
		}
		public Report_group_description_entryContext report_group_description_entry(int i) {
			return getRuleContext(Report_group_description_entryContext.class,i);
		}
		public Report_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_section; }
	}

	public final Report_sectionContext report_section() throws RecognitionException {
		Report_sectionContext _localctx = new Report_sectionContext(_ctx, getState());
		enterRule(_localctx, 194, RULE_report_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3212);
			match(REPORT);
			setState(3214); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3213);
				separator();
				}
				}
				setState(3216); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3218);
			match(SECTION);
			setState(3222);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(3219);
				separator();
				}
				}
				setState(3224);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3225);
			match(DOT_);
			setState(3229);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,502,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3226);
					separator();
					}
					} 
				}
				setState(3231);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,502,_ctx);
			}
			setState(3253);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==RD) {
				{
				{
				setState(3232);
				report_description_entry();
				setState(3242);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,504,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3236);
						_errHandler.sync(this);
						_la = _input.LA(1);
						while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
							{
							{
							setState(3233);
							separator();
							}
							}
							setState(3238);
							_errHandler.sync(this);
							_la = _input.LA(1);
						}
						setState(3239);
						report_group_description_entry();
						}
						} 
					}
					setState(3244);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,504,_ctx);
				}
				setState(3248);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,505,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3245);
						separator();
						}
						} 
					}
					setState(3250);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,505,_ctx);
				}
				}
				}
				setState(3255);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_sectionContext extends ParserRuleContext {
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Screen_description_entryContext> screen_description_entry() {
			return getRuleContexts(Screen_description_entryContext.class);
		}
		public Screen_description_entryContext screen_description_entry(int i) {
			return getRuleContext(Screen_description_entryContext.class,i);
		}
		public Screen_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_section; }
	}

	public final Screen_sectionContext screen_section() throws RecognitionException {
		Screen_sectionContext _localctx = new Screen_sectionContext(_ctx, getState());
		enterRule(_localctx, 196, RULE_screen_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3256);
			match(SCREEN);
			setState(3258); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3257);
				separator();
				}
				}
				setState(3260); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3262);
			match(SECTION);
			setState(3266);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(3263);
				separator();
				}
				}
				setState(3268);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3269);
			match(DOT_);
			setState(3273);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,509,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3270);
					separator();
					}
					} 
				}
				setState(3275);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,509,_ctx);
			}
			setState(3285);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==NUMERIC_LITERAL) {
				{
				{
				setState(3276);
				screen_description_entry();
				setState(3280);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,510,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3277);
						separator();
						}
						} 
					}
					setState(3282);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,510,_ctx);
				}
				}
				}
				setState(3287);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_description_entryContext extends ParserRuleContext {
		public TerminalNode FD() { return getToken(cobolParser.FD, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Fd_clauseContext> fd_clause() {
			return getRuleContexts(Fd_clauseContext.class);
		}
		public Fd_clauseContext fd_clause(int i) {
			return getRuleContext(Fd_clauseContext.class,i);
		}
		public File_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_description_entry; }
	}

	public final File_description_entryContext file_description_entry() throws RecognitionException {
		File_description_entryContext _localctx = new File_description_entryContext(_ctx, getState());
		enterRule(_localctx, 198, RULE_file_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3288);
			match(FD);
			setState(3290); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3289);
				separator();
				}
				}
				setState(3292); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3294);
			file_name();
			setState(3298);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(3295);
				separator();
				}
				}
				setState(3300);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3310);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCESS) | (1L << ALTERNATE) | (1L << BLOCK) | (1L << CODE_SET))) != 0) || _la==DATA || _la==DYNAMIC || ((((_la - 159)) & ~0x3f) == 0 && ((1L << (_la - 159)) & ((1L << (EXTERNAL - 159)) | (1L << (FILE - 159)) | (1L << (GLOBAL - 159)) | (1L << (IS - 159)) | (1L << (LABEL - 159)) | (1L << (LINAGE - 159)))) != 0) || ((((_la - 281)) & ~0x3f) == 0 && ((1L << (_la - 281)) & ((1L << (RANDOM - 281)) | (1L << (RECORD - 281)) | (1L << (REPORT - 281)) | (1L << (REPORTS - 281)) | (1L << (SEQUENTIAL - 281)) | (1L << (STATUS - 281)))) != 0) || _la==VALUE) {
				{
				{
				setState(3301);
				fd_clause();
				setState(3305);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(3302);
					separator();
					}
					}
					setState(3307);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(3312);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3313);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sort_merge_file_description_entryContext extends ParserRuleContext {
		public TerminalNode SD() { return getToken(cobolParser.SD, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Sd_clauseContext> sd_clause() {
			return getRuleContexts(Sd_clauseContext.class);
		}
		public Sd_clauseContext sd_clause(int i) {
			return getRuleContext(Sd_clauseContext.class,i);
		}
		public Sort_merge_file_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sort_merge_file_description_entry; }
	}

	public final Sort_merge_file_description_entryContext sort_merge_file_description_entry() throws RecognitionException {
		Sort_merge_file_description_entryContext _localctx = new Sort_merge_file_description_entryContext(_ctx, getState());
		enterRule(_localctx, 200, RULE_sort_merge_file_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3315);
			match(SD);
			setState(3317); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3316);
				separator();
				}
				}
				setState(3319); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3321);
			file_name();
			setState(3325);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(3322);
				separator();
				}
				}
				setState(3327);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3337);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==DATA || _la==RECORD) {
				{
				{
				setState(3328);
				sd_clause();
				setState(3332);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(3329);
					separator();
					}
					}
					setState(3334);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(3339);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3340);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_description_entryContext extends ParserRuleContext {
		public TerminalNode RD() { return getToken(cobolParser.RD, 0); }
		public Report_nameContext report_name() {
			return getRuleContext(Report_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Rd_clauseContext> rd_clause() {
			return getRuleContexts(Rd_clauseContext.class);
		}
		public Rd_clauseContext rd_clause(int i) {
			return getRuleContext(Rd_clauseContext.class,i);
		}
		public Report_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_description_entry; }
	}

	public final Report_description_entryContext report_description_entry() throws RecognitionException {
		Report_description_entryContext _localctx = new Report_description_entryContext(_ctx, getState());
		enterRule(_localctx, 202, RULE_report_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3342);
			match(RD);
			setState(3344); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3343);
				separator();
				}
				}
				setState(3346); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3348);
			report_name();
			setState(3352);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(3349);
				separator();
				}
				}
				setState(3354);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3364);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 59)) & ~0x3f) == 0 && ((1L << (_la - 59)) & ((1L << (CODE - 59)) | (1L << (CONTROL - 59)) | (1L << (CONTROLS - 59)))) != 0) || _la==GLOBAL || _la==IS || _la==PAGE) {
				{
				{
				setState(3355);
				rd_clause();
				setState(3359);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(3356);
					separator();
					}
					}
					setState(3361);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(3366);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3367);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Fd_clauseContext extends ParserRuleContext {
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public Block_containsContext block_contains() {
			return getRuleContext(Block_containsContext.class,0);
		}
		public RecordContext record() {
			return getRuleContext(RecordContext.class,0);
		}
		public LabelContext label() {
			return getRuleContext(LabelContext.class,0);
		}
		public Value_of_idContext value_of_id() {
			return getRuleContext(Value_of_idContext.class,0);
		}
		public Data_recContext data_rec() {
			return getRuleContext(Data_recContext.class,0);
		}
		public LinageContext linage() {
			return getRuleContext(LinageContext.class,0);
		}
		public Report_isContext report_is() {
			return getRuleContext(Report_isContext.class,0);
		}
		public Code_setContext code_set() {
			return getRuleContext(Code_setContext.class,0);
		}
		public Access_modeContext access_mode() {
			return getRuleContext(Access_modeContext.class,0);
		}
		public Record_keyContext record_key() {
			return getRuleContext(Record_keyContext.class,0);
		}
		public File_statusContext file_status() {
			return getRuleContext(File_statusContext.class,0);
		}
		public Fd_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_fd_clause; }
	}

	public final Fd_clauseContext fd_clause() throws RecognitionException {
		Fd_clauseContext _localctx = new Fd_clauseContext(_ctx, getState());
		enterRule(_localctx, 204, RULE_fd_clause);
		int _la;
		try {
			setState(3398);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,528,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3375);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3369);
					match(IS);
					setState(3371); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3370);
						separator();
						}
						}
						setState(3373); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3377);
				match(EXTERNAL);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3384);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3378);
					match(IS);
					setState(3380); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3379);
						separator();
						}
						}
						setState(3382); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3386);
				match(GLOBAL);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3387);
				block_contains();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(3388);
				record();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(3389);
				label();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(3390);
				value_of_id();
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(3391);
				data_rec();
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(3392);
				linage();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(3393);
				report_is();
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(3394);
				code_set();
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(3395);
				access_mode();
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(3396);
				record_key();
				}
				break;
			case 13:
				enterOuterAlt(_localctx, 13);
				{
				setState(3397);
				file_status();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_description_entryContext extends ParserRuleContext {
		public List<Data_description_entryContext> data_description_entry() {
			return getRuleContexts(Data_description_entryContext.class);
		}
		public Data_description_entryContext data_description_entry(int i) {
			return getRuleContext(Data_description_entryContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Record_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_description_entry; }
	}

	public final Record_description_entryContext record_description_entry() throws RecognitionException {
		Record_description_entryContext _localctx = new Record_description_entryContext(_ctx, getState());
		enterRule(_localctx, 206, RULE_record_description_entry);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3400);
			data_description_entry();
			setState(3410);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,530,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3404);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(3401);
						separator();
						}
						}
						setState(3406);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(3407);
					data_description_entry();
					}
					} 
				}
				setState(3412);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,530,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_description_entryContext extends ParserRuleContext {
		public Level_numberContext level_number() {
			return getRuleContext(Level_numberContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode REDEFINES() { return getToken(cobolParser.REDEFINES, 0); }
		public Other_data_itemContext other_data_item() {
			return getRuleContext(Other_data_itemContext.class,0);
		}
		public List<Data_description_clauseContext> data_description_clause() {
			return getRuleContexts(Data_description_clauseContext.class);
		}
		public Data_description_clauseContext data_description_clause(int i) {
			return getRuleContext(Data_description_clauseContext.class,i);
		}
		public Data_nameContext data_name() {
			return getRuleContext(Data_nameContext.class,0);
		}
		public TerminalNode FILLER() { return getToken(cobolParser.FILLER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Data_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_description_entry; }
	}

	public final Data_description_entryContext data_description_entry() throws RecognitionException {
		Data_description_entryContext _localctx = new Data_description_entryContext(_ctx, getState());
		enterRule(_localctx, 208, RULE_data_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3413);
			level_number();
			setState(3423);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,533,_ctx) ) {
			case 1:
				{
				setState(3415); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3414);
					separator();
					}
					}
					setState(3417); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3421);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USER_DEFINED_WORD:
					{
					setState(3419);
					data_name();
					}
					break;
				case FILLER:
					{
					setState(3420);
					match(FILLER);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(3438);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,536,_ctx) ) {
			case 1:
				{
				setState(3426); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3425);
					separator();
					}
					}
					setState(3428); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3430);
				match(REDEFINES);
				setState(3432); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3431);
					separator();
					}
					}
					setState(3434); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3436);
				other_data_item();
				}
				break;
			}
			setState(3449);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(3441); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3440);
					separator();
					}
					}
					setState(3443); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3445);
				data_description_clause();
				}
				}
				setState(3451);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3452);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Level_numberContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Level_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_level_number; }
	}

	public final Level_numberContext level_number() throws RecognitionException {
		Level_numberContext _localctx = new Level_numberContext(_ctx, getState());
		enterRule(_localctx, 210, RULE_level_number);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3454);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_description_clauseContext extends ParserRuleContext {
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public PictureContext picture() {
			return getRuleContext(PictureContext.class,0);
		}
		public UsageContext usage() {
			return getRuleContext(UsageContext.class,0);
		}
		public Sign_isContext sign_is() {
			return getRuleContext(Sign_isContext.class,0);
		}
		public OccursContext occurs() {
			return getRuleContext(OccursContext.class,0);
		}
		public TerminalNode SYNCHRONIZED() { return getToken(cobolParser.SYNCHRONIZED, 0); }
		public TerminalNode SYNC() { return getToken(cobolParser.SYNC, 0); }
		public TerminalNode LEFT() { return getToken(cobolParser.LEFT, 0); }
		public TerminalNode RIGHT() { return getToken(cobolParser.RIGHT, 0); }
		public TerminalNode JUSTIFIED() { return getToken(cobolParser.JUSTIFIED, 0); }
		public TerminalNode JUST() { return getToken(cobolParser.JUST, 0); }
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode WHEN() { return getToken(cobolParser.WHEN, 0); }
		public Value_isContext value_is() {
			return getRuleContext(Value_isContext.class,0);
		}
		public RenamesContext renames() {
			return getRuleContext(RenamesContext.class,0);
		}
		public Data_description_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_description_clause; }
	}

	public final Data_description_clauseContext data_description_clause() throws RecognitionException {
		Data_description_clauseContext _localctx = new Data_description_clauseContext(_ctx, getState());
		enterRule(_localctx, 212, RULE_data_description_clause);
		int _la;
		try {
			setState(3516);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,550,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3462);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3456);
					match(IS);
					setState(3458); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3457);
						separator();
						}
						}
						setState(3460); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3464);
				match(EXTERNAL);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3471);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3465);
					match(IS);
					setState(3467); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3466);
						separator();
						}
						}
						setState(3469); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3473);
				match(GLOBAL);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3474);
				picture();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(3475);
				usage();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(3476);
				sign_is();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(3477);
				occurs();
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(3478);
				_la = _input.LA(1);
				if ( !(_la==SYNC || _la==SYNCHRONIZED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(3486);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,544,_ctx) ) {
				case 1:
					{
					setState(3480); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3479);
						separator();
						}
						}
						setState(3482); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(3484);
					_la = _input.LA(1);
					if ( !(_la==LEFT || _la==RIGHT) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(3488);
				_la = _input.LA(1);
				if ( !(_la==JUST || _la==JUSTIFIED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(3496);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,546,_ctx) ) {
				case 1:
					{
					setState(3490); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3489);
						separator();
						}
						}
						setState(3492); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(3494);
					match(RIGHT);
					}
					break;
				}
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(3498);
				match(BLANK);
				setState(3500); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3499);
					separator();
					}
					}
					setState(3502); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3510);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WHEN) {
					{
					setState(3504);
					match(WHEN);
					setState(3506); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3505);
						separator();
						}
						}
						setState(3508); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3512);
				match(ZERO);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(3514);
				value_is();
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(3515);
				renames();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RenamesContext extends ParserRuleContext {
		public TerminalNode RENAMES() { return getToken(cobolParser.RENAMES, 0); }
		public Rename_startContext rename_start() {
			return getRuleContext(Rename_startContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Rename_endContext rename_end() {
			return getRuleContext(Rename_endContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public RenamesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_renames; }
	}

	public final RenamesContext renames() throws RecognitionException {
		RenamesContext _localctx = new RenamesContext(_ctx, getState());
		enterRule(_localctx, 214, RULE_renames);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3518);
			match(RENAMES);
			setState(3520); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3519);
				separator();
				}
				}
				setState(3522); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3524);
			rename_start();
			setState(3538);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,554,_ctx) ) {
			case 1:
				{
				setState(3526); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3525);
					separator();
					}
					}
					setState(3528); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3530);
				_la = _input.LA(1);
				if ( !(_la==THROUGH || _la==THRU) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(3532); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3531);
					separator();
					}
					}
					setState(3534); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3536);
				rename_end();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rename_startContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Rename_startContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rename_start; }
	}

	public final Rename_startContext rename_start() throws RecognitionException {
		Rename_startContext _localctx = new Rename_startContext(_ctx, getState());
		enterRule(_localctx, 216, RULE_rename_start);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3540);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rename_endContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Rename_endContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rename_end; }
	}

	public final Rename_endContext rename_end() throws RecognitionException {
		Rename_endContext _localctx = new Rename_endContext(_ctx, getState());
		enterRule(_localctx, 218, RULE_rename_end);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3542);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_isContext extends ParserRuleContext {
		public List<Value_is_definitionContext> value_is_definition() {
			return getRuleContexts(Value_is_definitionContext.class);
		}
		public Value_is_definitionContext value_is_definition(int i) {
			return getRuleContext(Value_is_definitionContext.class,i);
		}
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public TerminalNode VALUES() { return getToken(cobolParser.VALUES, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public Value_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is; }
	}

	public final Value_isContext value_is() throws RecognitionException {
		Value_isContext _localctx = new Value_isContext(_ctx, getState());
		enterRule(_localctx, 220, RULE_value_is);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3564);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case VALUE:
				{
				setState(3544);
				match(VALUE);
				setState(3552);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,556,_ctx) ) {
				case 1:
					{
					setState(3546); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3545);
						separator();
						}
						}
						setState(3548); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(3550);
					match(IS);
					}
					break;
				}
				}
				break;
			case VALUES:
				{
				setState(3554);
				match(VALUES);
				setState(3562);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,558,_ctx) ) {
				case 1:
					{
					setState(3556); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3555);
						separator();
						}
						}
						setState(3558); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(3560);
					match(ARE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(3567); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3566);
				separator();
				}
				}
				setState(3569); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3571);
			value_is_definition();
			setState(3581);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,562,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3573); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3572);
						separator();
						}
						}
						setState(3575); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(3577);
					value_is_definition();
					}
					} 
				}
				setState(3583);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,562,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_definitionContext extends ParserRuleContext {
		public Value_is_definition_partContext value_is_definition_part() {
			return getRuleContext(Value_is_definition_partContext.class,0);
		}
		public Value_is_definition_thruContext value_is_definition_thru() {
			return getRuleContext(Value_is_definition_thruContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Value_is_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_definition; }
	}

	public final Value_is_definitionContext value_is_definition() throws RecognitionException {
		Value_is_definitionContext _localctx = new Value_is_definitionContext(_ctx, getState());
		enterRule(_localctx, 222, RULE_value_is_definition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3584);
			value_is_definition_part();
			setState(3592);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,564,_ctx) ) {
			case 1:
				{
				setState(3586); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3585);
					separator();
					}
					}
					setState(3588); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3590);
				value_is_definition_thru();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_definition_partContext extends ParserRuleContext {
		public Value_is_literalContext value_is_literal() {
			return getRuleContext(Value_is_literalContext.class,0);
		}
		public TerminalNode REFERENCE() { return getToken(cobolParser.REFERENCE, 0); }
		public Ref_data_nameContext ref_data_name() {
			return getRuleContext(Ref_data_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public External_nameContext external_name() {
			return getRuleContext(External_nameContext.class,0);
		}
		public Value_is_definition_partContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_definition_part; }
	}

	public final Value_is_definition_partContext value_is_definition_part() throws RecognitionException {
		Value_is_definition_partContext _localctx = new Value_is_definition_partContext(_ctx, getState());
		enterRule(_localctx, 224, RULE_value_is_definition_part);
		int _la;
		try {
			setState(3611);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(3594);
				value_is_literal();
				}
				break;
			case REFERENCE:
				enterOuterAlt(_localctx, 2);
				{
				setState(3595);
				match(REFERENCE);
				setState(3597); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3596);
					separator();
					}
					}
					setState(3599); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3601);
				ref_data_name();
				}
				break;
			case EXTERNAL:
				enterOuterAlt(_localctx, 3);
				{
				setState(3603);
				match(EXTERNAL);
				setState(3605); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3604);
					separator();
					}
					}
					setState(3607); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3609);
				external_name();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_definition_thruContext extends ParserRuleContext {
		public Value_is_definition_partContext value_is_definition_part() {
			return getRuleContext(Value_is_definition_partContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Value_is_definition_thruContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_definition_thru; }
	}

	public final Value_is_definition_thruContext value_is_definition_thru() throws RecognitionException {
		Value_is_definition_thruContext _localctx = new Value_is_definition_thruContext(_ctx, getState());
		enterRule(_localctx, 226, RULE_value_is_definition_thru);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3613);
			_la = _input.LA(1);
			if ( !(_la==THROUGH || _la==THRU) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(3615); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3614);
				separator();
				}
				}
				setState(3617); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3619);
			value_is_definition_part();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class External_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public External_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_external_name; }
	}

	public final External_nameContext external_name() throws RecognitionException {
		External_nameContext _localctx = new External_nameContext(_ctx, getState());
		enterRule(_localctx, 228, RULE_external_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3621);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Ref_data_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Ref_data_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_ref_data_name; }
	}

	public final Ref_data_nameContext ref_data_name() throws RecognitionException {
		Ref_data_nameContext _localctx = new Ref_data_nameContext(_ctx, getState());
		enterRule(_localctx, 230, RULE_ref_data_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3623);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Value_is_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_literal; }
	}

	public final Value_is_literalContext value_is_literal() throws RecognitionException {
		Value_is_literalContext _localctx = new Value_is_literalContext(_ctx, getState());
		enterRule(_localctx, 232, RULE_value_is_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3625);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class OccursContext extends ParserRuleContext {
		public TerminalNode OCCURS() { return getToken(cobolParser.OCCURS, 0); }
		public Times_definitionContext times_definition() {
			return getRuleContext(Times_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Key_isContext> key_is() {
			return getRuleContexts(Key_isContext.class);
		}
		public Key_isContext key_is(int i) {
			return getRuleContext(Key_isContext.class,i);
		}
		public Indexed_byContext indexed_by() {
			return getRuleContext(Indexed_byContext.class,0);
		}
		public OccursContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_occurs; }
	}

	public final OccursContext occurs() throws RecognitionException {
		OccursContext _localctx = new OccursContext(_ctx, getState());
		enterRule(_localctx, 234, RULE_occurs);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3627);
			match(OCCURS);
			setState(3629); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3628);
				separator();
				}
				}
				setState(3631); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3633);
			times_definition();
			setState(3643);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,571,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3635); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3634);
						separator();
						}
						}
						setState(3637); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(3639);
					key_is();
					}
					} 
				}
				setState(3645);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,571,_ctx);
			}
			setState(3653);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,573,_ctx) ) {
			case 1:
				{
				setState(3647); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3646);
					separator();
					}
					}
					setState(3649); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3651);
				indexed_by();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Indexed_byContext extends ParserRuleContext {
		public TerminalNode INDEXED() { return getToken(cobolParser.INDEXED, 0); }
		public List<Ind_nameContext> ind_name() {
			return getRuleContexts(Ind_nameContext.class);
		}
		public Ind_nameContext ind_name(int i) {
			return getRuleContext(Ind_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public Indexed_byContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_indexed_by; }
	}

	public final Indexed_byContext indexed_by() throws RecognitionException {
		Indexed_byContext _localctx = new Indexed_byContext(_ctx, getState());
		enterRule(_localctx, 236, RULE_indexed_by);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3655);
			match(INDEXED);
			setState(3657); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3656);
				separator();
				}
				}
				setState(3659); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3667);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==BY) {
				{
				setState(3661);
				match(BY);
				setState(3663); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3662);
					separator();
					}
					}
					setState(3665); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(3669);
			ind_name();
			setState(3679);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,578,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3671); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3670);
						separator();
						}
						}
						setState(3673); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(3675);
					ind_name();
					}
					} 
				}
				setState(3681);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,578,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Ind_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Ind_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_ind_name; }
	}

	public final Ind_nameContext ind_name() throws RecognitionException {
		Ind_nameContext _localctx = new Ind_nameContext(_ctx, getState());
		enterRule(_localctx, 238, RULE_ind_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3682);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Key_isContext extends ParserRuleContext {
		public List<Key_nameContext> key_name() {
			return getRuleContexts(Key_nameContext.class);
		}
		public Key_nameContext key_name(int i) {
			return getRuleContext(Key_nameContext.class,i);
		}
		public TerminalNode ASCENDING() { return getToken(cobolParser.ASCENDING, 0); }
		public TerminalNode DESCENDING() { return getToken(cobolParser.DESCENDING, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Key_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_key_is; }
	}

	public final Key_isContext key_is() throws RecognitionException {
		Key_isContext _localctx = new Key_isContext(_ctx, getState());
		enterRule(_localctx, 240, RULE_key_is);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3684);
			_la = _input.LA(1);
			if ( !(_la==ASCENDING || _la==DESCENDING) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(3686); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3685);
				separator();
				}
				}
				setState(3688); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(3696);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==KEY) {
				{
				setState(3690);
				match(KEY);
				setState(3692); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3691);
					separator();
					}
					}
					setState(3694); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(3704);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(3698);
				match(IS);
				setState(3700); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3699);
					separator();
					}
					}
					setState(3702); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(3706);
			key_name();
			setState(3716);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,585,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3708); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3707);
						separator();
						}
						}
						setState(3710); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(3712);
					key_name();
					}
					} 
				}
				setState(3718);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,585,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Key_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Key_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_key_name; }
	}

	public final Key_nameContext key_name() throws RecognitionException {
		Key_nameContext _localctx = new Key_nameContext(_ctx, getState());
		enterRule(_localctx, 242, RULE_key_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3719);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Times_definitionContext extends ParserRuleContext {
		public Table_sizeContext table_size() {
			return getRuleContext(Table_sizeContext.class,0);
		}
		public TerminalNode TIMES() { return getToken(cobolParser.TIMES, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Min_timesContext min_times() {
			return getRuleContext(Min_timesContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Max_timesContext max_times() {
			return getRuleContext(Max_timesContext.class,0);
		}
		public TerminalNode DEPENDING() { return getToken(cobolParser.DEPENDING, 0); }
		public Depending_itemContext depending_item() {
			return getRuleContext(Depending_itemContext.class,0);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Times_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_times_definition; }
	}

	public final Times_definitionContext times_definition() throws RecognitionException {
		Times_definitionContext _localctx = new Times_definitionContext(_ctx, getState());
		enterRule(_localctx, 244, RULE_times_definition);
		int _la;
		try {
			setState(3769);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,594,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3721);
				table_size();
				setState(3723); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3722);
					separator();
					}
					}
					setState(3725); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3727);
				match(TIMES);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3729);
				min_times();
				setState(3731); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3730);
					separator();
					}
					}
					setState(3733); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3735);
				match(TO);
				setState(3737); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3736);
					separator();
					}
					}
					setState(3739); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3741);
				max_times();
				setState(3743); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3742);
					separator();
					}
					}
					setState(3745); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3747);
				match(TIMES);
				setState(3749); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3748);
					separator();
					}
					}
					setState(3751); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3753);
				match(DEPENDING);
				setState(3755); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3754);
					separator();
					}
					}
					setState(3757); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3765);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==ON) {
					{
					setState(3759);
					match(ON);
					setState(3761); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3760);
						separator();
						}
						}
						setState(3763); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3767);
				depending_item();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Table_sizeContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Table_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_table_size; }
	}

	public final Table_sizeContext table_size() throws RecognitionException {
		Table_sizeContext _localctx = new Table_sizeContext(_ctx, getState());
		enterRule(_localctx, 246, RULE_table_size);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3771);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Min_timesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Min_timesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_min_times; }
	}

	public final Min_timesContext min_times() throws RecognitionException {
		Min_timesContext _localctx = new Min_timesContext(_ctx, getState());
		enterRule(_localctx, 248, RULE_min_times);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3773);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Max_timesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Max_timesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_max_times; }
	}

	public final Max_timesContext max_times() throws RecognitionException {
		Max_timesContext _localctx = new Max_timesContext(_ctx, getState());
		enterRule(_localctx, 250, RULE_max_times);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3775);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_group_description_entryContext extends ParserRuleContext {
		public List<Report_group_data_descriptionContext> report_group_data_description() {
			return getRuleContexts(Report_group_data_descriptionContext.class);
		}
		public Report_group_data_descriptionContext report_group_data_description(int i) {
			return getRuleContext(Report_group_data_descriptionContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Report_group_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_group_description_entry; }
	}

	public final Report_group_description_entryContext report_group_description_entry() throws RecognitionException {
		Report_group_description_entryContext _localctx = new Report_group_description_entryContext(_ctx, getState());
		enterRule(_localctx, 252, RULE_report_group_description_entry);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3777);
			report_group_data_description();
			setState(3787);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,596,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3781);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(3778);
						separator();
						}
						}
						setState(3783);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(3784);
					report_group_data_description();
					}
					} 
				}
				setState(3789);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,596,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_group_data_descriptionContext extends ParserRuleContext {
		public Level_numberContext level_number() {
			return getRuleContext(Level_numberContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public Data_nameContext data_name() {
			return getRuleContext(Data_nameContext.class,0);
		}
		public List<Report_group_data_description_clauseContext> report_group_data_description_clause() {
			return getRuleContexts(Report_group_data_description_clauseContext.class);
		}
		public Report_group_data_description_clauseContext report_group_data_description_clause(int i) {
			return getRuleContext(Report_group_data_description_clauseContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Report_group_data_descriptionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_group_data_description; }
	}

	public final Report_group_data_descriptionContext report_group_data_description() throws RecognitionException {
		Report_group_data_descriptionContext _localctx = new Report_group_data_descriptionContext(_ctx, getState());
		enterRule(_localctx, 254, RULE_report_group_data_description);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3790);
			level_number();
			setState(3798);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,598,_ctx) ) {
			case 1:
				{
				setState(3792); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3791);
					separator();
					}
					}
					setState(3794); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3796);
				data_name();
				}
				break;
			}
			setState(3809);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(3801); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3800);
					separator();
					}
					}
					setState(3803); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3805);
				report_group_data_description_clause();
				}
				}
				setState(3811);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3812);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_group_data_description_clauseContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public Line_num_definitionContext line_num_definition() {
			return getRuleContext(Line_num_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode GROUP() { return getToken(cobolParser.GROUP, 0); }
		public Next_group_definitionContext next_group_definition() {
			return getRuleContext(Next_group_definitionContext.class,0);
		}
		public TerminalNode TYPE() { return getToken(cobolParser.TYPE, 0); }
		public Type_is_definitionContext type_is_definition() {
			return getRuleContext(Type_is_definitionContext.class,0);
		}
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public TerminalNode USAGE() { return getToken(cobolParser.USAGE, 0); }
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode WHEN() { return getToken(cobolParser.WHEN, 0); }
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public Column_numberContext column_number() {
			return getRuleContext(Column_numberContext.class,0);
		}
		public TerminalNode INDICATE() { return getToken(cobolParser.INDICATE, 0); }
		public TerminalNode JUSTIFIED() { return getToken(cobolParser.JUSTIFIED, 0); }
		public TerminalNode JUST() { return getToken(cobolParser.JUST, 0); }
		public TerminalNode RIGHT() { return getToken(cobolParser.RIGHT, 0); }
		public PictureContext picture() {
			return getRuleContext(PictureContext.class,0);
		}
		public Sign_isContext sign_is() {
			return getRuleContext(Sign_isContext.class,0);
		}
		public TerminalNode SOURCE() { return getToken(cobolParser.SOURCE, 0); }
		public Source_nameContext source_name() {
			return getRuleContext(Source_nameContext.class,0);
		}
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public Value_is_literalContext value_is_literal() {
			return getRuleContext(Value_is_literalContext.class,0);
		}
		public SumContext sum() {
			return getRuleContext(SumContext.class,0);
		}
		public Report_group_data_description_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_group_data_description_clause; }
	}

	public final Report_group_data_description_clauseContext report_group_data_description_clause() throws RecognitionException {
		Report_group_data_description_clauseContext _localctx = new Report_group_data_description_clauseContext(_ctx, getState());
		enterRule(_localctx, 256, RULE_report_group_data_description_clause);
		int _la;
		try {
			setState(3988);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LINE:
				enterOuterAlt(_localctx, 1);
				{
				setState(3814);
				match(LINE);
				setState(3816); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3815);
					separator();
					}
					}
					setState(3818); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3826);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(3820);
					match(NUMBER);
					setState(3822); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3821);
						separator();
						}
						}
						setState(3824); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3834);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3828);
					match(IS);
					setState(3830); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3829);
						separator();
						}
						}
						setState(3832); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3836);
				line_num_definition();
				}
				break;
			case NEXT:
				enterOuterAlt(_localctx, 2);
				{
				setState(3838);
				match(NEXT);
				setState(3840); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3839);
					separator();
					}
					}
					setState(3842); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3844);
				match(GROUP);
				setState(3846); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3845);
					separator();
					}
					}
					setState(3848); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3856);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3850);
					match(IS);
					setState(3852); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3851);
						separator();
						}
						}
						setState(3854); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3858);
				next_group_definition();
				}
				break;
			case TYPE:
				enterOuterAlt(_localctx, 3);
				{
				setState(3860);
				match(TYPE);
				setState(3862); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3861);
					separator();
					}
					}
					setState(3864); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3872);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3866);
					match(IS);
					setState(3868); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3867);
						separator();
						}
						}
						setState(3870); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3874);
				type_is_definition();
				}
				break;
			case DISPLAY:
			case USAGE:
				enterOuterAlt(_localctx, 4);
				{
				setState(3890);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==USAGE) {
					{
					setState(3876);
					match(USAGE);
					setState(3878); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3877);
						separator();
						}
						}
						setState(3880); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(3888);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==IS) {
						{
						setState(3882);
						match(IS);
						setState(3884); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3883);
							separator();
							}
							}
							setState(3886); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						}
					}

					}
				}

				setState(3892);
				match(DISPLAY);
				}
				break;
			case BLANK:
				enterOuterAlt(_localctx, 5);
				{
				setState(3893);
				match(BLANK);
				setState(3895); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3894);
					separator();
					}
					}
					setState(3897); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3905);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WHEN) {
					{
					setState(3899);
					match(WHEN);
					setState(3901); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3900);
						separator();
						}
						}
						setState(3903); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3907);
				match(ZERO);
				}
				break;
			case COLUMN:
				enterOuterAlt(_localctx, 6);
				{
				setState(3909);
				match(COLUMN);
				setState(3911); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3910);
					separator();
					}
					}
					setState(3913); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3921);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(3915);
					match(NUMBER);
					setState(3917); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3916);
						separator();
						}
						}
						setState(3919); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3929);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3923);
					match(IS);
					setState(3925); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3924);
						separator();
						}
						}
						setState(3927); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3931);
				column_number();
				}
				break;
			case GROUP:
				enterOuterAlt(_localctx, 7);
				{
				setState(3933);
				match(GROUP);
				setState(3941);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,626,_ctx) ) {
				case 1:
					{
					setState(3935); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3934);
						separator();
						}
						}
						setState(3937); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(3939);
					match(INDICATE);
					}
					break;
				}
				}
				break;
			case JUST:
			case JUSTIFIED:
				enterOuterAlt(_localctx, 8);
				{
				setState(3943);
				_la = _input.LA(1);
				if ( !(_la==JUST || _la==JUSTIFIED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(3951);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,628,_ctx) ) {
				case 1:
					{
					setState(3945); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3944);
						separator();
						}
						}
						setState(3947); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(3949);
					match(RIGHT);
					}
					break;
				}
				}
				break;
			case PIC:
			case PICTURE:
				enterOuterAlt(_localctx, 9);
				{
				setState(3953);
				picture();
				}
				break;
			case LEADING:
			case SIGN:
			case TRAILING:
				enterOuterAlt(_localctx, 10);
				{
				setState(3954);
				sign_is();
				}
				break;
			case SOURCE:
				enterOuterAlt(_localctx, 11);
				{
				setState(3955);
				match(SOURCE);
				setState(3957); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3956);
					separator();
					}
					}
					setState(3959); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3967);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3961);
					match(IS);
					setState(3963); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3962);
						separator();
						}
						}
						setState(3965); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3969);
				source_name();
				}
				break;
			case VALUE:
				enterOuterAlt(_localctx, 12);
				{
				setState(3971);
				match(VALUE);
				setState(3973); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3972);
					separator();
					}
					}
					setState(3975); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(3983);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3977);
					match(IS);
					setState(3979); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3978);
						separator();
						}
						}
						setState(3981); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(3985);
				value_is_literal();
				}
				break;
			case SUM:
				enterOuterAlt(_localctx, 13);
				{
				setState(3987);
				sum();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sign_isContext extends ParserRuleContext {
		public TerminalNode LEADING() { return getToken(cobolParser.LEADING, 0); }
		public TerminalNode TRAILING() { return getToken(cobolParser.TRAILING, 0); }
		public TerminalNode SIGN() { return getToken(cobolParser.SIGN, 0); }
		public TerminalNode SEPARATE() { return getToken(cobolParser.SEPARATE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTER() { return getToken(cobolParser.CHARACTER, 0); }
		public Sign_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sign_is; }
	}

	public final Sign_isContext sign_is() throws RecognitionException {
		Sign_isContext _localctx = new Sign_isContext(_ctx, getState());
		enterRule(_localctx, 258, RULE_sign_is);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4005);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SIGN) {
				{
				setState(3990);
				match(SIGN);
				setState(3998);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,637,_ctx) ) {
				case 1:
					{
					setState(3992); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3991);
						separator();
						}
						}
						setState(3994); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(3996);
					match(IS);
					}
					break;
				}
				setState(4001); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4000);
					separator();
					}
					}
					setState(4003); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(4007);
			_la = _input.LA(1);
			if ( !(_la==LEADING || _la==TRAILING) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(4023);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,643,_ctx) ) {
			case 1:
				{
				setState(4009); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4008);
					separator();
					}
					}
					setState(4011); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4013);
				match(SEPARATE);
				setState(4021);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,642,_ctx) ) {
				case 1:
					{
					setState(4015); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4014);
						separator();
						}
						}
						setState(4017); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4019);
					match(CHARACTER);
					}
					break;
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SumContext extends ParserRuleContext {
		public List<TerminalNode> SUM() { return getTokens(cobolParser.SUM); }
		public TerminalNode SUM(int i) {
			return getToken(cobolParser.SUM, i);
		}
		public List<Sum_nameContext> sum_name() {
			return getRuleContexts(Sum_nameContext.class);
		}
		public Sum_nameContext sum_name(int i) {
			return getRuleContext(Sum_nameContext.class,i);
		}
		public TerminalNode RESET() { return getToken(cobolParser.RESET, 0); }
		public Control_foot_nameContext control_foot_name() {
			return getRuleContext(Control_foot_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> UPON() { return getTokens(cobolParser.UPON); }
		public TerminalNode UPON(int i) {
			return getToken(cobolParser.UPON, i);
		}
		public List<Detail_report_group_nameContext> detail_report_group_name() {
			return getRuleContexts(Detail_report_group_nameContext.class);
		}
		public Detail_report_group_nameContext detail_report_group_name(int i) {
			return getRuleContext(Detail_report_group_nameContext.class,i);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public SumContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sum; }
	}

	public final SumContext sum() throws RecognitionException {
		SumContext _localctx = new SumContext(_ctx, getState());
		enterRule(_localctx, 260, RULE_sum);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4065); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4025);
				match(SUM);
				setState(4027); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4026);
					separator();
					}
					}
					setState(4029); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4031);
				sum_name();
				setState(4041);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,646,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(4033); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4032);
							separator();
							}
							}
							setState(4035); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(4037);
						sum_name();
						}
						} 
					}
					setState(4043);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,646,_ctx);
				}
				setState(4051);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,648,_ctx) ) {
				case 1:
					{
					setState(4045); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4044);
						separator();
						}
						}
						setState(4047); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4049);
					match(UPON);
					}
					break;
				}
				setState(4062);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,650,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(4054); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4053);
							separator();
							}
							}
							setState(4056); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(4058);
						detail_report_group_name();
						}
						} 
					}
					setState(4064);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,650,_ctx);
				}
				}
				}
				setState(4067); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==SUM );
			setState(4091);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,656,_ctx) ) {
			case 1:
				{
				setState(4072);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(4069);
					separator();
					}
					}
					setState(4074);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(4075);
				match(RESET);
				setState(4077); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4076);
					separator();
					}
					}
					setState(4079); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4087);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==ON) {
					{
					setState(4081);
					match(ON);
					setState(4083); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4082);
						separator();
						}
						}
						setState(4085); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(4089);
				control_foot_name();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Control_foot_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode FINAL() { return getToken(cobolParser.FINAL, 0); }
		public Control_foot_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_control_foot_name; }
	}

	public final Control_foot_nameContext control_foot_name() throws RecognitionException {
		Control_foot_nameContext _localctx = new Control_foot_nameContext(_ctx, getState());
		enterRule(_localctx, 262, RULE_control_foot_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4093);
			_la = _input.LA(1);
			if ( !(_la==FINAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Detail_report_group_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Detail_report_group_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_detail_report_group_name; }
	}

	public final Detail_report_group_nameContext detail_report_group_name() throws RecognitionException {
		Detail_report_group_nameContext _localctx = new Detail_report_group_nameContext(_ctx, getState());
		enterRule(_localctx, 264, RULE_detail_report_group_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4095);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sum_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Sum_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sum_name; }
	}

	public final Sum_nameContext sum_name() throws RecognitionException {
		Sum_nameContext _localctx = new Sum_nameContext(_ctx, getState());
		enterRule(_localctx, 266, RULE_sum_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4097);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Source_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Source_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_source_name; }
	}

	public final Source_nameContext source_name() throws RecognitionException {
		Source_nameContext _localctx = new Source_nameContext(_ctx, getState());
		enterRule(_localctx, 268, RULE_source_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4099);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Column_numberContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Column_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_column_number; }
	}

	public final Column_numberContext column_number() throws RecognitionException {
		Column_numberContext _localctx = new Column_numberContext(_ctx, getState());
		enterRule(_localctx, 270, RULE_column_number);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4101);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Type_is_definitionContext extends ParserRuleContext {
		public TerminalNode REPORT() { return getToken(cobolParser.REPORT, 0); }
		public TerminalNode HEADING() { return getToken(cobolParser.HEADING, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode RH() { return getToken(cobolParser.RH, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public TerminalNode PH() { return getToken(cobolParser.PH, 0); }
		public Type_control_nameContext type_control_name() {
			return getRuleContext(Type_control_nameContext.class,0);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode CH() { return getToken(cobolParser.CH, 0); }
		public TerminalNode DETAIL() { return getToken(cobolParser.DETAIL, 0); }
		public TerminalNode DE() { return getToken(cobolParser.DE, 0); }
		public TerminalNode FOOTING() { return getToken(cobolParser.FOOTING, 0); }
		public TerminalNode CF() { return getToken(cobolParser.CF, 0); }
		public TerminalNode PF() { return getToken(cobolParser.PF, 0); }
		public TerminalNode RF() { return getToken(cobolParser.RF, 0); }
		public Type_is_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_type_is_definition; }
	}

	public final Type_is_definitionContext type_is_definition() throws RecognitionException {
		Type_is_definitionContext _localctx = new Type_is_definitionContext(_ctx, getState());
		enterRule(_localctx, 272, RULE_type_is_definition);
		int _la;
		try {
			setState(4177);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,667,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(4103);
				match(REPORT);
				setState(4105); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4104);
					separator();
					}
					}
					setState(4107); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4109);
				match(HEADING);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(4111);
				match(RH);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(4112);
				match(PAGE);
				setState(4114); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4113);
					separator();
					}
					}
					setState(4116); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4118);
				match(HEADING);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(4120);
				match(PH);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(4130);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case CONTROL:
					{
					setState(4121);
					match(CONTROL);
					setState(4123); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4122);
						separator();
						}
						}
						setState(4125); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4127);
					match(HEADING);
					}
					break;
				case CH:
					{
					setState(4129);
					match(CH);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4133); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4132);
					separator();
					}
					}
					setState(4135); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4137);
				type_control_name();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(4139);
				match(DETAIL);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(4140);
				match(DE);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(4150);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case CONTROL:
					{
					setState(4141);
					match(CONTROL);
					setState(4143); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4142);
						separator();
						}
						}
						setState(4145); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4147);
					match(FOOTING);
					}
					break;
				case CF:
					{
					setState(4149);
					match(CF);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4153); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4152);
					separator();
					}
					}
					setState(4155); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4157);
				type_control_name();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(4159);
				match(PAGE);
				setState(4161); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4160);
					separator();
					}
					}
					setState(4163); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4165);
				match(FOOTING);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(4167);
				match(PF);
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(4168);
				match(REPORT);
				setState(4170); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4169);
					separator();
					}
					}
					setState(4172); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4174);
				match(FOOTING);
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(4176);
				match(RF);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Type_control_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode FINAL() { return getToken(cobolParser.FINAL, 0); }
		public Type_control_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_type_control_name; }
	}

	public final Type_control_nameContext type_control_name() throws RecognitionException {
		Type_control_nameContext _localctx = new Type_control_nameContext(_ctx, getState());
		enterRule(_localctx, 274, RULE_type_control_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4179);
			_la = _input.LA(1);
			if ( !(_la==FINAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Next_group_definitionContext extends ParserRuleContext {
		public Line_numContext line_num() {
			return getRuleContext(Line_numContext.class,0);
		}
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public Next_group_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_next_group_definition; }
	}

	public final Next_group_definitionContext next_group_definition() throws RecognitionException {
		Next_group_definitionContext _localctx = new Next_group_definitionContext(_ctx, getState());
		enterRule(_localctx, 276, RULE_next_group_definition);
		int _la;
		try {
			setState(4198);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4181);
				line_num();
				}
				break;
			case PLUS:
				enterOuterAlt(_localctx, 2);
				{
				setState(4182);
				match(PLUS);
				setState(4184); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4183);
					separator();
					}
					}
					setState(4186); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4188);
				line_num();
				}
				break;
			case NEXT:
				enterOuterAlt(_localctx, 3);
				{
				setState(4190);
				match(NEXT);
				setState(4192); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4191);
					separator();
					}
					}
					setState(4194); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4196);
				match(PAGE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Line_num_definitionContext extends ParserRuleContext {
		public Line_numContext line_num() {
			return getRuleContext(Line_numContext.class,0);
		}
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public Line_num_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_line_num_definition; }
	}

	public final Line_num_definitionContext line_num_definition() throws RecognitionException {
		Line_num_definitionContext _localctx = new Line_num_definitionContext(_ctx, getState());
		enterRule(_localctx, 278, RULE_line_num_definition);
		int _la;
		try {
			setState(4232);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4200);
				line_num();
				setState(4222);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,675,_ctx) ) {
				case 1:
					{
					setState(4202); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4201);
						separator();
						}
						}
						setState(4204); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4212);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==ON) {
						{
						setState(4206);
						match(ON);
						setState(4208); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4207);
							separator();
							}
							}
							setState(4210); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						}
					}

					setState(4214);
					match(NEXT);
					setState(4216); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4215);
						separator();
						}
						}
						setState(4218); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4220);
					match(PAGE);
					}
					break;
				}
				}
				break;
			case PLUS:
				enterOuterAlt(_localctx, 2);
				{
				setState(4224);
				match(PLUS);
				setState(4226); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4225);
					separator();
					}
					}
					setState(4228); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4230);
				line_num();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Line_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Line_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_line_num; }
	}

	public final Line_numContext line_num() throws RecognitionException {
		Line_numContext _localctx = new Line_numContext(_ctx, getState());
		enterRule(_localctx, 280, RULE_line_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4234);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rd_clauseContext extends ParserRuleContext {
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CODE() { return getToken(cobolParser.CODE, 0); }
		public Report_codeContext report_code() {
			return getRuleContext(Report_codeContext.class,0);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode CONTROLS() { return getToken(cobolParser.CONTROLS, 0); }
		public List<Control_nameContext> control_name() {
			return getRuleContexts(Control_nameContext.class);
		}
		public Control_nameContext control_name(int i) {
			return getRuleContext(Control_nameContext.class,i);
		}
		public TerminalNode FINAL() { return getToken(cobolParser.FINAL, 0); }
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public Page_size_rdContext page_size_rd() {
			return getRuleContext(Page_size_rdContext.class,0);
		}
		public TerminalNode LIMIT() { return getToken(cobolParser.LIMIT, 0); }
		public TerminalNode LIMITS() { return getToken(cobolParser.LIMITS, 0); }
		public TerminalNode HEADING() { return getToken(cobolParser.HEADING, 0); }
		public Heading_lineContext heading_line() {
			return getRuleContext(Heading_lineContext.class,0);
		}
		public TerminalNode FIRST() { return getToken(cobolParser.FIRST, 0); }
		public List<TerminalNode> DETAIL() { return getTokens(cobolParser.DETAIL); }
		public TerminalNode DETAIL(int i) {
			return getToken(cobolParser.DETAIL, i);
		}
		public First_detail_lineContext first_detail_line() {
			return getRuleContext(First_detail_lineContext.class,0);
		}
		public TerminalNode LAST() { return getToken(cobolParser.LAST, 0); }
		public Last_detail_lineContext last_detail_line() {
			return getRuleContext(Last_detail_lineContext.class,0);
		}
		public TerminalNode FOOTING() { return getToken(cobolParser.FOOTING, 0); }
		public Footing_line_rdContext footing_line_rd() {
			return getRuleContext(Footing_line_rdContext.class,0);
		}
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode LINES() { return getToken(cobolParser.LINES, 0); }
		public Rd_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rd_clause; }
	}

	public final Rd_clauseContext rd_clause() throws RecognitionException {
		Rd_clauseContext _localctx = new Rd_clauseContext(_ctx, getState());
		enterRule(_localctx, 282, RULE_rd_clause);
		int _la;
		try {
			int _alt;
			setState(4426);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case GLOBAL:
			case IS:
				enterOuterAlt(_localctx, 1);
				{
				setState(4242);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4236);
					match(IS);
					setState(4238); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4237);
						separator();
						}
						}
						setState(4240); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(4244);
				match(GLOBAL);
				}
				break;
			case CODE:
				enterOuterAlt(_localctx, 2);
				{
				setState(4245);
				match(CODE);
				setState(4247); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4246);
					separator();
					}
					}
					setState(4249); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4251);
				report_code();
				}
				break;
			case CONTROL:
			case CONTROLS:
				enterOuterAlt(_localctx, 3);
				{
				setState(4273);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case CONTROL:
					{
					setState(4253);
					match(CONTROL);
					setState(4261);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,682,_ctx) ) {
					case 1:
						{
						setState(4255); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4254);
							separator();
							}
							}
							setState(4257); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(4259);
						match(IS);
						}
						break;
					}
					}
					break;
				case CONTROLS:
					{
					setState(4263);
					match(CONTROLS);
					setState(4271);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,684,_ctx) ) {
					case 1:
						{
						setState(4265); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4264);
							separator();
							}
							}
							setState(4267); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(4269);
						match(ARE);
						}
						break;
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4276); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4275);
					separator();
					}
					}
					setState(4278); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4306);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USER_DEFINED_WORD:
					{
					setState(4280);
					control_name();
					setState(4290);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,688,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(4284);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
								{
								{
								setState(4281);
								separator();
								}
								}
								setState(4286);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(4287);
							control_name();
							}
							} 
						}
						setState(4292);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,688,_ctx);
					}
					}
					break;
				case FINAL:
					{
					setState(4293);
					match(FINAL);
					setState(4303);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,690,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(4297);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
								{
								{
								setState(4294);
								separator();
								}
								}
								setState(4299);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(4300);
							control_name();
							}
							} 
						}
						setState(4305);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,690,_ctx);
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			case PAGE:
				enterOuterAlt(_localctx, 4);
				{
				setState(4308);
				match(PAGE);
				setState(4310); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4309);
					separator();
					}
					}
					setState(4312); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4342);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case LIMIT:
					{
					setState(4314);
					match(LIMIT);
					setState(4316); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4315);
						separator();
						}
						}
						setState(4318); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4326);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==IS) {
						{
						setState(4320);
						match(IS);
						setState(4322); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4321);
							separator();
							}
							}
							setState(4324); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						}
					}

					}
					break;
				case LIMITS:
					{
					setState(4328);
					match(LIMITS);
					setState(4330); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4329);
						separator();
						}
						}
						setState(4332); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4340);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==ARE) {
						{
						setState(4334);
						match(ARE);
						setState(4336); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4335);
							separator();
							}
							}
							setState(4338); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						}
					}

					}
					break;
				case NUMERIC_LITERAL:
					break;
				default:
					break;
				}
				setState(4344);
				page_size_rd();
				setState(4352);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,701,_ctx) ) {
				case 1:
					{
					setState(4346); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4345);
						separator();
						}
						}
						setState(4348); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4350);
					_la = _input.LA(1);
					if ( !(_la==LINE || _la==LINES) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				setState(4367);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,704,_ctx) ) {
				case 1:
					{
					setState(4355); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4354);
						separator();
						}
						}
						setState(4357); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4359);
					match(HEADING);
					setState(4361); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4360);
						separator();
						}
						}
						setState(4363); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4365);
					heading_line();
					}
					break;
				}
				setState(4388);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,708,_ctx) ) {
				case 1:
					{
					setState(4370); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4369);
						separator();
						}
						}
						setState(4372); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4374);
					match(FIRST);
					setState(4376); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4375);
						separator();
						}
						}
						setState(4378); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4380);
					match(DETAIL);
					setState(4382); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4381);
						separator();
						}
						}
						setState(4384); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4386);
					first_detail_line();
					}
					break;
				}
				setState(4409);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,712,_ctx) ) {
				case 1:
					{
					setState(4391); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4390);
						separator();
						}
						}
						setState(4393); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4395);
					match(LAST);
					setState(4397); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4396);
						separator();
						}
						}
						setState(4399); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4401);
					match(DETAIL);
					setState(4403); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4402);
						separator();
						}
						}
						setState(4405); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4407);
					last_detail_line();
					}
					break;
				}
				setState(4424);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,715,_ctx) ) {
				case 1:
					{
					setState(4412); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4411);
						separator();
						}
						}
						setState(4414); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4416);
					match(FOOTING);
					setState(4418); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4417);
						separator();
						}
						}
						setState(4420); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4422);
					footing_line_rd();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Footing_line_rdContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Footing_line_rdContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_footing_line_rd; }
	}

	public final Footing_line_rdContext footing_line_rd() throws RecognitionException {
		Footing_line_rdContext _localctx = new Footing_line_rdContext(_ctx, getState());
		enterRule(_localctx, 284, RULE_footing_line_rd);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4428);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Last_detail_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Last_detail_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_last_detail_line; }
	}

	public final Last_detail_lineContext last_detail_line() throws RecognitionException {
		Last_detail_lineContext _localctx = new Last_detail_lineContext(_ctx, getState());
		enterRule(_localctx, 286, RULE_last_detail_line);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4430);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class First_detail_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public First_detail_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_first_detail_line; }
	}

	public final First_detail_lineContext first_detail_line() throws RecognitionException {
		First_detail_lineContext _localctx = new First_detail_lineContext(_ctx, getState());
		enterRule(_localctx, 288, RULE_first_detail_line);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4432);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Heading_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Heading_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_heading_line; }
	}

	public final Heading_lineContext heading_line() throws RecognitionException {
		Heading_lineContext _localctx = new Heading_lineContext(_ctx, getState());
		enterRule(_localctx, 290, RULE_heading_line);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4434);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Page_size_rdContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Page_size_rdContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_page_size_rd; }
	}

	public final Page_size_rdContext page_size_rd() throws RecognitionException {
		Page_size_rdContext _localctx = new Page_size_rdContext(_ctx, getState());
		enterRule(_localctx, 292, RULE_page_size_rd);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4436);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Control_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Control_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_control_name; }
	}

	public final Control_nameContext control_name() throws RecognitionException {
		Control_nameContext _localctx = new Control_nameContext(_ctx, getState());
		enterRule(_localctx, 294, RULE_control_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4438);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_codeContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Report_codeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_code; }
	}

	public final Report_codeContext report_code() throws RecognitionException {
		Report_codeContext _localctx = new Report_codeContext(_ctx, getState());
		enterRule(_localctx, 296, RULE_report_code);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4440);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class UsageContext extends ParserRuleContext {
		public Usage_definitionContext usage_definition() {
			return getRuleContext(Usage_definitionContext.class,0);
		}
		public TerminalNode USAGE() { return getToken(cobolParser.USAGE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public UsageContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_usage; }
	}

	public final UsageContext usage() throws RecognitionException {
		UsageContext _localctx = new UsageContext(_ctx, getState());
		enterRule(_localctx, 298, RULE_usage);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4457);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==USAGE) {
				{
				setState(4442);
				match(USAGE);
				setState(4450);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,718,_ctx) ) {
				case 1:
					{
					setState(4444); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4443);
						separator();
						}
						}
						setState(4446); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4448);
					match(IS);
					}
					break;
				}
				setState(4453); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4452);
					separator();
					}
					}
					setState(4455); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(4459);
			usage_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Usage_definitionContext extends ParserRuleContext {
		public TerminalNode BINARY() { return getToken(cobolParser.BINARY, 0); }
		public TerminalNode BINARY_CHAR() { return getToken(cobolParser.BINARY_CHAR, 0); }
		public TerminalNode SIGNED() { return getToken(cobolParser.SIGNED, 0); }
		public TerminalNode UNSIGNED() { return getToken(cobolParser.UNSIGNED, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode BINARY_SHORT() { return getToken(cobolParser.BINARY_SHORT, 0); }
		public TerminalNode BINARY_LONG() { return getToken(cobolParser.BINARY_LONG, 0); }
		public TerminalNode BINARY_DOUBLE() { return getToken(cobolParser.BINARY_DOUBLE, 0); }
		public TerminalNode COMPUTATIONAL() { return getToken(cobolParser.COMPUTATIONAL, 0); }
		public TerminalNode COMPUTATIONAL_1() { return getToken(cobolParser.COMPUTATIONAL_1, 0); }
		public TerminalNode COMPUTATIONAL_2() { return getToken(cobolParser.COMPUTATIONAL_2, 0); }
		public TerminalNode COMPUTATIONAL_3() { return getToken(cobolParser.COMPUTATIONAL_3, 0); }
		public TerminalNode COMPUTATIONAL_4() { return getToken(cobolParser.COMPUTATIONAL_4, 0); }
		public TerminalNode COMPUTATIONAL_5() { return getToken(cobolParser.COMPUTATIONAL_5, 0); }
		public TerminalNode COMPUTATIONAL_X() { return getToken(cobolParser.COMPUTATIONAL_X, 0); }
		public TerminalNode COMP() { return getToken(cobolParser.COMP, 0); }
		public TerminalNode COMP_1() { return getToken(cobolParser.COMP_1, 0); }
		public TerminalNode COMP_2() { return getToken(cobolParser.COMP_2, 0); }
		public TerminalNode COMP_3() { return getToken(cobolParser.COMP_3, 0); }
		public TerminalNode COMP_4() { return getToken(cobolParser.COMP_4, 0); }
		public TerminalNode COMP_5() { return getToken(cobolParser.COMP_5, 0); }
		public TerminalNode COMP_X() { return getToken(cobolParser.COMP_X, 0); }
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public TerminalNode FLOAT_SHORT() { return getToken(cobolParser.FLOAT_SHORT, 0); }
		public TerminalNode FLOAT_LONG() { return getToken(cobolParser.FLOAT_LONG, 0); }
		public TerminalNode FLOAT_EXTENDED() { return getToken(cobolParser.FLOAT_EXTENDED, 0); }
		public TerminalNode INDEX() { return getToken(cobolParser.INDEX, 0); }
		public TerminalNode PACKED_DECIMAL() { return getToken(cobolParser.PACKED_DECIMAL, 0); }
		public TerminalNode POINTER() { return getToken(cobolParser.POINTER, 0); }
		public TerminalNode POINTER_64() { return getToken(cobolParser.POINTER_64, 0); }
		public Usage_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_usage_definition; }
	}

	public final Usage_definitionContext usage_definition() throws RecognitionException {
		Usage_definitionContext _localctx = new Usage_definitionContext(_ctx, getState());
		enterRule(_localctx, 300, RULE_usage_definition);
		int _la;
		try {
			setState(4524);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case BINARY:
				enterOuterAlt(_localctx, 1);
				{
				setState(4461);
				match(BINARY);
				}
				break;
			case BINARY_CHAR:
				enterOuterAlt(_localctx, 2);
				{
				setState(4462);
				match(BINARY_CHAR);
				setState(4470);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,722,_ctx) ) {
				case 1:
					{
					setState(4464); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4463);
						separator();
						}
						}
						setState(4466); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4468);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case BINARY_SHORT:
				enterOuterAlt(_localctx, 3);
				{
				setState(4472);
				match(BINARY_SHORT);
				setState(4480);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,724,_ctx) ) {
				case 1:
					{
					setState(4474); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4473);
						separator();
						}
						}
						setState(4476); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4478);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case BINARY_LONG:
				enterOuterAlt(_localctx, 4);
				{
				setState(4482);
				match(BINARY_LONG);
				setState(4490);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,726,_ctx) ) {
				case 1:
					{
					setState(4484); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4483);
						separator();
						}
						}
						setState(4486); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4488);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case BINARY_DOUBLE:
				enterOuterAlt(_localctx, 5);
				{
				setState(4492);
				match(BINARY_DOUBLE);
				setState(4500);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,728,_ctx) ) {
				case 1:
					{
					setState(4494); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4493);
						separator();
						}
						}
						setState(4496); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4498);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case COMPUTATIONAL:
				enterOuterAlt(_localctx, 6);
				{
				setState(4502);
				match(COMPUTATIONAL);
				}
				break;
			case COMPUTATIONAL_1:
				enterOuterAlt(_localctx, 7);
				{
				setState(4503);
				match(COMPUTATIONAL_1);
				}
				break;
			case COMPUTATIONAL_2:
				enterOuterAlt(_localctx, 8);
				{
				setState(4504);
				match(COMPUTATIONAL_2);
				}
				break;
			case COMPUTATIONAL_3:
				enterOuterAlt(_localctx, 9);
				{
				setState(4505);
				match(COMPUTATIONAL_3);
				}
				break;
			case COMPUTATIONAL_4:
				enterOuterAlt(_localctx, 10);
				{
				setState(4506);
				match(COMPUTATIONAL_4);
				}
				break;
			case COMPUTATIONAL_5:
				enterOuterAlt(_localctx, 11);
				{
				setState(4507);
				match(COMPUTATIONAL_5);
				}
				break;
			case COMPUTATIONAL_X:
				enterOuterAlt(_localctx, 12);
				{
				setState(4508);
				match(COMPUTATIONAL_X);
				}
				break;
			case COMP:
				enterOuterAlt(_localctx, 13);
				{
				setState(4509);
				match(COMP);
				}
				break;
			case COMP_1:
				enterOuterAlt(_localctx, 14);
				{
				setState(4510);
				match(COMP_1);
				}
				break;
			case COMP_2:
				enterOuterAlt(_localctx, 15);
				{
				setState(4511);
				match(COMP_2);
				}
				break;
			case COMP_3:
				enterOuterAlt(_localctx, 16);
				{
				setState(4512);
				match(COMP_3);
				}
				break;
			case COMP_4:
				enterOuterAlt(_localctx, 17);
				{
				setState(4513);
				match(COMP_4);
				}
				break;
			case COMP_5:
				enterOuterAlt(_localctx, 18);
				{
				setState(4514);
				match(COMP_5);
				}
				break;
			case COMP_X:
				enterOuterAlt(_localctx, 19);
				{
				setState(4515);
				match(COMP_X);
				}
				break;
			case DISPLAY:
				enterOuterAlt(_localctx, 20);
				{
				setState(4516);
				match(DISPLAY);
				}
				break;
			case FLOAT_SHORT:
				enterOuterAlt(_localctx, 21);
				{
				setState(4517);
				match(FLOAT_SHORT);
				}
				break;
			case FLOAT_LONG:
				enterOuterAlt(_localctx, 22);
				{
				setState(4518);
				match(FLOAT_LONG);
				}
				break;
			case FLOAT_EXTENDED:
				enterOuterAlt(_localctx, 23);
				{
				setState(4519);
				match(FLOAT_EXTENDED);
				}
				break;
			case INDEX:
				enterOuterAlt(_localctx, 24);
				{
				setState(4520);
				match(INDEX);
				}
				break;
			case PACKED_DECIMAL:
				enterOuterAlt(_localctx, 25);
				{
				setState(4521);
				match(PACKED_DECIMAL);
				}
				break;
			case POINTER:
				enterOuterAlt(_localctx, 26);
				{
				setState(4522);
				match(POINTER);
				}
				break;
			case POINTER_64:
				enterOuterAlt(_localctx, 27);
				{
				setState(4523);
				match(POINTER_64);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class PictureContext extends ParserRuleContext {
		public Character_stringContext character_string() {
			return getRuleContext(Character_stringContext.class,0);
		}
		public TerminalNode PICTURE() { return getToken(cobolParser.PICTURE, 0); }
		public TerminalNode PIC() { return getToken(cobolParser.PIC, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public PictureContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_picture; }
	}

	public final PictureContext picture() throws RecognitionException {
		PictureContext _localctx = new PictureContext(_ctx, getState());
		enterRule(_localctx, 302, RULE_picture);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4526);
			_la = _input.LA(1);
			if ( !(_la==PIC || _la==PICTURE) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(4528); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(4527);
					separator();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4530); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,730,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(4538);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(4532);
				match(IS);
				setState(4534); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(4533);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(4536); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,731,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
			}

			setState(4540);
			character_string();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Character_stringContext extends ParserRuleContext {
		public List<Char_str_partContext> char_str_part() {
			return getRuleContexts(Char_str_partContext.class);
		}
		public Char_str_partContext char_str_part(int i) {
			return getRuleContext(Char_str_partContext.class,i);
		}
		public Character_stringContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_character_string; }
	}

	public final Character_stringContext character_string() throws RecognitionException {
		Character_stringContext _localctx = new Character_stringContext(_ctx, getState());
		enterRule(_localctx, 304, RULE_character_string);
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4543); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(4542);
					char_str_part();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4545); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,733,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Char_str_partContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode COMMA_() { return getToken(cobolParser.COMMA_, 0); }
		public TerminalNode SLASH_() { return getToken(cobolParser.SLASH_, 0); }
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Char_str_partContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_char_str_part; }
	}

	public final Char_str_partContext char_str_part() throws RecognitionException {
		Char_str_partContext _localctx = new Char_str_partContext(_ctx, getState());
		enterRule(_localctx, 306, RULE_char_str_part);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4547);
			_la = _input.LA(1);
			if ( !(((((_la - 408)) & ~0x3f) == 0 && ((1L << (_la - 408)) & ((1L << (SLASH_ - 408)) | (1L << (COMMA_ - 408)) | (1L << (LPAREN_ - 408)) | (1L << (RPAREN_ - 408)) | (1L << (DOT_ - 408)) | (1L << (NUMERIC_LITERAL - 408)) | (1L << (USER_DEFINED_WORD - 408)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Other_data_itemContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Other_data_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_other_data_item; }
	}

	public final Other_data_itemContext other_data_item() throws RecognitionException {
		Other_data_itemContext _localctx = new Other_data_itemContext(_ctx, getState());
		enterRule(_localctx, 308, RULE_other_data_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4549);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Data_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_name; }
	}

	public final Data_nameContext data_name() throws RecognitionException {
		Data_nameContext _localctx = new Data_nameContext(_ctx, getState());
		enterRule(_localctx, 310, RULE_data_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4551);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sd_clauseContext extends ParserRuleContext {
		public RecordContext record() {
			return getRuleContext(RecordContext.class,0);
		}
		public Data_recContext data_rec() {
			return getRuleContext(Data_recContext.class,0);
		}
		public Sd_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sd_clause; }
	}

	public final Sd_clauseContext sd_clause() throws RecognitionException {
		Sd_clauseContext _localctx = new Sd_clauseContext(_ctx, getState());
		enterRule(_localctx, 312, RULE_sd_clause);
		try {
			setState(4555);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case RECORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(4553);
				record();
				}
				break;
			case DATA:
				enterOuterAlt(_localctx, 2);
				{
				setState(4554);
				data_rec();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_isContext extends ParserRuleContext {
		public List<Report_nameContext> report_name() {
			return getRuleContexts(Report_nameContext.class);
		}
		public Report_nameContext report_name(int i) {
			return getRuleContext(Report_nameContext.class,i);
		}
		public TerminalNode REPORT() { return getToken(cobolParser.REPORT, 0); }
		public TerminalNode REPORTS() { return getToken(cobolParser.REPORTS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public Report_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_is; }
	}

	public final Report_isContext report_is() throws RecognitionException {
		Report_isContext _localctx = new Report_isContext(_ctx, getState());
		enterRule(_localctx, 314, RULE_report_is);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4577);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case REPORT:
				{
				setState(4557);
				match(REPORT);
				setState(4565);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,736,_ctx) ) {
				case 1:
					{
					setState(4559); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4558);
						separator();
						}
						}
						setState(4561); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4563);
					match(IS);
					}
					break;
				}
				}
				break;
			case REPORTS:
				{
				setState(4567);
				match(REPORTS);
				setState(4575);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,738,_ctx) ) {
				case 1:
					{
					setState(4569); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4568);
						separator();
						}
						}
						setState(4571); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4573);
					match(ARE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(4580); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4579);
				separator();
				}
				}
				setState(4582); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(4584);
			report_name();
			setState(4594);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,742,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4588);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(4585);
						separator();
						}
						}
						setState(4590);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(4591);
					report_name();
					}
					} 
				}
				setState(4596);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,742,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Report_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_name; }
	}

	public final Report_nameContext report_name() throws RecognitionException {
		Report_nameContext _localctx = new Report_nameContext(_ctx, getState());
		enterRule(_localctx, 316, RULE_report_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4597);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class LinageContext extends ParserRuleContext {
		public TerminalNode LINAGE() { return getToken(cobolParser.LINAGE, 0); }
		public Page_sizeContext page_size() {
			return getRuleContext(Page_sizeContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<TerminalNode> LINES() { return getTokens(cobolParser.LINES); }
		public TerminalNode LINES(int i) {
			return getToken(cobolParser.LINES, i);
		}
		public TerminalNode FOOTING() { return getToken(cobolParser.FOOTING, 0); }
		public Footing_lineContext footing_line() {
			return getRuleContext(Footing_lineContext.class,0);
		}
		public TerminalNode TOP() { return getToken(cobolParser.TOP, 0); }
		public Top_linesContext top_lines() {
			return getRuleContext(Top_linesContext.class,0);
		}
		public TerminalNode BOTTOM() { return getToken(cobolParser.BOTTOM, 0); }
		public Bottom_linesContext bottom_lines() {
			return getRuleContext(Bottom_linesContext.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<TerminalNode> AT() { return getTokens(cobolParser.AT); }
		public TerminalNode AT(int i) {
			return getToken(cobolParser.AT, i);
		}
		public LinageContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_linage; }
	}

	public final LinageContext linage() throws RecognitionException {
		LinageContext _localctx = new LinageContext(_ctx, getState());
		enterRule(_localctx, 318, RULE_linage);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4599);
			match(LINAGE);
			setState(4601); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4600);
				separator();
				}
				}
				setState(4603); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(4611);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(4605);
				match(IS);
				setState(4607); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4606);
					separator();
					}
					}
					setState(4609); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(4613);
			page_size();
			setState(4621);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,747,_ctx) ) {
			case 1:
				{
				setState(4615); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4614);
					separator();
					}
					}
					setState(4617); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4619);
				match(LINES);
				}
				break;
			}
			setState(4652);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,754,_ctx) ) {
			case 1:
				{
				setState(4624); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4623);
					separator();
					}
					}
					setState(4626); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4634);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(4628);
					match(WITH);
					setState(4630); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4629);
						separator();
						}
						}
						setState(4632); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(4636);
				match(FOOTING);
				setState(4638); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4637);
					separator();
					}
					}
					setState(4640); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4648);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(4642);
					match(AT);
					setState(4644); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4643);
						separator();
						}
						}
						setState(4646); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(4650);
				footing_line();
				}
				break;
			}
			setState(4683);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,761,_ctx) ) {
			case 1:
				{
				setState(4655); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4654);
					separator();
					}
					}
					setState(4657); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4665);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==LINES) {
					{
					setState(4659);
					match(LINES);
					setState(4661); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4660);
						separator();
						}
						}
						setState(4663); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(4673);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(4667);
					match(AT);
					setState(4669); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4668);
						separator();
						}
						}
						setState(4671); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(4675);
				match(TOP);
				setState(4677); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4676);
					separator();
					}
					}
					setState(4679); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4681);
				top_lines();
				}
				break;
			}
			setState(4714);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,768,_ctx) ) {
			case 1:
				{
				setState(4686); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4685);
					separator();
					}
					}
					setState(4688); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4696);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==LINES) {
					{
					setState(4690);
					match(LINES);
					setState(4692); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4691);
						separator();
						}
						}
						setState(4694); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(4704);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(4698);
					match(AT);
					setState(4700); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4699);
						separator();
						}
						}
						setState(4702); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(4706);
				match(BOTTOM);
				setState(4708); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4707);
					separator();
					}
					}
					setState(4710); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4712);
				bottom_lines();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Bottom_linesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Bottom_linesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_bottom_lines; }
	}

	public final Bottom_linesContext bottom_lines() throws RecognitionException {
		Bottom_linesContext _localctx = new Bottom_linesContext(_ctx, getState());
		enterRule(_localctx, 320, RULE_bottom_lines);
		try {
			setState(4718);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4716);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(4717);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Top_linesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Top_linesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_top_lines; }
	}

	public final Top_linesContext top_lines() throws RecognitionException {
		Top_linesContext _localctx = new Top_linesContext(_ctx, getState());
		enterRule(_localctx, 322, RULE_top_lines);
		try {
			setState(4722);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4720);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(4721);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Footing_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Footing_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_footing_line; }
	}

	public final Footing_lineContext footing_line() throws RecognitionException {
		Footing_lineContext _localctx = new Footing_lineContext(_ctx, getState());
		enterRule(_localctx, 324, RULE_footing_line);
		try {
			setState(4726);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4724);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(4725);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Page_sizeContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Page_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_page_size; }
	}

	public final Page_sizeContext page_size() throws RecognitionException {
		Page_sizeContext _localctx = new Page_sizeContext(_ctx, getState());
		enterRule(_localctx, 326, RULE_page_size);
		try {
			setState(4730);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4728);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(4729);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_recContext extends ParserRuleContext {
		public TerminalNode DATA() { return getToken(cobolParser.DATA, 0); }
		public List<Rec_nameContext> rec_name() {
			return getRuleContexts(Rec_nameContext.class);
		}
		public Rec_nameContext rec_name(int i) {
			return getRuleContext(Rec_nameContext.class,i);
		}
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Data_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_rec; }
	}

	public final Data_recContext data_rec() throws RecognitionException {
		Data_recContext _localctx = new Data_recContext(_ctx, getState());
		enterRule(_localctx, 328, RULE_data_rec);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4732);
			match(DATA);
			setState(4734); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4733);
				separator();
				}
				}
				setState(4736); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(4758);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case RECORDS:
				{
				setState(4738);
				match(RECORDS);
				setState(4746);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					setState(4740); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4739);
						separator();
						}
						}
						setState(4742); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4744);
					match(ARE);
					}
				}

				}
				break;
			case RECORD:
				{
				setState(4748);
				match(RECORD);
				setState(4756);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					setState(4750); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4749);
						separator();
						}
						}
						setState(4752); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4754);
					match(IS);
					}
				}

				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(4760);
			rec_name();
			setState(4770);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,780,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4762); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4761);
						separator();
						}
						}
						setState(4764); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4766);
					rec_name();
					}
					} 
				}
				setState(4772);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,780,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rec_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Rec_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rec_name; }
	}

	public final Rec_nameContext rec_name() throws RecognitionException {
		Rec_nameContext _localctx = new Rec_nameContext(_ctx, getState());
		enterRule(_localctx, 330, RULE_rec_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4773);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_of_idContext extends ParserRuleContext {
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public Value_of_id_definitionContext value_of_id_definition() {
			return getRuleContext(Value_of_id_definitionContext.class,0);
		}
		public TerminalNode ID() { return getToken(cobolParser.ID, 0); }
		public TerminalNode FILE_ID() { return getToken(cobolParser.FILE_ID, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Value_of_idContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_of_id; }
	}

	public final Value_of_idContext value_of_id() throws RecognitionException {
		Value_of_idContext _localctx = new Value_of_idContext(_ctx, getState());
		enterRule(_localctx, 332, RULE_value_of_id);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4775);
			match(VALUE);
			setState(4777); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4776);
				separator();
				}
				}
				setState(4779); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(4781);
			match(OF);
			setState(4783); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4782);
				separator();
				}
				}
				setState(4785); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(4787);
			_la = _input.LA(1);
			if ( !(_la==FILE_ID || _la==ID) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(4789); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4788);
				separator();
				}
				}
				setState(4791); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(4799);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(4793);
				match(IS);
				setState(4795); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4794);
					separator();
					}
					}
					setState(4797); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(4801);
			value_of_id_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_of_id_definitionContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Value_of_id_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_of_id_definition; }
	}

	public final Value_of_id_definitionContext value_of_id_definition() throws RecognitionException {
		Value_of_id_definitionContext _localctx = new Value_of_id_definitionContext(_ctx, getState());
		enterRule(_localctx, 334, RULE_value_of_id_definition);
		try {
			setState(4805);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4803);
				match(STRING_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(4804);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class LabelContext extends ParserRuleContext {
		public TerminalNode LABEL() { return getToken(cobolParser.LABEL, 0); }
		public TerminalNode STANDARD() { return getToken(cobolParser.STANDARD, 0); }
		public TerminalNode OMITTED() { return getToken(cobolParser.OMITTED, 0); }
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public LabelContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_label; }
	}

	public final LabelContext label() throws RecognitionException {
		LabelContext _localctx = new LabelContext(_ctx, getState());
		enterRule(_localctx, 336, RULE_label);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4807);
			match(LABEL);
			setState(4809); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4808);
				separator();
				}
				}
				setState(4811); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(4833);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case RECORDS:
				{
				setState(4813);
				match(RECORDS);
				setState(4821);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,789,_ctx) ) {
				case 1:
					{
					setState(4815); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4814);
						separator();
						}
						}
						setState(4817); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4819);
					match(ARE);
					}
					break;
				}
				}
				break;
			case RECORD:
				{
				setState(4823);
				match(RECORD);
				setState(4831);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,791,_ctx) ) {
				case 1:
					{
					setState(4825); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4824);
						separator();
						}
						}
						setState(4827); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4829);
					match(IS);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(4836); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4835);
				separator();
				}
				}
				setState(4838); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(4840);
			_la = _input.LA(1);
			if ( !(_la==OMITTED || _la==STANDARD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RecordContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public Record_definitionContext record_definition() {
			return getRuleContext(Record_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public RecordContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record; }
	}

	public final RecordContext record() throws RecognitionException {
		RecordContext _localctx = new RecordContext(_ctx, getState());
		enterRule(_localctx, 338, RULE_record);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4842);
			match(RECORD);
			setState(4844); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4843);
				separator();
				}
				}
				setState(4846); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(4848);
			record_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_definitionContext extends ParserRuleContext {
		public Longest_recContext longest_rec() {
			return getRuleContext(Longest_recContext.class,0);
		}
		public TerminalNode CONTAINS() { return getToken(cobolParser.CONTAINS, 0); }
		public Shortest_recContext shortest_rec() {
			return getRuleContext(Shortest_recContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public TerminalNode VARYING() { return getToken(cobolParser.VARYING, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public TerminalNode DEPENDING() { return getToken(cobolParser.DEPENDING, 0); }
		public Depending_itemContext depending_item() {
			return getRuleContext(Depending_itemContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Record_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_definition; }
	}

	public final Record_definitionContext record_definition() throws RecognitionException {
		Record_definitionContext _localctx = new Record_definitionContext(_ctx, getState());
		enterRule(_localctx, 340, RULE_record_definition);
		int _la;
		try {
			int _alt;
			setState(4973);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case CONTAINS:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4856);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CONTAINS) {
					{
					setState(4850);
					match(CONTAINS);
					setState(4852); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4851);
						separator();
						}
						}
						setState(4854); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(4870);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,799,_ctx) ) {
				case 1:
					{
					setState(4858);
					shortest_rec();
					setState(4860); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4859);
						separator();
						}
						}
						setState(4862); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4864);
					match(TO);
					setState(4866); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4865);
						separator();
						}
						}
						setState(4868); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
					break;
				}
				setState(4872);
				longest_rec();
				setState(4876);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,800,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(4873);
						separator();
						}
						} 
					}
					setState(4878);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,800,_ctx);
				}
				setState(4886);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CHARACTERS) {
					{
					setState(4879);
					match(CHARACTERS);
					setState(4883);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,801,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(4880);
							separator();
							}
							} 
						}
						setState(4885);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,801,_ctx);
					}
					}
				}

				}
				break;
			case IS:
			case VARYING:
				enterOuterAlt(_localctx, 2);
				{
				setState(4894);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4888);
					match(IS);
					setState(4890); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4889);
						separator();
						}
						}
						setState(4892); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(4896);
				match(VARYING);
				setState(4898); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(4897);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(4900); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,805,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				setState(4908);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IN) {
					{
					setState(4902);
					match(IN);
					setState(4904); 
					_errHandler.sync(this);
					_alt = 1;
					do {
						switch (_alt) {
						case 1:
							{
							{
							setState(4903);
							separator();
							}
							}
							break;
						default:
							throw new NoViableAltException(this);
						}
						setState(4906); 
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,806,_ctx);
					} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
					}
				}

				setState(4917);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==SIZE) {
					{
					setState(4910);
					match(SIZE);
					setState(4914);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,808,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(4911);
							separator();
							}
							} 
						}
						setState(4916);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,808,_ctx);
					}
					}
				}

				setState(4928);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==FROM || _la==NUMERIC_LITERAL) {
					{
					setState(4925);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==FROM) {
						{
						setState(4919);
						match(FROM);
						setState(4921); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4920);
							separator();
							}
							}
							setState(4923); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						}
					}

					setState(4927);
					shortest_rec();
					}
				}

				setState(4938);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==TO) {
					{
					setState(4930);
					match(TO);
					setState(4932); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4931);
						separator();
						}
						}
						setState(4934); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4936);
					longest_rec();
					}
				}

				setState(4953);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,817,_ctx) ) {
				case 1:
					{
					setState(4943);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(4940);
						separator();
						}
						}
						setState(4945);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(4946);
					match(CHARACTERS);
					setState(4950);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,816,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(4947);
							separator();
							}
							} 
						}
						setState(4952);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,816,_ctx);
					}
					}
					break;
				}
				setState(4971);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==DEPENDING) {
					{
					setState(4955);
					match(DEPENDING);
					setState(4957); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4956);
						separator();
						}
						}
						setState(4959); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(4967);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==ON) {
						{
						setState(4961);
						match(ON);
						setState(4963); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4962);
							separator();
							}
							}
							setState(4965); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						}
					}

					setState(4969);
					depending_item();
					}
				}

				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Depending_itemContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Depending_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_depending_item; }
	}

	public final Depending_itemContext depending_item() throws RecognitionException {
		Depending_itemContext _localctx = new Depending_itemContext(_ctx, getState());
		enterRule(_localctx, 342, RULE_depending_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4975);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Shortest_recContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Shortest_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_shortest_rec; }
	}

	public final Shortest_recContext shortest_rec() throws RecognitionException {
		Shortest_recContext _localctx = new Shortest_recContext(_ctx, getState());
		enterRule(_localctx, 344, RULE_shortest_rec);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4977);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Longest_recContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Longest_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_longest_rec; }
	}

	public final Longest_recContext longest_rec() throws RecognitionException {
		Longest_recContext _localctx = new Longest_recContext(_ctx, getState());
		enterRule(_localctx, 346, RULE_longest_rec);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4979);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_description_entryContext extends ParserRuleContext {
		public Level_numberContext level_number() {
			return getRuleContext(Level_numberContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<Screen_description_clauseContext> screen_description_clause() {
			return getRuleContexts(Screen_description_clauseContext.class);
		}
		public Screen_description_clauseContext screen_description_clause(int i) {
			return getRuleContext(Screen_description_clauseContext.class,i);
		}
		public Screen_nameContext screen_name() {
			return getRuleContext(Screen_nameContext.class,0);
		}
		public TerminalNode FILLER() { return getToken(cobolParser.FILLER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Screen_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_description_entry; }
	}

	public final Screen_description_entryContext screen_description_entry() throws RecognitionException {
		Screen_description_entryContext _localctx = new Screen_description_entryContext(_ctx, getState());
		enterRule(_localctx, 348, RULE_screen_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4981);
			level_number();
			setState(4991);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,825,_ctx) ) {
			case 1:
				{
				setState(4983); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4982);
					separator();
					}
					}
					setState(4985); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4989);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USER_DEFINED_WORD:
					{
					setState(4987);
					screen_name();
					}
					break;
				case FILLER:
					{
					setState(4988);
					match(FILLER);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(5002);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(4994); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4993);
					separator();
					}
					}
					setState(4996); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(4998);
				screen_description_clause();
				}
				}
				setState(5004);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5005);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Screen_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_name; }
	}

	public final Screen_nameContext screen_name() throws RecognitionException {
		Screen_nameContext _localctx = new Screen_nameContext(_ctx, getState());
		enterRule(_localctx, 350, RULE_screen_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5007);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_description_clauseContext extends ParserRuleContext {
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FOREGROUND_COLOR() { return getToken(cobolParser.FOREGROUND_COLOR, 0); }
		public Color_numContext color_num() {
			return getRuleContext(Color_numContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode BACKGROUND_COLOR() { return getToken(cobolParser.BACKGROUND_COLOR, 0); }
		public TerminalNode AUTO() { return getToken(cobolParser.AUTO, 0); }
		public TerminalNode SECURE() { return getToken(cobolParser.SECURE, 0); }
		public TerminalNode REQUIRED() { return getToken(cobolParser.REQUIRED, 0); }
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public TerminalNode USAGE() { return getToken(cobolParser.USAGE, 0); }
		public Sign_isContext sign_is() {
			return getRuleContext(Sign_isContext.class,0);
		}
		public TerminalNode FULL() { return getToken(cobolParser.FULL, 0); }
		public TerminalNode BELL() { return getToken(cobolParser.BELL, 0); }
		public TerminalNode BLINK() { return getToken(cobolParser.BLINK, 0); }
		public TerminalNode ERASE() { return getToken(cobolParser.ERASE, 0); }
		public TerminalNode EOL() { return getToken(cobolParser.EOL, 0); }
		public TerminalNode EOS() { return getToken(cobolParser.EOS, 0); }
		public TerminalNode HIGHLIGHT() { return getToken(cobolParser.HIGHLIGHT, 0); }
		public TerminalNode LOWLIGHT() { return getToken(cobolParser.LOWLIGHT, 0); }
		public TerminalNode REVERSE_VIDEO() { return getToken(cobolParser.REVERSE_VIDEO, 0); }
		public TerminalNode UNDERLINE() { return getToken(cobolParser.UNDERLINE, 0); }
		public Src_numberContext src_number() {
			return getRuleContext(Src_numberContext.class,0);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public Nonnumeric_literalContext nonnumeric_literal() {
			return getRuleContext(Nonnumeric_literalContext.class,0);
		}
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode WHEN() { return getToken(cobolParser.WHEN, 0); }
		public TerminalNode JUSTIFIED() { return getToken(cobolParser.JUSTIFIED, 0); }
		public TerminalNode JUST() { return getToken(cobolParser.JUST, 0); }
		public TerminalNode RIGHT() { return getToken(cobolParser.RIGHT, 0); }
		public PictureContext picture() {
			return getRuleContext(PictureContext.class,0);
		}
		public Scr_pic_usingContext scr_pic_using() {
			return getRuleContext(Scr_pic_usingContext.class,0);
		}
		public Scr_pic_fromContext scr_pic_from() {
			return getRuleContext(Scr_pic_fromContext.class,0);
		}
		public Scr_pic_toContext scr_pic_to() {
			return getRuleContext(Scr_pic_toContext.class,0);
		}
		public Screen_description_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_description_clause; }
	}

	public final Screen_description_clauseContext screen_description_clause() throws RecognitionException {
		Screen_description_clauseContext _localctx = new Screen_description_clauseContext(_ctx, getState());
		enterRule(_localctx, 352, RULE_screen_description_clause);
		int _la;
		try {
			setState(5211);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,866,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(5009);
				match(BLANK);
				setState(5011); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5010);
					separator();
					}
					}
					setState(5013); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5015);
				_la = _input.LA(1);
				if ( !(_la==LINE || _la==SCREEN) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(5017);
				match(FOREGROUND_COLOR);
				setState(5019); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5018);
					separator();
					}
					}
					setState(5021); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5029);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5023);
					match(IS);
					setState(5025); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5024);
						separator();
						}
						}
						setState(5027); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5031);
				color_num();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(5033);
				match(BACKGROUND_COLOR);
				setState(5035); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5034);
					separator();
					}
					}
					setState(5037); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5045);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5039);
					match(IS);
					setState(5041); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5040);
						separator();
						}
						}
						setState(5043); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5047);
				color_num();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(5049);
				match(AUTO);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(5050);
				match(SECURE);
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(5051);
				match(REQUIRED);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(5066);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==USAGE) {
					{
					setState(5052);
					match(USAGE);
					setState(5054); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5053);
						separator();
						}
						}
						setState(5056); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(5064);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==IS) {
						{
						setState(5058);
						match(IS);
						setState(5060); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5059);
							separator();
							}
							}
							setState(5062); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						}
					}

					}
				}

				setState(5068);
				match(DISPLAY);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(5069);
				sign_is();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(5070);
				match(FULL);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(5071);
				match(BELL);
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(5072);
				match(BLINK);
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(5073);
				match(ERASE);
				setState(5075); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5074);
					separator();
					}
					}
					setState(5077); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5079);
				_la = _input.LA(1);
				if ( !(_la==EOL || _la==EOS) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 13:
				enterOuterAlt(_localctx, 13);
				{
				setState(5081);
				match(HIGHLIGHT);
				}
				break;
			case 14:
				enterOuterAlt(_localctx, 14);
				{
				setState(5082);
				match(LOWLIGHT);
				}
				break;
			case 15:
				enterOuterAlt(_localctx, 15);
				{
				setState(5083);
				match(REVERSE_VIDEO);
				}
				break;
			case 16:
				enterOuterAlt(_localctx, 16);
				{
				setState(5084);
				match(UNDERLINE);
				}
				break;
			case 17:
				enterOuterAlt(_localctx, 17);
				{
				setState(5085);
				match(LINE);
				setState(5087); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5086);
					separator();
					}
					}
					setState(5089); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5097);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(5091);
					match(NUMBER);
					setState(5093); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5092);
						separator();
						}
						}
						setState(5095); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5105);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5099);
					match(IS);
					setState(5101); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5100);
						separator();
						}
						}
						setState(5103); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5113);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==PLUS) {
					{
					setState(5107);
					match(PLUS);
					setState(5109); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5108);
						separator();
						}
						}
						setState(5111); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5115);
				src_number();
				}
				break;
			case 18:
				enterOuterAlt(_localctx, 18);
				{
				setState(5117);
				match(COLUMN);
				setState(5119); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5118);
					separator();
					}
					}
					setState(5121); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5129);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(5123);
					match(NUMBER);
					setState(5125); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5124);
						separator();
						}
						}
						setState(5127); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5137);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5131);
					match(IS);
					setState(5133); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5132);
						separator();
						}
						}
						setState(5135); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5145);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==PLUS) {
					{
					setState(5139);
					match(PLUS);
					setState(5141); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5140);
						separator();
						}
						}
						setState(5143); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5147);
				src_number();
				}
				break;
			case 19:
				enterOuterAlt(_localctx, 19);
				{
				setState(5149);
				match(VALUE);
				setState(5151); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5150);
					separator();
					}
					}
					setState(5153); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5161);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5155);
					match(IS);
					setState(5157); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5156);
						separator();
						}
						}
						setState(5159); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5163);
				nonnumeric_literal();
				}
				break;
			case 20:
				enterOuterAlt(_localctx, 20);
				{
				setState(5165);
				match(BLANK);
				setState(5167); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5166);
					separator();
					}
					}
					setState(5169); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5177);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WHEN) {
					{
					setState(5171);
					match(WHEN);
					setState(5173); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5172);
						separator();
						}
						}
						setState(5175); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5179);
				match(ZERO);
				}
				break;
			case 21:
				enterOuterAlt(_localctx, 21);
				{
				setState(5181);
				_la = _input.LA(1);
				if ( !(_la==JUST || _la==JUSTIFIED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(5189);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,861,_ctx) ) {
				case 1:
					{
					setState(5183); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5182);
						separator();
						}
						}
						setState(5185); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(5187);
					match(RIGHT);
					}
					break;
				}
				}
				break;
			case 22:
				enterOuterAlt(_localctx, 22);
				{
				setState(5191);
				picture();
				setState(5193); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5192);
					separator();
					}
					}
					setState(5195); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5209);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USING:
					{
					setState(5197);
					scr_pic_using();
					}
					break;
				case FROM:
					{
					setState(5198);
					scr_pic_from();
					setState(5206);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,864,_ctx) ) {
					case 1:
						{
						setState(5200); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5199);
							separator();
							}
							}
							setState(5202); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(5204);
						scr_pic_to();
						}
						break;
					}
					}
					break;
				case TO:
					{
					setState(5208);
					scr_pic_to();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Scr_pic_usingContext extends ParserRuleContext {
		public TerminalNode USING() { return getToken(cobolParser.USING, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Scr_pic_usingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_scr_pic_using; }
	}

	public final Scr_pic_usingContext scr_pic_using() throws RecognitionException {
		Scr_pic_usingContext _localctx = new Scr_pic_usingContext(_ctx, getState());
		enterRule(_localctx, 354, RULE_scr_pic_using);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5213);
			match(USING);
			setState(5215); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5214);
				separator();
				}
				}
				setState(5217); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5219);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Scr_pic_fromContext extends ParserRuleContext {
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Nonnumeric_literalContext nonnumeric_literal() {
			return getRuleContext(Nonnumeric_literalContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Scr_pic_fromContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_scr_pic_from; }
	}

	public final Scr_pic_fromContext scr_pic_from() throws RecognitionException {
		Scr_pic_fromContext _localctx = new Scr_pic_fromContext(_ctx, getState());
		enterRule(_localctx, 356, RULE_scr_pic_from);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5221);
			match(FROM);
			setState(5223); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5222);
				separator();
				}
				}
				setState(5225); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5229);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				{
				setState(5227);
				qualified_data_item();
				}
				break;
			case STRING_LITERAL:
				{
				setState(5228);
				nonnumeric_literal();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Scr_pic_toContext extends ParserRuleContext {
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Scr_pic_toContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_scr_pic_to; }
	}

	public final Scr_pic_toContext scr_pic_to() throws RecognitionException {
		Scr_pic_toContext _localctx = new Scr_pic_toContext(_ctx, getState());
		enterRule(_localctx, 358, RULE_scr_pic_to);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5231);
			match(TO);
			setState(5233); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5232);
				separator();
				}
				}
				setState(5235); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5237);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Nonnumeric_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Nonnumeric_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_nonnumeric_literal; }
	}

	public final Nonnumeric_literalContext nonnumeric_literal() throws RecognitionException {
		Nonnumeric_literalContext _localctx = new Nonnumeric_literalContext(_ctx, getState());
		enterRule(_localctx, 360, RULE_nonnumeric_literal);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5239);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Src_numberContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Src_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_src_number; }
	}

	public final Src_numberContext src_number() throws RecognitionException {
		Src_numberContext _localctx = new Src_numberContext(_ctx, getState());
		enterRule(_localctx, 362, RULE_src_number);
		try {
			setState(5243);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(5241);
				qualified_data_item();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(5242);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Color_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Color_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_color_num; }
	}

	public final Color_numContext color_num() throws RecognitionException {
		Color_numContext _localctx = new Color_numContext(_ctx, getState());
		enterRule(_localctx, 364, RULE_color_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5245);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Identification_divisionContext extends ParserRuleContext {
		public TerminalNode IDENTIFICATION_IN_A_AREA() { return getToken(cobolParser.IDENTIFICATION_IN_A_AREA, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Identification_division_paragraphContext> identification_division_paragraph() {
			return getRuleContexts(Identification_division_paragraphContext.class);
		}
		public Identification_division_paragraphContext identification_division_paragraph(int i) {
			return getRuleContext(Identification_division_paragraphContext.class,i);
		}
		public Identification_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identification_division; }
	}

	public final Identification_divisionContext identification_division() throws RecognitionException {
		Identification_divisionContext _localctx = new Identification_divisionContext(_ctx, getState());
		enterRule(_localctx, 366, RULE_identification_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5247);
			match(IDENTIFICATION_IN_A_AREA);
			setState(5249); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5248);
				separator();
				}
				}
				setState(5251); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5253);
			match(DIVISION);
			setState(5257);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5254);
				separator();
				}
				}
				setState(5259);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5260);
			match(DOT_);
			setState(5264);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,874,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5261);
					separator();
					}
					} 
				}
				setState(5266);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,874,_ctx);
			}
			setState(5270);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,875,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5267);
					identification_division_paragraph();
					}
					} 
				}
				setState(5272);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,875,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Identification_division_paragraphContext extends ParserRuleContext {
		public Program_idContext program_id() {
			return getRuleContext(Program_idContext.class,0);
		}
		public AuthorContext author() {
			return getRuleContext(AuthorContext.class,0);
		}
		public InstallationContext installation() {
			return getRuleContext(InstallationContext.class,0);
		}
		public Date_writtenContext date_written() {
			return getRuleContext(Date_writtenContext.class,0);
		}
		public Date_compiledContext date_compiled() {
			return getRuleContext(Date_compiledContext.class,0);
		}
		public SecurityContext security() {
			return getRuleContext(SecurityContext.class,0);
		}
		public Options_Context options_() {
			return getRuleContext(Options_Context.class,0);
		}
		public SeparatorContext separator() {
			return getRuleContext(SeparatorContext.class,0);
		}
		public Identification_division_paragraphContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identification_division_paragraph; }
	}

	public final Identification_division_paragraphContext identification_division_paragraph() throws RecognitionException {
		Identification_division_paragraphContext _localctx = new Identification_division_paragraphContext(_ctx, getState());
		enterRule(_localctx, 368, RULE_identification_division_paragraph);
		try {
			setState(5281);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case PROGRAM_ID:
				enterOuterAlt(_localctx, 1);
				{
				setState(5273);
				program_id();
				}
				break;
			case AUTHOR:
				enterOuterAlt(_localctx, 2);
				{
				setState(5274);
				author();
				}
				break;
			case INSTALLATION:
				enterOuterAlt(_localctx, 3);
				{
				setState(5275);
				installation();
				}
				break;
			case DATE_WRITTEN:
				enterOuterAlt(_localctx, 4);
				{
				setState(5276);
				date_written();
				}
				break;
			case DATE_COMPILED:
				enterOuterAlt(_localctx, 5);
				{
				setState(5277);
				date_compiled();
				}
				break;
			case SECURITY:
				enterOuterAlt(_localctx, 6);
				{
				setState(5278);
				security();
				}
				break;
			case OPTIONS:
				enterOuterAlt(_localctx, 7);
				{
				setState(5279);
				options_();
				}
				break;
			case START_SLASH_:
			case START_STAR_:
			case COMMA_:
			case SEMI_:
			case START_FOUR_SPACES:
			case WHITESPACE:
			case NEWLINE:
				enterOuterAlt(_localctx, 8);
				{
				setState(5280);
				separator();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Program_idContext extends ParserRuleContext {
		public TerminalNode PROGRAM_ID() { return getToken(cobolParser.PROGRAM_ID, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public Program_nameContext program_name() {
			return getRuleContext(Program_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Is_programContext is_program() {
			return getRuleContext(Is_programContext.class,0);
		}
		public With_identContext with_ident() {
			return getRuleContext(With_identContext.class,0);
		}
		public Program_idContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program_id; }
	}

	public final Program_idContext program_id() throws RecognitionException {
		Program_idContext _localctx = new Program_idContext(_ctx, getState());
		enterRule(_localctx, 370, RULE_program_id);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5283);
			match(PROGRAM_ID);
			setState(5287);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5284);
				separator();
				}
				}
				setState(5289);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5290);
			match(DOT_);
			setState(5294);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5291);
				separator();
				}
				}
				setState(5296);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5297);
			program_name();
			setState(5301);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,879,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5298);
					separator();
					}
					} 
				}
				setState(5303);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,879,_ctx);
			}
			setState(5305);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==COMMON || _la==INITIAL || _la==IS) {
				{
				setState(5304);
				is_program();
				}
			}

			setState(5310);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,881,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5307);
					separator();
					}
					} 
				}
				setState(5312);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,881,_ctx);
			}
			setState(5314);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IDENT || _la==WITH) {
				{
				setState(5313);
				with_ident();
				}
			}

			setState(5319);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5316);
				separator();
				}
				}
				setState(5321);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5322);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Program_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Program_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program_name; }
	}

	public final Program_nameContext program_name() throws RecognitionException {
		Program_nameContext _localctx = new Program_nameContext(_ctx, getState());
		enterRule(_localctx, 372, RULE_program_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5324);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Is_programContext extends ParserRuleContext {
		public TerminalNode COMMON() { return getToken(cobolParser.COMMON, 0); }
		public TerminalNode INITIAL() { return getToken(cobolParser.INITIAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Is_programContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_is_program; }
	}

	public final Is_programContext is_program() throws RecognitionException {
		Is_programContext _localctx = new Is_programContext(_ctx, getState());
		enterRule(_localctx, 374, RULE_is_program);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5332);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5326);
				match(IS);
				setState(5328); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5327);
					separator();
					}
					}
					setState(5330); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(5334);
			_la = _input.LA(1);
			if ( !(_la==COMMON || _la==INITIAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(5342);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,887,_ctx) ) {
			case 1:
				{
				setState(5336); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5335);
					separator();
					}
					}
					setState(5338); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5340);
				match(PROGRAM);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class With_identContext extends ParserRuleContext {
		public TerminalNode IDENT() { return getToken(cobolParser.IDENT, 0); }
		public Ident_stringContext ident_string() {
			return getRuleContext(Ident_stringContext.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public With_identContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_with_ident; }
	}

	public final With_identContext with_ident() throws RecognitionException {
		With_identContext _localctx = new With_identContext(_ctx, getState());
		enterRule(_localctx, 376, RULE_with_ident);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5350);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WITH) {
				{
				setState(5344);
				match(WITH);
				setState(5346); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5345);
					separator();
					}
					}
					setState(5348); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(5352);
			match(IDENT);
			setState(5354); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5353);
				separator();
				}
				}
				setState(5356); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5358);
			ident_string();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Ident_stringContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Ident_stringContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_ident_string; }
	}

	public final Ident_stringContext ident_string() throws RecognitionException {
		Ident_stringContext _localctx = new Ident_stringContext(_ctx, getState());
		enterRule(_localctx, 378, RULE_ident_string);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5360);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Comment_entryContext extends ParserRuleContext {
		public TerminalNode START_FOUR_SPACES() { return getToken(cobolParser.START_FOUR_SPACES, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public Line_commentContext line_comment() {
			return getRuleContext(Line_commentContext.class,0);
		}
		public Comment_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_comment_entry; }
	}

	public final Comment_entryContext comment_entry() throws RecognitionException {
		Comment_entryContext _localctx = new Comment_entryContext(_ctx, getState());
		enterRule(_localctx, 380, RULE_comment_entry);
		int _la;
		try {
			setState(5371);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case START_FOUR_SPACES:
				enterOuterAlt(_localctx, 1);
				{
				setState(5362);
				match(START_FOUR_SPACES);
				setState(5366);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_DIVIDE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (ROUNDED - 384)) | (1L << (CORRESPONDING - 384)) | (1L << (CORR - 384)) | (1L << (PROCEED - 384)) | (1L << (CONTENT - 384)) | (1L << (DESCRIPTOR - 384)) | (1L << (REMOVAL - 384)) | (1L << (REWIND - 384)) | (1L << (ADVANCING - 384)) | (1L << (INTO - 384)) | (1L << (REMAINDER - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
					{
					{
					setState(5363);
					_la = _input.LA(1);
					if ( _la <= 0 || (_la==NEWLINE) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					}
					setState(5368);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(5369);
				match(NEWLINE);
				}
				break;
			case START_SLASH_:
			case START_STAR_:
				enterOuterAlt(_localctx, 2);
				{
				setState(5370);
				line_comment();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class AuthorContext extends ParserRuleContext {
		public TerminalNode AUTHOR() { return getToken(cobolParser.AUTHOR, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public AuthorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_author; }
	}

	public final AuthorContext author() throws RecognitionException {
		AuthorContext _localctx = new AuthorContext(_ctx, getState());
		enterRule(_localctx, 382, RULE_author);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5373);
			match(AUTHOR);
			setState(5377);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5374);
				separator();
				}
				}
				setState(5379);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5380);
			match(DOT_);
			setState(5384);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_DIVIDE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (ROUNDED - 384)) | (1L << (CORRESPONDING - 384)) | (1L << (CORR - 384)) | (1L << (PROCEED - 384)) | (1L << (CONTENT - 384)) | (1L << (DESCRIPTOR - 384)) | (1L << (REMOVAL - 384)) | (1L << (REWIND - 384)) | (1L << (ADVANCING - 384)) | (1L << (INTO - 384)) | (1L << (REMAINDER - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(5381);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(5386);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5387);
			match(NEWLINE);
			setState(5391);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,895,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5388);
					comment_entry();
					}
					} 
				}
				setState(5393);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,895,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class InstallationContext extends ParserRuleContext {
		public TerminalNode INSTALLATION() { return getToken(cobolParser.INSTALLATION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public InstallationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_installation; }
	}

	public final InstallationContext installation() throws RecognitionException {
		InstallationContext _localctx = new InstallationContext(_ctx, getState());
		enterRule(_localctx, 384, RULE_installation);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5394);
			match(INSTALLATION);
			setState(5398);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5395);
				separator();
				}
				}
				setState(5400);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5401);
			match(DOT_);
			setState(5405);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_DIVIDE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (ROUNDED - 384)) | (1L << (CORRESPONDING - 384)) | (1L << (CORR - 384)) | (1L << (PROCEED - 384)) | (1L << (CONTENT - 384)) | (1L << (DESCRIPTOR - 384)) | (1L << (REMOVAL - 384)) | (1L << (REWIND - 384)) | (1L << (ADVANCING - 384)) | (1L << (INTO - 384)) | (1L << (REMAINDER - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(5402);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(5407);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5408);
			match(NEWLINE);
			setState(5412);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,898,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5409);
					comment_entry();
					}
					} 
				}
				setState(5414);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,898,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Date_writtenContext extends ParserRuleContext {
		public TerminalNode DATE_WRITTEN() { return getToken(cobolParser.DATE_WRITTEN, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public Date_writtenContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_date_written; }
	}

	public final Date_writtenContext date_written() throws RecognitionException {
		Date_writtenContext _localctx = new Date_writtenContext(_ctx, getState());
		enterRule(_localctx, 386, RULE_date_written);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5415);
			match(DATE_WRITTEN);
			setState(5419);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5416);
				separator();
				}
				}
				setState(5421);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5422);
			match(DOT_);
			setState(5426);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_DIVIDE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (ROUNDED - 384)) | (1L << (CORRESPONDING - 384)) | (1L << (CORR - 384)) | (1L << (PROCEED - 384)) | (1L << (CONTENT - 384)) | (1L << (DESCRIPTOR - 384)) | (1L << (REMOVAL - 384)) | (1L << (REWIND - 384)) | (1L << (ADVANCING - 384)) | (1L << (INTO - 384)) | (1L << (REMAINDER - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(5423);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(5428);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5429);
			match(NEWLINE);
			setState(5433);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,901,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5430);
					comment_entry();
					}
					} 
				}
				setState(5435);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,901,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Date_compiledContext extends ParserRuleContext {
		public TerminalNode DATE_COMPILED() { return getToken(cobolParser.DATE_COMPILED, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public Date_compiledContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_date_compiled; }
	}

	public final Date_compiledContext date_compiled() throws RecognitionException {
		Date_compiledContext _localctx = new Date_compiledContext(_ctx, getState());
		enterRule(_localctx, 388, RULE_date_compiled);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5436);
			match(DATE_COMPILED);
			setState(5440);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5437);
				separator();
				}
				}
				setState(5442);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5443);
			match(DOT_);
			setState(5447);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_DIVIDE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (ROUNDED - 384)) | (1L << (CORRESPONDING - 384)) | (1L << (CORR - 384)) | (1L << (PROCEED - 384)) | (1L << (CONTENT - 384)) | (1L << (DESCRIPTOR - 384)) | (1L << (REMOVAL - 384)) | (1L << (REWIND - 384)) | (1L << (ADVANCING - 384)) | (1L << (INTO - 384)) | (1L << (REMAINDER - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(5444);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(5449);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5450);
			match(NEWLINE);
			setState(5454);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,904,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5451);
					comment_entry();
					}
					} 
				}
				setState(5456);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,904,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SecurityContext extends ParserRuleContext {
		public TerminalNode SECURITY() { return getToken(cobolParser.SECURITY, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public SecurityContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_security; }
	}

	public final SecurityContext security() throws RecognitionException {
		SecurityContext _localctx = new SecurityContext(_ctx, getState());
		enterRule(_localctx, 390, RULE_security);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5457);
			match(SECURITY);
			setState(5461);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5458);
				separator();
				}
				}
				setState(5463);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5464);
			match(DOT_);
			setState(5468);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_DIVIDE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (ROUNDED - 384)) | (1L << (CORRESPONDING - 384)) | (1L << (CORR - 384)) | (1L << (PROCEED - 384)) | (1L << (CONTENT - 384)) | (1L << (DESCRIPTOR - 384)) | (1L << (REMOVAL - 384)) | (1L << (REWIND - 384)) | (1L << (ADVANCING - 384)) | (1L << (INTO - 384)) | (1L << (REMAINDER - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(5465);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(5470);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5471);
			match(NEWLINE);
			setState(5475);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,907,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5472);
					comment_entry();
					}
					} 
				}
				setState(5477);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,907,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Options_Context extends ParserRuleContext {
		public TerminalNode OPTIONS() { return getToken(cobolParser.OPTIONS, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public ArithmeticContext arithmetic() {
			return getRuleContext(ArithmeticContext.class,0);
		}
		public Options_Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_options_; }
	}

	public final Options_Context options_() throws RecognitionException {
		Options_Context _localctx = new Options_Context(_ctx, getState());
		enterRule(_localctx, 392, RULE_options_);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5478);
			match(OPTIONS);
			setState(5482);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5479);
				separator();
				}
				}
				setState(5484);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5485);
			match(DOT_);
			setState(5489);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,909,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5486);
					separator();
					}
					} 
				}
				setState(5491);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,909,_ctx);
			}
			setState(5493);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ARITHMETIC) {
				{
				setState(5492);
				arithmetic();
				}
			}

			setState(5498);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,911,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5495);
					separator();
					}
					} 
				}
				setState(5500);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,911,_ctx);
			}
			setState(5502);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==DOT_) {
				{
				setState(5501);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArithmeticContext extends ParserRuleContext {
		public TerminalNode ARITHMETIC() { return getToken(cobolParser.ARITHMETIC, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode NATIVE() { return getToken(cobolParser.NATIVE, 0); }
		public TerminalNode STANDARD() { return getToken(cobolParser.STANDARD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public ArithmeticContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arithmetic; }
	}

	public final ArithmeticContext arithmetic() throws RecognitionException {
		ArithmeticContext _localctx = new ArithmeticContext(_ctx, getState());
		enterRule(_localctx, 394, RULE_arithmetic);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5504);
			match(ARITHMETIC);
			setState(5506); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5505);
				separator();
				}
				}
				setState(5508); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5516);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5510);
				match(IS);
				setState(5512); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5511);
					separator();
					}
					}
					setState(5514); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(5518);
			_la = _input.LA(1);
			if ( !(_la==NATIVE || _la==STANDARD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(5522);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5519);
				separator();
				}
				}
				setState(5524);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5525);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Environment_divisionContext extends ParserRuleContext {
		public TerminalNode ENVIRONMENT() { return getToken(cobolParser.ENVIRONMENT, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Configuration_sectionContext configuration_section() {
			return getRuleContext(Configuration_sectionContext.class,0);
		}
		public Input_output_sectionContext input_output_section() {
			return getRuleContext(Input_output_sectionContext.class,0);
		}
		public Environment_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_environment_division; }
	}

	public final Environment_divisionContext environment_division() throws RecognitionException {
		Environment_divisionContext _localctx = new Environment_divisionContext(_ctx, getState());
		enterRule(_localctx, 396, RULE_environment_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5527);
			match(ENVIRONMENT);
			setState(5529); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5528);
				separator();
				}
				}
				setState(5531); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5533);
			match(DIVISION);
			setState(5537);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5534);
				separator();
				}
				}
				setState(5539);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5540);
			match(DOT_);
			setState(5544);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,919,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5541);
					separator();
					}
					} 
				}
				setState(5546);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,919,_ctx);
			}
			setState(5548);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONFIGURATION) {
				{
				setState(5547);
				configuration_section();
				}
			}

			setState(5551);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==INPUT_OUTPUT) {
				{
				setState(5550);
				input_output_section();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Configuration_sectionContext extends ParserRuleContext {
		public TerminalNode CONFIGURATION() { return getToken(cobolParser.CONFIGURATION, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Source_computerContext source_computer() {
			return getRuleContext(Source_computerContext.class,0);
		}
		public Object_computerContext object_computer() {
			return getRuleContext(Object_computerContext.class,0);
		}
		public Special_namesContext special_names() {
			return getRuleContext(Special_namesContext.class,0);
		}
		public Configuration_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_configuration_section; }
	}

	public final Configuration_sectionContext configuration_section() throws RecognitionException {
		Configuration_sectionContext _localctx = new Configuration_sectionContext(_ctx, getState());
		enterRule(_localctx, 398, RULE_configuration_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5553);
			match(CONFIGURATION);
			setState(5555); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5554);
				separator();
				}
				}
				setState(5557); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5559);
			match(SECTION);
			setState(5563);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5560);
				separator();
				}
				}
				setState(5565);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5566);
			match(DOT_);
			setState(5570);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,924,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5567);
					separator();
					}
					} 
				}
				setState(5572);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,924,_ctx);
			}
			setState(5574);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SOURCE_COMPUTER) {
				{
				setState(5573);
				source_computer();
				}
			}

			setState(5579);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,926,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5576);
					separator();
					}
					} 
				}
				setState(5581);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,926,_ctx);
			}
			setState(5583);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==OBJECT_COMPUTER) {
				{
				setState(5582);
				object_computer();
				}
			}

			setState(5588);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,928,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5585);
					separator();
					}
					} 
				}
				setState(5590);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,928,_ctx);
			}
			setState(5592);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SPECIAL_NAMES) {
				{
				setState(5591);
				special_names();
				}
			}

			setState(5597);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,930,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5594);
					separator();
					}
					} 
				}
				setState(5599);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,930,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Input_output_sectionContext extends ParserRuleContext {
		public TerminalNode INPUT_OUTPUT() { return getToken(cobolParser.INPUT_OUTPUT, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public File_controlContext file_control() {
			return getRuleContext(File_controlContext.class,0);
		}
		public I_o_controlContext i_o_control() {
			return getRuleContext(I_o_controlContext.class,0);
		}
		public Input_output_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_input_output_section; }
	}

	public final Input_output_sectionContext input_output_section() throws RecognitionException {
		Input_output_sectionContext _localctx = new Input_output_sectionContext(_ctx, getState());
		enterRule(_localctx, 400, RULE_input_output_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5600);
			match(INPUT_OUTPUT);
			setState(5602); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5601);
				separator();
				}
				}
				setState(5604); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5606);
			match(SECTION);
			setState(5610);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5607);
				separator();
				}
				}
				setState(5612);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5613);
			match(DOT_);
			setState(5617);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,933,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5614);
					separator();
					}
					} 
				}
				setState(5619);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,933,_ctx);
			}
			setState(5621);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE_CONTROL) {
				{
				setState(5620);
				file_control();
				}
			}

			setState(5624);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==I_O_CONTROL) {
				{
				setState(5623);
				i_o_control();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Source_computerContext extends ParserRuleContext {
		public TerminalNode SOURCE_COMPUTER() { return getToken(cobolParser.SOURCE_COMPUTER, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Computer_typeContext computer_type() {
			return getRuleContext(Computer_typeContext.class,0);
		}
		public With_debuggingContext with_debugging() {
			return getRuleContext(With_debuggingContext.class,0);
		}
		public Source_computerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_source_computer; }
	}

	public final Source_computerContext source_computer() throws RecognitionException {
		Source_computerContext _localctx = new Source_computerContext(_ctx, getState());
		enterRule(_localctx, 402, RULE_source_computer);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5626);
			match(SOURCE_COMPUTER);
			setState(5630);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5627);
				separator();
				}
				}
				setState(5632);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5633);
			match(DOT_);
			setState(5637);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,937,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5634);
					separator();
					}
					} 
				}
				setState(5639);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,937,_ctx);
			}
			setState(5658);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ALPHA || _la==I64 || _la==VAX || _la==USER_DEFINED_WORD) {
				{
				setState(5640);
				computer_type();
				setState(5648);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,939,_ctx) ) {
				case 1:
					{
					setState(5642); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5641);
						separator();
						}
						}
						setState(5644); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(5646);
					with_debugging();
					}
					break;
				}
				setState(5653);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(5650);
					separator();
					}
					}
					setState(5655);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(5656);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Computer_typeContext extends ParserRuleContext {
		public TerminalNode ALPHA() { return getToken(cobolParser.ALPHA, 0); }
		public TerminalNode I64() { return getToken(cobolParser.I64, 0); }
		public TerminalNode VAX() { return getToken(cobolParser.VAX, 0); }
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Computer_typeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_computer_type; }
	}

	public final Computer_typeContext computer_type() throws RecognitionException {
		Computer_typeContext _localctx = new Computer_typeContext(_ctx, getState());
		enterRule(_localctx, 404, RULE_computer_type);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5660);
			_la = _input.LA(1);
			if ( !(_la==ALPHA || _la==I64 || _la==VAX || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class With_debuggingContext extends ParserRuleContext {
		public TerminalNode DEBUGGING() { return getToken(cobolParser.DEBUGGING, 0); }
		public TerminalNode MODE() { return getToken(cobolParser.MODE, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public With_debuggingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_with_debugging; }
	}

	public final With_debuggingContext with_debugging() throws RecognitionException {
		With_debuggingContext _localctx = new With_debuggingContext(_ctx, getState());
		enterRule(_localctx, 406, RULE_with_debugging);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5668);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WITH) {
				{
				setState(5662);
				match(WITH);
				setState(5664); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5663);
					separator();
					}
					}
					setState(5666); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(5670);
			match(DEBUGGING);
			setState(5672); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5671);
				separator();
				}
				}
				setState(5674); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5676);
			match(MODE);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Object_computerContext extends ParserRuleContext {
		public TerminalNode OBJECT_COMPUTER() { return getToken(cobolParser.OBJECT_COMPUTER, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Computer_typeContext computer_type() {
			return getRuleContext(Computer_typeContext.class,0);
		}
		public Memory_sizeContext memory_size() {
			return getRuleContext(Memory_sizeContext.class,0);
		}
		public Program_collatingContext program_collating() {
			return getRuleContext(Program_collatingContext.class,0);
		}
		public Segment_limitContext segment_limit() {
			return getRuleContext(Segment_limitContext.class,0);
		}
		public Object_computerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_object_computer; }
	}

	public final Object_computerContext object_computer() throws RecognitionException {
		Object_computerContext _localctx = new Object_computerContext(_ctx, getState());
		enterRule(_localctx, 408, RULE_object_computer);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5678);
			match(OBJECT_COMPUTER);
			setState(5682);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5679);
				separator();
				}
				}
				setState(5684);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5685);
			match(DOT_);
			setState(5689);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,946,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5686);
					separator();
					}
					} 
				}
				setState(5691);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,946,_ctx);
			}
			setState(5728);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ALPHA || _la==I64 || _la==VAX || _la==USER_DEFINED_WORD) {
				{
				setState(5692);
				computer_type();
				setState(5700);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,948,_ctx) ) {
				case 1:
					{
					setState(5694); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5693);
						separator();
						}
						}
						setState(5696); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(5698);
					memory_size();
					}
					break;
				}
				setState(5709);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,950,_ctx) ) {
				case 1:
					{
					setState(5703); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5702);
						separator();
						}
						}
						setState(5705); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(5707);
					program_collating();
					}
					break;
				}
				setState(5718);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,952,_ctx) ) {
				case 1:
					{
					setState(5712); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5711);
						separator();
						}
						}
						setState(5714); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(5716);
					segment_limit();
					}
					break;
				}
				setState(5723);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(5720);
					separator();
					}
					}
					setState(5725);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(5726);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Memory_sizeContext extends ParserRuleContext {
		public TerminalNode MEMORY() { return getToken(cobolParser.MEMORY, 0); }
		public Memory_size_amountContext memory_size_amount() {
			return getRuleContext(Memory_size_amountContext.class,0);
		}
		public Memory_size_unitContext memory_size_unit() {
			return getRuleContext(Memory_size_unitContext.class,0);
		}
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Memory_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_memory_size; }
	}

	public final Memory_sizeContext memory_size() throws RecognitionException {
		Memory_sizeContext _localctx = new Memory_sizeContext(_ctx, getState());
		enterRule(_localctx, 410, RULE_memory_size);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5730);
			match(MEMORY);
			setState(5738);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,956,_ctx) ) {
			case 1:
				{
				setState(5732); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5731);
					separator();
					}
					}
					setState(5734); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5736);
				match(SIZE);
				}
				break;
			}
			setState(5741); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5740);
				separator();
				}
				}
				setState(5743); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5745);
			memory_size_amount();
			setState(5747); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5746);
				separator();
				}
				}
				setState(5749); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5751);
			memory_size_unit();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Memory_size_amountContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Memory_size_amountContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_memory_size_amount; }
	}

	public final Memory_size_amountContext memory_size_amount() throws RecognitionException {
		Memory_size_amountContext _localctx = new Memory_size_amountContext(_ctx, getState());
		enterRule(_localctx, 412, RULE_memory_size_amount);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5753);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Memory_size_unitContext extends ParserRuleContext {
		public TerminalNode WORDS() { return getToken(cobolParser.WORDS, 0); }
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public TerminalNode MODULES() { return getToken(cobolParser.MODULES, 0); }
		public Memory_size_unitContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_memory_size_unit; }
	}

	public final Memory_size_unitContext memory_size_unit() throws RecognitionException {
		Memory_size_unitContext _localctx = new Memory_size_unitContext(_ctx, getState());
		enterRule(_localctx, 414, RULE_memory_size_unit);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5755);
			_la = _input.LA(1);
			if ( !(_la==CHARACTERS || _la==MODULES || _la==WORDS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Program_collatingContext extends ParserRuleContext {
		public TerminalNode SEQUENCE() { return getToken(cobolParser.SEQUENCE, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public TerminalNode COLLATING() { return getToken(cobolParser.COLLATING, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Program_collatingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program_collating; }
	}

	public final Program_collatingContext program_collating() throws RecognitionException {
		Program_collatingContext _localctx = new Program_collatingContext(_ctx, getState());
		enterRule(_localctx, 416, RULE_program_collating);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5763);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==PROGRAM) {
				{
				setState(5757);
				match(PROGRAM);
				setState(5759); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5758);
					separator();
					}
					}
					setState(5761); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(5771);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==COLLATING) {
				{
				setState(5765);
				match(COLLATING);
				setState(5767); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5766);
					separator();
					}
					}
					setState(5769); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(5773);
			match(SEQUENCE);
			setState(5781);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,964,_ctx) ) {
			case 1:
				{
				setState(5775); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5774);
					separator();
					}
					}
					setState(5777); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5779);
				match(IS);
				}
				break;
			}
			setState(5784); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5783);
				separator();
				}
				}
				setState(5786); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5788);
			alpha_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alpha_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Alpha_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alpha_name; }
	}

	public final Alpha_nameContext alpha_name() throws RecognitionException {
		Alpha_nameContext _localctx = new Alpha_nameContext(_ctx, getState());
		enterRule(_localctx, 418, RULE_alpha_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5790);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Segment_limitContext extends ParserRuleContext {
		public TerminalNode SEGMENT_LIMIT() { return getToken(cobolParser.SEGMENT_LIMIT, 0); }
		public Segment_numberContext segment_number() {
			return getRuleContext(Segment_numberContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Segment_limitContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_segment_limit; }
	}

	public final Segment_limitContext segment_limit() throws RecognitionException {
		Segment_limitContext _localctx = new Segment_limitContext(_ctx, getState());
		enterRule(_localctx, 420, RULE_segment_limit);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5792);
			match(SEGMENT_LIMIT);
			setState(5800);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				setState(5794); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5793);
					separator();
					}
					}
					setState(5796); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5798);
				match(IS);
				}
			}

			setState(5802);
			segment_number();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Segment_numberContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Segment_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_segment_number; }
	}

	public final Segment_numberContext segment_number() throws RecognitionException {
		Segment_numberContext _localctx = new Segment_numberContext(_ctx, getState());
		enterRule(_localctx, 422, RULE_segment_number);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5804);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Special_namesContext extends ParserRuleContext {
		public TerminalNode SPECIAL_NAMES() { return getToken(cobolParser.SPECIAL_NAMES, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Special_names_contentContext> special_names_content() {
			return getRuleContexts(Special_names_contentContext.class);
		}
		public Special_names_contentContext special_names_content(int i) {
			return getRuleContext(Special_names_contentContext.class,i);
		}
		public Special_namesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_special_names; }
	}

	public final Special_namesContext special_names() throws RecognitionException {
		Special_namesContext _localctx = new Special_namesContext(_ctx, getState());
		enterRule(_localctx, 424, RULE_special_names);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5806);
			match(SPECIAL_NAMES);
			setState(5810);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(5807);
				separator();
				}
				}
				setState(5812);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5813);
			match(DOT_);
			setState(5817);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,969,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5814);
					separator();
					}
					} 
				}
				setState(5819);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,969,_ctx);
			}
			setState(5833);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ALPHABET) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << C01) | (1L << CARD_READER) | (1L << CLASS))) != 0) || ((((_la - 81)) & ~0x3f) == 0 && ((1L << (_la - 81)) & ((1L << (CONSOLE - 81)) | (1L << (CRT - 81)) | (1L << (CURRENCY - 81)) | (1L << (CURSOR - 81)) | (1L << (DECIMAL_POINT - 81)))) != 0) || _la==ENVIRONMENT_NAME || _la==ENVIRONMENT_VALUE || ((((_la - 221)) & ~0x3f) == 0 && ((1L << (_la - 221)) & ((1L << (LINE_PRINTER - 221)) | (1L << (PAPER_TAPE_PUNCH - 221)) | (1L << (PAPER_TAPE_READER - 221)))) != 0) || ((((_la - 343)) & ~0x3f) == 0 && ((1L << (_la - 343)) & ((1L << (SWITCH - 343)) | (1L << (SYMBOLIC - 343)) | (1L << (SYSERR - 343)) | (1L << (SYSIN - 343)) | (1L << (SYSOUT - 343)))) != 0)) {
				{
				setState(5827); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5820);
					special_names_content();
					setState(5824);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(5821);
						separator();
						}
						}
						setState(5826);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(5829); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ALPHABET) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << C01) | (1L << CARD_READER) | (1L << CLASS))) != 0) || ((((_la - 81)) & ~0x3f) == 0 && ((1L << (_la - 81)) & ((1L << (CONSOLE - 81)) | (1L << (CRT - 81)) | (1L << (CURRENCY - 81)) | (1L << (CURSOR - 81)) | (1L << (DECIMAL_POINT - 81)))) != 0) || _la==ENVIRONMENT_NAME || _la==ENVIRONMENT_VALUE || ((((_la - 221)) & ~0x3f) == 0 && ((1L << (_la - 221)) & ((1L << (LINE_PRINTER - 221)) | (1L << (PAPER_TAPE_PUNCH - 221)) | (1L << (PAPER_TAPE_READER - 221)))) != 0) || ((((_la - 343)) & ~0x3f) == 0 && ((1L << (_la - 343)) & ((1L << (SWITCH - 343)) | (1L << (SYMBOLIC - 343)) | (1L << (SYSERR - 343)) | (1L << (SYSIN - 343)) | (1L << (SYSOUT - 343)))) != 0) );
				setState(5831);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Special_names_contentContext extends ParserRuleContext {
		public Predefined_deviceContext predefined_device() {
			return getRuleContext(Predefined_deviceContext.class,0);
		}
		public Device_nameContext device_name() {
			return getRuleContext(Device_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Arg_envContext arg_env() {
			return getRuleContext(Arg_envContext.class,0);
		}
		public Arg_env_nameContext arg_env_name() {
			return getRuleContext(Arg_env_nameContext.class,0);
		}
		public TerminalNode C01() { return getToken(cobolParser.C01, 0); }
		public Top_of_page_nameContext top_of_page_name() {
			return getRuleContext(Top_of_page_nameContext.class,0);
		}
		public Switch_Context switch_() {
			return getRuleContext(Switch_Context.class,0);
		}
		public AlphabetContext alphabet() {
			return getRuleContext(AlphabetContext.class,0);
		}
		public Symbolic_charsContext symbolic_chars() {
			return getRuleContext(Symbolic_charsContext.class,0);
		}
		public Class_Context class_() {
			return getRuleContext(Class_Context.class,0);
		}
		public CurrencyContext currency() {
			return getRuleContext(CurrencyContext.class,0);
		}
		public TerminalNode DECIMAL_POINT() { return getToken(cobolParser.DECIMAL_POINT, 0); }
		public TerminalNode COMMA() { return getToken(cobolParser.COMMA, 0); }
		public TerminalNode CURSOR() { return getToken(cobolParser.CURSOR, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode CRT() { return getToken(cobolParser.CRT, 0); }
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public Special_names_contentContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_special_names_content; }
	}

	public final Special_names_contentContext special_names_content() throws RecognitionException {
		Special_names_contentContext _localctx = new Special_names_contentContext(_ctx, getState());
		enterRule(_localctx, 426, RULE_special_names_content);
		int _la;
		try {
			setState(5942);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case CARD_READER:
			case CONSOLE:
			case LINE_PRINTER:
			case PAPER_TAPE_PUNCH:
			case PAPER_TAPE_READER:
			case SYSERR:
			case SYSIN:
			case SYSOUT:
				enterOuterAlt(_localctx, 1);
				{
				setState(5835);
				predefined_device();
				setState(5837); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5836);
					separator();
					}
					}
					setState(5839); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5847);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5841);
					match(IS);
					setState(5843); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5842);
						separator();
						}
						}
						setState(5845); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5849);
				device_name();
				}
				break;
			case ARGUMENT_NUMBER:
			case ARGUMENT_VALUE:
			case ENVIRONMENT_NAME:
			case ENVIRONMENT_VALUE:
				enterOuterAlt(_localctx, 2);
				{
				setState(5851);
				arg_env();
				setState(5853); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5852);
					separator();
					}
					}
					setState(5855); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5863);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5857);
					match(IS);
					setState(5859); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5858);
						separator();
						}
						}
						setState(5861); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5865);
				arg_env_name();
				}
				break;
			case C01:
				enterOuterAlt(_localctx, 3);
				{
				setState(5867);
				match(C01);
				setState(5869); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5868);
					separator();
					}
					}
					setState(5871); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5879);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5873);
					match(IS);
					setState(5875); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5874);
						separator();
						}
						}
						setState(5877); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5881);
				top_of_page_name();
				}
				break;
			case SWITCH:
				enterOuterAlt(_localctx, 4);
				{
				setState(5883);
				switch_();
				}
				break;
			case ALPHABET:
				enterOuterAlt(_localctx, 5);
				{
				setState(5884);
				alphabet();
				}
				break;
			case SYMBOLIC:
				enterOuterAlt(_localctx, 6);
				{
				setState(5885);
				symbolic_chars();
				}
				break;
			case CLASS:
				enterOuterAlt(_localctx, 7);
				{
				setState(5886);
				class_();
				}
				break;
			case CURRENCY:
				enterOuterAlt(_localctx, 8);
				{
				setState(5887);
				currency();
				}
				break;
			case DECIMAL_POINT:
				enterOuterAlt(_localctx, 9);
				{
				setState(5888);
				match(DECIMAL_POINT);
				setState(5890); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5889);
					separator();
					}
					}
					setState(5892); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5900);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5894);
					match(IS);
					setState(5896); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5895);
						separator();
						}
						}
						setState(5898); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5902);
				match(COMMA);
				}
				break;
			case CURSOR:
				enterOuterAlt(_localctx, 10);
				{
				setState(5904);
				match(CURSOR);
				setState(5906); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5905);
					separator();
					}
					}
					setState(5908); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5916);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5910);
					match(IS);
					setState(5912); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5911);
						separator();
						}
						}
						setState(5914); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5918);
				qualified_data_item();
				}
				break;
			case CRT:
				enterOuterAlt(_localctx, 11);
				{
				setState(5920);
				match(CRT);
				setState(5922); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5921);
					separator();
					}
					}
					setState(5924); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5926);
				match(STATUS);
				setState(5928); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5927);
					separator();
					}
					}
					setState(5930); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(5938);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5932);
					match(IS);
					setState(5934); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5933);
						separator();
						}
						}
						setState(5936); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5940);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Qualified_data_itemContext extends ParserRuleContext {
		public List<TerminalNode> USER_DEFINED_WORD() { return getTokens(cobolParser.USER_DEFINED_WORD); }
		public TerminalNode USER_DEFINED_WORD(int i) {
			return getToken(cobolParser.USER_DEFINED_WORD, i);
		}
		public List<TerminalNode> IN() { return getTokens(cobolParser.IN); }
		public TerminalNode IN(int i) {
			return getToken(cobolParser.IN, i);
		}
		public List<TerminalNode> OF() { return getTokens(cobolParser.OF); }
		public TerminalNode OF(int i) {
			return getToken(cobolParser.OF, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Qualified_data_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_qualified_data_item; }
	}

	public final Qualified_data_itemContext qualified_data_item() throws RecognitionException {
		Qualified_data_itemContext _localctx = new Qualified_data_itemContext(_ctx, getState());
		enterRule(_localctx, 428, RULE_qualified_data_item);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5944);
			match(USER_DEFINED_WORD);
			setState(5960);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,995,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5946); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5945);
						separator();
						}
						}
						setState(5948); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(5950);
					_la = _input.LA(1);
					if ( !(_la==IN || _la==OF) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(5952); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5951);
						separator();
						}
						}
						setState(5954); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(5956);
					match(USER_DEFINED_WORD);
					}
					} 
				}
				setState(5962);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,995,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class CurrencyContext extends ParserRuleContext {
		public TerminalNode CURRENCY() { return getToken(cobolParser.CURRENCY, 0); }
		public Currency_definitionContext currency_definition() {
			return getRuleContext(Currency_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode SIGN() { return getToken(cobolParser.SIGN, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public CurrencyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_currency; }
	}

	public final CurrencyContext currency() throws RecognitionException {
		CurrencyContext _localctx = new CurrencyContext(_ctx, getState());
		enterRule(_localctx, 430, RULE_currency);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5963);
			match(CURRENCY);
			setState(5965); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5964);
				separator();
				}
				}
				setState(5967); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(5975);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SIGN) {
				{
				setState(5969);
				match(SIGN);
				setState(5971); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5970);
					separator();
					}
					}
					setState(5973); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(5983);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5977);
				match(IS);
				setState(5979); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5978);
					separator();
					}
					}
					setState(5981); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(5985);
			currency_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Currency_definitionContext extends ParserRuleContext {
		public Literal_7Context literal_7() {
			return getRuleContext(Literal_7Context.class,0);
		}
		public TerminalNode PICTURE() { return getToken(cobolParser.PICTURE, 0); }
		public TerminalNode SYMBOL() { return getToken(cobolParser.SYMBOL, 0); }
		public Literal_8Context literal_8() {
			return getRuleContext(Literal_8Context.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Currency_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_currency_definition; }
	}

	public final Currency_definitionContext currency_definition() throws RecognitionException {
		Currency_definitionContext _localctx = new Currency_definitionContext(_ctx, getState());
		enterRule(_localctx, 432, RULE_currency_definition);
		int _la;
		try {
			setState(6011);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1005,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(5987);
				literal_7();
				setState(5994);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(5988);
					match(WITH);
					setState(5990); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5989);
						separator();
						}
						}
						setState(5992); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(5996);
				match(PICTURE);
				setState(5998); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5997);
					separator();
					}
					}
					setState(6000); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6002);
				match(SYMBOL);
				setState(6004); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6003);
					separator();
					}
					}
					setState(6006); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6008);
				literal_8();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(6010);
				match(STRING_LITERAL);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Literal_7Context extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Literal_7Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_literal_7; }
	}

	public final Literal_7Context literal_7() throws RecognitionException {
		Literal_7Context _localctx = new Literal_7Context(_ctx, getState());
		enterRule(_localctx, 434, RULE_literal_7);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6013);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Literal_8Context extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Literal_8Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_literal_8; }
	}

	public final Literal_8Context literal_8() throws RecognitionException {
		Literal_8Context _localctx = new Literal_8Context(_ctx, getState());
		enterRule(_localctx, 436, RULE_literal_8);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6015);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_Context extends ParserRuleContext {
		public TerminalNode CLASS() { return getToken(cobolParser.CLASS, 0); }
		public Class_nameContext class_name() {
			return getRuleContext(Class_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<User_classContext> user_class() {
			return getRuleContexts(User_classContext.class);
		}
		public User_classContext user_class(int i) {
			return getRuleContext(User_classContext.class,i);
		}
		public Class_Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_; }
	}

	public final Class_Context class_() throws RecognitionException {
		Class_Context _localctx = new Class_Context(_ctx, getState());
		enterRule(_localctx, 438, RULE_class_);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6017);
			match(CLASS);
			setState(6019); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6018);
				separator();
				}
				}
				setState(6021); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6023);
			class_name();
			setState(6025); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6024);
				separator();
				}
				}
				setState(6027); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6035);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6029);
				match(IS);
				setState(6031); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6030);
					separator();
					}
					}
					setState(6033); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6044); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6037);
				user_class();
				setState(6041);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1010,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(6038);
						separator();
						}
						} 
					}
					setState(6043);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1010,_ctx);
				}
				}
				}
				setState(6046); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==STRING_LITERAL || _la==NUMERIC_LITERAL );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Class_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_name; }
	}

	public final Class_nameContext class_name() throws RecognitionException {
		Class_nameContext _localctx = new Class_nameContext(_ctx, getState());
		enterRule(_localctx, 440, RULE_class_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6048);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class User_classContext extends ParserRuleContext {
		public First_literalContext first_literal() {
			return getRuleContext(First_literalContext.class,0);
		}
		public Last_literalContext last_literal() {
			return getRuleContext(Last_literalContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public User_classContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_user_class; }
	}

	public final User_classContext user_class() throws RecognitionException {
		User_classContext _localctx = new User_classContext(_ctx, getState());
		enterRule(_localctx, 442, RULE_user_class);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6050);
			first_literal();
			setState(6064);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1014,_ctx) ) {
			case 1:
				{
				setState(6052); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6051);
					separator();
					}
					}
					setState(6054); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6056);
				_la = _input.LA(1);
				if ( !(_la==THROUGH || _la==THRU) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(6058); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6057);
					separator();
					}
					}
					setState(6060); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6062);
				last_literal();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symbolic_charsContext extends ParserRuleContext {
		public TerminalNode SYMBOLIC() { return getToken(cobolParser.SYMBOLIC, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public List<Symb_ch_definitionContext> symb_ch_definition() {
			return getRuleContexts(Symb_ch_definitionContext.class);
		}
		public Symb_ch_definitionContext symb_ch_definition(int i) {
			return getRuleContext(Symb_ch_definitionContext.class,i);
		}
		public Symbolic_charsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symbolic_chars; }
	}

	public final Symbolic_charsContext symbolic_chars() throws RecognitionException {
		Symbolic_charsContext _localctx = new Symbolic_charsContext(_ctx, getState());
		enterRule(_localctx, 444, RULE_symbolic_chars);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6066);
			match(SYMBOLIC);
			setState(6068); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6067);
				separator();
				}
				}
				setState(6070); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6078);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CHARACTERS) {
				{
				setState(6072);
				match(CHARACTERS);
				setState(6074); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6073);
					separator();
					}
					}
					setState(6076); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6081); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6080);
				symb_ch_definition();
				}
				}
				setState(6083); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symb_ch_definitionContext extends ParserRuleContext {
		public List<Symb_ch_def_clauseContext> symb_ch_def_clause() {
			return getRuleContexts(Symb_ch_def_clauseContext.class);
		}
		public Symb_ch_def_clauseContext symb_ch_def_clause(int i) {
			return getRuleContext(Symb_ch_def_clauseContext.class,i);
		}
		public Symb_ch_def_in_alphabetContext symb_ch_def_in_alphabet() {
			return getRuleContext(Symb_ch_def_in_alphabetContext.class,0);
		}
		public Symb_ch_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symb_ch_definition; }
	}

	public final Symb_ch_definitionContext symb_ch_definition() throws RecognitionException {
		Symb_ch_definitionContext _localctx = new Symb_ch_definitionContext(_ctx, getState());
		enterRule(_localctx, 446, RULE_symb_ch_definition);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6086); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(6085);
					symb_ch_def_clause();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(6088); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1019,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(6091);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IN) {
				{
				setState(6090);
				symb_ch_def_in_alphabet();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symb_ch_def_clauseContext extends ParserRuleContext {
		public List<Symbol_charContext> symbol_char() {
			return getRuleContexts(Symbol_charContext.class);
		}
		public Symbol_charContext symbol_char(int i) {
			return getRuleContext(Symbol_charContext.class,i);
		}
		public List<Char_valContext> char_val() {
			return getRuleContexts(Char_valContext.class);
		}
		public Char_valContext char_val(int i) {
			return getRuleContext(Char_valContext.class,i);
		}
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Symb_ch_def_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symb_ch_def_clause; }
	}

	public final Symb_ch_def_clauseContext symb_ch_def_clause() throws RecognitionException {
		Symb_ch_def_clauseContext _localctx = new Symb_ch_def_clauseContext(_ctx, getState());
		enterRule(_localctx, 448, RULE_symb_ch_def_clause);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6099); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6093);
				symbol_char();
				setState(6095); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6094);
					separator();
					}
					}
					setState(6097); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
				}
				setState(6101); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			setState(6109);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ARE || _la==IS) {
				{
				setState(6103);
				_la = _input.LA(1);
				if ( !(_la==ARE || _la==IS) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(6105); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6104);
					separator();
					}
					}
					setState(6107); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6117); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6111);
				char_val();
				setState(6113); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(6112);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(6115); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1025,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				}
				setState(6119); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==NUMERIC_LITERAL );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symb_ch_def_in_alphabetContext extends ParserRuleContext {
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Symb_ch_def_in_alphabetContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symb_ch_def_in_alphabet; }
	}

	public final Symb_ch_def_in_alphabetContext symb_ch_def_in_alphabet() throws RecognitionException {
		Symb_ch_def_in_alphabetContext _localctx = new Symb_ch_def_in_alphabetContext(_ctx, getState());
		enterRule(_localctx, 450, RULE_symb_ch_def_in_alphabet);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6121);
			match(IN);
			setState(6123); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6122);
				separator();
				}
				}
				setState(6125); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6127);
			alpha_name();
			setState(6131);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1028,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6128);
					separator();
					}
					} 
				}
				setState(6133);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1028,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symbol_charContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Symbol_charContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symbol_char; }
	}

	public final Symbol_charContext symbol_char() throws RecognitionException {
		Symbol_charContext _localctx = new Symbol_charContext(_ctx, getState());
		enterRule(_localctx, 452, RULE_symbol_char);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6134);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Char_valContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Char_valContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_char_val; }
	}

	public final Char_valContext char_val() throws RecognitionException {
		Char_valContext _localctx = new Char_valContext(_ctx, getState());
		enterRule(_localctx, 454, RULE_char_val);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6136);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class AlphabetContext extends ParserRuleContext {
		public TerminalNode ALPHABET() { return getToken(cobolParser.ALPHABET, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public Alpha_valueContext alpha_value() {
			return getRuleContext(Alpha_valueContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public AlphabetContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alphabet; }
	}

	public final AlphabetContext alphabet() throws RecognitionException {
		AlphabetContext _localctx = new AlphabetContext(_ctx, getState());
		enterRule(_localctx, 456, RULE_alphabet);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6138);
			match(ALPHABET);
			setState(6140); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6139);
				separator();
				}
				}
				setState(6142); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6144);
			alpha_name();
			setState(6146); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6145);
				separator();
				}
				}
				setState(6148); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6156);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6150);
				match(IS);
				setState(6152); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6151);
					separator();
					}
					}
					setState(6154); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6158);
			alpha_value();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alpha_valueContext extends ParserRuleContext {
		public TerminalNode ASCII() { return getToken(cobolParser.ASCII, 0); }
		public TerminalNode STANDARD_1() { return getToken(cobolParser.STANDARD_1, 0); }
		public TerminalNode STANDARD_2() { return getToken(cobolParser.STANDARD_2, 0); }
		public TerminalNode NATIVE() { return getToken(cobolParser.NATIVE, 0); }
		public TerminalNode EBCDIC() { return getToken(cobolParser.EBCDIC, 0); }
		public List<User_alphaContext> user_alpha() {
			return getRuleContexts(User_alphaContext.class);
		}
		public User_alphaContext user_alpha(int i) {
			return getRuleContext(User_alphaContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Alpha_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alpha_value; }
	}

	public final Alpha_valueContext alpha_value() throws RecognitionException {
		Alpha_valueContext _localctx = new Alpha_valueContext(_ctx, getState());
		enterRule(_localctx, 458, RULE_alpha_value);
		int _la;
		try {
			int _alt;
			setState(6176);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ASCII:
				enterOuterAlt(_localctx, 1);
				{
				setState(6160);
				match(ASCII);
				}
				break;
			case STANDARD_1:
				enterOuterAlt(_localctx, 2);
				{
				setState(6161);
				match(STANDARD_1);
				}
				break;
			case STANDARD_2:
				enterOuterAlt(_localctx, 3);
				{
				setState(6162);
				match(STANDARD_2);
				}
				break;
			case NATIVE:
				enterOuterAlt(_localctx, 4);
				{
				setState(6163);
				match(NATIVE);
				}
				break;
			case EBCDIC:
				enterOuterAlt(_localctx, 5);
				{
				setState(6164);
				match(EBCDIC);
				}
				break;
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 6);
				{
				setState(6172); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6165);
					user_alpha();
					setState(6169);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1033,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(6166);
							separator();
							}
							} 
						}
						setState(6171);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,1033,_ctx);
					}
					}
					}
					setState(6174); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( _la==STRING_LITERAL || _la==NUMERIC_LITERAL );
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class User_alphaContext extends ParserRuleContext {
		public First_literalContext first_literal() {
			return getRuleContext(First_literalContext.class,0);
		}
		public Last_literalContext last_literal() {
			return getRuleContext(Last_literalContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> ALSO() { return getTokens(cobolParser.ALSO); }
		public TerminalNode ALSO(int i) {
			return getToken(cobolParser.ALSO, i);
		}
		public List<Same_literalContext> same_literal() {
			return getRuleContexts(Same_literalContext.class);
		}
		public Same_literalContext same_literal(int i) {
			return getRuleContext(Same_literalContext.class,i);
		}
		public User_alphaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_user_alpha; }
	}

	public final User_alphaContext user_alpha() throws RecognitionException {
		User_alphaContext _localctx = new User_alphaContext(_ctx, getState());
		enterRule(_localctx, 460, RULE_user_alpha);
		int _la;
		try {
			int _alt;
			setState(6212);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1042,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(6178);
				first_literal();
				setState(6192);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1038,_ctx) ) {
				case 1:
					{
					setState(6180); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6179);
						separator();
						}
						}
						setState(6182); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(6184);
					_la = _input.LA(1);
					if ( !(_la==THROUGH || _la==THRU) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(6186); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6185);
						separator();
						}
						}
						setState(6188); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(6190);
					last_literal();
					}
					break;
				}
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(6194);
				first_literal();
				setState(6208); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(6196); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6195);
							separator();
							}
							}
							setState(6198); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(6200);
						match(ALSO);
						setState(6202); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6201);
							separator();
							}
							}
							setState(6204); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(6206);
						same_literal();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(6210); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1041,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class First_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public First_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_first_literal; }
	}

	public final First_literalContext first_literal() throws RecognitionException {
		First_literalContext _localctx = new First_literalContext(_ctx, getState());
		enterRule(_localctx, 462, RULE_first_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6214);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Last_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Last_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_last_literal; }
	}

	public final Last_literalContext last_literal() throws RecognitionException {
		Last_literalContext _localctx = new Last_literalContext(_ctx, getState());
		enterRule(_localctx, 464, RULE_last_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6216);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Same_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Same_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_same_literal; }
	}

	public final Same_literalContext same_literal() throws RecognitionException {
		Same_literalContext _localctx = new Same_literalContext(_ctx, getState());
		enterRule(_localctx, 466, RULE_same_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6218);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_Context extends ParserRuleContext {
		public TerminalNode SWITCH() { return getToken(cobolParser.SWITCH, 0); }
		public Switch_numContext switch_num() {
			return getRuleContext(Switch_numContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Switch_nameContext switch_name() {
			return getRuleContext(Switch_nameContext.class,0);
		}
		public Switch_clause_onContext switch_clause_on() {
			return getRuleContext(Switch_clause_onContext.class,0);
		}
		public Switch_clause_offContext switch_clause_off() {
			return getRuleContext(Switch_clause_offContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Switch_Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_; }
	}

	public final Switch_Context switch_() throws RecognitionException {
		Switch_Context _localctx = new Switch_Context(_ctx, getState());
		enterRule(_localctx, 468, RULE_switch_);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6220);
			match(SWITCH);
			setState(6222); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6221);
				separator();
				}
				}
				setState(6224); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6226);
			switch_num();
			setState(6230);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1044,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6227);
					separator();
					}
					} 
				}
				setState(6232);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1044,_ctx);
			}
			setState(6247);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS || _la==USER_DEFINED_WORD) {
				{
				setState(6239);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6233);
					match(IS);
					setState(6235); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6234);
						separator();
						}
						}
						setState(6237); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(6241);
				switch_name();
				setState(6243); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(6242);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(6245); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1047,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
			}

			setState(6269);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ON:
				{
				setState(6249);
				switch_clause_on();
				setState(6257);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1050,_ctx) ) {
				case 1:
					{
					setState(6251); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6250);
						separator();
						}
						}
						setState(6253); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(6255);
					switch_clause_off();
					}
					break;
				}
				}
				break;
			case OFF:
				{
				setState(6259);
				switch_clause_off();
				setState(6267);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1052,_ctx) ) {
				case 1:
					{
					setState(6261); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6260);
						separator();
						}
						}
						setState(6263); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(6265);
					switch_clause_on();
					}
					break;
				}
				}
				break;
			case ALPHABET:
			case ARGUMENT_NUMBER:
			case ARGUMENT_VALUE:
			case C01:
			case CARD_READER:
			case CLASS:
			case CONSOLE:
			case CRT:
			case CURRENCY:
			case CURSOR:
			case DECIMAL_POINT:
			case ENVIRONMENT_NAME:
			case ENVIRONMENT_VALUE:
			case LINE_PRINTER:
			case PAPER_TAPE_PUNCH:
			case PAPER_TAPE_READER:
			case SWITCH:
			case SYMBOLIC:
			case SYSERR:
			case SYSIN:
			case SYSOUT:
			case START_SLASH_:
			case START_STAR_:
			case COMMA_:
			case SEMI_:
			case DOT_:
			case START_FOUR_SPACES:
			case WHITESPACE:
			case NEWLINE:
				break;
			default:
				break;
			}
			setState(6274);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1054,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6271);
					separator();
					}
					} 
				}
				setState(6276);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1054,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_clause_onContext extends ParserRuleContext {
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Cond_nameContext cond_name() {
			return getRuleContext(Cond_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Switch_clause_onContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_clause_on; }
	}

	public final Switch_clause_onContext switch_clause_on() throws RecognitionException {
		Switch_clause_onContext _localctx = new Switch_clause_onContext(_ctx, getState());
		enterRule(_localctx, 470, RULE_switch_clause_on);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6277);
			match(ON);
			setState(6279); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6278);
				separator();
				}
				}
				setState(6281); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6289);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==STATUS) {
				{
				setState(6283);
				match(STATUS);
				setState(6285); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6284);
					separator();
					}
					}
					setState(6287); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6297);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6291);
				match(IS);
				setState(6293); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6292);
					separator();
					}
					}
					setState(6295); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6299);
			cond_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_clause_offContext extends ParserRuleContext {
		public TerminalNode OFF() { return getToken(cobolParser.OFF, 0); }
		public Cond_nameContext cond_name() {
			return getRuleContext(Cond_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Switch_clause_offContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_clause_off; }
	}

	public final Switch_clause_offContext switch_clause_off() throws RecognitionException {
		Switch_clause_offContext _localctx = new Switch_clause_offContext(_ctx, getState());
		enterRule(_localctx, 472, RULE_switch_clause_off);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6301);
			match(OFF);
			setState(6303); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6302);
				separator();
				}
				}
				setState(6305); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6313);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==STATUS) {
				{
				setState(6307);
				match(STATUS);
				setState(6309); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6308);
					separator();
					}
					}
					setState(6311); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6321);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6315);
				match(IS);
				setState(6317); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6316);
					separator();
					}
					}
					setState(6319); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6323);
			cond_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Cond_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Cond_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_cond_name; }
	}

	public final Cond_nameContext cond_name() throws RecognitionException {
		Cond_nameContext _localctx = new Cond_nameContext(_ctx, getState());
		enterRule(_localctx, 474, RULE_cond_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6325);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Switch_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_name; }
	}

	public final Switch_nameContext switch_name() throws RecognitionException {
		Switch_nameContext _localctx = new Switch_nameContext(_ctx, getState());
		enterRule(_localctx, 476, RULE_switch_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6327);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Switch_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_num; }
	}

	public final Switch_numContext switch_num() throws RecognitionException {
		Switch_numContext _localctx = new Switch_numContext(_ctx, getState());
		enterRule(_localctx, 478, RULE_switch_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6329);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Top_of_page_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Top_of_page_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_top_of_page_name; }
	}

	public final Top_of_page_nameContext top_of_page_name() throws RecognitionException {
		Top_of_page_nameContext _localctx = new Top_of_page_nameContext(_ctx, getState());
		enterRule(_localctx, 480, RULE_top_of_page_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6331);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Predefined_deviceContext extends ParserRuleContext {
		public TerminalNode CARD_READER() { return getToken(cobolParser.CARD_READER, 0); }
		public TerminalNode PAPER_TAPE_READER() { return getToken(cobolParser.PAPER_TAPE_READER, 0); }
		public TerminalNode CONSOLE() { return getToken(cobolParser.CONSOLE, 0); }
		public TerminalNode LINE_PRINTER() { return getToken(cobolParser.LINE_PRINTER, 0); }
		public TerminalNode PAPER_TAPE_PUNCH() { return getToken(cobolParser.PAPER_TAPE_PUNCH, 0); }
		public TerminalNode SYSIN() { return getToken(cobolParser.SYSIN, 0); }
		public TerminalNode SYSOUT() { return getToken(cobolParser.SYSOUT, 0); }
		public TerminalNode SYSERR() { return getToken(cobolParser.SYSERR, 0); }
		public Predefined_deviceContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_predefined_device; }
	}

	public final Predefined_deviceContext predefined_device() throws RecognitionException {
		Predefined_deviceContext _localctx = new Predefined_deviceContext(_ctx, getState());
		enterRule(_localctx, 482, RULE_predefined_device);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6333);
			_la = _input.LA(1);
			if ( !(_la==CARD_READER || _la==CONSOLE || ((((_la - 221)) & ~0x3f) == 0 && ((1L << (_la - 221)) & ((1L << (LINE_PRINTER - 221)) | (1L << (PAPER_TAPE_PUNCH - 221)) | (1L << (PAPER_TAPE_READER - 221)))) != 0) || ((((_la - 348)) & ~0x3f) == 0 && ((1L << (_la - 348)) & ((1L << (SYSERR - 348)) | (1L << (SYSIN - 348)) | (1L << (SYSOUT - 348)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Device_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Device_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_device_name; }
	}

	public final Device_nameContext device_name() throws RecognitionException {
		Device_nameContext _localctx = new Device_nameContext(_ctx, getState());
		enterRule(_localctx, 484, RULE_device_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6335);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arg_envContext extends ParserRuleContext {
		public TerminalNode ARGUMENT_NUMBER() { return getToken(cobolParser.ARGUMENT_NUMBER, 0); }
		public TerminalNode ARGUMENT_VALUE() { return getToken(cobolParser.ARGUMENT_VALUE, 0); }
		public TerminalNode ENVIRONMENT_NAME() { return getToken(cobolParser.ENVIRONMENT_NAME, 0); }
		public TerminalNode ENVIRONMENT_VALUE() { return getToken(cobolParser.ENVIRONMENT_VALUE, 0); }
		public Arg_envContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arg_env; }
	}

	public final Arg_envContext arg_env() throws RecognitionException {
		Arg_envContext _localctx = new Arg_envContext(_ctx, getState());
		enterRule(_localctx, 486, RULE_arg_env);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6337);
			_la = _input.LA(1);
			if ( !(_la==ARGUMENT_NUMBER || _la==ARGUMENT_VALUE || _la==ENVIRONMENT_NAME || _la==ENVIRONMENT_VALUE) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arg_env_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Arg_env_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arg_env_name; }
	}

	public final Arg_env_nameContext arg_env_name() throws RecognitionException {
		Arg_env_nameContext _localctx = new Arg_env_nameContext(_ctx, getState());
		enterRule(_localctx, 488, RULE_arg_env_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6339);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_controlContext extends ParserRuleContext {
		public TerminalNode FILE_CONTROL() { return getToken(cobolParser.FILE_CONTROL, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<SelectContext> select() {
			return getRuleContexts(SelectContext.class);
		}
		public SelectContext select(int i) {
			return getRuleContext(SelectContext.class,i);
		}
		public File_controlContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_control; }
	}

	public final File_controlContext file_control() throws RecognitionException {
		File_controlContext _localctx = new File_controlContext(_ctx, getState());
		enterRule(_localctx, 490, RULE_file_control);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6341);
			match(FILE_CONTROL);
			setState(6345);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(6342);
				separator();
				}
				}
				setState(6347);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6348);
			match(DOT_);
			setState(6352);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1066,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6349);
					separator();
					}
					} 
				}
				setState(6354);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1066,_ctx);
			}
			setState(6364);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==SELECT) {
				{
				{
				setState(6355);
				select();
				setState(6359);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1067,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(6356);
						separator();
						}
						} 
					}
					setState(6361);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1067,_ctx);
				}
				}
				}
				setState(6366);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SelectContext extends ParserRuleContext {
		public TerminalNode SELECT() { return getToken(cobolParser.SELECT, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public Assign_toContext assign_to() {
			return getRuleContext(Assign_toContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode OPTIONAL() { return getToken(cobolParser.OPTIONAL, 0); }
		public ReserveContext reserve() {
			return getRuleContext(ReserveContext.class,0);
		}
		public OrganizationContext organization() {
			return getRuleContext(OrganizationContext.class,0);
		}
		public Block_containsContext block_contains() {
			return getRuleContext(Block_containsContext.class,0);
		}
		public Code_setContext code_set() {
			return getRuleContext(Code_setContext.class,0);
		}
		public PaddingContext padding() {
			return getRuleContext(PaddingContext.class,0);
		}
		public Record_delimiterContext record_delimiter() {
			return getRuleContext(Record_delimiterContext.class,0);
		}
		public Access_modeContext access_mode() {
			return getRuleContext(Access_modeContext.class,0);
		}
		public List<Record_keyContext> record_key() {
			return getRuleContexts(Record_keyContext.class);
		}
		public Record_keyContext record_key(int i) {
			return getRuleContext(Record_keyContext.class,i);
		}
		public Lock_modeContext lock_mode() {
			return getRuleContext(Lock_modeContext.class,0);
		}
		public File_statusContext file_status() {
			return getRuleContext(File_statusContext.class,0);
		}
		public SelectContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_select; }
	}

	public final SelectContext select() throws RecognitionException {
		SelectContext _localctx = new SelectContext(_ctx, getState());
		enterRule(_localctx, 492, RULE_select);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6367);
			match(SELECT);
			setState(6369); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6368);
				separator();
				}
				}
				setState(6371); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6379);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==OPTIONAL) {
				{
				setState(6373);
				match(OPTIONAL);
				setState(6375); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6374);
					separator();
					}
					}
					setState(6377); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6381);
			file_name();
			setState(6385);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(6382);
				separator();
				}
				}
				setState(6387);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6388);
			assign_to();
			setState(6392);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(6389);
				separator();
				}
				}
				setState(6394);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6402);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==RESERVE) {
				{
				setState(6395);
				reserve();
				setState(6399);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(6396);
					separator();
					}
					}
					setState(6401);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6411);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1077,_ctx) ) {
			case 1:
				{
				setState(6404);
				organization();
				setState(6408);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(6405);
					separator();
					}
					}
					setState(6410);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				break;
			}
			setState(6420);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==BLOCK) {
				{
				setState(6413);
				block_contains();
				setState(6417);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(6414);
					separator();
					}
					}
					setState(6419);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6429);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CODE_SET) {
				{
				setState(6422);
				code_set();
				setState(6426);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(6423);
					separator();
					}
					}
					setState(6428);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6438);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==PADDING) {
				{
				setState(6431);
				padding();
				setState(6435);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(6432);
					separator();
					}
					}
					setState(6437);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6447);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1085,_ctx) ) {
			case 1:
				{
				setState(6440);
				record_delimiter();
				setState(6444);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(6441);
					separator();
					}
					}
					setState(6446);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				break;
			}
			setState(6456);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ACCESS || _la==DYNAMIC || _la==RANDOM || _la==SEQUENTIAL) {
				{
				setState(6449);
				access_mode();
				setState(6453);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(6450);
					separator();
					}
					}
					setState(6455);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6467);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==ALTERNATE || _la==RECORD) {
				{
				{
				setState(6458);
				record_key();
				setState(6462);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(6459);
					separator();
					}
					}
					setState(6464);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(6469);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6477);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==LOCK) {
				{
				setState(6470);
				lock_mode();
				setState(6474);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(6471);
					separator();
					}
					}
					setState(6476);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6486);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE || _la==STATUS) {
				{
				setState(6479);
				file_status();
				setState(6483);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(6480);
					separator();
					}
					}
					setState(6485);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6488);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_statusContext extends ParserRuleContext {
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public File_statContext file_stat() {
			return getRuleContext(File_statContext.class,0);
		}
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public File_statusContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_status; }
	}

	public final File_statusContext file_status() throws RecognitionException {
		File_statusContext _localctx = new File_statusContext(_ctx, getState());
		enterRule(_localctx, 494, RULE_file_status);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6496);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE) {
				{
				setState(6490);
				match(FILE);
				setState(6492); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6491);
					separator();
					}
					}
					setState(6494); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6498);
			match(STATUS);
			setState(6500); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6499);
				separator();
				}
				}
				setState(6502); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6510);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6504);
				match(IS);
				setState(6506); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6505);
					separator();
					}
					}
					setState(6508); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6512);
			file_stat();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_statContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public File_statContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_stat; }
	}

	public final File_statContext file_stat() throws RecognitionException {
		File_statContext _localctx = new File_statContext(_ctx, getState());
		enterRule(_localctx, 496, RULE_file_stat);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6514);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_keyContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public Record_key_definitionContext record_key_definition() {
			return getRuleContext(Record_key_definitionContext.class,0);
		}
		public TerminalNode ALTERNATE() { return getToken(cobolParser.ALTERNATE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode DUPLICATES() { return getToken(cobolParser.DUPLICATES, 0); }
		public TerminalNode ASCENDING() { return getToken(cobolParser.ASCENDING, 0); }
		public TerminalNode DESCENDING() { return getToken(cobolParser.DESCENDING, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public Record_keyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_key; }
	}

	public final Record_keyContext record_key() throws RecognitionException {
		Record_keyContext _localctx = new Record_keyContext(_ctx, getState());
		enterRule(_localctx, 498, RULE_record_key);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6522);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ALTERNATE) {
				{
				setState(6516);
				match(ALTERNATE);
				setState(6518); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6517);
					separator();
					}
					}
					setState(6520); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6524);
			match(RECORD);
			setState(6526); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6525);
				separator();
				}
				}
				setState(6528); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6536);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==KEY) {
				{
				setState(6530);
				match(KEY);
				setState(6532); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6531);
					separator();
					}
					}
					setState(6534); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6544);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6538);
				match(IS);
				setState(6540); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6539);
					separator();
					}
					}
					setState(6542); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6546);
			record_key_definition();
			setState(6562);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1109,_ctx) ) {
			case 1:
				{
				setState(6548); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6547);
					separator();
					}
					}
					setState(6550); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6558);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(6552);
					match(WITH);
					setState(6554); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6553);
						separator();
						}
						}
						setState(6556); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(6560);
				match(DUPLICATES);
				}
				break;
			}
			setState(6571);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1111,_ctx) ) {
			case 1:
				{
				setState(6565); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6564);
					separator();
					}
					}
					setState(6567); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6569);
				_la = _input.LA(1);
				if ( !(_la==ASCENDING || _la==DESCENDING) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_key_definitionContext extends ParserRuleContext {
		public List<Qualified_data_itemContext> qualified_data_item() {
			return getRuleContexts(Qualified_data_itemContext.class);
		}
		public Qualified_data_itemContext qualified_data_item(int i) {
			return getRuleContext(Qualified_data_itemContext.class,i);
		}
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode EQUAL_() { return getToken(cobolParser.EQUAL_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Record_key_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_key_definition; }
	}

	public final Record_key_definitionContext record_key_definition() throws RecognitionException {
		Record_key_definitionContext _localctx = new Record_key_definitionContext(_ctx, getState());
		enterRule(_localctx, 500, RULE_record_key_definition);
		int _la;
		try {
			int _alt;
			setState(6601);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1116,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(6573);
				qualified_data_item();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(6574);
				match(USER_DEFINED_WORD);
				setState(6578);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(6575);
					separator();
					}
					}
					setState(6580);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6581);
				match(EQUAL_);
				setState(6585);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(6582);
					separator();
					}
					}
					setState(6587);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6588);
				qualified_data_item();
				setState(6598);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1115,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(6592);
						_errHandler.sync(this);
						_la = _input.LA(1);
						while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
							{
							{
							setState(6589);
							separator();
							}
							}
							setState(6594);
							_errHandler.sync(this);
							_la = _input.LA(1);
						}
						setState(6595);
						qualified_data_item();
						}
						} 
					}
					setState(6600);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1115,_ctx);
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Access_modeContext extends ParserRuleContext {
		public TerminalNode SEQUENTIAL() { return getToken(cobolParser.SEQUENTIAL, 0); }
		public TerminalNode RANDOM() { return getToken(cobolParser.RANDOM, 0); }
		public TerminalNode DYNAMIC() { return getToken(cobolParser.DYNAMIC, 0); }
		public TerminalNode ACCESS() { return getToken(cobolParser.ACCESS, 0); }
		public TerminalNode RELATIVE() { return getToken(cobolParser.RELATIVE, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode MODE() { return getToken(cobolParser.MODE, 0); }
		public List<TerminalNode> IS() { return getTokens(cobolParser.IS); }
		public TerminalNode IS(int i) {
			return getToken(cobolParser.IS, i);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Access_modeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_access_mode; }
	}

	public final Access_modeContext access_mode() throws RecognitionException {
		Access_modeContext _localctx = new Access_modeContext(_ctx, getState());
		enterRule(_localctx, 502, RULE_access_mode);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6625);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ACCESS) {
				{
				setState(6603);
				match(ACCESS);
				setState(6605); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6604);
					separator();
					}
					}
					setState(6607); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6615);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==MODE) {
					{
					setState(6609);
					match(MODE);
					setState(6611); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6610);
						separator();
						}
						}
						setState(6613); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(6623);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6617);
					match(IS);
					setState(6619); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6618);
						separator();
						}
						}
						setState(6621); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				}
			}

			setState(6627);
			_la = _input.LA(1);
			if ( !(_la==DYNAMIC || _la==RANDOM || _la==SEQUENTIAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(6657);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1129,_ctx) ) {
			case 1:
				{
				setState(6629); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6628);
					separator();
					}
					}
					setState(6631); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6633);
				match(RELATIVE);
				setState(6635); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6634);
					separator();
					}
					}
					setState(6637); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6645);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==KEY) {
					{
					setState(6639);
					match(KEY);
					setState(6641); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6640);
						separator();
						}
						}
						setState(6643); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(6653);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6647);
					match(IS);
					setState(6649); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6648);
						separator();
						}
						}
						setState(6651); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(6655);
				qualified_data_item();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ReserveContext extends ParserRuleContext {
		public TerminalNode RESERVE() { return getToken(cobolParser.RESERVE, 0); }
		public Reserve_numContext reserve_num() {
			return getRuleContext(Reserve_numContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode AREA() { return getToken(cobolParser.AREA, 0); }
		public TerminalNode AREAS() { return getToken(cobolParser.AREAS, 0); }
		public ReserveContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_reserve; }
	}

	public final ReserveContext reserve() throws RecognitionException {
		ReserveContext _localctx = new ReserveContext(_ctx, getState());
		enterRule(_localctx, 504, RULE_reserve);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6659);
			match(RESERVE);
			setState(6661); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6660);
				separator();
				}
				}
				setState(6663); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6665);
			reserve_num();
			setState(6673);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1132,_ctx) ) {
			case 1:
				{
				setState(6667); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6666);
					separator();
					}
					}
					setState(6669); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6671);
				_la = _input.LA(1);
				if ( !(_la==AREA || _la==AREAS) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Reserve_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Reserve_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_reserve_num; }
	}

	public final Reserve_numContext reserve_num() throws RecognitionException {
		Reserve_numContext _localctx = new Reserve_numContext(_ctx, getState());
		enterRule(_localctx, 506, RULE_reserve_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6675);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_delimiterContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode DELIMITER() { return getToken(cobolParser.DELIMITER, 0); }
		public TerminalNode STANDARD_1() { return getToken(cobolParser.STANDARD_1, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Record_delimiterContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_delimiter; }
	}

	public final Record_delimiterContext record_delimiter() throws RecognitionException {
		Record_delimiterContext _localctx = new Record_delimiterContext(_ctx, getState());
		enterRule(_localctx, 508, RULE_record_delimiter);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6677);
			match(RECORD);
			setState(6679); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6678);
				separator();
				}
				}
				setState(6681); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6683);
			match(DELIMITER);
			setState(6685); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6684);
				separator();
				}
				}
				setState(6687); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6695);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6689);
				match(IS);
				setState(6691); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6690);
					separator();
					}
					}
					setState(6693); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6697);
			match(STANDARD_1);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class PaddingContext extends ParserRuleContext {
		public TerminalNode PADDING() { return getToken(cobolParser.PADDING, 0); }
		public Pad_charContext pad_char() {
			return getRuleContext(Pad_charContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTER() { return getToken(cobolParser.CHARACTER, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public PaddingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_padding; }
	}

	public final PaddingContext padding() throws RecognitionException {
		PaddingContext _localctx = new PaddingContext(_ctx, getState());
		enterRule(_localctx, 510, RULE_padding);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6699);
			match(PADDING);
			setState(6701); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6700);
				separator();
				}
				}
				setState(6703); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6711);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CHARACTER) {
				{
				setState(6705);
				match(CHARACTER);
				setState(6707); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6706);
					separator();
					}
					}
					setState(6709); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6719);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6713);
				match(IS);
				setState(6715); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6714);
					separator();
					}
					}
					setState(6717); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6721);
			pad_char();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Pad_charContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Pad_charContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_pad_char; }
	}

	public final Pad_charContext pad_char() throws RecognitionException {
		Pad_charContext _localctx = new Pad_charContext(_ctx, getState());
		enterRule(_localctx, 512, RULE_pad_char);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6723);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class OrganizationContext extends ParserRuleContext {
		public TerminalNode SEQUENTIAL() { return getToken(cobolParser.SEQUENTIAL, 0); }
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode RELATIVE() { return getToken(cobolParser.RELATIVE, 0); }
		public TerminalNode INDEXED() { return getToken(cobolParser.INDEXED, 0); }
		public TerminalNode ORGANIZATION() { return getToken(cobolParser.ORGANIZATION, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public OrganizationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_organization; }
	}

	public final OrganizationContext organization() throws RecognitionException {
		OrganizationContext _localctx = new OrganizationContext(_ctx, getState());
		enterRule(_localctx, 514, RULE_organization);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6739);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ORGANIZATION) {
				{
				setState(6725);
				match(ORGANIZATION);
				setState(6727); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6726);
					separator();
					}
					}
					setState(6729); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6737);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6731);
					match(IS);
					setState(6733); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6732);
						separator();
						}
						}
						setState(6735); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				}
			}

			setState(6752);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case SEQUENTIAL:
				{
				setState(6741);
				match(SEQUENTIAL);
				}
				break;
			case LINE:
				{
				setState(6742);
				match(LINE);
				setState(6744); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6743);
					separator();
					}
					}
					setState(6746); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6748);
				match(SEQUENTIAL);
				}
				break;
			case RELATIVE:
				{
				setState(6750);
				match(RELATIVE);
				}
				break;
			case INDEXED:
				{
				setState(6751);
				match(INDEXED);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Lock_modeContext extends ParserRuleContext {
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public Lock_mode_definitionContext lock_mode_definition() {
			return getRuleContext(Lock_mode_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode MODE() { return getToken(cobolParser.MODE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Lock_modeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_lock_mode; }
	}

	public final Lock_modeContext lock_mode() throws RecognitionException {
		Lock_modeContext _localctx = new Lock_modeContext(_ctx, getState());
		enterRule(_localctx, 516, RULE_lock_mode);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6754);
			match(LOCK);
			setState(6756); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6755);
				separator();
				}
				}
				setState(6758); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6766);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==MODE) {
				{
				setState(6760);
				match(MODE);
				setState(6762); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6761);
					separator();
					}
					}
					setState(6764); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6774);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6768);
				match(IS);
				setState(6770); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6769);
					separator();
					}
					}
					setState(6772); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6776);
			lock_mode_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Lock_mode_definitionContext extends ParserRuleContext {
		public TerminalNode MANUAL() { return getToken(cobolParser.MANUAL, 0); }
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public TerminalNode MULTIPLE() { return getToken(cobolParser.MULTIPLE, 0); }
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode AUTOMATIC() { return getToken(cobolParser.AUTOMATIC, 0); }
		public TerminalNode ROLLBACK() { return getToken(cobolParser.ROLLBACK, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode EXCLUSIVE() { return getToken(cobolParser.EXCLUSIVE, 0); }
		public Lock_mode_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_lock_mode_definition; }
	}

	public final Lock_mode_definitionContext lock_mode_definition() throws RecognitionException {
		Lock_mode_definitionContext _localctx = new Lock_mode_definitionContext(_ctx, getState());
		enterRule(_localctx, 518, RULE_lock_mode_definition);
		int _la;
		try {
			setState(6846);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case MANUAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(6778);
				match(MANUAL);
				setState(6780); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6779);
					separator();
					}
					}
					setState(6782); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6790);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(6784);
					match(WITH);
					setState(6786); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6785);
						separator();
						}
						}
						setState(6788); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(6792);
				match(LOCK);
				setState(6794); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6793);
					separator();
					}
					}
					setState(6796); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6798);
				match(ON);
				setState(6800); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6799);
					separator();
					}
					}
					setState(6802); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6804);
				match(MULTIPLE);
				setState(6806); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6805);
					separator();
					}
					}
					setState(6808); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6810);
				match(RECORDS);
				}
				break;
			case AUTOMATIC:
				enterOuterAlt(_localctx, 2);
				{
				setState(6812);
				match(AUTOMATIC);
				setState(6843);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1165,_ctx) ) {
				case 1:
					{
					setState(6814); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6813);
						separator();
						}
						}
						setState(6816); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(6824);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==WITH) {
						{
						setState(6818);
						match(WITH);
						setState(6820); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6819);
							separator();
							}
							}
							setState(6822); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						}
					}

					setState(6841);
					_errHandler.sync(this);
					switch (_input.LA(1)) {
					case LOCK:
						{
						{
						setState(6826);
						match(LOCK);
						setState(6828); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6827);
							separator();
							}
							}
							setState(6830); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(6832);
						match(ON);
						setState(6834); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6833);
							separator();
							}
							}
							setState(6836); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(6838);
						match(RECORD);
						}
						}
						break;
					case ROLLBACK:
						{
						setState(6840);
						match(ROLLBACK);
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					}
					break;
				}
				}
				break;
			case EXCLUSIVE:
				enterOuterAlt(_localctx, 3);
				{
				setState(6845);
				match(EXCLUSIVE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Code_setContext extends ParserRuleContext {
		public TerminalNode CODE_SET() { return getToken(cobolParser.CODE_SET, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Code_setContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_code_set; }
	}

	public final Code_setContext code_set() throws RecognitionException {
		Code_setContext _localctx = new Code_setContext(_ctx, getState());
		enterRule(_localctx, 520, RULE_code_set);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6848);
			match(CODE_SET);
			setState(6850); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6849);
				separator();
				}
				}
				setState(6852); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6860);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6854);
				match(IS);
				setState(6856); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6855);
					separator();
					}
					}
					setState(6858); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6862);
			alpha_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Block_containsContext extends ParserRuleContext {
		public TerminalNode BLOCK() { return getToken(cobolParser.BLOCK, 0); }
		public BlocksizeContext blocksize() {
			return getRuleContext(BlocksizeContext.class,0);
		}
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CONTAINS() { return getToken(cobolParser.CONTAINS, 0); }
		public Smallest_blockContext smallest_block() {
			return getRuleContext(Smallest_blockContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Block_containsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_block_contains; }
	}

	public final Block_containsContext block_contains() throws RecognitionException {
		Block_containsContext _localctx = new Block_containsContext(_ctx, getState());
		enterRule(_localctx, 522, RULE_block_contains);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6864);
			match(BLOCK);
			setState(6866); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6865);
				separator();
				}
				}
				setState(6868); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6876);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONTAINS) {
				{
				setState(6870);
				match(CONTAINS);
				setState(6872); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6871);
					separator();
					}
					}
					setState(6874); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6890);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1175,_ctx) ) {
			case 1:
				{
				setState(6878);
				smallest_block();
				setState(6880); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6879);
					separator();
					}
					}
					setState(6882); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(6884);
				match(TO);
				setState(6886); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6885);
					separator();
					}
					}
					setState(6888); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
				break;
			}
			setState(6892);
			blocksize();
			setState(6894); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6893);
				separator();
				}
				}
				setState(6896); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6898);
			_la = _input.LA(1);
			if ( !(_la==CHARACTERS || _la==RECORDS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Smallest_blockContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Smallest_blockContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_smallest_block; }
	}

	public final Smallest_blockContext smallest_block() throws RecognitionException {
		Smallest_blockContext _localctx = new Smallest_blockContext(_ctx, getState());
		enterRule(_localctx, 524, RULE_smallest_block);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6900);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class BlocksizeContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public BlocksizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_blocksize; }
	}

	public final BlocksizeContext blocksize() throws RecognitionException {
		BlocksizeContext _localctx = new BlocksizeContext(_ctx, getState());
		enterRule(_localctx, 526, RULE_blocksize);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6902);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Assign_toContext extends ParserRuleContext {
		public TerminalNode ASSIGN() { return getToken(cobolParser.ASSIGN, 0); }
		public Assign_to_definitionContext assign_to_definition() {
			return getRuleContext(Assign_to_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Assign_toContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_assign_to; }
	}

	public final Assign_toContext assign_to() throws RecognitionException {
		Assign_toContext _localctx = new Assign_toContext(_ctx, getState());
		enterRule(_localctx, 528, RULE_assign_to);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6904);
			match(ASSIGN);
			setState(6906); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6905);
				separator();
				}
				}
				setState(6908); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(6916);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==TO) {
				{
				setState(6910);
				match(TO);
				setState(6912); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6911);
					separator();
					}
					}
					setState(6914); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(6918);
			assign_to_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Assign_to_definitionContext extends ParserRuleContext {
		public File_specContext file_spec() {
			return getRuleContext(File_specContext.class,0);
		}
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public TerminalNode DYNAMIC() { return getToken(cobolParser.DYNAMIC, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode REEL() { return getToken(cobolParser.REEL, 0); }
		public TerminalNode UNIT() { return getToken(cobolParser.UNIT, 0); }
		public TerminalNode MULTIPLE() { return getToken(cobolParser.MULTIPLE, 0); }
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public Assign_to_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_assign_to_definition; }
	}

	public final Assign_to_definitionContext assign_to_definition() throws RecognitionException {
		Assign_to_definitionContext _localctx = new Assign_to_definitionContext(_ctx, getState());
		enterRule(_localctx, 530, RULE_assign_to_definition);
		int _la;
		try {
			setState(6947);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DISK:
			case DYNAMIC:
			case EXTERNAL:
			case PRINTER:
			case STRING_LITERAL:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(6926);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==DYNAMIC || _la==EXTERNAL) {
					{
					setState(6920);
					_la = _input.LA(1);
					if ( !(_la==DYNAMIC || _la==EXTERNAL) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(6922); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6921);
						separator();
						}
						}
						setState(6924); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(6928);
				file_spec();
				}
				break;
			case MULTIPLE:
			case REEL:
			case UNIT:
				enterOuterAlt(_localctx, 2);
				{
				setState(6935);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==MULTIPLE) {
					{
					setState(6929);
					match(MULTIPLE);
					setState(6931); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6930);
						separator();
						}
						}
						setState(6933); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(6937);
				_la = _input.LA(1);
				if ( !(_la==REEL || _la==UNIT) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(6945);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1185,_ctx) ) {
				case 1:
					{
					setState(6939); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6938);
						separator();
						}
						}
						setState(6941); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(6943);
					match(FILE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_specContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode DISK() { return getToken(cobolParser.DISK, 0); }
		public TerminalNode PRINTER() { return getToken(cobolParser.PRINTER, 0); }
		public File_specContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_spec; }
	}

	public final File_specContext file_spec() throws RecognitionException {
		File_specContext _localctx = new File_specContext(_ctx, getState());
		enterRule(_localctx, 532, RULE_file_spec);
		try {
			setState(6953);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(6949);
				match(STRING_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(6950);
				qualified_data_item();
				}
				break;
			case DISK:
				enterOuterAlt(_localctx, 3);
				{
				setState(6951);
				match(DISK);
				}
				break;
			case PRINTER:
				enterOuterAlt(_localctx, 4);
				{
				setState(6952);
				match(PRINTER);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public File_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_name; }
	}

	public final File_nameContext file_name() throws RecognitionException {
		File_nameContext _localctx = new File_nameContext(_ctx, getState());
		enterRule(_localctx, 534, RULE_file_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6955);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class I_o_controlContext extends ParserRuleContext {
		public TerminalNode I_O_CONTROL() { return getToken(cobolParser.I_O_CONTROL, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<ApplyContext> apply() {
			return getRuleContexts(ApplyContext.class);
		}
		public ApplyContext apply(int i) {
			return getRuleContext(ApplyContext.class,i);
		}
		public List<SameContext> same() {
			return getRuleContexts(SameContext.class);
		}
		public SameContext same(int i) {
			return getRuleContext(SameContext.class,i);
		}
		public List<RerunContext> rerun() {
			return getRuleContexts(RerunContext.class);
		}
		public RerunContext rerun(int i) {
			return getRuleContext(RerunContext.class,i);
		}
		public List<Multiple_fileContext> multiple_file() {
			return getRuleContexts(Multiple_fileContext.class);
		}
		public Multiple_fileContext multiple_file(int i) {
			return getRuleContext(Multiple_fileContext.class,i);
		}
		public I_o_controlContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_i_o_control; }
	}

	public final I_o_controlContext i_o_control() throws RecognitionException {
		I_o_controlContext _localctx = new I_o_controlContext(_ctx, getState());
		enterRule(_localctx, 536, RULE_i_o_control);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6957);
			match(I_O_CONTROL);
			setState(6961);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(6958);
				separator();
				}
				}
				setState(6963);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6964);
			match(DOT_);
			setState(6968);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1189,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6965);
					separator();
					}
					} 
				}
				setState(6970);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1189,_ctx);
			}
			setState(7026);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==APPLY || _la==MULTIPLE || _la==RERUN || _la==SAME || _la==DOT_) {
				{
				setState(6980);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==APPLY) {
					{
					{
					setState(6971);
					apply();
					setState(6975);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(6972);
						separator();
						}
						}
						setState(6977);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(6982);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6992);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==SAME) {
					{
					{
					setState(6983);
					same();
					setState(6987);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(6984);
						separator();
						}
						}
						setState(6989);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(6994);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7004);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==RERUN) {
					{
					{
					setState(6995);
					rerun();
					setState(6999);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(6996);
						separator();
						}
						}
						setState(7001);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(7006);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7016);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==MULTIPLE) {
					{
					{
					setState(7007);
					multiple_file();
					setState(7011);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(7008);
						separator();
						}
						}
						setState(7013);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(7018);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7019);
				match(DOT_);
				setState(7023);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1198,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(7020);
						separator();
						}
						} 
					}
					setState(7025);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1198,_ctx);
				}
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiple_fileContext extends ParserRuleContext {
		public TerminalNode MULTIPLE() { return getToken(cobolParser.MULTIPLE, 0); }
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode TAPE() { return getToken(cobolParser.TAPE, 0); }
		public TerminalNode CONTAINS() { return getToken(cobolParser.CONTAINS, 0); }
		public List<Multiple_file_definitionContext> multiple_file_definition() {
			return getRuleContexts(Multiple_file_definitionContext.class);
		}
		public Multiple_file_definitionContext multiple_file_definition(int i) {
			return getRuleContext(Multiple_file_definitionContext.class,i);
		}
		public Multiple_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiple_file; }
	}

	public final Multiple_fileContext multiple_file() throws RecognitionException {
		Multiple_fileContext _localctx = new Multiple_fileContext(_ctx, getState());
		enterRule(_localctx, 538, RULE_multiple_file);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7028);
			match(MULTIPLE);
			setState(7030); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7029);
				separator();
				}
				}
				setState(7032); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(7034);
			match(FILE);
			setState(7036); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7035);
				separator();
				}
				}
				setState(7038); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(7046);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==TAPE) {
				{
				setState(7040);
				match(TAPE);
				setState(7042); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7041);
					separator();
					}
					}
					setState(7044); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(7054);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONTAINS) {
				{
				setState(7048);
				match(CONTAINS);
				setState(7050); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7049);
					separator();
					}
					}
					setState(7052); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(7063); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7056);
				multiple_file_definition();
				setState(7060);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1206,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(7057);
						separator();
						}
						} 
					}
					setState(7062);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1206,_ctx);
				}
				}
				}
				setState(7065); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiple_file_definitionContext extends ParserRuleContext {
		public Multiple_file_nameContext multiple_file_name() {
			return getRuleContext(Multiple_file_nameContext.class,0);
		}
		public TerminalNode POSITION() { return getToken(cobolParser.POSITION, 0); }
		public Pos_integerContext pos_integer() {
			return getRuleContext(Pos_integerContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Multiple_file_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiple_file_definition; }
	}

	public final Multiple_file_definitionContext multiple_file_definition() throws RecognitionException {
		Multiple_file_definitionContext _localctx = new Multiple_file_definitionContext(_ctx, getState());
		enterRule(_localctx, 540, RULE_multiple_file_definition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7067);
			multiple_file_name();
			setState(7081);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1210,_ctx) ) {
			case 1:
				{
				setState(7069); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7068);
					separator();
					}
					}
					setState(7071); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7073);
				match(POSITION);
				setState(7075); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7074);
					separator();
					}
					}
					setState(7077); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7079);
				pos_integer();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiple_file_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Multiple_file_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiple_file_name; }
	}

	public final Multiple_file_nameContext multiple_file_name() throws RecognitionException {
		Multiple_file_nameContext _localctx = new Multiple_file_nameContext(_ctx, getState());
		enterRule(_localctx, 542, RULE_multiple_file_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7083);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Pos_integerContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Pos_integerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_pos_integer; }
	}

	public final Pos_integerContext pos_integer() throws RecognitionException {
		Pos_integerContext _localctx = new Pos_integerContext(_ctx, getState());
		enterRule(_localctx, 544, RULE_pos_integer);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7085);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RerunContext extends ParserRuleContext {
		public TerminalNode RERUN() { return getToken(cobolParser.RERUN, 0); }
		public Rerun_definitionContext rerun_definition() {
			return getRuleContext(Rerun_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public TerminalNode EVERY() { return getToken(cobolParser.EVERY, 0); }
		public RerunContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rerun; }
	}

	public final RerunContext rerun() throws RecognitionException {
		RerunContext _localctx = new RerunContext(_ctx, getState());
		enterRule(_localctx, 546, RULE_rerun);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7087);
			match(RERUN);
			setState(7089); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7088);
				separator();
				}
				}
				setState(7091); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(7105);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ON) {
				{
				setState(7093);
				match(ON);
				setState(7095); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7094);
					separator();
					}
					}
					setState(7097); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7099);
				file_name();
				setState(7101); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7100);
					separator();
					}
					}
					setState(7103); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(7113);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==EVERY) {
				{
				setState(7107);
				match(EVERY);
				setState(7109); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7108);
					separator();
					}
					}
					setState(7111); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(7115);
			rerun_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rerun_definitionContext extends ParserRuleContext {
		public Rerun_def_fileContext rerun_def_file() {
			return getRuleContext(Rerun_def_fileContext.class,0);
		}
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public Clock_countContext clock_count() {
			return getRuleContext(Clock_countContext.class,0);
		}
		public TerminalNode CLOCK_UNITS() { return getToken(cobolParser.CLOCK_UNITS, 0); }
		public Condition_nameContext condition_name() {
			return getRuleContext(Condition_nameContext.class,0);
		}
		public Rerun_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rerun_definition; }
	}

	public final Rerun_definitionContext rerun_definition() throws RecognitionException {
		Rerun_definitionContext _localctx = new Rerun_definitionContext(_ctx, getState());
		enterRule(_localctx, 548, RULE_rerun_definition);
		int _la;
		try {
			setState(7142);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1221,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(7117);
				rerun_def_file();
				setState(7119); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7118);
					separator();
					}
					}
					setState(7121); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7129);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==OF) {
					{
					setState(7123);
					match(OF);
					setState(7125); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7124);
						separator();
						}
						}
						setState(7127); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(7131);
				file_name();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(7133);
				clock_count();
				setState(7135); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7134);
					separator();
					}
					}
					setState(7137); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7139);
				match(CLOCK_UNITS);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(7141);
				condition_name();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Clock_countContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Clock_countContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_clock_count; }
	}

	public final Clock_countContext clock_count() throws RecognitionException {
		Clock_countContext _localctx = new Clock_countContext(_ctx, getState());
		enterRule(_localctx, 550, RULE_clock_count);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7144);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Condition_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Condition_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_condition_name; }
	}

	public final Condition_nameContext condition_name() throws RecognitionException {
		Condition_nameContext _localctx = new Condition_nameContext(_ctx, getState());
		enterRule(_localctx, 552, RULE_condition_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7146);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rerun_def_fileContext extends ParserRuleContext {
		public TerminalNode REEL() { return getToken(cobolParser.REEL, 0); }
		public TerminalNode UNIT() { return getToken(cobolParser.UNIT, 0); }
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public Rec_countContext rec_count() {
			return getRuleContext(Rec_countContext.class,0);
		}
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public Rerun_def_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rerun_def_file; }
	}

	public final Rerun_def_fileContext rerun_def_file() throws RecognitionException {
		Rerun_def_fileContext _localctx = new Rerun_def_fileContext(_ctx, getState());
		enterRule(_localctx, 554, RULE_rerun_def_file);
		int _la;
		try {
			setState(7173);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case END:
			case REEL:
			case UNIT:
				enterOuterAlt(_localctx, 1);
				{
				setState(7162);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==END) {
					{
					setState(7148);
					match(END);
					setState(7150); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7149);
						separator();
						}
						}
						setState(7152); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(7160);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==OF) {
						{
						setState(7154);
						match(OF);
						setState(7156); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7155);
							separator();
							}
							}
							setState(7158); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						}
					}

					}
				}

				setState(7164);
				_la = _input.LA(1);
				if ( !(_la==REEL || _la==UNIT) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(7165);
				rec_count();
				setState(7167); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7166);
					separator();
					}
					}
					setState(7169); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7171);
				match(RECORDS);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rec_countContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Rec_countContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rec_count; }
	}

	public final Rec_countContext rec_count() throws RecognitionException {
		Rec_countContext _localctx = new Rec_countContext(_ctx, getState());
		enterRule(_localctx, 556, RULE_rec_count);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7175);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SameContext extends ParserRuleContext {
		public TerminalNode SAME() { return getToken(cobolParser.SAME, 0); }
		public List<Same_area_fileContext> same_area_file() {
			return getRuleContexts(Same_area_fileContext.class);
		}
		public Same_area_fileContext same_area_file(int i) {
			return getRuleContext(Same_area_fileContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode AREA() { return getToken(cobolParser.AREA, 0); }
		public TerminalNode FOR() { return getToken(cobolParser.FOR, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode SORT() { return getToken(cobolParser.SORT, 0); }
		public TerminalNode SORT_MERGE() { return getToken(cobolParser.SORT_MERGE, 0); }
		public SameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_same; }
	}

	public final SameContext same() throws RecognitionException {
		SameContext _localctx = new SameContext(_ctx, getState());
		enterRule(_localctx, 558, RULE_same);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7177);
			match(SAME);
			setState(7179); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7178);
				separator();
				}
				}
				setState(7181); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(7189);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (((((_la - 284)) & ~0x3f) == 0 && ((1L << (_la - 284)) & ((1L << (RECORD - 284)) | (1L << (SORT - 284)) | (1L << (SORT_MERGE - 284)))) != 0)) {
				{
				setState(7183);
				_la = _input.LA(1);
				if ( !(((((_la - 284)) & ~0x3f) == 0 && ((1L << (_la - 284)) & ((1L << (RECORD - 284)) | (1L << (SORT - 284)) | (1L << (SORT_MERGE - 284)))) != 0)) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(7185); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7184);
					separator();
					}
					}
					setState(7187); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(7197);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AREA) {
				{
				setState(7191);
				match(AREA);
				setState(7193); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7192);
					separator();
					}
					}
					setState(7195); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(7205);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FOR) {
				{
				setState(7199);
				match(FOR);
				setState(7201); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7200);
					separator();
					}
					}
					setState(7203); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
			}

			setState(7207);
			same_area_file();
			setState(7215); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(7209); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7208);
						separator();
						}
						}
						setState(7211); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(7213);
					same_area_file();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(7217); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1236,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Same_area_fileContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Same_area_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_same_area_file; }
	}

	public final Same_area_fileContext same_area_file() throws RecognitionException {
		Same_area_fileContext _localctx = new Same_area_fileContext(_ctx, getState());
		enterRule(_localctx, 560, RULE_same_area_file);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7219);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ApplyContext extends ParserRuleContext {
		public TerminalNode APPLY() { return getToken(cobolParser.APPLY, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Apply_definitionContext> apply_definition() {
			return getRuleContexts(Apply_definitionContext.class);
		}
		public Apply_definitionContext apply_definition(int i) {
			return getRuleContext(Apply_definitionContext.class,i);
		}
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public ApplyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_apply; }
	}

	public final ApplyContext apply() throws RecognitionException {
		ApplyContext _localctx = new ApplyContext(_ctx, getState());
		enterRule(_localctx, 562, RULE_apply);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7221);
			match(APPLY);
			setState(7223); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7222);
				separator();
				}
				}
				setState(7225); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(7233); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7227);
				apply_definition();
				setState(7229); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7228);
					separator();
					}
					}
					setState(7231); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				}
				}
				setState(7235); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 83)) & ~0x3f) == 0 && ((1L << (_la - 83)) & ((1L << (CONTIGUOUS - 83)) | (1L << (CONTIGUOUS_BEST_TRY - 83)) | (1L << (DEFERRED_WRITE - 83)))) != 0) || _la==EXTENSION || _la==FILL_SIZE || ((((_la - 224)) & ~0x3f) == 0 && ((1L << (_la - 224)) & ((1L << (LOCK_HOLDING - 224)) | (1L << (MASS_INSERT - 224)) | (1L << (PREALLOCATION - 224)) | (1L << (PRINT_CONTROL - 224)))) != 0) || _la==WINDOW );
			setState(7237);
			match(ON);
			setState(7239); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7238);
				separator();
				}
				}
				setState(7241); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(7250); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7243);
				file_name();
				setState(7247);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1241,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(7244);
						separator();
						}
						} 
					}
					setState(7249);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1241,_ctx);
				}
				}
				}
				setState(7252); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Apply_definitionContext extends ParserRuleContext {
		public TerminalNode DEFERRED_WRITE() { return getToken(cobolParser.DEFERRED_WRITE, 0); }
		public TerminalNode EXTENSION() { return getToken(cobolParser.EXTENSION, 0); }
		public Extend_amtContext extend_amt() {
			return getRuleContext(Extend_amtContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FILL_SIZE() { return getToken(cobolParser.FILL_SIZE, 0); }
		public TerminalNode LOCK_HOLDING() { return getToken(cobolParser.LOCK_HOLDING, 0); }
		public TerminalNode MASS_INSERT() { return getToken(cobolParser.MASS_INSERT, 0); }
		public TerminalNode PREALLOCATION() { return getToken(cobolParser.PREALLOCATION, 0); }
		public Preall_amtContext preall_amt() {
			return getRuleContext(Preall_amtContext.class,0);
		}
		public TerminalNode CONTIGUOUS() { return getToken(cobolParser.CONTIGUOUS, 0); }
		public TerminalNode CONTIGUOUS_BEST_TRY() { return getToken(cobolParser.CONTIGUOUS_BEST_TRY, 0); }
		public TerminalNode PRINT_CONTROL() { return getToken(cobolParser.PRINT_CONTROL, 0); }
		public TerminalNode WINDOW() { return getToken(cobolParser.WINDOW, 0); }
		public Window_ptrsContext window_ptrs() {
			return getRuleContext(Window_ptrsContext.class,0);
		}
		public Apply_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_apply_definition; }
	}

	public final Apply_definitionContext apply_definition() throws RecognitionException {
		Apply_definitionContext _localctx = new Apply_definitionContext(_ctx, getState());
		enterRule(_localctx, 564, RULE_apply_definition);
		int _la;
		try {
			setState(7291);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DEFERRED_WRITE:
				enterOuterAlt(_localctx, 1);
				{
				setState(7254);
				match(DEFERRED_WRITE);
				}
				break;
			case EXTENSION:
				enterOuterAlt(_localctx, 2);
				{
				setState(7255);
				match(EXTENSION);
				setState(7257); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7256);
					separator();
					}
					}
					setState(7259); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7261);
				extend_amt();
				}
				break;
			case FILL_SIZE:
				enterOuterAlt(_localctx, 3);
				{
				setState(7263);
				match(FILL_SIZE);
				}
				break;
			case LOCK_HOLDING:
				enterOuterAlt(_localctx, 4);
				{
				setState(7264);
				match(LOCK_HOLDING);
				}
				break;
			case MASS_INSERT:
				enterOuterAlt(_localctx, 5);
				{
				setState(7265);
				match(MASS_INSERT);
				}
				break;
			case CONTIGUOUS:
			case CONTIGUOUS_BEST_TRY:
			case PREALLOCATION:
				enterOuterAlt(_localctx, 6);
				{
				setState(7272);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CONTIGUOUS || _la==CONTIGUOUS_BEST_TRY) {
					{
					setState(7266);
					_la = _input.LA(1);
					if ( !(_la==CONTIGUOUS || _la==CONTIGUOUS_BEST_TRY) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(7268); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7267);
						separator();
						}
						}
						setState(7270); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					}
				}

				setState(7274);
				match(PREALLOCATION);
				setState(7276); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7275);
					separator();
					}
					}
					setState(7278); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7280);
				preall_amt();
				}
				break;
			case PRINT_CONTROL:
				enterOuterAlt(_localctx, 7);
				{
				setState(7282);
				match(PRINT_CONTROL);
				}
				break;
			case WINDOW:
				enterOuterAlt(_localctx, 8);
				{
				setState(7283);
				match(WINDOW);
				setState(7285); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7284);
					separator();
					}
					}
					setState(7287); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7289);
				window_ptrs();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Window_ptrsContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Window_ptrsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_window_ptrs; }
	}

	public final Window_ptrsContext window_ptrs() throws RecognitionException {
		Window_ptrsContext _localctx = new Window_ptrsContext(_ctx, getState());
		enterRule(_localctx, 566, RULE_window_ptrs);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7293);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Preall_amtContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Preall_amtContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_preall_amt; }
	}

	public final Preall_amtContext preall_amt() throws RecognitionException {
		Preall_amtContext _localctx = new Preall_amtContext(_ctx, getState());
		enterRule(_localctx, 568, RULE_preall_amt);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7295);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Extend_amtContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Extend_amtContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_extend_amt; }
	}

	public final Extend_amtContext extend_amt() throws RecognitionException {
		Extend_amtContext _localctx = new Extend_amtContext(_ctx, getState());
		enterRule(_localctx, 570, RULE_extend_amt);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7297);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arithmetic_expressionContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Unary_arithmetic_operatorContext unary_arithmetic_operator() {
			return getRuleContext(Unary_arithmetic_operatorContext.class,0);
		}
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public ConstantContext constant() {
			return getRuleContext(ConstantContext.class,0);
		}
		public Binary_arithmetic_operatorContext binary_arithmetic_operator() {
			return getRuleContext(Binary_arithmetic_operatorContext.class,0);
		}
		public Arithmetic_expressionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arithmetic_expression; }
	}

	public final Arithmetic_expressionContext arithmetic_expression() throws RecognitionException {
		return arithmetic_expression(0);
	}

	private Arithmetic_expressionContext arithmetic_expression(int _p) throws RecognitionException {
		ParserRuleContext _parentctx = _ctx;
		int _parentState = getState();
		Arithmetic_expressionContext _localctx = new Arithmetic_expressionContext(_ctx, _parentState);
		Arithmetic_expressionContext _prevctx = _localctx;
		int _startState = 572;
		enterRecursionRule(_localctx, 572, RULE_arithmetic_expression, _p);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7327);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LPAREN_:
				{
				setState(7300);
				match(LPAREN_);
				setState(7304);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7301);
					arithmetic_separator();
					}
					}
					setState(7306);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7307);
				arithmetic_expression(0);
				setState(7311);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7308);
					arithmetic_separator();
					}
					}
					setState(7313);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7314);
				match(RPAREN_);
				}
				break;
			case PLUS_:
			case MINUS_:
				{
				setState(7316);
				unary_arithmetic_operator();
				setState(7320);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7317);
					arithmetic_separator();
					}
					}
					setState(7322);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7323);
				arithmetic_expression(3);
				}
				break;
			case FUNCTION:
			case USER_DEFINED_WORD:
				{
				setState(7325);
				identifier();
				}
				break;
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				{
				setState(7326);
				constant();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			_ctx.stop = _input.LT(-1);
			setState(7347);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1255,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( _parseListeners!=null ) triggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Arithmetic_expressionContext(_parentctx, _parentState);
					pushNewRecursionContext(_localctx, _startState, RULE_arithmetic_expression);
					setState(7329);
					if (!(precpred(_ctx, 4))) throw new FailedPredicateException(this, "precpred(_ctx, 4)");
					setState(7333);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(7330);
						arithmetic_separator();
						}
						}
						setState(7335);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7336);
					binary_arithmetic_operator();
					setState(7340);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(7337);
						arithmetic_separator();
						}
						}
						setState(7342);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7343);
					arithmetic_expression(5);
					}
					} 
				}
				setState(7349);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1255,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public static class ConstantContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Figurative_constantContext figurative_constant() {
			return getRuleContext(Figurative_constantContext.class,0);
		}
		public ConstantContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_constant; }
	}

	public final ConstantContext constant() throws RecognitionException {
		ConstantContext _localctx = new ConstantContext(_ctx, getState());
		enterRule(_localctx, 574, RULE_constant);
		try {
			setState(7353);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(7350);
				match(NUMERIC_LITERAL);
				}
				break;
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(7351);
				match(STRING_LITERAL);
				}
				break;
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
				enterOuterAlt(_localctx, 3);
				{
				setState(7352);
				figurative_constant();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Binary_arithmetic_operatorContext extends ParserRuleContext {
		public TerminalNode PLUS_() { return getToken(cobolParser.PLUS_, 0); }
		public TerminalNode MINUS_() { return getToken(cobolParser.MINUS_, 0); }
		public List<TerminalNode> STAR_() { return getTokens(cobolParser.STAR_); }
		public TerminalNode STAR_(int i) {
			return getToken(cobolParser.STAR_, i);
		}
		public TerminalNode SLASH_() { return getToken(cobolParser.SLASH_, 0); }
		public Binary_arithmetic_operatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_binary_arithmetic_operator; }
	}

	public final Binary_arithmetic_operatorContext binary_arithmetic_operator() throws RecognitionException {
		Binary_arithmetic_operatorContext _localctx = new Binary_arithmetic_operatorContext(_ctx, getState());
		enterRule(_localctx, 576, RULE_binary_arithmetic_operator);
		try {
			setState(7361);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1257,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(7355);
				match(PLUS_);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(7356);
				match(MINUS_);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(7357);
				match(STAR_);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(7358);
				match(SLASH_);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(7359);
				match(STAR_);
				setState(7360);
				match(STAR_);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Unary_arithmetic_operatorContext extends ParserRuleContext {
		public TerminalNode PLUS_() { return getToken(cobolParser.PLUS_, 0); }
		public TerminalNode MINUS_() { return getToken(cobolParser.MINUS_, 0); }
		public Unary_arithmetic_operatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_unary_arithmetic_operator; }
	}

	public final Unary_arithmetic_operatorContext unary_arithmetic_operator() throws RecognitionException {
		Unary_arithmetic_operatorContext _localctx = new Unary_arithmetic_operatorContext(_ctx, getState());
		enterRule(_localctx, 578, RULE_unary_arithmetic_operator);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7363);
			_la = _input.LA(1);
			if ( !(_la==PLUS_ || _la==MINUS_) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Logic_expressionContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public List<Logic_expressionContext> logic_expression() {
			return getRuleContexts(Logic_expressionContext.class);
		}
		public Logic_expressionContext logic_expression(int i) {
			return getRuleContext(Logic_expressionContext.class,i);
		}
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public Class_conditionContext class_condition() {
			return getRuleContext(Class_conditionContext.class,0);
		}
		public Logic_conditionContext logic_condition() {
			return getRuleContext(Logic_conditionContext.class,0);
		}
		public Sign_conditionContext sign_condition() {
			return getRuleContext(Sign_conditionContext.class,0);
		}
		public Success_failure_conditionContext success_failure_condition() {
			return getRuleContext(Success_failure_conditionContext.class,0);
		}
		public Logic_operationContext logic_operation() {
			return getRuleContext(Logic_operationContext.class,0);
		}
		public Logic_expressionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_logic_expression; }
	}

	public final Logic_expressionContext logic_expression() throws RecognitionException {
		return logic_expression(0);
	}

	private Logic_expressionContext logic_expression(int _p) throws RecognitionException {
		ParserRuleContext _parentctx = _ctx;
		int _parentState = getState();
		Logic_expressionContext _localctx = new Logic_expressionContext(_ctx, _parentState);
		Logic_expressionContext _prevctx = _localctx;
		int _startState = 580;
		enterRecursionRule(_localctx, 580, RULE_logic_expression, _p);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7394);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1261,_ctx) ) {
			case 1:
				{
				setState(7366);
				match(LPAREN_);
				setState(7370);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7367);
					arithmetic_separator();
					}
					}
					setState(7372);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7373);
				logic_expression(0);
				setState(7377);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7374);
					arithmetic_separator();
					}
					}
					setState(7379);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7380);
				match(RPAREN_);
				}
				break;
			case 2:
				{
				setState(7382);
				match(NOT);
				setState(7386);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7383);
					arithmetic_separator();
					}
					}
					setState(7388);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7389);
				logic_expression(5);
				}
				break;
			case 3:
				{
				setState(7390);
				class_condition();
				}
				break;
			case 4:
				{
				setState(7391);
				logic_condition(0);
				}
				break;
			case 5:
				{
				setState(7392);
				sign_condition();
				}
				break;
			case 6:
				{
				setState(7393);
				success_failure_condition();
				}
				break;
			}
			_ctx.stop = _input.LT(-1);
			setState(7414);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1264,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( _parseListeners!=null ) triggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Logic_expressionContext(_parentctx, _parentState);
					pushNewRecursionContext(_localctx, _startState, RULE_logic_expression);
					setState(7396);
					if (!(precpred(_ctx, 6))) throw new FailedPredicateException(this, "precpred(_ctx, 6)");
					setState(7400);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(7397);
						arithmetic_separator();
						}
						}
						setState(7402);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7403);
					logic_operation();
					setState(7407);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(7404);
						arithmetic_separator();
						}
						}
						setState(7409);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7410);
					logic_expression(7);
					}
					} 
				}
				setState(7416);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1264,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public static class Success_failure_conditionContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode SUCCESS() { return getToken(cobolParser.SUCCESS, 0); }
		public TerminalNode FAILURE() { return getToken(cobolParser.FAILURE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Success_failure_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_success_failure_condition; }
	}

	public final Success_failure_conditionContext success_failure_condition() throws RecognitionException {
		Success_failure_conditionContext _localctx = new Success_failure_conditionContext(_ctx, getState());
		enterRule(_localctx, 582, RULE_success_failure_condition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7417);
			qualified_data_item();
			setState(7425);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1266,_ctx) ) {
			case 1:
				{
				setState(7419); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7418);
					arithmetic_separator();
					}
					}
					setState(7421); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7423);
				match(IS);
				}
				break;
			}
			setState(7428); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7427);
				arithmetic_separator();
				}
				}
				setState(7430); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(7432);
			_la = _input.LA(1);
			if ( !(_la==FAILURE || _la==SUCCESS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Logic_conditionContext extends ParserRuleContext {
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public Condition_operatorContext condition_operator() {
			return getRuleContext(Condition_operatorContext.class,0);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Class_conditionContext class_condition() {
			return getRuleContext(Class_conditionContext.class,0);
		}
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Logic_conditionContext logic_condition() {
			return getRuleContext(Logic_conditionContext.class,0);
		}
		public Logic_operationContext logic_operation() {
			return getRuleContext(Logic_operationContext.class,0);
		}
		public Logic_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_logic_condition; }
	}

	public final Logic_conditionContext logic_condition() throws RecognitionException {
		return logic_condition(0);
	}

	private Logic_conditionContext logic_condition(int _p) throws RecognitionException {
		ParserRuleContext _parentctx = _ctx;
		int _parentState = getState();
		Logic_conditionContext _localctx = new Logic_conditionContext(_ctx, _parentState);
		Logic_conditionContext _prevctx = _localctx;
		int _startState = 584;
		enterRecursionRule(_localctx, 584, RULE_logic_condition, _p);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7453);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1270,_ctx) ) {
			case 1:
				{
				setState(7435);
				arithmetic_expression(0);
				setState(7439);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7436);
					arithmetic_separator();
					}
					}
					setState(7441);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7442);
				condition_operator();
				setState(7446);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7443);
					arithmetic_separator();
					}
					}
					setState(7448);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7449);
				arithmetic_expression(0);
				}
				break;
			case 2:
				{
				setState(7451);
				class_condition();
				}
				break;
			case 3:
				{
				setState(7452);
				qualified_data_item();
				}
				break;
			}
			_ctx.stop = _input.LT(-1);
			setState(7479);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1274,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( _parseListeners!=null ) triggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Logic_conditionContext(_parentctx, _parentState);
					pushNewRecursionContext(_localctx, _startState, RULE_logic_condition);
					setState(7455);
					if (!(precpred(_ctx, 1))) throw new FailedPredicateException(this, "precpred(_ctx, 1)");
					setState(7457); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7456);
						arithmetic_separator();
						}
						}
						setState(7459); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(7461);
					logic_operation();
					setState(7465);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(7462);
						arithmetic_separator();
						}
						}
						setState(7467);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7468);
					condition_operator();
					setState(7472);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(7469);
						arithmetic_separator();
						}
						}
						setState(7474);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7475);
					arithmetic_expression(0);
					}
					} 
				}
				setState(7481);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1274,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public static class Logic_operationContext extends ParserRuleContext {
		public TerminalNode AND() { return getToken(cobolParser.AND, 0); }
		public TerminalNode OR() { return getToken(cobolParser.OR, 0); }
		public Logic_operationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_logic_operation; }
	}

	public final Logic_operationContext logic_operation() throws RecognitionException {
		Logic_operationContext _localctx = new Logic_operationContext(_ctx, getState());
		enterRule(_localctx, 586, RULE_logic_operation);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7482);
			_la = _input.LA(1);
			if ( !(_la==AND || _la==OR) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sign_conditionContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public Sign_condition_nameContext sign_condition_name() {
			return getRuleContext(Sign_condition_nameContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Sign_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sign_condition; }
	}

	public final Sign_conditionContext sign_condition() throws RecognitionException {
		Sign_conditionContext _localctx = new Sign_conditionContext(_ctx, getState());
		enterRule(_localctx, 588, RULE_sign_condition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7484);
			arithmetic_expression(0);
			setState(7492);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1276,_ctx) ) {
			case 1:
				{
				setState(7486); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7485);
					arithmetic_separator();
					}
					}
					setState(7488); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7490);
				match(IS);
				}
				break;
			}
			setState(7501);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1278,_ctx) ) {
			case 1:
				{
				setState(7495); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7494);
					arithmetic_separator();
					}
					}
					setState(7497); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7499);
				match(NOT);
				}
				break;
			}
			setState(7504); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7503);
				arithmetic_separator();
				}
				}
				setState(7506); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(7508);
			sign_condition_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sign_condition_nameContext extends ParserRuleContext {
		public TerminalNode POSITIVE() { return getToken(cobolParser.POSITIVE, 0); }
		public TerminalNode NEGATIVE() { return getToken(cobolParser.NEGATIVE, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public Sign_condition_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sign_condition_name; }
	}

	public final Sign_condition_nameContext sign_condition_name() throws RecognitionException {
		Sign_condition_nameContext _localctx = new Sign_condition_nameContext(_ctx, getState());
		enterRule(_localctx, 590, RULE_sign_condition_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7510);
			_la = _input.LA(1);
			if ( !(_la==NEGATIVE || _la==POSITIVE || _la==ZERO) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_conditionContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public Class_condition_nameContext class_condition_name() {
			return getRuleContext(Class_condition_nameContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Class_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_condition; }
	}

	public final Class_conditionContext class_condition() throws RecognitionException {
		Class_conditionContext _localctx = new Class_conditionContext(_ctx, getState());
		enterRule(_localctx, 592, RULE_class_condition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7512);
			identifier();
			setState(7520);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1281,_ctx) ) {
			case 1:
				{
				setState(7514); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7513);
					arithmetic_separator();
					}
					}
					setState(7516); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7518);
				match(IS);
				}
				break;
			}
			setState(7529);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1283,_ctx) ) {
			case 1:
				{
				setState(7523); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7522);
					arithmetic_separator();
					}
					}
					setState(7525); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7527);
				match(NOT);
				}
				break;
			}
			setState(7532); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7531);
				arithmetic_separator();
				}
				}
				setState(7534); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
			setState(7536);
			class_condition_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_condition_nameContext extends ParserRuleContext {
		public TerminalNode NUMERIC() { return getToken(cobolParser.NUMERIC, 0); }
		public TerminalNode ALPHABETIC() { return getToken(cobolParser.ALPHABETIC, 0); }
		public TerminalNode ALPHABETIC_LOWER() { return getToken(cobolParser.ALPHABETIC_LOWER, 0); }
		public TerminalNode ALPHABETIC_UPPER() { return getToken(cobolParser.ALPHABETIC_UPPER, 0); }
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Class_condition_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_condition_name; }
	}

	public final Class_condition_nameContext class_condition_name() throws RecognitionException {
		Class_condition_nameContext _localctx = new Class_condition_nameContext(_ctx, getState());
		enterRule(_localctx, 594, RULE_class_condition_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7538);
			_la = _input.LA(1);
			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER))) != 0) || _la==NUMERIC || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Condition_operatorContext extends ParserRuleContext {
		public TerminalNode GREATER() { return getToken(cobolParser.GREATER, 0); }
		public TerminalNode OR() { return getToken(cobolParser.OR, 0); }
		public TerminalNode EQUAL() { return getToken(cobolParser.EQUAL, 0); }
		public TerminalNode GE_() { return getToken(cobolParser.GE_, 0); }
		public TerminalNode LESS() { return getToken(cobolParser.LESS, 0); }
		public TerminalNode LE_() { return getToken(cobolParser.LE_, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode GT_() { return getToken(cobolParser.GT_, 0); }
		public TerminalNode LT_() { return getToken(cobolParser.LT_, 0); }
		public TerminalNode EQUAL_() { return getToken(cobolParser.EQUAL_, 0); }
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public TerminalNode THAN() { return getToken(cobolParser.THAN, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Condition_operatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_condition_operator; }
	}

	public final Condition_operatorContext condition_operator() throws RecognitionException {
		Condition_operatorContext _localctx = new Condition_operatorContext(_ctx, getState());
		enterRule(_localctx, 596, RULE_condition_operator);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7547);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(7540);
				match(IS);
				setState(7544);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7541);
					arithmetic_separator();
					}
					}
					setState(7546);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(7684);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1314,_ctx) ) {
			case 1:
				{
				setState(7556);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NOT) {
					{
					setState(7549);
					match(NOT);
					setState(7553);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(7550);
						arithmetic_separator();
						}
						}
						setState(7555);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
				}

				setState(7618);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case GREATER:
					{
					setState(7558);
					match(GREATER);
					setState(7566);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1290,_ctx) ) {
					case 1:
						{
						setState(7560); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7559);
							arithmetic_separator();
							}
							}
							setState(7562); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(7564);
						match(THAN);
						}
						break;
					}
					}
					break;
				case GT_:
					{
					setState(7568);
					match(GT_);
					setState(7576);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1292,_ctx) ) {
					case 1:
						{
						setState(7570); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7569);
							arithmetic_separator();
							}
							}
							setState(7572); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(7574);
						match(THAN);
						}
						break;
					}
					}
					break;
				case LESS:
					{
					setState(7578);
					match(LESS);
					setState(7586);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1294,_ctx) ) {
					case 1:
						{
						setState(7580); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7579);
							arithmetic_separator();
							}
							}
							setState(7582); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(7584);
						match(THAN);
						}
						break;
					}
					}
					break;
				case LT_:
					{
					setState(7588);
					match(LT_);
					setState(7596);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1296,_ctx) ) {
					case 1:
						{
						setState(7590); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7589);
							arithmetic_separator();
							}
							}
							setState(7592); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(7594);
						match(THAN);
						}
						break;
					}
					}
					break;
				case EQUAL:
					{
					setState(7598);
					match(EQUAL);
					setState(7606);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1298,_ctx) ) {
					case 1:
						{
						setState(7600); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7599);
							arithmetic_separator();
							}
							}
							setState(7602); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(7604);
						match(TO);
						}
						break;
					}
					}
					break;
				case EQUAL_:
					{
					setState(7608);
					match(EQUAL_);
					setState(7616);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1300,_ctx) ) {
					case 1:
						{
						setState(7610); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7609);
							arithmetic_separator();
							}
							}
							setState(7612); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
						setState(7614);
						match(TO);
						}
						break;
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			case 2:
				{
				setState(7620);
				match(GREATER);
				setState(7628);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1303,_ctx) ) {
				case 1:
					{
					setState(7622); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7621);
						arithmetic_separator();
						}
						}
						setState(7624); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(7626);
					match(THAN);
					}
					break;
				}
				setState(7631); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7630);
					arithmetic_separator();
					}
					}
					setState(7633); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7635);
				match(OR);
				setState(7637); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7636);
					arithmetic_separator();
					}
					}
					setState(7639); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7641);
				match(EQUAL);
				setState(7649);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1307,_ctx) ) {
				case 1:
					{
					setState(7643); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7642);
						arithmetic_separator();
						}
						}
						setState(7645); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(7647);
					match(TO);
					}
					break;
				}
				}
				break;
			case 3:
				{
				setState(7651);
				match(GE_);
				}
				break;
			case 4:
				{
				setState(7652);
				match(LESS);
				setState(7660);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1309,_ctx) ) {
				case 1:
					{
					setState(7654); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7653);
						arithmetic_separator();
						}
						}
						setState(7656); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(7658);
					match(THAN);
					}
					break;
				}
				setState(7663); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7662);
					arithmetic_separator();
					}
					}
					setState(7665); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7667);
				match(OR);
				setState(7669); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7668);
					arithmetic_separator();
					}
					}
					setState(7671); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
				setState(7673);
				match(EQUAL);
				setState(7681);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1313,_ctx) ) {
				case 1:
					{
					setState(7675); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7674);
						arithmetic_separator();
						}
						}
						setState(7677); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0) );
					setState(7679);
					match(TO);
					}
					break;
				}
				}
				break;
			case 5:
				{
				setState(7683);
				match(LE_);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Identifier_resultContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public SubscriptingContext subscripting() {
			return getRuleContext(SubscriptingContext.class,0);
		}
		public Reference_modificationContext reference_modification() {
			return getRuleContext(Reference_modificationContext.class,0);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Identifier_resultContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identifier_result; }
	}

	public final Identifier_resultContext identifier_result() throws RecognitionException {
		Identifier_resultContext _localctx = new Identifier_resultContext(_ctx, getState());
		enterRule(_localctx, 598, RULE_identifier_result);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7686);
			qualified_data_item();
			setState(7694);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1316,_ctx) ) {
			case 1:
				{
				setState(7690);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7687);
					arithmetic_separator();
					}
					}
					setState(7692);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7693);
				subscripting();
				}
				break;
			}
			setState(7703);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1318,_ctx) ) {
			case 1:
				{
				setState(7699);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7696);
					arithmetic_separator();
					}
					}
					setState(7701);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7702);
				reference_modification();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class IdentifierContext extends ParserRuleContext {
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public TerminalNode FUNCTION() { return getToken(cobolParser.FUNCTION, 0); }
		public Function_nameContext function_name() {
			return getRuleContext(Function_nameContext.class,0);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public ArgumentsContext arguments() {
			return getRuleContext(ArgumentsContext.class,0);
		}
		public Reference_modificationContext reference_modification() {
			return getRuleContext(Reference_modificationContext.class,0);
		}
		public IdentifierContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identifier; }
	}

	public final IdentifierContext identifier() throws RecognitionException {
		IdentifierContext _localctx = new IdentifierContext(_ctx, getState());
		enterRule(_localctx, 600, RULE_identifier);
		int _la;
		try {
			setState(7732);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(7705);
				identifier_result();
				}
				break;
			case FUNCTION:
				enterOuterAlt(_localctx, 2);
				{
				setState(7706);
				match(FUNCTION);
				setState(7710);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7707);
					arithmetic_separator();
					}
					}
					setState(7712);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7713);
				function_name();
				setState(7721);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1321,_ctx) ) {
				case 1:
					{
					setState(7717);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(7714);
						arithmetic_separator();
						}
						}
						setState(7719);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7720);
					arguments();
					}
					break;
				}
				setState(7730);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1323,_ctx) ) {
				case 1:
					{
					setState(7726);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(7723);
						arithmetic_separator();
						}
						}
						setState(7728);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7729);
					reference_modification();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArgumentsContext extends ParserRuleContext {
		public SubscriptingContext subscripting() {
			return getRuleContext(SubscriptingContext.class,0);
		}
		public ArgumentsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arguments; }
	}

	public final ArgumentsContext arguments() throws RecognitionException {
		ArgumentsContext _localctx = new ArgumentsContext(_ctx, getState());
		enterRule(_localctx, 602, RULE_arguments);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7734);
			subscripting();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SubscriptingContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public List<TerminalNode> ALL() { return getTokens(cobolParser.ALL); }
		public TerminalNode ALL(int i) {
			return getToken(cobolParser.ALL, i);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public SubscriptingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_subscripting; }
	}

	public final SubscriptingContext subscripting() throws RecognitionException {
		SubscriptingContext _localctx = new SubscriptingContext(_ctx, getState());
		enterRule(_localctx, 604, RULE_subscripting);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7736);
			match(LPAREN_);
			setState(7740);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(7737);
				arithmetic_separator();
				}
				}
				setState(7742);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7745);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1326,_ctx) ) {
			case 1:
				{
				setState(7743);
				arithmetic_expression(0);
				}
				break;
			case 2:
				{
				setState(7744);
				match(ALL);
				}
				break;
			}
			setState(7759);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1329,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7750);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (COMMA_ - 401)) | (1L << (SEMI_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
						{
						{
						setState(7747);
						separator();
						}
						}
						setState(7752);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7755);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1328,_ctx) ) {
					case 1:
						{
						setState(7753);
						arithmetic_expression(0);
						}
						break;
					case 2:
						{
						setState(7754);
						match(ALL);
						}
						break;
					}
					}
					} 
				}
				setState(7761);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1329,_ctx);
			}
			setState(7765);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(7762);
				arithmetic_separator();
				}
				}
				setState(7767);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7768);
			match(RPAREN_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Reference_modificationContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public Leftmost_character_positionContext leftmost_character_position() {
			return getRuleContext(Leftmost_character_positionContext.class,0);
		}
		public TerminalNode COLON_() { return getToken(cobolParser.COLON_, 0); }
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public LengthContext length() {
			return getRuleContext(LengthContext.class,0);
		}
		public Reference_modificationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_reference_modification; }
	}

	public final Reference_modificationContext reference_modification() throws RecognitionException {
		Reference_modificationContext _localctx = new Reference_modificationContext(_ctx, getState());
		enterRule(_localctx, 606, RULE_reference_modification);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7770);
			match(LPAREN_);
			setState(7774);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(7771);
				arithmetic_separator();
				}
				}
				setState(7776);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7777);
			leftmost_character_position();
			setState(7781);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(7778);
				arithmetic_separator();
				}
				}
				setState(7783);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7784);
			match(COLON_);
			setState(7792);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1334,_ctx) ) {
			case 1:
				{
				setState(7788);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
					{
					{
					setState(7785);
					arithmetic_separator();
					}
					}
					setState(7790);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7791);
				length();
				}
				break;
			}
			setState(7797);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 401)) & ~0x3f) == 0 && ((1L << (_la - 401)) & ((1L << (START_SLASH_ - 401)) | (1L << (START_STAR_ - 401)) | (1L << (START_FOUR_SPACES - 401)) | (1L << (WHITESPACE - 401)) | (1L << (NEWLINE - 401)))) != 0)) {
				{
				{
				setState(7794);
				arithmetic_separator();
				}
				}
				setState(7799);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7800);
			match(RPAREN_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Leftmost_character_positionContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public Leftmost_character_positionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_leftmost_character_position; }
	}

	public final Leftmost_character_positionContext leftmost_character_position() throws RecognitionException {
		Leftmost_character_positionContext _localctx = new Leftmost_character_positionContext(_ctx, getState());
		enterRule(_localctx, 608, RULE_leftmost_character_position);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7802);
			arithmetic_expression(0);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class LengthContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public LengthContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_length; }
	}

	public final LengthContext length() throws RecognitionException {
		LengthContext _localctx = new LengthContext(_ctx, getState());
		enterRule(_localctx, 610, RULE_length);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7804);
			arithmetic_expression(0);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Function_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Function_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_function_name; }
	}

	public final Function_nameContext function_name() throws RecognitionException {
		Function_nameContext _localctx = new Function_nameContext(_ctx, getState());
		enterRule(_localctx, 612, RULE_function_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7806);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 286:
			return arithmetic_expression_sempred((Arithmetic_expressionContext)_localctx, predIndex);
		case 290:
			return logic_expression_sempred((Logic_expressionContext)_localctx, predIndex);
		case 292:
			return logic_condition_sempred((Logic_conditionContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean arithmetic_expression_sempred(Arithmetic_expressionContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0:
			return precpred(_ctx, 4);
		}
		return true;
	}
	private boolean logic_expression_sempred(Logic_expressionContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1:
			return precpred(_ctx, 6);
		}
		return true;
	}
	private boolean logic_condition_sempred(Logic_conditionContext _localctx, int predIndex) {
		switch (predIndex) {
		case 2:
			return precpred(_ctx, 1);
		}
		return true;
	}

	private static final int _serializedATNSegments = 4;
	private static final String _serializedATNSegment0 =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\3\u01b2\u1e83\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4"+
		"`\t`\4a\ta\4b\tb\4c\tc\4d\td\4e\te\4f\tf\4g\tg\4h\th\4i\ti\4j\tj\4k\t"+
		"k\4l\tl\4m\tm\4n\tn\4o\to\4p\tp\4q\tq\4r\tr\4s\ts\4t\tt\4u\tu\4v\tv\4"+
		"w\tw\4x\tx\4y\ty\4z\tz\4{\t{\4|\t|\4}\t}\4~\t~\4\177\t\177\4\u0080\t\u0080"+
		"\4\u0081\t\u0081\4\u0082\t\u0082\4\u0083\t\u0083\4\u0084\t\u0084\4\u0085"+
		"\t\u0085\4\u0086\t\u0086\4\u0087\t\u0087\4\u0088\t\u0088\4\u0089\t\u0089"+
		"\4\u008a\t\u008a\4\u008b\t\u008b\4\u008c\t\u008c\4\u008d\t\u008d\4\u008e"+
		"\t\u008e\4\u008f\t\u008f\4\u0090\t\u0090\4\u0091\t\u0091\4\u0092\t\u0092"+
		"\4\u0093\t\u0093\4\u0094\t\u0094\4\u0095\t\u0095\4\u0096\t\u0096\4\u0097"+
		"\t\u0097\4\u0098\t\u0098\4\u0099\t\u0099\4\u009a\t\u009a\4\u009b\t\u009b"+
		"\4\u009c\t\u009c\4\u009d\t\u009d\4\u009e\t\u009e\4\u009f\t\u009f\4\u00a0"+
		"\t\u00a0\4\u00a1\t\u00a1\4\u00a2\t\u00a2\4\u00a3\t\u00a3\4\u00a4\t\u00a4"+
		"\4\u00a5\t\u00a5\4\u00a6\t\u00a6\4\u00a7\t\u00a7\4\u00a8\t\u00a8\4\u00a9"+
		"\t\u00a9\4\u00aa\t\u00aa\4\u00ab\t\u00ab\4\u00ac\t\u00ac\4\u00ad\t\u00ad"+
		"\4\u00ae\t\u00ae\4\u00af\t\u00af\4\u00b0\t\u00b0\4\u00b1\t\u00b1\4\u00b2"+
		"\t\u00b2\4\u00b3\t\u00b3\4\u00b4\t\u00b4\4\u00b5\t\u00b5\4\u00b6\t\u00b6"+
		"\4\u00b7\t\u00b7\4\u00b8\t\u00b8\4\u00b9\t\u00b9\4\u00ba\t\u00ba\4\u00bb"+
		"\t\u00bb\4\u00bc\t\u00bc\4\u00bd\t\u00bd\4\u00be\t\u00be\4\u00bf\t\u00bf"+
		"\4\u00c0\t\u00c0\4\u00c1\t\u00c1\4\u00c2\t\u00c2\4\u00c3\t\u00c3\4\u00c4"+
		"\t\u00c4\4\u00c5\t\u00c5\4\u00c6\t\u00c6\4\u00c7\t\u00c7\4\u00c8\t\u00c8"+
		"\4\u00c9\t\u00c9\4\u00ca\t\u00ca\4\u00cb\t\u00cb\4\u00cc\t\u00cc\4\u00cd"+
		"\t\u00cd\4\u00ce\t\u00ce\4\u00cf\t\u00cf\4\u00d0\t\u00d0\4\u00d1\t\u00d1"+
		"\4\u00d2\t\u00d2\4\u00d3\t\u00d3\4\u00d4\t\u00d4\4\u00d5\t\u00d5\4\u00d6"+
		"\t\u00d6\4\u00d7\t\u00d7\4\u00d8\t\u00d8\4\u00d9\t\u00d9\4\u00da\t\u00da"+
		"\4\u00db\t\u00db\4\u00dc\t\u00dc\4\u00dd\t\u00dd\4\u00de\t\u00de\4\u00df"+
		"\t\u00df\4\u00e0\t\u00e0\4\u00e1\t\u00e1\4\u00e2\t\u00e2\4\u00e3\t\u00e3"+
		"\4\u00e4\t\u00e4\4\u00e5\t\u00e5\4\u00e6\t\u00e6\4\u00e7\t\u00e7\4\u00e8"+
		"\t\u00e8\4\u00e9\t\u00e9\4\u00ea\t\u00ea\4\u00eb\t\u00eb\4\u00ec\t\u00ec"+
		"\4\u00ed\t\u00ed\4\u00ee\t\u00ee\4\u00ef\t\u00ef\4\u00f0\t\u00f0\4\u00f1"+
		"\t\u00f1\4\u00f2\t\u00f2\4\u00f3\t\u00f3\4\u00f4\t\u00f4\4\u00f5\t\u00f5"+
		"\4\u00f6\t\u00f6\4\u00f7\t\u00f7\4\u00f8\t\u00f8\4\u00f9\t\u00f9\4\u00fa"+
		"\t\u00fa\4\u00fb\t\u00fb\4\u00fc\t\u00fc\4\u00fd\t\u00fd\4\u00fe\t\u00fe"+
		"\4\u00ff\t\u00ff\4\u0100\t\u0100\4\u0101\t\u0101\4\u0102\t\u0102\4\u0103"+
		"\t\u0103\4\u0104\t\u0104\4\u0105\t\u0105\4\u0106\t\u0106\4\u0107\t\u0107"+
		"\4\u0108\t\u0108\4\u0109\t\u0109\4\u010a\t\u010a\4\u010b\t\u010b\4\u010c"+
		"\t\u010c\4\u010d\t\u010d\4\u010e\t\u010e\4\u010f\t\u010f\4\u0110\t\u0110"+
		"\4\u0111\t\u0111\4\u0112\t\u0112\4\u0113\t\u0113\4\u0114\t\u0114\4\u0115"+
		"\t\u0115\4\u0116\t\u0116\4\u0117\t\u0117\4\u0118\t\u0118\4\u0119\t\u0119"+
		"\4\u011a\t\u011a\4\u011b\t\u011b\4\u011c\t\u011c\4\u011d\t\u011d\4\u011e"+
		"\t\u011e\4\u011f\t\u011f\4\u0120\t\u0120\4\u0121\t\u0121\4\u0122\t\u0122"+
		"\4\u0123\t\u0123\4\u0124\t\u0124\4\u0125\t\u0125\4\u0126\t\u0126\4\u0127"+
		"\t\u0127\4\u0128\t\u0128\4\u0129\t\u0129\4\u012a\t\u012a\4\u012b\t\u012b"+
		"\4\u012c\t\u012c\4\u012d\t\u012d\4\u012e\t\u012e\4\u012f\t\u012f\4\u0130"+
		"\t\u0130\4\u0131\t\u0131\4\u0132\t\u0132\4\u0133\t\u0133\4\u0134\t\u0134"+
		"\3\2\3\2\7\2\u026b\n\2\f\2\16\2\u026e\13\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\5\3\u027e\n\3\3\4\3\4\3\4\3\4\3\4\3\4\5\4"+
		"\u0286\n\4\3\5\3\5\3\5\3\5\5\5\u028c\n\5\3\6\3\6\7\6\u0290\n\6\f\6\16"+
		"\6\u0293\13\6\3\6\3\6\3\6\7\6\u0298\n\6\f\6\16\6\u029b\13\6\3\6\5\6\u029e"+
		"\n\6\3\7\3\7\5\7\u02a2\n\7\3\7\5\7\u02a5\n\7\3\7\5\7\u02a8\n\7\3\b\3\b"+
		"\5\b\u02ac\n\b\3\b\3\b\7\b\u02b0\n\b\f\b\16\b\u02b3\13\b\7\b\u02b5\n\b"+
		"\f\b\16\b\u02b8\13\b\3\b\3\b\7\b\u02bc\n\b\f\b\16\b\u02bf\13\b\7\b\u02c1"+
		"\n\b\f\b\16\b\u02c4\13\b\5\b\u02c6\n\b\3\b\7\b\u02c9\n\b\f\b\16\b\u02cc"+
		"\13\b\3\b\5\b\u02cf\n\b\3\b\7\b\u02d2\n\b\f\b\16\b\u02d5\13\b\3\b\3\b"+
		"\7\b\u02d9\n\b\f\b\16\b\u02dc\13\b\7\b\u02de\n\b\f\b\16\b\u02e1\13\b\3"+
		"\t\3\t\6\t\u02e5\n\t\r\t\16\t\u02e6\3\t\3\t\6\t\u02eb\n\t\r\t\16\t\u02ec"+
		"\3\t\3\t\5\t\u02f1\n\t\3\t\7\t\u02f4\n\t\f\t\16\t\u02f7\13\t\3\t\3\t\7"+
		"\t\u02fb\n\t\f\t\16\t\u02fe\13\t\3\n\3\n\6\n\u0302\n\n\r\n\16\n\u0303"+
		"\3\n\3\n\6\n\u0308\n\n\r\n\16\n\u0309\3\n\3\n\5\n\u030e\n\n\3\n\6\n\u0311"+
		"\n\n\r\n\16\n\u0312\3\n\3\n\5\n\u0317\n\n\3\n\7\n\u031a\n\n\f\n\16\n\u031d"+
		"\13\n\3\n\3\n\7\n\u0321\n\n\f\n\16\n\u0324\13\n\3\13\3\13\3\f\3\f\7\f"+
		"\u032a\n\f\f\f\16\f\u032d\13\f\3\f\3\f\7\f\u0331\n\f\f\f\16\f\u0334\13"+
		"\f\3\f\3\f\7\f\u0338\n\f\f\f\16\f\u033b\13\f\6\f\u033d\n\f\r\f\16\f\u033e"+
		"\3\f\3\f\6\f\u0343\n\f\r\f\16\f\u0344\3\f\3\f\7\f\u0349\n\f\f\f\16\f\u034c"+
		"\13\f\3\f\3\f\7\f\u0350\n\f\f\f\16\f\u0353\13\f\3\r\3\r\3\r\6\r\u0358"+
		"\n\r\r\r\16\r\u0359\3\r\3\r\7\r\u035e\n\r\f\r\16\r\u0361\13\r\3\16\3\16"+
		"\3\17\3\17\7\17\u0367\n\17\f\17\16\17\u036a\13\17\3\17\3\17\7\17\u036e"+
		"\n\17\f\17\16\17\u0371\13\17\3\17\3\17\7\17\u0375\n\17\f\17\16\17\u0378"+
		"\13\17\7\17\u037a\n\17\f\17\16\17\u037d\13\17\3\20\3\20\7\20\u0381\n\20"+
		"\f\20\16\20\u0384\13\20\6\20\u0386\n\20\r\20\16\20\u0387\3\20\7\20\u038b"+
		"\n\20\f\20\16\20\u038e\13\20\3\20\3\20\7\20\u0392\n\20\f\20\16\20\u0395"+
		"\13\20\5\20\u0397\n\20\3\21\3\21\6\21\u039b\n\21\r\21\16\21\u039c\3\21"+
		"\3\21\5\21\u03a1\n\21\3\21\6\21\u03a4\n\21\r\21\16\21\u03a5\3\21\3\21"+
		"\6\21\u03aa\n\21\r\21\16\21\u03ab\3\21\3\21\5\21\u03b0\n\21\3\21\6\21"+
		"\u03b3\n\21\r\21\16\21\u03b4\3\21\3\21\6\21\u03b9\n\21\r\21\16\21\u03ba"+
		"\3\21\3\21\6\21\u03bf\n\21\r\21\16\21\u03c0\3\21\3\21\5\21\u03c5\n\21"+
		"\3\21\6\21\u03c8\n\21\r\21\16\21\u03c9\3\21\3\21\7\21\u03ce\n\21\f\21"+
		"\16\21\u03d1\13\21\3\21\3\21\7\21\u03d5\n\21\f\21\16\21\u03d8\13\21\3"+
		"\21\3\21\6\21\u03dc\n\21\r\21\16\21\u03dd\3\21\3\21\6\21\u03e2\n\21\r"+
		"\21\16\21\u03e3\3\21\3\21\5\21\u03e8\n\21\3\21\7\21\u03eb\n\21\f\21\16"+
		"\21\u03ee\13\21\3\21\3\21\7\21\u03f2\n\21\f\21\16\21\u03f5\13\21\3\22"+
		"\3\22\3\23\3\23\6\23\u03fb\n\23\r\23\16\23\u03fc\3\23\3\23\7\23\u0401"+
		"\n\23\f\23\16\23\u0404\13\23\3\23\3\23\3\23\3\23\5\23\u040a\n\23\3\24"+
		"\3\24\6\24\u040e\n\24\r\24\16\24\u040f\3\24\3\24\6\24\u0414\n\24\r\24"+
		"\16\24\u0415\3\24\3\24\5\24\u041a\n\24\3\24\7\24\u041d\n\24\f\24\16\24"+
		"\u0420\13\24\3\24\3\24\7\24\u0424\n\24\f\24\16\24\u0427\13\24\3\25\3\25"+
		"\3\26\3\26\3\27\3\27\6\27\u042f\n\27\r\27\16\27\u0430\3\27\3\27\6\27\u0435"+
		"\n\27\r\27\16\27\u0436\3\27\3\27\7\27\u043b\n\27\f\27\16\27\u043e\13\27"+
		"\3\30\3\30\6\30\u0442\n\30\r\30\16\30\u0443\3\30\3\30\3\31\3\31\7\31\u044a"+
		"\n\31\f\31\16\31\u044d\13\31\3\31\3\31\3\31\3\31\7\31\u0453\n\31\f\31"+
		"\16\31\u0456\13\31\3\31\3\31\3\31\5\31\u045b\n\31\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\32\5\32\u0468\n\32\3\33\3\33\5\33\u046c"+
		"\n\33\3\34\3\34\6\34\u0470\n\34\r\34\16\34\u0471\3\34\3\34\6\34\u0476"+
		"\n\34\r\34\16\34\u0477\3\34\3\34\6\34\u047c\n\34\r\34\16\34\u047d\3\34"+
		"\3\34\6\34\u0482\n\34\r\34\16\34\u0483\3\34\3\34\5\34\u0488\n\34\3\34"+
		"\6\34\u048b\n\34\r\34\16\34\u048c\3\34\3\34\6\34\u0491\n\34\r\34\16\34"+
		"\u0492\3\34\3\34\5\34\u0497\n\34\6\34\u0499\n\34\r\34\16\34\u049a\3\34"+
		"\6\34\u049e\n\34\r\34\16\34\u049f\3\34\3\34\5\34\u04a4\n\34\3\34\6\34"+
		"\u04a7\n\34\r\34\16\34\u04a8\3\34\3\34\5\34\u04ad\n\34\3\35\3\35\6\35"+
		"\u04b1\n\35\r\35\16\35\u04b2\3\35\3\35\6\35\u04b7\n\35\r\35\16\35\u04b8"+
		"\3\35\3\35\6\35\u04bd\n\35\r\35\16\35\u04be\3\35\3\35\6\35\u04c3\n\35"+
		"\r\35\16\35\u04c4\3\35\3\35\5\35\u04c9\n\35\3\35\6\35\u04cc\n\35\r\35"+
		"\16\35\u04cd\3\35\3\35\6\35\u04d2\n\35\r\35\16\35\u04d3\3\35\3\35\5\35"+
		"\u04d8\n\35\3\35\6\35\u04db\n\35\r\35\16\35\u04dc\3\35\3\35\6\35\u04e1"+
		"\n\35\r\35\16\35\u04e2\3\35\3\35\6\35\u04e7\n\35\r\35\16\35\u04e8\3\35"+
		"\3\35\5\35\u04ed\n\35\3\35\6\35\u04f0\n\35\r\35\16\35\u04f1\3\35\3\35"+
		"\5\35\u04f6\n\35\3\36\3\36\3\37\3\37\5\37\u04fc\n\37\3 \3 \3 \3 \5 \u0502"+
		"\n \3!\3!\6!\u0506\n!\r!\16!\u0507\3!\3!\6!\u050c\n!\r!\16!\u050d\3!\3"+
		"!\7!\u0512\n!\f!\16!\u0515\13!\6!\u0517\n!\r!\16!\u0518\3!\6!\u051c\n"+
		"!\r!\16!\u051d\3!\3!\5!\u0522\n!\3\"\3\"\6\"\u0526\n\"\r\"\16\"\u0527"+
		"\3\"\3\"\6\"\u052c\n\"\r\"\16\"\u052d\3\"\3\"\7\"\u0532\n\"\f\"\16\"\u0535"+
		"\13\"\6\"\u0537\n\"\r\"\16\"\u0538\3\"\6\"\u053c\n\"\r\"\16\"\u053d\3"+
		"\"\3\"\5\"\u0542\n\"\3#\3#\6#\u0546\n#\r#\16#\u0547\3#\3#\6#\u054c\n#"+
		"\r#\16#\u054d\3#\3#\6#\u0552\n#\r#\16#\u0553\5#\u0556\n#\3#\3#\6#\u055a"+
		"\n#\r#\16#\u055b\3#\3#\5#\u0560\n#\3#\5#\u0563\n#\5#\u0565\n#\3#\6#\u0568"+
		"\n#\r#\16#\u0569\3#\3#\5#\u056e\n#\3$\3$\6$\u0572\n$\r$\16$\u0573\3$\3"+
		"$\6$\u0578\n$\r$\16$\u0579\3$\3$\6$\u057e\n$\r$\16$\u057f\3$\3$\6$\u0584"+
		"\n$\r$\16$\u0585\3$\3$\5$\u058a\n$\3$\6$\u058d\n$\r$\16$\u058e\3$\3$\5"+
		"$\u0593\n$\3%\3%\5%\u0597\n%\3&\3&\3\'\3\'\6\'\u059d\n\'\r\'\16\'\u059e"+
		"\3\'\3\'\3\'\6\'\u05a4\n\'\r\'\16\'\u05a5\3\'\3\'\5\'\u05aa\n\'\3(\3("+
		"\6(\u05ae\n(\r(\16(\u05af\3(\3(\3(\6(\u05b5\n(\r(\16(\u05b6\3(\3(\5(\u05bb"+
		"\n(\3)\3)\6)\u05bf\n)\r)\16)\u05c0\5)\u05c3\n)\3)\3)\3)\6)\u05c8\n)\r"+
		")\16)\u05c9\3)\3)\3)\3)\6)\u05d0\n)\r)\16)\u05d1\5)\u05d4\n)\3)\3)\6)"+
		"\u05d8\n)\r)\16)\u05d9\3)\3)\5)\u05de\n)\5)\u05e0\n)\3*\3*\3*\3*\3*\6"+
		"*\u05e7\n*\r*\16*\u05e8\3*\3*\6*\u05ed\n*\r*\16*\u05ee\5*\u05f1\n*\3*"+
		"\3*\6*\u05f5\n*\r*\16*\u05f6\3*\3*\5*\u05fb\n*\5*\u05fd\n*\3*\6*\u0600"+
		"\n*\r*\16*\u0601\3*\3*\3*\3*\6*\u0608\n*\r*\16*\u0609\5*\u060c\n*\3*\3"+
		"*\3*\3*\3*\6*\u0613\n*\r*\16*\u0614\5*\u0617\n*\3*\3*\3*\3*\6*\u061d\n"+
		"*\r*\16*\u061e\5*\u0621\n*\3*\3*\3*\6*\u0626\n*\r*\16*\u0627\5*\u062a"+
		"\n*\3*\3*\6*\u062e\n*\r*\16*\u062f\3*\3*\5*\u0634\n*\5*\u0636\n*\3+\3"+
		"+\6+\u063a\n+\r+\16+\u063b\5+\u063e\n+\3+\3+\6+\u0642\n+\r+\16+\u0643"+
		"\3+\3+\5+\u0648\n+\3+\6+\u064b\n+\r+\16+\u064c\3+\3+\3,\3,\6,\u0653\n"+
		",\r,\16,\u0654\5,\u0657\n,\3,\3,\6,\u065b\n,\r,\16,\u065c\3,\3,\5,\u0661"+
		"\n,\3,\6,\u0664\n,\r,\16,\u0665\3,\3,\3-\3-\3.\3.\6.\u066e\n.\r.\16.\u066f"+
		"\3.\3.\6.\u0674\n.\r.\16.\u0675\3.\3.\5.\u067a\n.\3.\6.\u067d\n.\r.\16"+
		".\u067e\3.\3.\5.\u0683\n.\3.\6.\u0686\n.\r.\16.\u0687\3.\3.\5.\u068c\n"+
		".\3/\3/\3\60\3\60\6\60\u0692\n\60\r\60\16\60\u0693\3\60\3\60\6\60\u0698"+
		"\n\60\r\60\16\60\u0699\3\60\3\60\5\60\u069e\n\60\6\60\u06a0\n\60\r\60"+
		"\16\60\u06a1\3\60\6\60\u06a5\n\60\r\60\16\60\u06a6\3\60\3\60\6\60\u06ab"+
		"\n\60\r\60\16\60\u06ac\3\60\7\60\u06b0\n\60\f\60\16\60\u06b3\13\60\3\60"+
		"\3\60\7\60\u06b7\n\60\f\60\16\60\u06ba\13\60\5\60\u06bc\n\60\3\60\3\60"+
		"\6\60\u06c0\n\60\r\60\16\60\u06c1\3\60\3\60\5\60\u06c6\n\60\3\60\6\60"+
		"\u06c9\n\60\r\60\16\60\u06ca\3\60\3\60\5\60\u06cf\n\60\3\61\3\61\6\61"+
		"\u06d3\n\61\r\61\16\61\u06d4\3\61\3\61\6\61\u06d9\n\61\r\61\16\61\u06da"+
		"\3\61\3\61\5\61\u06df\n\61\6\61\u06e1\n\61\r\61\16\61\u06e2\3\62\3\62"+
		"\6\62\u06e7\n\62\r\62\16\62\u06e8\3\62\3\62\6\62\u06ed\n\62\r\62\16\62"+
		"\u06ee\5\62\u06f1\n\62\3\62\3\62\3\62\6\62\u06f6\n\62\r\62\16\62\u06f7"+
		"\5\62\u06fa\n\62\3\62\3\62\6\62\u06fe\n\62\r\62\16\62\u06ff\3\62\3\62"+
		"\5\62\u0704\n\62\5\62\u0706\n\62\3\62\3\62\6\62\u070a\n\62\r\62\16\62"+
		"\u070b\5\62\u070e\n\62\3\62\3\62\6\62\u0712\n\62\r\62\16\62\u0713\3\62"+
		"\3\62\3\62\5\62\u0719\n\62\5\62\u071b\n\62\3\63\3\63\6\63\u071f\n\63\r"+
		"\63\16\63\u0720\3\63\3\63\6\63\u0725\n\63\r\63\16\63\u0726\3\64\3\64\6"+
		"\64\u072b\n\64\r\64\16\64\u072c\3\64\3\64\6\64\u0731\n\64\r\64\16\64\u0732"+
		"\3\64\3\64\5\64\u0737\n\64\3\64\6\64\u073a\n\64\r\64\16\64\u073b\3\64"+
		"\3\64\5\64\u0740\n\64\3\64\6\64\u0743\n\64\r\64\16\64\u0744\3\64\3\64"+
		"\5\64\u0749\n\64\3\64\6\64\u074c\n\64\r\64\16\64\u074d\3\64\3\64\5\64"+
		"\u0752\n\64\3\65\3\65\6\65\u0756\n\65\r\65\16\65\u0757\3\65\3\65\3\66"+
		"\3\66\6\66\u075e\n\66\r\66\16\66\u075f\3\66\3\66\6\66\u0764\n\66\r\66"+
		"\16\66\u0765\3\67\3\67\3\67\6\67\u076b\n\67\r\67\16\67\u076c\5\67\u076f"+
		"\n\67\3\67\3\67\6\67\u0773\n\67\r\67\16\67\u0774\3\67\3\67\7\67\u0779"+
		"\n\67\f\67\16\67\u077c\13\67\5\67\u077e\n\67\38\38\68\u0782\n8\r8\168"+
		"\u0783\58\u0786\n8\38\38\38\68\u078b\n8\r8\168\u078c\58\u078f\n8\38\3"+
		"8\38\68\u0794\n8\r8\168\u0795\58\u0798\n8\38\38\38\68\u079d\n8\r8\168"+
		"\u079e\58\u07a1\n8\38\58\u07a4\n8\39\39\39\59\u07a9\n9\3:\3:\3;\3;\6;"+
		"\u07af\n;\r;\16;\u07b0\3;\3;\6;\u07b5\n;\r;\16;\u07b6\3;\3;\6;\u07bb\n"+
		";\r;\16;\u07bc\3;\3;\6;\u07c1\n;\r;\16;\u07c2\3;\3;\6;\u07c7\n;\r;\16"+
		";\u07c8\5;\u07cb\n;\3;\3;\6;\u07cf\n;\r;\16;\u07d0\3<\3<\3=\3=\3>\3>\6"+
		">\u07d9\n>\r>\16>\u07da\3>\3>\6>\u07df\n>\r>\16>\u07e0\3>\6>\u07e4\n>"+
		"\r>\16>\u07e5\3>\3>\6>\u07ea\n>\r>\16>\u07eb\3>\3>\6>\u07f0\n>\r>\16>"+
		"\u07f1\3>\3>\5>\u07f6\n>\6>\u07f8\n>\r>\16>\u07f9\3>\3>\6>\u07fe\n>\r"+
		">\16>\u07ff\3>\3>\7>\u0804\n>\f>\16>\u0807\13>\3>\6>\u080a\n>\r>\16>\u080b"+
		"\3>\3>\5>\u0810\n>\3>\6>\u0813\n>\r>\16>\u0814\3>\3>\6>\u0819\n>\r>\16"+
		">\u081a\3>\6>\u081e\n>\r>\16>\u081f\3>\3>\6>\u0824\n>\r>\16>\u0825\3>"+
		"\3>\6>\u082a\n>\r>\16>\u082b\3>\3>\5>\u0830\n>\6>\u0832\n>\r>\16>\u0833"+
		"\3>\3>\6>\u0838\n>\r>\16>\u0839\3>\3>\6>\u083e\n>\r>\16>\u083f\3>\3>\6"+
		">\u0844\n>\r>\16>\u0845\3>\3>\6>\u084a\n>\r>\16>\u084b\3>\3>\6>\u0850"+
		"\n>\r>\16>\u0851\3>\3>\5>\u0856\n>\5>\u0858\n>\3>\6>\u085b\n>\r>\16>\u085c"+
		"\3>\3>\5>\u0861\n>\3>\6>\u0864\n>\r>\16>\u0865\3>\3>\5>\u086a\n>\3?\3"+
		"?\3@\3@\5@\u0870\n@\3A\3A\3A\3A\3A\3A\5A\u0878\nA\3B\3B\6B\u087c\nB\r"+
		"B\16B\u087d\3B\3B\6B\u0882\nB\rB\16B\u0883\3B\3B\5B\u0888\nB\3B\3B\6B"+
		"\u088c\nB\rB\16B\u088d\3B\3B\6B\u0892\nB\rB\16B\u0893\3B\3B\5B\u0898\n"+
		"B\5B\u089a\nB\3C\3C\6C\u089e\nC\rC\16C\u089f\3C\3C\6C\u08a4\nC\rC\16C"+
		"\u08a5\3C\3C\5C\u08aa\nC\3C\3C\6C\u08ae\nC\rC\16C\u08af\3C\3C\6C\u08b4"+
		"\nC\rC\16C\u08b5\3C\3C\5C\u08ba\nC\5C\u08bc\nC\3D\3D\6D\u08c0\nD\rD\16"+
		"D\u08c1\3D\3D\6D\u08c6\nD\rD\16D\u08c7\3D\3D\5D\u08cc\nD\3D\3D\6D\u08d0"+
		"\nD\rD\16D\u08d1\3D\3D\6D\u08d6\nD\rD\16D\u08d7\3D\3D\5D\u08dc\nD\5D\u08de"+
		"\nD\3E\3E\6E\u08e2\nE\rE\16E\u08e3\3E\3E\6E\u08e8\nE\rE\16E\u08e9\3E\3"+
		"E\5E\u08ee\nE\3E\3E\6E\u08f2\nE\rE\16E\u08f3\3E\3E\6E\u08f8\nE\rE\16E"+
		"\u08f9\3E\3E\5E\u08fe\nE\5E\u0900\nE\3F\3F\6F\u0904\nF\rF\16F\u0905\3"+
		"F\3F\6F\u090a\nF\rF\16F\u090b\3F\3F\6F\u0910\nF\rF\16F\u0911\5F\u0914"+
		"\nF\3F\3F\6F\u0918\nF\rF\16F\u0919\3F\3F\5F\u091e\nF\3F\6F\u0921\nF\r"+
		"F\16F\u0922\3F\3F\5F\u0927\nF\3G\3G\3H\3H\6H\u092d\nH\rH\16H\u092e\3H"+
		"\3H\6H\u0933\nH\rH\16H\u0934\3H\3H\6H\u0939\nH\rH\16H\u093a\3H\3H\5H\u093f"+
		"\nH\3H\6H\u0942\nH\rH\16H\u0943\3H\3H\6H\u0948\nH\rH\16H\u0949\3H\3H\5"+
		"H\u094e\nH\3H\6H\u0951\nH\rH\16H\u0952\3H\3H\5H\u0957\nH\3H\6H\u095a\n"+
		"H\rH\16H\u095b\3H\3H\5H\u0960\nH\3I\3I\6I\u0964\nI\rI\16I\u0965\3I\3I"+
		"\6I\u096a\nI\rI\16I\u096b\3I\3I\6I\u0970\nI\rI\16I\u0971\3I\3I\3J\3J\6"+
		"J\u0978\nJ\rJ\16J\u0979\3J\3J\6J\u097e\nJ\rJ\16J\u097f\3J\3J\6J\u0984"+
		"\nJ\rJ\16J\u0985\3J\6J\u0989\nJ\rJ\16J\u098a\3J\3J\5J\u098f\nJ\5J\u0991"+
		"\nJ\3J\6J\u0994\nJ\rJ\16J\u0995\3J\3J\5J\u099a\nJ\3K\3K\6K\u099e\nK\r"+
		"K\16K\u099f\3K\3K\6K\u09a4\nK\rK\16K\u09a5\5K\u09a8\nK\3K\3K\6K\u09ac"+
		"\nK\rK\16K\u09ad\3K\3K\6K\u09b2\nK\rK\16K\u09b3\5K\u09b6\nK\3K\3K\6K\u09ba"+
		"\nK\rK\16K\u09bb\3K\3K\6K\u09c0\nK\rK\16K\u09c1\3K\6K\u09c5\nK\rK\16K"+
		"\u09c6\3K\3K\5K\u09cb\nK\5K\u09cd\nK\3K\6K\u09d0\nK\rK\16K\u09d1\3K\3"+
		"K\5K\u09d6\nK\3L\3L\6L\u09da\nL\rL\16L\u09db\3L\3L\6L\u09e0\nL\rL\16L"+
		"\u09e1\3L\3L\5L\u09e6\nL\3L\6L\u09e9\nL\rL\16L\u09ea\3L\3L\5L\u09ef\n"+
		"L\3L\6L\u09f2\nL\rL\16L\u09f3\3L\3L\5L\u09f8\nL\3M\3M\6M\u09fc\nM\rM\16"+
		"M\u09fd\5M\u0a00\nM\3M\3M\6M\u0a04\nM\rM\16M\u0a05\3M\3M\5M\u0a0a\nM\3"+
		"M\3M\6M\u0a0e\nM\rM\16M\u0a0f\3M\3M\5M\u0a14\nM\5M\u0a16\nM\3N\3N\6N\u0a1a"+
		"\nN\rN\16N\u0a1b\3N\3N\6N\u0a20\nN\rN\16N\u0a21\5N\u0a24\nN\3N\3N\5N\u0a28"+
		"\nN\3O\3O\6O\u0a2c\nO\rO\16O\u0a2d\3O\3O\6O\u0a32\nO\rO\16O\u0a33\5O\u0a36"+
		"\nO\3O\3O\5O\u0a3a\nO\3P\3P\6P\u0a3e\nP\rP\16P\u0a3f\5P\u0a42\nP\3P\3"+
		"P\6P\u0a46\nP\rP\16P\u0a47\3P\3P\5P\u0a4c\nP\3P\6P\u0a4f\nP\rP\16P\u0a50"+
		"\3P\3P\3P\3P\6P\u0a57\nP\rP\16P\u0a58\5P\u0a5b\nP\3P\3P\6P\u0a5f\nP\r"+
		"P\16P\u0a60\3P\3P\5P\u0a65\nP\3P\6P\u0a68\nP\rP\16P\u0a69\3P\3P\3P\3P"+
		"\6P\u0a70\nP\rP\16P\u0a71\3P\3P\6P\u0a76\nP\rP\16P\u0a77\5P\u0a7a\nP\3"+
		"P\3P\6P\u0a7e\nP\rP\16P\u0a7f\3P\3P\5P\u0a84\nP\5P\u0a86\nP\3P\6P\u0a89"+
		"\nP\rP\16P\u0a8a\3P\3P\3P\3P\6P\u0a91\nP\rP\16P\u0a92\5P\u0a95\nP\3P\5"+
		"P\u0a98\nP\3Q\3Q\3Q\3Q\3Q\6Q\u0a9f\nQ\rQ\16Q\u0aa0\5Q\u0aa3\nQ\3Q\3Q\3"+
		"Q\6Q\u0aa8\nQ\rQ\16Q\u0aa9\3Q\3Q\5Q\u0aae\nQ\3Q\3Q\6Q\u0ab2\nQ\rQ\16Q"+
		"\u0ab3\5Q\u0ab6\nQ\3Q\3Q\3Q\3Q\6Q\u0abc\nQ\rQ\16Q\u0abd\5Q\u0ac0\nQ\3"+
		"Q\3Q\6Q\u0ac4\nQ\rQ\16Q\u0ac5\3Q\3Q\3Q\3Q\6Q\u0acc\nQ\rQ\16Q\u0acd\3Q"+
		"\3Q\6Q\u0ad2\nQ\rQ\16Q\u0ad3\5Q\u0ad6\nQ\3Q\3Q\3Q\3Q\6Q\u0adc\nQ\rQ\16"+
		"Q\u0add\5Q\u0ae0\nQ\3Q\3Q\6Q\u0ae4\nQ\rQ\16Q\u0ae5\3Q\3Q\5Q\u0aea\nQ\3"+
		"Q\6Q\u0aed\nQ\rQ\16Q\u0aee\3Q\3Q\5Q\u0af3\nQ\3R\3R\3S\3S\3S\3S\3S\6S\u0afc"+
		"\nS\rS\16S\u0afd\3S\3S\5S\u0b02\nS\5S\u0b04\nS\3T\3T\6T\u0b08\nT\rT\16"+
		"T\u0b09\3T\3T\3T\3T\6T\u0b10\nT\rT\16T\u0b11\5T\u0b14\nT\3T\3T\3T\6T\u0b19"+
		"\nT\rT\16T\u0b1a\5T\u0b1d\nT\3T\3T\6T\u0b21\nT\rT\16T\u0b22\3T\3T\3T\3"+
		"T\6T\u0b29\nT\rT\16T\u0b2a\5T\u0b2d\nT\3T\3T\3T\6T\u0b32\nT\rT\16T\u0b33"+
		"\5T\u0b36\nT\3T\3T\6T\u0b3a\nT\rT\16T\u0b3b\3T\3T\5T\u0b40\nT\3U\3U\3"+
		"V\3V\5V\u0b46\nV\3W\3W\3W\6W\u0b4b\nW\rW\16W\u0b4c\3W\3W\6W\u0b51\nW\r"+
		"W\16W\u0b52\3W\3W\5W\u0b57\nW\5W\u0b59\nW\3W\3W\6W\u0b5d\nW\rW\16W\u0b5e"+
		"\3W\3W\5W\u0b63\nW\5W\u0b65\nW\3X\3X\6X\u0b69\nX\rX\16X\u0b6a\3X\3X\5"+
		"X\u0b6f\nX\3X\3X\6X\u0b73\nX\rX\16X\u0b74\3X\3X\5X\u0b79\nX\3X\3X\5X\u0b7d"+
		"\nX\3Y\3Y\3Z\3Z\3[\3[\6[\u0b85\n[\r[\16[\u0b86\5[\u0b89\n[\3[\3[\6[\u0b8d"+
		"\n[\r[\16[\u0b8e\3[\3[\5[\u0b93\n[\3\\\3\\\6\\\u0b97\n\\\r\\\16\\\u0b98"+
		"\5\\\u0b9b\n\\\3\\\3\\\6\\\u0b9f\n\\\r\\\16\\\u0ba0\3\\\3\\\5\\\u0ba5"+
		"\n\\\3]\3]\6]\u0ba9\n]\r]\16]\u0baa\5]\u0bad\n]\3]\3]\6]\u0bb1\n]\r]\16"+
		"]\u0bb2\3]\3]\6]\u0bb7\n]\r]\16]\u0bb8\3]\3]\5]\u0bbd\n]\3^\3^\6^\u0bc1"+
		"\n^\r^\16^\u0bc2\3^\3^\5^\u0bc7\n^\3^\6^\u0bca\n^\r^\16^\u0bcb\3^\3^\5"+
		"^\u0bd0\n^\3_\3_\6_\u0bd4\n_\r_\16_\u0bd5\3_\3_\7_\u0bda\n_\f_\16_\u0bdd"+
		"\13_\3_\3_\7_\u0be1\n_\f_\16_\u0be4\13_\3_\3_\7_\u0be8\n_\f_\16_\u0beb"+
		"\13_\5_\u0bed\n_\3_\3_\7_\u0bf1\n_\f_\16_\u0bf4\13_\5_\u0bf6\n_\3_\3_"+
		"\7_\u0bfa\n_\f_\16_\u0bfd\13_\5_\u0bff\n_\3_\3_\7_\u0c03\n_\f_\16_\u0c06"+
		"\13_\5_\u0c08\n_\3_\3_\7_\u0c0c\n_\f_\16_\u0c0f\13_\5_\u0c11\n_\3`\3`"+
		"\6`\u0c15\n`\r`\16`\u0c16\3`\3`\7`\u0c1b\n`\f`\16`\u0c1e\13`\3`\3`\7`"+
		"\u0c22\n`\f`\16`\u0c25\13`\3`\3`\7`\u0c29\n`\f`\16`\u0c2c\13`\3`\7`\u0c2f"+
		"\n`\f`\16`\u0c32\13`\3`\3`\3`\7`\u0c37\n`\f`\16`\u0c3a\13`\3`\7`\u0c3d"+
		"\n`\f`\16`\u0c40\13`\5`\u0c42\n`\3`\7`\u0c45\n`\f`\16`\u0c48\13`\7`\u0c4a"+
		"\n`\f`\16`\u0c4d\13`\3a\3a\6a\u0c51\na\ra\16a\u0c52\3a\3a\7a\u0c57\na"+
		"\fa\16a\u0c5a\13a\3a\3a\7a\u0c5e\na\fa\16a\u0c61\13a\3a\3a\7a\u0c65\n"+
		"a\fa\16a\u0c68\13a\7a\u0c6a\na\fa\16a\u0c6d\13a\3b\3b\6b\u0c71\nb\rb\16"+
		"b\u0c72\3b\3b\7b\u0c77\nb\fb\16b\u0c7a\13b\3b\3b\7b\u0c7e\nb\fb\16b\u0c81"+
		"\13b\3b\3b\7b\u0c85\nb\fb\16b\u0c88\13b\7b\u0c8a\nb\fb\16b\u0c8d\13b\3"+
		"c\3c\6c\u0c91\nc\rc\16c\u0c92\3c\3c\7c\u0c97\nc\fc\16c\u0c9a\13c\3c\3"+
		"c\7c\u0c9e\nc\fc\16c\u0ca1\13c\3c\3c\7c\u0ca5\nc\fc\16c\u0ca8\13c\3c\7"+
		"c\u0cab\nc\fc\16c\u0cae\13c\3c\7c\u0cb1\nc\fc\16c\u0cb4\13c\7c\u0cb6\n"+
		"c\fc\16c\u0cb9\13c\3d\3d\6d\u0cbd\nd\rd\16d\u0cbe\3d\3d\7d\u0cc3\nd\f"+
		"d\16d\u0cc6\13d\3d\3d\7d\u0cca\nd\fd\16d\u0ccd\13d\3d\3d\7d\u0cd1\nd\f"+
		"d\16d\u0cd4\13d\7d\u0cd6\nd\fd\16d\u0cd9\13d\3e\3e\6e\u0cdd\ne\re\16e"+
		"\u0cde\3e\3e\7e\u0ce3\ne\fe\16e\u0ce6\13e\3e\3e\7e\u0cea\ne\fe\16e\u0ced"+
		"\13e\7e\u0cef\ne\fe\16e\u0cf2\13e\3e\3e\3f\3f\6f\u0cf8\nf\rf\16f\u0cf9"+
		"\3f\3f\7f\u0cfe\nf\ff\16f\u0d01\13f\3f\3f\7f\u0d05\nf\ff\16f\u0d08\13"+
		"f\7f\u0d0a\nf\ff\16f\u0d0d\13f\3f\3f\3g\3g\6g\u0d13\ng\rg\16g\u0d14\3"+
		"g\3g\7g\u0d19\ng\fg\16g\u0d1c\13g\3g\3g\7g\u0d20\ng\fg\16g\u0d23\13g\7"+
		"g\u0d25\ng\fg\16g\u0d28\13g\3g\3g\3h\3h\6h\u0d2e\nh\rh\16h\u0d2f\5h\u0d32"+
		"\nh\3h\3h\3h\6h\u0d37\nh\rh\16h\u0d38\5h\u0d3b\nh\3h\3h\3h\3h\3h\3h\3"+
		"h\3h\3h\3h\3h\3h\5h\u0d49\nh\3i\3i\7i\u0d4d\ni\fi\16i\u0d50\13i\3i\7i"+
		"\u0d53\ni\fi\16i\u0d56\13i\3j\3j\6j\u0d5a\nj\rj\16j\u0d5b\3j\3j\5j\u0d60"+
		"\nj\5j\u0d62\nj\3j\6j\u0d65\nj\rj\16j\u0d66\3j\3j\6j\u0d6b\nj\rj\16j\u0d6c"+
		"\3j\3j\5j\u0d71\nj\3j\6j\u0d74\nj\rj\16j\u0d75\3j\3j\7j\u0d7a\nj\fj\16"+
		"j\u0d7d\13j\3j\3j\3k\3k\3l\3l\6l\u0d85\nl\rl\16l\u0d86\5l\u0d89\nl\3l"+
		"\3l\3l\6l\u0d8e\nl\rl\16l\u0d8f\5l\u0d92\nl\3l\3l\3l\3l\3l\3l\3l\6l\u0d9b"+
		"\nl\rl\16l\u0d9c\3l\3l\5l\u0da1\nl\3l\3l\6l\u0da5\nl\rl\16l\u0da6\3l\3"+
		"l\5l\u0dab\nl\3l\3l\6l\u0daf\nl\rl\16l\u0db0\3l\3l\6l\u0db5\nl\rl\16l"+
		"\u0db6\5l\u0db9\nl\3l\3l\3l\3l\5l\u0dbf\nl\3m\3m\6m\u0dc3\nm\rm\16m\u0dc4"+
		"\3m\3m\6m\u0dc9\nm\rm\16m\u0dca\3m\3m\6m\u0dcf\nm\rm\16m\u0dd0\3m\3m\5"+
		"m\u0dd5\nm\3n\3n\3o\3o\3p\3p\6p\u0ddd\np\rp\16p\u0dde\3p\3p\5p\u0de3\n"+
		"p\3p\3p\6p\u0de7\np\rp\16p\u0de8\3p\3p\5p\u0ded\np\5p\u0def\np\3p\6p\u0df2"+
		"\np\rp\16p\u0df3\3p\3p\6p\u0df8\np\rp\16p\u0df9\3p\3p\7p\u0dfe\np\fp\16"+
		"p\u0e01\13p\3q\3q\6q\u0e05\nq\rq\16q\u0e06\3q\3q\5q\u0e0b\nq\3r\3r\3r"+
		"\6r\u0e10\nr\rr\16r\u0e11\3r\3r\3r\3r\6r\u0e18\nr\rr\16r\u0e19\3r\3r\5"+
		"r\u0e1e\nr\3s\3s\6s\u0e22\ns\rs\16s\u0e23\3s\3s\3t\3t\3u\3u\3v\3v\3w\3"+
		"w\6w\u0e30\nw\rw\16w\u0e31\3w\3w\6w\u0e36\nw\rw\16w\u0e37\3w\3w\7w\u0e3c"+
		"\nw\fw\16w\u0e3f\13w\3w\6w\u0e42\nw\rw\16w\u0e43\3w\3w\5w\u0e48\nw\3x"+
		"\3x\6x\u0e4c\nx\rx\16x\u0e4d\3x\3x\6x\u0e52\nx\rx\16x\u0e53\5x\u0e56\n"+
		"x\3x\3x\6x\u0e5a\nx\rx\16x\u0e5b\3x\3x\7x\u0e60\nx\fx\16x\u0e63\13x\3"+
		"y\3y\3z\3z\6z\u0e69\nz\rz\16z\u0e6a\3z\3z\6z\u0e6f\nz\rz\16z\u0e70\5z"+
		"\u0e73\nz\3z\3z\6z\u0e77\nz\rz\16z\u0e78\5z\u0e7b\nz\3z\3z\6z\u0e7f\n"+
		"z\rz\16z\u0e80\3z\3z\7z\u0e85\nz\fz\16z\u0e88\13z\3{\3{\3|\3|\6|\u0e8e"+
		"\n|\r|\16|\u0e8f\3|\3|\3|\3|\6|\u0e96\n|\r|\16|\u0e97\3|\3|\6|\u0e9c\n"+
		"|\r|\16|\u0e9d\3|\3|\6|\u0ea2\n|\r|\16|\u0ea3\3|\3|\6|\u0ea8\n|\r|\16"+
		"|\u0ea9\3|\3|\6|\u0eae\n|\r|\16|\u0eaf\3|\3|\6|\u0eb4\n|\r|\16|\u0eb5"+
		"\5|\u0eb8\n|\3|\3|\5|\u0ebc\n|\3}\3}\3~\3~\3\177\3\177\3\u0080\3\u0080"+
		"\7\u0080\u0ec6\n\u0080\f\u0080\16\u0080\u0ec9\13\u0080\3\u0080\7\u0080"+
		"\u0ecc\n\u0080\f\u0080\16\u0080\u0ecf\13\u0080\3\u0081\3\u0081\6\u0081"+
		"\u0ed3\n\u0081\r\u0081\16\u0081\u0ed4\3\u0081\3\u0081\5\u0081\u0ed9\n"+
		"\u0081\3\u0081\6\u0081\u0edc\n\u0081\r\u0081\16\u0081\u0edd\3\u0081\3"+
		"\u0081\7\u0081\u0ee2\n\u0081\f\u0081\16\u0081\u0ee5\13\u0081\3\u0081\3"+
		"\u0081\3\u0082\3\u0082\6\u0082\u0eeb\n\u0082\r\u0082\16\u0082\u0eec\3"+
		"\u0082\3\u0082\6\u0082\u0ef1\n\u0082\r\u0082\16\u0082\u0ef2\5\u0082\u0ef5"+
		"\n\u0082\3\u0082\3\u0082\6\u0082\u0ef9\n\u0082\r\u0082\16\u0082\u0efa"+
		"\5\u0082\u0efd\n\u0082\3\u0082\3\u0082\3\u0082\3\u0082\6\u0082\u0f03\n"+
		"\u0082\r\u0082\16\u0082\u0f04\3\u0082\3\u0082\6\u0082\u0f09\n\u0082\r"+
		"\u0082\16\u0082\u0f0a\3\u0082\3\u0082\6\u0082\u0f0f\n\u0082\r\u0082\16"+
		"\u0082\u0f10\5\u0082\u0f13\n\u0082\3\u0082\3\u0082\3\u0082\3\u0082\6\u0082"+
		"\u0f19\n\u0082\r\u0082\16\u0082\u0f1a\3\u0082\3\u0082\6\u0082\u0f1f\n"+
		"\u0082\r\u0082\16\u0082\u0f20\5\u0082\u0f23\n\u0082\3\u0082\3\u0082\3"+
		"\u0082\3\u0082\6\u0082\u0f29\n\u0082\r\u0082\16\u0082\u0f2a\3\u0082\3"+
		"\u0082\6\u0082\u0f2f\n\u0082\r\u0082\16\u0082\u0f30\5\u0082\u0f33\n\u0082"+
		"\5\u0082\u0f35\n\u0082\3\u0082\3\u0082\3\u0082\6\u0082\u0f3a\n\u0082\r"+
		"\u0082\16\u0082\u0f3b\3\u0082\3\u0082\6\u0082\u0f40\n\u0082\r\u0082\16"+
		"\u0082\u0f41\5\u0082\u0f44\n\u0082\3\u0082\3\u0082\3\u0082\3\u0082\6\u0082"+
		"\u0f4a\n\u0082\r\u0082\16\u0082\u0f4b\3\u0082\3\u0082\6\u0082\u0f50\n"+
		"\u0082\r\u0082\16\u0082\u0f51\5\u0082\u0f54\n\u0082\3\u0082\3\u0082\6"+
		"\u0082\u0f58\n\u0082\r\u0082\16\u0082\u0f59\5\u0082\u0f5c\n\u0082\3\u0082"+
		"\3\u0082\3\u0082\3\u0082\6\u0082\u0f62\n\u0082\r\u0082\16\u0082\u0f63"+
		"\3\u0082\3\u0082\5\u0082\u0f68\n\u0082\3\u0082\3\u0082\6\u0082\u0f6c\n"+
		"\u0082\r\u0082\16\u0082\u0f6d\3\u0082\3\u0082\5\u0082\u0f72\n\u0082\3"+
		"\u0082\3\u0082\3\u0082\3\u0082\6\u0082\u0f78\n\u0082\r\u0082\16\u0082"+
		"\u0f79\3\u0082\3\u0082\6\u0082\u0f7e\n\u0082\r\u0082\16\u0082\u0f7f\5"+
		"\u0082\u0f82\n\u0082\3\u0082\3\u0082\3\u0082\3\u0082\6\u0082\u0f88\n\u0082"+
		"\r\u0082\16\u0082\u0f89\3\u0082\3\u0082\6\u0082\u0f8e\n\u0082\r\u0082"+
		"\16\u0082\u0f8f\5\u0082\u0f92\n\u0082\3\u0082\3\u0082\3\u0082\5\u0082"+
		"\u0f97\n\u0082\3\u0083\3\u0083\6\u0083\u0f9b\n\u0083\r\u0083\16\u0083"+
		"\u0f9c\3\u0083\3\u0083\5\u0083\u0fa1\n\u0083\3\u0083\6\u0083\u0fa4\n\u0083"+
		"\r\u0083\16\u0083\u0fa5\5\u0083\u0fa8\n\u0083\3\u0083\3\u0083\6\u0083"+
		"\u0fac\n\u0083\r\u0083\16\u0083\u0fad\3\u0083\3\u0083\6\u0083\u0fb2\n"+
		"\u0083\r\u0083\16\u0083\u0fb3\3\u0083\3\u0083\5\u0083\u0fb8\n\u0083\5"+
		"\u0083\u0fba\n\u0083\3\u0084\3\u0084\6\u0084\u0fbe\n\u0084\r\u0084\16"+
		"\u0084\u0fbf\3\u0084\3\u0084\6\u0084\u0fc4\n\u0084\r\u0084\16\u0084\u0fc5"+
		"\3\u0084\3\u0084\7\u0084\u0fca\n\u0084\f\u0084\16\u0084\u0fcd\13\u0084"+
		"\3\u0084\6\u0084\u0fd0\n\u0084\r\u0084\16\u0084\u0fd1\3\u0084\3\u0084"+
		"\5\u0084\u0fd6\n\u0084\3\u0084\6\u0084\u0fd9\n\u0084\r\u0084\16\u0084"+
		"\u0fda\3\u0084\3\u0084\7\u0084\u0fdf\n\u0084\f\u0084\16\u0084\u0fe2\13"+
		"\u0084\6\u0084\u0fe4\n\u0084\r\u0084\16\u0084\u0fe5\3\u0084\7\u0084\u0fe9"+
		"\n\u0084\f\u0084\16\u0084\u0fec\13\u0084\3\u0084\3\u0084\6\u0084\u0ff0"+
		"\n\u0084\r\u0084\16\u0084\u0ff1\3\u0084\3\u0084\6\u0084\u0ff6\n\u0084"+
		"\r\u0084\16\u0084\u0ff7\5\u0084\u0ffa\n\u0084\3\u0084\3\u0084\5\u0084"+
		"\u0ffe\n\u0084\3\u0085\3\u0085\3\u0086\3\u0086\3\u0087\3\u0087\3\u0088"+
		"\3\u0088\3\u0089\3\u0089\3\u008a\3\u008a\6\u008a\u100c\n\u008a\r\u008a"+
		"\16\u008a\u100d\3\u008a\3\u008a\3\u008a\3\u008a\3\u008a\6\u008a\u1015"+
		"\n\u008a\r\u008a\16\u008a\u1016\3\u008a\3\u008a\3\u008a\3\u008a\3\u008a"+
		"\6\u008a\u101e\n\u008a\r\u008a\16\u008a\u101f\3\u008a\3\u008a\3\u008a"+
		"\5\u008a\u1025\n\u008a\3\u008a\6\u008a\u1028\n\u008a\r\u008a\16\u008a"+
		"\u1029\3\u008a\3\u008a\3\u008a\3\u008a\3\u008a\3\u008a\6\u008a\u1032\n"+
		"\u008a\r\u008a\16\u008a\u1033\3\u008a\3\u008a\3\u008a\5\u008a\u1039\n"+
		"\u008a\3\u008a\6\u008a\u103c\n\u008a\r\u008a\16\u008a\u103d\3\u008a\3"+
		"\u008a\3\u008a\3\u008a\6\u008a\u1044\n\u008a\r\u008a\16\u008a\u1045\3"+
		"\u008a\3\u008a\3\u008a\3\u008a\3\u008a\6\u008a\u104d\n\u008a\r\u008a\16"+
		"\u008a\u104e\3\u008a\3\u008a\3\u008a\5\u008a\u1054\n\u008a\3\u008b\3\u008b"+
		"\3\u008c\3\u008c\3\u008c\6\u008c\u105b\n\u008c\r\u008c\16\u008c\u105c"+
		"\3\u008c\3\u008c\3\u008c\3\u008c\6\u008c\u1063\n\u008c\r\u008c\16\u008c"+
		"\u1064\3\u008c\3\u008c\5\u008c\u1069\n\u008c\3\u008d\3\u008d\6\u008d\u106d"+
		"\n\u008d\r\u008d\16\u008d\u106e\3\u008d\3\u008d\6\u008d\u1073\n\u008d"+
		"\r\u008d\16\u008d\u1074\5\u008d\u1077\n\u008d\3\u008d\3\u008d\6\u008d"+
		"\u107b\n\u008d\r\u008d\16\u008d\u107c\3\u008d\3\u008d\5\u008d\u1081\n"+
		"\u008d\3\u008d\3\u008d\6\u008d\u1085\n\u008d\r\u008d\16\u008d\u1086\3"+
		"\u008d\3\u008d\5\u008d\u108b\n\u008d\3\u008e\3\u008e\3\u008f\3\u008f\6"+
		"\u008f\u1091\n\u008f\r\u008f\16\u008f\u1092\5\u008f\u1095\n\u008f\3\u008f"+
		"\3\u008f\3\u008f\6\u008f\u109a\n\u008f\r\u008f\16\u008f\u109b\3\u008f"+
		"\3\u008f\3\u008f\3\u008f\6\u008f\u10a2\n\u008f\r\u008f\16\u008f\u10a3"+
		"\3\u008f\3\u008f\5\u008f\u10a8\n\u008f\3\u008f\3\u008f\6\u008f\u10ac\n"+
		"\u008f\r\u008f\16\u008f\u10ad\3\u008f\3\u008f\5\u008f\u10b2\n\u008f\5"+
		"\u008f\u10b4\n\u008f\3\u008f\6\u008f\u10b7\n\u008f\r\u008f\16\u008f\u10b8"+
		"\3\u008f\3\u008f\7\u008f\u10bd\n\u008f\f\u008f\16\u008f\u10c0\13\u008f"+
		"\3\u008f\7\u008f\u10c3\n\u008f\f\u008f\16\u008f\u10c6\13\u008f\3\u008f"+
		"\3\u008f\7\u008f\u10ca\n\u008f\f\u008f\16\u008f\u10cd\13\u008f\3\u008f"+
		"\7\u008f\u10d0\n\u008f\f\u008f\16\u008f\u10d3\13\u008f\5\u008f\u10d5\n"+
		"\u008f\3\u008f\3\u008f\6\u008f\u10d9\n\u008f\r\u008f\16\u008f\u10da\3"+
		"\u008f\3\u008f\6\u008f\u10df\n\u008f\r\u008f\16\u008f\u10e0\3\u008f\3"+
		"\u008f\6\u008f\u10e5\n\u008f\r\u008f\16\u008f\u10e6\5\u008f\u10e9\n\u008f"+
		"\3\u008f\3\u008f\6\u008f\u10ed\n\u008f\r\u008f\16\u008f\u10ee\3\u008f"+
		"\3\u008f\6\u008f\u10f3\n\u008f\r\u008f\16\u008f\u10f4\5\u008f\u10f7\n"+
		"\u008f\5\u008f\u10f9\n\u008f\3\u008f\3\u008f\6\u008f\u10fd\n\u008f\r\u008f"+
		"\16\u008f\u10fe\3\u008f\3\u008f\5\u008f\u1103\n\u008f\3\u008f\6\u008f"+
		"\u1106\n\u008f\r\u008f\16\u008f\u1107\3\u008f\3\u008f\6\u008f\u110c\n"+
		"\u008f\r\u008f\16\u008f\u110d\3\u008f\3\u008f\5\u008f\u1112\n\u008f\3"+
		"\u008f\6\u008f\u1115\n\u008f\r\u008f\16\u008f\u1116\3\u008f\3\u008f\6"+
		"\u008f\u111b\n\u008f\r\u008f\16\u008f\u111c\3\u008f\3\u008f\6\u008f\u1121"+
		"\n\u008f\r\u008f\16\u008f\u1122\3\u008f\3\u008f\5\u008f\u1127\n\u008f"+
		"\3\u008f\6\u008f\u112a\n\u008f\r\u008f\16\u008f\u112b\3\u008f\3\u008f"+
		"\6\u008f\u1130\n\u008f\r\u008f\16\u008f\u1131\3\u008f\3\u008f\6\u008f"+
		"\u1136\n\u008f\r\u008f\16\u008f\u1137\3\u008f\3\u008f\5\u008f\u113c\n"+
		"\u008f\3\u008f\6\u008f\u113f\n\u008f\r\u008f\16\u008f\u1140\3\u008f\3"+
		"\u008f\6\u008f\u1145\n\u008f\r\u008f\16\u008f\u1146\3\u008f\3\u008f\5"+
		"\u008f\u114b\n\u008f\5\u008f\u114d\n\u008f\3\u0090\3\u0090\3\u0091\3\u0091"+
		"\3\u0092\3\u0092\3\u0093\3\u0093\3\u0094\3\u0094\3\u0095\3\u0095\3\u0096"+
		"\3\u0096\3\u0097\3\u0097\6\u0097\u115f\n\u0097\r\u0097\16\u0097\u1160"+
		"\3\u0097\3\u0097\5\u0097\u1165\n\u0097\3\u0097\6\u0097\u1168\n\u0097\r"+
		"\u0097\16\u0097\u1169\5\u0097\u116c\n\u0097\3\u0097\3\u0097\3\u0098\3"+
		"\u0098\3\u0098\6\u0098\u1173\n\u0098\r\u0098\16\u0098\u1174\3\u0098\3"+
		"\u0098\5\u0098\u1179\n\u0098\3\u0098\3\u0098\6\u0098\u117d\n\u0098\r\u0098"+
		"\16\u0098\u117e\3\u0098\3\u0098\5\u0098\u1183\n\u0098\3\u0098\3\u0098"+
		"\6\u0098\u1187\n\u0098\r\u0098\16\u0098\u1188\3\u0098\3\u0098\5\u0098"+
		"\u118d\n\u0098\3\u0098\3\u0098\6\u0098\u1191\n\u0098\r\u0098\16\u0098"+
		"\u1192\3\u0098\3\u0098\5\u0098\u1197\n\u0098\3\u0098\3\u0098\3\u0098\3"+
		"\u0098\3\u0098\3\u0098\3\u0098\3\u0098\3\u0098\3\u0098\3\u0098\3\u0098"+
		"\3\u0098\3\u0098\3\u0098\3\u0098\3\u0098\3\u0098\3\u0098\3\u0098\3\u0098"+
		"\3\u0098\5\u0098\u11af\n\u0098\3\u0099\3\u0099\6\u0099\u11b3\n\u0099\r"+
		"\u0099\16\u0099\u11b4\3\u0099\3\u0099\6\u0099\u11b9\n\u0099\r\u0099\16"+
		"\u0099\u11ba\5\u0099\u11bd\n\u0099\3\u0099\3\u0099\3\u009a\6\u009a\u11c2"+
		"\n\u009a\r\u009a\16\u009a\u11c3\3\u009b\3\u009b\3\u009c\3\u009c\3\u009d"+
		"\3\u009d\3\u009e\3\u009e\5\u009e\u11ce\n\u009e\3\u009f\3\u009f\6\u009f"+
		"\u11d2\n\u009f\r\u009f\16\u009f\u11d3\3\u009f\3\u009f\5\u009f\u11d8\n"+
		"\u009f\3\u009f\3\u009f\6\u009f\u11dc\n\u009f\r\u009f\16\u009f\u11dd\3"+
		"\u009f\3\u009f\5\u009f\u11e2\n\u009f\5\u009f\u11e4\n\u009f\3\u009f\6\u009f"+
		"\u11e7\n\u009f\r\u009f\16\u009f\u11e8\3\u009f\3\u009f\7\u009f\u11ed\n"+
		"\u009f\f\u009f\16\u009f\u11f0\13\u009f\3\u009f\7\u009f\u11f3\n\u009f\f"+
		"\u009f\16\u009f\u11f6\13\u009f\3\u00a0\3\u00a0\3\u00a1\3\u00a1\6\u00a1"+
		"\u11fc\n\u00a1\r\u00a1\16\u00a1\u11fd\3\u00a1\3\u00a1\6\u00a1\u1202\n"+
		"\u00a1\r\u00a1\16\u00a1\u1203\5\u00a1\u1206\n\u00a1\3\u00a1\3\u00a1\6"+
		"\u00a1\u120a\n\u00a1\r\u00a1\16\u00a1\u120b\3\u00a1\3\u00a1\5\u00a1\u1210"+
		"\n\u00a1\3\u00a1\6\u00a1\u1213\n\u00a1\r\u00a1\16\u00a1\u1214\3\u00a1"+
		"\3\u00a1\6\u00a1\u1219\n\u00a1\r\u00a1\16\u00a1\u121a\5\u00a1\u121d\n"+
		"\u00a1\3\u00a1\3\u00a1\6\u00a1\u1221\n\u00a1\r\u00a1\16\u00a1\u1222\3"+
		"\u00a1\3\u00a1\6\u00a1\u1227\n\u00a1\r\u00a1\16\u00a1\u1228\5\u00a1\u122b"+
		"\n\u00a1\3\u00a1\3\u00a1\5\u00a1\u122f\n\u00a1\3\u00a1\6\u00a1\u1232\n"+
		"\u00a1\r\u00a1\16\u00a1\u1233\3\u00a1\3\u00a1\6\u00a1\u1238\n\u00a1\r"+
		"\u00a1\16\u00a1\u1239\5\u00a1\u123c\n\u00a1\3\u00a1\3\u00a1\6\u00a1\u1240"+
		"\n\u00a1\r\u00a1\16\u00a1\u1241\5\u00a1\u1244\n\u00a1\3\u00a1\3\u00a1"+
		"\6\u00a1\u1248\n\u00a1\r\u00a1\16\u00a1\u1249\3\u00a1\3\u00a1\5\u00a1"+
		"\u124e\n\u00a1\3\u00a1\6\u00a1\u1251\n\u00a1\r\u00a1\16\u00a1\u1252\3"+
		"\u00a1\3\u00a1\6\u00a1\u1257\n\u00a1\r\u00a1\16\u00a1\u1258\5\u00a1\u125b"+
		"\n\u00a1\3\u00a1\3\u00a1\6\u00a1\u125f\n\u00a1\r\u00a1\16\u00a1\u1260"+
		"\5\u00a1\u1263\n\u00a1\3\u00a1\3\u00a1\6\u00a1\u1267\n\u00a1\r\u00a1\16"+
		"\u00a1\u1268\3\u00a1\3\u00a1\5\u00a1\u126d\n\u00a1\3\u00a2\3\u00a2\5\u00a2"+
		"\u1271\n\u00a2\3\u00a3\3\u00a3\5\u00a3\u1275\n\u00a3\3\u00a4\3\u00a4\5"+
		"\u00a4\u1279\n\u00a4\3\u00a5\3\u00a5\5\u00a5\u127d\n\u00a5\3\u00a6\3\u00a6"+
		"\6\u00a6\u1281\n\u00a6\r\u00a6\16\u00a6\u1282\3\u00a6\3\u00a6\6\u00a6"+
		"\u1287\n\u00a6\r\u00a6\16\u00a6\u1288\3\u00a6\3\u00a6\5\u00a6\u128d\n"+
		"\u00a6\3\u00a6\3\u00a6\6\u00a6\u1291\n\u00a6\r\u00a6\16\u00a6\u1292\3"+
		"\u00a6\3\u00a6\5\u00a6\u1297\n\u00a6\5\u00a6\u1299\n\u00a6\3\u00a6\3\u00a6"+
		"\6\u00a6\u129d\n\u00a6\r\u00a6\16\u00a6\u129e\3\u00a6\3\u00a6\7\u00a6"+
		"\u12a3\n\u00a6\f\u00a6\16\u00a6\u12a6\13\u00a6\3\u00a7\3\u00a7\3\u00a8"+
		"\3\u00a8\6\u00a8\u12ac\n\u00a8\r\u00a8\16\u00a8\u12ad\3\u00a8\3\u00a8"+
		"\6\u00a8\u12b2\n\u00a8\r\u00a8\16\u00a8\u12b3\3\u00a8\3\u00a8\6\u00a8"+
		"\u12b8\n\u00a8\r\u00a8\16\u00a8\u12b9\3\u00a8\3\u00a8\6\u00a8\u12be\n"+
		"\u00a8\r\u00a8\16\u00a8\u12bf\5\u00a8\u12c2\n\u00a8\3\u00a8\3\u00a8\3"+
		"\u00a9\3\u00a9\5\u00a9\u12c8\n\u00a9\3\u00aa\3\u00aa\6\u00aa\u12cc\n\u00aa"+
		"\r\u00aa\16\u00aa\u12cd\3\u00aa\3\u00aa\6\u00aa\u12d2\n\u00aa\r\u00aa"+
		"\16\u00aa\u12d3\3\u00aa\3\u00aa\5\u00aa\u12d8\n\u00aa\3\u00aa\3\u00aa"+
		"\6\u00aa\u12dc\n\u00aa\r\u00aa\16\u00aa\u12dd\3\u00aa\3\u00aa\5\u00aa"+
		"\u12e2\n\u00aa\5\u00aa\u12e4\n\u00aa\3\u00aa\6\u00aa\u12e7\n\u00aa\r\u00aa"+
		"\16\u00aa\u12e8\3\u00aa\3\u00aa\3\u00ab\3\u00ab\6\u00ab\u12ef\n\u00ab"+
		"\r\u00ab\16\u00ab\u12f0\3\u00ab\3\u00ab\3\u00ac\3\u00ac\6\u00ac\u12f7"+
		"\n\u00ac\r\u00ac\16\u00ac\u12f8\5\u00ac\u12fb\n\u00ac\3\u00ac\3\u00ac"+
		"\6\u00ac\u12ff\n\u00ac\r\u00ac\16\u00ac\u1300\3\u00ac\3\u00ac\6\u00ac"+
		"\u1305\n\u00ac\r\u00ac\16\u00ac\u1306\5\u00ac\u1309\n\u00ac\3\u00ac\3"+
		"\u00ac\7\u00ac\u130d\n\u00ac\f\u00ac\16\u00ac\u1310\13\u00ac\3\u00ac\3"+
		"\u00ac\7\u00ac\u1314\n\u00ac\f\u00ac\16\u00ac\u1317\13\u00ac\5\u00ac\u1319"+
		"\n\u00ac\3\u00ac\3\u00ac\6\u00ac\u131d\n\u00ac\r\u00ac\16\u00ac\u131e"+
		"\5\u00ac\u1321\n\u00ac\3\u00ac\3\u00ac\6\u00ac\u1325\n\u00ac\r\u00ac\16"+
		"\u00ac\u1326\3\u00ac\3\u00ac\6\u00ac\u132b\n\u00ac\r\u00ac\16\u00ac\u132c"+
		"\5\u00ac\u132f\n\u00ac\3\u00ac\3\u00ac\7\u00ac\u1333\n\u00ac\f\u00ac\16"+
		"\u00ac\u1336\13\u00ac\5\u00ac\u1338\n\u00ac\3\u00ac\3\u00ac\6\u00ac\u133c"+
		"\n\u00ac\r\u00ac\16\u00ac\u133d\5\u00ac\u1340\n\u00ac\3\u00ac\5\u00ac"+
		"\u1343\n\u00ac\3\u00ac\3\u00ac\6\u00ac\u1347\n\u00ac\r\u00ac\16\u00ac"+
		"\u1348\3\u00ac\3\u00ac\5\u00ac\u134d\n\u00ac\3\u00ac\7\u00ac\u1350\n\u00ac"+
		"\f\u00ac\16\u00ac\u1353\13\u00ac\3\u00ac\3\u00ac\7\u00ac\u1357\n\u00ac"+
		"\f\u00ac\16\u00ac\u135a\13\u00ac\5\u00ac\u135c\n\u00ac\3\u00ac\3\u00ac"+
		"\6\u00ac\u1360\n\u00ac\r\u00ac\16\u00ac\u1361\3\u00ac\3\u00ac\6\u00ac"+
		"\u1366\n\u00ac\r\u00ac\16\u00ac\u1367\5\u00ac\u136a\n\u00ac\3\u00ac\3"+
		"\u00ac\5\u00ac\u136e\n\u00ac\5\u00ac\u1370\n\u00ac\3\u00ad\3\u00ad\3\u00ae"+
		"\3\u00ae\3\u00af\3\u00af\3\u00b0\3\u00b0\6\u00b0\u137a\n\u00b0\r\u00b0"+
		"\16\u00b0\u137b\3\u00b0\3\u00b0\5\u00b0\u1380\n\u00b0\5\u00b0\u1382\n"+
		"\u00b0\3\u00b0\6\u00b0\u1385\n\u00b0\r\u00b0\16\u00b0\u1386\3\u00b0\3"+
		"\u00b0\7\u00b0\u138b\n\u00b0\f\u00b0\16\u00b0\u138e\13\u00b0\3\u00b0\3"+
		"\u00b0\3\u00b1\3\u00b1\3\u00b2\3\u00b2\6\u00b2\u1396\n\u00b2\r\u00b2\16"+
		"\u00b2\u1397\3\u00b2\3\u00b2\3\u00b2\3\u00b2\6\u00b2\u139e\n\u00b2\r\u00b2"+
		"\16\u00b2\u139f\3\u00b2\3\u00b2\6\u00b2\u13a4\n\u00b2\r\u00b2\16\u00b2"+
		"\u13a5\5\u00b2\u13a8\n\u00b2\3\u00b2\3\u00b2\3\u00b2\3\u00b2\6\u00b2\u13ae"+
		"\n\u00b2\r\u00b2\16\u00b2\u13af\3\u00b2\3\u00b2\6\u00b2\u13b4\n\u00b2"+
		"\r\u00b2\16\u00b2\u13b5\5\u00b2\u13b8\n\u00b2\3\u00b2\3\u00b2\3\u00b2"+
		"\3\u00b2\3\u00b2\3\u00b2\3\u00b2\6\u00b2\u13c1\n\u00b2\r\u00b2\16\u00b2"+
		"\u13c2\3\u00b2\3\u00b2\6\u00b2\u13c7\n\u00b2\r\u00b2\16\u00b2\u13c8\5"+
		"\u00b2\u13cb\n\u00b2\5\u00b2\u13cd\n\u00b2\3\u00b2\3\u00b2\3\u00b2\3\u00b2"+
		"\3\u00b2\3\u00b2\3\u00b2\6\u00b2\u13d6\n\u00b2\r\u00b2\16\u00b2\u13d7"+
		"\3\u00b2\3\u00b2\3\u00b2\3\u00b2\3\u00b2\3\u00b2\3\u00b2\3\u00b2\6\u00b2"+
		"\u13e2\n\u00b2\r\u00b2\16\u00b2\u13e3\3\u00b2\3\u00b2\6\u00b2\u13e8\n"+
		"\u00b2\r\u00b2\16\u00b2\u13e9\5\u00b2\u13ec\n\u00b2\3\u00b2\3\u00b2\6"+
		"\u00b2\u13f0\n\u00b2\r\u00b2\16\u00b2\u13f1\5\u00b2\u13f4\n\u00b2\3\u00b2"+
		"\3\u00b2\6\u00b2\u13f8\n\u00b2\r\u00b2\16\u00b2\u13f9\5\u00b2\u13fc\n"+
		"\u00b2\3\u00b2\3\u00b2\3\u00b2\3\u00b2\6\u00b2\u1402\n\u00b2\r\u00b2\16"+
		"\u00b2\u1403\3\u00b2\3\u00b2\6\u00b2\u1408\n\u00b2\r\u00b2\16\u00b2\u1409"+
		"\5\u00b2\u140c\n\u00b2\3\u00b2\3\u00b2\6\u00b2\u1410\n\u00b2\r\u00b2\16"+
		"\u00b2\u1411\5\u00b2\u1414\n\u00b2\3\u00b2\3\u00b2\6\u00b2\u1418\n\u00b2"+
		"\r\u00b2\16\u00b2\u1419\5\u00b2\u141c\n\u00b2\3\u00b2\3\u00b2\3\u00b2"+
		"\3\u00b2\6\u00b2\u1422\n\u00b2\r\u00b2\16\u00b2\u1423\3\u00b2\3\u00b2"+
		"\6\u00b2\u1428\n\u00b2\r\u00b2\16\u00b2\u1429\5\u00b2\u142c\n\u00b2\3"+
		"\u00b2\3\u00b2\3\u00b2\3\u00b2\6\u00b2\u1432\n\u00b2\r\u00b2\16\u00b2"+
		"\u1433\3\u00b2\3\u00b2\6\u00b2\u1438\n\u00b2\r\u00b2\16\u00b2\u1439\5"+
		"\u00b2\u143c\n\u00b2\3\u00b2\3\u00b2\3\u00b2\3\u00b2\6\u00b2\u1442\n\u00b2"+
		"\r\u00b2\16\u00b2\u1443\3\u00b2\3\u00b2\5\u00b2\u1448\n\u00b2\3\u00b2"+
		"\3\u00b2\6\u00b2\u144c\n\u00b2\r\u00b2\16\u00b2\u144d\3\u00b2\3\u00b2"+
		"\3\u00b2\6\u00b2\u1453\n\u00b2\r\u00b2\16\u00b2\u1454\3\u00b2\3\u00b2"+
		"\5\u00b2\u1459\n\u00b2\3\u00b2\5\u00b2\u145c\n\u00b2\5\u00b2\u145e\n\u00b2"+
		"\3\u00b3\3\u00b3\6\u00b3\u1462\n\u00b3\r\u00b3\16\u00b3\u1463\3\u00b3"+
		"\3\u00b3\3\u00b4\3\u00b4\6\u00b4\u146a\n\u00b4\r\u00b4\16\u00b4\u146b"+
		"\3\u00b4\3\u00b4\5\u00b4\u1470\n\u00b4\3\u00b5\3\u00b5\6\u00b5\u1474\n"+
		"\u00b5\r\u00b5\16\u00b5\u1475\3\u00b5\3\u00b5\3\u00b6\3\u00b6\3\u00b7"+
		"\3\u00b7\5\u00b7\u147e\n\u00b7\3\u00b8\3\u00b8\3\u00b9\3\u00b9\6\u00b9"+
		"\u1484\n\u00b9\r\u00b9\16\u00b9\u1485\3\u00b9\3\u00b9\7\u00b9\u148a\n"+
		"\u00b9\f\u00b9\16\u00b9\u148d\13\u00b9\3\u00b9\3\u00b9\7\u00b9\u1491\n"+
		"\u00b9\f\u00b9\16\u00b9\u1494\13\u00b9\3\u00b9\7\u00b9\u1497\n\u00b9\f"+
		"\u00b9\16\u00b9\u149a\13\u00b9\3\u00ba\3\u00ba\3\u00ba\3\u00ba\3\u00ba"+
		"\3\u00ba\3\u00ba\3\u00ba\5\u00ba\u14a4\n\u00ba\3\u00bb\3\u00bb\7\u00bb"+
		"\u14a8\n\u00bb\f\u00bb\16\u00bb\u14ab\13\u00bb\3\u00bb\3\u00bb\7\u00bb"+
		"\u14af\n\u00bb\f\u00bb\16\u00bb\u14b2\13\u00bb\3\u00bb\3\u00bb\7\u00bb"+
		"\u14b6\n\u00bb\f\u00bb\16\u00bb\u14b9\13\u00bb\3\u00bb\5\u00bb\u14bc\n"+
		"\u00bb\3\u00bb\7\u00bb\u14bf\n\u00bb\f\u00bb\16\u00bb\u14c2\13\u00bb\3"+
		"\u00bb\5\u00bb\u14c5\n\u00bb\3\u00bb\7\u00bb\u14c8\n\u00bb\f\u00bb\16"+
		"\u00bb\u14cb\13\u00bb\3\u00bb\3\u00bb\3\u00bc\3\u00bc\3\u00bd\3\u00bd"+
		"\6\u00bd\u14d3\n\u00bd\r\u00bd\16\u00bd\u14d4\5\u00bd\u14d7\n\u00bd\3"+
		"\u00bd\3\u00bd\6\u00bd\u14db\n\u00bd\r\u00bd\16\u00bd\u14dc\3\u00bd\3"+
		"\u00bd\5\u00bd\u14e1\n\u00bd\3\u00be\3\u00be\6\u00be\u14e5\n\u00be\r\u00be"+
		"\16\u00be\u14e6\5\u00be\u14e9\n\u00be\3\u00be\3\u00be\6\u00be\u14ed\n"+
		"\u00be\r\u00be\16\u00be\u14ee\3\u00be\3\u00be\3\u00bf\3\u00bf\3\u00c0"+
		"\3\u00c0\7\u00c0\u14f7\n\u00c0\f\u00c0\16\u00c0\u14fa\13\u00c0\3\u00c0"+
		"\3\u00c0\5\u00c0\u14fe\n\u00c0\3\u00c1\3\u00c1\7\u00c1\u1502\n\u00c1\f"+
		"\u00c1\16\u00c1\u1505\13\u00c1\3\u00c1\3\u00c1\7\u00c1\u1509\n\u00c1\f"+
		"\u00c1\16\u00c1\u150c\13\u00c1\3\u00c1\3\u00c1\7\u00c1\u1510\n\u00c1\f"+
		"\u00c1\16\u00c1\u1513\13\u00c1\3\u00c2\3\u00c2\7\u00c2\u1517\n\u00c2\f"+
		"\u00c2\16\u00c2\u151a\13\u00c2\3\u00c2\3\u00c2\7\u00c2\u151e\n\u00c2\f"+
		"\u00c2\16\u00c2\u1521\13\u00c2\3\u00c2\3\u00c2\7\u00c2\u1525\n\u00c2\f"+
		"\u00c2\16\u00c2\u1528\13\u00c2\3\u00c3\3\u00c3\7\u00c3\u152c\n\u00c3\f"+
		"\u00c3\16\u00c3\u152f\13\u00c3\3\u00c3\3\u00c3\7\u00c3\u1533\n\u00c3\f"+
		"\u00c3\16\u00c3\u1536\13\u00c3\3\u00c3\3\u00c3\7\u00c3\u153a\n\u00c3\f"+
		"\u00c3\16\u00c3\u153d\13\u00c3\3\u00c4\3\u00c4\7\u00c4\u1541\n\u00c4\f"+
		"\u00c4\16\u00c4\u1544\13\u00c4\3\u00c4\3\u00c4\7\u00c4\u1548\n\u00c4\f"+
		"\u00c4\16\u00c4\u154b\13\u00c4\3\u00c4\3\u00c4\7\u00c4\u154f\n\u00c4\f"+
		"\u00c4\16\u00c4\u1552\13\u00c4\3\u00c5\3\u00c5\7\u00c5\u1556\n\u00c5\f"+
		"\u00c5\16\u00c5\u1559\13\u00c5\3\u00c5\3\u00c5\7\u00c5\u155d\n\u00c5\f"+
		"\u00c5\16\u00c5\u1560\13\u00c5\3\u00c5\3\u00c5\7\u00c5\u1564\n\u00c5\f"+
		"\u00c5\16\u00c5\u1567\13\u00c5\3\u00c6\3\u00c6\7\u00c6\u156b\n\u00c6\f"+
		"\u00c6\16\u00c6\u156e\13\u00c6\3\u00c6\3\u00c6\7\u00c6\u1572\n\u00c6\f"+
		"\u00c6\16\u00c6\u1575\13\u00c6\3\u00c6\5\u00c6\u1578\n\u00c6\3\u00c6\7"+
		"\u00c6\u157b\n\u00c6\f\u00c6\16\u00c6\u157e\13\u00c6\3\u00c6\5\u00c6\u1581"+
		"\n\u00c6\3\u00c7\3\u00c7\6\u00c7\u1585\n\u00c7\r\u00c7\16\u00c7\u1586"+
		"\3\u00c7\3\u00c7\6\u00c7\u158b\n\u00c7\r\u00c7\16\u00c7\u158c\5\u00c7"+
		"\u158f\n\u00c7\3\u00c7\3\u00c7\7\u00c7\u1593\n\u00c7\f\u00c7\16\u00c7"+
		"\u1596\13\u00c7\3\u00c7\3\u00c7\3\u00c8\3\u00c8\6\u00c8\u159c\n\u00c8"+
		"\r\u00c8\16\u00c8\u159d\3\u00c8\3\u00c8\7\u00c8\u15a2\n\u00c8\f\u00c8"+
		"\16\u00c8\u15a5\13\u00c8\3\u00c8\3\u00c8\7\u00c8\u15a9\n\u00c8\f\u00c8"+
		"\16\u00c8\u15ac\13\u00c8\3\u00c8\5\u00c8\u15af\n\u00c8\3\u00c8\5\u00c8"+
		"\u15b2\n\u00c8\3\u00c9\3\u00c9\6\u00c9\u15b6\n\u00c9\r\u00c9\16\u00c9"+
		"\u15b7\3\u00c9\3\u00c9\7\u00c9\u15bc\n\u00c9\f\u00c9\16\u00c9\u15bf\13"+
		"\u00c9\3\u00c9\3\u00c9\7\u00c9\u15c3\n\u00c9\f\u00c9\16\u00c9\u15c6\13"+
		"\u00c9\3\u00c9\5\u00c9\u15c9\n\u00c9\3\u00c9\7\u00c9\u15cc\n\u00c9\f\u00c9"+
		"\16\u00c9\u15cf\13\u00c9\3\u00c9\5\u00c9\u15d2\n\u00c9\3\u00c9\7\u00c9"+
		"\u15d5\n\u00c9\f\u00c9\16\u00c9\u15d8\13\u00c9\3\u00c9\5\u00c9\u15db\n"+
		"\u00c9\3\u00c9\7\u00c9\u15de\n\u00c9\f\u00c9\16\u00c9\u15e1\13\u00c9\3"+
		"\u00ca\3\u00ca\6\u00ca\u15e5\n\u00ca\r\u00ca\16\u00ca\u15e6\3\u00ca\3"+
		"\u00ca\7\u00ca\u15eb\n\u00ca\f\u00ca\16\u00ca\u15ee\13\u00ca\3\u00ca\3"+
		"\u00ca\7\u00ca\u15f2\n\u00ca\f\u00ca\16\u00ca\u15f5\13\u00ca\3\u00ca\5"+
		"\u00ca\u15f8\n\u00ca\3\u00ca\5\u00ca\u15fb\n\u00ca\3\u00cb\3\u00cb\7\u00cb"+
		"\u15ff\n\u00cb\f\u00cb\16\u00cb\u1602\13\u00cb\3\u00cb\3\u00cb\7\u00cb"+
		"\u1606\n\u00cb\f\u00cb\16\u00cb\u1609\13\u00cb\3\u00cb\3\u00cb\6\u00cb"+
		"\u160d\n\u00cb\r\u00cb\16\u00cb\u160e\3\u00cb\3\u00cb\5\u00cb\u1613\n"+
		"\u00cb\3\u00cb\7\u00cb\u1616\n\u00cb\f\u00cb\16\u00cb\u1619\13\u00cb\3"+
		"\u00cb\3\u00cb\5\u00cb\u161d\n\u00cb\3\u00cc\3\u00cc\3\u00cd\3\u00cd\6"+
		"\u00cd\u1623\n\u00cd\r\u00cd\16\u00cd\u1624\5\u00cd\u1627\n\u00cd\3\u00cd"+
		"\3\u00cd\6\u00cd\u162b\n\u00cd\r\u00cd\16\u00cd\u162c\3\u00cd\3\u00cd"+
		"\3\u00ce\3\u00ce\7\u00ce\u1633\n\u00ce\f\u00ce\16\u00ce\u1636\13\u00ce"+
		"\3\u00ce\3\u00ce\7\u00ce\u163a\n\u00ce\f\u00ce\16\u00ce\u163d\13\u00ce"+
		"\3\u00ce\3\u00ce\6\u00ce\u1641\n\u00ce\r\u00ce\16\u00ce\u1642\3\u00ce"+
		"\3\u00ce\5\u00ce\u1647\n\u00ce\3\u00ce\6\u00ce\u164a\n\u00ce\r\u00ce\16"+
		"\u00ce\u164b\3\u00ce\3\u00ce\5\u00ce\u1650\n\u00ce\3\u00ce\6\u00ce\u1653"+
		"\n\u00ce\r\u00ce\16\u00ce\u1654\3\u00ce\3\u00ce\5\u00ce\u1659\n\u00ce"+
		"\3\u00ce\7\u00ce\u165c\n\u00ce\f\u00ce\16\u00ce\u165f\13\u00ce\3\u00ce"+
		"\3\u00ce\5\u00ce\u1663\n\u00ce\3\u00cf\3\u00cf\6\u00cf\u1667\n\u00cf\r"+
		"\u00cf\16\u00cf\u1668\3\u00cf\3\u00cf\5\u00cf\u166d\n\u00cf\3\u00cf\6"+
		"\u00cf\u1670\n\u00cf\r\u00cf\16\u00cf\u1671\3\u00cf\3\u00cf\6\u00cf\u1676"+
		"\n\u00cf\r\u00cf\16\u00cf\u1677\3\u00cf\3\u00cf\3\u00d0\3\u00d0\3\u00d1"+
		"\3\u00d1\3\u00d2\3\u00d2\6\u00d2\u1682\n\u00d2\r\u00d2\16\u00d2\u1683"+
		"\5\u00d2\u1686\n\u00d2\3\u00d2\3\u00d2\6\u00d2\u168a\n\u00d2\r\u00d2\16"+
		"\u00d2\u168b\5\u00d2\u168e\n\u00d2\3\u00d2\3\u00d2\6\u00d2\u1692\n\u00d2"+
		"\r\u00d2\16\u00d2\u1693\3\u00d2\3\u00d2\5\u00d2\u1698\n\u00d2\3\u00d2"+
		"\6\u00d2\u169b\n\u00d2\r\u00d2\16\u00d2\u169c\3\u00d2\3\u00d2\3\u00d3"+
		"\3\u00d3\3\u00d4\3\u00d4\6\u00d4\u16a5\n\u00d4\r\u00d4\16\u00d4\u16a6"+
		"\3\u00d4\3\u00d4\5\u00d4\u16ab\n\u00d4\3\u00d4\3\u00d4\3\u00d5\3\u00d5"+
		"\3\u00d6\3\u00d6\7\u00d6\u16b3\n\u00d6\f\u00d6\16\u00d6\u16b6\13\u00d6"+
		"\3\u00d6\3\u00d6\7\u00d6\u16ba\n\u00d6\f\u00d6\16\u00d6\u16bd\13\u00d6"+
		"\3\u00d6\3\u00d6\7\u00d6\u16c1\n\u00d6\f\u00d6\16\u00d6\u16c4\13\u00d6"+
		"\6\u00d6\u16c6\n\u00d6\r\u00d6\16\u00d6\u16c7\3\u00d6\3\u00d6\5\u00d6"+
		"\u16cc\n\u00d6\3\u00d7\3\u00d7\6\u00d7\u16d0\n\u00d7\r\u00d7\16\u00d7"+
		"\u16d1\3\u00d7\3\u00d7\6\u00d7\u16d6\n\u00d7\r\u00d7\16\u00d7\u16d7\5"+
		"\u00d7\u16da\n\u00d7\3\u00d7\3\u00d7\3\u00d7\3\u00d7\6\u00d7\u16e0\n\u00d7"+
		"\r\u00d7\16\u00d7\u16e1\3\u00d7\3\u00d7\6\u00d7\u16e6\n\u00d7\r\u00d7"+
		"\16\u00d7\u16e7\5\u00d7\u16ea\n\u00d7\3\u00d7\3\u00d7\3\u00d7\3\u00d7"+
		"\6\u00d7\u16f0\n\u00d7\r\u00d7\16\u00d7\u16f1\3\u00d7\3\u00d7\6\u00d7"+
		"\u16f6\n\u00d7\r\u00d7\16\u00d7\u16f7\5\u00d7\u16fa\n\u00d7\3\u00d7\3"+
		"\u00d7\3\u00d7\3\u00d7\3\u00d7\3\u00d7\3\u00d7\3\u00d7\3\u00d7\6\u00d7"+
		"\u1705\n\u00d7\r\u00d7\16\u00d7\u1706\3\u00d7\3\u00d7\6\u00d7\u170b\n"+
		"\u00d7\r\u00d7\16\u00d7\u170c\5\u00d7\u170f\n\u00d7\3\u00d7\3\u00d7\3"+
		"\u00d7\3\u00d7\6\u00d7\u1715\n\u00d7\r\u00d7\16\u00d7\u1716\3\u00d7\3"+
		"\u00d7\6\u00d7\u171b\n\u00d7\r\u00d7\16\u00d7\u171c\5\u00d7\u171f\n\u00d7"+
		"\3\u00d7\3\u00d7\3\u00d7\3\u00d7\6\u00d7\u1725\n\u00d7\r\u00d7\16\u00d7"+
		"\u1726\3\u00d7\3\u00d7\6\u00d7\u172b\n\u00d7\r\u00d7\16\u00d7\u172c\3"+
		"\u00d7\3\u00d7\6\u00d7\u1731\n\u00d7\r\u00d7\16\u00d7\u1732\5\u00d7\u1735"+
		"\n\u00d7\3\u00d7\3\u00d7\5\u00d7\u1739\n\u00d7\3\u00d8\3\u00d8\6\u00d8"+
		"\u173d\n\u00d8\r\u00d8\16\u00d8\u173e\3\u00d8\3\u00d8\6\u00d8\u1743\n"+
		"\u00d8\r\u00d8\16\u00d8\u1744\3\u00d8\3\u00d8\7\u00d8\u1749\n\u00d8\f"+
		"\u00d8\16\u00d8\u174c\13\u00d8\3\u00d9\3\u00d9\6\u00d9\u1750\n\u00d9\r"+
		"\u00d9\16\u00d9\u1751\3\u00d9\3\u00d9\6\u00d9\u1756\n\u00d9\r\u00d9\16"+
		"\u00d9\u1757\5\u00d9\u175a\n\u00d9\3\u00d9\3\u00d9\6\u00d9\u175e\n\u00d9"+
		"\r\u00d9\16\u00d9\u175f\5\u00d9\u1762\n\u00d9\3\u00d9\3\u00d9\3\u00da"+
		"\3\u00da\3\u00da\6\u00da\u1769\n\u00da\r\u00da\16\u00da\u176a\5\u00da"+
		"\u176d\n\u00da\3\u00da\3\u00da\6\u00da\u1771\n\u00da\r\u00da\16\u00da"+
		"\u1772\3\u00da\3\u00da\6\u00da\u1777\n\u00da\r\u00da\16\u00da\u1778\3"+
		"\u00da\3\u00da\3\u00da\5\u00da\u177e\n\u00da\3\u00db\3\u00db\3\u00dc\3"+
		"\u00dc\3\u00dd\3\u00dd\6\u00dd\u1786\n\u00dd\r\u00dd\16\u00dd\u1787\3"+
		"\u00dd\3\u00dd\6\u00dd\u178c\n\u00dd\r\u00dd\16\u00dd\u178d\3\u00dd\3"+
		"\u00dd\6\u00dd\u1792\n\u00dd\r\u00dd\16\u00dd\u1793\5\u00dd\u1796\n\u00dd"+
		"\3\u00dd\3\u00dd\7\u00dd\u179a\n\u00dd\f\u00dd\16\u00dd\u179d\13\u00dd"+
		"\6\u00dd\u179f\n\u00dd\r\u00dd\16\u00dd\u17a0\3\u00de\3\u00de\3\u00df"+
		"\3\u00df\6\u00df\u17a7\n\u00df\r\u00df\16\u00df\u17a8\3\u00df\3\u00df"+
		"\6\u00df\u17ad\n\u00df\r\u00df\16\u00df\u17ae\3\u00df\3\u00df\5\u00df"+
		"\u17b3\n\u00df\3\u00e0\3\u00e0\6\u00e0\u17b7\n\u00e0\r\u00e0\16\u00e0"+
		"\u17b8\3\u00e0\3\u00e0\6\u00e0\u17bd\n\u00e0\r\u00e0\16\u00e0\u17be\5"+
		"\u00e0\u17c1\n\u00e0\3\u00e0\6\u00e0\u17c4\n\u00e0\r\u00e0\16\u00e0\u17c5"+
		"\3\u00e1\6\u00e1\u17c9\n\u00e1\r\u00e1\16\u00e1\u17ca\3\u00e1\5\u00e1"+
		"\u17ce\n\u00e1\3\u00e2\3\u00e2\6\u00e2\u17d2\n\u00e2\r\u00e2\16\u00e2"+
		"\u17d3\6\u00e2\u17d6\n\u00e2\r\u00e2\16\u00e2\u17d7\3\u00e2\3\u00e2\6"+
		"\u00e2\u17dc\n\u00e2\r\u00e2\16\u00e2\u17dd\5\u00e2\u17e0\n\u00e2\3\u00e2"+
		"\3\u00e2\6\u00e2\u17e4\n\u00e2\r\u00e2\16\u00e2\u17e5\6\u00e2\u17e8\n"+
		"\u00e2\r\u00e2\16\u00e2\u17e9\3\u00e3\3\u00e3\6\u00e3\u17ee\n\u00e3\r"+
		"\u00e3\16\u00e3\u17ef\3\u00e3\3\u00e3\7\u00e3\u17f4\n\u00e3\f\u00e3\16"+
		"\u00e3\u17f7\13\u00e3\3\u00e4\3\u00e4\3\u00e5\3\u00e5\3\u00e6\3\u00e6"+
		"\6\u00e6\u17ff\n\u00e6\r\u00e6\16\u00e6\u1800\3\u00e6\3\u00e6\6\u00e6"+
		"\u1805\n\u00e6\r\u00e6\16\u00e6\u1806\3\u00e6\3\u00e6\6\u00e6\u180b\n"+
		"\u00e6\r\u00e6\16\u00e6\u180c\5\u00e6\u180f\n\u00e6\3\u00e6\3\u00e6\3"+
		"\u00e7\3\u00e7\3\u00e7\3\u00e7\3\u00e7\3\u00e7\3\u00e7\7\u00e7\u181a\n"+
		"\u00e7\f\u00e7\16\u00e7\u181d\13\u00e7\6\u00e7\u181f\n\u00e7\r\u00e7\16"+
		"\u00e7\u1820\5\u00e7\u1823\n\u00e7\3\u00e8\3\u00e8\6\u00e8\u1827\n\u00e8"+
		"\r\u00e8\16\u00e8\u1828\3\u00e8\3\u00e8\6\u00e8\u182d\n\u00e8\r\u00e8"+
		"\16\u00e8\u182e\3\u00e8\3\u00e8\5\u00e8\u1833\n\u00e8\3\u00e8\3\u00e8"+
		"\6\u00e8\u1837\n\u00e8\r\u00e8\16\u00e8\u1838\3\u00e8\3\u00e8\6\u00e8"+
		"\u183d\n\u00e8\r\u00e8\16\u00e8\u183e\3\u00e8\3\u00e8\6\u00e8\u1843\n"+
		"\u00e8\r\u00e8\16\u00e8\u1844\5\u00e8\u1847\n\u00e8\3\u00e9\3\u00e9\3"+
		"\u00ea\3\u00ea\3\u00eb\3\u00eb\3\u00ec\3\u00ec\6\u00ec\u1851\n\u00ec\r"+
		"\u00ec\16\u00ec\u1852\3\u00ec\3\u00ec\7\u00ec\u1857\n\u00ec\f\u00ec\16"+
		"\u00ec\u185a\13\u00ec\3\u00ec\3\u00ec\6\u00ec\u185e\n\u00ec\r\u00ec\16"+
		"\u00ec\u185f\5\u00ec\u1862\n\u00ec\3\u00ec\3\u00ec\6\u00ec\u1866\n\u00ec"+
		"\r\u00ec\16\u00ec\u1867\5\u00ec\u186a\n\u00ec\3\u00ec\3\u00ec\6\u00ec"+
		"\u186e\n\u00ec\r\u00ec\16\u00ec\u186f\3\u00ec\3\u00ec\5\u00ec\u1874\n"+
		"\u00ec\3\u00ec\3\u00ec\6\u00ec\u1878\n\u00ec\r\u00ec\16\u00ec\u1879\3"+
		"\u00ec\3\u00ec\5\u00ec\u187e\n\u00ec\5\u00ec\u1880\n\u00ec\3\u00ec\7\u00ec"+
		"\u1883\n\u00ec\f\u00ec\16\u00ec\u1886\13\u00ec\3\u00ed\3\u00ed\6\u00ed"+
		"\u188a\n\u00ed\r\u00ed\16\u00ed\u188b\3\u00ed\3\u00ed\6\u00ed\u1890\n"+
		"\u00ed\r\u00ed\16\u00ed\u1891\5\u00ed\u1894\n\u00ed\3\u00ed\3\u00ed\6"+
		"\u00ed\u1898\n\u00ed\r\u00ed\16\u00ed\u1899\5\u00ed\u189c\n\u00ed\3\u00ed"+
		"\3\u00ed\3\u00ee\3\u00ee\6\u00ee\u18a2\n\u00ee\r\u00ee\16\u00ee\u18a3"+
		"\3\u00ee\3\u00ee\6\u00ee\u18a8\n\u00ee\r\u00ee\16\u00ee\u18a9\5\u00ee"+
		"\u18ac\n\u00ee\3\u00ee\3\u00ee\6\u00ee\u18b0\n\u00ee\r\u00ee\16\u00ee"+
		"\u18b1\5\u00ee\u18b4\n\u00ee\3\u00ee\3\u00ee\3\u00ef\3\u00ef\3\u00f0\3"+
		"\u00f0\3\u00f1\3\u00f1\3\u00f2\3\u00f2\3\u00f3\3\u00f3\3\u00f4\3\u00f4"+
		"\3\u00f5\3\u00f5\3\u00f6\3\u00f6\3\u00f7\3\u00f7\7\u00f7\u18ca\n\u00f7"+
		"\f\u00f7\16\u00f7\u18cd\13\u00f7\3\u00f7\3\u00f7\7\u00f7\u18d1\n\u00f7"+
		"\f\u00f7\16\u00f7\u18d4\13\u00f7\3\u00f7\3\u00f7\7\u00f7\u18d8\n\u00f7"+
		"\f\u00f7\16\u00f7\u18db\13\u00f7\7\u00f7\u18dd\n\u00f7\f\u00f7\16\u00f7"+
		"\u18e0\13\u00f7\3\u00f8\3\u00f8\6\u00f8\u18e4\n\u00f8\r\u00f8\16\u00f8"+
		"\u18e5\3\u00f8\3\u00f8\6\u00f8\u18ea\n\u00f8\r\u00f8\16\u00f8\u18eb\5"+
		"\u00f8\u18ee\n\u00f8\3\u00f8\3\u00f8\7\u00f8\u18f2\n\u00f8\f\u00f8\16"+
		"\u00f8\u18f5\13\u00f8\3\u00f8\3\u00f8\7\u00f8\u18f9\n\u00f8\f\u00f8\16"+
		"\u00f8\u18fc\13\u00f8\3\u00f8\3\u00f8\7\u00f8\u1900\n\u00f8\f\u00f8\16"+
		"\u00f8\u1903\13\u00f8\5\u00f8\u1905\n\u00f8\3\u00f8\3\u00f8\7\u00f8\u1909"+
		"\n\u00f8\f\u00f8\16\u00f8\u190c\13\u00f8\5\u00f8\u190e\n\u00f8\3\u00f8"+
		"\3\u00f8\7\u00f8\u1912\n\u00f8\f\u00f8\16\u00f8\u1915\13\u00f8\5\u00f8"+
		"\u1917\n\u00f8\3\u00f8\3\u00f8\7\u00f8\u191b\n\u00f8\f\u00f8\16\u00f8"+
		"\u191e\13\u00f8\5\u00f8\u1920\n\u00f8\3\u00f8\3\u00f8\7\u00f8\u1924\n"+
		"\u00f8\f\u00f8\16\u00f8\u1927\13\u00f8\5\u00f8\u1929\n\u00f8\3\u00f8\3"+
		"\u00f8\7\u00f8\u192d\n\u00f8\f\u00f8\16\u00f8\u1930\13\u00f8\5\u00f8\u1932"+
		"\n\u00f8\3\u00f8\3\u00f8\7\u00f8\u1936\n\u00f8\f\u00f8\16\u00f8\u1939"+
		"\13\u00f8\5\u00f8\u193b\n\u00f8\3\u00f8\3\u00f8\7\u00f8\u193f\n\u00f8"+
		"\f\u00f8\16\u00f8\u1942\13\u00f8\7\u00f8\u1944\n\u00f8\f\u00f8\16\u00f8"+
		"\u1947\13\u00f8\3\u00f8\3\u00f8\7\u00f8\u194b\n\u00f8\f\u00f8\16\u00f8"+
		"\u194e\13\u00f8\5\u00f8\u1950\n\u00f8\3\u00f8\3\u00f8\7\u00f8\u1954\n"+
		"\u00f8\f\u00f8\16\u00f8\u1957\13\u00f8\5\u00f8\u1959\n\u00f8\3\u00f8\3"+
		"\u00f8\3\u00f9\3\u00f9\6\u00f9\u195f\n\u00f9\r\u00f9\16\u00f9\u1960\5"+
		"\u00f9\u1963\n\u00f9\3\u00f9\3\u00f9\6\u00f9\u1967\n\u00f9\r\u00f9\16"+
		"\u00f9\u1968\3\u00f9\3\u00f9\6\u00f9\u196d\n\u00f9\r\u00f9\16\u00f9\u196e"+
		"\5\u00f9\u1971\n\u00f9\3\u00f9\3\u00f9\3\u00fa\3\u00fa\3\u00fb\3\u00fb"+
		"\6\u00fb\u1979\n\u00fb\r\u00fb\16\u00fb\u197a\5\u00fb\u197d\n\u00fb\3"+
		"\u00fb\3\u00fb\6\u00fb\u1981\n\u00fb\r\u00fb\16\u00fb\u1982\3\u00fb\3"+
		"\u00fb\6\u00fb\u1987\n\u00fb\r\u00fb\16\u00fb\u1988\5\u00fb\u198b\n\u00fb"+
		"\3\u00fb\3\u00fb\6\u00fb\u198f\n\u00fb\r\u00fb\16\u00fb\u1990\5\u00fb"+
		"\u1993\n\u00fb\3\u00fb\3\u00fb\6\u00fb\u1997\n\u00fb\r\u00fb\16\u00fb"+
		"\u1998\3\u00fb\3\u00fb\6\u00fb\u199d\n\u00fb\r\u00fb\16\u00fb\u199e\5"+
		"\u00fb\u19a1\n\u00fb\3\u00fb\3\u00fb\5\u00fb\u19a5\n\u00fb\3\u00fb\6\u00fb"+
		"\u19a8\n\u00fb\r\u00fb\16\u00fb\u19a9\3\u00fb\3\u00fb\5\u00fb\u19ae\n"+
		"\u00fb\3\u00fc\3\u00fc\3\u00fc\7\u00fc\u19b3\n\u00fc\f\u00fc\16\u00fc"+
		"\u19b6\13\u00fc\3\u00fc\3\u00fc\7\u00fc\u19ba\n\u00fc\f\u00fc\16\u00fc"+
		"\u19bd\13\u00fc\3\u00fc\3\u00fc\7\u00fc\u19c1\n\u00fc\f\u00fc\16\u00fc"+
		"\u19c4\13\u00fc\3\u00fc\7\u00fc\u19c7\n\u00fc\f\u00fc\16\u00fc\u19ca\13"+
		"\u00fc\5\u00fc\u19cc\n\u00fc\3\u00fd\3\u00fd\6\u00fd\u19d0\n\u00fd\r\u00fd"+
		"\16\u00fd\u19d1\3\u00fd\3\u00fd\6\u00fd\u19d6\n\u00fd\r\u00fd\16\u00fd"+
		"\u19d7\5\u00fd\u19da\n\u00fd\3\u00fd\3\u00fd\6\u00fd\u19de\n\u00fd\r\u00fd"+
		"\16\u00fd\u19df\5\u00fd\u19e2\n\u00fd\5\u00fd\u19e4\n\u00fd\3\u00fd\3"+
		"\u00fd\6\u00fd\u19e8\n\u00fd\r\u00fd\16\u00fd\u19e9\3\u00fd\3\u00fd\6"+
		"\u00fd\u19ee\n\u00fd\r\u00fd\16\u00fd\u19ef\3\u00fd\3\u00fd\6\u00fd\u19f4"+
		"\n\u00fd\r\u00fd\16\u00fd\u19f5\5\u00fd\u19f8\n\u00fd\3\u00fd\3\u00fd"+
		"\6\u00fd\u19fc\n\u00fd\r\u00fd\16\u00fd\u19fd\5\u00fd\u1a00\n\u00fd\3"+
		"\u00fd\3\u00fd\5\u00fd\u1a04\n\u00fd\3\u00fe\3\u00fe\6\u00fe\u1a08\n\u00fe"+
		"\r\u00fe\16\u00fe\u1a09\3\u00fe\3\u00fe\6\u00fe\u1a0e\n\u00fe\r\u00fe"+
		"\16\u00fe\u1a0f\3\u00fe\3\u00fe\5\u00fe\u1a14\n\u00fe\3\u00ff\3\u00ff"+
		"\3\u0100\3\u0100\6\u0100\u1a1a\n\u0100\r\u0100\16\u0100\u1a1b\3\u0100"+
		"\3\u0100\6\u0100\u1a20\n\u0100\r\u0100\16\u0100\u1a21\3\u0100\3\u0100"+
		"\6\u0100\u1a26\n\u0100\r\u0100\16\u0100\u1a27\5\u0100\u1a2a\n\u0100\3"+
		"\u0100\3\u0100\3\u0101\3\u0101\6\u0101\u1a30\n\u0101\r\u0101\16\u0101"+
		"\u1a31\3\u0101\3\u0101\6\u0101\u1a36\n\u0101\r\u0101\16\u0101\u1a37\5"+
		"\u0101\u1a3a\n\u0101\3\u0101\3\u0101\6\u0101\u1a3e\n\u0101\r\u0101\16"+
		"\u0101\u1a3f\5\u0101\u1a42\n\u0101\3\u0101\3\u0101\3\u0102\3\u0102\3\u0103"+
		"\3\u0103\6\u0103\u1a4a\n\u0103\r\u0103\16\u0103\u1a4b\3\u0103\3\u0103"+
		"\6\u0103\u1a50\n\u0103\r\u0103\16\u0103\u1a51\5\u0103\u1a54\n\u0103\5"+
		"\u0103\u1a56\n\u0103\3\u0103\3\u0103\3\u0103\6\u0103\u1a5b\n\u0103\r\u0103"+
		"\16\u0103\u1a5c\3\u0103\3\u0103\3\u0103\3\u0103\5\u0103\u1a63\n\u0103"+
		"\3\u0104\3\u0104\6\u0104\u1a67\n\u0104\r\u0104\16\u0104\u1a68\3\u0104"+
		"\3\u0104\6\u0104\u1a6d\n\u0104\r\u0104\16\u0104\u1a6e\5\u0104\u1a71\n"+
		"\u0104\3\u0104\3\u0104\6\u0104\u1a75\n\u0104\r\u0104\16\u0104\u1a76\5"+
		"\u0104\u1a79\n\u0104\3\u0104\3\u0104\3\u0105\3\u0105\6\u0105\u1a7f\n\u0105"+
		"\r\u0105\16\u0105\u1a80\3\u0105\3\u0105\6\u0105\u1a85\n\u0105\r\u0105"+
		"\16\u0105\u1a86\5\u0105\u1a89\n\u0105\3\u0105\3\u0105\6\u0105\u1a8d\n"+
		"\u0105\r\u0105\16\u0105\u1a8e\3\u0105\3\u0105\6\u0105\u1a93\n\u0105\r"+
		"\u0105\16\u0105\u1a94\3\u0105\3\u0105\6\u0105\u1a99\n\u0105\r\u0105\16"+
		"\u0105\u1a9a\3\u0105\3\u0105\3\u0105\3\u0105\6\u0105\u1aa1\n\u0105\r\u0105"+
		"\16\u0105\u1aa2\3\u0105\3\u0105\6\u0105\u1aa7\n\u0105\r\u0105\16\u0105"+
		"\u1aa8\5\u0105\u1aab\n\u0105\3\u0105\3\u0105\6\u0105\u1aaf\n\u0105\r\u0105"+
		"\16\u0105\u1ab0\3\u0105\3\u0105\6\u0105\u1ab5\n\u0105\r\u0105\16\u0105"+
		"\u1ab6\3\u0105\3\u0105\3\u0105\5\u0105\u1abc\n\u0105\5\u0105\u1abe\n\u0105"+
		"\3\u0105\5\u0105\u1ac1\n\u0105\3\u0106\3\u0106\6\u0106\u1ac5\n\u0106\r"+
		"\u0106\16\u0106\u1ac6\3\u0106\3\u0106\6\u0106\u1acb\n\u0106\r\u0106\16"+
		"\u0106\u1acc\5\u0106\u1acf\n\u0106\3\u0106\3\u0106\3\u0107\3\u0107\6\u0107"+
		"\u1ad5\n\u0107\r\u0107\16\u0107\u1ad6\3\u0107\3\u0107\6\u0107\u1adb\n"+
		"\u0107\r\u0107\16\u0107\u1adc\5\u0107\u1adf\n\u0107\3\u0107\3\u0107\6"+
		"\u0107\u1ae3\n\u0107\r\u0107\16\u0107\u1ae4\3\u0107\3\u0107\6\u0107\u1ae9"+
		"\n\u0107\r\u0107\16\u0107\u1aea\5\u0107\u1aed\n\u0107\3\u0107\3\u0107"+
		"\6\u0107\u1af1\n\u0107\r\u0107\16\u0107\u1af2\3\u0107\3\u0107\3\u0108"+
		"\3\u0108\3\u0109\3\u0109\3\u010a\3\u010a\6\u010a\u1afd\n\u010a\r\u010a"+
		"\16\u010a\u1afe\3\u010a\3\u010a\6\u010a\u1b03\n\u010a\r\u010a\16\u010a"+
		"\u1b04\5\u010a\u1b07\n\u010a\3\u010a\3\u010a\3\u010b\3\u010b\6\u010b\u1b0d"+
		"\n\u010b\r\u010b\16\u010b\u1b0e\5\u010b\u1b11\n\u010b\3\u010b\3\u010b"+
		"\3\u010b\6\u010b\u1b16\n\u010b\r\u010b\16\u010b\u1b17\5\u010b\u1b1a\n"+
		"\u010b\3\u010b\3\u010b\6\u010b\u1b1e\n\u010b\r\u010b\16\u010b\u1b1f\3"+
		"\u010b\3\u010b\5\u010b\u1b24\n\u010b\5\u010b\u1b26\n\u010b\3\u010c\3\u010c"+
		"\3\u010c\3\u010c\5\u010c\u1b2c\n\u010c\3\u010d\3\u010d\3\u010e\3\u010e"+
		"\7\u010e\u1b32\n\u010e\f\u010e\16\u010e\u1b35\13\u010e\3\u010e\3\u010e"+
		"\7\u010e\u1b39\n\u010e\f\u010e\16\u010e\u1b3c\13\u010e\3\u010e\3\u010e"+
		"\7\u010e\u1b40\n\u010e\f\u010e\16\u010e\u1b43\13\u010e\7\u010e\u1b45\n"+
		"\u010e\f\u010e\16\u010e\u1b48\13\u010e\3\u010e\3\u010e\7\u010e\u1b4c\n"+
		"\u010e\f\u010e\16\u010e\u1b4f\13\u010e\7\u010e\u1b51\n\u010e\f\u010e\16"+
		"\u010e\u1b54\13\u010e\3\u010e\3\u010e\7\u010e\u1b58\n\u010e\f\u010e\16"+
		"\u010e\u1b5b\13\u010e\7\u010e\u1b5d\n\u010e\f\u010e\16\u010e\u1b60\13"+
		"\u010e\3\u010e\3\u010e\7\u010e\u1b64\n\u010e\f\u010e\16\u010e\u1b67\13"+
		"\u010e\7\u010e\u1b69\n\u010e\f\u010e\16\u010e\u1b6c\13\u010e\3\u010e\3"+
		"\u010e\7\u010e\u1b70\n\u010e\f\u010e\16\u010e\u1b73\13\u010e\5\u010e\u1b75"+
		"\n\u010e\3\u010f\3\u010f\6\u010f\u1b79\n\u010f\r\u010f\16\u010f\u1b7a"+
		"\3\u010f\3\u010f\6\u010f\u1b7f\n\u010f\r\u010f\16\u010f\u1b80\3\u010f"+
		"\3\u010f\6\u010f\u1b85\n\u010f\r\u010f\16\u010f\u1b86\5\u010f\u1b89\n"+
		"\u010f\3\u010f\3\u010f\6\u010f\u1b8d\n\u010f\r\u010f\16\u010f\u1b8e\5"+
		"\u010f\u1b91\n\u010f\3\u010f\3\u010f\7\u010f\u1b95\n\u010f\f\u010f\16"+
		"\u010f\u1b98\13\u010f\6\u010f\u1b9a\n\u010f\r\u010f\16\u010f\u1b9b\3\u0110"+
		"\3\u0110\6\u0110\u1ba0\n\u0110\r\u0110\16\u0110\u1ba1\3\u0110\3\u0110"+
		"\6\u0110\u1ba6\n\u0110\r\u0110\16\u0110\u1ba7\3\u0110\3\u0110\5\u0110"+
		"\u1bac\n\u0110\3\u0111\3\u0111\3\u0112\3\u0112\3\u0113\3\u0113\6\u0113"+
		"\u1bb4\n\u0113\r\u0113\16\u0113\u1bb5\3\u0113\3\u0113\6\u0113\u1bba\n"+
		"\u0113\r\u0113\16\u0113\u1bbb\3\u0113\3\u0113\6\u0113\u1bc0\n\u0113\r"+
		"\u0113\16\u0113\u1bc1\5\u0113\u1bc4\n\u0113\3\u0113\3\u0113\6\u0113\u1bc8"+
		"\n\u0113\r\u0113\16\u0113\u1bc9\5\u0113\u1bcc\n\u0113\3\u0113\3\u0113"+
		"\3\u0114\3\u0114\6\u0114\u1bd2\n\u0114\r\u0114\16\u0114\u1bd3\3\u0114"+
		"\3\u0114\6\u0114\u1bd8\n\u0114\r\u0114\16\u0114\u1bd9\5\u0114\u1bdc\n"+
		"\u0114\3\u0114\3\u0114\3\u0114\3\u0114\6\u0114\u1be2\n\u0114\r\u0114\16"+
		"\u0114\u1be3\3\u0114\3\u0114\3\u0114\5\u0114\u1be9\n\u0114\3\u0115\3\u0115"+
		"\3\u0116\3\u0116\3\u0117\3\u0117\6\u0117\u1bf1\n\u0117\r\u0117\16\u0117"+
		"\u1bf2\3\u0117\3\u0117\6\u0117\u1bf7\n\u0117\r\u0117\16\u0117\u1bf8\5"+
		"\u0117\u1bfb\n\u0117\5\u0117\u1bfd\n\u0117\3\u0117\3\u0117\3\u0117\6\u0117"+
		"\u1c02\n\u0117\r\u0117\16\u0117\u1c03\3\u0117\3\u0117\5\u0117\u1c08\n"+
		"\u0117\3\u0118\3\u0118\3\u0119\3\u0119\6\u0119\u1c0e\n\u0119\r\u0119\16"+
		"\u0119\u1c0f\3\u0119\3\u0119\6\u0119\u1c14\n\u0119\r\u0119\16\u0119\u1c15"+
		"\5\u0119\u1c18\n\u0119\3\u0119\3\u0119\6\u0119\u1c1c\n\u0119\r\u0119\16"+
		"\u0119\u1c1d\5\u0119\u1c20\n\u0119\3\u0119\3\u0119\6\u0119\u1c24\n\u0119"+
		"\r\u0119\16\u0119\u1c25\5\u0119\u1c28\n\u0119\3\u0119\3\u0119\6\u0119"+
		"\u1c2c\n\u0119\r\u0119\16\u0119\u1c2d\3\u0119\3\u0119\6\u0119\u1c32\n"+
		"\u0119\r\u0119\16\u0119\u1c33\3\u011a\3\u011a\3\u011b\3\u011b\6\u011b"+
		"\u1c3a\n\u011b\r\u011b\16\u011b\u1c3b\3\u011b\3\u011b\6\u011b\u1c40\n"+
		"\u011b\r\u011b\16\u011b\u1c41\6\u011b\u1c44\n\u011b\r\u011b\16\u011b\u1c45"+
		"\3\u011b\3\u011b\6\u011b\u1c4a\n\u011b\r\u011b\16\u011b\u1c4b\3\u011b"+
		"\3\u011b\7\u011b\u1c50\n\u011b\f\u011b\16\u011b\u1c53\13\u011b\6\u011b"+
		"\u1c55\n\u011b\r\u011b\16\u011b\u1c56\3\u011c\3\u011c\3\u011c\6\u011c"+
		"\u1c5c\n\u011c\r\u011c\16\u011c\u1c5d\3\u011c\3\u011c\3\u011c\3\u011c"+
		"\3\u011c\3\u011c\3\u011c\6\u011c\u1c67\n\u011c\r\u011c\16\u011c\u1c68"+
		"\5\u011c\u1c6b\n\u011c\3\u011c\3\u011c\6\u011c\u1c6f\n\u011c\r\u011c\16"+
		"\u011c\u1c70\3\u011c\3\u011c\3\u011c\3\u011c\3\u011c\6\u011c\u1c78\n\u011c"+
		"\r\u011c\16\u011c\u1c79\3\u011c\3\u011c\5\u011c\u1c7e\n\u011c\3\u011d"+
		"\3\u011d\3\u011e\3\u011e\3\u011f\3\u011f\3\u0120\3\u0120\3\u0120\7\u0120"+
		"\u1c89\n\u0120\f\u0120\16\u0120\u1c8c\13\u0120\3\u0120\3\u0120\7\u0120"+
		"\u1c90\n\u0120\f\u0120\16\u0120\u1c93\13\u0120\3\u0120\3\u0120\3\u0120"+
		"\3\u0120\7\u0120\u1c99\n\u0120\f\u0120\16\u0120\u1c9c\13\u0120\3\u0120"+
		"\3\u0120\3\u0120\3\u0120\5\u0120\u1ca2\n\u0120\3\u0120\3\u0120\7\u0120"+
		"\u1ca6\n\u0120\f\u0120\16\u0120\u1ca9\13\u0120\3\u0120\3\u0120\7\u0120"+
		"\u1cad\n\u0120\f\u0120\16\u0120\u1cb0\13\u0120\3\u0120\3\u0120\7\u0120"+
		"\u1cb4\n\u0120\f\u0120\16\u0120\u1cb7\13\u0120\3\u0121\3\u0121\3\u0121"+
		"\5\u0121\u1cbc\n\u0121\3\u0122\3\u0122\3\u0122\3\u0122\3\u0122\3\u0122"+
		"\5\u0122\u1cc4\n\u0122\3\u0123\3\u0123\3\u0124\3\u0124\3\u0124\7\u0124"+
		"\u1ccb\n\u0124\f\u0124\16\u0124\u1cce\13\u0124\3\u0124\3\u0124\7\u0124"+
		"\u1cd2\n\u0124\f\u0124\16\u0124\u1cd5\13\u0124\3\u0124\3\u0124\3\u0124"+
		"\3\u0124\7\u0124\u1cdb\n\u0124\f\u0124\16\u0124\u1cde\13\u0124\3\u0124"+
		"\3\u0124\3\u0124\3\u0124\3\u0124\5\u0124\u1ce5\n\u0124\3\u0124\3\u0124"+
		"\7\u0124\u1ce9\n\u0124\f\u0124\16\u0124\u1cec\13\u0124\3\u0124\3\u0124"+
		"\7\u0124\u1cf0\n\u0124\f\u0124\16\u0124\u1cf3\13\u0124\3\u0124\3\u0124"+
		"\7\u0124\u1cf7\n\u0124\f\u0124\16\u0124\u1cfa\13\u0124\3\u0125\3\u0125"+
		"\6\u0125\u1cfe\n\u0125\r\u0125\16\u0125\u1cff\3\u0125\3\u0125\5\u0125"+
		"\u1d04\n\u0125\3\u0125\6\u0125\u1d07\n\u0125\r\u0125\16\u0125\u1d08\3"+
		"\u0125\3\u0125\3\u0126\3\u0126\3\u0126\7\u0126\u1d10\n\u0126\f\u0126\16"+
		"\u0126\u1d13\13\u0126\3\u0126\3\u0126\7\u0126\u1d17\n\u0126\f\u0126\16"+
		"\u0126\u1d1a\13\u0126\3\u0126\3\u0126\3\u0126\3\u0126\5\u0126\u1d20\n"+
		"\u0126\3\u0126\3\u0126\6\u0126\u1d24\n\u0126\r\u0126\16\u0126\u1d25\3"+
		"\u0126\3\u0126\7\u0126\u1d2a\n\u0126\f\u0126\16\u0126\u1d2d\13\u0126\3"+
		"\u0126\3\u0126\7\u0126\u1d31\n\u0126\f\u0126\16\u0126\u1d34\13\u0126\3"+
		"\u0126\3\u0126\7\u0126\u1d38\n\u0126\f\u0126\16\u0126\u1d3b\13\u0126\3"+
		"\u0127\3\u0127\3\u0128\3\u0128\6\u0128\u1d41\n\u0128\r\u0128\16\u0128"+
		"\u1d42\3\u0128\3\u0128\5\u0128\u1d47\n\u0128\3\u0128\6\u0128\u1d4a\n\u0128"+
		"\r\u0128\16\u0128\u1d4b\3\u0128\3\u0128\5\u0128\u1d50\n\u0128\3\u0128"+
		"\6\u0128\u1d53\n\u0128\r\u0128\16\u0128\u1d54\3\u0128\3\u0128\3\u0129"+
		"\3\u0129\3\u012a\3\u012a\6\u012a\u1d5d\n\u012a\r\u012a\16\u012a\u1d5e"+
		"\3\u012a\3\u012a\5\u012a\u1d63\n\u012a\3\u012a\6\u012a\u1d66\n\u012a\r"+
		"\u012a\16\u012a\u1d67\3\u012a\3\u012a\5\u012a\u1d6c\n\u012a\3\u012a\6"+
		"\u012a\u1d6f\n\u012a\r\u012a\16\u012a\u1d70\3\u012a\3\u012a\3\u012b\3"+
		"\u012b\3\u012c\3\u012c\7\u012c\u1d79\n\u012c\f\u012c\16\u012c\u1d7c\13"+
		"\u012c\5\u012c\u1d7e\n\u012c\3\u012c\3\u012c\7\u012c\u1d82\n\u012c\f\u012c"+
		"\16\u012c\u1d85\13\u012c\5\u012c\u1d87\n\u012c\3\u012c\3\u012c\6\u012c"+
		"\u1d8b\n\u012c\r\u012c\16\u012c\u1d8c\3\u012c\3\u012c\5\u012c\u1d91\n"+
		"\u012c\3\u012c\3\u012c\6\u012c\u1d95\n\u012c\r\u012c\16\u012c\u1d96\3"+
		"\u012c\3\u012c\5\u012c\u1d9b\n\u012c\3\u012c\3\u012c\6\u012c\u1d9f\n\u012c"+
		"\r\u012c\16\u012c\u1da0\3\u012c\3\u012c\5\u012c\u1da5\n\u012c\3\u012c"+
		"\3\u012c\6\u012c\u1da9\n\u012c\r\u012c\16\u012c\u1daa\3\u012c\3\u012c"+
		"\5\u012c\u1daf\n\u012c\3\u012c\3\u012c\6\u012c\u1db3\n\u012c\r\u012c\16"+
		"\u012c\u1db4\3\u012c\3\u012c\5\u012c\u1db9\n\u012c\3\u012c\3\u012c\6\u012c"+
		"\u1dbd\n\u012c\r\u012c\16\u012c\u1dbe\3\u012c\3\u012c\5\u012c\u1dc3\n"+
		"\u012c\5\u012c\u1dc5\n\u012c\3\u012c\3\u012c\6\u012c\u1dc9\n\u012c\r\u012c"+
		"\16\u012c\u1dca\3\u012c\3\u012c\5\u012c\u1dcf\n\u012c\3\u012c\6\u012c"+
		"\u1dd2\n\u012c\r\u012c\16\u012c\u1dd3\3\u012c\3\u012c\6\u012c\u1dd8\n"+
		"\u012c\r\u012c\16\u012c\u1dd9\3\u012c\3\u012c\6\u012c\u1dde\n\u012c\r"+
		"\u012c\16\u012c\u1ddf\3\u012c\3\u012c\5\u012c\u1de4\n\u012c\3\u012c\3"+
		"\u012c\3\u012c\6\u012c\u1de9\n\u012c\r\u012c\16\u012c\u1dea\3\u012c\3"+
		"\u012c\5\u012c\u1def\n\u012c\3\u012c\6\u012c\u1df2\n\u012c\r\u012c\16"+
		"\u012c\u1df3\3\u012c\3\u012c\6\u012c\u1df8\n\u012c\r\u012c\16\u012c\u1df9"+
		"\3\u012c\3\u012c\6\u012c\u1dfe\n\u012c\r\u012c\16\u012c\u1dff\3\u012c"+
		"\3\u012c\5\u012c\u1e04\n\u012c\3\u012c\5\u012c\u1e07\n\u012c\3\u012d\3"+
		"\u012d\7\u012d\u1e0b\n\u012d\f\u012d\16\u012d\u1e0e\13\u012d\3\u012d\5"+
		"\u012d\u1e11\n\u012d\3\u012d\7\u012d\u1e14\n\u012d\f\u012d\16\u012d\u1e17"+
		"\13\u012d\3\u012d\5\u012d\u1e1a\n\u012d\3\u012e\3\u012e\3\u012e\7\u012e"+
		"\u1e1f\n\u012e\f\u012e\16\u012e\u1e22\13\u012e\3\u012e\3\u012e\7\u012e"+
		"\u1e26\n\u012e\f\u012e\16\u012e\u1e29\13\u012e\3\u012e\5\u012e\u1e2c\n"+
		"\u012e\3\u012e\7\u012e\u1e2f\n\u012e\f\u012e\16\u012e\u1e32\13\u012e\3"+
		"\u012e\5\u012e\u1e35\n\u012e\5\u012e\u1e37\n\u012e\3\u012f\3\u012f\3\u0130"+
		"\3\u0130\7\u0130\u1e3d\n\u0130\f\u0130\16\u0130\u1e40\13\u0130\3\u0130"+
		"\3\u0130\5\u0130\u1e44\n\u0130\3\u0130\7\u0130\u1e47\n\u0130\f\u0130\16"+
		"\u0130\u1e4a\13\u0130\3\u0130\3\u0130\5\u0130\u1e4e\n\u0130\7\u0130\u1e50"+
		"\n\u0130\f\u0130\16\u0130\u1e53\13\u0130\3\u0130\7\u0130\u1e56\n\u0130"+
		"\f\u0130\16\u0130\u1e59\13\u0130\3\u0130\3\u0130\3\u0131\3\u0131\7\u0131"+
		"\u1e5f\n\u0131\f\u0131\16\u0131\u1e62\13\u0131\3\u0131\3\u0131\7\u0131"+
		"\u1e66\n\u0131\f\u0131\16\u0131\u1e69\13\u0131\3\u0131\3\u0131\7\u0131"+
		"\u1e6d\n\u0131\f\u0131\16\u0131\u1e70\13\u0131\3\u0131\5\u0131\u1e73\n"+
		"\u0131\3\u0131\7\u0131\u1e76\n\u0131\f\u0131\16\u0131\u1e79\13\u0131\3"+
		"\u0131\3\u0131\3\u0132\3\u0132\3\u0133\3\u0133\3\u0134\3\u0134\3\u0134"+
		"\2\5\u023e\u0246\u024a\u0135\2\4\6\b\n\f\16\20\22\24\26\30\32\34\36 \""+
		"$&(*,.\60\62\64\668:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084"+
		"\u0086\u0088\u008a\u008c\u008e\u0090\u0092\u0094\u0096\u0098\u009a\u009c"+
		"\u009e\u00a0\u00a2\u00a4\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4"+
		"\u00b6\u00b8\u00ba\u00bc\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca\u00cc"+
		"\u00ce\u00d0\u00d2\u00d4\u00d6\u00d8\u00da\u00dc\u00de\u00e0\u00e2\u00e4"+
		"\u00e6\u00e8\u00ea\u00ec\u00ee\u00f0\u00f2\u00f4\u00f6\u00f8\u00fa\u00fc"+
		"\u00fe\u0100\u0102\u0104\u0106\u0108\u010a\u010c\u010e\u0110\u0112\u0114"+
		"\u0116\u0118\u011a\u011c\u011e\u0120\u0122\u0124\u0126\u0128\u012a\u012c"+
		"\u012e\u0130\u0132\u0134\u0136\u0138\u013a\u013c\u013e\u0140\u0142\u0144"+
		"\u0146\u0148\u014a\u014c\u014e\u0150\u0152\u0154\u0156\u0158\u015a\u015c"+
		"\u015e\u0160\u0162\u0164\u0166\u0168\u016a\u016c\u016e\u0170\u0172\u0174"+
		"\u0176\u0178\u017a\u017c\u017e\u0180\u0182\u0184\u0186\u0188\u018a\u018c"+
		"\u018e\u0190\u0192\u0194\u0196\u0198\u019a\u019c\u019e\u01a0\u01a2\u01a4"+
		"\u01a6\u01a8\u01aa\u01ac\u01ae\u01b0\u01b2\u01b4\u01b6\u01b8\u01ba\u01bc"+
		"\u01be\u01c0\u01c2\u01c4\u01c6\u01c8\u01ca\u01cc\u01ce\u01d0\u01d2\u01d4"+
		"\u01d6\u01d8\u01da\u01dc\u01de\u01e0\u01e2\u01e4\u01e6\u01e8\u01ea\u01ec"+
		"\u01ee\u01f0\u01f2\u01f4\u01f6\u01f8\u01fa\u01fc\u01fe\u0200\u0202\u0204"+
		"\u0206\u0208\u020a\u020c\u020e\u0210\u0212\u0214\u0216\u0218\u021a\u021c"+
		"\u021e\u0220\u0222\u0224\u0226\u0228\u022a\u022c\u022e\u0230\u0232\u0234"+
		"\u0236\u0238\u023a\u023c\u023e\u0240\u0242\u0244\u0246\u0248\u024a\u024c"+
		"\u024e\u0250\u0252\u0254\u0256\u0258\u025a\u025c\u025e\u0260\u0262\u0264"+
		"\u0266\2+\3\2\u01b2\u01b2\4\2\u0099\u0099\u009c\u009c\4\2\61\61\u0191"+
		"\u0191\4\2\u00dd\u00dd\u0138\u0138\4\2\u0121\u0121\u0170\u0170\4\2\u01ac"+
		"\u01ac\u01af\u01af\3\2\u0189\u018a\3\2\u015c\u015d\4\2\u00d8\u00d8\u0135"+
		"\u0135\3\2\u00d2\u00d3\3\2\u0165\u0166\3\2\u01ac\u01ad\4\2\33\33pp\4\2"+
		"\u00d7\u00d7\u016b\u016b\4\2\u00a9\u00a9\u01af\u01af\3\2\u00dd\u00de\4"+
		"\2\u0145\u0145\u0172\u0172\3\2\u010b\u010c\7\2\u019a\u019b\u01a3\u01a4"+
		"\u01a9\u01a9\u01ad\u01ad\u01af\u01af\4\2\u00a6\u00a6\u00bf\u00bf\4\2\u00fa"+
		"\u00fa\u014e\u014e\3\2\u0095\u0096\4\2BB\u00c7\u00c7\4\2\u00ef\u00ef\u014e"+
		"\u014e\6\2\13\13\u00be\u00be\u017c\u017c\u01af\u01af\5\299\u00eb\u00eb"+
		"\u0180\u0180\4\2\u00c3\u00c3\u00f8\u00f8\4\2\25\25\u00cf\u00cf\7\2\65"+
		"\65SS\u00df\u00df\u0106\u0107\u015e\u0160\4\2\30\31\u0093\u0094\5\2xx"+
		"\u011b\u011b\u0142\u0142\3\2\26\27\4\299\u011f\u011f\4\2xx\u00a1\u00a1"+
		"\4\2\u011e\u011e\u0147\u0148\3\2UV\3\2\u0197\u0198\4\2\u00a2\u00a2\u0156"+
		"\u0156\4\2\23\23\u00ff\u00ff\5\2\u00f0\u00f0\u0111\u0111\u0185\u0185\5"+
		"\2\r\17\u00f5\u00f5\u01af\u01af\2\u2357\2\u026c\3\2\2\2\4\u027d\3\2\2"+
		"\2\6\u0285\3\2\2\2\b\u028b\3\2\2\2\n\u029d\3\2\2\2\f\u029f\3\2\2\2\16"+
		"\u02a9\3\2\2\2\20\u02e2\3\2\2\2\22\u02ff\3\2\2\2\24\u0325\3\2\2\2\26\u0327"+
		"\3\2\2\2\30\u0354\3\2\2\2\32\u0362\3\2\2\2\34\u0364\3\2\2\2\36\u0385\3"+
		"\2\2\2 \u0398\3\2\2\2\"\u03f6\3\2\2\2$\u0409\3\2\2\2&\u040b\3\2\2\2(\u0428"+
		"\3\2\2\2*\u042a\3\2\2\2,\u042c\3\2\2\2.\u043f\3\2\2\2\60\u045a\3\2\2\2"+
		"\62\u0467\3\2\2\2\64\u046b\3\2\2\2\66\u046d\3\2\2\28\u04ae\3\2\2\2:\u04f7"+
		"\3\2\2\2<\u04fb\3\2\2\2>\u0501\3\2\2\2@\u0503\3\2\2\2B\u0523\3\2\2\2D"+
		"\u0543\3\2\2\2F\u056f\3\2\2\2H\u0596\3\2\2\2J\u0598\3\2\2\2L\u059a\3\2"+
		"\2\2N\u05ab\3\2\2\2P\u05df\3\2\2\2R\u0635\3\2\2\2T\u063d\3\2\2\2V\u0656"+
		"\3\2\2\2X\u0669\3\2\2\2Z\u066b\3\2\2\2\\\u068d\3\2\2\2^\u068f\3\2\2\2"+
		"`\u06d0\3\2\2\2b\u071a\3\2\2\2d\u071c\3\2\2\2f\u0728\3\2\2\2h\u0753\3"+
		"\2\2\2j\u075b\3\2\2\2l\u077d\3\2\2\2n\u07a3\3\2\2\2p\u07a8\3\2\2\2r\u07aa"+
		"\3\2\2\2t\u07ac\3\2\2\2v\u07d2\3\2\2\2x\u07d4\3\2\2\2z\u0857\3\2\2\2|"+
		"\u086b\3\2\2\2~\u086f\3\2\2\2\u0080\u0877\3\2\2\2\u0082\u0899\3\2\2\2"+
		"\u0084\u08bb\3\2\2\2\u0086\u08dd\3\2\2\2\u0088\u08ff\3\2\2\2\u008a\u0901"+
		"\3\2\2\2\u008c\u0928\3\2\2\2\u008e\u092a\3\2\2\2\u0090\u0961\3\2\2\2\u0092"+
		"\u0975\3\2\2\2\u0094\u099b\3\2\2\2\u0096\u09d7\3\2\2\2\u0098\u09ff\3\2"+
		"\2\2\u009a\u0a17\3\2\2\2\u009c\u0a29\3\2\2\2\u009e\u0a97\3\2\2\2\u00a0"+
		"\u0af2\3\2\2\2\u00a2\u0af4\3\2\2\2\u00a4\u0b03\3\2\2\2\u00a6\u0b3f\3\2"+
		"\2\2\u00a8\u0b41\3\2\2\2\u00aa\u0b45\3\2\2\2\u00ac\u0b64\3\2\2\2\u00ae"+
		"\u0b7c\3\2\2\2\u00b0\u0b7e\3\2\2\2\u00b2\u0b80\3\2\2\2\u00b4\u0b88\3\2"+
		"\2\2\u00b6\u0b9a\3\2\2\2\u00b8\u0bac\3\2\2\2\u00ba\u0bbe\3\2\2\2\u00bc"+
		"\u0bd1\3\2\2\2\u00be\u0c12\3\2\2\2\u00c0\u0c4e\3\2\2\2\u00c2\u0c6e\3\2"+
		"\2\2\u00c4\u0c8e\3\2\2\2\u00c6\u0cba\3\2\2\2\u00c8\u0cda\3\2\2\2\u00ca"+
		"\u0cf5\3\2\2\2\u00cc\u0d10\3\2\2\2\u00ce\u0d48\3\2\2\2\u00d0\u0d4a\3\2"+
		"\2\2\u00d2\u0d57\3\2\2\2\u00d4\u0d80\3\2\2\2\u00d6\u0dbe\3\2\2\2\u00d8"+
		"\u0dc0\3\2\2\2\u00da\u0dd6\3\2\2\2\u00dc\u0dd8\3\2\2\2\u00de\u0dee\3\2"+
		"\2\2\u00e0\u0e02\3\2\2\2\u00e2\u0e1d\3\2\2\2\u00e4\u0e1f\3\2\2\2\u00e6"+
		"\u0e27\3\2\2\2\u00e8\u0e29\3\2\2\2\u00ea\u0e2b\3\2\2\2\u00ec\u0e2d\3\2"+
		"\2\2\u00ee\u0e49\3\2\2\2\u00f0\u0e64\3\2\2\2\u00f2\u0e66\3\2\2\2\u00f4"+
		"\u0e89\3\2\2\2\u00f6\u0ebb\3\2\2\2\u00f8\u0ebd\3\2\2\2\u00fa\u0ebf\3\2"+
		"\2\2\u00fc\u0ec1\3\2\2\2\u00fe\u0ec3\3\2\2\2\u0100\u0ed0\3\2\2\2\u0102"+
		"\u0f96\3\2\2\2\u0104\u0fa7\3\2\2\2\u0106\u0fe3\3\2\2\2\u0108\u0fff\3\2"+
		"\2\2\u010a\u1001\3\2\2\2\u010c\u1003\3\2\2\2\u010e\u1005\3\2\2\2\u0110"+
		"\u1007\3\2\2\2\u0112\u1053\3\2\2\2\u0114\u1055\3\2\2\2\u0116\u1068\3\2"+
		"\2\2\u0118\u108a\3\2\2\2\u011a\u108c\3\2\2\2\u011c\u114c\3\2\2\2\u011e"+
		"\u114e\3\2\2\2\u0120\u1150\3\2\2\2\u0122\u1152\3\2\2\2\u0124\u1154\3\2"+
		"\2\2\u0126\u1156\3\2\2\2\u0128\u1158\3\2\2\2\u012a\u115a\3\2\2\2\u012c"+
		"\u116b\3\2\2\2\u012e\u11ae\3\2\2\2\u0130\u11b0\3\2\2\2\u0132\u11c1\3\2"+
		"\2\2\u0134\u11c5\3\2\2\2\u0136\u11c7\3\2\2\2\u0138\u11c9\3\2\2\2\u013a"+
		"\u11cd\3\2\2\2\u013c\u11e3\3\2\2\2\u013e\u11f7\3\2\2\2\u0140\u11f9\3\2"+
		"\2\2\u0142\u1270\3\2\2\2\u0144\u1274\3\2\2\2\u0146\u1278\3\2\2\2\u0148"+
		"\u127c\3\2\2\2\u014a\u127e\3\2\2\2\u014c\u12a7\3\2\2\2\u014e\u12a9\3\2"+
		"\2\2\u0150\u12c7\3\2\2\2\u0152\u12c9\3\2\2\2\u0154\u12ec\3\2\2\2\u0156"+
		"\u136f\3\2\2\2\u0158\u1371\3\2\2\2\u015a\u1373\3\2\2\2\u015c\u1375\3\2"+
		"\2\2\u015e\u1377\3\2\2\2\u0160\u1391\3\2\2\2\u0162\u145d\3\2\2\2\u0164"+
		"\u145f\3\2\2\2\u0166\u1467\3\2\2\2\u0168\u1471\3\2\2\2\u016a\u1479\3\2"+
		"\2\2\u016c\u147d\3\2\2\2\u016e\u147f\3\2\2\2\u0170\u1481\3\2\2\2\u0172"+
		"\u14a3\3\2\2\2\u0174\u14a5\3\2\2\2\u0176\u14ce\3\2\2\2\u0178\u14d6\3\2"+
		"\2\2\u017a\u14e8\3\2\2\2\u017c\u14f2\3\2\2\2\u017e\u14fd\3\2\2\2\u0180"+
		"\u14ff\3\2\2\2\u0182\u1514\3\2\2\2\u0184\u1529\3\2\2\2\u0186\u153e\3\2"+
		"\2\2\u0188\u1553\3\2\2\2\u018a\u1568\3\2\2\2\u018c\u1582\3\2\2\2\u018e"+
		"\u1599\3\2\2\2\u0190\u15b3\3\2\2\2\u0192\u15e2\3\2\2\2\u0194\u15fc\3\2"+
		"\2\2\u0196\u161e\3\2\2\2\u0198\u1626\3\2\2\2\u019a\u1630\3\2\2\2\u019c"+
		"\u1664\3\2\2\2\u019e\u167b\3\2\2\2\u01a0\u167d\3\2\2\2\u01a2\u1685\3\2"+
		"\2\2\u01a4\u16a0\3\2\2\2\u01a6\u16a2\3\2\2\2\u01a8\u16ae\3\2\2\2\u01aa"+
		"\u16b0\3\2\2\2\u01ac\u1738\3\2\2\2\u01ae\u173a\3\2\2\2\u01b0\u174d\3\2"+
		"\2\2\u01b2\u177d\3\2\2\2\u01b4\u177f\3\2\2\2\u01b6\u1781\3\2\2\2\u01b8"+
		"\u1783\3\2\2\2\u01ba\u17a2\3\2\2\2\u01bc\u17a4\3\2\2\2\u01be\u17b4\3\2"+
		"\2\2\u01c0\u17c8\3\2\2\2\u01c2\u17d5\3\2\2\2\u01c4\u17eb\3\2\2\2\u01c6"+
		"\u17f8\3\2\2\2\u01c8\u17fa\3\2\2\2\u01ca\u17fc\3\2\2\2\u01cc\u1822\3\2"+
		"\2\2\u01ce\u1846\3\2\2\2\u01d0\u1848\3\2\2\2\u01d2\u184a\3\2\2\2\u01d4"+
		"\u184c\3\2\2\2\u01d6\u184e\3\2\2\2\u01d8\u1887\3\2\2\2\u01da\u189f\3\2"+
		"\2\2\u01dc\u18b7\3\2\2\2\u01de\u18b9\3\2\2\2\u01e0\u18bb\3\2\2\2\u01e2"+
		"\u18bd\3\2\2\2\u01e4\u18bf\3\2\2\2\u01e6\u18c1\3\2\2\2\u01e8\u18c3\3\2"+
		"\2\2\u01ea\u18c5\3\2\2\2\u01ec\u18c7\3\2\2\2\u01ee\u18e1\3\2\2\2\u01f0"+
		"\u1962\3\2\2\2\u01f2\u1974\3\2\2\2\u01f4\u197c\3\2\2\2\u01f6\u19cb\3\2"+
		"\2\2\u01f8\u19e3\3\2\2\2\u01fa\u1a05\3\2\2\2\u01fc\u1a15\3\2\2\2\u01fe"+
		"\u1a17\3\2\2\2\u0200\u1a2d\3\2\2\2\u0202\u1a45\3\2\2\2\u0204\u1a55\3\2"+
		"\2\2\u0206\u1a64\3\2\2\2\u0208\u1ac0\3\2\2\2\u020a\u1ac2\3\2\2\2\u020c"+
		"\u1ad2\3\2\2\2\u020e\u1af6\3\2\2\2\u0210\u1af8\3\2\2\2\u0212\u1afa\3\2"+
		"\2\2\u0214\u1b25\3\2\2\2\u0216\u1b2b\3\2\2\2\u0218\u1b2d\3\2\2\2\u021a"+
		"\u1b2f\3\2\2\2\u021c\u1b76\3\2\2\2\u021e\u1b9d\3\2\2\2\u0220\u1bad\3\2"+
		"\2\2\u0222\u1baf\3\2\2\2\u0224\u1bb1\3\2\2\2\u0226\u1be8\3\2\2\2\u0228"+
		"\u1bea\3\2\2\2\u022a\u1bec\3\2\2\2\u022c\u1c07\3\2\2\2\u022e\u1c09\3\2"+
		"\2\2\u0230\u1c0b\3\2\2\2\u0232\u1c35\3\2\2\2\u0234\u1c37\3\2\2\2\u0236"+
		"\u1c7d\3\2\2\2\u0238\u1c7f\3\2\2\2\u023a\u1c81\3\2\2\2\u023c\u1c83\3\2"+
		"\2\2\u023e\u1ca1\3\2\2\2\u0240\u1cbb\3\2\2\2\u0242\u1cc3\3\2\2\2\u0244"+
		"\u1cc5\3\2\2\2\u0246\u1ce4\3\2\2\2\u0248\u1cfb\3\2\2\2\u024a\u1d1f\3\2"+
		"\2\2\u024c\u1d3c\3\2\2\2\u024e\u1d3e\3\2\2\2\u0250\u1d58\3\2\2\2\u0252"+
		"\u1d5a\3\2\2\2\u0254\u1d74\3\2\2\2\u0256\u1d7d\3\2\2\2\u0258\u1e08\3\2"+
		"\2\2\u025a\u1e36\3\2\2\2\u025c\u1e38\3\2\2\2\u025e\u1e3a\3\2\2\2\u0260"+
		"\u1e5c\3\2\2\2\u0262\u1e7c\3\2\2\2\u0264\u1e7e\3\2\2\2\u0266\u1e80\3\2"+
		"\2\2\u0268\u026b\5\f\7\2\u0269\u026b\5\6\4\2\u026a\u0268\3\2\2\2\u026a"+
		"\u0269\3\2\2\2\u026b\u026e\3\2\2\2\u026c\u026a\3\2\2\2\u026c\u026d\3\2"+
		"\2\2\u026d\u026f\3\2\2\2\u026e\u026c\3\2\2\2\u026f\u0270\7\2\2\3\u0270"+
		"\3\3\2\2\2\u0271\u027e\7\u0185\2\2\u0272\u027e\7\u014b\2\2\u0273\u027e"+
		"\7\u014c\2\2\u0274\u027e\7\u00bc\2\2\u0275\u027e\7\u00bd\2\2\u0276\u027e"+
		"\7\u00e4\2\2\u0277\u027e\7\u00e5\2\2\u0278\u027e\7\u0119\2\2\u0279\u027e"+
		"\7\u011a\2\2\u027a\u027b\7\n\2\2\u027b\u027c\7\u01b1\2\2\u027c\u027e\7"+
		"\u01ac\2\2\u027d\u0271\3\2\2\2\u027d\u0272\3\2\2\2\u027d\u0273\3\2\2\2"+
		"\u027d\u0274\3\2\2\2\u027d\u0275\3\2\2\2\u027d\u0276\3\2\2\2\u027d\u0277"+
		"\3\2\2\2\u027d\u0278\3\2\2\2\u027d\u0279\3\2\2\2\u027d\u027a\3\2\2\2\u027e"+
		"\5\3\2\2\2\u027f\u0286\7\u01b1\2\2\u0280\u0286\7\u01b2\2\2\u0281\u0286"+
		"\7\u01b0\2\2\u0282\u0286\7\u019b\2\2\u0283\u0286\7\u019c\2\2\u0284\u0286"+
		"\5\n\6\2\u0285\u027f\3\2\2\2\u0285\u0280\3\2\2\2\u0285\u0281\3\2\2\2\u0285"+
		"\u0282\3\2\2\2\u0285\u0283\3\2\2\2\u0285\u0284\3\2\2\2\u0286\7\3\2\2\2"+
		"\u0287\u028c\7\u01b1\2\2\u0288\u028c\7\u01b2\2\2\u0289\u028c\7\u01b0\2"+
		"\2\u028a\u028c\5\n\6\2\u028b\u0287\3\2\2\2\u028b\u0288\3\2\2\2\u028b\u0289"+
		"\3\2\2\2\u028b\u028a\3\2\2\2\u028c\t\3\2\2\2\u028d\u0291\7\u0193\2\2\u028e"+
		"\u0290\n\2\2\2\u028f\u028e\3\2\2\2\u0290\u0293\3\2\2\2\u0291\u028f\3\2"+
		"\2\2\u0291\u0292\3\2\2\2\u0292\u0294\3\2\2\2\u0293\u0291\3\2\2\2\u0294"+
		"\u029e\7\u01b2\2\2\u0295\u0299\7\u0194\2\2\u0296\u0298\n\2\2\2\u0297\u0296"+
		"\3\2\2\2\u0298\u029b\3\2\2\2\u0299\u0297\3\2\2\2\u0299\u029a\3\2\2\2\u029a"+
		"\u029c\3\2\2\2\u029b\u0299\3\2\2\2\u029c\u029e\7\u01b2\2\2\u029d\u028d"+
		"\3\2\2\2\u029d\u0295\3\2\2\2\u029e\13\3\2\2\2\u029f\u02a1\5\u0170\u00b9"+
		"\2\u02a0\u02a2\5\u018e\u00c8\2\u02a1\u02a0\3\2\2\2\u02a1\u02a2\3\2\2\2"+
		"\u02a2\u02a4\3\2\2\2\u02a3\u02a5\5\u00bc_\2\u02a4\u02a3\3\2\2\2\u02a4"+
		"\u02a5\3\2\2\2\u02a5\u02a7\3\2\2\2\u02a6\u02a8\5\16\b\2\u02a7\u02a6\3"+
		"\2\2\2\u02a7\u02a8\3\2\2\2\u02a8\r\3\2\2\2\u02a9\u02ab\5\22\n\2\u02aa"+
		"\u02ac\5\26\f\2\u02ab\u02aa\3\2\2\2\u02ab\u02ac\3\2\2\2\u02ac\u02c5\3"+
		"\2\2\2\u02ad\u02b1\5\24\13\2\u02ae\u02b0\5\6\4\2\u02af\u02ae\3\2\2\2\u02b0"+
		"\u02b3\3\2\2\2\u02b1\u02af\3\2\2\2\u02b1\u02b2\3\2\2\2\u02b2\u02b5\3\2"+
		"\2\2\u02b3\u02b1\3\2\2\2\u02b4\u02ad\3\2\2\2\u02b5\u02b8\3\2\2\2\u02b6"+
		"\u02b4\3\2\2\2\u02b6\u02b7\3\2\2\2\u02b7\u02c6\3\2\2\2\u02b8\u02b6\3\2"+
		"\2\2\u02b9\u02bd\5\34\17\2\u02ba\u02bc\5\6\4\2\u02bb\u02ba\3\2\2\2\u02bc"+
		"\u02bf\3\2\2\2\u02bd\u02bb\3\2\2\2\u02bd\u02be\3\2\2\2\u02be\u02c1\3\2"+
		"\2\2\u02bf\u02bd\3\2\2\2\u02c0\u02b9\3\2\2\2\u02c1\u02c4\3\2\2\2\u02c2"+
		"\u02c0\3\2\2\2\u02c2\u02c3\3\2\2\2\u02c3\u02c6\3\2\2\2\u02c4\u02c2\3\2"+
		"\2\2\u02c5\u02b6\3\2\2\2\u02c5\u02c2\3\2\2\2\u02c6\u02ce\3\2\2\2\u02c7"+
		"\u02c9\5\6\4\2\u02c8\u02c7\3\2\2\2\u02c9\u02cc\3\2\2\2\u02ca\u02c8\3\2"+
		"\2\2\u02ca\u02cb\3\2\2\2\u02cb\u02cd\3\2\2\2\u02cc\u02ca\3\2\2\2\u02cd"+
		"\u02cf\5\20\t\2\u02ce\u02ca\3\2\2\2\u02ce\u02cf\3\2\2\2\u02cf\u02df\3"+
		"\2\2\2\u02d0\u02d2\5\6\4\2\u02d1\u02d0\3\2\2\2\u02d2\u02d5\3\2\2\2\u02d3"+
		"\u02d1\3\2\2\2\u02d3\u02d4\3\2\2\2\u02d4\u02d6\3\2\2\2\u02d5\u02d3\3\2"+
		"\2\2\u02d6\u02da\5\60\31\2\u02d7\u02d9\5\6\4\2\u02d8\u02d7\3\2\2\2\u02d9"+
		"\u02dc\3\2\2\2\u02da\u02d8\3\2\2\2\u02da\u02db\3\2\2\2\u02db\u02de\3\2"+
		"\2\2\u02dc\u02da\3\2\2\2\u02dd\u02d3\3\2\2\2\u02de\u02e1\3\2\2\2\u02df"+
		"\u02dd\3\2\2\2\u02df\u02e0\3\2\2\2\u02e0\17\3\2\2\2\u02e1\u02df\3\2\2"+
		"\2\u02e2\u02e4\7\4\2\2\u02e3\u02e5\5\6\4\2\u02e4\u02e3\3\2\2\2\u02e5\u02e6"+
		"\3\2\2\2\u02e6\u02e4\3\2\2\2\u02e6\u02e7\3\2\2\2\u02e7\u02e8\3\2\2\2\u02e8"+
		"\u02f0\7\u0116\2\2\u02e9\u02eb\5\6\4\2\u02ea\u02e9\3\2\2\2\u02eb\u02ec"+
		"\3\2\2\2\u02ec\u02ea\3\2\2\2\u02ec\u02ed\3\2\2\2\u02ed\u02ee\3\2\2\2\u02ee"+
		"\u02ef\5\u0176\u00bc\2\u02ef\u02f1\3\2\2\2\u02f0\u02ea\3\2\2\2\u02f0\u02f1"+
		"\3\2\2\2\u02f1\u02f5\3\2\2\2\u02f2\u02f4\5\6\4\2\u02f3\u02f2\3\2\2\2\u02f4"+
		"\u02f7\3\2\2\2\u02f5\u02f3\3\2\2\2\u02f5\u02f6\3\2\2\2\u02f6\u02f8\3\2"+
		"\2\2\u02f7\u02f5\3\2\2\2\u02f8\u02fc\7\u01a9\2\2\u02f9\u02fb\5\6\4\2\u02fa"+
		"\u02f9\3\2\2\2\u02fb\u02fe\3\2\2\2\u02fc\u02fa\3\2\2\2\u02fc\u02fd\3\2"+
		"\2\2\u02fd\21\3\2\2\2\u02fe\u02fc\3\2\2\2\u02ff\u0301\7\u0115\2\2\u0300"+
		"\u0302\5\6\4\2\u0301\u0300\3\2\2\2\u0302\u0303\3\2\2\2\u0303\u0301\3\2"+
		"\2\2\u0303\u0304\3\2\2\2\u0304\u0305\3\2\2\2\u0305\u030d\7u\2\2\u0306"+
		"\u0308\5\6\4\2\u0307\u0306\3\2\2\2\u0308\u0309\3\2\2\2\u0309\u0307\3\2"+
		"\2\2\u0309\u030a\3\2\2\2\u030a\u030b\3\2\2\2\u030b\u030c\5,\27\2\u030c"+
		"\u030e\3\2\2\2\u030d\u0307\3\2\2\2\u030d\u030e\3\2\2\2\u030e\u0316\3\2"+
		"\2\2\u030f\u0311\5\6\4\2\u0310\u030f\3\2\2\2\u0311\u0312\3\2\2\2\u0312"+
		"\u0310\3\2\2\2\u0312\u0313\3\2\2\2\u0313\u0314\3\2\2\2\u0314\u0315\5."+
		"\30\2\u0315\u0317\3\2\2\2\u0316\u0310\3\2\2\2\u0316\u0317\3\2\2\2\u0317"+
		"\u031b\3\2\2\2\u0318\u031a\5\6\4\2\u0319\u0318\3\2\2\2\u031a\u031d\3\2"+
		"\2\2\u031b\u0319\3\2\2\2\u031b\u031c\3\2\2\2\u031c\u031e\3\2\2\2\u031d"+
		"\u031b\3\2\2\2\u031e\u0322\7\u01a9\2\2\u031f\u0321\5\6\4\2\u0320\u031f"+
		"\3\2\2\2\u0321\u0324\3\2\2\2\u0322\u0320\3\2\2\2\u0322\u0323\3\2\2\2\u0323"+
		"\23\3\2\2\2\u0324\u0322\3\2\2\2\u0325\u0326\5&\24\2\u0326\25\3\2\2\2\u0327"+
		"\u032b\7\3\2\2\u0328\u032a\5\6\4\2\u0329\u0328\3\2\2\2\u032a\u032d\3\2"+
		"\2\2\u032b\u0329\3\2\2\2\u032b\u032c\3\2\2\2\u032c\u032e\3\2\2\2\u032d"+
		"\u032b\3\2\2\2\u032e\u0332\7\u01a9\2\2\u032f\u0331\5\6\4\2\u0330\u032f"+
		"\3\2\2\2\u0331\u0334\3\2\2\2\u0332\u0330\3\2\2\2\u0332\u0333\3\2\2\2\u0333"+
		"\u033c\3\2\2\2\u0334\u0332\3\2\2\2\u0335\u0339\5\30\r\2\u0336\u0338\5"+
		"\6\4\2\u0337\u0336\3\2\2\2\u0338\u033b\3\2\2\2\u0339\u0337\3\2\2\2\u0339"+
		"\u033a\3\2\2\2\u033a\u033d\3\2\2\2\u033b\u0339\3\2\2\2\u033c\u0335\3\2"+
		"\2\2\u033d\u033e\3\2\2\2\u033e\u033c\3\2\2\2\u033e\u033f\3\2\2\2\u033f"+
		"\u0340\3\2\2\2\u0340\u0342\7\4\2";
	private static final String _serializedATNSegment1 =
		"\2\u0341\u0343\5\6\4\2\u0342\u0341\3\2\2\2\u0343\u0344\3\2\2\2\u0344\u0342"+
		"\3\2\2\2\u0344\u0345\3\2\2\2\u0345\u0346\3\2\2\2\u0346\u034a\7j\2\2\u0347"+
		"\u0349\5\6\4\2\u0348\u0347\3\2\2\2\u0349\u034c\3\2\2\2\u034a\u0348\3\2"+
		"\2\2\u034a\u034b\3\2\2\2\u034b\u034d\3\2\2\2\u034c\u034a\3\2\2\2\u034d"+
		"\u0351\7\u01a9\2\2\u034e\u0350\5\6\4\2\u034f\u034e\3\2\2\2\u0350\u0353"+
		"\3\2\2\2\u0351\u034f\3\2\2\2\u0351\u0352\3\2\2\2\u0352\27\3\2\2\2\u0353"+
		"\u0351\3\2\2\2\u0354\u0355\5&\24\2\u0355\u035f\5 \21\2\u0356\u0358\5\6"+
		"\4\2\u0357\u0356\3\2\2\2\u0358\u0359\3\2\2\2\u0359\u0357\3\2\2\2\u0359"+
		"\u035a\3\2\2\2\u035a\u035b\3\2\2\2\u035b\u035c\5\32\16\2\u035c\u035e\3"+
		"\2\2\2\u035d\u0357\3\2\2\2\u035e\u0361\3\2\2\2\u035f\u035d\3\2\2\2\u035f"+
		"\u0360\3\2\2\2\u0360\31\3\2\2\2\u0361\u035f\3\2\2\2\u0362\u0363\5\34\17"+
		"\2\u0363\33\3\2\2\2\u0364\u0368\5(\25\2\u0365\u0367\5\6\4\2\u0366\u0365"+
		"\3\2\2\2\u0367\u036a\3\2\2\2\u0368\u0366\3\2\2\2\u0368\u0369\3\2\2\2\u0369"+
		"\u036b\3\2\2\2\u036a\u0368\3\2\2\2\u036b\u036f\7\u01a9\2\2\u036c\u036e"+
		"\5\6\4\2\u036d\u036c\3\2\2\2\u036e\u0371\3\2\2\2\u036f\u036d\3\2\2\2\u036f"+
		"\u0370\3\2\2\2\u0370\u037b\3\2\2\2\u0371\u036f\3\2\2\2\u0372\u0376\5\36"+
		"\20\2\u0373\u0375\5\6\4\2\u0374\u0373\3\2\2\2\u0375\u0378\3\2\2\2\u0376"+
		"\u0374\3\2\2\2\u0376\u0377\3\2\2\2\u0377\u037a\3\2\2\2\u0378\u0376\3\2"+
		"\2\2\u0379\u0372\3\2\2\2\u037a\u037d\3\2\2\2\u037b\u0379\3\2\2\2\u037b"+
		"\u037c\3\2\2\2\u037c\35\3\2\2\2\u037d\u037b\3\2\2\2\u037e\u0382\5\62\32"+
		"\2\u037f\u0381\5\6\4\2\u0380\u037f\3\2\2\2\u0381\u0384\3\2\2\2\u0382\u0380"+
		"\3\2\2\2\u0382\u0383\3\2\2\2\u0383\u0386\3\2\2\2\u0384\u0382\3\2\2\2\u0385"+
		"\u037e\3\2\2\2\u0386\u0387\3\2\2\2\u0387\u0385\3\2\2\2\u0387\u0388\3\2"+
		"\2\2\u0388\u0396\3\2\2\2\u0389\u038b\5\6\4\2\u038a\u0389\3\2\2\2\u038b"+
		"\u038e\3\2\2\2\u038c\u038a\3\2\2\2\u038c\u038d\3\2\2\2\u038d\u038f\3\2"+
		"\2\2\u038e\u038c\3\2\2\2\u038f\u0393\7\u01a9\2\2\u0390\u0392\5\6\4\2\u0391"+
		"\u0390\3\2\2\2\u0392\u0395\3\2\2\2\u0393\u0391\3\2\2\2\u0393\u0394\3\2"+
		"\2\2\u0394\u0397\3\2\2\2\u0395\u0393\3\2\2\2\u0396\u038c\3\2\2\2\u0396"+
		"\u0397\3\2\2\2\u0397\37\3\2\2\2\u0398\u03a0\7\u0177\2\2\u0399\u039b\5"+
		"\6\4\2\u039a\u0399\3\2\2\2\u039b\u039c\3\2\2\2\u039c\u039a\3\2\2\2\u039c"+
		"\u039d\3\2\2\2\u039d\u039e\3\2\2\2\u039e\u039f\7\u00b6\2\2\u039f\u03a1"+
		"\3\2\2\2\u03a0\u039a\3\2\2\2\u03a0\u03a1\3\2\2\2\u03a1\u03a3\3\2\2\2\u03a2"+
		"\u03a4\5\6\4\2\u03a3\u03a2\3\2\2\2\u03a4\u03a5\3\2\2\2\u03a5\u03a3\3\2"+
		"\2\2\u03a5\u03a6\3\2\2\2\u03a6\u03e7\3\2\2\2\u03a7\u03af\7\t\2\2\u03a8"+
		"\u03aa\5\6\4\2\u03a9\u03a8\3\2\2\2\u03aa\u03ab\3\2\2\2\u03ab\u03a9\3\2"+
		"\2\2\u03ab\u03ac\3\2\2\2\u03ac\u03ad\3\2\2\2\u03ad\u03ae\7\u014e\2\2\u03ae"+
		"\u03b0\3\2\2\2\u03af\u03a9\3\2\2\2\u03af\u03b0\3\2\2\2\u03b0\u03b2\3\2"+
		"\2\2\u03b1\u03b3\5\6\4\2\u03b2\u03b1\3\2\2\2\u03b3\u03b4\3\2\2\2\u03b4"+
		"\u03b2\3\2\2\2\u03b4\u03b5\3\2\2\2\u03b5\u03b6\3\2\2\2\u03b6\u03b8\t\3"+
		"\2\2\u03b7\u03b9\5\6\4\2\u03b8\u03b7\3\2\2\2\u03b9\u03ba\3\2\2\2\u03ba"+
		"\u03b8\3\2\2\2\u03ba\u03bb\3\2\2\2\u03bb\u03bc\3\2\2\2\u03bc\u03c4\7\u0115"+
		"\2\2\u03bd\u03bf\5\6\4\2\u03be\u03bd\3\2\2\2\u03bf\u03c0\3\2\2\2\u03c0"+
		"\u03be\3\2\2\2\u03c0\u03c1\3\2\2\2\u03c1\u03c2\3\2\2\2\u03c2\u03c3\7\u00fb"+
		"\2\2\u03c3\u03c5\3\2\2\2\u03c4\u03be\3\2\2\2\u03c4\u03c5\3\2\2\2\u03c5"+
		"\u03c7\3\2\2\2\u03c6\u03c8\5\6\4\2\u03c7\u03c6\3\2\2\2\u03c8\u03c9\3\2"+
		"\2\2\u03c9\u03c7\3\2\2\2\u03c9\u03ca\3\2\2\2\u03ca\u03cb\3\2\2\2\u03cb"+
		"\u03cf\5$\23\2\u03cc\u03ce\5\6\4\2\u03cd\u03cc\3\2\2\2\u03ce\u03d1\3\2"+
		"\2\2\u03cf\u03cd\3\2\2\2\u03cf\u03d0\3\2\2\2\u03d0\u03d2\3\2\2\2\u03d1"+
		"\u03cf\3\2\2\2\u03d2\u03d6\7\u01a9\2\2\u03d3\u03d5\5\6\4\2\u03d4\u03d3"+
		"\3\2\2\2\u03d5\u03d8\3\2\2\2\u03d6\u03d4\3\2\2\2\u03d6\u03d7\3\2\2\2\u03d7"+
		"\u03e8\3\2\2\2\u03d8\u03d6\3\2\2\2\u03d9\u03db\7$\2\2\u03da\u03dc\5\6"+
		"\4\2\u03db\u03da\3\2\2\2\u03dc\u03dd\3\2\2\2\u03dd\u03db\3\2\2\2\u03dd"+
		"\u03de\3\2\2\2\u03de\u03df\3\2\2\2\u03df\u03e1\7\u0129\2\2\u03e0\u03e2"+
		"\5\6\4\2\u03e1\u03e0\3\2\2\2\u03e2\u03e3\3\2\2\2\u03e3\u03e1\3\2\2\2\u03e3"+
		"\u03e4\3\2\2\2\u03e4\u03e5\3\2\2\2\u03e5\u03e6\5\"\22\2\u03e6\u03e8\3"+
		"\2\2\2\u03e7\u03a7\3\2\2\2\u03e7\u03d9\3\2\2\2\u03e8\u03ec\3\2\2\2\u03e9"+
		"\u03eb\5\6\4\2\u03ea\u03e9\3\2\2\2\u03eb\u03ee\3\2\2\2\u03ec\u03ea\3\2"+
		"\2\2\u03ec\u03ed\3\2\2\2\u03ed\u03ef\3\2\2\2\u03ee\u03ec\3\2\2\2\u03ef"+
		"\u03f3\7\u01a9\2\2\u03f0\u03f2\5\6\4\2\u03f1\u03f0\3\2\2\2\u03f2\u03f5"+
		"\3\2\2\2\u03f3\u03f1\3\2\2\2\u03f3\u03f4\3\2\2\2\u03f4!\3\2\2\2\u03f5"+
		"\u03f3\3\2\2\2\u03f6\u03f7\5\u01ae\u00d8\2\u03f7#\3\2\2\2\u03f8\u0402"+
		"\5\u0218\u010d\2\u03f9\u03fb\5\6\4\2\u03fa\u03f9\3\2\2\2\u03fb\u03fc\3"+
		"\2\2\2\u03fc\u03fa\3\2\2\2\u03fc\u03fd\3\2\2\2\u03fd\u03fe\3\2\2\2\u03fe"+
		"\u03ff\5\u0218\u010d\2\u03ff\u0401\3\2\2\2\u0400\u03fa\3\2\2\2\u0401\u0404"+
		"\3\2\2\2\u0402\u0400\3\2\2\2\u0402\u0403\3\2\2\2\u0403\u040a\3\2\2\2\u0404"+
		"\u0402\3\2\2\2\u0405\u040a\7\u00ca\2\2\u0406\u040a\7\u0101\2\2\u0407\u040a"+
		"\7\u00d0\2\2\u0408\u040a\7\u009f\2\2\u0409\u03f8\3\2\2\2\u0409\u0405\3"+
		"\2\2\2\u0409\u0406\3\2\2\2\u0409\u0407\3\2\2\2\u0409\u0408\3\2\2\2\u040a"+
		"%\3\2\2\2\u040b\u040d\5*\26\2\u040c\u040e\5\6\4\2\u040d\u040c\3\2\2\2"+
		"\u040e\u040f\3\2\2\2\u040f\u040d\3\2\2\2\u040f\u0410\3\2\2\2\u0410\u0411"+
		"\3\2\2\2\u0411\u0419\7\u013b\2\2\u0412\u0414\5\6\4\2\u0413\u0412\3\2\2"+
		"\2\u0414\u0415\3\2\2\2\u0415\u0413\3\2\2\2\u0415\u0416\3\2\2\2\u0416\u0417"+
		"\3\2\2\2\u0417\u0418\5\u01a8\u00d5\2\u0418\u041a\3\2\2\2\u0419\u0413\3"+
		"\2\2\2\u0419\u041a\3\2\2\2\u041a\u041e\3\2\2\2\u041b\u041d\5\6\4\2\u041c"+
		"\u041b\3\2\2\2\u041d\u0420\3\2\2\2\u041e\u041c\3\2\2\2\u041e\u041f\3\2"+
		"\2\2\u041f\u0421\3\2\2\2\u0420\u041e\3\2\2\2\u0421\u0425\7\u01a9\2\2\u0422"+
		"\u0424\5\6\4\2\u0423\u0422\3\2\2\2\u0424\u0427\3\2\2\2\u0425\u0423\3\2"+
		"\2\2\u0425\u0426\3\2\2\2\u0426\'\3\2\2\2\u0427\u0425\3\2\2\2\u0428\u0429"+
		"\7\u01af\2\2\u0429)\3\2\2\2\u042a\u042b\7\u01af\2\2\u042b+\3\2\2\2\u042c"+
		"\u042e\7\u0178\2\2\u042d\u042f\5\6\4\2\u042e\u042d\3\2\2\2\u042f\u0430"+
		"\3\2\2\2\u0430\u042e\3\2\2\2\u0430\u0431\3\2\2\2\u0431\u0432\3\2\2\2\u0432"+
		"\u043c\5\u01ae\u00d8\2\u0433\u0435\5\6\4\2\u0434\u0433\3\2\2\2\u0435\u0436"+
		"\3\2\2\2\u0436\u0434\3\2\2\2\u0436\u0437\3\2\2\2\u0437\u0438\3\2\2\2\u0438"+
		"\u0439\5\u01ae\u00d8\2\u0439\u043b\3\2\2\2\u043a\u0434\3\2\2\2\u043b\u043e"+
		"\3\2\2\2\u043c\u043a\3\2\2\2\u043c\u043d\3\2\2\2\u043d-\3\2\2\2\u043e"+
		"\u043c\3\2\2\2\u043f\u0441\7\u00b5\2\2\u0440\u0442\5\6\4\2\u0441\u0440"+
		"\3\2\2\2\u0442\u0443\3\2\2\2\u0443\u0441\3\2\2\2\u0443\u0444\3\2\2\2\u0444"+
		"\u0445\3\2\2\2\u0445\u0446\5\u01ae\u00d8\2\u0446/\3\2\2\2\u0447\u044b"+
		"\5\u023e\u0120\2\u0448\u044a\5\6\4\2\u0449\u0448\3\2\2\2\u044a\u044d\3"+
		"\2\2\2\u044b\u0449\3\2\2\2\u044b\u044c\3\2\2\2\u044c\u044e\3\2\2\2\u044d"+
		"\u044b\3\2\2\2\u044e\u044f\7\u01a9\2\2\u044f\u045b\3\2\2\2\u0450\u0454"+
		"\5\u0246\u0124\2\u0451\u0453\5\6\4\2\u0452\u0451\3\2\2\2\u0453\u0456\3"+
		"\2\2\2\u0454\u0452\3\2\2\2\u0454\u0455\3\2\2\2\u0455\u0457\3\2\2\2\u0456"+
		"\u0454\3\2\2\2\u0457\u0458\7\u01a9\2\2\u0458\u045b\3\2\2\2\u0459\u045b"+
		"\5\6\4\2\u045a\u0447\3\2\2\2\u045a\u0450\3\2\2\2\u045a\u0459\3\2\2\2\u045b"+
		"\61\3\2\2\2\u045c\u0468\5\u0080A\2\u045d\u0468\5z>\2\u045e\u0468\5t;\2"+
		"\u045f\u0468\5f\64\2\u0460\u0468\5d\63\2\u0461\u0468\5`\61\2\u0462\u0468"+
		"\5^\60\2\u0463\u0468\5\\/\2\u0464\u0468\5Z.\2\u0465\u0468\5> \2\u0466"+
		"\u0468\5\64\33\2\u0467\u045c\3\2\2\2\u0467\u045d\3\2\2\2\u0467\u045e\3"+
		"\2\2\2\u0467\u045f\3\2\2\2\u0467\u0460\3\2\2\2\u0467\u0461\3\2\2\2\u0467"+
		"\u0462\3\2\2\2\u0467\u0463\3\2\2\2\u0467\u0464\3\2\2\2\u0467\u0465\3\2"+
		"\2\2\u0467\u0466\3\2\2\2\u0468\63\3\2\2\2\u0469\u046c\5\66\34\2\u046a"+
		"\u046c\58\35\2\u046b\u0469\3\2\2\2\u046b\u046a\3\2\2\2\u046c\65\3\2\2"+
		"\2\u046d\u046f\7t\2\2\u046e\u0470\5\6\4\2\u046f\u046e\3\2\2\2\u0470\u0471"+
		"\3\2\2\2\u0471\u046f\3\2\2\2\u0471\u0472\3\2\2\2\u0472\u0473\3\2\2\2\u0473"+
		"\u0475\5<\37\2\u0474\u0476\5\6\4\2\u0475\u0474\3\2\2\2\u0476\u0477\3\2"+
		"\2\2\u0477\u0475\3\2\2\2\u0477\u0478\3\2\2\2\u0478\u0479\3\2\2\2\u0479"+
		"\u0487\t\4\2\2\u047a\u047c\5\6\4\2\u047b\u047a\3\2\2\2\u047c\u047d\3\2"+
		"\2\2\u047d\u047b\3\2\2\2\u047d\u047e\3\2\2\2\u047e\u047f\3\2\2\2\u047f"+
		"\u0481\5<\37\2\u0480\u0482\5\6\4\2\u0481\u0480\3\2\2\2\u0482\u0483\3\2"+
		"\2\2\u0483\u0481\3\2\2\2\u0483\u0484\3\2\2\2\u0484\u0485\3\2\2\2\u0485"+
		"\u0486\7\u00b5\2\2\u0486\u0488\3\2\2\2\u0487\u047b\3\2\2\2\u0487\u0488"+
		"\3\2\2\2\u0488\u0498\3\2\2\2\u0489\u048b\5\6\4\2\u048a\u0489\3\2\2\2\u048b"+
		"\u048c\3\2\2\2\u048c\u048a\3\2\2\2\u048c\u048d\3\2\2\2\u048d\u048e\3\2"+
		"\2\2\u048e\u0496\5\u0258\u012d\2\u048f\u0491\5\6\4\2\u0490\u048f\3\2\2"+
		"\2\u0491\u0492\3\2\2\2\u0492\u0490\3\2\2\2\u0492\u0493\3\2\2\2\u0493\u0494"+
		"\3\2\2\2\u0494\u0495\7\u0188\2\2\u0495\u0497\3\2\2\2\u0496\u0490\3\2\2"+
		"\2\u0496\u0497\3\2\2\2\u0497\u0499\3\2\2\2\u0498\u048a\3\2\2\2\u0499\u049a"+
		"\3\2\2\2\u049a\u0498\3\2\2\2\u049a\u049b\3\2\2\2\u049b\u04a3\3\2\2\2\u049c"+
		"\u049e\5\6\4\2\u049d\u049c\3\2\2\2\u049e\u049f\3\2\2\2\u049f\u049d\3\2"+
		"\2\2\u049f\u04a0\3\2\2\2\u04a0\u04a1\3\2\2\2\u04a1\u04a2\5\u0086D\2\u04a2"+
		"\u04a4\3\2\2\2\u04a3\u049d\3\2\2\2\u04a3\u04a4\3\2\2\2\u04a4\u04ac\3\2"+
		"\2\2\u04a5\u04a7\5\6\4\2\u04a6\u04a5\3\2\2\2\u04a7\u04a8\3\2\2\2\u04a8"+
		"\u04a6\3\2\2\2\u04a8\u04a9\3\2\2\2\u04a9\u04aa\3\2\2\2\u04aa\u04ab\7\u0082"+
		"\2\2\u04ab\u04ad\3\2\2\2\u04ac\u04a6\3\2\2\2\u04ac\u04ad\3\2\2\2\u04ad"+
		"\67\3\2\2\2\u04ae\u04b0\7t\2\2\u04af\u04b1\5\6\4\2\u04b0\u04af\3\2\2\2"+
		"\u04b1\u04b2\3\2\2\2\u04b2\u04b0\3\2\2\2\u04b2\u04b3\3\2\2\2\u04b3\u04b4"+
		"\3\2\2\2\u04b4\u04b6\5<\37\2\u04b5\u04b7\5\6\4\2\u04b6\u04b5\3\2\2\2\u04b7"+
		"\u04b8\3\2\2\2\u04b8\u04b6\3\2\2\2\u04b8\u04b9\3\2\2\2\u04b9\u04ba\3\2"+
		"\2\2\u04ba\u04c8\t\4\2\2\u04bb\u04bd\5\6\4\2\u04bc\u04bb\3\2\2\2\u04bd"+
		"\u04be\3\2\2\2\u04be\u04bc\3\2\2\2\u04be\u04bf\3\2\2\2\u04bf\u04c0\3\2"+
		"\2\2\u04c0\u04c2\5<\37\2\u04c1\u04c3\5\6\4\2\u04c2\u04c1\3\2\2\2\u04c3"+
		"\u04c4\3\2\2\2\u04c4\u04c2\3\2\2\2\u04c4\u04c5\3\2\2\2\u04c5\u04c6\3\2"+
		"\2\2\u04c6\u04c7\7\u00b5\2\2\u04c7\u04c9\3\2\2\2\u04c8\u04bc\3\2\2\2\u04c8"+
		"\u04c9\3\2\2\2\u04c9\u04cb\3\2\2\2\u04ca\u04cc\5\6\4\2\u04cb\u04ca\3\2"+
		"\2\2\u04cc\u04cd\3\2\2\2\u04cd\u04cb\3\2\2\2\u04cd\u04ce\3\2\2\2\u04ce"+
		"\u04cf\3\2\2\2\u04cf\u04d7\5\u0258\u012d\2\u04d0\u04d2\5\6\4\2\u04d1\u04d0"+
		"\3\2\2\2\u04d2\u04d3\3\2\2\2\u04d3\u04d1\3\2\2\2\u04d3\u04d4\3\2\2\2\u04d4"+
		"\u04d5\3\2\2\2\u04d5\u04d6\7\u0188\2\2\u04d6\u04d8\3\2\2\2\u04d7\u04d1"+
		"\3\2\2\2\u04d7\u04d8\3\2\2\2\u04d8\u04da\3\2\2\2\u04d9\u04db\5\6\4\2\u04da"+
		"\u04d9\3\2\2\2\u04db\u04dc\3\2\2\2\u04dc\u04da\3\2\2\2\u04dc\u04dd\3\2"+
		"\2\2\u04dd\u04de\3\2\2\2\u04de\u04e0\7\u0192\2\2\u04df\u04e1\5\6\4\2\u04e0"+
		"\u04df\3\2\2\2\u04e1\u04e2\3\2\2\2\u04e2\u04e0\3\2\2\2\u04e2\u04e3\3\2"+
		"\2\2\u04e3\u04e4\3\2\2\2\u04e4\u04ec\5:\36\2\u04e5\u04e7\5\6\4\2\u04e6"+
		"\u04e5\3\2\2\2\u04e7\u04e8\3\2\2\2\u04e8\u04e6\3\2\2\2\u04e8\u04e9\3\2"+
		"\2\2\u04e9\u04ea\3\2\2\2\u04ea\u04eb\5\u0086D\2\u04eb\u04ed\3\2\2\2\u04ec"+
		"\u04e6\3\2\2\2\u04ec\u04ed\3\2\2\2\u04ed\u04f5\3\2\2\2\u04ee\u04f0\5\6"+
		"\4\2\u04ef\u04ee\3\2\2\2\u04f0\u04f1\3\2\2\2\u04f1\u04ef\3\2\2\2\u04f1"+
		"\u04f2\3\2\2\2\u04f2\u04f3\3\2\2\2\u04f3\u04f4\7\u0082\2\2\u04f4\u04f6"+
		"\3\2\2\2\u04f5\u04ef\3\2\2\2\u04f5\u04f6\3\2\2\2\u04f69\3\2\2\2\u04f7"+
		"\u04f8\5\u0258\u012d\2\u04f8;\3\2\2\2\u04f9\u04fc\5\u025a\u012e\2\u04fa"+
		"\u04fc\7\u01ad\2\2\u04fb\u04f9\3\2\2\2\u04fb\u04fa\3\2\2\2\u04fc=\3\2"+
		"\2\2\u04fd\u0502\5@!\2\u04fe\u0502\5B\"\2\u04ff\u0502\5D#\2\u0500\u0502"+
		"\5F$\2\u0501\u04fd\3\2\2\2\u0501\u04fe\3\2\2\2\u0501\u04ff\3\2\2\2\u0501"+
		"\u0500\3\2\2\2\u0502?\3\2\2\2\u0503\u0516\7s\2\2\u0504\u0506\5\6\4\2\u0505"+
		"\u0504\3\2\2\2\u0506\u0507\3\2\2\2\u0507\u0505\3\2\2\2\u0507\u0508\3\2"+
		"\2\2\u0508\u0509\3\2\2\2\u0509\u0513\5H%\2\u050a\u050c\5\6\4\2\u050b\u050a"+
		"\3\2\2\2\u050c\u050d\3\2\2\2\u050d\u050b\3\2\2\2\u050d\u050e\3\2\2\2\u050e"+
		"\u050f\3\2\2\2\u050f\u0510\5P)\2\u0510\u0512\3\2\2\2\u0511\u050b\3\2\2"+
		"\2\u0512\u0515\3\2\2\2\u0513\u0511\3\2\2\2\u0513\u0514\3\2\2\2\u0514\u0517"+
		"\3\2\2\2\u0515\u0513\3\2\2\2\u0516\u0505\3\2\2\2\u0517\u0518\3\2\2\2\u0518"+
		"\u0516\3\2\2\2\u0518\u0519\3\2\2\2\u0519\u0521\3\2\2\2\u051a\u051c\5\6"+
		"\4\2\u051b\u051a\3\2\2\2\u051c\u051d\3\2\2\2\u051d\u051b\3\2\2\2\u051d"+
		"\u051e\3\2\2\2\u051e\u051f\3\2\2\2\u051f\u0520\7\u0083\2\2\u0520\u0522"+
		"\3\2\2\2\u0521\u051b\3\2\2\2\u0521\u0522\3\2\2\2\u0522A\3\2\2\2\u0523"+
		"\u0536\7s\2\2\u0524\u0526\5\6\4\2\u0525\u0524\3\2\2\2\u0526\u0527\3\2"+
		"\2\2\u0527\u0525\3\2\2\2\u0527\u0528\3\2\2\2\u0528\u0529\3\2\2\2\u0529"+
		"\u0533\5H%\2\u052a\u052c\5\6\4\2\u052b\u052a\3\2\2\2\u052c\u052d\3\2\2"+
		"\2\u052d\u052b\3\2\2\2\u052d\u052e\3\2\2\2\u052e\u052f\3\2\2\2\u052f\u0530"+
		"\5R*\2\u0530\u0532\3\2\2\2\u0531\u052b\3\2\2\2\u0532\u0535\3\2\2\2\u0533"+
		"\u0531\3\2\2\2\u0533\u0534\3\2\2\2\u0534\u0537\3\2\2\2\u0535\u0533\3\2"+
		"\2\2\u0536\u0525\3\2\2\2\u0537\u0538\3\2\2\2\u0538\u0536\3\2\2\2\u0538"+
		"\u0539\3\2\2\2\u0539\u0541\3\2\2\2\u053a\u053c\5\6\4\2\u053b\u053a\3\2"+
		"\2\2\u053c\u053d\3\2\2\2\u053d\u053b\3\2\2\2\u053d\u053e\3\2\2\2\u053e"+
		"\u053f\3\2\2\2\u053f\u0540\7\u0083\2\2\u0540\u0542\3\2\2\2\u0541\u053b"+
		"\3\2\2\2\u0541\u0542\3\2\2\2\u0542C\3\2\2\2\u0543\u0545\7s\2\2\u0544\u0546"+
		"\5\6\4\2\u0545\u0544\3\2\2\2\u0546\u0547\3\2\2\2\u0547\u0545\3\2\2\2\u0547"+
		"\u0548\3\2\2\2\u0548\u0549\3\2\2\2\u0549\u0564\5\u01ae\u00d8\2\u054a\u054c"+
		"\5\6\4\2\u054b\u054a\3\2\2\2\u054c\u054d\3\2\2\2\u054d\u054b\3\2\2\2\u054d"+
		"\u054e\3\2\2\2\u054e\u0555\3\2\2\2\u054f\u0551\7\36\2\2\u0550\u0552\5"+
		"\6\4\2\u0551\u0550\3\2\2\2\u0552\u0553\3\2\2\2\u0553\u0551\3\2\2\2\u0553"+
		"\u0554\3\2\2\2\u0554\u0556\3\2\2\2\u0555\u054f\3\2\2\2\u0555\u0556\3\2"+
		"\2\2\u0556\u0562\3\2\2\2\u0557\u055f\5L\'\2\u0558\u055a\5\6\4\2\u0559"+
		"\u0558\3\2\2\2\u055a\u055b\3\2\2\2\u055b\u0559\3\2\2\2\u055b\u055c\3\2"+
		"\2\2\u055c\u055d\3\2\2\2\u055d\u055e\5N(\2\u055e\u0560\3\2\2\2\u055f\u0559"+
		"\3\2\2\2\u055f\u0560\3\2\2\2\u0560\u0563\3\2\2\2\u0561\u0563\5N(\2\u0562"+
		"\u0557\3\2\2\2\u0562\u0561\3\2\2\2\u0563\u0565\3\2\2\2\u0564\u054b\3\2"+
		"\2\2\u0564\u0565\3\2\2\2\u0565\u056d\3\2\2\2\u0566\u0568\5\6\4\2\u0567"+
		"\u0566\3\2\2\2\u0568\u0569\3\2\2\2\u0569\u0567\3\2\2\2\u0569\u056a\3\2"+
		"\2\2\u056a\u056b\3\2\2\2\u056b\u056c\7\u0083\2\2\u056c\u056e\3\2\2\2\u056d"+
		"\u0567\3\2\2\2\u056d\u056e\3\2\2\2\u056eE\3\2\2\2\u056f\u0571\7s\2\2\u0570"+
		"\u0572\5\6\4\2\u0571\u0570\3\2\2\2\u0572\u0573\3\2\2\2\u0573\u0571\3\2"+
		"\2\2\u0573\u0574\3\2\2\2\u0574\u0575\3\2\2\2\u0575\u0577\5H%\2\u0576\u0578"+
		"\5\6\4\2\u0577\u0576\3\2\2\2\u0578\u0579\3\2\2\2\u0579\u0577\3\2\2\2\u0579"+
		"\u057a\3\2\2\2\u057a\u057b\3\2\2\2\u057b\u057d\7\u0175\2\2\u057c\u057e"+
		"\5\6\4\2\u057d\u057c\3\2\2\2\u057e\u057f\3\2\2\2\u057f\u057d\3\2\2\2\u057f"+
		"\u0580\3\2\2\2\u0580\u0581\3\2\2\2\u0581\u0589\5J&\2\u0582\u0584\5\6\4"+
		"\2\u0583\u0582\3\2\2\2\u0584\u0585\3\2\2\2\u0585\u0583\3\2\2\2\u0585\u0586"+
		"\3\2\2\2\u0586\u0587\3\2\2\2\u0587\u0588\5\u0082B\2\u0588\u058a\3\2\2"+
		"\2\u0589\u0583\3\2\2\2\u0589\u058a\3\2\2\2\u058a\u0592\3\2\2\2\u058b\u058d"+
		"\5\6\4\2\u058c\u058b\3\2\2\2\u058d\u058e\3\2\2\2\u058e\u058c\3\2\2\2\u058e"+
		"\u058f\3\2\2\2\u058f\u0590\3\2\2\2\u0590\u0591\7\u0083\2\2\u0591\u0593"+
		"\3\2\2\2\u0592\u058c\3\2\2\2\u0592\u0593\3\2\2\2\u0593G\3\2\2\2\u0594"+
		"\u0597\5\u025a\u012e\2\u0595\u0597\5\u0240\u0121\2\u0596\u0594\3\2\2\2"+
		"\u0596\u0595\3\2\2\2\u0597I\3\2\2\2\u0598\u0599\7\u01af\2\2\u0599K\3\2"+
		"\2\2\u059a\u059c\7\u00dd\2\2\u059b\u059d\5\6\4\2\u059c\u059b\3\2\2\2\u059d"+
		"\u059e\3\2\2\2\u059e\u059c\3\2\2\2\u059e\u059f\3\2\2\2\u059f\u05a0\3\2"+
		"\2\2\u05a0\u05a1\7\u00f4\2\2\u05a1\u05a3\3\2\2\2\u05a2\u05a4\5\6\4\2\u05a3"+
		"\u05a2\3\2\2\2\u05a4\u05a5\3\2\2\2\u05a5\u05a3\3\2\2\2\u05a5\u05a6\3\2"+
		"\2\2\u05a6\u05a9\3\2\2\2\u05a7\u05aa\5\u025a\u012e\2\u05a8\u05aa\7\u01ad"+
		"\2\2\u05a9\u05a7\3\2\2\2\u05a9\u05a8\3\2\2\2\u05aaM\3\2\2\2\u05ab\u05ad"+
		"\7@\2\2\u05ac\u05ae\5\6\4\2\u05ad\u05ac\3\2\2\2\u05ae\u05af\3\2\2\2\u05af"+
		"\u05ad\3\2\2\2\u05af\u05b0\3\2\2\2\u05b0\u05b1\3\2\2\2\u05b1\u05b2\7\u00f4"+
		"\2\2\u05b2\u05b4\3\2\2\2\u05b3\u05b5\5\6\4\2\u05b4\u05b3\3\2\2\2\u05b5"+
		"\u05b6\3\2\2\2\u05b6\u05b4\3\2\2\2\u05b6\u05b7\3\2\2\2\u05b7\u05ba\3\2"+
		"\2\2\u05b8\u05bb\5\u025a\u012e\2\u05b9\u05bb\7\u01ad\2\2\u05ba\u05b8\3"+
		"\2\2\2\u05ba\u05b9\3\2\2\2\u05bbO\3\2\2\2\u05bc\u05be\7\u017f\2\2\u05bd"+
		"\u05bf\5\6\4\2\u05be\u05bd\3\2\2\2\u05bf\u05c0\3\2\2\2\u05c0\u05be\3\2"+
		"\2\2\u05c0\u05c1\3\2\2\2\u05c1\u05c3\3\2\2\2\u05c2\u05bc\3\2\2\2\u05c2"+
		"\u05c3\3\2\2\2\u05c3\u05c4\3\2\2\2\u05c4\u05e0\7Z\2\2\u05c5\u05c7\7\u0175"+
		"\2\2\u05c6\u05c8\5\6\4\2\u05c7\u05c6\3\2\2\2\u05c8\u05c9\3\2\2\2\u05c9"+
		"\u05c7\3\2\2\2\u05c9\u05ca\3\2\2\2\u05ca\u05cb\3\2\2\2\u05cb\u05cc\5X"+
		"-\2\u05cc\u05e0\3\2\2\2\u05cd\u05cf\7\u017f\2\2\u05ce\u05d0\5\6\4\2\u05cf"+
		"\u05ce\3\2\2\2\u05d0\u05d1\3\2\2\2\u05d1\u05cf\3\2\2\2\u05d1\u05d2\3\2"+
		"\2\2\u05d2\u05d4\3\2\2\2\u05d3\u05cd\3\2\2\2\u05d3\u05d4\3\2\2\2\u05d4"+
		"\u05d5\3\2\2\2\u05d5\u05dd\7\u00f2\2\2\u05d6\u05d8\5\6\4\2\u05d7\u05d6"+
		"\3\2\2\2\u05d8\u05d9\3\2\2\2\u05d9\u05d7\3\2\2\2\u05d9\u05da\3\2\2\2\u05da"+
		"\u05db\3\2\2\2\u05db\u05dc\7\u0190\2\2\u05dc\u05de\3\2\2\2\u05dd\u05d7"+
		"\3\2\2\2\u05dd\u05de\3\2\2\2\u05de\u05e0\3\2\2\2\u05df\u05c2\3\2\2\2\u05df"+
		"\u05c5\3\2\2\2\u05df\u05d3\3\2\2\2\u05e0Q\3\2\2\2\u05e1\u0636\5P)\2\u05e2"+
		"\u0636\5T+\2\u05e3\u0636\5V,\2\u05e4\u05fc\7\u0098\2\2\u05e5\u05e7\5\6"+
		"\4\2\u05e6\u05e5\3\2\2\2\u05e7\u05e8\3\2\2\2\u05e8\u05e6\3\2\2\2\u05e8"+
		"\u05e9\3\2\2\2\u05e9\u05f0\3\2\2\2\u05ea\u05ec\7\u0169\2\2\u05eb\u05ed"+
		"\5\6\4\2\u05ec\u05eb\3\2\2\2\u05ed\u05ee\3\2\2\2\u05ee\u05ec\3\2\2\2\u05ee"+
		"\u05ef\3\2\2\2\u05ef\u05f1\3\2\2\2\u05f0\u05ea\3\2\2\2\u05f0\u05f1\3\2"+
		"\2\2\u05f1\u05f2\3\2\2\2\u05f2\u05fa\7|\2\2\u05f3\u05f5\5\6\4\2\u05f4"+
		"\u05f3\3\2\2\2\u05f5\u05f6\3\2\2\2\u05f6\u05f4\3\2\2\2\u05f6\u05f7\3\2"+
		"\2\2\u05f7\u05f8\3\2\2\2\u05f8\u05f9\7\u00f8\2\2\u05f9\u05fb\3\2\2\2\u05fa"+
		"\u05f4\3\2\2\2\u05fa\u05fb\3\2\2\2\u05fb\u05fd\3\2\2\2\u05fc\u05e6\3\2"+
		"\2\2\u05fc\u05fd\3\2\2\2\u05fd\u05ff\3\2\2\2\u05fe\u0600\5\6\4\2\u05ff"+
		"\u05fe\3\2\2\2\u0600\u0601\3\2\2\2\u0601\u05ff\3\2\2\2\u0601\u0602\3\2"+
		"\2\2\u0602\u0603\3\2\2\2\u0603\u0604\t\5\2\2\u0604\u0636\3\2\2\2\u0605"+
		"\u0607\7\u017f\2\2\u0606\u0608\5\6\4\2\u0607\u0606\3\2\2\2\u0608\u0609"+
		"\3\2\2\2\u0609\u0607\3\2\2\2\u0609\u060a\3\2\2\2\u060a\u060c\3\2\2\2\u060b"+
		"\u0605\3\2\2\2\u060b\u060c\3\2\2\2\u060c\u060d\3\2\2\2\u060d\u0636\7%"+
		"\2\2\u060e\u0636\7\u016f\2\2\u060f\u0636\7/\2\2\u0610\u0612\7\u017f\2"+
		"\2\u0611\u0613\5\6\4\2\u0612\u0611\3\2\2\2\u0613\u0614\3\2\2\2\u0614\u0612"+
		"\3\2\2\2\u0614\u0615\3\2\2\2\u0615\u0617\3\2\2\2\u0616\u0610\3\2\2\2\u0616"+
		"\u0617\3\2\2\2\u0617\u0618\3\2\2\2\u0618\u0636\7-\2\2\u0619\u0636\7\u0130"+
		"\2\2\u061a\u061c\7\u017f\2\2\u061b\u061d\5\6\4\2\u061c\u061b\3\2\2\2\u061d"+
		"\u061e\3\2\2\2\u061e\u061c\3\2\2\2\u061e\u061f\3\2\2\2\u061f\u0621\3\2"+
		"\2\2\u0620\u061a\3\2\2\2\u0620\u0621\3\2\2\2\u0621\u0622\3\2\2\2\u0622"+
		"\u0636\7Z\2\2\u0623\u0625\7\u017f\2\2\u0624\u0626\5\6\4\2\u0625\u0624"+
		"\3\2\2\2\u0626\u0627\3\2\2\2\u0627\u0625\3\2\2\2\u0627\u0628\3\2\2\2\u0628"+
		"\u062a\3\2\2\2\u0629\u0623\3\2\2\2\u0629\u062a\3\2\2\2\u062a\u062b\3\2"+
		"\2\2\u062b\u0633\7\u00f2\2\2\u062c\u062e\5\6\4\2\u062d\u062c\3\2\2\2\u062e"+
		"\u062f\3\2\2\2\u062f\u062d\3\2\2\2\u062f\u0630\3\2\2\2\u0630\u0631\3\2"+
		"\2\2\u0631\u0632\7\u0190\2\2\u0632\u0634\3\2\2\2\u0633\u062d\3\2\2\2\u0633"+
		"\u0634\3\2\2\2\u0634\u0636\3\2\2\2\u0635\u05e1\3\2\2\2\u0635\u05e2\3\2"+
		"\2\2\u0635\u05e3\3\2\2\2\u0635\u05e4\3\2\2\2\u0635\u060b\3\2\2\2\u0635"+
		"\u060e\3\2\2\2\u0635\u060f\3\2\2\2\u0635\u0616\3\2\2\2\u0635\u0619\3\2"+
		"\2\2\u0635\u0620\3\2\2\2\u0635\u0629\3\2\2\2\u0636S\3\2\2\2\u0637\u0639"+
		"\7\36\2\2\u0638\u063a\5\6\4\2\u0639\u0638\3\2\2\2\u063a\u063b\3\2\2\2"+
		"\u063b\u0639\3\2\2\2\u063b\u063c\3\2\2\2\u063c\u063e\3\2\2\2\u063d\u0637"+
		"\3\2\2\2\u063d\u063e\3\2\2\2\u063e\u063f\3\2\2\2\u063f\u0647\7\u00dd\2"+
		"\2\u0640\u0642\5\6\4\2\u0641\u0640\3\2\2\2\u0642\u0643\3\2\2\2\u0643\u0641"+
		"\3\2\2\2\u0643\u0644\3\2\2\2\u0644\u0645\3\2\2\2\u0645\u0646\7\u00f4\2"+
		"\2\u0646\u0648\3\2\2\2\u0647\u0641\3\2\2\2\u0647\u0648\3\2\2\2\u0648\u064a"+
		"\3\2\2\2\u0649\u064b\5\6\4\2\u064a\u0649\3\2\2\2\u064b\u064c\3\2\2\2\u064c"+
		"\u064a\3\2\2\2\u064c\u064d\3\2\2\2\u064d\u064e\3\2\2\2\u064e\u064f\5\u00ac"+
		"W\2\u064fU\3\2\2\2\u0650\u0652\7\36\2\2\u0651\u0653\5\6\4\2\u0652\u0651"+
		"\3\2\2\2\u0653\u0654\3\2\2\2\u0654\u0652\3\2\2\2\u0654\u0655\3\2\2\2\u0655"+
		"\u0657\3\2\2\2\u0656\u0650\3\2\2\2\u0656\u0657\3\2\2\2\u0657\u0658\3\2"+
		"\2\2\u0658\u0660\7@\2\2\u0659\u065b\5\6\4\2\u065a\u0659\3\2\2\2\u065b"+
		"\u065c\3\2\2\2\u065c\u065a\3\2\2\2\u065c\u065d\3\2\2\2\u065d\u065e\3\2"+
		"\2\2\u065e\u065f\7\u00f4\2\2\u065f\u0661\3\2\2\2\u0660\u065a\3\2\2\2\u0660"+
		"\u0661\3\2\2\2\u0661\u0663\3\2\2\2\u0662\u0664\5\6\4\2\u0663\u0662\3\2"+
		"\2\2\u0664\u0665\3\2\2\2\u0665\u0663\3\2\2\2\u0665\u0666\3\2\2\2\u0666"+
		"\u0667\3\2\2\2\u0667\u0668\5\u00acW\2\u0668W\3\2\2\2\u0669\u066a\7\u01af"+
		"\2\2\u066aY\3\2\2\2\u066b\u066d\7m\2\2\u066c\u066e\5\6\4\2\u066d\u066c"+
		"\3\2\2\2\u066e\u066f\3\2\2\2\u066f\u066d\3\2\2\2\u066f\u0670\3\2\2\2\u0670"+
		"\u0671\3\2\2\2\u0671\u0679\5\u0218\u010d\2\u0672\u0674\5\6\4\2\u0673\u0672"+
		"\3\2\2\2\u0674\u0675\3\2\2\2\u0675\u0673\3\2\2\2\u0675\u0676\3\2\2\2\u0676"+
		"\u0677\3\2\2\2\u0677\u0678\7\u011e\2\2\u0678\u067a\3\2\2\2\u0679\u0673"+
		"\3\2\2\2\u0679\u067a\3\2\2\2\u067a\u0682\3\2\2\2\u067b\u067d\5\6\4\2\u067c"+
		"\u067b\3\2\2\2\u067d\u067e\3\2\2\2\u067e\u067c\3\2\2\2\u067e\u067f\3\2"+
		"\2\2\u067f\u0680\3\2\2\2\u0680\u0681\5\u0088E\2\u0681\u0683\3\2\2\2\u0682"+
		"\u067c\3\2\2\2\u0682\u0683\3\2\2\2\u0683\u068b\3\2\2\2\u0684\u0686\5\6"+
		"\4\2\u0685\u0684\3\2\2\2\u0686\u0687\3\2\2\2\u0687\u0685\3\2\2\2\u0687"+
		"\u0688\3\2\2\2\u0688\u0689\3\2\2\2\u0689\u068a\7\u0081\2\2\u068a\u068c"+
		"\3\2\2\2\u068b\u0685\3\2\2\2\u068b\u068c\3\2\2\2\u068c[\3\2\2\2\u068d"+
		"\u068e\7W\2\2\u068e]\3\2\2\2\u068f\u069f\7K\2\2\u0690\u0692\5\6\4\2\u0691"+
		"\u0690\3\2\2\2\u0692\u0693\3\2\2\2\u0693\u0691\3\2\2\2\u0693\u0694\3\2"+
		"\2\2\u0694\u0695\3\2\2\2\u0695\u069d\5\u0258\u012d\2\u0696\u0698\5\6\4"+
		"\2\u0697\u0696\3\2\2\2\u0698\u0699\3\2\2\2\u0699\u0697\3\2\2\2\u0699\u069a"+
		"\3\2\2\2\u069a\u069b\3\2\2\2\u069b\u069c\7\u0188\2\2\u069c\u069e\3\2\2"+
		"\2\u069d\u0697\3\2\2\2\u069d\u069e\3\2\2\2\u069e\u06a0\3\2\2\2\u069f\u0691"+
		"\3\2\2\2\u06a0\u06a1\3\2\2\2\u06a1\u069f\3\2\2\2\u06a1\u06a2\3\2\2\2\u06a2"+
		"\u06bb\3\2\2\2\u06a3\u06a5\5\6\4\2\u06a4\u06a3\3\2\2\2\u06a5\u06a6\3\2"+
		"\2\2\u06a6\u06a4\3\2\2\2\u06a6\u06a7\3\2\2\2\u06a7\u06a8\3\2\2\2\u06a8"+
		"\u06aa\7\u0097\2\2\u06a9\u06ab\5\6\4\2\u06aa\u06a9\3\2\2\2\u06ab\u06ac"+
		"\3\2\2\2\u06ac\u06aa\3\2\2\2\u06ac\u06ad\3\2\2\2\u06ad\u06bc\3\2\2\2\u06ae"+
		"\u06b0\5\6\4\2\u06af\u06ae\3\2\2\2\u06b0\u06b3\3\2\2\2\u06b1\u06af\3\2"+
		"\2\2\u06b1\u06b2\3\2\2\2\u06b2\u06b4\3\2\2\2\u06b3\u06b1\3\2\2\2\u06b4"+
		"\u06b8\7\u019e\2\2\u06b5\u06b7\5\6\4\2\u06b6\u06b5\3\2\2\2\u06b7\u06ba"+
		"\3\2\2\2\u06b8\u06b6\3\2\2\2\u06b8\u06b9\3\2\2\2\u06b9\u06bc\3\2\2\2\u06ba"+
		"\u06b8\3\2\2\2\u06bb\u06a4\3\2\2\2\u06bb\u06b1\3\2\2\2\u06bc\u06bd\3\2"+
		"\2\2\u06bd\u06c5\5\u023e\u0120\2\u06be\u06c0\5\6\4\2\u06bf\u06be\3\2\2"+
		"\2\u06c0\u06c1\3\2\2\2\u06c1\u06bf\3\2\2\2\u06c1\u06c2\3\2\2\2\u06c2\u06c3"+
		"\3\2\2\2\u06c3\u06c4\5\u0086D\2\u06c4\u06c6\3\2\2\2\u06c5\u06bf\3\2\2"+
		"\2\u06c5\u06c6\3\2\2\2\u06c6\u06ce\3\2\2\2\u06c7\u06c9\5\6\4\2\u06c8\u06c7"+
		"\3\2\2\2\u06c9\u06ca\3\2\2\2\u06ca\u06c8\3\2\2\2\u06ca\u06cb\3\2\2\2\u06cb"+
		"\u06cc\3\2\2\2\u06cc\u06cd\7\u0080\2\2\u06cd\u06cf\3\2\2\2\u06ce\u06c8"+
		"\3\2\2\2\u06ce\u06cf\3\2\2\2\u06cf_\3\2\2\2\u06d0\u06e0\7<\2\2\u06d1\u06d3"+
		"\5\6\4\2\u06d2\u06d1\3\2\2\2\u06d3\u06d4\3\2\2\2\u06d4\u06d2\3\2\2\2\u06d4"+
		"\u06d5\3\2\2\2\u06d5\u06d6\3\2\2\2\u06d6\u06de\5\u0218\u010d\2\u06d7\u06d9"+
		"\5\6\4\2\u06d8\u06d7\3\2\2\2\u06d9\u06da\3\2\2\2\u06da\u06d8\3\2\2\2\u06da"+
		"\u06db\3\2\2\2\u06db\u06dc\3\2\2\2\u06dc\u06dd\5b\62\2\u06dd\u06df\3\2"+
		"\2\2\u06de\u06d8\3\2\2\2\u06de\u06df\3\2\2\2\u06df\u06e1\3\2\2\2\u06e0"+
		"\u06d2\3\2\2\2\u06e1\u06e2\3\2\2\2\u06e2\u06e0\3\2\2\2\u06e2\u06e3\3\2"+
		"\2\2\u06e3a\3\2\2\2\u06e4\u0705\t\6\2\2\u06e5\u06e7\5\6\4\2\u06e6\u06e5"+
		"\3\2\2\2\u06e7\u06e8\3\2\2\2\u06e8\u06e6\3\2\2\2\u06e8\u06e9\3\2\2\2\u06e9"+
		"\u0703\3\2\2\2\u06ea\u06ec\7\u00af\2\2\u06eb\u06ed\5\6\4\2\u06ec\u06eb"+
		"\3\2\2\2\u06ed\u06ee\3\2\2\2\u06ee\u06ec\3\2\2\2\u06ee\u06ef\3\2\2\2\u06ef"+
		"\u06f1\3\2\2\2\u06f0\u06ea\3\2\2\2\u06f0\u06f1\3\2\2\2\u06f1\u06f2\3\2"+
		"\2\2\u06f2\u0704\7\u018e\2\2\u06f3\u06f5\7\u017f\2\2\u06f4\u06f6\5\6\4"+
		"\2\u06f5\u06f4\3\2\2\2\u06f6\u06f7\3\2\2\2\u06f7\u06f5\3\2\2\2\u06f7\u06f8"+
		"\3\2\2\2\u06f8\u06fa\3\2\2\2\u06f9\u06f3\3\2\2\2\u06f9\u06fa\3\2\2\2\u06fa"+
		"\u06fb\3\2\2\2\u06fb\u06fd\7\u00f2\2\2\u06fc\u06fe\5\6\4\2\u06fd\u06fc"+
		"\3\2\2\2\u06fe\u06ff\3\2\2\2\u06ff\u06fd\3\2\2\2\u06ff\u0700\3\2\2\2\u0700"+
		"\u0701\3\2\2\2\u0701\u0702\7\u018f\2\2\u0702\u0704\3\2\2\2\u0703\u06f0"+
		"\3\2\2\2\u0703\u06f9\3\2\2\2\u0704\u0706\3\2\2\2\u0705\u06e6\3\2\2\2\u0705"+
		"\u0706\3\2\2\2\u0706\u071b\3\2\2\2\u0707\u0709\7\u017f\2\2\u0708\u070a"+
		"\5\6\4\2\u0709\u0708\3\2\2\2\u070a\u070b\3\2\2\2\u070b\u0709\3\2\2\2\u070b"+
		"\u070c\3\2\2\2\u070c\u070e\3\2\2\2\u070d\u0707\3\2\2\2\u070d\u070e\3\2"+
		"\2\2\u070e\u0718\3\2\2\2\u070f\u0711\7\u00f2\2\2\u0710\u0712\5\6\4\2\u0711"+
		"\u0710\3\2\2\2\u0712\u0713\3\2\2\2\u0713\u0711\3\2\2\2\u0713\u0714\3\2"+
		"\2\2\u0714\u0715\3\2\2\2\u0715\u0716\7\u018f\2\2\u0716\u0719\3\2\2\2\u0717"+
		"\u0719\7\u00e1\2\2\u0718\u070f\3\2\2\2\u0718\u0717\3\2\2\2\u0719\u071b"+
		"\3\2\2\2\u071a\u06e4\3\2\2\2\u071a\u070d\3\2\2\2\u071bc\3\2\2\2\u071c"+
		"\u0724\7\64\2\2\u071d\u071f\5\6\4\2\u071e\u071d\3\2\2\2\u071f\u0720\3"+
		"\2\2\2\u0720\u071e\3\2\2\2\u0720\u0721\3\2\2\2\u0721\u0722\3\2\2\2\u0722"+
		"\u0723\5r:\2\u0723\u0725\3\2\2\2\u0724\u071e\3\2\2\2\u0725\u0726\3\2\2"+
		"\2\u0726\u0724\3\2\2\2\u0726\u0727\3\2\2\2\u0727e\3\2\2\2\u0728\u072a"+
		"\7\63\2\2\u0729\u072b\5\6\4\2\u072a\u0729\3\2\2\2\u072b\u072c\3\2\2\2"+
		"\u072c\u072a\3\2\2\2\u072c\u072d\3\2\2\2\u072d\u072e\3\2\2\2\u072e\u0736"+
		"\5r:\2\u072f\u0731\5\6\4\2\u0730\u072f\3\2\2\2\u0731\u0732\3\2\2\2\u0732"+
		"\u0730\3\2\2\2\u0732\u0733\3\2\2\2\u0733\u0734\3\2\2\2\u0734\u0735\5j"+
		"\66\2\u0735\u0737\3\2\2\2\u0736\u0730\3\2\2\2\u0736\u0737\3\2\2\2\u0737"+
		"\u073f\3\2\2\2\u0738\u073a\5\6\4\2\u0739\u0738\3\2\2\2\u073a\u073b\3\2"+
		"\2\2\u073b\u0739\3\2\2\2\u073b\u073c\3\2\2\2\u073c\u073d\3\2\2\2\u073d"+
		"\u073e\5h\65\2\u073e\u0740\3\2\2\2\u073f\u0739\3\2\2\2\u073f\u0740\3\2"+
		"\2\2\u0740\u0748\3\2\2\2\u0741\u0743\5\6\4\2\u0742\u0741\3\2\2\2\u0743"+
		"\u0744\3\2\2\2\u0744\u0742\3\2\2\2\u0744\u0745\3\2\2\2\u0745\u0746\3\2"+
		"\2\2\u0746\u0747\5\u0082B\2\u0747\u0749\3\2\2\2\u0748\u0742\3\2\2\2\u0748"+
		"\u0749\3\2\2\2\u0749\u0751\3\2\2\2\u074a\u074c\5\6\4\2\u074b\u074a\3\2"+
		"\2\2\u074c\u074d\3\2\2\2\u074d\u074b\3\2\2\2\u074d\u074e\3\2\2\2\u074e"+
		"\u074f\3\2\2\2\u074f\u0750\7\177\2\2\u0750\u0752\3\2\2\2\u0751\u074b\3"+
		"\2\2\2\u0751\u0752\3\2\2\2\u0752g\3\2\2\2\u0753\u0755\7\u00b5\2\2\u0754"+
		"\u0756\5\6\4\2\u0755\u0754\3\2\2\2\u0756\u0757\3\2\2\2\u0757\u0755\3\2"+
		"\2\2\u0757\u0758\3\2\2\2\u0758\u0759\3\2\2\2\u0759\u075a\5\u0258\u012d"+
		"\2\u075ai\3\2\2\2\u075b\u0763\7\u0178\2\2\u075c\u075e\5\6\4\2\u075d\u075c"+
		"\3\2\2\2\u075e\u075f\3\2\2\2\u075f\u075d\3\2\2\2\u075f\u0760\3\2\2\2\u0760"+
		"\u0761\3\2\2\2\u0761\u0762\5l\67\2\u0762\u0764\3\2\2\2\u0763\u075d\3\2"+
		"\2\2\u0764\u0765\3\2\2\2\u0765\u0763\3\2\2\2\u0765\u0766\3\2\2\2\u0766"+
		"k\3\2\2\2\u0767\u077e\7\u00fa\2\2\u0768\u076a\5n8\2\u0769\u076b\5\6\4"+
		"\2\u076a\u0769\3\2\2\2\u076b\u076c\3\2\2\2\u076c\u076a\3\2\2\2\u076c\u076d"+
		"\3\2\2\2\u076d\u076f\3\2\2\2\u076e\u0768\3\2\2\2\u076e\u076f\3\2\2\2\u076f"+
		"\u0770\3\2\2\2\u0770\u077a\5p9\2\u0771\u0773\5\6\4\2\u0772\u0771\3\2\2"+
		"\2\u0773\u0774\3\2\2\2\u0774\u0772\3\2\2\2\u0774\u0775\3\2\2\2\u0775\u0776"+
		"\3\2\2\2\u0776\u0777\5p9\2\u0777\u0779\3\2\2\2\u0778\u0772\3\2\2\2\u0779"+
		"\u077c\3\2\2\2\u077a\u0778\3\2\2\2\u077a\u077b\3\2\2\2\u077b\u077e\3\2"+
		"\2\2\u077c\u077a\3\2\2\2\u077d\u0767\3\2\2\2\u077d\u076e\3\2\2\2\u077e"+
		"m\3\2\2\2\u077f\u0781\7\61\2\2\u0780\u0782\5\6\4\2\u0781\u0780\3\2\2\2"+
		"\u0782\u0783\3\2\2\2\u0783\u0781\3\2\2\2\u0783\u0784\3\2\2\2\u0784\u0786"+
		"\3\2\2\2\u0785\u077f\3\2\2\2\u0785\u0786\3\2\2\2\u0786\u0787\3\2\2\2\u0787"+
		"\u07a4\7\u0122\2\2\u0788\u078a\7\61\2\2\u0789\u078b\5\6\4\2\u078a\u0789"+
		"\3\2\2\2\u078b\u078c\3\2\2\2\u078c\u078a\3\2\2\2\u078c\u078d\3\2\2\2\u078d"+
		"\u078f\3\2\2\2\u078e\u0788\3\2\2\2\u078e\u078f\3\2\2\2\u078f\u0790\3\2"+
		"\2\2\u0790\u07a4\7\u018c\2\2\u0791\u0793\7\61\2\2\u0792\u0794\5\6\4\2"+
		"\u0793\u0792\3\2\2\2\u0794\u0795\3\2\2\2\u0795\u0793\3\2\2\2\u0795\u0796"+
		"\3\2\2\2\u0796\u0798\3\2\2\2\u0797\u0791\3\2\2\2\u0797\u0798\3\2\2\2\u0798"+
		"\u0799\3\2\2\2\u0799\u07a4\7\u018d\2\2\u079a\u079c\7\61\2\2\u079b\u079d"+
		"\5\6\4\2\u079c\u079b\3\2\2\2\u079d\u079e\3\2\2\2\u079e\u079c\3\2\2\2\u079e"+
		"\u079f\3\2\2\2\u079f\u07a1\3\2\2\2\u07a0\u079a\3\2\2\2\u07a0\u07a1\3\2"+
		"\2\2\u07a1\u07a2\3\2\2\2\u07a2\u07a4\7\u0179\2\2\u07a3\u0785\3\2\2\2\u07a3"+
		"\u078e\3\2\2\2\u07a3\u0797\3\2\2\2\u07a3\u07a0\3\2\2\2\u07a4o\3\2\2\2"+
		"\u07a5\u07a9\5\u01ae\u00d8\2\u07a6\u07a9\7\u01ad\2\2\u07a7\u07a9\7\u01ac"+
		"\2\2\u07a8\u07a5\3\2\2\2\u07a8\u07a6\3\2\2\2\u07a8\u07a7\3\2\2\2\u07a9"+
		"q\3\2\2\2\u07aa\u07ab\t\7\2\2\u07abs\3\2\2\2\u07ac\u07ce\7\21\2\2\u07ad"+
		"\u07af\5\6\4\2\u07ae\u07ad\3\2\2\2\u07af\u07b0\3\2\2\2\u07b0\u07ae\3\2"+
		"\2\2\u07b0\u07b1\3\2\2\2\u07b1\u07b2\3\2\2\2\u07b2\u07b4\5x=\2\u07b3\u07b5"+
		"\5\6\4\2\u07b4\u07b3\3\2\2\2\u07b5\u07b6\3\2\2\2\u07b6\u07b4\3\2\2\2\u07b6"+
		"\u07b7\3\2\2\2\u07b7\u07b8\3\2\2\2\u07b8\u07ba\7\u0169\2\2\u07b9\u07bb"+
		"\5\6\4\2\u07ba\u07b9\3\2\2\2\u07bb\u07bc\3\2\2\2\u07bc\u07ba\3\2\2\2\u07bc"+
		"\u07bd\3\2\2\2\u07bd\u07ca\3\2\2\2\u07be\u07c0\7\u018b\2\2\u07bf\u07c1"+
		"\5\6\4\2\u07c0\u07bf\3\2\2\2\u07c1\u07c2\3\2\2\2\u07c2\u07c0\3\2\2\2\u07c2"+
		"\u07c3\3\2\2\2\u07c3\u07c4\3\2\2\2\u07c4\u07c6\7\u0169\2\2\u07c5\u07c7"+
		"\5\6\4\2\u07c6\u07c5\3\2\2\2\u07c7\u07c8\3\2\2\2\u07c8\u07c6\3\2\2\2\u07c8"+
		"\u07c9\3\2\2\2\u07c9\u07cb\3\2\2\2\u07ca\u07be\3\2\2\2\u07ca\u07cb\3\2"+
		"\2\2\u07cb\u07cc\3\2\2\2\u07cc\u07cd\5v<\2\u07cd\u07cf\3\2\2\2\u07ce\u07ae"+
		"\3\2\2\2\u07cf\u07d0\3\2\2\2\u07d0\u07ce\3\2\2\2\u07d0\u07d1\3\2\2\2\u07d1"+
		"u\3\2\2\2\u07d2\u07d3\7\u01af\2\2\u07d3w\3\2\2\2\u07d4\u07d5\7\u01af\2"+
		"\2\u07d5y\3\2\2\2\u07d6\u07de\7\b\2\2\u07d7\u07d9\5\6\4\2\u07d8\u07d7"+
		"\3\2\2\2\u07d9\u07da\3\2\2\2\u07da\u07d8\3\2\2\2\u07da\u07db\3\2\2\2\u07db"+
		"\u07dc\3\2\2\2\u07dc\u07dd\5~@\2\u07dd\u07df\3\2\2\2\u07de\u07d8\3\2\2"+
		"\2\u07df\u07e0\3\2\2\2\u07e0\u07de\3\2\2\2\u07e0\u07e1\3\2\2\2\u07e1\u07e3"+
		"\3\2\2\2\u07e2\u07e4\5\6\4\2\u07e3\u07e2\3\2\2\2\u07e4\u07e5\3\2\2\2\u07e5"+
		"\u07e3\3\2\2\2\u07e5\u07e6\3\2\2\2\u07e6\u07e7\3\2\2\2\u07e7\u07f7\7\u0169"+
		"\2\2\u07e8\u07ea\5\6\4\2\u07e9\u07e8\3\2\2\2\u07ea\u07eb\3\2\2\2\u07eb"+
		"\u07e9\3\2\2\2\u07eb\u07ec\3\2\2\2\u07ec\u07ed\3\2\2\2\u07ed\u07f5\5\u0258"+
		"\u012d\2\u07ee\u07f0\5\6\4\2\u07ef\u07ee\3\2\2\2\u07f0\u07f1\3\2\2\2\u07f1"+
		"\u07ef\3\2\2\2\u07f1\u07f2\3\2\2\2\u07f2\u07f3\3\2\2\2\u07f3\u07f4\7\u0188"+
		"\2\2\u07f4\u07f6\3\2\2\2\u07f5\u07ef\3\2\2\2\u07f5\u07f6\3\2\2\2\u07f6"+
		"\u07f8\3\2\2\2\u07f7\u07e9\3\2\2\2\u07f8\u07f9\3\2\2\2\u07f9\u07f7\3\2"+
		"\2\2\u07f9\u07fa\3\2\2\2\u07fa\u0858\3\2\2\2\u07fb\u0805\7\b\2\2\u07fc"+
		"\u07fe\5\6\4\2\u07fd\u07fc\3\2\2\2\u07fe\u07ff\3\2\2\2\u07ff\u07fd\3\2"+
		"\2\2\u07ff\u0800\3\2\2\2\u0800\u0801\3\2\2\2\u0801\u0802\5~@\2\u0802\u0804"+
		"\3\2\2\2\u0803\u07fd\3\2\2\2\u0804\u0807\3\2\2\2\u0805\u0803\3\2\2\2\u0805"+
		"\u0806\3\2\2\2\u0806\u080f\3\2\2\2\u0807\u0805\3\2\2\2\u0808\u080a\5\6"+
		"\4\2\u0809\u0808\3\2\2\2\u080a\u080b\3\2\2\2\u080b\u0809\3\2\2\2\u080b"+
		"\u080c\3\2\2\2\u080c\u080d\3\2\2\2\u080d\u080e\7\u0169\2\2\u080e\u0810"+
		"\3\2\2\2\u080f\u0809\3\2\2\2\u080f\u0810\3\2\2\2\u0810\u0818\3\2\2\2\u0811"+
		"\u0813\5\6\4\2\u0812\u0811\3\2\2\2\u0813\u0814\3\2\2\2\u0814\u0812\3\2"+
		"\2\2\u0814\u0815\3\2\2\2\u0815\u0816\3\2\2\2\u0816\u0817\5~@\2\u0817\u0819"+
		"\3\2\2\2\u0818\u0812\3\2\2\2\u0819\u081a\3\2\2\2\u081a\u0818\3\2\2\2\u081a"+
		"\u081b\3\2\2\2\u081b\u081d\3\2\2\2\u081c\u081e\5\6\4\2\u081d\u081c\3\2"+
		"\2\2\u081e\u081f\3\2\2\2\u081f\u081d\3\2\2\2\u081f\u0820\3\2\2\2\u0820"+
		"\u0821\3\2\2\2\u0821\u0831\7\u00b5\2\2\u0822\u0824\5\6\4\2\u0823\u0822"+
		"\3\2\2\2\u0824\u0825\3\2\2\2\u0825\u0823\3\2\2\2\u0825\u0826\3\2\2\2\u0826"+
		"\u0827\3\2\2\2\u0827\u082f\5\u0258\u012d\2\u0828\u082a\5\6\4\2\u0829\u0828"+
		"\3\2\2\2\u082a\u082b\3\2\2\2\u082b\u0829\3\2\2\2\u082b\u082c\3\2\2\2\u082c"+
		"\u082d\3\2\2\2\u082d\u082e\7\u0188\2\2\u082e\u0830\3\2\2\2\u082f\u0829"+
		"\3\2\2\2\u082f\u0830\3\2\2\2\u0830\u0832\3\2\2\2\u0831\u0823\3\2\2\2\u0832"+
		"\u0833\3\2\2\2\u0833\u0831\3\2\2\2\u0833\u0834\3\2\2\2\u0834\u0858\3\2"+
		"\2\2\u0835\u0837\7\b\2\2\u0836\u0838\5\6\4\2\u0837\u0836\3\2\2\2\u0838"+
		"\u0839\3\2\2\2\u0839\u0837\3\2\2\2\u0839\u083a\3\2\2\2\u083a\u083b\3\2"+
		"\2\2\u083b\u083d\t\b\2\2\u083c\u083e\5\6\4\2\u083d\u083c\3\2\2\2\u083e"+
		"\u083f\3\2\2\2\u083f\u083d\3\2\2\2\u083f\u0840\3\2\2\2\u0840\u0841\3\2"+
		"\2\2\u0841\u0843\5|?\2\u0842\u0844\5\6\4\2\u0843\u0842\3\2\2\2\u0844\u0845"+
		"\3\2\2\2\u0845\u0843\3\2\2\2\u0845\u0846\3\2\2\2\u0846\u0847\3\2\2\2\u0847"+
		"\u0849\7\u0169\2\2\u0848\u084a\5\6\4\2\u0849\u0848\3\2\2\2\u084a\u084b"+
		"\3\2\2\2\u084b\u0849\3\2\2\2\u084b\u084c\3\2\2\2\u084c\u084d\3\2\2\2\u084d"+
		"\u0855\5|?\2\u084e\u0850\5\6\4\2\u084f\u084e\3\2\2\2\u0850\u0851\3\2\2"+
		"\2\u0851\u084f\3\2\2\2\u0851\u0852\3\2\2\2\u0852\u0853\3\2\2\2\u0853\u0854"+
		"\7\u0188\2\2\u0854\u0856\3\2\2\2\u0855\u084f\3\2\2\2\u0855\u0856\3\2\2"+
		"\2\u0856\u0858\3\2\2\2\u0857\u07d6\3\2\2\2\u0857\u07fb\3\2\2\2\u0857\u0835"+
		"\3\2\2\2\u0858\u0860\3\2\2\2\u0859\u085b\5\6\4\2\u085a\u0859\3\2\2\2\u085b"+
		"\u085c\3\2\2\2\u085c\u085a\3\2\2\2\u085c\u085d\3\2\2\2\u085d\u085e\3\2"+
		"\2\2\u085e\u085f\5\u0086D\2\u085f\u0861\3\2\2\2\u0860\u085a\3\2\2\2\u0860"+
		"\u0861\3\2\2\2\u0861\u0869\3\2\2\2\u0862\u0864\5\6\4\2\u0863\u0862\3\2"+
		"\2\2\u0864\u0865\3\2\2\2\u0865\u0863\3\2\2\2\u0865\u0866\3\2\2\2\u0866"+
		"\u0867\3\2\2\2\u0867\u0868\7~\2\2\u0868\u086a\3\2\2\2\u0869\u0863\3\2"+
		"\2\2\u0869\u086a\3\2\2\2\u086a{\3\2\2\2\u086b\u086c\5\u01ae\u00d8\2\u086c"+
		"}\3\2\2\2\u086d\u0870\7\u01ad\2\2\u086e\u0870\5\u025a\u012e\2\u086f\u086d"+
		"\3\2\2\2\u086f\u086e\3\2\2\2\u0870\177\3\2\2\2\u0871\u0878\5\u008eH\2"+
		"\u0872\u0878\5\u0090I\2\u0873\u0878\5\u0092J\2\u0874\u0878\5\u0094K\2"+
		"\u0875\u0878\5\u0096L\2\u0876\u0878\5\u008aF\2\u0877\u0871\3\2\2\2\u0877"+
		"\u0872\3\2\2\2\u0877\u0873\3\2\2\2\u0877\u0874\3\2\2\2\u0877\u0875\3\2"+
		"\2\2\u0877\u0876\3\2\2\2\u0878\u0081\3\2\2\2\u0879\u0887\5\u00b6\\\2\u087a"+
		"\u087c\5\6\4\2\u087b\u087a\3\2\2\2\u087c\u087d\3\2\2\2\u087d\u087b\3\2"+
		"\2\2\u087d\u087e\3\2\2\2\u087e\u087f\3\2\2\2\u087f\u0881\7\u00f3\2\2\u0880"+
		"\u0882\5\6\4\2\u0881\u0880\3\2\2\2\u0882\u0883\3\2\2\2\u0883\u0881\3\2"+
		"\2\2\u0883\u0884\3\2\2\2\u0884\u0885\3\2\2\2\u0885\u0886\5\u00b6\\\2\u0886"+
		"\u0888\3\2\2\2\u0887\u087b\3\2\2\2\u0887\u0888\3\2\2\2\u0888\u089a\3\2"+
		"\2\2\u0889\u088b\7\u00f3\2\2\u088a\u088c\5\6\4\2\u088b\u088a\3\2\2\2\u088c"+
		"\u088d\3\2\2\2\u088d\u088b\3\2\2\2\u088d\u088e\3\2\2\2\u088e\u088f\3\2"+
		"\2\2\u088f\u0897\5\u00b6\\\2\u0890\u0892\5\6\4\2\u0891\u0890\3\2\2\2\u0892"+
		"\u0893\3\2\2\2\u0893\u0891\3\2\2\2\u0893\u0894\3\2\2\2\u0894\u0895\3\2"+
		"\2\2\u0895\u0896\5\u00b6\\\2\u0896\u0898\3\2\2\2\u0897\u0891\3\2\2\2\u0897"+
		"\u0898\3\2\2\2\u0898\u089a\3\2\2\2\u0899\u0879\3\2\2\2\u0899\u0889\3\2"+
		"\2\2\u089a\u0083\3\2\2\2\u089b\u08a9\5\u00b4[\2\u089c\u089e\5\6\4\2\u089d"+
		"\u089c\3\2\2\2\u089e\u089f\3\2\2\2\u089f\u089d\3\2\2\2\u089f\u08a0\3\2"+
		"\2\2\u08a0\u08a1\3\2\2\2\u08a1\u08a3\7\u00f3\2\2\u08a2\u08a4\5\6\4\2\u08a3"+
		"\u08a2\3\2\2\2\u08a4\u08a5\3\2\2\2\u08a5\u08a3\3\2\2\2\u08a5\u08a6\3\2"+
		"\2\2\u08a6\u08a7\3\2\2\2\u08a7\u08a8\5\u00b4[\2\u08a8\u08aa\3\2\2\2\u08a9"+
		"\u089d\3\2\2\2\u08a9\u08aa\3\2\2\2\u08aa\u08bc\3\2\2\2\u08ab\u08ad\7\u00f3"+
		"\2\2\u08ac\u08ae\5\6\4\2\u08ad\u08ac\3\2\2\2\u08ae\u08af\3\2\2\2\u08af"+
		"\u08ad\3\2\2\2\u08af\u08b0\3\2\2\2\u08b0\u08b1\3\2\2\2\u08b1\u08b9\5\u00b4"+
		"[\2\u08b2\u08b4\5\6\4\2\u08b3\u08b2\3\2\2\2\u08b4\u08b5\3\2\2\2\u08b5"+
		"\u08b3\3\2\2\2\u08b5\u08b6\3\2\2\2\u08b6\u08b7\3\2\2\2\u08b7\u08b8\5\u00b4"+
		"[\2\u08b8\u08ba\3\2\2\2\u08b9\u08b3\3\2\2\2\u08b9\u08ba\3\2\2\2\u08ba"+
		"\u08bc\3\2\2\2\u08bb\u089b\3\2\2\2\u08bb\u08ab\3\2\2\2\u08bc\u0085\3\2"+
		"\2\2\u08bd\u08cb\5\u00b8]\2\u08be\u08c0\5\6\4\2\u08bf\u08be\3\2\2\2\u08c0"+
		"\u08c1\3\2\2\2\u08c1\u08bf\3\2\2\2\u08c1\u08c2\3\2\2\2\u08c2\u08c3\3\2"+
		"\2\2\u08c3\u08c5\7\u00f3\2\2\u08c4\u08c6\5\6\4\2\u08c5\u08c4\3\2\2\2\u08c6"+
		"\u08c7\3\2\2\2\u08c7\u08c5\3\2\2\2\u08c7\u08c8\3\2\2\2\u08c8\u08c9\3\2"+
		"\2\2\u08c9\u08ca\5\u00b8]\2\u08ca\u08cc\3\2\2\2\u08cb\u08bf\3\2\2\2\u08cb"+
		"\u08cc\3\2\2\2\u08cc\u08de\3\2\2\2\u08cd\u08cf\7\u00f3\2\2\u08ce\u08d0"+
		"\5\6\4\2\u08cf\u08ce\3\2\2\2\u08d0\u08d1\3\2\2\2\u08d1\u08cf\3\2\2\2\u08d1"+
		"\u08d2\3\2\2\2\u08d2\u08d3\3\2\2\2\u08d3\u08db\5\u00b8]\2\u08d4\u08d6"+
		"\5\6\4\2\u08d5\u08d4\3\2\2\2\u08d6\u08d7\3\2\2\2\u08d7\u08d5\3\2\2\2\u08d7"+
		"\u08d8\3\2\2\2\u08d8\u08d9\3\2\2\2\u08d9\u08da\5\u00b8]\2\u08da\u08dc"+
		"\3\2\2\2\u08db\u08d5\3\2\2\2\u08db\u08dc\3\2\2\2\u08dc\u08de\3\2\2\2\u08dd"+
		"\u08bd\3\2\2\2\u08dd\u08cd\3\2\2\2\u08de\u0087\3\2\2\2\u08df\u08ed\5\u00ba"+
		"^\2\u08e0\u08e2\5\6\4\2\u08e1\u08e0\3\2\2\2\u08e2\u08e3\3\2\2\2\u08e3"+
		"\u08e1\3\2\2\2\u08e3\u08e4\3\2\2\2\u08e4\u08e5\3\2\2\2\u08e5\u08e7\7\u00f3"+
		"\2\2\u08e6\u08e8\5\6\4\2\u08e7\u08e6\3\2\2\2\u08e8\u08e9\3\2\2\2\u08e9"+
		"\u08e7\3\2\2\2\u08e9\u08ea\3\2\2\2\u08ea\u08eb\3\2\2\2\u08eb\u08ec\5\u00ba"+
		"^\2\u08ec\u08ee\3\2\2\2\u08ed\u08e1\3\2\2\2\u08ed\u08ee\3\2\2\2\u08ee"+
		"\u0900\3\2\2\2\u08ef\u08f1\7\u00f3\2\2\u08f0\u08f2\5\6\4\2\u08f1\u08f0"+
		"\3\2\2\2\u08f2\u08f3\3\2\2\2\u08f3\u08f1\3\2\2\2\u08f3\u08f4\3\2\2\2\u08f4"+
		"\u08f5\3\2\2\2\u08f5\u08fd\5\u00ba^\2\u08f6\u08f8\5\6\4\2\u08f7\u08f6"+
		"\3\2\2\2\u08f8\u08f9\3\2\2\2\u08f9\u08f7\3\2\2\2\u08f9\u08fa\3\2\2\2\u08fa"+
		"\u08fb\3\2\2\2\u08fb\u08fc\5\u00ba^\2\u08fc\u08fe\3\2\2\2\u08fd\u08f7"+
		"\3\2\2\2\u08fd\u08fe\3\2\2\2\u08fe\u0900\3\2\2\2\u08ff\u08df\3\2\2\2\u08ff"+
		"\u08ef\3\2\2\2\u0900\u0089\3\2\2\2\u0901\u0903\7\6\2\2\u0902\u0904\5\6"+
		"\4\2\u0903\u0902\3\2\2\2\u0904\u0905\3\2\2\2\u0905\u0903\3\2\2\2\u0905"+
		"\u0906\3\2\2\2\u0906\u0907\3\2\2\2\u0907\u0909\5\u00b0Y\2\u0908\u090a"+
		"\5\6\4\2\u0909\u0908\3\2\2\2\u090a\u090b\3\2\2\2\u090b\u0909\3\2\2\2\u090b"+
		"\u090c\3\2\2\2\u090c\u0913\3\2\2\2\u090d\u090f\7\u00b1\2\2\u090e\u0910"+
		"\5\6\4\2\u090f\u090e\3\2\2\2\u0910\u0911\3\2\2\2\u0911\u090f\3\2\2\2\u0911"+
		"\u0912\3\2\2\2\u0912\u0914\3\2\2\2\u0913\u090d\3\2\2\2\u0913\u0914\3\2"+
		"\2\2\u0914\u0915\3\2\2\2\u0915\u091d\5\u008cG\2\u0916\u0918\5\6\4\2\u0917"+
		"\u0916\3\2\2\2\u0918\u0919\3\2\2\2\u0919\u0917\3\2\2\2\u0919\u091a\3\2"+
		"\2\2\u091a\u091b\3\2\2\2\u091b\u091c\5\u0082B\2\u091c\u091e\3\2\2\2\u091d"+
		"\u0917\3\2\2\2\u091d\u091e\3\2\2\2\u091e\u0926\3\2\2\2\u091f\u0921\5\6"+
		"\4\2\u0920\u091f\3\2\2\2\u0921\u0922\3\2\2\2\u0922\u0920\3\2\2\2\u0922"+
		"\u0923\3\2\2\2\u0923\u0924\3\2\2\2\u0924\u0925\7}\2\2\u0925\u0927\3\2"+
		"\2\2\u0926\u0920\3\2\2\2\u0926\u0927\3\2\2\2\u0927\u008b\3\2\2\2\u0928"+
		"\u0929\7\u01af\2\2\u0929\u008d\3\2\2\2\u092a\u092c\7\6\2\2\u092b\u092d"+
		"\5\6\4\2\u092c\u092b\3\2\2\2\u092d\u092e\3\2\2\2\u092e\u092c\3\2\2\2\u092e"+
		"\u092f\3\2\2\2\u092f\u0930\3\2\2\2\u0930\u093e\5\u00b0Y\2\u0931\u0933"+
		"\5\6\4\2\u0932\u0931\3\2\2\2\u0933\u0934\3\2\2\2\u0934\u0932\3\2\2\2\u0934"+
		"\u0935\3\2\2\2\u0935\u0936\3\2\2\2\u0936\u0938\7\u00b1\2\2\u0937\u0939"+
		"\5\6\4\2\u0938\u0937\3\2\2\2\u0939\u093a\3\2\2\2\u093a\u0938\3\2\2\2\u093a"+
		"\u093b\3\2\2\2\u093b\u093c\3\2\2\2\u093c\u093d\5\u00b2Z\2\u093d\u093f"+
		"\3\2\2\2\u093e\u0932\3\2\2\2\u093e\u093f\3\2\2\2\u093f\u094d\3\2\2\2\u0940"+
		"\u0942\5\6\4\2\u0941\u0940\3\2\2\2\u0942\u0943\3\2\2\2\u0943\u0941\3\2"+
		"\2\2\u0943\u0944\3\2\2\2\u0944\u0945\3\2\2\2\u0945\u0947\7\u017f\2\2\u0946"+
		"\u0948\5\6\4\2\u0947\u0946\3\2\2\2\u0948\u0949\3\2\2\2\u0949\u0947\3\2"+
		"\2\2\u0949\u094a\3\2\2\2\u094a\u094b\3\2\2\2\u094b\u094c\7Z\2\2\u094c"+
		"\u094e\3\2\2\2\u094d\u0941\3\2\2\2\u094d\u094e\3\2\2\2\u094e\u0956\3\2"+
		"\2\2\u094f\u0951\5\6\4\2\u0950\u094f\3\2\2\2\u0951\u0952\3\2\2\2\u0952"+
		"\u0950\3\2\2\2\u0952\u0953\3\2\2\2\u0953\u0954\3\2\2\2\u0954\u0955\5\u0084"+
		"C\2\u0955\u0957\3\2\2\2\u0956\u0950\3\2\2\2\u0956\u0957\3\2\2\2\u0957"+
		"\u095f\3\2\2\2\u0958\u095a\5\6\4\2\u0959\u0958\3\2\2\2\u095a\u095b\3\2"+
		"\2\2\u095b\u0959\3\2\2\2\u095b\u095c\3\2\2\2\u095c\u095d\3\2\2\2\u095d"+
		"\u095e\7}\2\2\u095e\u0960\3\2\2\2\u095f\u0959\3\2\2\2\u095f\u0960\3\2"+
		"\2\2\u0960\u008f\3\2\2\2\u0961\u0963\7\6\2\2\u0962\u0964\5\6\4\2\u0963"+
		"\u0962\3\2\2\2\u0964\u0965\3\2\2\2\u0965\u0963\3\2\2\2\u0965\u0966\3\2"+
		"\2\2\u0966\u0967\3\2\2\2\u0967\u0969\5\u00b0Y\2\u0968\u096a\5\6\4\2\u0969"+
		"\u0968\3\2\2\2\u096a\u096b\3\2\2\2\u096b\u0969\3\2\2\2\u096b\u096c\3\2"+
		"\2\2\u096c\u096d\3\2\2\2\u096d\u096f\7\u00b1\2\2\u096e\u0970\5\6\4\2\u096f"+
		"\u096e\3\2\2\2\u0970\u0971\3\2\2\2\u0971\u096f\3\2\2\2\u0971\u0972\3\2"+
		"\2\2\u0972\u0973\3\2\2\2\u0973\u0974\5\u00aeX\2\u0974\u0091\3\2\2\2\u0975"+
		"\u0977\7\6\2\2\u0976\u0978\5\6\4\2\u0977\u0976\3\2\2\2\u0978\u0979\3\2"+
		"\2\2\u0979\u0977\3\2\2\2\u0979\u097a\3\2\2\2\u097a\u097b\3\2\2\2\u097b"+
		"\u0983\5\u00b0Y\2\u097c\u097e\5\6\4\2\u097d\u097c\3\2\2\2\u097e\u097f"+
		"\3\2\2\2\u097f\u097d\3\2\2\2\u097f\u0980\3\2\2\2\u0980\u0981\3\2\2\2\u0981"+
		"\u0982\5\u00a0Q\2\u0982\u0984\3\2\2\2\u0983\u097d\3\2\2\2\u0984\u0985"+
		"\3\2\2\2\u0985\u0983\3\2\2\2\u0985\u0986\3\2\2\2\u0986\u0990\3\2\2\2\u0987"+
		"\u0989\5\6\4\2\u0988\u0987\3\2\2\2\u0989\u098a\3\2\2\2\u098a\u0988\3\2"+
		"\2\2\u098a\u098b\3\2\2\2\u098b\u098e\3\2\2\2\u098c\u098f\5\u0082B\2\u098d"+
		"\u098f\5\u0084C\2\u098e\u098c\3\2\2\2\u098e\u098d\3\2\2\2\u098f\u0991"+
		"\3\2\2\2\u0990\u0988\3\2\2\2\u0990\u0991\3\2\2\2\u0991\u0999\3\2\2\2\u0992"+
		"\u0994\5\6\4\2\u0993\u0992\3\2\2\2\u0994\u0995\3\2\2\2\u0995\u0993\3\2"+
		"\2\2\u0995\u0996\3\2\2\2\u0996\u0997\3\2\2\2\u0997\u0998\7}\2\2\u0998"+
		"\u099a\3\2\2\2\u0999\u0993\3\2\2\2\u0999\u099a\3\2\2\2\u099a\u0093\3\2"+
		"\2\2\u099b\u099d\7\6\2\2\u099c\u099e\5\6\4\2\u099d\u099c\3\2\2\2\u099e"+
		"\u099f\3\2\2\2\u099f\u099d\3\2\2\2\u099f\u09a0\3\2\2\2\u09a0\u09a7\3\2"+
		"\2\2\u09a1\u09a3\7X\2\2\u09a2\u09a4\5\6\4\2\u09a3\u09a2\3\2\2\2\u09a4"+
		"\u09a5\3\2\2\2\u09a5\u09a3\3\2\2\2\u09a5\u09a6\3\2\2\2\u09a6\u09a8\3\2"+
		"\2\2\u09a7\u09a1\3\2\2\2\u09a7\u09a8\3\2\2\2\u09a8\u09a9\3\2\2\2\u09a9"+
		"\u09ab\7\u00d4\2\2\u09aa\u09ac\5\6\4\2\u09ab\u09aa\3\2\2\2\u09ac\u09ad"+
		"\3\2\2\2\u09ad\u09ab\3\2\2\2\u09ad\u09ae\3\2\2\2\u09ae\u09b5\3\2\2\2\u09af"+
		"\u09b1\7\u00c3\2\2\u09b0\u09b2\5\6\4\2\u09b1\u09b0\3\2\2\2\u09b2\u09b3"+
		"\3\2\2\2\u09b3\u09b1\3\2\2\2\u09b3\u09b4\3\2\2\2\u09b4\u09b6\3\2\2\2\u09b5"+
		"\u09af\3\2\2\2\u09b5\u09b6\3\2\2\2\u09b6\u09b7\3\2\2\2\u09b7\u09bf\5\u00a2"+
		"R\2\u09b8\u09ba\5\6\4\2\u09b9\u09b8\3\2\2\2\u09ba\u09bb\3\2\2\2\u09bb"+
		"\u09b9\3\2\2\2\u09bb\u09bc\3\2\2\2\u09bc\u09bd\3\2\2\2\u09bd\u09be\5\u009e"+
		"P\2\u09be\u09c0\3\2\2\2\u09bf\u09b9\3\2\2\2\u09c0\u09c1\3\2\2\2\u09c1"+
		"\u09bf\3\2\2\2\u09c1\u09c2\3\2\2\2\u09c2\u09cc\3\2\2\2\u09c3\u09c5\5\6"+
		"\4\2\u09c4\u09c3\3\2\2\2\u09c5\u09c6\3\2\2\2\u09c6\u09c4\3\2\2\2\u09c6"+
		"\u09c7\3\2\2\2\u09c7\u09ca\3\2\2\2\u09c8\u09cb\5\u0082B\2\u09c9\u09cb"+
		"\5\u0084C\2\u09ca\u09c8\3\2\2\2\u09ca\u09c9\3\2\2\2\u09cb\u09cd\3\2\2"+
		"\2\u09cc\u09c4\3\2\2\2\u09cc\u09cd\3\2\2\2\u09cd\u09d5\3\2\2\2\u09ce\u09d0"+
		"\5\6\4\2\u09cf\u09ce\3\2\2\2\u09d0\u09d1\3\2\2\2\u09d1\u09cf\3\2\2\2\u09d1"+
		"\u09d2\3\2\2\2\u09d2\u09d3\3\2\2\2\u09d3\u09d4\7}\2\2\u09d4\u09d6\3\2"+
		"\2\2\u09d5\u09cf\3\2\2\2\u09d5\u09d6\3\2\2\2\u09d6\u0095\3\2\2\2\u09d7"+
		"\u09d9\7\6\2\2\u09d8\u09da\5\6\4\2\u09d9\u09d8\3\2\2\2\u09da\u09db\3\2"+
		"\2\2\u09db\u09d9\3\2\2\2\u09db\u09dc\3\2\2\2\u09dc\u09dd\3\2\2\2\u09dd"+
		"\u09e5\5\u0160\u00b1\2\u09de\u09e0\5\6\4\2\u09df\u09de\3\2\2\2\u09e0\u09e1"+
		"\3\2\2\2\u09e1\u09df\3\2\2\2\u09e1\u09e2\3\2\2\2\u09e2\u09e3\3\2\2\2\u09e3"+
		"\u09e4\5\u0098M\2\u09e4\u09e6\3\2\2\2\u09e5\u09df\3\2\2\2\u09e5\u09e6"+
		"\3\2\2\2\u09e6\u09ee\3\2\2\2\u09e7\u09e9\5\6\4\2\u09e8\u09e7\3\2\2\2\u09e9"+
		"\u09ea\3\2\2\2\u09ea\u09e8\3\2\2\2\u09ea\u09eb\3\2\2\2\u09eb\u09ec\3\2"+
		"\2\2\u09ec\u09ed\5\u0082B\2\u09ed\u09ef\3\2\2\2\u09ee\u09e8\3\2\2\2\u09ee"+
		"\u09ef\3\2\2\2\u09ef\u09f7\3\2\2\2\u09f0\u09f2\5\6\4\2\u09f1\u09f0\3\2"+
		"\2\2\u09f2\u09f3\3\2\2\2\u09f3\u09f1\3\2\2\2\u09f3\u09f4\3\2\2\2\u09f4"+
		"\u09f5\3\2\2\2\u09f5\u09f6\7}\2\2\u09f6\u09f8\3\2\2\2\u09f7\u09f1\3\2"+
		"\2\2\u09f7\u09f8\3\2\2\2\u09f8\u0097\3\2\2\2\u09f9\u09fb\7\36\2\2\u09fa"+
		"\u09fc\5\6\4\2\u09fb\u09fa\3\2\2\2\u09fc\u09fd\3\2\2\2\u09fd\u09fb\3\2"+
		"\2\2\u09fd\u09fe\3\2\2\2\u09fe\u0a00\3\2\2\2\u09ff\u09f9\3\2\2\2\u09ff"+
		"\u0a00\3\2\2\2\u0a00\u0a15\3\2\2\2\u0a01\u0a09\5\u009aN\2\u0a02\u0a04"+
		"\5\6\4\2\u0a03\u0a02\3\2\2\2\u0a04\u0a05\3\2\2\2\u0a05\u0a03\3\2\2\2\u0a05"+
		"\u0a06\3\2\2\2\u0a06\u0a07\3\2\2\2\u0a07\u0a08\5\u009cO\2\u0a08\u0a0a"+
		"\3\2\2\2\u0a09\u0a03\3\2\2\2\u0a09\u0a0a\3\2\2\2\u0a0a\u0a16\3\2\2\2\u0a0b"+
		"\u0a13\5\u009cO\2\u0a0c\u0a0e\5\6\4\2\u0a0d\u0a0c\3\2\2\2\u0a0e\u0a0f"+
		"\3\2\2\2\u0a0f\u0a0d\3\2\2\2\u0a0f\u0a10\3\2\2\2\u0a10\u0a11\3\2\2\2\u0a11"+
		"\u0a12\5\u009aN\2\u0a12\u0a14\3\2\2\2\u0a13\u0a0d\3\2\2\2\u0a13\u0a14"+
		"\3\2\2\2\u0a14\u0a16\3\2\2\2\u0a15\u0a01\3\2\2\2\u0a15\u0a0b\3\2\2\2\u0a16"+
		"\u0099\3\2\2\2\u0a17\u0a19\7\u00dd\2\2\u0a18\u0a1a\5\6\4\2\u0a19\u0a18"+
		"\3\2\2\2\u0a1a\u0a1b\3\2\2\2\u0a1b\u0a19\3\2\2\2\u0a1b\u0a1c\3\2\2\2\u0a1c"+
		"\u0a23\3\2\2\2\u0a1d\u0a1f\7\u00f4\2\2\u0a1e\u0a20\5\6\4\2\u0a1f\u0a1e"+
		"\3\2\2\2\u0a20\u0a21\3\2\2\2\u0a21\u0a1f\3\2\2\2\u0a21\u0a22\3\2\2\2\u0a22"+
		"\u0a24\3\2\2\2\u0a23\u0a1d\3\2\2\2\u0a23\u0a24\3\2\2\2\u0a24\u0a27\3\2"+
		"\2\2\u0a25\u0a28\7\u01ad\2\2\u0a26\u0a28\5\u01ae\u00d8\2\u0a27\u0a25\3"+
		"\2\2\2\u0a27\u0a26\3\2\2\2\u0a28\u009b\3\2\2\2\u0a29\u0a2b\7@\2\2\u0a2a"+
		"\u0a2c\5\6\4\2\u0a2b\u0a2a\3\2\2\2\u0a2c\u0a2d\3\2\2\2\u0a2d\u0a2b\3\2"+
		"\2\2\u0a2d\u0a2e\3\2\2\2\u0a2e\u0a35\3\2\2\2\u0a2f\u0a31\7\u00f4\2\2\u0a30"+
		"\u0a32\5\6\4\2\u0a31\u0a30\3\2\2\2\u0a32\u0a33\3\2\2\2\u0a33\u0a31\3\2"+
		"\2\2\u0a33\u0a34\3\2\2\2\u0a34\u0a36\3\2\2\2\u0a35\u0a2f\3\2\2\2\u0a35"+
		"\u0a36\3\2\2\2\u0a36\u0a39\3\2\2\2\u0a37\u0a3a\7\u01ad\2\2\u0a38\u0a3a"+
		"\5\u01ae\u00d8\2\u0a39\u0a37\3\2\2\2\u0a39\u0a38\3\2\2\2\u0a3a\u009d\3"+
		"\2\2\2\u0a3b\u0a3d\7\u00b1\2\2\u0a3c\u0a3e\5\6\4\2\u0a3d\u0a3c\3\2\2\2"+
		"\u0a3e\u0a3f\3\2\2\2\u0a3f\u0a3d\3\2\2\2\u0a3f\u0a40\3\2\2\2\u0a40\u0a42"+
		"\3\2\2\2\u0a41\u0a3b\3\2\2\2\u0a41\u0a42\3\2\2\2\u0a42\u0a43\3\2\2\2\u0a43"+
		"\u0a4b\7\u00dd\2\2\u0a44\u0a46\5\6\4\2\u0a45\u0a44\3\2\2\2\u0a46\u0a47"+
		"\3\2\2\2\u0a47\u0a45\3\2\2\2\u0a47\u0a48\3\2\2\2\u0a48\u0a49\3\2\2\2\u0a49"+
		"\u0a4a\7\u00f4\2\2\u0a4a\u0a4c\3\2\2\2\u0a4b\u0a45\3\2\2\2\u0a4b\u0a4c"+
		"\3\2\2\2\u0a4c\u0a4e\3\2\2\2\u0a4d\u0a4f\5\6\4\2\u0a4e\u0a4d\3\2\2\2\u0a4f"+
		"\u0a50\3\2\2\2\u0a50\u0a4e\3\2\2\2\u0a50\u0a51\3\2\2\2\u0a51\u0a52\3\2"+
		"\2\2\u0a52\u0a53\5\u00acW\2\u0a53\u0a98\3\2\2\2\u0a54\u0a56\7\u00b1\2"+
		"\2\u0a55\u0a57\5\6\4\2\u0a56\u0a55\3\2\2\2\u0a57\u0a58\3\2\2\2\u0a58\u0a56"+
		"\3\2\2\2\u0a58\u0a59\3\2\2\2\u0a59\u0a5b\3\2\2\2\u0a5a\u0a54\3\2\2\2\u0a5a"+
		"\u0a5b\3\2\2\2\u0a5b\u0a5c\3\2\2\2\u0a5c\u0a64\7@\2\2\u0a5d\u0a5f\5\6"+
		"\4\2\u0a5e\u0a5d\3\2\2\2\u0a5f\u0a60\3\2\2\2\u0a60\u0a5e\3\2\2\2\u0a60"+
		"\u0a61\3\2\2\2\u0a61\u0a62\3\2\2\2\u0a62\u0a63\7\u00f4\2\2\u0a63\u0a65"+
		"\3\2\2\2\u0a64\u0a5e\3\2\2\2\u0a64\u0a65\3\2\2\2\u0a65\u0a67\3\2\2\2\u0a66"+
		"\u0a68\5\6\4\2\u0a67\u0a66\3\2\2\2\u0a68\u0a69\3\2\2\2\u0a69\u0a67\3\2"+
		"\2\2\u0a69\u0a6a\3\2\2\2\u0a6a\u0a6b\3\2\2\2\u0a6b\u0a6c\5\u00acW\2\u0a6c"+
		"\u0a98\3\2\2\2\u0a6d\u0a85\7\u0098\2\2\u0a6e\u0a70\5\6\4\2\u0a6f\u0a6e"+
		"\3\2\2\2\u0a70\u0a71\3\2\2\2\u0a71\u0a6f\3\2\2\2\u0a71\u0a72\3\2\2\2\u0a72"+
		"\u0a79\3\2\2\2\u0a73\u0a75\7\u0169\2\2\u0a74\u0a76\5\6\4\2\u0a75\u0a74"+
		"\3\2\2\2\u0a76\u0a77\3\2\2\2\u0a77\u0a75\3\2\2\2\u0a77\u0a78\3\2\2\2\u0a78"+
		"\u0a7a\3\2\2\2\u0a79\u0a73\3\2\2\2\u0a79\u0a7a\3\2\2\2\u0a7a\u0a7b\3\2"+
		"\2\2\u0a7b\u0a83\7|\2\2\u0a7c\u0a7e\5\6\4\2\u0a7d\u0a7c\3\2\2\2\u0a7e"+
		"\u0a7f\3\2\2\2\u0a7f\u0a7d\3\2\2\2\u0a7f\u0a80\3\2\2\2\u0a80\u0a81\3\2"+
		"\2\2\u0a81\u0a82\7\u00f8\2\2\u0a82\u0a84\3\2\2\2\u0a83\u0a7d\3\2\2\2\u0a83"+
		"\u0a84\3\2\2\2\u0a84\u0a86\3\2\2\2\u0a85\u0a6f\3\2\2\2\u0a85\u0a86\3\2"+
		"\2\2\u0a86\u0a88\3\2\2\2\u0a87\u0a89\5\6\4\2\u0a88\u0a87\3\2\2\2\u0a89"+
		"\u0a8a\3\2\2\2\u0a8a\u0a88\3\2\2\2\u0a8a\u0a8b\3\2\2\2\u0a8b\u0a8c\3\2"+
		"\2\2\u0a8c\u0a8d\t\5\2\2\u0a8d\u0a98\3\2\2\2\u0a8e\u0a90\7\u017f\2\2\u0a8f"+
		"\u0a91\5\6\4\2\u0a90\u0a8f\3\2\2\2\u0a91\u0a92\3\2\2\2\u0a92\u0a90\3\2"+
		"\2\2\u0a92\u0a93\3\2\2\2\u0a93\u0a95\3\2\2\2\u0a94\u0a8e\3\2\2\2\u0a94"+
		"\u0a95\3\2\2\2\u0a95\u0a96\3\2\2\2\u0a96\u0a98\7%\2\2\u0a97\u0a41\3\2"+
		"\2\2\u0a97\u0a5a\3\2\2\2\u0a97\u0a6d\3\2\2\2\u0a97\u0a94\3\2\2\2\u0a98"+
		"\u009f\3\2\2\2\u0a99\u0af3\5\u009eP\2\u0a9a\u0af3\7\u016f\2\2\u0a9b\u0af3"+
		"\7/\2\2\u0a9c\u0a9e\7\u017f\2\2\u0a9d\u0a9f\5\6\4\2\u0a9e\u0a9d\3\2\2"+
		"\2\u0a9f\u0aa0\3\2\2\2\u0aa0\u0a9e\3\2\2\2\u0aa0\u0aa1\3\2\2\2\u0aa1\u0aa3"+
		"\3\2\2\2\u0aa2\u0a9c\3\2\2\2\u0aa2\u0aa3\3\2\2\2\u0aa3\u0aa4\3\2\2\2\u0aa4"+
		"\u0af3\7-\2\2\u0aa5\u0aad\7\u0118\2\2\u0aa6\u0aa8\5\6\4\2\u0aa7\u0aa6"+
		"\3\2\2\2\u0aa8\u0aa9\3\2\2\2\u0aa9\u0aa7\3\2\2\2\u0aa9\u0aaa\3\2\2\2\u0aaa"+
		"\u0aab\3\2\2\2\u0aab\u0aac\5\u00a6T\2\u0aac\u0aae\3\2\2\2\u0aad\u0aa7"+
		"\3\2\2\2\u0aad\u0aae\3\2\2\2\u0aae\u0af3\3\2\2\2\u0aaf\u0ab1\7\u017f\2"+
		"\2\u0ab0\u0ab2\5\6\4\2\u0ab1\u0ab0\3\2\2\2\u0ab2\u0ab3\3\2\2\2\u0ab3\u0ab1"+
		"\3\2\2\2\u0ab3\u0ab4\3\2\2\2\u0ab4\u0ab6\3\2\2\2\u0ab5\u0aaf\3\2\2\2\u0ab5"+
		"\u0ab6\3\2\2\2\u0ab6\u0ab7\3\2\2\2\u0ab7\u0af3\7Z\2\2\u0ab8\u0af3\7\u0130"+
		"\2\2\u0ab9\u0abb\7\u017f\2\2\u0aba\u0abc\5\6\4\2\u0abb\u0aba\3\2\2\2\u0abc"+
		"\u0abd\3\2\2\2\u0abd\u0abb\3\2\2\2\u0abd\u0abe\3\2\2\2\u0abe\u0ac0\3\2"+
		"\2\2\u0abf\u0ab9\3\2\2\2\u0abf\u0ac0\3\2\2\2\u0ac0\u0ac1\3\2\2\2\u0ac1"+
		"\u0ac3\7\u00f2\2\2\u0ac2\u0ac4\5\6\4\2\u0ac3\u0ac2\3\2\2\2\u0ac4\u0ac5"+
		"\3\2\2\2\u0ac5\u0ac3\3\2\2\2\u0ac5\u0ac6\3\2\2\2\u0ac6\u0ac7\3\2\2\2\u0ac7"+
		"\u0ac8\7z\2\2\u0ac8\u0af3\3\2\2\2\u0ac9\u0acb\7k\2\2\u0aca\u0acc\5\6\4"+
		"\2\u0acb\u0aca\3\2\2\2\u0acc\u0acd\3\2\2\2\u0acd\u0acb\3\2\2\2\u0acd\u0ace"+
		"\3\2\2\2\u0ace\u0ad5\3\2\2\2\u0acf\u0ad1\7\u00cf\2\2\u0ad0\u0ad2\5\6\4"+
		"\2\u0ad1\u0ad0\3\2\2\2\u0ad2\u0ad3\3\2\2\2\u0ad3\u0ad1\3\2\2\2\u0ad3\u0ad4"+
		"\3\2\2\2\u0ad4\u0ad6\3\2\2\2\u0ad5\u0acf\3\2\2\2\u0ad5\u0ad6\3\2\2\2\u0ad6"+
		"\u0ad7\3\2\2\2\u0ad7\u0ad8\5\u00a4S\2\u0ad8\u0af3\3\2\2\2\u0ad9\u0adb"+
		"\7X\2\2\u0ada\u0adc\5\6\4\2\u0adb\u0ada\3\2\2\2\u0adc\u0add\3\2\2\2\u0add"+
		"\u0adb\3\2\2\2\u0add\u0ade\3\2\2\2\u0ade\u0ae0\3\2\2\2\u0adf\u0ad9\3\2"+
		"\2\2\u0adf\u0ae0\3\2\2\2\u0ae0\u0ae1\3\2\2\2\u0ae1\u0ae9\7\u00d4\2\2\u0ae2"+
		"\u0ae4\5\6\4\2\u0ae3\u0ae2\3\2\2\2\u0ae4\u0ae5\3\2\2\2\u0ae5\u0ae3\3\2"+
		"\2\2\u0ae5\u0ae6\3\2\2\2\u0ae6\u0ae7\3\2\2\2\u0ae7\u0ae8\7\u00c3\2\2\u0ae8"+
		"\u0aea\3\2\2\2\u0ae9\u0ae3\3\2\2\2\u0ae9\u0aea\3\2\2\2\u0aea\u0aec\3\2"+
		"\2\2\u0aeb\u0aed\5\6\4\2\u0aec\u0aeb\3\2\2\2\u0aed\u0aee\3\2\2\2\u0aee"+
		"\u0aec\3\2\2\2\u0aee\u0aef\3\2\2\2\u0aef\u0af0\3\2\2\2\u0af0\u0af1\5\u00a2"+
		"R\2\u0af1\u0af3\3\2\2\2\u0af2\u0a99\3\2\2\2\u0af2\u0a9a\3\2\2\2\u0af2"+
		"\u0a9b\3\2\2\2\u0af2\u0aa2\3\2\2\2\u0af2\u0aa5\3\2\2\2\u0af2\u0ab5\3\2"+
		"\2\2\u0af2\u0ab8\3\2\2\2\u0af2\u0abf\3\2\2\2\u0af2\u0ac9\3\2\2\2\u0af2"+
		"\u0adf\3\2\2\2\u0af3\u00a1\3\2\2\2\u0af4\u0af5\5\u01ae\u00d8\2\u0af5\u00a3"+
		"\3\2\2\2\u0af6\u0b04\5\4\3\2\u0af7\u0b04\7\u01ac\2\2\u0af8\u0b04\5\u01ae"+
		"\u00d8\2\u0af9\u0b01\7_\2\2\u0afa\u0afc\5\6\4\2\u0afb\u0afa\3\2\2\2\u0afc"+
		"\u0afd\3\2\2\2\u0afd\u0afb\3\2\2\2\u0afd\u0afe\3\2\2\2\u0afe\u0aff\3\2"+
		"\2\2\u0aff\u0b00\7\u0179\2\2\u0b00\u0b02\3\2\2\2\u0b01\u0afb\3\2\2\2\u0b01"+
		"\u0b02\3\2\2\2\u0b02\u0b04\3\2\2\2\u0b03\u0af6\3\2\2\2\u0b03\u0af7\3\2"+
		"\2\2\u0b03\u0af8\3\2\2\2\u0b03\u0af9\3\2\2\2\u0b04\u00a5\3\2\2\2\u0b05"+
		"\u0b07\7\u0146\2\2\u0b06\u0b08\5\6\4\2\u0b07\u0b06\3\2\2\2\u0b08\u0b09"+
		"\3\2\2\2\u0b09\u0b07\3\2\2\2\u0b09\u0b0a\3\2\2\2\u0b0a\u0b0b\3\2\2\2\u0b0b"+
		"\u0b0c\5\u00aaV\2\u0b0c\u0b40\3\2\2\2\u0b0d\u0b0f\7\u017f\2\2\u0b0e\u0b10"+
		"\5\6\4\2\u0b0f\u0b0e\3\2\2\2\u0b10\u0b11\3\2\2\2\u0b11\u0b0f\3\2\2\2\u0b11"+
		"\u0b12\3\2\2\2\u0b12\u0b14\3\2\2\2\u0b13\u0b0d\3\2\2\2\u0b13\u0b14\3\2"+
		"\2\2\u0b14\u0b15\3\2\2\2\u0b15\u0b40\7\"\2\2\u0b16\u0b18\7\u017f\2\2\u0b17"+
		"\u0b19\5\6\4\2\u0b18\u0b17\3\2\2\2\u0b19\u0b1a\3\2\2\2\u0b1a\u0b18\3\2"+
		"\2\2\u0b1a\u0b1b\3\2\2\2\u0b1b\u0b1d\3\2\2\2\u0b1c\u0b16\3\2\2\2\u0b1c"+
		"\u0b1d\3\2\2\2\u0b1d\u0b1e\3\2\2\2\u0b1e\u0b20\7\u00f2\2\2\u0b1f\u0b21"+
		"\5\6\4\2\u0b20\u0b1f\3\2\2\2\u0b21\u0b22\3\2\2\2\u0b22\u0b20\3\2\2\2\u0b22"+
		"\u0b23\3\2\2\2\u0b23\u0b24\3\2\2\2\u0b24\u0b25\7+\2\2\u0b25\u0b40\3\2"+
		"\2\2\u0b26\u0b28\7\u017f\2\2\u0b27\u0b29\5\6\4\2\u0b28\u0b27\3\2\2\2\u0b29"+
		"\u0b2a\3\2\2\2\u0b2a\u0b28\3\2\2\2\u0b2a\u0b2b\3\2\2\2\u0b2b\u0b2d\3\2"+
		"\2\2\u0b2c\u0b26\3\2\2\2\u0b2c\u0b2d\3\2\2\2\u0b2d\u0b2e\3\2\2\2\u0b2e"+
		"\u0b40\7{\2\2\u0b2f\u0b31\7\u017f\2\2\u0b30\u0b32\5\6\4\2\u0b31\u0b30"+
		"\3\2\2\2\u0b32\u0b33\3\2\2\2\u0b33\u0b31\3\2\2\2\u0b33\u0b34\3\2\2\2\u0b34"+
		"\u0b36\3\2\2\2\u0b35\u0b2f\3\2\2\2\u0b35\u0b36\3\2\2\2\u0b36\u0b37\3\2"+
		"\2\2\u0b37\u0b39\7\u00a7\2\2\u0b38\u0b3a\5\6\4\2\u0b39\u0b38\3\2\2\2\u0b3a"+
		"\u0b3b\3\2\2\2\u0b3b\u0b39\3\2\2\2\u0b3b\u0b3c\3\2\2\2\u0b3c\u0b3d\3\2"+
		"\2\2\u0b3d\u0b3e\5\u00a8U\2\u0b3e\u0b40\3\2\2\2\u0b3f\u0b05\3\2\2\2\u0b3f"+
		"\u0b13\3\2\2\2\u0b3f\u0b1c\3\2\2\2\u0b3f\u0b2c\3\2\2\2\u0b3f\u0b35\3\2"+
		"\2\2\u0b40\u00a7\3\2\2\2\u0b41\u0b42\7\u01ac\2\2\u0b42\u00a9\3\2\2\2\u0b43"+
		"\u0b46\7\u01ad\2\2\u0b44\u0b46\5\u01ae\u00d8\2\u0b45\u0b43\3\2\2\2\u0b45"+
		"\u0b44\3\2\2\2\u0b46\u00ab\3\2\2\2\u0b47\u0b65\5\u011a\u008e\2\u0b48\u0b58"+
		"\5\u01ae\u00d8\2\u0b49\u0b4b\5\6\4\2\u0b4a\u0b49\3\2\2\2\u0b4b\u0b4c\3"+
		"\2\2\2\u0b4c\u0b4a\3\2\2\2\u0b4c\u0b4d\3\2\2\2\u0b4d\u0b4e\3\2\2\2\u0b4e"+
		"\u0b56\7\u010d\2\2\u0b4f\u0b51\5\6\4\2\u0b50\u0b4f\3\2\2\2\u0b51\u0b52"+
		"\3\2\2\2\u0b52\u0b50\3\2\2\2\u0b52\u0b53\3\2\2\2\u0b53\u0b54\3\2\2\2\u0b54"+
		"\u0b55\5\u011a\u008e\2\u0b55\u0b57\3\2\2\2\u0b56\u0b50\3\2\2\2\u0b56\u0b57"+
		"\3\2\2\2\u0b57\u0b59\3\2\2\2\u0b58\u0b4a\3\2\2\2\u0b58\u0b59\3\2\2\2\u0b59"+
		"\u0b65\3\2\2\2\u0b5a\u0b62\7\u010d\2\2\u0b5b\u0b5d\5\6\4\2\u0b5c\u0b5b"+
		"\3\2\2\2\u0b5d\u0b5e\3\2\2\2\u0b5e\u0b5c\3\2\2\2\u0b5e\u0b5f\3\2\2\2\u0b5f"+
		"\u0b60\3\2\2\2\u0b60\u0b61\5\u011a\u008e\2\u0b61\u0b63\3\2\2\2\u0b62\u0b5c"+
		"\3\2\2\2\u0b62\u0b63\3\2\2\2\u0b63\u0b65\3\2\2\2\u0b64\u0b47\3\2\2\2\u0b64"+
		"\u0b48\3\2\2\2\u0b64\u0b5a\3\2\2\2\u0b65\u00ad\3\2\2\2\u0b66\u0b6e\7b"+
		"\2\2\u0b67\u0b69\5\6\4\2\u0b68\u0b67\3\2\2\2\u0b69\u0b6a\3\2\2\2\u0b6a"+
		"\u0b68\3\2\2\2\u0b6a\u0b6b\3\2\2\2\u0b6b\u0b6c\3\2\2\2\u0b6c\u0b6d\7\u0184"+
		"\2\2\u0b6d\u0b6f\3\2\2\2\u0b6e\u0b68\3\2\2\2\u0b6e\u0b6f\3\2\2\2\u0b6f"+
		"\u0b7d\3\2\2\2\u0b70\u0b78\7e\2\2\u0b71\u0b73\5\6\4\2\u0b72\u0b71\3\2"+
		"\2\2\u0b73\u0b74\3\2\2\2\u0b74\u0b72\3\2\2\2\u0b74\u0b75\3\2\2\2\u0b75"+
		"\u0b76\3\2\2\2\u0b76\u0b77\7\u0183\2\2\u0b77\u0b79\3\2\2\2\u0b78\u0b72"+
		"\3\2\2\2\u0b78\u0b79\3\2\2\2\u0b79\u0b7d\3\2\2\2\u0b7a\u0b7d\7f\2\2\u0b7b"+
		"\u0b7d\7\u0167\2\2\u0b7c\u0b66\3\2\2\2\u0b7c\u0b70\3\2\2\2\u0b7c\u0b7a"+
		"\3\2\2\2\u0b7c\u0b7b\3\2\2\2\u0b7d\u00af\3\2\2\2\u0b7e\u0b7f\5\u0258\u012d"+
		"\2\u0b7f\u00b1\3\2\2\2\u0b80\u0b81\7\u01af\2\2\u0b81\u00b3\3\2\2\2\u0b82"+
		"\u0b84\7\36\2\2\u0b83\u0b85\5\6\4\2\u0b84\u0b83\3\2\2\2\u0b85\u0b86\3"+
		"\2\2\2\u0b86\u0b84\3\2\2\2\u0b86\u0b87\3\2\2\2\u0b87\u0b89\3\2\2\2\u0b88"+
		"\u0b82\3\2\2\2\u0b88\u0b89\3\2\2\2\u0b89\u0b8a\3\2\2\2\u0b8a\u0b92\7|"+
		"\2\2\u0b8b\u0b8d\5\6\4\2\u0b8c\u0b8b\3\2\2\2\u0b8d\u0b8e\3\2\2\2\u0b8e"+
		"\u0b8c\3\2\2\2\u0b8e\u0b8f\3\2\2\2\u0b8f\u0b90\3\2\2\2\u0b90\u0b91\5\36"+
		"\20\2\u0b91\u0b93\3\2\2\2\u0b92\u0b8c\3\2\2\2\u0b92\u0b93\3\2\2\2\u0b93"+
		"\u00b5\3\2\2\2\u0b94\u0b96\7\u00fb\2\2\u0b95\u0b97\5\6\4\2\u0b96\u0b95"+
		"\3\2\2\2\u0b97\u0b98\3\2\2\2\u0b98\u0b96\3\2\2\2\u0b98\u0b99\3\2\2\2\u0b99"+
		"\u0b9b\3\2\2\2\u0b9a\u0b94\3\2\2\2\u0b9a\u0b9b\3\2\2\2\u0b9b\u0b9c\3\2"+
		"\2\2\u0b9c\u0ba4\7\u009c\2\2\u0b9d\u0b9f\5\6\4\2\u0b9e\u0b9d\3\2\2\2\u0b9f"+
		"\u0ba0\3\2\2\2\u0ba0\u0b9e\3\2\2\2\u0ba0\u0ba1\3\2\2\2\u0ba1\u0ba2\3\2"+
		"\2\2\u0ba2\u0ba3\5\36\20\2\u0ba3\u0ba5\3\2\2\2\u0ba4\u0b9e\3\2\2\2\u0ba4"+
		"\u0ba5\3\2\2\2\u0ba5\u00b7\3\2\2\2\u0ba6\u0ba8\7\u00fb\2\2\u0ba7\u0ba9"+
		"\5\6\4\2\u0ba8\u0ba7\3\2\2\2\u0ba9\u0baa\3\2\2\2\u0baa\u0ba8\3\2\2\2\u0baa"+
		"\u0bab\3\2\2\2\u0bab\u0bad\3\2\2\2\u0bac\u0ba6\3\2\2\2\u0bac\u0bad\3\2"+
		"\2\2\u0bad\u0bae\3\2\2\2\u0bae\u0bb0\7\u0146\2\2\u0baf\u0bb1\5\6\4\2\u0bb0"+
		"\u0baf\3\2\2\2\u0bb1\u0bb2\3\2\2\2\u0bb2\u0bb0\3\2\2\2\u0bb2\u0bb3\3\2"+
		"\2\2\u0bb3\u0bb4\3\2\2\2\u0bb4\u0bbc\7\u0099\2\2\u0bb5\u0bb7\5\6\4\2\u0bb6"+
		"\u0bb5\3\2\2\2\u0bb7\u0bb8\3\2\2\2\u0bb8\u0bb6\3\2\2\2\u0bb8\u0bb9\3\2"+
		"\2\2\u0bb9\u0bba\3\2\2\2\u0bba\u0bbb\5\36\20\2\u0bbb\u0bbd\3\2\2\2\u0bbc"+
		"\u0bb6\3\2\2\2\u0bbc\u0bbd\3\2\2\2\u0bbd\u00b9\3\2\2\2\u0bbe\u0bc6\7\u00ce"+
		"\2\2\u0bbf\u0bc1\5\6\4\2\u0bc0\u0bbf\3\2\2\2\u0bc1\u0bc2\3\2\2\2\u0bc2"+
		"\u0bc0\3\2\2\2\u0bc2\u0bc3\3\2\2\2\u0bc3\u0bc4\3\2\2\2\u0bc4\u0bc5\7\u00d4"+
		"\2\2\u0bc5\u0bc7\3\2\2\2\u0bc6\u0bc0\3\2\2\2\u0bc6\u0bc7\3\2\2\2\u0bc7"+
		"\u0bcf\3\2\2\2\u0bc8\u0bca\5\6\4\2\u0bc9\u0bc8\3\2\2\2\u0bca\u0bcb\3\2"+
		"\2\2\u0bcb\u0bc9\3\2\2\2\u0bcb\u0bcc\3\2\2\2\u0bcc\u0bcd\3\2\2\2\u0bcd"+
		"\u0bce\5\36\20\2\u0bce\u0bd0\3\2\2\2\u0bcf\u0bc9\3\2\2\2\u0bcf\u0bd0\3"+
		"\2\2\2\u0bd0\u00bb\3\2\2\2\u0bd1\u0bd3\7a\2\2\u0bd2\u0bd4\5\6\4\2\u0bd3"+
		"\u0bd2\3\2\2\2\u0bd4\u0bd5\3\2\2\2\u0bd5\u0bd3\3\2\2\2\u0bd5\u0bd6\3\2"+
		"\2\2\u0bd6\u0bd7\3\2\2\2\u0bd7\u0bdb\7u\2\2\u0bd8\u0bda\5\6\4\2\u0bd9"+
		"\u0bd8\3\2\2\2\u0bda\u0bdd\3\2\2\2\u0bdb\u0bd9\3\2\2\2\u0bdb\u0bdc\3\2"+
		"\2\2\u0bdc\u0bde\3\2\2\2\u0bdd\u0bdb\3\2\2\2\u0bde\u0be2\7\u01a9\2\2\u0bdf"+
		"\u0be1\5\6\4\2\u0be0\u0bdf\3\2\2\2\u0be1\u0be4\3\2\2\2\u0be2\u0be0\3\2"+
		"\2\2\u0be2\u0be3\3\2\2\2\u0be3\u0bec\3\2\2\2\u0be4\u0be2\3\2\2\2\u0be5"+
		"\u0be9\5\u00be`\2\u0be6\u0be8\5\6\4\2\u0be7\u0be6\3\2\2\2\u0be8\u0beb"+
		"\3\2\2\2\u0be9\u0be7\3\2\2\2\u0be9\u0bea\3\2\2\2\u0bea\u0bed\3\2\2\2\u0beb"+
		"\u0be9\3\2\2\2\u0bec\u0be5\3\2\2\2\u0bec\u0bed\3\2\2\2\u0bed\u0bf5\3\2"+
		"\2\2\u0bee\u0bf2\5\u00c0a\2\u0bef\u0bf1\5\6\4\2\u0bf0\u0bef\3\2\2\2\u0bf1"+
		"\u0bf4\3\2\2\2\u0bf2\u0bf0\3\2\2\2\u0bf2\u0bf3\3\2\2\2\u0bf3\u0bf6\3\2"+
		"\2\2\u0bf4\u0bf2\3\2\2\2\u0bf5\u0bee\3\2\2\2\u0bf5\u0bf6\3\2\2\2\u0bf6"+
		"\u0bfe\3\2\2\2\u0bf7\u0bfb\5\u00c2b\2\u0bf8\u0bfa\5\6\4\2\u0bf9\u0bf8"+
		"\3\2\2\2\u0bfa\u0bfd\3\2\2\2\u0bfb\u0bf9\3\2\2\2\u0bfb\u0bfc\3\2\2\2\u0bfc"+
		"\u0bff\3\2\2\2\u0bfd\u0bfb\3\2\2\2\u0bfe\u0bf7\3\2\2\2\u0bfe\u0bff\3\2"+
		"\2\2\u0bff\u0c07\3\2\2\2\u0c00\u0c04\5\u00c4c\2\u0c01\u0c03\5\6\4\2\u0c02"+
		"\u0c01\3\2\2\2\u0c03\u0c06\3\2\2\2\u0c04\u0c02\3\2\2\2\u0c04\u0c05\3\2"+
		"\2\2\u0c05\u0c08\3\2\2\2\u0c06\u0c04\3\2\2\2\u0c07\u0c00\3\2\2\2\u0c07"+
		"\u0c08\3\2\2\2\u0c08\u0c10\3\2\2\2\u0c09\u0c0d\5\u00c6d\2\u0c0a\u0c0c"+
		"\5\6\4\2\u0c0b\u0c0a\3\2\2\2\u0c0c\u0c0f\3\2\2\2\u0c0d\u0c0b\3\2\2\2\u0c0d"+
		"\u0c0e\3\2\2\2\u0c0e\u0c11\3\2\2\2\u0c0f\u0c0d\3\2\2\2\u0c10\u0c09\3\2"+
		"\2\2\u0c10\u0c11\3\2\2\2\u0c11\u00bd\3\2\2\2\u0c12\u0c14\7\u00a4\2\2\u0c13"+
		"\u0c15\5\6\4\2\u0c14\u0c13\3\2\2\2\u0c15\u0c16\3\2\2\2\u0c16\u0c14\3\2"+
		"\2\2\u0c16\u0c17\3\2\2\2\u0c17\u0c18\3\2\2\2\u0c18\u0c1c\7\u013b\2\2\u0c19"+
		"\u0c1b\5\6\4\2\u0c1a\u0c19\3\2\2\2\u0c1b\u0c1e\3\2\2\2\u0c1c\u0c1a\3\2"+
		"\2\2\u0c1c\u0c1d\3\2\2\2\u0c1d\u0c1f\3\2\2\2\u0c1e\u0c1c\3\2\2\2\u0c1f"+
		"\u0c23\7\u01a9\2\2\u0c20\u0c22\5\6\4\2\u0c21\u0c20\3\2\2\2\u0c22\u0c25"+
		"\3\2\2\2\u0c23\u0c21\3\2\2\2\u0c23\u0c24\3\2\2\2\u0c24\u0c4b\3\2\2\2\u0c25"+
		"\u0c23\3\2\2\2\u0c26\u0c30\5\u00c8e\2\u0c27\u0c29\5\6\4\2\u0c28\u0c27"+
		"\3\2\2\2\u0c29\u0c2c\3\2\2\2\u0c2a\u0c28\3\2\2\2\u0c2a\u0c2b\3\2\2\2\u0c2b"+
		"\u0c2d\3\2\2\2\u0c2c\u0c2a\3\2\2\2\u0c2d\u0c2f\5\u00d0i\2\u0c2e\u0c2a"+
		"\3\2\2\2\u0c2f\u0c32\3\2\2\2\u0c30\u0c2e\3\2\2\2\u0c30\u0c31\3\2\2\2\u0c31"+
		"\u0c42\3\2\2\2\u0c32\u0c30\3\2\2\2\u0c33\u0c42\5\u00ccg\2\u0c34\u0c3e"+
		"\5\u00caf\2\u0c35\u0c37\5\6\4\2\u0c36\u0c35\3\2\2\2\u0c37\u0c3a\3\2\2"+
		"\2\u0c38\u0c36\3\2\2\2\u0c38\u0c39\3\2\2\2\u0c39\u0c3b\3\2\2\2\u0c3a\u0c38"+
		"\3\2\2\2\u0c3b\u0c3d\5\u00d0i\2\u0c3c\u0c38\3\2\2\2\u0c3d\u0c40\3\2\2"+
		"\2\u0c3e\u0c3c\3\2\2\2\u0c3e\u0c3f\3\2\2\2\u0c3f\u0c42\3\2\2\2\u0c40\u0c3e"+
		"\3\2\2\2\u0c41\u0c26\3\2\2\2\u0c41\u0c33\3\2\2\2\u0c41\u0c34\3\2\2\2\u0c42"+
		"\u0c46\3\2\2\2\u0c43\u0c45\5\6\4\2\u0c44\u0c43\3\2\2\2\u0c45\u0c48\3\2"+
		"\2\2\u0c46\u0c44\3\2\2\2\u0c46\u0c47\3\2\2\2\u0c47\u0c4a\3\2\2\2\u0c48"+
		"\u0c46\3\2\2\2\u0c49\u0c41\3\2\2\2\u0c4a\u0c4d\3\2\2\2\u0c4b\u0c49\3\2"+
		"\2\2\u0c4b\u0c4c\3\2\2\2\u0c4c\u00bf\3\2\2\2\u0c4d\u0c4b\3\2\2\2\u0c4e"+
		"\u0c50\7\u0181\2\2\u0c4f\u0c51\5\6\4\2\u0c50\u0c4f\3\2\2\2\u0c51\u0c52"+
		"\3\2\2\2\u0c52\u0c50\3\2\2\2\u0c52\u0c53\3\2\2\2\u0c53\u0c54\3\2\2\2\u0c54"+
		"\u0c58\7\u013b\2\2\u0c55\u0c57\5\6\4\2\u0c56\u0c55\3\2\2\2\u0c57\u0c5a"+
		"\3\2\2\2\u0c58\u0c56\3\2\2\2\u0c58\u0c59\3\2\2\2\u0c59\u0c5b\3\2\2\2\u0c5a"+
		"\u0c58\3\2\2\2\u0c5b\u0c5f\7\u01a9\2\2\u0c5c\u0c5e\5\6\4\2\u0c5d\u0c5c"+
		"\3\2\2\2\u0c5e\u0c61\3\2\2\2\u0c5f\u0c5d\3\2\2\2\u0c5f\u0c60\3\2\2\2\u0c60"+
		"\u0c6b\3\2\2\2\u0c61\u0c5f\3\2\2\2\u0c62\u0c66\5\u00d0i\2\u0c63\u0c65"+
		"\5\6\4\2\u0c64\u0c63\3\2\2\2\u0c65\u0c68\3\2\2\2\u0c66\u0c64\3\2\2\2\u0c66"+
		"\u0c67\3\2\2\2\u0c67\u0c6a\3\2\2\2\u0c68\u0c66\3\2\2\2\u0c69\u0c62\3\2"+
		"\2\2\u0c6a\u0c6d\3\2\2\2\u0c6b\u0c69\3\2\2\2\u0c6b\u0c6c\3\2\2\2\u0c6c"+
		"\u00c1\3\2\2\2\u0c6d\u0c6b\3\2\2\2\u0c6e\u0c70\7\u00e0\2\2\u0c6f\u0c71"+
		"\5\6\4\2\u0c70\u0c6f\3\2\2\2\u0c71\u0c72\3\2\2\2\u0c72\u0c70\3\2\2\2\u0c72"+
		"\u0c73\3\2\2\2\u0c73\u0c74\3\2\2\2\u0c74\u0c78\7\u013b\2\2\u0c75\u0c77"+
		"\5\6\4\2\u0c76\u0c75\3\2\2\2\u0c77\u0c7a\3\2\2\2\u0c78\u0c76\3\2\2\2\u0c78"+
		"\u0c79\3\2\2\2\u0c79\u0c7b\3\2\2\2\u0c7a\u0c78\3\2\2\2\u0c7b\u0c7f\7\u01a9"+
		"\2\2\u0c7c\u0c7e\5\6\4\2\u0c7d\u0c7c\3\2\2\2\u0c7e\u0c81\3\2\2\2\u0c7f"+
		"\u0c7d\3\2\2\2\u0c7f\u0c80\3\2\2\2\u0c80\u0c8b\3\2\2\2\u0c81\u0c7f\3\2"+
		"\2\2\u0c82\u0c86\5\u00d0i\2\u0c83\u0c85\5\6\4\2\u0c84\u0c83\3\2\2\2\u0c85"+
		"\u0c88\3\2\2\2\u0c86\u0c84\3\2\2\2\u0c86\u0c87\3\2\2\2\u0c87\u0c8a\3\2"+
		"\2\2\u0c88\u0c86\3\2\2\2\u0c89\u0c82\3\2\2\2\u0c8a\u0c8d\3\2\2\2\u0c8b"+
		"\u0c89\3\2\2\2\u0c8b\u0c8c\3\2\2\2\u0c8c\u00c3\3\2\2\2\u0c8d\u0c8b\3\2"+
		"\2\2\u0c8e\u0c90\7\u0128\2\2\u0c8f\u0c91\5\6\4\2\u0c90\u0c8f\3\2\2\2\u0c91"+
		"\u0c92\3\2\2\2\u0c92\u0c90\3\2\2\2\u0c92\u0c93\3\2\2\2\u0c93\u0c94\3\2"+
		"\2\2\u0c94\u0c98\7\u013b\2\2\u0c95\u0c97\5\6\4\2\u0c96\u0c95\3\2\2\2\u0c97"+
		"\u0c9a\3\2\2\2\u0c98\u0c96\3\2\2\2\u0c98\u0c99\3\2\2\2\u0c99\u0c9b\3\2"+
		"\2\2\u0c9a\u0c98\3\2\2\2\u0c9b\u0c9f\7\u01a9\2\2\u0c9c\u0c9e\5\6\4\2\u0c9d"+
		"\u0c9c\3\2\2\2\u0c9e\u0ca1\3\2\2\2\u0c9f\u0c9d\3\2\2\2\u0c9f\u0ca0\3\2"+
		"\2\2\u0ca0\u0cb7\3\2\2\2\u0ca1\u0c9f\3\2\2\2\u0ca2\u0cac\5\u00ccg\2\u0ca3"+
		"\u0ca5\5\6\4\2\u0ca4\u0ca3\3\2\2\2\u0ca5\u0ca8\3\2\2\2\u0ca6\u0ca4\3\2"+
		"\2\2\u0ca6\u0ca7\3\2\2\2\u0ca7\u0ca9\3\2\2\2\u0ca8\u0ca6\3\2\2\2\u0ca9"+
		"\u0cab\5\u00fe\u0080\2\u0caa\u0ca6\3\2\2\2\u0cab\u0cae\3\2\2\2\u0cac\u0caa"+
		"\3\2\2\2\u0cac\u0cad\3\2\2\2\u0cad\u0cb2\3\2\2\2\u0cae\u0cac\3\2\2\2\u0caf"+
		"\u0cb1\5\6\4\2\u0cb0\u0caf\3\2\2\2\u0cb1\u0cb4\3\2\2\2\u0cb2\u0cb0\3\2"+
		"\2\2\u0cb2\u0cb3\3\2\2\2\u0cb3\u0cb6\3\2\2\2\u0cb4\u0cb2\3\2\2\2\u0cb5"+
		"\u0ca2\3\2\2\2\u0cb6\u0cb9\3\2\2\2\u0cb7\u0cb5\3\2\2\2\u0cb7\u0cb8\3\2"+
		"\2\2\u0cb8\u00c5\3\2\2\2\u0cb9\u0cb7\3\2\2\2\u0cba\u0cbc\7\u0138\2\2\u0cbb"+
		"\u0cbd\5\6\4\2\u0cbc\u0cbb\3\2\2\2\u0cbd\u0cbe\3\2\2\2\u0cbe\u0cbc\3\2"+
		"\2\2\u0cbe\u0cbf\3\2\2\2\u0cbf\u0cc0\3\2\2\2\u0cc0\u0cc4\7\u013b\2\2\u0cc1"+
		"\u0cc3\5\6\4\2\u0cc2\u0cc1\3\2\2\2\u0cc3\u0cc6\3\2\2\2\u0cc4\u0cc2\3\2"+
		"\2\2\u0cc4\u0cc5\3\2\2\2\u0cc5\u0cc7\3\2\2\2\u0cc6\u0cc4\3\2\2\2\u0cc7"+
		"\u0ccb\7\u01a9\2\2\u0cc8\u0cca\5\6\4\2\u0cc9\u0cc8\3\2\2\2\u0cca\u0ccd"+
		"\3\2\2\2\u0ccb\u0cc9\3\2\2\2\u0ccb\u0ccc\3\2\2\2\u0ccc\u0cd7\3\2\2\2\u0ccd"+
		"\u0ccb\3\2\2\2\u0cce\u0cd2\5\u015e\u00b0\2\u0ccf\u0cd1\5\6\4\2\u0cd0\u0ccf"+
		"\3\2\2\2\u0cd1\u0cd4\3\2\2\2\u0cd2\u0cd0\3\2\2\2\u0cd2\u0cd3\3\2\2\2\u0cd3"+
		"\u0cd6\3\2\2\2\u0cd4\u0cd2\3\2\2\2\u0cd5\u0cce\3\2\2\2\u0cd6\u0cd9\3\2"+
		"\2\2\u0cd7\u0cd5\3\2\2\2\u0cd7\u0cd8\3\2\2\2\u0cd8\u00c7\3\2\2\2\u0cd9"+
		"\u0cd7\3\2\2\2\u0cda\u0cdc\7\u00a3\2\2\u0cdb\u0cdd\5\6\4\2\u0cdc\u0cdb"+
		"\3\2\2\2\u0cdd\u0cde\3\2\2\2\u0cde\u0cdc\3\2\2\2\u0cde\u0cdf\3\2\2\2\u0cdf"+
		"\u0ce0\3\2\2\2\u0ce0\u0ce4\5\u0218\u010d\2\u0ce1\u0ce3\5\6\4\2\u0ce2\u0ce1"+
		"\3\2\2\2\u0ce3\u0ce6\3\2\2\2\u0ce4\u0ce2\3\2\2\2\u0ce4\u0ce5\3\2\2\2\u0ce5"+
		"\u0cf0\3\2\2\2\u0ce6\u0ce4\3\2\2\2\u0ce7\u0ceb\5\u00ceh\2\u0ce8\u0cea"+
		"\5\6\4\2\u0ce9\u0ce8\3\2\2\2\u0cea\u0ced\3\2\2\2\u0ceb\u0ce9\3\2\2\2\u0ceb"+
		"\u0cec\3\2\2\2\u0cec\u0cef\3\2\2\2\u0ced\u0ceb\3\2\2\2\u0cee\u0ce7\3\2"+
		"\2\2\u0cef\u0cf2\3\2\2\2\u0cf0\u0cee\3\2\2\2\u0cf0\u0cf1\3\2\2\2\u0cf1"+
		"\u0cf3\3\2\2\2\u0cf2\u0cf0\3\2\2\2\u0cf3\u0cf4\7\u01a9\2\2\u0cf4\u00c9"+
		"\3\2\2\2\u0cf5\u0cf7\7\u0139\2\2\u0cf6\u0cf8\5\6\4\2\u0cf7\u0cf6\3\2\2"+
		"\2\u0cf8\u0cf9\3\2\2\2\u0cf9\u0cf7\3\2\2\2\u0cf9\u0cfa\3\2\2\2\u0cfa\u0cfb"+
		"\3\2\2\2\u0cfb\u0cff\5\u0218\u010d\2\u0cfc\u0cfe\5\6\4\2\u0cfd\u0cfc\3"+
		"\2\2\2\u0cfe\u0d01\3\2\2\2\u0cff\u0cfd\3\2\2\2\u0cff\u0d00\3\2\2\2\u0d00"+
		"\u0d0b\3\2\2\2\u0d01\u0cff\3\2\2\2\u0d02\u0d06\5\u013a\u009e\2\u0d03\u0d05"+
		"\5\6\4\2\u0d04\u0d03\3\2\2\2\u0d05\u0d08\3\2\2\2\u0d06\u0d04\3\2\2\2\u0d06"+
		"\u0d07\3\2\2\2\u0d07\u0d0a\3\2\2\2\u0d08\u0d06\3\2\2\2\u0d09\u0d02\3\2"+
		"\2\2\u0d0a\u0d0d\3\2\2\2\u0d0b\u0d09\3\2\2\2\u0d0b\u0d0c\3\2\2\2\u0d0c"+
		"\u0d0e\3\2\2\2\u0d0d\u0d0b\3\2\2\2\u0d0e\u0d0f\7\u01a9\2\2\u0d0f\u00cb"+
		"\3\2\2\2\u0d10\u0d12\7\u011c\2\2\u0d11\u0d13\5\6\4\2\u0d12\u0d11\3\2\2"+
		"\2\u0d13\u0d14\3\2\2\2\u0d14\u0d12\3\2\2\2\u0d14\u0d15\3\2\2\2\u0d15\u0d16"+
		"\3\2\2\2\u0d16\u0d1a\5\u013e\u00a0\2\u0d17\u0d19\5\6\4\2\u0d18\u0d17\3"+
		"\2\2\2\u0d19\u0d1c\3\2\2\2\u0d1a\u0d18\3\2\2\2\u0d1a\u0d1b\3\2\2\2\u0d1b"+
		"\u0d26\3\2\2\2\u0d1c\u0d1a\3\2\2\2\u0d1d\u0d21\5\u011c\u008f\2\u0d1e\u0d20"+
		"\5\6\4\2\u0d1f\u0d1e\3\2\2\2\u0d20\u0d23\3\2\2\2\u0d21\u0d1f\3\2\2\2\u0d21"+
		"\u0d22\3\2\2\2\u0d22\u0d25\3\2\2\2\u0d23\u0d21\3\2\2\2\u0d24\u0d1d\3\2"+
		"\2\2\u0d25\u0d28\3\2\2\2\u0d26\u0d24\3\2\2\2\u0d26\u0d27\3\2\2\2\u0d27"+
		"\u0d29\3\2\2\2\u0d28\u0d26\3\2\2\2\u0d29\u0d2a\7\u01a9\2\2\u0d2a\u00cd"+
		"\3\2\2\2\u0d2b\u0d2d\7\u00cf\2\2\u0d2c\u0d2e\5\6\4\2\u0d2d\u0d2c\3\2\2"+
		"\2\u0d2e\u0d2f\3\2\2\2\u0d2f\u0d2d\3\2\2\2\u0d2f\u0d30\3\2\2\2\u0d30\u0d32"+
		"\3\2\2\2\u0d31\u0d2b\3\2\2\2\u0d31\u0d32\3\2\2\2\u0d32\u0d33\3\2\2\2\u0d33"+
		"\u0d49\7\u00a1\2\2\u0d34\u0d36\7\u00cf\2\2\u0d35\u0d37\5\6\4\2\u0d36\u0d35"+
		"\3\2\2\2\u0d37\u0d38\3\2\2\2\u0d38\u0d36\3\2\2\2\u0d38\u0d39\3\2\2\2\u0d39"+
		"\u0d3b\3\2\2\2\u0d3a\u0d34\3\2\2\2\u0d3a\u0d3b\3\2\2\2\u0d3b\u0d3c\3\2"+
		"\2\2\u0d3c\u0d49\7\u00b6\2\2\u0d3d\u0d49\5\u020c\u0107\2\u0d3e\u0d49\5"+
		"\u0154\u00ab\2\u0d3f\u0d49\5\u0152\u00aa\2\u0d40\u0d49\5\u014e\u00a8\2"+
		"\u0d41\u0d49\5\u014a\u00a6\2\u0d42\u0d49\5\u0140\u00a1\2\u0d43\u0d49\5"+
		"\u013c\u009f\2\u0d44\u0d49\5\u020a\u0106\2\u0d45\u0d49\5\u01f8\u00fd\2"+
		"\u0d46\u0d49\5\u01f4\u00fb\2\u0d47\u0d49\5\u01f0\u00f9\2\u0d48\u0d31\3"+
		"\2\2\2\u0d48\u0d3a\3\2\2\2\u0d48\u0d3d\3\2\2\2\u0d48\u0d3e\3\2\2\2\u0d48"+
		"\u0d3f\3\2\2\2\u0d48\u0d40\3\2\2\2\u0d48\u0d41\3\2\2\2\u0d48\u0d42\3\2"+
		"\2\2\u0d48\u0d43\3\2\2\2\u0d48\u0d44\3\2\2\2\u0d48\u0d45\3\2\2\2\u0d48"+
		"\u0d46\3\2\2\2\u0d48\u0d47\3\2\2\2\u0d49\u00cf\3\2\2\2\u0d4a\u0d54\5\u00d2"+
		"j\2\u0d4b\u0d4d\5\6\4\2\u0d4c\u0d4b\3\2\2\2\u0d4d\u0d50\3\2\2\2\u0d4e"+
		"\u0d4c\3\2\2\2\u0d4e\u0d4f\3\2\2\2\u0d4f\u0d51\3\2\2\2\u0d50\u0d4e\3\2"+
		"\2\2\u0d51\u0d53\5\u00d2j\2\u0d52\u0d4e\3\2\2\2\u0d53\u0d56\3\2\2\2\u0d54"+
		"\u0d52\3\2\2\2\u0d54\u0d55\3\2\2\2\u0d55\u00d1\3\2\2\2\u0d56\u0d54\3\2"+
		"\2\2\u0d57\u0d61\5\u00d4k\2\u0d58\u0d5a\5\6\4\2\u0d59\u0d58\3\2\2\2\u0d5a"+
		"\u0d5b\3\2\2\2\u0d5b\u0d59\3\2\2\2\u0d5b\u0d5c\3\2\2\2\u0d5c\u0d5f\3\2"+
		"\2\2\u0d5d\u0d60\5\u0138\u009d\2\u0d5e\u0d60\7\u00a7\2\2\u0d5f\u0d5d\3"+
		"\2\2\2\u0d5f\u0d5e\3\2\2\2\u0d60\u0d62\3\2\2\2\u0d61\u0d59\3\2\2\2\u0d61"+
		"\u0d62\3\2\2\2\u0d62\u0d70\3\2\2\2\u0d63\u0d65\5\6\4\2\u0d64\u0d63\3\2"+
		"\2\2\u0d65\u0d66\3\2\2\2\u0d66\u0d64\3\2\2\2\u0d66\u0d67\3\2\2\2\u0d67"+
		"\u0d68\3\2\2\2\u0d68\u0d6a\7\u0120\2\2\u0d69\u0d6b\5\6\4\2\u0d6a\u0d69"+
		"\3\2\2\2\u0d6b\u0d6c\3\2\2\2\u0d6c\u0d6a\3\2\2\2\u0d6c\u0d6d\3\2\2\2\u0d6d"+
		"\u0d6e\3\2\2\2\u0d6e\u0d6f\5\u0136\u009c\2\u0d6f\u0d71\3\2\2\2\u0d70\u0d64"+
		"\3\2\2\2\u0d70\u0d71\3\2\2\2\u0d71\u0d7b\3\2\2\2\u0d72\u0d74\5\6\4\2\u0d73"+
		"\u0d72\3\2\2\2\u0d74\u0d75\3\2\2\2\u0d75\u0d73\3\2\2\2\u0d75\u0d76\3\2"+
		"\2\2\u0d76\u0d77\3\2\2\2\u0d77\u0d78\5\u00d6l\2\u0d78\u0d7a\3\2\2\2\u0d79"+
		"\u0d73\3\2\2\2\u0d7a\u0d7d\3\2\2\2\u0d7b\u0d79\3\2\2\2\u0d7b\u0d7c\3\2"+
		"\2\2\u0d7c\u0d7e\3\2\2\2\u0d7d\u0d7b\3\2\2\2\u0d7e\u0d7f\7\u01a9\2\2\u0d7f"+
		"\u00d3\3\2\2\2\u0d80\u0d81\7\u01ad\2\2\u0d81\u00d5\3\2\2\2\u0d82\u0d84"+
		"\7\u00cf\2\2\u0d83\u0d85\5\6\4\2\u0d84\u0d83\3\2\2\2\u0d85\u0d86\3\2\2"+
		"\2\u0d86\u0d84\3\2\2\2\u0d86\u0d87\3\2\2\2\u0d87\u0d89\3\2\2\2\u0d88\u0d82"+
		"\3\2\2\2\u0d88\u0d89\3\2\2\2\u0d89\u0d8a\3\2\2\2\u0d8a\u0dbf\7\u00a1\2"+
		"\2\u0d8b\u0d8d\7\u00cf\2\2\u0d8c\u0d8e\5\6\4\2\u0d8d\u0d8c\3\2\2\2\u0d8e"+
		"\u0d8f\3\2\2\2\u0d8f\u0d8d\3\2\2\2\u0d8f\u0d90\3\2\2\2\u0d90\u0d92\3\2"+
		"\2\2\u0d91\u0d8b\3\2\2\2\u0d91\u0d92\3\2\2\2\u0d92\u0d93\3\2\2\2\u0d93"+
		"\u0dbf\7\u00b6\2\2\u0d94\u0dbf\5\u0130\u0099\2\u0d95\u0dbf\5\u012c\u0097"+
		"\2\u0d96\u0dbf\5\u0104\u0083\2\u0d97\u0dbf\5\u00ecw\2\u0d98\u0da0\t\t"+
		"\2\2\u0d99\u0d9b\5\6\4\2\u0d9a\u0d99\3\2\2\2\u0d9b\u0d9c\3\2\2\2\u0d9c"+
		"\u0d9a\3\2\2\2\u0d9c\u0d9d\3\2\2\2\u0d9d\u0d9e\3\2\2\2\u0d9e\u0d9f\t\n"+
		"\2\2\u0d9f\u0da1\3\2\2\2\u0da0\u0d9a\3\2\2\2\u0da0\u0da1\3\2\2\2\u0da1"+
		"\u0dbf\3\2\2\2\u0da2\u0daa\t\13\2\2\u0da3\u0da5\5\6\4\2\u0da4\u0da3\3"+
		"\2\2\2\u0da5\u0da6\3\2\2\2\u0da6\u0da4\3\2\2\2\u0da6\u0da7\3\2\2\2\u0da7"+
		"\u0da8\3\2\2\2\u0da8\u0da9\7\u0135\2\2\u0da9\u0dab\3\2\2\2\u0daa\u0da4"+
		"\3\2\2\2\u0daa\u0dab\3\2\2\2\u0dab\u0dbf\3\2\2\2\u0dac\u0dae\7+\2\2\u0dad"+
		"\u0daf\5\6\4\2\u0dae\u0dad\3\2\2\2\u0daf\u0db0\3\2\2\2\u0db0\u0dae\3\2"+
		"\2\2\u0db0\u0db1\3\2\2\2\u0db1\u0db8\3\2\2\2\u0db2\u0db4\7\u017d\2\2\u0db3"+
		"\u0db5\5\6\4\2\u0db4\u0db3\3\2\2\2\u0db5\u0db6\3\2\2\2\u0db6\u0db4\3\2"+
		"\2\2\u0db6\u0db7\3\2\2\2\u0db7\u0db9\3\2\2\2\u0db8\u0db2\3\2\2\2\u0db8"+
		"\u0db9\3\2\2\2\u0db9\u0dba\3\2\2\2\u0dba\u0dbb\7\u0185\2\2\u0dbb\u0dbf"+
		"\3\2\2\2\u0dbc\u0dbf\5\u00dep\2\u0dbd\u0dbf\5\u00d8m\2\u0dbe\u0d88\3\2"+
		"\2\2\u0dbe\u0d91\3\2\2\2\u0dbe\u0d94\3\2\2\2\u0dbe\u0d95\3\2\2\2\u0dbe"+
		"\u0d96\3\2\2\2\u0dbe\u0d97\3\2\2\2\u0dbe\u0d98\3\2\2\2\u0dbe\u0da2\3\2"+
		"\2\2\u0dbe\u0dac\3\2\2\2\u0dbe\u0dbc\3\2\2\2\u0dbe\u0dbd\3\2\2\2\u0dbf"+
		"\u00d7\3\2\2\2\u0dc0\u0dc2\7\u0125\2\2\u0dc1\u0dc3\5\6\4\2\u0dc2\u0dc1"+
		"\3\2\2\2\u0dc3\u0dc4\3\2\2\2\u0dc4\u0dc2\3\2\2\2\u0dc4\u0dc5\3\2\2\2\u0dc5"+
		"\u0dc6\3\2\2\2\u0dc6\u0dd4\5\u00dan\2\u0dc7\u0dc9\5\6\4\2\u0dc8\u0dc7"+
		"\3\2\2\2\u0dc9\u0dca\3\2\2\2\u0dca\u0dc8\3\2\2\2\u0dca\u0dcb\3\2\2\2\u0dcb"+
		"\u0dcc\3\2\2\2\u0dcc\u0dce\t\f\2\2\u0dcd\u0dcf\5\6\4\2\u0dce\u0dcd\3\2"+
		"\2\2\u0dcf\u0dd0\3\2\2\2\u0dd0\u0dce\3\2\2\2\u0dd0\u0dd1\3\2\2\2\u0dd1"+
		"\u0dd2\3\2\2\2\u0dd2\u0dd3\5\u00dco\2\u0dd3\u0dd5\3\2\2\2\u0dd4\u0dc8"+
		"\3\2\2\2\u0dd4\u0dd5\3\2\2\2\u0dd5\u00d9\3\2\2\2\u0dd6\u0dd7\5\u01ae\u00d8"+
		"\2\u0dd7\u00db\3\2\2\2\u0dd8\u0dd9\5\u01ae\u00d8\2\u0dd9\u00dd\3\2\2\2"+
		"\u0dda\u0de2\7\u0179\2\2\u0ddb\u0ddd\5\6\4\2\u0ddc\u0ddb\3\2\2\2\u0ddd"+
		"\u0dde\3\2\2\2\u0dde\u0ddc\3\2\2\2\u0dde\u0ddf\3\2\2\2\u0ddf\u0de0\3\2"+
		"\2\2\u0de0\u0de1\7\u00cf\2\2\u0de1\u0de3\3\2\2\2\u0de2\u0ddc\3\2\2\2\u0de2"+
		"\u0de3\3\2\2\2\u0de3\u0def\3\2\2\2\u0de4\u0dec\7\u017a\2\2\u0de5\u0de7"+
		"\5\6\4\2\u0de6\u0de5\3\2\2\2\u0de7\u0de8\3\2\2\2\u0de8\u0de6\3\2\2\2\u0de8"+
		"\u0de9\3\2\2\2\u0de9\u0dea\3\2\2\2\u0dea\u0deb\7\25\2\2\u0deb\u0ded\3"+
		"\2\2\2\u0dec\u0de6\3\2\2\2\u0dec\u0ded\3\2\2\2\u0ded\u0def\3\2\2\2\u0dee"+
		"\u0dda\3\2\2\2\u0dee\u0de4\3\2\2\2\u0def\u0df1\3\2\2\2\u0df0\u0df2\5\6"+
		"\4\2\u0df1\u0df0\3\2\2\2\u0df2\u0df3\3\2\2\2\u0df3\u0df1\3\2\2\2\u0df3"+
		"\u0df4\3\2\2\2\u0df4\u0df5\3\2\2\2\u0df5\u0dff\5\u00e0q\2\u0df6\u0df8"+
		"\5\6\4\2\u0df7\u0df6\3\2\2\2\u0df8\u0df9\3\2\2\2\u0df9\u0df7\3\2\2\2\u0df9"+
		"\u0dfa\3\2\2\2\u0dfa\u0dfb\3\2\2\2\u0dfb\u0dfc\5\u00e0q\2\u0dfc\u0dfe"+
		"\3\2\2\2\u0dfd\u0df7\3\2\2\2\u0dfe\u0e01\3\2\2\2\u0dff\u0dfd\3\2\2\2\u0dff"+
		"\u0e00\3\2\2\2\u0e00\u00df\3\2\2\2\u0e01\u0dff\3\2\2\2\u0e02\u0e0a\5\u00e2"+
		"r\2\u0e03\u0e05\5\6\4\2\u0e04\u0e03\3\2\2\2\u0e05\u0e06\3\2\2\2\u0e06"+
		"\u0e04\3\2\2\2\u0e06\u0e07\3\2\2\2\u0e07\u0e08\3\2\2\2\u0e08\u0e09\5\u00e4"+
		"s\2\u0e09\u0e0b\3\2\2\2\u0e0a\u0e04\3\2\2\2\u0e0a\u0e0b\3\2\2\2\u0e0b"+
		"\u00e1\3\2\2\2\u0e0c\u0e1e\5\u00eav\2\u0e0d\u0e0f\7\u0122\2\2\u0e0e\u0e10"+
		"\5\6\4\2\u0e0f\u0e0e\3\2\2\2\u0e10\u0e11\3\2\2\2\u0e11\u0e0f\3\2\2\2\u0e11"+
		"\u0e12\3\2\2\2\u0e12\u0e13\3\2\2\2\u0e13\u0e14\5\u00e8u\2\u0e14\u0e1e"+
		"\3\2\2\2\u0e15\u0e17\7\u00a1\2\2\u0e16\u0e18\5\6\4\2\u0e17\u0e16\3\2\2"+
		"\2\u0e18\u0e19\3\2\2\2\u0e19\u0e17\3\2\2\2\u0e19\u0e1a\3\2\2\2\u0e1a\u0e1b"+
		"\3\2\2\2\u0e1b\u0e1c\5\u00e6t\2\u0e1c\u0e1e\3\2\2\2\u0e1d\u0e0c\3\2\2"+
		"\2\u0e1d\u0e0d\3\2\2\2\u0e1d\u0e15\3\2\2\2\u0e1e\u00e3\3\2\2\2\u0e1f\u0e21"+
		"\t\f\2\2\u0e20\u0e22\5\6\4\2\u0e21\u0e20\3\2\2\2\u0e22\u0e23\3\2\2\2\u0e23"+
		"\u0e21\3\2\2\2\u0e23\u0e24\3\2\2\2\u0e24\u0e25\3\2\2\2\u0e25\u0e26\5\u00e2"+
		"r\2\u0e26\u00e5\3\2\2\2\u0e27\u0e28\7\u01af\2\2\u0e28\u00e7\3\2\2\2\u0e29"+
		"\u0e2a\5\u01ae\u00d8\2\u0e2a\u00e9\3\2\2\2\u0e2b\u0e2c\t\r\2\2\u0e2c\u00eb"+
		"\3\2\2\2\u0e2d\u0e2f\7\u00f7\2\2\u0e2e\u0e30\5\6\4\2\u0e2f\u0e2e\3\2\2"+
		"\2\u0e30\u0e31\3\2\2\2\u0e31\u0e2f\3\2\2\2\u0e31\u0e32\3\2\2\2\u0e32\u0e33"+
		"\3\2\2\2\u0e33\u0e3d\5\u00f6|\2\u0e34\u0e36\5\6\4\2\u0e35\u0e34\3\2\2"+
		"\2\u0e36\u0e37\3\2\2\2\u0e37\u0e35\3\2\2\2\u0e37\u0e38\3\2\2\2\u0e38\u0e39"+
		"\3\2\2\2\u0e39\u0e3a\5\u00f2z\2\u0e3a\u0e3c\3\2\2\2\u0e3b\u0e35\3\2\2"+
		"\2\u0e3c\u0e3f\3\2\2\2\u0e3d\u0e3b\3\2\2\2\u0e3d\u0e3e\3\2\2\2\u0e3e\u0e47"+
		"\3\2\2\2\u0e3f\u0e3d\3\2\2\2\u0e40\u0e42\5\6\4\2\u0e41\u0e40\3\2\2\2\u0e42"+
		"\u0e43\3\2\2\2\u0e43\u0e41\3\2\2\2\u0e43\u0e44\3\2\2\2\u0e44\u0e45\3\2"+
		"\2\2\u0e45\u0e46\5\u00eex\2\u0e46\u0e48\3\2\2\2\u0e47\u0e41\3\2\2\2\u0e47"+
		"\u0e48\3\2\2\2\u0e48\u00ed\3\2\2\2\u0e49\u0e4b\7\u00c5\2\2\u0e4a\u0e4c"+
		"\5\6\4\2\u0e4b\u0e4a\3\2\2\2\u0e4c\u0e4d\3\2\2\2\u0e4d\u0e4b\3\2\2\2\u0e4d"+
		"\u0e4e\3\2\2\2\u0e4e\u0e55\3\2\2\2\u0e4f\u0e51\7\61\2\2\u0e50\u0e52\5"+
		"\6\4\2\u0e51\u0e50\3\2\2\2\u0e52\u0e53\3\2\2\2\u0e53\u0e51\3\2\2\2\u0e53"+
		"\u0e54\3\2\2\2\u0e54\u0e56\3\2\2\2\u0e55\u0e4f\3\2\2\2\u0e55\u0e56\3\2"+
		"\2\2\u0e56\u0e57\3\2\2\2\u0e57\u0e61\5\u00f0y\2\u0e58\u0e5a\5\6\4\2\u0e59"+
		"\u0e58\3\2\2\2\u0e5a\u0e5b\3\2\2\2\u0e5b\u0e59\3\2\2\2\u0e5b\u0e5c\3\2"+
		"\2\2\u0e5c\u0e5d\3\2\2\2\u0e5d\u0e5e\5\u00f0y\2\u0e5e\u0e60\3\2\2\2\u0e5f"+
		"\u0e59\3\2\2\2\u0e60\u0e63\3\2\2\2\u0e61\u0e5f\3\2\2\2\u0e61\u0e62\3\2"+
		"\2\2\u0e62\u00ef\3\2\2\2\u0e63\u0e61\3\2\2\2\u0e64\u0e65\7\u01af\2\2\u0e65"+
		"\u00f1\3\2\2\2\u0e66\u0e68\t\16\2\2\u0e67\u0e69\5\6\4\2\u0e68\u0e67\3"+
		"\2\2\2\u0e69\u0e6a\3\2\2\2\u0e6a\u0e68\3\2\2\2\u0e6a\u0e6b\3\2\2\2\u0e6b"+
		"\u0e72\3\2\2\2\u0e6c\u0e6e\7\u00d4\2\2\u0e6d\u0e6f\5\6\4\2\u0e6e\u0e6d"+
		"\3\2\2\2\u0e6f\u0e70\3\2\2\2\u0e70\u0e6e\3\2\2\2\u0e70\u0e71\3\2\2\2\u0e71"+
		"\u0e73\3\2\2\2\u0e72\u0e6c\3\2\2\2\u0e72\u0e73\3\2\2\2\u0e73\u0e7a\3\2"+
		"\2\2\u0e74\u0e76\7\u00cf\2\2\u0e75\u0e77\5\6\4\2\u0e76\u0e75\3\2\2\2\u0e77"+
		"\u0e78\3\2\2\2\u0e78\u0e76\3\2\2\2\u0e78\u0e79\3\2\2\2\u0e79\u0e7b\3\2"+
		"\2\2\u0e7a\u0e74\3\2\2\2\u0e7a\u0e7b\3\2\2\2\u0e7b\u0e7c\3\2\2\2\u0e7c"+
		"\u0e86\5\u00f4{\2\u0e7d\u0e7f\5\6\4\2\u0e7e\u0e7d\3\2\2\2\u0e7f\u0e80"+
		"\3\2\2\2\u0e80\u0e7e\3\2\2\2\u0e80\u0e81\3\2\2\2\u0e81\u0e82\3\2\2\2\u0e82"+
		"\u0e83\5\u00f4{\2\u0e83\u0e85\3\2\2\2\u0e84\u0e7e\3\2\2\2\u0e85\u0e88"+
		"\3\2\2\2\u0e86\u0e84\3\2\2\2\u0e86\u0e87\3\2\2\2\u0e87\u00f3\3\2\2\2\u0e88"+
		"\u0e86\3\2\2\2\u0e89\u0e8a\5\u01ae\u00d8\2\u0e8a\u00f5\3\2\2\2\u0e8b\u0e8d"+
		"\5\u00f8}\2\u0e8c\u0e8e\5\6\4\2\u0e8d\u0e8c\3\2\2\2\u0e8e\u0e8f\3\2\2"+
		"\2\u0e8f\u0e8d\3\2\2\2\u0e8f\u0e90\3\2\2\2\u0e90\u0e91\3\2\2\2\u0e91\u0e92"+
		"\7\u0168\2\2\u0e92\u0ebc\3\2\2\2\u0e93\u0e95\5\u00fa~\2\u0e94\u0e96\5"+
		"\6\4\2\u0e95\u0e94\3\2\2\2\u0e96\u0e97\3\2\2\2\u0e97\u0e95\3\2\2\2\u0e97"+
		"\u0e98\3\2\2\2\u0e98\u0e99\3\2\2\2\u0e99\u0e9b\7\u0169\2\2\u0e9a\u0e9c"+
		"\5\6\4\2\u0e9b\u0e9a\3\2\2\2\u0e9c\u0e9d\3\2\2\2\u0e9d\u0e9b\3\2\2\2\u0e9d"+
		"\u0e9e\3\2\2\2\u0e9e\u0e9f\3\2\2\2\u0e9f\u0ea1\5\u00fc\177\2\u0ea0\u0ea2"+
		"\5\6\4\2\u0ea1\u0ea0\3\2\2\2\u0ea2\u0ea3\3\2\2\2\u0ea3\u0ea1\3\2\2\2\u0ea3"+
		"\u0ea4\3\2\2\2\u0ea4\u0ea5\3\2\2\2\u0ea5\u0ea7\7\u0168\2\2\u0ea6\u0ea8"+
		"\5\6\4\2\u0ea7\u0ea6\3\2\2\2\u0ea8\u0ea9\3\2\2\2\u0ea9\u0ea7\3\2\2\2\u0ea9"+
		"\u0eaa\3\2\2\2\u0eaa\u0eab\3\2\2\2\u0eab\u0ead\7o\2\2\u0eac\u0eae\5\6"+
		"\4\2\u0ead\u0eac\3\2\2\2\u0eae\u0eaf\3\2\2\2\u0eaf\u0ead\3\2\2\2\u0eaf"+
		"\u0eb0\3\2\2\2\u0eb0\u0eb7\3\2\2\2\u0eb1\u0eb3\7\u00fb\2\2\u0eb2\u0eb4"+
		"\5\6\4\2\u0eb3\u0eb2\3\2\2\2\u0eb4\u0eb5\3\2\2\2\u0eb5\u0eb3\3\2\2\2\u0eb5"+
		"\u0eb6\3\2\2\2\u0eb6\u0eb8\3\2\2\2\u0eb7\u0eb1\3\2\2\2\u0eb7\u0eb8\3\2"+
		"\2\2\u0eb8\u0eb9\3\2\2\2\u0eb9\u0eba\5\u0158\u00ad\2\u0eba\u0ebc\3\2\2"+
		"\2\u0ebb\u0e8b\3\2\2\2\u0ebb\u0e93\3\2\2\2\u0ebc\u00f7\3\2\2\2\u0ebd\u0ebe"+
		"\7\u01ad\2\2\u0ebe\u00f9\3\2\2\2\u0ebf\u0ec0\7\u01ad\2\2\u0ec0\u00fb\3"+
		"\2\2\2\u0ec1\u0ec2\7\u01ad\2\2\u0ec2\u00fd\3\2\2\2\u0ec3\u0ecd\5\u0100"+
		"\u0081\2\u0ec4\u0ec6\5\6\4\2\u0ec5\u0ec4\3\2\2\2\u0ec6\u0ec9\3\2\2\2\u0ec7"+
		"\u0ec5\3\2\2\2\u0ec7\u0ec8\3\2\2\2\u0ec8\u0eca\3\2\2\2\u0ec9\u0ec7\3\2"+
		"\2\2\u0eca\u0ecc\5\u0100\u0081\2\u0ecb\u0ec7\3\2\2\2\u0ecc\u0ecf\3\2\2"+
		"\2\u0ecd\u0ecb\3\2\2\2\u0ecd\u0ece\3\2\2\2\u0ece\u00ff\3\2\2\2\u0ecf\u0ecd"+
		"\3\2\2\2\u0ed0\u0ed8\5\u00d4k\2\u0ed1\u0ed3\5\6\4\2\u0ed2\u0ed1\3\2\2"+
		"\2\u0ed3\u0ed4\3\2\2\2\u0ed4\u0ed2\3\2\2\2\u0ed4\u0ed5\3\2\2\2\u0ed5\u0ed6"+
		"\3\2\2\2\u0ed6\u0ed7\5\u0138\u009d\2\u0ed7\u0ed9\3\2\2\2\u0ed8\u0ed2\3"+
		"\2\2\2\u0ed8\u0ed9\3\2\2\2\u0ed9\u0ee3\3\2\2\2\u0eda\u0edc\5\6\4\2\u0edb"+
		"\u0eda\3\2\2\2\u0edc\u0edd\3\2\2\2\u0edd\u0edb\3\2\2\2\u0edd\u0ede\3\2"+
		"\2\2\u0ede\u0edf\3\2\2\2\u0edf\u0ee0\5\u0102\u0082\2\u0ee0\u0ee2\3\2\2"+
		"\2\u0ee1\u0edb\3\2\2\2\u0ee2\u0ee5\3\2\2\2\u0ee3\u0ee1\3\2\2\2\u0ee3\u0ee4"+
		"\3\2\2\2\u0ee4\u0ee6\3\2\2\2\u0ee5\u0ee3\3\2\2\2\u0ee6\u0ee7\7\u01a9\2"+
		"\2\u0ee7\u0101\3\2\2\2\u0ee8\u0eea\7\u00dd\2\2\u0ee9\u0eeb\5\6\4\2\u0eea"+
		"\u0ee9\3\2\2\2\u0eeb\u0eec\3\2\2\2\u0eec\u0eea\3\2\2\2\u0eec\u0eed\3\2"+
		"\2\2\u0eed\u0ef4\3\2\2\2\u0eee\u0ef0\7\u00f4\2\2\u0eef\u0ef1\5\6\4\2\u0ef0"+
		"\u0eef\3\2\2\2\u0ef1\u0ef2\3\2\2\2\u0ef2\u0ef0\3\2\2\2\u0ef2\u0ef3\3\2"+
		"\2\2\u0ef3\u0ef5\3\2\2\2\u0ef4\u0eee\3\2\2\2\u0ef4\u0ef5\3\2\2\2\u0ef5"+
		"\u0efc\3\2\2\2\u0ef6\u0ef8\7\u00cf\2\2\u0ef7\u0ef9\5\6\4\2\u0ef8\u0ef7"+
		"\3\2\2\2\u0ef9\u0efa\3\2\2\2\u0efa\u0ef8\3\2";
	private static final String _serializedATNSegment2 =
		"\2\2\u0efa\u0efb\3\2\2\2\u0efb\u0efd\3\2\2\2\u0efc\u0ef6\3\2\2\2\u0efc"+
		"\u0efd\3\2\2\2\u0efd\u0efe\3\2\2\2\u0efe\u0eff\5\u0118\u008d\2\u0eff\u0f97"+
		"\3\2\2\2\u0f00\u0f02\7\u00f1\2\2\u0f01\u0f03\5\6\4\2\u0f02\u0f01\3\2\2"+
		"\2\u0f03\u0f04\3\2\2\2\u0f04\u0f02\3\2\2\2\u0f04\u0f05\3\2\2\2\u0f05\u0f06"+
		"\3\2\2\2\u0f06\u0f08\7\u00b9\2\2\u0f07\u0f09\5\6\4\2\u0f08\u0f07\3\2\2"+
		"\2\u0f09\u0f0a\3\2\2\2\u0f0a\u0f08\3\2\2\2\u0f0a\u0f0b\3\2\2\2\u0f0b\u0f12"+
		"\3\2\2\2\u0f0c\u0f0e\7\u00cf\2\2\u0f0d\u0f0f\5\6\4\2\u0f0e\u0f0d\3\2\2"+
		"\2\u0f0f\u0f10\3\2\2\2\u0f10\u0f0e\3\2\2\2\u0f10\u0f11\3\2\2\2\u0f11\u0f13"+
		"\3\2\2\2\u0f12\u0f0c\3\2\2\2\u0f12\u0f13\3\2\2\2\u0f13\u0f14\3\2\2\2\u0f14"+
		"\u0f15\5\u0116\u008c\2\u0f15\u0f97\3\2\2\2\u0f16\u0f18\7\u016d\2\2\u0f17"+
		"\u0f19\5\6\4\2\u0f18\u0f17\3\2\2\2\u0f19\u0f1a\3\2\2\2\u0f1a\u0f18\3\2"+
		"\2\2\u0f1a\u0f1b\3\2\2\2\u0f1b\u0f22\3\2\2\2\u0f1c\u0f1e\7\u00cf\2\2\u0f1d"+
		"\u0f1f\5\6\4\2\u0f1e\u0f1d\3\2\2\2\u0f1f\u0f20\3\2\2\2\u0f20\u0f1e\3\2"+
		"\2\2\u0f20\u0f21\3\2\2\2\u0f21\u0f23\3\2\2\2\u0f22\u0f1c\3\2\2\2\u0f22"+
		"\u0f23\3\2\2\2\u0f23\u0f24\3\2\2\2\u0f24\u0f25\5\u0112\u008a\2\u0f25\u0f97"+
		"\3\2\2\2\u0f26\u0f28\7\u0176\2\2\u0f27\u0f29\5\6\4\2\u0f28\u0f27\3\2\2"+
		"\2\u0f29\u0f2a\3\2\2\2\u0f2a\u0f28\3\2\2\2\u0f2a\u0f2b\3\2\2\2\u0f2b\u0f32"+
		"\3\2\2\2\u0f2c\u0f2e\7\u00cf\2\2\u0f2d\u0f2f\5\6\4\2\u0f2e\u0f2d\3\2\2"+
		"\2\u0f2f\u0f30\3\2\2\2\u0f30\u0f2e\3\2\2\2\u0f30\u0f31\3\2\2\2\u0f31\u0f33"+
		"\3\2\2\2\u0f32\u0f2c\3\2\2\2\u0f32\u0f33\3\2\2\2\u0f33\u0f35\3\2\2\2\u0f34"+
		"\u0f26\3\2\2\2\u0f34\u0f35\3\2\2\2\u0f35\u0f36\3\2\2\2\u0f36\u0f97\7s"+
		"\2\2\u0f37\u0f39\7+\2\2\u0f38\u0f3a\5\6\4\2\u0f39\u0f38\3\2\2\2\u0f3a"+
		"\u0f3b\3\2\2\2\u0f3b\u0f39\3\2\2\2\u0f3b\u0f3c\3\2\2\2\u0f3c\u0f43\3\2"+
		"\2\2\u0f3d\u0f3f\7\u017d\2\2\u0f3e\u0f40\5\6\4\2\u0f3f\u0f3e\3\2\2\2\u0f40"+
		"\u0f41\3\2\2\2\u0f41\u0f3f\3\2\2\2\u0f41\u0f42\3\2\2\2\u0f42\u0f44\3\2"+
		"\2\2\u0f43\u0f3d\3\2\2\2\u0f43\u0f44\3\2\2\2\u0f44\u0f45\3\2\2\2\u0f45"+
		"\u0f46\7\u0185\2\2\u0f46\u0f97\3\2\2\2\u0f47\u0f49\7@\2\2\u0f48\u0f4a"+
		"\5\6\4\2\u0f49\u0f48\3\2\2\2\u0f4a\u0f4b\3\2\2\2\u0f4b\u0f49\3\2\2\2\u0f4b"+
		"\u0f4c\3\2\2\2\u0f4c\u0f53\3\2\2\2\u0f4d\u0f4f\7\u00f4\2\2\u0f4e\u0f50"+
		"\5\6\4\2\u0f4f\u0f4e\3\2\2\2\u0f50\u0f51\3\2\2\2\u0f51\u0f4f\3\2\2\2\u0f51"+
		"\u0f52\3\2\2\2\u0f52\u0f54\3\2\2\2\u0f53\u0f4d\3\2\2\2\u0f53\u0f54\3\2"+
		"\2\2\u0f54\u0f5b\3\2\2\2\u0f55\u0f57\7\u00cf\2\2\u0f56\u0f58\5\6\4\2\u0f57"+
		"\u0f56\3\2\2\2\u0f58\u0f59\3\2\2\2\u0f59\u0f57\3\2\2\2\u0f59\u0f5a\3\2"+
		"\2\2\u0f5a\u0f5c\3\2\2\2\u0f5b\u0f55\3\2\2\2\u0f5b\u0f5c\3\2\2\2\u0f5c"+
		"\u0f5d\3\2\2\2\u0f5d\u0f5e\5\u0110\u0089\2\u0f5e\u0f97\3\2\2\2\u0f5f\u0f67"+
		"\7\u00b9\2\2\u0f60\u0f62\5\6\4\2\u0f61\u0f60\3\2\2\2\u0f62\u0f63\3\2\2"+
		"\2\u0f63\u0f61\3\2\2\2\u0f63\u0f64\3\2\2\2\u0f64\u0f65\3\2\2\2\u0f65\u0f66"+
		"\7\u00c6\2\2\u0f66\u0f68\3\2\2\2\u0f67\u0f61\3\2\2\2\u0f67\u0f68\3\2\2"+
		"\2\u0f68\u0f97\3\2\2\2\u0f69\u0f71\t\13\2\2\u0f6a\u0f6c\5\6\4\2\u0f6b"+
		"\u0f6a\3\2\2\2\u0f6c\u0f6d\3\2\2\2\u0f6d\u0f6b\3\2\2\2\u0f6d\u0f6e\3\2"+
		"\2\2\u0f6e\u0f6f\3\2\2\2\u0f6f\u0f70\7\u0135\2\2\u0f70\u0f72\3\2\2\2\u0f71"+
		"\u0f6b\3\2\2\2\u0f71\u0f72\3\2\2\2\u0f72\u0f97\3\2\2\2\u0f73\u0f97\5\u0130"+
		"\u0099\2\u0f74\u0f97\5\u0104\u0083\2\u0f75\u0f77\7\u0149\2\2\u0f76\u0f78"+
		"\5\6\4\2\u0f77\u0f76\3\2\2\2\u0f78\u0f79\3\2\2\2\u0f79\u0f77\3\2\2\2\u0f79"+
		"\u0f7a\3\2\2\2\u0f7a\u0f81\3\2\2\2\u0f7b\u0f7d\7\u00cf\2\2\u0f7c\u0f7e"+
		"\5\6\4\2\u0f7d\u0f7c\3\2\2\2\u0f7e\u0f7f\3\2\2\2\u0f7f\u0f7d\3\2\2\2\u0f7f"+
		"\u0f80\3\2\2\2\u0f80\u0f82\3\2\2\2\u0f81\u0f7b\3\2\2\2\u0f81\u0f82\3\2"+
		"\2\2\u0f82\u0f83\3\2\2\2\u0f83\u0f84\5\u010e\u0088\2\u0f84\u0f97\3\2\2"+
		"\2\u0f85\u0f87\7\u0179\2\2\u0f86\u0f88\5\6\4\2\u0f87\u0f86\3\2\2\2\u0f88"+
		"\u0f89\3\2\2\2\u0f89\u0f87\3\2\2\2\u0f89\u0f8a\3\2\2\2\u0f8a\u0f91\3\2"+
		"\2\2\u0f8b\u0f8d\7\u00cf\2\2\u0f8c\u0f8e\5\6\4\2\u0f8d\u0f8c\3\2\2\2\u0f8e"+
		"\u0f8f\3\2\2\2\u0f8f\u0f8d\3\2\2\2\u0f8f\u0f90\3\2\2\2\u0f90\u0f92\3\2"+
		"\2\2\u0f91\u0f8b\3\2\2\2\u0f91\u0f92\3\2\2\2\u0f92\u0f93\3\2\2\2\u0f93"+
		"\u0f94\5\u00eav\2\u0f94\u0f97\3\2\2\2\u0f95\u0f97\5\u0106\u0084\2\u0f96"+
		"\u0ee8\3\2\2\2\u0f96\u0f00\3\2\2\2\u0f96\u0f16\3\2\2\2\u0f96\u0f34\3\2"+
		"\2\2\u0f96\u0f37\3\2\2\2\u0f96\u0f47\3\2\2\2\u0f96\u0f5f\3\2\2\2\u0f96"+
		"\u0f69\3\2\2\2\u0f96\u0f73\3\2\2\2\u0f96\u0f74\3\2\2\2\u0f96\u0f75\3\2"+
		"\2\2\u0f96\u0f85\3\2\2\2\u0f96\u0f95\3\2\2\2\u0f97\u0103\3\2\2\2\u0f98"+
		"\u0fa0\7\u0144\2\2\u0f99\u0f9b\5\6\4\2\u0f9a\u0f99\3\2\2\2\u0f9b\u0f9c"+
		"\3\2\2\2\u0f9c\u0f9a\3\2\2\2\u0f9c\u0f9d\3\2\2\2\u0f9d\u0f9e\3\2\2\2\u0f9e"+
		"\u0f9f\7\u00cf\2\2\u0f9f\u0fa1\3\2\2\2\u0fa0\u0f9a\3\2\2\2\u0fa0\u0fa1"+
		"\3\2\2\2\u0fa1\u0fa3\3\2\2\2\u0fa2\u0fa4\5\6\4\2\u0fa3\u0fa2\3\2\2\2\u0fa4"+
		"\u0fa5\3\2\2\2\u0fa5\u0fa3\3\2\2\2\u0fa5\u0fa6\3\2\2\2\u0fa6\u0fa8\3\2"+
		"\2\2\u0fa7\u0f98\3\2\2\2\u0fa7\u0fa8\3\2\2\2\u0fa8\u0fa9\3\2\2\2\u0fa9"+
		"\u0fb9\t\17\2\2\u0faa\u0fac\5\6\4\2\u0fab\u0faa\3\2\2\2\u0fac\u0fad\3"+
		"\2\2\2\u0fad\u0fab\3\2\2\2\u0fad\u0fae\3\2\2\2\u0fae\u0faf\3\2\2\2\u0faf"+
		"\u0fb7\7\u0140\2\2\u0fb0\u0fb2\5\6\4\2\u0fb1\u0fb0\3\2\2\2\u0fb2\u0fb3"+
		"\3\2\2\2\u0fb3\u0fb1\3\2\2\2\u0fb3\u0fb4\3\2\2\2\u0fb4\u0fb5\3\2\2\2\u0fb5"+
		"\u0fb6\78\2\2\u0fb6\u0fb8\3\2\2\2\u0fb7\u0fb1\3\2\2\2\u0fb7\u0fb8\3\2"+
		"\2\2\u0fb8\u0fba\3\2\2\2\u0fb9\u0fab\3\2\2\2\u0fb9\u0fba\3\2\2\2\u0fba"+
		"\u0105\3\2\2\2\u0fbb\u0fbd\7\u0157\2\2\u0fbc\u0fbe\5\6\4\2\u0fbd\u0fbc"+
		"\3\2\2\2\u0fbe\u0fbf\3\2\2\2\u0fbf\u0fbd\3\2\2\2\u0fbf\u0fc0\3\2\2\2\u0fc0"+
		"\u0fc1\3\2\2\2\u0fc1\u0fcb\5\u010c\u0087\2\u0fc2\u0fc4\5\6\4\2\u0fc3\u0fc2"+
		"\3\2\2\2\u0fc4\u0fc5\3\2\2\2\u0fc5\u0fc3\3\2\2\2\u0fc5\u0fc6\3\2\2\2\u0fc6"+
		"\u0fc7\3\2\2\2\u0fc7\u0fc8\5\u010c\u0087\2\u0fc8\u0fca\3\2\2\2\u0fc9\u0fc3"+
		"\3\2\2\2\u0fca\u0fcd\3\2\2\2\u0fcb\u0fc9\3\2\2\2\u0fcb\u0fcc\3\2\2\2\u0fcc"+
		"\u0fd5\3\2\2\2\u0fcd\u0fcb\3\2\2\2\u0fce\u0fd0\5\6\4\2\u0fcf\u0fce\3\2"+
		"\2\2\u0fd0\u0fd1\3\2\2\2\u0fd1\u0fcf\3\2\2\2\u0fd1\u0fd2\3\2\2\2\u0fd2"+
		"\u0fd3\3\2\2\2\u0fd3\u0fd4\7\u0175\2\2\u0fd4\u0fd6\3\2\2\2\u0fd5\u0fcf"+
		"\3\2\2\2\u0fd5\u0fd6\3\2\2\2\u0fd6\u0fe0\3\2\2\2\u0fd7\u0fd9\5\6\4\2\u0fd8"+
		"\u0fd7\3\2\2\2\u0fd9\u0fda\3\2\2\2\u0fda\u0fd8\3\2\2\2\u0fda\u0fdb\3\2"+
		"\2\2\u0fdb\u0fdc\3\2\2\2\u0fdc\u0fdd\5\u010a\u0086\2\u0fdd\u0fdf\3\2\2"+
		"\2\u0fde\u0fd8\3\2\2\2\u0fdf\u0fe2\3\2\2\2\u0fe0\u0fde\3\2\2\2\u0fe0\u0fe1"+
		"\3\2\2\2\u0fe1\u0fe4\3\2\2\2\u0fe2\u0fe0\3\2\2\2\u0fe3\u0fbb\3\2\2\2\u0fe4"+
		"\u0fe5\3\2\2\2\u0fe5\u0fe3\3\2\2\2\u0fe5\u0fe6\3\2\2\2\u0fe6\u0ffd\3\2"+
		"\2\2\u0fe7\u0fe9\5\6\4\2\u0fe8\u0fe7\3\2\2\2\u0fe9\u0fec\3\2\2\2\u0fea"+
		"\u0fe8\3\2\2\2\u0fea\u0feb\3\2\2\2\u0feb\u0fed\3\2\2\2\u0fec\u0fea\3\2"+
		"\2\2\u0fed\u0fef\7\u012e\2\2\u0fee\u0ff0\5\6\4\2\u0fef\u0fee\3\2\2\2\u0ff0"+
		"\u0ff1\3\2\2\2\u0ff1\u0fef\3\2\2\2\u0ff1\u0ff2\3\2\2\2\u0ff2\u0ff9\3\2"+
		"\2\2\u0ff3\u0ff5\7\u00fb\2\2\u0ff4\u0ff6\5\6\4\2\u0ff5\u0ff4\3\2\2\2\u0ff6"+
		"\u0ff7\3\2\2\2\u0ff7\u0ff5\3\2\2\2\u0ff7\u0ff8\3\2\2\2\u0ff8\u0ffa\3\2"+
		"\2\2\u0ff9\u0ff3\3\2\2\2\u0ff9\u0ffa\3\2\2\2\u0ffa\u0ffb\3\2\2\2\u0ffb"+
		"\u0ffc\5\u0108\u0085\2\u0ffc\u0ffe\3\2\2\2\u0ffd\u0fea\3\2\2\2\u0ffd\u0ffe"+
		"\3\2\2\2\u0ffe\u0107\3\2\2\2\u0fff\u1000\t\20\2\2\u1000\u0109\3\2\2\2"+
		"\u1001\u1002\7\u01af\2\2\u1002\u010b\3\2\2\2\u1003\u1004\7\u01af\2\2\u1004"+
		"\u010d\3\2\2\2\u1005\u1006\5\u01ae\u00d8\2\u1006\u010f\3\2\2\2\u1007\u1008"+
		"\7\u01ad\2\2\u1008\u0111\3\2\2\2\u1009\u100b\7\u0128\2\2\u100a\u100c\5"+
		"\6\4\2\u100b\u100a\3\2\2\2\u100c\u100d\3\2\2\2\u100d\u100b\3\2\2\2\u100d"+
		"\u100e\3\2\2\2\u100e\u100f\3\2\2\2\u100f\u1010\7\u00ba\2\2\u1010\u1054"+
		"\3\2\2\2\u1011\u1054\7\u0134\2\2\u1012\u1014\7\u0105\2\2\u1013\u1015\5"+
		"\6\4\2\u1014\u1013\3\2\2\2\u1015\u1016\3\2\2\2\u1016\u1014\3\2\2\2\u1016"+
		"\u1017\3\2\2\2\u1017\u1018\3\2\2\2\u1018\u1019\7\u00ba\2\2\u1019\u1054"+
		"\3\2\2\2\u101a\u1054\7\u010a\2\2\u101b\u101d\7X\2\2\u101c\u101e\5\6\4"+
		"\2\u101d\u101c\3\2\2\2\u101e\u101f\3\2\2\2\u101f\u101d\3\2\2\2\u101f\u1020"+
		"\3\2\2\2\u1020\u1021\3\2\2\2\u1021\u1022\7\u00ba\2\2\u1022\u1025\3\2\2"+
		"\2\u1023\u1025\7\67\2\2\u1024\u101b\3\2\2\2\u1024\u1023\3\2\2\2\u1025"+
		"\u1027\3\2\2\2\u1026\u1028\5\6\4\2\u1027\u1026\3\2\2\2\u1028\u1029\3\2"+
		"\2\2\u1029\u1027\3\2\2\2\u1029\u102a\3\2\2\2\u102a\u102b\3\2\2\2\u102b"+
		"\u102c\5\u0114\u008b\2\u102c\u1054\3\2\2\2\u102d\u1054\7q\2\2\u102e\u1054"+
		"\7g\2\2\u102f\u1031\7X\2\2\u1030\u1032\5\6\4\2\u1031\u1030\3\2\2\2\u1032"+
		"\u1033\3\2\2\2\u1033\u1031\3\2\2\2\u1033\u1034\3\2\2\2\u1034\u1035\3\2"+
		"\2\2\u1035\u1036\7\u00ae\2\2\u1036\u1039\3\2\2\2\u1037\u1039\7\66\2\2"+
		"\u1038\u102f\3\2\2\2\u1038\u1037\3\2\2\2\u1039\u103b\3\2\2\2\u103a\u103c"+
		"\5\6\4\2\u103b\u103a\3\2\2\2\u103c\u103d\3\2\2\2\u103d\u103b\3\2\2\2\u103d"+
		"\u103e\3\2\2\2\u103e\u103f\3\2\2\2\u103f\u1040\5\u0114\u008b\2\u1040\u1054"+
		"\3\2\2\2\u1041\u1043\7\u0105\2\2\u1042\u1044\5\6\4\2\u1043\u1042\3\2\2"+
		"\2\u1044\u1045\3\2\2\2\u1045\u1043\3\2\2\2\u1045\u1046\3\2\2\2\u1046\u1047"+
		"\3\2\2\2\u1047\u1048\7\u00ae\2\2\u1048\u1054\3\2\2\2\u1049\u1054\7\u0109"+
		"\2\2\u104a\u104c\7\u0128\2\2\u104b\u104d\5\6\4\2\u104c\u104b\3\2\2\2\u104d"+
		"\u104e\3\2\2\2\u104e\u104c\3\2\2\2\u104e\u104f\3\2\2\2\u104f\u1050\3\2"+
		"\2\2\u1050\u1051\7\u00ae\2\2\u1051\u1054\3\2\2\2\u1052\u1054\7\u0133\2"+
		"\2\u1053\u1009\3\2\2\2\u1053\u1011\3\2\2\2\u1053\u1012\3\2\2\2\u1053\u101a"+
		"\3\2\2\2\u1053\u1024\3\2\2\2\u1053\u102d\3\2\2\2\u1053\u102e\3\2\2\2\u1053"+
		"\u1038\3\2\2\2\u1053\u1041\3\2\2\2\u1053\u1049\3\2\2\2\u1053\u104a\3\2"+
		"\2\2\u1053\u1052\3\2\2\2\u1054\u0113\3\2\2\2\u1055\u1056\t\20\2\2\u1056"+
		"\u0115\3\2\2\2\u1057\u1069\5\u011a\u008e\2\u1058\u105a\7\u010d\2\2\u1059"+
		"\u105b\5\6\4\2\u105a\u1059\3\2\2\2\u105b\u105c\3\2\2\2\u105c\u105a\3\2"+
		"\2\2\u105c\u105d\3\2\2\2\u105d\u105e\3\2\2\2\u105e\u105f\5\u011a\u008e"+
		"\2\u105f\u1069\3\2\2\2\u1060\u1062\7\u00f1\2\2\u1061\u1063\5\6\4\2\u1062"+
		"\u1061\3\2\2\2\u1063\u1064\3\2\2\2\u1064\u1062\3\2\2\2\u1064\u1065\3\2"+
		"\2\2\u1065\u1066\3\2\2\2\u1066\u1067\7\u0105\2\2\u1067\u1069\3\2\2\2\u1068"+
		"\u1057\3\2\2\2\u1068\u1058\3\2\2\2\u1068\u1060\3\2\2\2\u1069\u0117\3\2"+
		"\2\2\u106a\u1080\5\u011a\u008e\2\u106b\u106d\5\6\4\2\u106c\u106b\3\2\2"+
		"\2\u106d\u106e\3\2\2\2\u106e\u106c\3\2\2\2\u106e\u106f\3\2\2\2\u106f\u1076"+
		"\3\2\2\2\u1070\u1072\7\u00fb\2\2\u1071\u1073\5\6\4\2\u1072\u1071\3\2\2"+
		"\2\u1073\u1074\3\2\2\2\u1074\u1072\3\2\2\2\u1074\u1075\3\2\2\2\u1075\u1077"+
		"\3\2\2\2\u1076\u1070\3\2\2\2\u1076\u1077\3\2\2\2\u1077\u1078\3\2\2\2\u1078"+
		"\u107a\7\u00f1\2\2\u1079\u107b\5\6\4\2\u107a\u1079\3\2\2\2\u107b\u107c"+
		"\3\2\2\2\u107c\u107a\3\2\2\2\u107c\u107d\3\2\2\2\u107d\u107e\3\2\2\2\u107e"+
		"\u107f\7\u0105\2\2\u107f\u1081\3\2\2\2\u1080\u106c\3\2\2\2\u1080\u1081"+
		"\3\2\2\2\u1081\u108b\3\2\2\2\u1082\u1084\7\u010d\2\2\u1083\u1085\5\6\4"+
		"\2\u1084\u1083\3\2\2\2\u1085\u1086\3\2\2\2\u1086\u1084\3\2\2\2\u1086\u1087"+
		"\3\2\2\2\u1087\u1088\3\2\2\2\u1088\u1089\5\u011a\u008e\2\u1089\u108b\3"+
		"\2\2\2\u108a\u106a\3\2\2\2\u108a\u1082\3\2\2\2\u108b\u0119\3\2\2\2\u108c"+
		"\u108d\7\u01ad\2\2\u108d\u011b\3\2\2\2\u108e\u1090\7\u00cf\2\2\u108f\u1091"+
		"\5\6\4\2\u1090\u108f\3\2\2\2\u1091\u1092\3\2\2\2\u1092\u1090\3\2\2\2\u1092"+
		"\u1093\3\2\2\2\u1093\u1095\3\2\2\2\u1094\u108e\3\2\2\2\u1094\u1095\3\2"+
		"\2\2\u1095\u1096\3\2\2\2\u1096\u114d\7\u00b6\2\2\u1097\u1099\7=\2\2\u1098"+
		"\u109a\5\6\4\2\u1099\u1098\3\2\2\2\u109a\u109b\3\2\2\2\u109b\u1099\3\2"+
		"\2\2\u109b\u109c\3\2\2\2\u109c\u109d\3\2\2\2\u109d\u109e\5\u012a\u0096"+
		"\2\u109e\u114d\3\2\2\2\u109f\u10a7\7X\2\2\u10a0\u10a2\5\6\4\2\u10a1\u10a0"+
		"\3\2\2\2\u10a2\u10a3\3\2\2\2\u10a3\u10a1\3\2\2\2\u10a3\u10a4\3\2\2\2\u10a4"+
		"\u10a5\3\2\2\2\u10a5\u10a6\7\u00cf\2\2\u10a6\u10a8\3\2\2\2\u10a7\u10a1"+
		"\3\2\2\2\u10a7\u10a8\3\2\2\2\u10a8\u10b4\3\2\2\2\u10a9\u10b1\7Y\2\2\u10aa"+
		"\u10ac\5\6\4\2\u10ab\u10aa\3\2\2\2\u10ac\u10ad\3\2\2\2\u10ad\u10ab\3\2"+
		"\2\2\u10ad\u10ae\3\2\2\2\u10ae\u10af\3\2\2\2\u10af\u10b0\7\25\2\2\u10b0"+
		"\u10b2\3\2\2\2\u10b1\u10ab\3\2\2\2\u10b1\u10b2\3\2\2\2\u10b2\u10b4\3\2"+
		"\2\2\u10b3\u109f\3\2\2\2\u10b3\u10a9\3\2\2\2\u10b4\u10b6\3\2\2\2\u10b5"+
		"\u10b7\5\6\4\2\u10b6\u10b5\3\2\2\2\u10b7\u10b8\3\2\2\2\u10b8\u10b6\3\2"+
		"\2\2\u10b8\u10b9\3\2\2\2\u10b9\u10d4\3\2\2\2\u10ba\u10c4\5\u0128\u0095"+
		"\2\u10bb\u10bd\5\6\4\2\u10bc\u10bb\3\2\2\2\u10bd\u10c0\3\2\2\2\u10be\u10bc"+
		"\3\2\2\2\u10be\u10bf\3\2\2\2\u10bf\u10c1\3\2\2\2\u10c0\u10be\3\2\2\2\u10c1"+
		"\u10c3\5\u0128\u0095\2\u10c2\u10be\3\2\2\2\u10c3\u10c6\3\2\2\2\u10c4\u10c2"+
		"\3\2\2\2\u10c4\u10c5\3\2\2\2\u10c5\u10d5\3\2\2\2\u10c6\u10c4\3\2\2\2\u10c7"+
		"\u10d1\7\u00a9\2\2\u10c8\u10ca\5\6\4\2\u10c9\u10c8\3\2\2\2\u10ca\u10cd"+
		"\3\2\2\2\u10cb\u10c9\3\2\2\2\u10cb\u10cc\3\2\2\2\u10cc\u10ce\3\2\2\2\u10cd"+
		"\u10cb\3\2\2\2\u10ce\u10d0\5\u0128\u0095\2\u10cf\u10cb\3\2\2\2\u10d0\u10d3"+
		"\3\2\2\2\u10d1\u10cf\3\2\2\2\u10d1\u10d2\3\2\2\2\u10d2\u10d5\3\2\2\2\u10d3"+
		"\u10d1\3\2\2\2\u10d4\u10ba\3\2\2\2\u10d4\u10c7\3\2\2\2\u10d5\u114d\3\2"+
		"\2\2\u10d6\u10d8\7\u0105\2\2\u10d7\u10d9\5\6\4\2\u10d8\u10d7\3\2\2\2\u10d9"+
		"\u10da\3\2\2\2\u10da\u10d8\3\2\2\2\u10da\u10db\3\2\2\2\u10db\u10f8\3\2"+
		"\2\2\u10dc\u10de\7\u00da\2\2\u10dd\u10df\5\6\4\2\u10de\u10dd\3\2\2\2\u10df"+
		"\u10e0\3\2\2\2\u10e0\u10de\3\2\2\2\u10e0\u10e1\3\2\2\2\u10e1\u10e8\3\2"+
		"\2\2\u10e2\u10e4\7\u00cf\2\2\u10e3\u10e5\5\6\4\2\u10e4\u10e3\3\2\2\2\u10e5"+
		"\u10e6\3\2\2\2\u10e6\u10e4\3\2\2\2\u10e6\u10e7\3\2\2\2\u10e7\u10e9\3\2"+
		"\2\2\u10e8\u10e2\3\2\2\2\u10e8\u10e9\3\2\2\2\u10e9\u10f9\3\2\2\2\u10ea"+
		"\u10ec\7\u00db\2\2\u10eb\u10ed\5\6\4\2\u10ec\u10eb\3\2\2\2\u10ed\u10ee"+
		"\3\2\2\2\u10ee\u10ec\3\2\2\2\u10ee\u10ef\3\2\2\2\u10ef\u10f6\3\2\2\2\u10f0"+
		"\u10f2\7\25\2\2\u10f1\u10f3\5\6\4\2\u10f2\u10f1\3\2\2\2\u10f3\u10f4\3"+
		"\2\2\2\u10f4\u10f2\3\2\2\2\u10f4\u10f5\3\2\2\2\u10f5\u10f7\3\2\2\2\u10f6"+
		"\u10f0\3\2\2\2\u10f6\u10f7\3\2\2\2\u10f7\u10f9\3\2\2\2\u10f8\u10dc\3\2"+
		"\2\2\u10f8\u10ea\3\2\2\2\u10f8\u10f9\3\2\2\2\u10f9\u10fa\3\2\2\2\u10fa"+
		"\u1102\5\u0126\u0094\2\u10fb\u10fd\5\6\4\2\u10fc\u10fb\3\2\2\2\u10fd\u10fe"+
		"\3\2\2\2\u10fe\u10fc\3\2\2\2\u10fe\u10ff\3\2\2\2\u10ff\u1100\3\2\2\2\u1100"+
		"\u1101\t\21\2\2\u1101\u1103\3\2\2\2\u1102\u10fc\3\2\2\2\u1102\u1103\3"+
		"\2\2\2\u1103\u1111\3\2\2\2\u1104\u1106\5\6\4\2\u1105\u1104\3\2\2\2\u1106"+
		"\u1107\3\2\2\2\u1107\u1105\3\2\2\2\u1107\u1108\3\2\2\2\u1108\u1109\3\2"+
		"\2\2\u1109\u110b\7\u00ba\2\2\u110a\u110c\5\6\4\2\u110b\u110a\3\2\2\2\u110c"+
		"\u110d\3\2\2\2\u110d\u110b\3\2\2\2\u110d\u110e\3\2\2\2\u110e\u110f\3\2"+
		"\2\2\u110f\u1110\5\u0124\u0093\2\u1110\u1112\3\2\2\2\u1111\u1105\3\2\2"+
		"\2\u1111\u1112\3\2\2\2\u1112\u1126\3\2\2\2\u1113\u1115\5\6\4\2\u1114\u1113"+
		"\3\2\2\2\u1115\u1116\3\2\2\2\u1116\u1114\3\2\2\2\u1116\u1117\3\2\2\2\u1117"+
		"\u1118\3\2\2\2\u1118\u111a\7\u00aa\2\2\u1119\u111b\5\6\4\2\u111a\u1119"+
		"\3\2\2\2\u111b\u111c\3\2\2\2\u111c\u111a\3\2\2\2\u111c\u111d\3\2\2\2\u111d"+
		"\u111e\3\2\2\2\u111e\u1120\7q\2\2\u111f\u1121\5\6\4\2\u1120\u111f\3\2"+
		"\2\2\u1121\u1122\3\2\2\2\u1122\u1120\3\2\2\2\u1122\u1123\3\2\2\2\u1123"+
		"\u1124\3\2\2\2\u1124\u1125\5\u0122\u0092\2\u1125\u1127\3\2\2\2\u1126\u1114"+
		"\3\2\2\2\u1126\u1127\3\2\2\2\u1127\u113b\3\2\2\2\u1128\u112a\5\6\4\2\u1129"+
		"\u1128\3\2\2\2\u112a\u112b\3\2\2\2\u112b\u1129\3\2\2\2\u112b\u112c\3\2"+
		"\2\2\u112c\u112d\3\2\2\2\u112d\u112f\7\u00d6\2\2\u112e\u1130\5\6\4\2\u112f"+
		"\u112e\3\2\2\2\u1130\u1131\3\2\2\2\u1131\u112f\3\2\2\2\u1131\u1132\3\2"+
		"\2\2\u1132\u1133\3\2\2\2\u1133\u1135\7q\2\2\u1134\u1136\5\6\4\2\u1135"+
		"\u1134\3\2\2\2\u1136\u1137\3\2\2\2\u1137\u1135\3\2\2\2\u1137\u1138\3\2"+
		"\2\2\u1138\u1139\3\2\2\2\u1139\u113a\5\u0120\u0091\2\u113a\u113c\3\2\2"+
		"\2\u113b\u1129\3\2\2\2\u113b\u113c\3\2\2\2\u113c\u114a\3\2\2\2\u113d\u113f"+
		"\5\6\4\2\u113e\u113d\3\2\2\2\u113f\u1140\3\2\2\2\u1140\u113e\3\2\2\2\u1140"+
		"\u1141\3\2\2\2\u1141\u1142\3\2\2\2\u1142\u1144\7\u00ae\2\2\u1143\u1145"+
		"\5\6\4\2\u1144\u1143\3\2\2\2\u1145\u1146\3\2\2\2\u1146\u1144\3\2\2\2\u1146"+
		"\u1147\3\2\2\2\u1147\u1148\3\2\2\2\u1148\u1149\5\u011e\u0090\2\u1149\u114b"+
		"\3\2\2\2\u114a\u113e\3\2\2\2\u114a\u114b\3\2\2\2\u114b\u114d\3\2\2\2\u114c"+
		"\u1094\3\2\2\2\u114c\u1097\3\2\2\2\u114c\u10b3\3\2\2\2\u114c\u10d6\3\2"+
		"\2\2\u114d\u011d\3\2\2\2\u114e\u114f\7\u01ad\2\2\u114f\u011f\3\2\2\2\u1150"+
		"\u1151\7\u01ad\2\2\u1151\u0121\3\2\2\2\u1152\u1153\7\u01ad\2\2\u1153\u0123"+
		"\3\2\2\2\u1154\u1155\7\u01ad\2\2\u1155\u0125\3\2\2\2\u1156\u1157\7\u01ad"+
		"\2\2\u1157\u0127\3\2\2\2\u1158\u1159\5\u01ae\u00d8\2\u1159\u0129\3\2\2"+
		"\2\u115a\u115b\7\u01ac\2\2\u115b\u012b\3\2\2\2\u115c\u1164\7\u0176\2\2"+
		"\u115d\u115f\5\6\4\2\u115e\u115d\3\2\2\2\u115f\u1160\3\2\2\2\u1160\u115e"+
		"\3\2\2\2\u1160\u1161\3\2\2\2\u1161\u1162\3\2\2\2\u1162\u1163\7\u00cf\2"+
		"\2\u1163\u1165\3\2\2\2\u1164\u115e\3\2\2\2\u1164\u1165\3\2\2\2\u1165\u1167"+
		"\3\2\2\2\u1166\u1168\5\6\4\2\u1167\u1166\3\2\2\2\u1168\u1169\3\2\2\2\u1169"+
		"\u1167\3\2\2\2\u1169\u116a\3\2\2\2\u116a\u116c\3\2\2\2\u116b\u115c\3\2"+
		"\2\2\u116b\u116c\3\2\2\2\u116c\u116d\3\2\2\2\u116d\u116e\5\u012e\u0098"+
		"\2\u116e\u012d\3\2\2\2\u116f\u11af\7&\2\2\u1170\u1178\7\'\2\2\u1171\u1173"+
		"\5\6\4\2\u1172\u1171\3\2\2\2\u1173\u1174\3\2\2\2\u1174\u1172\3\2\2\2\u1174"+
		"\u1175\3\2\2\2\u1175\u1176\3\2\2\2\u1176\u1177\t\22\2\2\u1177\u1179\3"+
		"\2\2\2\u1178\u1172\3\2\2\2\u1178\u1179\3\2\2\2\u1179\u11af\3\2\2\2\u117a"+
		"\u1182\7*\2\2\u117b\u117d\5\6\4\2\u117c\u117b\3\2\2\2\u117d\u117e\3\2"+
		"\2\2\u117e\u117c\3\2\2\2\u117e\u117f\3\2\2\2\u117f\u1180\3\2\2\2\u1180"+
		"\u1181\t\22\2\2\u1181\u1183\3\2\2\2\u1182\u117c\3\2\2\2\u1182\u1183\3"+
		"\2\2\2\u1183\u11af\3\2\2\2\u1184\u118c\7)\2\2\u1185\u1187\5\6\4\2\u1186"+
		"\u1185\3\2\2\2\u1187\u1188\3\2\2\2\u1188\u1186\3\2\2\2\u1188\u1189\3\2"+
		"\2\2\u1189\u118a\3\2\2\2\u118a\u118b\t\22\2\2\u118b\u118d\3\2\2\2\u118c"+
		"\u1186\3\2\2\2\u118c\u118d\3\2\2\2\u118d\u11af\3\2\2\2\u118e\u1196\7("+
		"\2\2\u118f\u1191\5\6\4\2\u1190\u118f\3\2\2\2\u1191\u1192\3\2\2\2\u1192"+
		"\u1190\3\2\2\2\u1192\u1193\3\2\2\2\u1193\u1194\3\2\2\2\u1194\u1195\t\22"+
		"\2\2\u1195\u1197\3\2\2\2\u1196\u1190\3\2\2\2\u1196\u1197\3\2\2\2\u1197"+
		"\u11af\3\2\2\2\u1198\u11af\7D\2\2\u1199\u11af\7E\2\2\u119a\u11af\7F\2"+
		"\2\u119b\u11af\7G\2\2\u119c\u11af\7H\2\2\u119d\u11af\7I\2\2\u119e\u11af"+
		"\7J\2\2\u119f\u11af\7C\2\2\u11a0\u11af\7L\2\2\u11a1\u11af\7M\2\2\u11a2"+
		"\u11af\7N\2\2\u11a3\u11af\7O\2\2\u11a4\u11af\7P\2\2\u11a5\u11af\7Q\2\2"+
		"\u11a6\u11af\7s\2\2\u11a7\u11af\7\u00ad\2\2\u11a8\u11af\7\u00ac\2\2\u11a9"+
		"\u11af\7\u00ab\2\2\u11aa\u11af\7\u00c4\2\2\u11ab\u11af\7\u0103\2\2\u11ac"+
		"\u11af\7\u010e\2\2\u11ad\u11af\7\u010f\2\2\u11ae\u116f\3\2\2\2\u11ae\u1170"+
		"\3\2\2\2\u11ae\u117a\3\2\2\2\u11ae\u1184\3\2\2\2\u11ae\u118e\3\2\2\2\u11ae"+
		"\u1198\3\2\2\2\u11ae\u1199\3\2\2\2\u11ae\u119a\3\2\2\2\u11ae\u119b\3\2"+
		"\2\2\u11ae\u119c\3\2\2\2\u11ae\u119d\3\2\2\2\u11ae\u119e\3\2\2\2\u11ae"+
		"\u119f\3\2\2\2\u11ae\u11a0\3\2\2\2\u11ae\u11a1\3\2\2\2\u11ae\u11a2\3\2"+
		"\2\2\u11ae\u11a3\3\2\2\2\u11ae\u11a4\3\2\2\2\u11ae\u11a5\3\2\2\2\u11ae"+
		"\u11a6\3\2\2\2\u11ae\u11a7\3\2\2\2\u11ae\u11a8\3\2\2\2\u11ae\u11a9\3\2"+
		"\2\2\u11ae\u11aa\3\2\2\2\u11ae\u11ab\3\2\2\2\u11ae\u11ac\3\2\2\2\u11ae"+
		"\u11ad\3\2\2\2\u11af\u012f\3\2\2\2\u11b0\u11b2\t\23\2\2\u11b1\u11b3\5"+
		"\6\4\2\u11b2\u11b1\3\2\2\2\u11b3\u11b4\3\2\2\2\u11b4\u11b2\3\2\2\2\u11b4"+
		"\u11b5\3\2\2\2\u11b5\u11bc\3\2\2\2\u11b6\u11b8\7\u00cf\2\2\u11b7\u11b9"+
		"\5\6\4\2\u11b8\u11b7\3\2\2\2\u11b9\u11ba\3\2\2\2\u11ba\u11b8\3\2\2\2\u11ba"+
		"\u11bb\3\2\2\2\u11bb\u11bd\3\2\2\2\u11bc\u11b6\3\2\2\2\u11bc\u11bd\3\2"+
		"\2\2\u11bd\u11be\3\2\2\2\u11be\u11bf\5\u0132\u009a\2\u11bf\u0131\3\2\2"+
		"\2\u11c0\u11c2\5\u0134\u009b\2\u11c1\u11c0\3\2\2\2\u11c2\u11c3\3\2\2\2"+
		"\u11c3\u11c1\3\2\2\2\u11c3\u11c4\3\2\2\2\u11c4\u0133\3\2\2\2\u11c5\u11c6"+
		"\t\24\2\2\u11c6\u0135\3\2\2\2\u11c7\u11c8\7\u01af\2\2\u11c8\u0137\3\2"+
		"\2\2\u11c9\u11ca\7\u01af\2\2\u11ca\u0139\3\2\2\2\u11cb\u11ce\5\u0154\u00ab"+
		"\2\u11cc\u11ce\5\u014a\u00a6\2\u11cd\u11cb\3\2\2\2\u11cd\u11cc\3\2\2\2"+
		"\u11ce\u013b\3\2\2\2\u11cf\u11d7\7\u0128\2\2\u11d0\u11d2\5\6\4\2\u11d1"+
		"\u11d0\3\2\2\2\u11d2\u11d3\3\2\2\2\u11d3\u11d1\3\2\2\2\u11d3\u11d4\3\2"+
		"\2\2\u11d4\u11d5\3\2\2\2\u11d5\u11d6\7\u00cf\2\2\u11d6\u11d8\3\2\2\2\u11d7"+
		"\u11d1\3\2\2\2\u11d7\u11d8\3\2\2\2\u11d8\u11e4\3\2\2\2\u11d9\u11e1\7\u012a"+
		"\2\2\u11da\u11dc\5\6\4\2\u11db\u11da\3\2\2\2\u11dc\u11dd\3\2\2\2\u11dd"+
		"\u11db\3\2\2\2\u11dd\u11de\3\2\2\2\u11de\u11df\3\2\2\2\u11df\u11e0\7\25"+
		"\2\2\u11e0\u11e2\3\2\2\2\u11e1\u11db\3\2\2\2\u11e1\u11e2\3\2\2\2\u11e2"+
		"\u11e4\3\2\2\2\u11e3\u11cf\3\2\2\2\u11e3\u11d9\3\2\2\2\u11e4\u11e6\3\2"+
		"\2\2\u11e5\u11e7\5\6\4\2\u11e6\u11e5\3\2\2\2\u11e7\u11e8\3\2\2\2\u11e8"+
		"\u11e6\3\2\2\2\u11e8\u11e9\3\2\2\2\u11e9\u11ea\3\2\2\2\u11ea\u11f4\5\u013e"+
		"\u00a0\2\u11eb\u11ed\5\6\4\2\u11ec\u11eb\3\2\2\2\u11ed\u11f0\3\2\2\2\u11ee"+
		"\u11ec\3\2\2\2\u11ee\u11ef\3\2\2\2\u11ef\u11f1\3\2\2\2\u11f0\u11ee\3\2"+
		"\2\2\u11f1\u11f3\5\u013e\u00a0\2\u11f2\u11ee\3\2\2\2\u11f3\u11f6\3\2\2"+
		"\2\u11f4\u11f2\3\2\2\2\u11f4\u11f5\3\2\2\2\u11f5\u013d\3\2\2\2\u11f6\u11f4"+
		"\3\2\2\2\u11f7\u11f8\7\u01af\2\2\u11f8\u013f\3\2\2\2\u11f9\u11fb\7\u00dc"+
		"\2\2\u11fa\u11fc\5\6\4\2\u11fb\u11fa\3\2\2\2\u11fc\u11fd\3\2\2\2\u11fd"+
		"\u11fb\3\2\2\2\u11fd\u11fe\3\2\2\2\u11fe\u1205\3\2\2\2\u11ff\u1201\7\u00cf"+
		"\2\2\u1200\u1202\5\6\4\2\u1201\u1200\3\2\2\2\u1202\u1203\3\2\2\2\u1203"+
		"\u1201\3\2\2\2\u1203\u1204\3\2\2\2\u1204\u1206\3\2\2\2\u1205\u11ff\3\2"+
		"\2\2\u1205\u1206\3\2\2\2\u1206\u1207\3\2\2\2\u1207\u120f\5\u0148\u00a5"+
		"\2\u1208\u120a\5\6\4\2\u1209\u1208\3\2\2\2\u120a\u120b\3\2\2\2\u120b\u1209"+
		"\3\2\2\2\u120b\u120c\3\2\2\2\u120c\u120d\3\2\2\2\u120d\u120e\7\u00de\2"+
		"\2\u120e\u1210\3\2\2\2\u120f\u1209\3\2\2\2\u120f\u1210\3\2\2\2\u1210\u122e"+
		"\3\2\2\2\u1211\u1213\5\6\4\2\u1212\u1211\3\2\2\2\u1213\u1214\3\2\2\2\u1214"+
		"\u1212\3\2\2\2\u1214\u1215\3\2\2\2\u1215\u121c\3\2\2\2\u1216\u1218\7\u017f"+
		"\2\2\u1217\u1219\5\6\4\2\u1218\u1217\3\2\2\2\u1219\u121a\3\2\2\2\u121a"+
		"\u1218\3\2\2\2\u121a\u121b\3\2\2\2\u121b\u121d\3\2\2\2\u121c\u1216\3\2"+
		"\2\2\u121c\u121d\3\2\2\2\u121d\u121e\3\2\2\2\u121e\u1220\7\u00ae\2\2\u121f"+
		"\u1221\5\6\4\2\u1220\u121f\3\2\2\2\u1221\u1222\3\2\2\2\u1222\u1220\3\2"+
		"\2\2\u1222\u1223\3\2\2\2\u1223\u122a\3\2\2\2\u1224\u1226\7\36\2\2\u1225"+
		"\u1227\5\6\4\2\u1226\u1225\3\2\2\2\u1227\u1228\3\2\2\2\u1228\u1226\3\2"+
		"\2\2\u1228\u1229\3\2\2\2\u1229\u122b\3\2\2\2\u122a\u1224\3\2\2\2\u122a"+
		"\u122b\3\2\2\2\u122b\u122c\3\2\2\2\u122c\u122d\5\u0146\u00a4\2\u122d\u122f"+
		"\3\2\2\2\u122e\u1212\3\2\2\2\u122e\u122f\3\2\2\2\u122f\u124d\3\2\2\2\u1230"+
		"\u1232\5\6\4\2\u1231\u1230\3\2\2\2\u1232\u1233\3\2\2\2\u1233\u1231\3\2"+
		"\2\2\u1233\u1234\3\2\2\2\u1234\u123b\3\2\2\2\u1235\u1237\7\u00de\2\2\u1236"+
		"\u1238\5\6\4\2\u1237\u1236\3\2\2\2\u1238\u1239\3\2\2\2\u1239\u1237\3\2"+
		"\2\2\u1239\u123a\3\2\2\2\u123a\u123c\3\2\2\2\u123b\u1235\3\2\2\2\u123b"+
		"\u123c\3\2\2\2\u123c\u1243\3\2\2\2\u123d\u123f\7\36\2\2\u123e\u1240\5"+
		"\6\4\2\u123f\u123e\3\2\2\2\u1240\u1241\3\2\2\2\u1241\u123f\3\2\2\2\u1241"+
		"\u1242\3\2\2\2\u1242\u1244\3\2\2\2\u1243\u123d\3\2\2\2\u1243\u1244\3\2"+
		"\2\2\u1244\u1245\3\2\2\2\u1245\u1247\7\u016a\2\2\u1246\u1248\5\6\4\2\u1247"+
		"\u1246\3\2\2\2\u1248\u1249\3\2\2\2\u1249\u1247\3\2\2\2\u1249\u124a\3\2"+
		"\2\2\u124a\u124b\3\2\2\2\u124b\u124c\5\u0144\u00a3\2\u124c\u124e\3\2\2"+
		"\2\u124d\u1231\3\2\2\2\u124d\u124e\3\2\2\2\u124e\u126c\3\2\2\2\u124f\u1251"+
		"\5\6\4\2\u1250\u124f\3\2\2\2\u1251\u1252\3\2\2\2\u1252\u1250\3\2\2\2\u1252"+
		"\u1253\3\2\2\2\u1253\u125a\3\2\2\2\u1254\u1256\7\u00de\2\2\u1255\u1257"+
		"\5\6\4\2\u1256\u1255\3\2\2\2\u1257\u1258\3\2\2\2\u1258\u1256\3\2\2\2\u1258"+
		"\u1259\3\2\2\2\u1259\u125b\3\2\2\2\u125a\u1254\3\2\2\2\u125a\u125b\3\2"+
		"\2\2\u125b\u1262\3\2\2\2\u125c\u125e\7\36\2\2\u125d\u125f\5\6\4\2\u125e"+
		"\u125d\3\2\2\2\u125f\u1260\3\2\2\2\u1260\u125e\3\2\2\2\u1260\u1261\3\2"+
		"\2\2\u1261\u1263\3\2\2\2\u1262\u125c\3\2\2\2\u1262\u1263\3\2\2\2\u1263"+
		"\u1264\3\2\2\2\u1264\u1266\7\60\2\2\u1265\u1267\5\6\4\2\u1266\u1265\3"+
		"\2\2\2\u1267\u1268\3\2\2\2\u1268\u1266\3\2\2\2\u1268\u1269\3\2\2\2\u1269"+
		"\u126a\3\2\2\2\u126a\u126b\5\u0142\u00a2\2\u126b\u126d\3\2\2\2\u126c\u1250"+
		"\3\2\2\2\u126c\u126d\3\2\2\2\u126d\u0141\3\2\2\2\u126e\u1271\7\u01ad\2"+
		"\2\u126f\u1271\5\u01ae\u00d8\2\u1270\u126e\3\2\2\2\u1270\u126f\3\2\2\2"+
		"\u1271\u0143\3\2\2\2\u1272\u1275\7\u01ad\2\2\u1273\u1275\5\u01ae\u00d8"+
		"\2\u1274\u1272\3\2\2\2\u1274\u1273\3\2\2\2\u1275\u0145\3\2\2\2\u1276\u1279"+
		"\7\u01ad\2\2\u1277\u1279\5\u01ae\u00d8\2\u1278\u1276\3\2\2\2\u1278\u1277"+
		"\3\2\2\2\u1279\u0147\3\2\2\2\u127a\u127d\7\u01ad\2\2\u127b\u127d\5\u01ae"+
		"\u00d8\2\u127c\u127a\3\2\2\2\u127c\u127b\3\2\2\2\u127d\u0149\3\2\2\2\u127e"+
		"\u1280\7a\2\2\u127f\u1281\5\6\4\2\u1280\u127f\3\2\2\2\u1281\u1282\3\2"+
		"\2\2\u1282\u1280\3\2\2\2\u1282\u1283\3\2\2\2\u1283\u1298\3\2\2\2\u1284"+
		"\u128c\7\u011f\2\2\u1285\u1287\5\6\4\2\u1286\u1285\3\2\2\2\u1287\u1288"+
		"\3\2\2\2\u1288\u1286\3\2\2\2\u1288\u1289\3\2\2\2\u1289\u128a\3\2\2\2\u128a"+
		"\u128b\7\25\2\2\u128b\u128d\3\2\2\2\u128c\u1286\3\2\2\2\u128c\u128d\3"+
		"\2\2\2\u128d\u1299\3\2\2\2\u128e\u1296\7\u011e\2\2\u128f\u1291\5\6\4\2"+
		"\u1290\u128f\3\2\2\2\u1291\u1292\3\2\2\2\u1292\u1290\3\2\2\2\u1292\u1293"+
		"\3\2\2\2\u1293\u1294\3\2\2\2\u1294\u1295\7\u00cf\2\2\u1295\u1297\3\2\2"+
		"\2\u1296\u1290\3\2\2\2\u1296\u1297\3\2\2\2\u1297\u1299\3\2\2\2\u1298\u1284"+
		"\3\2\2\2\u1298\u128e\3\2\2\2\u1299\u129a\3\2\2\2\u129a\u12a4\5\u014c\u00a7"+
		"\2\u129b\u129d\5\6\4\2\u129c\u129b\3\2\2\2\u129d\u129e\3\2\2\2\u129e\u129c"+
		"\3\2\2\2\u129e\u129f\3\2\2\2\u129f\u12a0\3\2\2\2\u12a0\u12a1\5\u014c\u00a7"+
		"\2\u12a1\u12a3\3\2\2\2\u12a2\u129c\3\2\2\2\u12a3\u12a6\3\2\2\2\u12a4\u12a2"+
		"\3\2\2\2\u12a4\u12a5\3\2\2\2\u12a5\u014b\3\2\2\2\u12a6\u12a4\3\2\2\2\u12a7"+
		"\u12a8\7\u01af\2\2\u12a8\u014d\3\2\2\2\u12a9\u12ab\7\u0179\2\2\u12aa\u12ac"+
		"\5\6\4\2\u12ab\u12aa\3\2\2\2\u12ac\u12ad\3\2\2\2\u12ad\u12ab\3\2\2\2\u12ad"+
		"\u12ae\3\2\2\2\u12ae\u12af\3\2\2\2\u12af\u12b1\7\u00f8\2\2\u12b0\u12b2"+
		"\5\6\4\2\u12b1\u12b0\3\2\2\2\u12b2\u12b3\3\2\2\2\u12b3\u12b1\3\2\2\2\u12b3"+
		"\u12b4\3\2\2\2\u12b4\u12b5\3\2\2\2\u12b5\u12b7\t\25\2\2\u12b6\u12b8\5"+
		"\6\4\2\u12b7\u12b6\3\2\2\2\u12b8\u12b9\3\2\2\2\u12b9\u12b7\3\2\2\2\u12b9"+
		"\u12ba\3\2\2\2\u12ba\u12c1\3\2\2\2\u12bb\u12bd\7\u00cf\2\2\u12bc\u12be"+
		"\5\6\4\2\u12bd\u12bc\3\2\2\2\u12be\u12bf\3\2\2\2\u12bf\u12bd\3\2\2\2\u12bf"+
		"\u12c0\3\2\2\2\u12c0\u12c2\3\2\2\2\u12c1\u12bb\3\2\2\2\u12c1\u12c2\3\2"+
		"\2\2\u12c2\u12c3\3\2\2\2\u12c3\u12c4\5\u0150\u00a9\2\u12c4\u014f\3\2\2"+
		"\2\u12c5\u12c8\7\u01ac\2\2\u12c6\u12c8\5\u01ae\u00d8\2\u12c7\u12c5\3\2"+
		"\2\2\u12c7\u12c6\3\2\2\2\u12c8\u0151\3\2\2\2\u12c9\u12cb\7\u00d5\2\2\u12ca"+
		"\u12cc\5\6\4\2\u12cb\u12ca\3\2\2\2\u12cc\u12cd\3\2\2\2\u12cd\u12cb\3\2"+
		"\2\2\u12cd\u12ce\3\2\2\2\u12ce\u12e3\3\2\2\2\u12cf\u12d7\7\u011f\2\2\u12d0"+
		"\u12d2\5\6\4\2\u12d1\u12d0\3\2\2\2\u12d2\u12d3\3\2\2\2\u12d3\u12d1\3\2"+
		"\2\2\u12d3\u12d4\3\2\2\2\u12d4\u12d5\3\2\2\2\u12d5\u12d6\7\25\2\2\u12d6"+
		"\u12d8\3\2\2\2\u12d7\u12d1\3\2\2\2\u12d7\u12d8\3\2\2\2\u12d8\u12e4\3\2"+
		"\2\2\u12d9\u12e1\7\u011e\2\2\u12da\u12dc\5\6\4\2\u12db\u12da\3\2\2\2\u12dc"+
		"\u12dd\3\2\2\2\u12dd\u12db\3\2\2\2\u12dd\u12de\3\2\2\2\u12de\u12df\3\2"+
		"\2\2\u12df\u12e0\7\u00cf\2\2\u12e0\u12e2\3\2\2\2\u12e1\u12db\3\2\2\2\u12e1"+
		"\u12e2\3\2\2\2\u12e2\u12e4\3\2\2\2\u12e3\u12cf\3\2\2\2\u12e3\u12d9\3\2"+
		"\2\2\u12e4\u12e6\3\2\2\2\u12e5\u12e7\5\6\4\2\u12e6\u12e5\3\2\2\2\u12e7"+
		"\u12e8\3\2\2\2\u12e8\u12e6\3\2\2\2\u12e8\u12e9\3\2\2\2\u12e9\u12ea\3\2"+
		"\2\2\u12ea\u12eb\t\26\2\2\u12eb\u0153\3\2\2\2\u12ec\u12ee\7\u011e\2\2"+
		"\u12ed\u12ef\5\6\4\2\u12ee\u12ed\3\2\2\2\u12ef\u12f0\3\2\2\2\u12f0\u12ee"+
		"\3\2\2\2\u12f0\u12f1\3\2\2\2\u12f1\u12f2\3\2\2\2\u12f2\u12f3\5\u0156\u00ac"+
		"\2\u12f3\u0155\3\2\2\2\u12f4\u12f6\7T\2\2\u12f5\u12f7\5\6\4\2\u12f6\u12f5"+
		"\3\2\2\2\u12f7\u12f8\3\2\2\2\u12f8\u12f6\3\2\2\2\u12f8\u12f9\3\2\2\2\u12f9"+
		"\u12fb\3\2\2\2\u12fa\u12f4\3\2\2\2\u12fa\u12fb\3\2\2\2\u12fb\u1308\3\2"+
		"\2\2\u12fc\u12fe\5\u015a\u00ae\2\u12fd\u12ff\5\6\4\2\u12fe\u12fd\3\2\2"+
		"\2\u12ff\u1300\3\2\2\2\u1300\u12fe\3\2\2\2\u1300\u1301\3\2\2\2\u1301\u1302"+
		"\3\2\2\2\u1302\u1304\7\u0169\2\2\u1303\u1305\5\6\4\2\u1304\u1303\3\2\2"+
		"\2\u1305\u1306\3\2\2\2\u1306\u1304\3\2\2\2\u1306\u1307\3\2\2\2\u1307\u1309"+
		"\3\2\2\2\u1308\u12fc\3\2\2\2\u1308\u1309\3\2\2\2\u1309\u130a\3\2\2\2\u130a"+
		"\u130e\5\u015c\u00af\2\u130b\u130d\5\6\4\2\u130c\u130b\3\2\2\2\u130d\u1310"+
		"\3\2\2\2\u130e\u130c\3\2\2\2\u130e\u130f\3\2\2\2\u130f\u1318\3\2\2\2\u1310"+
		"\u130e\3\2\2\2\u1311\u1315\79\2\2\u1312\u1314\5\6\4\2\u1313\u1312\3\2"+
		"\2\2\u1314\u1317\3\2\2\2\u1315\u1313\3\2\2\2\u1315\u1316\3\2\2\2\u1316"+
		"\u1319\3\2\2\2\u1317\u1315\3\2\2\2\u1318\u1311\3\2\2\2\u1318\u1319\3\2"+
		"\2\2\u1319\u1370\3\2\2\2\u131a\u131c\7\u00cf\2\2\u131b\u131d\5\6\4\2\u131c"+
		"\u131b\3\2\2\2\u131d\u131e\3\2\2\2\u131e\u131c\3\2\2\2\u131e\u131f\3\2"+
		"\2\2\u131f\u1321\3\2\2\2\u1320\u131a\3\2\2\2\u1320\u1321\3\2\2\2\u1321"+
		"\u1322\3\2\2\2\u1322\u1324\7\u017b\2\2\u1323\u1325\5\6\4\2\u1324\u1323"+
		"\3\2\2\2\u1325\u1326\3\2\2\2\u1326\u1324\3\2\2\2\u1326\u1327\3\2\2\2\u1327"+
		"\u132e\3\2\2\2\u1328\u132a\7\u00c3\2\2\u1329\u132b\5\6\4\2\u132a\u1329"+
		"\3\2\2\2\u132b\u132c\3\2\2\2\u132c\u132a\3\2\2\2\u132c\u132d\3\2\2\2\u132d"+
		"\u132f\3\2\2\2\u132e\u1328\3\2\2\2\u132e\u132f\3\2\2\2\u132f\u1337\3\2"+
		"\2\2\u1330\u1334\7\u0146\2\2\u1331\u1333\5\6\4\2\u1332\u1331\3\2\2\2\u1333"+
		"\u1336\3\2\2\2\u1334\u1332\3\2\2\2\u1334\u1335\3\2\2\2\u1335\u1338\3\2"+
		"\2\2\u1336\u1334\3\2\2\2\u1337\u1330\3\2\2\2\u1337\u1338\3\2\2\2\u1338"+
		"\u1342\3\2\2\2\u1339\u133b\7\u00b1\2\2\u133a\u133c\5\6\4\2\u133b\u133a"+
		"\3\2\2\2\u133c\u133d\3\2\2\2\u133d\u133b\3\2\2\2\u133d\u133e\3\2\2\2\u133e"+
		"\u1340\3\2\2\2\u133f\u1339\3\2\2\2\u133f\u1340\3\2\2\2\u1340\u1341\3\2"+
		"\2\2\u1341\u1343\5\u015a\u00ae\2\u1342\u133f\3\2\2\2\u1342\u1343\3\2\2"+
		"\2\u1343\u134c\3\2\2\2\u1344\u1346\7\u0169\2\2\u1345\u1347\5\6\4\2\u1346"+
		"\u1345\3\2\2\2\u1347\u1348\3\2\2\2\u1348\u1346\3\2\2\2\u1348\u1349\3\2"+
		"\2\2\u1349\u134a\3\2\2\2\u134a\u134b\5\u015c\u00af\2\u134b\u134d\3\2\2"+
		"\2\u134c\u1344\3\2\2\2\u134c\u134d\3\2\2\2\u134d\u135b\3\2\2\2\u134e\u1350"+
		"\5\6\4\2\u134f\u134e\3\2\2\2\u1350\u1353\3\2\2\2\u1351\u134f\3\2\2\2\u1351"+
		"\u1352\3\2\2\2\u1352\u1354\3\2\2\2\u1353\u1351\3\2\2\2\u1354\u1358\79"+
		"\2\2\u1355\u1357\5\6\4\2\u1356\u1355\3\2\2\2\u1357\u135a\3\2\2\2\u1358"+
		"\u1356\3\2\2\2\u1358\u1359\3\2\2\2\u1359\u135c\3\2\2\2\u135a\u1358\3\2"+
		"\2\2\u135b\u1351\3\2\2\2\u135b\u135c\3\2\2\2\u135c\u136d\3\2\2\2\u135d"+
		"\u135f\7o\2\2\u135e\u1360\5\6\4\2\u135f\u135e\3\2\2\2\u1360\u1361\3\2"+
		"\2\2\u1361\u135f\3\2\2\2\u1361\u1362\3\2\2\2\u1362\u1369\3\2\2\2\u1363"+
		"\u1365\7\u00fb\2\2\u1364\u1366\5\6\4\2\u1365\u1364\3\2\2\2\u1366\u1367"+
		"\3\2\2\2\u1367\u1365\3\2\2\2\u1367\u1368\3\2\2\2\u1368\u136a\3\2\2\2\u1369"+
		"\u1363\3\2\2\2\u1369\u136a\3\2\2\2\u136a\u136b\3\2\2\2\u136b\u136c\5\u0158"+
		"\u00ad\2\u136c\u136e\3\2\2\2\u136d\u135d\3\2\2\2\u136d\u136e\3\2\2\2\u136e"+
		"\u1370\3\2\2\2\u136f\u12fa\3\2\2\2\u136f\u1320\3\2\2\2\u1370\u0157\3\2"+
		"\2\2\u1371\u1372\5\u01ae\u00d8\2\u1372\u0159\3\2\2\2\u1373\u1374\7\u01ad"+
		"\2\2\u1374\u015b\3\2\2\2\u1375\u1376\7\u01ad\2\2\u1376\u015d\3\2\2\2\u1377"+
		"\u1381\5\u00d4k\2\u1378\u137a\5\6\4\2\u1379\u1378\3\2\2\2\u137a\u137b"+
		"\3\2\2\2\u137b\u1379\3\2\2\2\u137b\u137c\3\2\2\2\u137c\u137f\3\2\2\2\u137d"+
		"\u1380\5\u0160\u00b1\2\u137e\u1380\7\u00a7\2\2\u137f\u137d\3\2\2\2\u137f"+
		"\u137e\3\2\2\2\u1380\u1382\3\2\2\2\u1381\u1379\3\2\2\2\u1381\u1382\3\2"+
		"\2\2\u1382\u138c\3\2\2\2\u1383\u1385\5\6\4\2\u1384\u1383\3\2\2\2\u1385"+
		"\u1386\3\2\2\2\u1386\u1384\3\2\2\2\u1386\u1387\3\2\2\2\u1387\u1388\3\2"+
		"\2\2\u1388\u1389\5\u0162\u00b2\2\u1389\u138b\3\2\2\2\u138a\u1384\3\2\2"+
		"\2\u138b\u138e\3\2\2\2\u138c\u138a\3\2\2\2\u138c\u138d\3\2\2\2\u138d\u138f"+
		"\3\2\2\2\u138e\u138c\3\2\2\2\u138f\u1390\7\u01a9\2\2\u1390\u015f\3\2\2"+
		"\2\u1391\u1392\7\u01af\2\2\u1392\u0161\3\2\2\2\u1393\u1395\7+\2\2\u1394"+
		"\u1396\5\6\4\2\u1395\u1394\3\2\2\2\u1396\u1397\3\2\2\2\u1397\u1395\3\2"+
		"\2\2\u1397\u1398\3\2\2\2\u1398\u1399\3\2\2\2\u1399\u139a\t\5\2\2\u139a"+
		"\u145e\3\2\2\2\u139b\u139d\7\u00b0\2\2\u139c\u139e\5\6\4\2\u139d\u139c"+
		"\3\2\2\2\u139e\u139f\3\2\2\2\u139f\u139d\3\2\2\2\u139f\u13a0\3\2\2\2\u13a0"+
		"\u13a7\3\2\2\2\u13a1\u13a3\7\u00cf\2\2\u13a2\u13a4\5\6\4\2\u13a3\u13a2"+
		"\3\2\2\2\u13a4\u13a5\3\2\2\2\u13a5\u13a3\3\2\2\2\u13a5\u13a6\3\2\2\2\u13a6"+
		"\u13a8\3\2\2\2\u13a7\u13a1\3\2\2\2\u13a7\u13a8\3\2\2\2\u13a8\u13a9\3\2"+
		"\2\2\u13a9\u13aa\5\u016e\u00b8\2\u13aa\u145e\3\2\2\2\u13ab\u13ad\7#\2"+
		"\2\u13ac\u13ae\5\6\4\2\u13ad\u13ac\3\2\2\2\u13ae\u13af\3\2\2\2\u13af\u13ad"+
		"\3\2\2\2\u13af\u13b0\3\2\2\2\u13b0\u13b7\3\2\2\2\u13b1\u13b3\7\u00cf\2"+
		"\2\u13b2\u13b4\5\6\4\2\u13b3\u13b2\3\2\2\2\u13b4\u13b5\3\2\2\2\u13b5\u13b3"+
		"\3\2\2\2\u13b5\u13b6\3\2\2\2\u13b6\u13b8\3\2\2\2\u13b7\u13b1\3\2\2\2\u13b7"+
		"\u13b8\3\2\2\2\u13b8\u13b9\3\2\2\2\u13b9\u13ba\5\u016e\u00b8\2\u13ba\u145e"+
		"\3\2\2\2\u13bb\u145e\7 \2\2\u13bc\u145e\7\u013c\2\2\u13bd\u145e\7\u012b"+
		"\2\2\u13be\u13c0\7\u0176\2\2\u13bf\u13c1\5\6\4\2\u13c0\u13bf\3\2\2\2\u13c1"+
		"\u13c2\3\2\2\2\u13c2\u13c0\3\2\2\2\u13c2\u13c3\3\2\2\2\u13c3\u13ca\3\2"+
		"\2\2\u13c4\u13c6\7\u00cf\2\2\u13c5\u13c7\5\6\4\2\u13c6\u13c5\3\2\2\2\u13c7"+
		"\u13c8\3\2\2\2\u13c8\u13c6\3\2\2\2\u13c8\u13c9\3\2\2\2\u13c9\u13cb\3\2"+
		"\2\2\u13ca\u13c4\3\2\2\2\u13ca\u13cb\3\2\2\2\u13cb\u13cd\3\2\2\2\u13cc"+
		"\u13be\3\2\2\2\u13cc\u13cd\3\2\2\2\u13cd\u13ce\3\2\2\2\u13ce\u145e\7s"+
		"\2\2\u13cf\u145e\5\u0104\u0083\2\u13d0\u145e\7\u00b2\2\2\u13d1\u145e\7"+
		"%\2\2\u13d2\u145e\7,\2\2\u13d3\u13d5\7\u0098\2\2\u13d4\u13d6\5\6\4\2\u13d5"+
		"\u13d4\3\2\2\2\u13d6\u13d7\3\2\2\2\u13d7\u13d5\3\2\2\2\u13d7\u13d8\3\2"+
		"\2\2\u13d8\u13d9\3\2\2\2\u13d9\u13da\t\27\2\2\u13da\u145e\3\2\2\2\u13db"+
		"\u145e\7\u00bb\2\2\u13dc\u145e\7\u00e3\2\2\u13dd\u145e\7\u0131\2\2\u13de"+
		"\u145e\7\u016e\2\2\u13df\u13e1\7\u00dd\2\2\u13e0\u13e2\5\6\4\2\u13e1\u13e0"+
		"\3\2\2\2\u13e2\u13e3\3\2\2\2\u13e3\u13e1\3\2\2\2\u13e3\u13e4\3\2\2\2\u13e4"+
		"\u13eb\3\2\2\2\u13e5\u13e7\7\u00f4\2\2\u13e6\u13e8\5\6\4\2\u13e7\u13e6"+
		"\3\2\2\2\u13e8\u13e9\3\2\2\2\u13e9\u13e7\3\2\2\2\u13e9\u13ea\3\2\2\2\u13ea"+
		"\u13ec\3\2\2\2\u13eb\u13e5\3\2\2\2\u13eb\u13ec\3\2\2\2\u13ec\u13f3\3\2"+
		"\2\2\u13ed\u13ef\7\u00cf\2\2\u13ee\u13f0\5\6\4\2\u13ef\u13ee\3\2\2\2\u13f0"+
		"\u13f1\3\2\2\2\u13f1\u13ef\3\2\2\2\u13f1\u13f2\3\2\2\2\u13f2\u13f4\3\2"+
		"\2\2\u13f3\u13ed\3\2\2\2\u13f3\u13f4\3\2\2\2\u13f4\u13fb\3\2\2\2\u13f5"+
		"\u13f7\7\u010d\2\2\u13f6\u13f8\5\6\4\2\u13f7\u13f6\3\2\2\2\u13f8\u13f9"+
		"\3\2\2\2\u13f9\u13f7\3\2\2\2\u13f9\u13fa\3\2\2\2\u13fa\u13fc\3\2\2\2\u13fb"+
		"\u13f5\3\2\2\2\u13fb\u13fc\3\2\2\2\u13fc\u13fd\3\2\2\2\u13fd\u13fe\5\u016c"+
		"\u00b7\2\u13fe\u145e\3\2\2\2\u13ff\u1401\7@\2\2\u1400\u1402\5\6\4\2\u1401"+
		"\u1400\3\2\2\2\u1402\u1403\3\2\2\2\u1403\u1401\3\2\2\2\u1403\u1404\3\2"+
		"\2\2\u1404\u140b\3\2\2\2\u1405\u1407\7\u00f4\2\2\u1406\u1408\5\6\4\2\u1407"+
		"\u1406\3\2\2\2\u1408\u1409\3\2\2\2\u1409\u1407\3\2\2\2\u1409\u140a\3\2"+
		"\2\2\u140a\u140c\3\2\2\2\u140b\u1405\3\2\2\2\u140b\u140c\3\2\2\2\u140c"+
		"\u1413\3\2\2\2\u140d\u140f\7\u00cf\2\2\u140e\u1410\5\6\4\2\u140f\u140e"+
		"\3\2\2\2\u1410\u1411\3\2\2\2\u1411\u140f\3\2\2\2\u1411\u1412\3\2\2\2\u1412"+
		"\u1414\3\2\2\2\u1413\u140d\3\2\2\2\u1413\u1414\3\2\2\2\u1414\u141b\3\2"+
		"\2\2\u1415\u1417\7\u010d\2\2\u1416\u1418\5\6\4\2\u1417\u1416\3\2\2\2\u1418"+
		"\u1419\3\2\2\2\u1419\u1417\3\2\2\2\u1419\u141a\3\2\2\2\u141a\u141c\3\2"+
		"\2\2\u141b\u1415\3\2\2\2\u141b\u141c\3\2\2\2\u141c\u141d\3\2\2\2\u141d"+
		"\u141e\5\u016c\u00b7\2\u141e\u145e\3\2\2\2\u141f\u1421\7\u0179\2\2\u1420"+
		"\u1422\5\6\4\2\u1421\u1420\3\2\2\2\u1422\u1423\3\2\2\2\u1423\u1421\3\2"+
		"\2\2\u1423\u1424\3\2\2\2\u1424\u142b\3\2\2\2\u1425\u1427\7\u00cf\2\2\u1426"+
		"\u1428\5\6\4\2\u1427\u1426\3\2\2\2\u1428\u1429\3\2\2\2\u1429\u1427\3\2"+
		"\2\2\u1429\u142a\3\2\2\2\u142a\u142c\3\2\2\2\u142b\u1425\3\2\2\2\u142b"+
		"\u142c\3\2\2\2\u142c\u142d\3\2\2\2\u142d\u142e\5\u016a\u00b6\2\u142e\u145e"+
		"\3\2\2\2\u142f\u1431\7+\2\2\u1430\u1432\5\6\4\2\u1431\u1430\3\2\2\2\u1432"+
		"\u1433\3\2\2\2\u1433\u1431\3\2\2\2\u1433\u1434\3\2\2\2\u1434\u143b\3\2"+
		"\2\2\u1435\u1437\7\u017d\2\2\u1436\u1438\5\6\4\2\u1437\u1436\3\2\2\2\u1438"+
		"\u1439\3\2\2\2\u1439\u1437\3\2\2\2\u1439\u143a\3\2\2\2\u143a\u143c\3\2"+
		"\2\2\u143b\u1435\3\2\2\2\u143b\u143c\3\2\2\2\u143c\u143d\3\2\2\2\u143d"+
		"\u143e\7\u0185\2\2\u143e\u145e\3\2\2\2\u143f\u1447\t\13\2\2\u1440\u1442"+
		"\5\6\4\2\u1441\u1440\3\2\2\2\u1442\u1443\3\2\2\2\u1443\u1441\3\2\2\2\u1443"+
		"\u1444\3\2\2\2\u1444\u1445\3\2\2\2\u1445\u1446\7\u0135\2\2\u1446\u1448"+
		"\3\2\2\2\u1447\u1441\3\2\2\2\u1447\u1448\3\2\2\2\u1448\u145e\3\2\2\2\u1449"+
		"\u144b\5\u0130\u0099\2\u144a\u144c\5\6\4\2\u144b\u144a\3\2\2\2\u144c\u144d"+
		"\3\2\2\2\u144d\u144b\3\2\2\2\u144d\u144e\3\2\2\2\u144e\u145b\3\2\2\2\u144f"+
		"\u145c\5\u0164\u00b3\2\u1450\u1458\5\u0166\u00b4\2\u1451\u1453\5\6\4\2"+
		"\u1452\u1451\3\2\2\2\u1453\u1454\3\2\2\2\u1454\u1452\3\2\2\2\u1454\u1455"+
		"\3\2\2\2\u1455\u1456\3\2\2\2\u1456\u1457\5\u0168\u00b5\2\u1457\u1459\3"+
		"\2\2\2\u1458\u1452\3\2\2\2\u1458\u1459\3\2\2\2\u1459\u145c\3\2\2\2\u145a"+
		"\u145c\5\u0168\u00b5\2\u145b\u144f\3\2\2\2\u145b\u1450\3\2\2\2\u145b\u145a"+
		"\3\2\2\2\u145c\u145e\3\2\2\2\u145d\u1393\3\2\2\2\u145d\u139b\3\2\2\2\u145d"+
		"\u13ab\3\2\2\2\u145d\u13bb\3\2\2\2\u145d\u13bc\3\2\2\2\u145d\u13bd\3\2"+
		"\2\2\u145d\u13cc\3\2\2\2\u145d\u13cf\3\2\2\2\u145d\u13d0\3\2\2\2\u145d"+
		"\u13d1\3\2\2\2\u145d\u13d2\3\2\2\2\u145d\u13d3\3\2\2\2\u145d\u13db\3\2"+
		"\2\2\u145d\u13dc\3\2\2\2\u145d\u13dd\3\2\2\2\u145d\u13de\3\2\2\2\u145d"+
		"\u13df\3\2\2\2\u145d\u13ff\3\2\2\2\u145d\u141f\3\2\2\2\u145d\u142f\3\2"+
		"\2\2\u145d\u143f\3\2\2\2\u145d\u1449\3\2\2\2\u145e\u0163\3\2\2\2\u145f"+
		"\u1461\7\u0178\2\2\u1460\u1462\5\6\4\2\u1461\u1460\3\2\2\2\u1462\u1463"+
		"\3\2\2\2\u1463\u1461\3\2\2\2\u1463\u1464\3\2\2\2\u1464\u1465\3\2\2\2\u1465"+
		"\u1466\5\u01ae\u00d8\2\u1466\u0165\3\2\2\2\u1467\u1469\7\u00b1\2\2\u1468"+
		"\u146a\5\6\4\2\u1469\u1468\3\2\2\2\u146a\u146b\3\2\2\2\u146b\u1469\3\2"+
		"\2\2\u146b\u146c\3\2\2\2\u146c\u146f\3\2\2\2\u146d\u1470\5\u01ae\u00d8"+
		"\2\u146e\u1470\5\u016a\u00b6\2\u146f\u146d\3\2\2\2\u146f\u146e\3\2\2\2"+
		"\u1470\u0167\3\2\2\2\u1471\u1473\7\u0169\2\2\u1472\u1474\5\6\4\2\u1473"+
		"\u1472\3\2\2\2\u1474\u1475\3\2\2\2\u1475\u1473\3\2\2\2\u1475\u1476\3\2"+
		"\2\2\u1476\u1477\3\2\2\2\u1477\u1478\5\u01ae\u00d8\2\u1478\u0169\3\2\2"+
		"\2\u1479\u147a\7\u01ac\2\2\u147a\u016b\3\2\2\2\u147b\u147e\5\u01ae\u00d8"+
		"\2\u147c\u147e\7\u01ad\2\2\u147d\u147b\3\2\2\2\u147d\u147c\3\2\2\2\u147e"+
		"\u016d\3\2\2\2\u147f\u1480\7\u01ad\2\2\u1480\u016f\3\2\2\2\u1481\u1483"+
		"\7\5\2\2\u1482\u1484\5\6\4\2\u1483\u1482\3\2\2\2\u1484\u1485\3\2\2\2\u1485"+
		"\u1483\3\2\2\2\u1485\u1486\3\2\2\2\u1486\u1487\3\2\2\2\u1487\u148b\7u"+
		"\2\2\u1488\u148a\5\6\4\2\u1489\u1488\3\2\2\2\u148a\u148d\3\2\2\2\u148b"+
		"\u1489\3\2\2\2\u148b\u148c\3\2\2\2\u148c\u148e\3\2\2\2\u148d\u148b\3\2"+
		"\2\2\u148e\u1492\7\u01a9\2\2\u148f\u1491\5\6\4\2\u1490\u148f\3\2\2\2\u1491"+
		"\u1494\3\2\2\2\u1492\u1490\3\2\2\2\u1492\u1493\3\2\2\2\u1493\u1498\3\2"+
		"\2\2\u1494\u1492\3\2\2\2\u1495\u1497\5\u0172\u00ba\2\u1496\u1495\3\2\2"+
		"\2\u1497\u149a\3\2\2\2\u1498\u1496\3\2\2\2\u1498\u1499\3\2\2\2\u1499\u0171"+
		"\3\2\2\2\u149a\u1498\3\2\2\2\u149b\u14a4\5\u0174\u00bb\2\u149c\u14a4\5"+
		"\u0180\u00c1\2\u149d\u14a4\5\u0182\u00c2\2\u149e\u14a4\5\u0184\u00c3\2"+
		"\u149f\u14a4\5\u0186\u00c4\2\u14a0\u14a4\5\u0188\u00c5\2\u14a1\u14a4\5"+
		"\u018a\u00c6\2\u14a2\u14a4\5\6\4\2\u14a3\u149b\3\2\2\2\u14a3\u149c\3\2"+
		"\2\2\u14a3\u149d\3\2\2\2\u14a3\u149e\3\2\2\2\u14a3\u149f\3\2\2\2\u14a3"+
		"\u14a0\3\2\2\2\u14a3\u14a1\3\2\2\2\u14a3\u14a2\3\2\2\2\u14a4\u0173\3\2"+
		"\2\2\u14a5\u14a9\7\u0117\2\2\u14a6\u14a8\5\6\4\2\u14a7\u14a6\3\2\2\2\u14a8"+
		"\u14ab\3\2\2\2\u14a9\u14a7\3\2\2\2\u14a9\u14aa\3\2\2\2\u14aa\u14ac\3\2"+
		"\2\2\u14ab\u14a9\3\2\2\2\u14ac\u14b0\7\u01a9\2\2\u14ad\u14af\5\6\4\2\u14ae"+
		"\u14ad\3\2\2\2\u14af\u14b2\3\2\2\2\u14b0\u14ae\3\2\2\2\u14b0\u14b1\3\2"+
		"\2\2\u14b1\u14b3\3\2\2\2\u14b2\u14b0\3\2\2\2\u14b3\u14b7\5\u0176\u00bc"+
		"\2\u14b4\u14b6\5\6\4\2\u14b5\u14b4\3\2\2\2\u14b6\u14b9\3\2\2\2\u14b7\u14b5"+
		"\3\2\2\2\u14b7\u14b8\3\2\2\2\u14b8\u14bb\3\2\2\2\u14b9\u14b7\3\2\2\2\u14ba"+
		"\u14bc\5\u0178\u00bd\2\u14bb\u14ba\3\2\2\2\u14bb\u14bc\3\2\2\2\u14bc\u14c0"+
		"\3\2\2\2\u14bd\u14bf\5\6\4\2\u14be\u14bd\3\2\2\2\u14bf\u14c2\3\2\2\2\u14c0"+
		"\u14be\3\2\2\2\u14c0\u14c1\3\2\2\2\u14c1\u14c4\3\2\2\2\u14c2\u14c0\3\2"+
		"\2\2\u14c3\u14c5\5\u017a\u00be\2\u14c4\u14c3\3\2\2\2\u14c4\u14c5\3\2\2"+
		"\2\u14c5\u14c9\3\2\2\2\u14c6\u14c8\5\6\4\2\u14c7\u14c6\3\2\2\2\u14c8\u14cb"+
		"\3\2\2\2\u14c9\u14c7\3\2\2\2\u14c9\u14ca\3\2\2\2\u14ca\u14cc\3\2\2\2\u14cb"+
		"\u14c9\3\2\2\2\u14cc\u14cd\7\u01a9\2\2\u14cd\u0175\3\2\2\2\u14ce\u14cf"+
		"\7\u01af\2\2\u14cf\u0177\3\2\2\2\u14d0\u14d2\7\u00cf\2\2\u14d1\u14d3\5"+
		"\6\4\2\u14d2\u14d1\3\2\2\2\u14d3\u14d4\3\2\2\2\u14d4\u14d2\3\2\2\2\u14d4"+
		"\u14d5\3\2\2\2\u14d5\u14d7\3\2\2\2\u14d6\u14d0\3\2\2\2\u14d6\u14d7\3\2"+
		"\2\2\u14d7\u14d8\3\2\2\2\u14d8\u14e0\t\30\2\2\u14d9\u14db\5\6\4\2\u14da"+
		"\u14d9\3\2\2\2\u14db\u14dc\3\2\2\2\u14dc\u14da\3\2\2\2\u14dc\u14dd\3\2"+
		"\2\2\u14dd\u14de\3\2\2\2\u14de\u14df\7\u0116\2\2\u14df\u14e1\3\2\2\2\u14e0"+
		"\u14da\3\2\2\2\u14e0\u14e1\3\2\2\2\u14e1\u0179\3\2\2\2\u14e2\u14e4\7\u017f"+
		"\2\2\u14e3\u14e5\5\6\4\2\u14e4\u14e3\3\2\2\2\u14e5\u14e6\3\2\2\2\u14e6"+
		"\u14e4\3\2\2\2\u14e6\u14e7\3\2\2\2\u14e7\u14e9\3\2\2\2\u14e8\u14e2\3\2"+
		"\2\2\u14e8\u14e9\3\2\2\2\u14e9\u14ea\3\2\2\2\u14ea\u14ec\7\u00c0\2\2\u14eb"+
		"\u14ed\5\6\4\2\u14ec\u14eb\3\2\2\2\u14ed\u14ee\3\2\2\2\u14ee\u14ec\3\2"+
		"\2\2\u14ee\u14ef\3\2\2\2\u14ef\u14f0\3\2\2\2\u14f0\u14f1\5\u017c\u00bf"+
		"\2\u14f1\u017b\3\2\2\2\u14f2\u14f3\7\u01ac\2\2\u14f3\u017d\3\2\2\2\u14f4"+
		"\u14f8\7\u01b0\2\2\u14f5\u14f7\n\2\2\2\u14f6\u14f5\3\2\2\2\u14f7\u14fa"+
		"\3\2\2\2\u14f8\u14f6\3\2\2\2\u14f8\u14f9\3\2\2\2\u14f9\u14fb\3\2\2\2\u14fa"+
		"\u14f8\3\2\2\2\u14fb\u14fe\7\u01b2\2\2\u14fc\u14fe\5\n\6\2\u14fd\u14f4"+
		"\3\2\2\2\u14fd\u14fc\3\2\2\2\u14fe\u017f\3\2\2\2\u14ff\u1503\7\37\2\2"+
		"\u1500\u1502\5\6\4\2\u1501\u1500\3\2\2\2\u1502\u1505\3\2\2\2\u1503\u1501"+
		"\3\2\2\2\u1503\u1504\3\2\2\2\u1504\u1506\3\2\2\2\u1505\u1503\3\2\2\2\u1506"+
		"\u150a\7\u01a9\2\2\u1507\u1509\n\2\2\2\u1508\u1507\3\2\2\2\u1509\u150c"+
		"\3\2\2\2\u150a\u1508\3\2\2\2\u150a\u150b\3\2\2\2\u150b\u150d\3\2\2\2\u150c"+
		"\u150a\3\2\2\2\u150d\u1511\7\u01b2\2\2\u150e\u1510\5\u017e\u00c0\2\u150f"+
		"\u150e\3\2\2\2\u1510\u1513\3\2\2\2\u1511\u150f\3\2\2\2\u1511\u1512\3\2"+
		"\2\2\u1512\u0181\3\2\2\2\u1513\u1511\3\2\2\2\u1514\u1518\7\u00cd\2\2\u1515"+
		"\u1517\5\6\4\2\u1516\u1515\3\2\2\2\u1517\u151a\3\2\2\2\u1518\u1516\3\2"+
		"\2\2\u1518\u1519\3\2\2\2\u1519\u151b\3\2\2\2\u151a\u1518\3\2\2\2\u151b"+
		"\u151f\7\u01a9\2\2\u151c\u151e\n\2\2\2\u151d\u151c\3\2\2\2\u151e\u1521"+
		"\3\2\2\2\u151f\u151d\3\2\2\2\u151f\u1520\3\2\2\2\u1520\u1522\3\2\2\2\u1521"+
		"\u151f\3\2\2\2\u1522\u1526\7\u01b2\2\2\u1523\u1525\5\u017e\u00c0\2\u1524"+
		"\u1523\3\2\2\2\u1525\u1528\3\2\2\2\u1526\u1524\3\2\2\2\u1526\u1527\3\2"+
		"\2\2\u1527\u0183\3\2\2\2\u1528\u1526\3\2\2\2\u1529\u152d\7d\2\2\u152a"+
		"\u152c\5\6\4\2\u152b\u152a\3\2\2\2\u152c\u152f\3\2\2\2\u152d\u152b\3\2"+
		"\2\2\u152d\u152e\3\2\2\2\u152e\u1530\3\2\2\2\u152f\u152d\3\2\2\2\u1530"+
		"\u1534\7\u01a9\2\2\u1531\u1533\n\2\2\2\u1532\u1531\3\2\2\2\u1533\u1536"+
		"\3\2\2\2\u1534\u1532\3\2\2\2\u1534\u1535\3\2\2\2\u1535\u1537\3\2\2\2\u1536"+
		"\u1534\3\2\2\2\u1537\u153b\7\u01b2\2\2\u1538\u153a\5\u017e\u00c0\2\u1539"+
		"\u1538\3\2\2\2\u153a\u153d\3\2\2\2\u153b\u1539\3\2\2\2\u153b\u153c\3\2"+
		"\2\2\u153c\u0185\3\2\2\2\u153d\u153b\3\2\2\2\u153e\u1542\7c\2\2\u153f"+
		"\u1541\5\6\4\2\u1540\u153f\3\2\2\2\u1541\u1544\3\2\2\2\u1542\u1540\3\2"+
		"\2\2\u1542\u1543\3\2\2\2\u1543\u1545\3\2\2\2\u1544\u1542\3\2\2\2\u1545"+
		"\u1549\7\u01a9\2\2\u1546\u1548\n\2\2\2\u1547\u1546\3\2\2\2\u1548\u154b"+
		"\3\2\2\2\u1549\u1547\3\2\2\2\u1549\u154a\3\2\2\2\u154a\u154c\3\2\2\2\u154b"+
		"\u1549\3\2\2\2\u154c\u1550\7\u01b2\2\2\u154d\u154f\5\u017e\u00c0\2\u154e"+
		"\u154d\3\2\2\2\u154f\u1552\3\2\2\2\u1550\u154e\3\2\2\2\u1550\u1551\3\2"+
		"\2\2\u1551\u0187\3\2\2\2\u1552\u1550\3\2\2\2\u1553\u1557\7\u013d\2\2\u1554"+
		"\u1556\5\6\4\2\u1555\u1554\3\2\2\2\u1556\u1559\3\2\2\2\u1557\u1555\3\2"+
		"\2\2\u1557\u1558\3\2\2\2\u1558\u155a\3\2\2\2\u1559\u1557\3\2\2\2\u155a"+
		"\u155e\7\u01a9\2\2\u155b\u155d\n\2\2\2\u155c\u155b\3\2\2\2\u155d\u1560"+
		"\3\2\2\2\u155e\u155c\3\2\2\2\u155e\u155f\3\2\2\2\u155f\u1561\3\2\2\2\u1560"+
		"\u155e\3\2\2\2\u1561\u1565\7\u01b2\2\2\u1562\u1564\5\u017e\u00c0\2\u1563"+
		"\u1562\3\2\2\2\u1564\u1567\3\2\2\2\u1565\u1563\3\2\2\2\u1565\u1566\3\2"+
		"\2\2\u1566\u0189\3\2\2\2\u1567\u1565\3\2\2\2\u1568\u156c\7\u00fe\2\2\u1569"+
		"\u156b\5\6\4\2\u156a\u1569\3\2\2\2\u156b\u156e\3\2\2\2\u156c\u156a\3\2"+
		"\2\2\u156c\u156d\3\2\2\2\u156d\u156f\3\2\2\2\u156e\u156c\3\2\2\2\u156f"+
		"\u1573\7\u01a9\2\2\u1570\u1572\5\6\4\2\u1571\u1570\3\2\2\2\u1572\u1575"+
		"\3\2\2\2\u1573\u1571\3\2\2\2\u1573\u1574\3\2\2\2\u1574\u1577\3\2\2\2\u1575"+
		"\u1573\3\2\2\2\u1576\u1578\5\u018c\u00c7\2\u1577\u1576\3\2\2\2\u1577\u1578"+
		"\3\2\2\2\u1578\u157c\3\2\2\2\u1579\u157b\5\6\4\2\u157a\u1579\3\2\2\2\u157b"+
		"\u157e\3\2\2\2\u157c\u157a\3\2\2\2\u157c\u157d\3\2\2\2\u157d\u1580\3\2"+
		"\2\2\u157e\u157c\3\2\2\2\u157f\u1581\7\u01a9\2\2\u1580\u157f\3\2\2\2\u1580"+
		"\u1581\3\2\2\2\u1581\u018b\3\2\2\2\u1582\u1584\7\32\2\2\u1583\u1585\5"+
		"\6\4\2\u1584\u1583\3\2\2\2\u1585\u1586\3\2\2\2\u1586\u1584\3\2\2\2\u1586"+
		"\u1587\3\2\2\2\u1587\u158e\3\2\2\2\u1588\u158a\7\u00cf\2\2\u1589\u158b"+
		"\5\6\4\2\u158a\u1589\3\2\2\2\u158b\u158c\3\2\2\2\u158c\u158a\3\2\2\2\u158c"+
		"\u158d\3\2\2\2\u158d\u158f\3\2\2\2\u158e\u1588\3\2\2\2\u158e\u158f\3\2"+
		"\2\2\u158f\u1590\3\2\2\2\u1590\u1594\t\31\2\2\u1591\u1593\5\6\4\2\u1592"+
		"\u1591\3\2\2\2\u1593\u1596\3\2\2\2\u1594\u1592\3\2\2\2\u1594\u1595\3\2"+
		"\2\2\u1595\u1597\3\2\2\2\u1596\u1594\3\2\2\2\u1597\u1598\7\u01a9\2\2\u1598"+
		"\u018d\3\2\2\2\u1599\u159b\7\u0092\2\2\u159a\u159c\5\6\4\2\u159b\u159a"+
		"\3\2\2\2\u159c\u159d\3\2\2\2\u159d\u159b\3\2\2\2\u159d\u159e\3\2\2\2\u159e"+
		"\u159f\3\2\2\2\u159f\u15a3\7u\2\2\u15a0\u15a2\5\6\4\2\u15a1\u15a0\3\2"+
		"\2\2\u15a2\u15a5\3\2\2\2\u15a3\u15a1\3\2\2\2\u15a3\u15a4\3\2\2\2\u15a4"+
		"\u15a6\3\2\2\2\u15a5\u15a3\3\2\2\2\u15a6\u15aa\7\u01a9\2\2\u15a7\u15a9"+
		"\5\6\4\2\u15a8\u15a7\3\2\2\2\u15a9\u15ac\3\2\2\2\u15aa\u15a8\3\2\2\2\u15aa"+
		"\u15ab\3\2\2\2\u15ab\u15ae\3\2\2\2\u15ac\u15aa\3\2\2\2\u15ad\u15af\5\u0190"+
		"\u00c9\2\u15ae\u15ad\3\2\2\2\u15ae\u15af\3\2\2\2\u15af\u15b1\3\2\2\2\u15b0"+
		"\u15b2\5\u0192\u00ca\2\u15b1\u15b0\3\2\2\2\u15b1\u15b2\3\2\2\2\u15b2\u018f"+
		"\3\2\2\2\u15b3\u15b5\7R\2\2\u15b4\u15b6\5\6\4\2\u15b5\u15b4\3\2\2\2\u15b6"+
		"\u15b7\3\2\2\2\u15b7\u15b5\3\2\2\2\u15b7\u15b8\3\2\2\2\u15b8\u15b9\3\2"+
		"\2\2\u15b9\u15bd\7\u013b\2\2\u15ba\u15bc\5\6\4\2\u15bb\u15ba\3\2\2\2\u15bc"+
		"\u15bf\3\2\2\2\u15bd\u15bb\3\2\2\2\u15bd\u15be\3\2\2\2\u15be\u15c0\3\2"+
		"\2\2\u15bf\u15bd\3\2\2\2\u15c0\u15c4\7\u01a9\2\2\u15c1\u15c3\5\6\4\2\u15c2"+
		"\u15c1\3\2\2\2\u15c3\u15c6\3\2\2\2\u15c4\u15c2\3\2\2\2\u15c4\u15c5\3\2"+
		"\2\2\u15c5\u15c8\3\2\2\2\u15c6\u15c4\3\2\2\2\u15c7\u15c9\5\u0194\u00cb"+
		"\2\u15c8\u15c7\3\2\2\2\u15c8\u15c9\3\2\2\2\u15c9\u15cd\3\2\2\2\u15ca\u15cc"+
		"\5\6\4\2\u15cb\u15ca\3\2\2\2\u15cc\u15cf\3\2\2\2\u15cd\u15cb\3\2\2\2\u15cd"+
		"\u15ce\3\2\2\2\u15ce\u15d1\3\2\2\2\u15cf\u15cd\3\2\2\2\u15d0\u15d2\5\u019a"+
		"\u00ce\2\u15d1\u15d0\3\2\2\2\u15d1\u15d2\3\2\2\2\u15d2\u15d6\3\2\2\2\u15d3"+
		"\u15d5\5\6\4\2\u15d4\u15d3\3\2\2\2\u15d5\u15d8\3\2\2\2\u15d6\u15d4\3\2"+
		"\2\2\u15d6\u15d7\3\2\2\2\u15d7\u15da\3\2\2\2\u15d8\u15d6\3\2\2\2\u15d9"+
		"\u15db\5\u01aa\u00d6\2\u15da\u15d9\3\2\2\2\u15da\u15db\3\2\2\2\u15db\u15df"+
		"\3\2\2\2\u15dc\u15de\5\6\4\2\u15dd\u15dc\3\2\2\2\u15de\u15e1\3\2\2\2\u15df"+
		"\u15dd\3\2\2\2\u15df\u15e0\3\2\2\2\u15e0\u0191\3\2\2\2\u15e1\u15df\3\2"+
		"\2\2\u15e2\u15e4\7\u00cb\2\2\u15e3\u15e5\5\6\4\2\u15e4\u15e3\3\2\2\2\u15e5"+
		"\u15e6\3\2\2\2\u15e6\u15e4\3\2\2\2\u15e6\u15e7\3\2\2\2\u15e7\u15e8\3\2"+
		"\2\2\u15e8\u15ec\7\u013b\2\2\u15e9\u15eb\5\6\4\2\u15ea\u15e9\3\2\2\2\u15eb"+
		"\u15ee\3\2\2\2\u15ec\u15ea\3\2\2\2\u15ec\u15ed\3\2\2\2\u15ed\u15ef\3\2"+
		"\2\2\u15ee\u15ec\3\2\2\2\u15ef\u15f3\7\u01a9\2\2\u15f0\u15f2\5\6\4\2\u15f1"+
		"\u15f0\3\2\2\2\u15f2\u15f5\3\2\2\2\u15f3\u15f1\3\2\2\2\u15f3\u15f4\3\2"+
		"\2\2\u15f4\u15f7\3\2\2\2\u15f5\u15f3\3\2\2\2\u15f6\u15f8\5\u01ec\u00f7"+
		"\2\u15f7\u15f6\3\2\2\2\u15f7\u15f8\3\2\2\2\u15f8\u15fa\3\2\2\2\u15f9\u15fb"+
		"\5\u021a\u010e\2\u15fa\u15f9\3\2\2\2\u15fa\u15fb\3\2\2\2\u15fb\u0193\3"+
		"\2\2\2\u15fc\u1600\7\u014a\2\2\u15fd\u15ff\5\6\4\2\u15fe\u15fd\3\2\2\2"+
		"\u15ff\u1602\3\2\2\2\u1600\u15fe\3\2\2\2\u1600\u1601\3\2\2\2\u1601\u1603"+
		"\3\2\2\2\u1602\u1600\3\2\2\2\u1603\u1607\7\u01a9\2\2\u1604\u1606\5\6\4"+
		"\2\u1605\u1604\3\2\2\2\u1606\u1609\3\2\2\2\u1607\u1605\3\2\2\2\u1607\u1608"+
		"\3\2\2\2\u1608\u161c\3\2\2\2\u1609\u1607\3\2\2\2\u160a\u1612\5\u0196\u00cc"+
		"\2\u160b\u160d\5\6\4\2\u160c\u160b\3\2\2\2\u160d\u160e\3\2\2\2\u160e\u160c"+
		"\3\2\2\2\u160e\u160f\3\2\2\2\u160f\u1610\3\2\2\2\u1610\u1611\5\u0198\u00cd"+
		"\2\u1611\u1613\3\2\2\2\u1612\u160c\3\2\2\2\u1612\u1613\3\2\2\2\u1613\u1617"+
		"\3\2\2\2\u1614\u1616\5\6\4\2\u1615\u1614\3\2\2\2\u1616\u1619\3\2\2\2\u1617"+
		"\u1615\3\2\2\2\u1617\u1618\3\2\2\2\u1618\u161a\3\2\2\2\u1619\u1617\3\2"+
		"\2\2\u161a\u161b\7\u01a9\2\2\u161b\u161d\3\2\2\2\u161c\u160a\3\2\2\2\u161c"+
		"\u161d\3\2\2\2\u161d\u0195\3\2\2\2\u161e\u161f\t\32\2\2\u161f\u0197\3"+
		"\2\2\2\u1620\u1622\7\u017f\2\2\u1621\u1623\5\6\4\2\u1622\u1621\3\2\2\2"+
		"\u1623\u1624\3\2\2\2\u1624\u1622\3\2\2\2\u1624\u1625\3\2\2\2\u1625\u1627"+
		"\3\2\2\2\u1626\u1620\3\2\2\2\u1626\u1627\3\2\2\2\u1627\u1628\3\2\2\2\u1628"+
		"\u162a\7h\2\2\u1629\u162b\5\6\4\2\u162a\u1629\3\2\2\2\u162b\u162c\3\2"+
		"\2\2\u162c\u162a\3\2\2\2\u162c\u162d\3\2\2\2\u162d\u162e\3\2\2\2\u162e"+
		"\u162f\7\u00ea\2\2\u162f\u0199\3\2\2\2\u1630\u1634\7\u00f6\2\2\u1631\u1633"+
		"\5\6\4\2\u1632\u1631\3\2\2\2\u1633\u1636\3\2\2\2\u1634\u1632\3\2\2\2\u1634"+
		"\u1635\3\2\2\2\u1635\u1637\3\2\2\2\u1636\u1634\3\2\2\2\u1637\u163b\7\u01a9"+
		"\2\2\u1638\u163a\5\6\4\2\u1639\u1638\3\2\2\2\u163a\u163d\3\2\2\2\u163b"+
		"\u1639\3\2\2\2\u163b\u163c\3\2\2\2\u163c\u1662\3\2\2\2\u163d\u163b\3\2"+
		"\2\2\u163e\u1646\5\u0196\u00cc\2\u163f\u1641\5\6\4\2\u1640\u163f\3\2\2"+
		"\2\u1641\u1642\3\2\2\2\u1642\u1640\3\2\2\2\u1642\u1643\3\2\2\2\u1643\u1644"+
		"\3\2\2\2\u1644\u1645\5\u019c\u00cf\2\u1645\u1647\3\2\2\2\u1646\u1640\3"+
		"\2\2\2\u1646\u1647\3\2\2\2\u1647\u164f\3\2\2\2\u1648\u164a\5\6\4\2\u1649"+
		"\u1648\3\2\2\2\u164a\u164b\3\2\2\2\u164b\u1649\3\2\2\2\u164b\u164c\3\2"+
		"\2\2\u164c\u164d\3\2\2\2\u164d\u164e\5\u01a2\u00d2\2\u164e\u1650\3\2\2"+
		"\2\u164f\u1649\3\2\2\2\u164f\u1650\3\2\2\2\u1650\u1658\3\2\2\2\u1651\u1653"+
		"\5\6\4\2\u1652\u1651\3\2\2\2\u1653\u1654\3\2\2\2\u1654\u1652\3\2\2\2\u1654"+
		"\u1655\3\2\2\2\u1655\u1656\3\2\2\2\u1656\u1657\5\u01a6\u00d4\2\u1657\u1659"+
		"\3\2\2\2\u1658\u1652\3\2\2\2\u1658\u1659\3\2\2\2\u1659\u165d\3\2\2\2\u165a"+
		"\u165c\5\6\4\2\u165b\u165a\3\2\2\2\u165c\u165f\3\2\2\2\u165d\u165b\3\2"+
		"\2\2\u165d\u165e\3\2\2\2\u165e\u1660\3\2\2\2\u165f\u165d\3\2\2\2\u1660"+
		"\u1661\7\u01a9\2\2\u1661\u1663\3\2\2\2\u1662\u163e\3\2\2\2\u1662\u1663"+
		"\3\2\2\2\u1663\u019b\3\2\2\2\u1664\u166c\7\u00e8\2\2\u1665\u1667\5\6\4"+
		"\2\u1666\u1665\3\2\2\2\u1667\u1668\3\2\2\2\u1668\u1666\3\2\2\2\u1668\u1669"+
		"\3\2\2\2\u1669\u166a\3\2\2\2\u166a\u166b\7\u0146\2\2\u166b\u166d\3\2\2"+
		"\2\u166c\u1666\3\2\2\2\u166c\u166d\3\2\2\2\u166d\u166f\3\2\2\2\u166e\u1670"+
		"\5\6\4\2\u166f\u166e\3\2\2\2\u1670\u1671\3\2\2\2\u1671\u166f\3\2\2\2\u1671"+
		"\u1672\3\2\2\2\u1672\u1673\3\2\2\2\u1673\u1675\5\u019e\u00d0\2\u1674\u1676"+
		"\5\6\4\2\u1675\u1674\3\2\2\2\u1676\u1677\3\2\2\2\u1677\u1675\3\2\2\2\u1677"+
		"\u1678\3\2\2\2\u1678\u1679\3\2\2\2\u1679\u167a\5\u01a0\u00d1\2\u167a\u019d"+
		"\3\2\2\2\u167b\u167c\7\u01ad\2\2\u167c\u019f\3\2\2\2\u167d\u167e\t\33"+
		"\2\2\u167e\u01a1\3\2\2\2\u167f\u1681\7\u0116\2\2\u1680\u1682\5\6\4\2\u1681"+
		"\u1680\3\2\2\2\u1682\u1683\3\2\2\2\u1683\u1681\3\2\2\2\u1683\u1684\3\2"+
		"\2\2\u1684\u1686\3\2\2\2\u1685\u167f\3\2\2\2\u1685\u1686\3\2\2\2\u1686"+
		"\u168d\3\2\2\2\u1687\u1689\7?\2\2\u1688\u168a\5\6\4\2\u1689\u1688\3\2"+
		"\2\2\u168a\u168b\3\2\2\2\u168b\u1689\3\2\2\2\u168b\u168c\3\2\2\2\u168c"+
		"\u168e\3\2\2\2\u168d\u1687\3\2\2\2\u168d\u168e\3\2\2\2\u168e\u168f\3\2"+
		"\2\2\u168f\u1697\7\u0141\2\2\u1690\u1692\5\6\4\2\u1691\u1690\3\2\2\2\u1692"+
		"\u1693\3\2\2\2\u1693\u1691\3\2\2\2\u1693\u1694\3\2\2\2\u1694\u1695\3\2"+
		"\2\2\u1695\u1696\7\u00cf\2\2\u1696\u1698\3\2\2\2\u1697\u1691\3\2\2\2\u1697"+
		"\u1698\3\2\2\2\u1698\u169a\3\2\2\2\u1699\u169b\5\6\4\2\u169a\u1699\3\2"+
		"\2\2\u169b\u169c\3\2\2\2\u169c\u169a\3\2\2\2\u169c\u169d\3\2\2\2\u169d"+
		"\u169e\3\2\2\2\u169e\u169f\5\u01a4\u00d3\2\u169f\u01a3\3\2\2\2\u16a0\u16a1"+
		"\7\u01af\2\2\u16a1\u01a5\3\2\2\2\u16a2\u16aa\7\u013e\2\2\u16a3\u16a5\5"+
		"\6\4\2\u16a4\u16a3\3\2\2\2\u16a5\u16a6\3\2\2\2\u16a6\u16a4\3\2\2\2\u16a6"+
		"\u16a7\3\2\2\2\u16a7\u16a8\3\2\2\2\u16a8\u16a9\7\u00cf\2\2\u16a9\u16ab"+
		"\3\2\2\2\u16aa\u16a4\3\2\2\2\u16aa\u16ab\3\2\2\2\u16ab\u16ac\3\2\2\2\u16ac"+
		"\u16ad\5\u01a8\u00d5\2\u16ad\u01a7\3\2\2\2\u16ae\u16af\7\u01ad\2\2\u16af"+
		"\u01a9\3\2\2\2\u16b0\u16b4\7\u014d\2\2\u16b1\u16b3\5\6\4\2\u16b2\u16b1"+
		"\3\2\2\2\u16b3\u16b6\3\2\2\2\u16b4\u16b2\3\2\2\2\u16b4\u16b5\3\2\2\2\u16b5"+
		"\u16b7\3\2\2\2\u16b6\u16b4\3\2\2\2\u16b7\u16bb\7\u01a9\2\2\u16b8\u16ba"+
		"\5\6\4\2\u16b9\u16b8\3\2\2\2\u16ba\u16bd\3\2\2\2\u16bb\u16b9\3\2\2\2\u16bb"+
		"\u16bc\3\2\2\2\u16bc\u16cb\3\2\2\2\u16bd\u16bb\3\2\2\2\u16be\u16c2\5\u01ac"+
		"\u00d7\2\u16bf\u16c1\5\6\4\2\u16c0\u16bf\3\2\2\2\u16c1\u16c4\3\2\2\2\u16c2"+
		"\u16c0\3\2\2\2\u16c2\u16c3\3\2\2\2\u16c3\u16c6\3\2\2\2\u16c4\u16c2\3\2"+
		"\2\2\u16c5\u16be\3\2\2\2\u16c6\u16c7\3\2\2\2\u16c7\u16c5\3\2\2\2\u16c7"+
		"\u16c8\3\2\2\2\u16c8\u16c9\3\2\2\2\u16c9\u16ca\7\u01a9\2\2\u16ca\u16cc"+
		"\3\2\2\2\u16cb\u16c5\3\2\2\2\u16cb\u16cc\3\2\2\2\u16cc\u01ab\3\2\2\2\u16cd"+
		"\u16cf\5\u01e4\u00f3\2\u16ce\u16d0\5\6\4\2\u16cf\u16ce\3\2\2\2\u16d0\u16d1"+
		"\3\2\2\2\u16d1\u16cf\3\2\2\2\u16d1\u16d2\3\2\2\2\u16d2\u16d9\3\2\2\2\u16d3"+
		"\u16d5\7\u00cf\2\2\u16d4\u16d6\5\6\4\2\u16d5\u16d4\3\2\2\2\u16d6\u16d7"+
		"\3\2\2\2\u16d7\u16d5\3\2\2\2\u16d7\u16d8\3\2\2\2\u16d8\u16da\3\2\2\2\u16d9"+
		"\u16d3\3\2\2\2\u16d9\u16da\3\2\2\2\u16da\u16db\3\2\2\2\u16db\u16dc\5\u01e6"+
		"\u00f4\2\u16dc\u1739\3\2\2\2\u16dd\u16df\5\u01e8\u00f5\2\u16de\u16e0\5"+
		"\6\4\2\u16df\u16de\3\2\2\2\u16e0\u16e1\3\2\2\2\u16e1\u16df\3\2\2\2\u16e1"+
		"\u16e2\3\2\2\2\u16e2\u16e9\3\2\2\2\u16e3\u16e5\7\u00cf\2\2\u16e4\u16e6"+
		"\5\6\4\2\u16e5\u16e4\3\2\2\2\u16e6\u16e7\3\2\2\2\u16e7\u16e5\3\2\2\2\u16e7"+
		"\u16e8\3\2\2\2\u16e8\u16ea\3\2\2\2\u16e9\u16e3\3\2\2\2\u16e9\u16ea\3\2"+
		"\2\2\u16ea\u16eb\3\2\2\2\u16eb\u16ec\5\u01ea\u00f6\2\u16ec\u1739\3\2\2"+
		"\2\u16ed\u16ef\7\62\2\2\u16ee\u16f0\5\6\4\2\u16ef\u16ee\3\2\2\2\u16f0"+
		"\u16f1\3\2\2\2\u16f1\u16ef\3\2\2\2\u16f1\u16f2\3\2\2\2\u16f2\u16f9\3\2"+
		"\2\2\u16f3\u16f5\7\u00cf\2\2\u16f4\u16f6\5\6\4\2\u16f5\u16f4\3\2\2\2\u16f6"+
		"\u16f7\3\2\2\2\u16f7\u16f5\3\2\2\2\u16f7\u16f8\3\2\2\2\u16f8\u16fa\3\2"+
		"\2\2\u16f9\u16f3\3\2\2\2\u16f9\u16fa\3\2\2\2\u16fa\u16fb\3\2\2\2\u16fb"+
		"\u16fc\5\u01e2\u00f2\2\u16fc\u1739\3\2\2\2\u16fd\u1739\5\u01d6\u00ec\2"+
		"\u16fe\u1739\5\u01ca\u00e6\2\u16ff\u1739\5\u01be\u00e0\2\u1700\u1739\5"+
		"\u01b8\u00dd\2\u1701\u1739\5\u01b0\u00d9\2\u1702\u1704\7i\2\2\u1703\u1705"+
		"\5\6\4\2\u1704\u1703\3\2\2\2\u1705\u1706\3\2\2\2\u1706\u1704\3\2\2\2\u1706"+
		"\u1707\3\2\2\2\u1707\u170e\3\2\2\2\u1708\u170a\7\u00cf\2\2\u1709\u170b"+
		"\5\6\4\2\u170a\u1709\3\2\2\2\u170b\u170c\3\2\2\2\u170c\u170a\3\2\2\2\u170c"+
		"\u170d\3\2\2\2\u170d\u170f\3\2\2\2\u170e\u1708\3\2\2\2\u170e\u170f\3\2"+
		"\2\2\u170f\u1710\3\2\2\2\u1710\u1711\7A\2\2\u1711\u1739\3\2\2\2\u1712"+
		"\u1714\7`\2\2\u1713\u1715\5\6\4\2\u1714\u1713\3\2\2\2\u1715\u1716\3\2"+
		"\2\2\u1716\u1714\3\2\2\2\u1716\u1717\3\2\2\2\u1717\u171e\3\2\2\2\u1718"+
		"\u171a\7\u00cf\2\2\u1719\u171b\5\6\4\2\u171a\u1719\3\2\2\2\u171b\u171c"+
		"\3\2\2\2\u171c\u171a\3\2\2\2\u171c\u171d\3\2\2\2\u171d\u171f\3\2\2\2\u171e"+
		"\u1718\3\2\2\2\u171e\u171f\3\2\2\2\u171f\u1720\3\2\2\2\u1720\u1721\5\u01ae"+
		"\u00d8\2\u1721\u1739\3\2\2\2\u1722\u1724\7]\2\2\u1723\u1725\5\6\4\2\u1724"+
		"\u1723\3\2\2\2\u1725\u1726\3\2\2\2\u1726\u1724\3\2\2\2\u1726\u1727\3\2"+
		"\2\2\u1727\u1728\3\2\2\2\u1728\u172a\7\u0152\2\2\u1729\u172b\5\6\4\2\u172a"+
		"\u1729\3\2\2\2\u172b\u172c\3\2\2\2\u172c\u172a\3\2\2\2\u172c\u172d\3\2"+
		"\2\2\u172d\u1734\3\2\2\2\u172e\u1730\7\u00cf\2\2\u172f\u1731\5\6\4\2\u1730"+
		"\u172f\3\2\2\2\u1731\u1732\3\2\2\2\u1732\u1730\3\2\2\2\u1732\u1733\3\2"+
		"\2\2\u1733\u1735\3\2\2\2\u1734\u172e\3\2\2\2\u1734\u1735\3\2\2\2\u1735"+
		"\u1736\3\2\2\2\u1736\u1737\5\u01ae\u00d8\2\u1737\u1739\3\2\2\2\u1738\u16cd"+
		"\3\2\2\2\u1738\u16dd\3\2\2\2\u1738\u16ed\3\2\2\2\u1738\u16fd\3\2\2\2\u1738"+
		"\u16fe\3\2\2\2\u1738\u16ff\3\2\2\2\u1738\u1700\3\2\2\2\u1738\u1701\3\2"+
		"\2\2\u1738\u1702\3\2\2\2\u1738\u1712\3\2\2\2\u1738\u1722\3\2\2\2\u1739"+
		"\u01ad\3\2\2\2\u173a\u174a\7\u01af\2\2\u173b\u173d\5\6\4\2\u173c\u173b"+
		"\3\2\2\2\u173d\u173e\3\2\2\2\u173e\u173c\3\2\2\2\u173e\u173f\3\2\2\2\u173f"+
		"\u1740\3\2\2\2\u1740\u1742\t\34\2\2\u1741\u1743\5\6\4\2\u1742\u1741\3"+
		"\2\2\2\u1743\u1744\3\2\2\2\u1744\u1742\3\2\2\2\u1744\u1745\3\2\2\2\u1745"+
		"\u1746\3\2\2\2\u1746\u1747\7\u01af\2\2\u1747\u1749\3\2\2\2\u1748\u173c"+
		"\3\2\2\2\u1749\u174c\3\2\2\2\u174a\u1748\3\2\2\2\u174a\u174b\3\2\2\2\u174b"+
		"\u01af\3\2\2\2\u174c\u174a\3\2\2\2\u174d\u174f\7^\2\2\u174e\u1750\5\6"+
		"\4\2\u174f\u174e\3\2\2\2\u1750\u1751\3\2\2\2\u1751\u174f\3\2\2\2\u1751"+
		"\u1752\3\2\2\2\u1752\u1759\3\2\2\2\u1753\u1755\7\u0144\2\2\u1754\u1756"+
		"\5\6\4\2\u1755\u1754\3\2\2\2\u1756\u1757\3\2\2\2\u1757\u1755\3\2\2\2\u1757"+
		"\u1758\3\2\2\2\u1758\u175a\3\2\2\2\u1759\u1753\3\2\2\2\u1759\u175a\3\2"+
		"\2\2\u175a\u1761\3\2\2\2\u175b\u175d\7\u00cf\2\2\u175c\u175e\5\6\4\2\u175d"+
		"\u175c\3\2\2\2\u175e\u175f\3\2\2\2\u175f\u175d\3\2\2\2\u175f\u1760\3\2"+
		"\2\2\u1760\u1762\3\2\2\2\u1761\u175b\3\2\2\2\u1761\u1762\3\2\2\2\u1762"+
		"\u1763\3\2\2\2\u1763\u1764\5\u01b2\u00da\2\u1764\u01b1\3\2\2\2\u1765\u176c"+
		"\5\u01b4\u00db\2\u1766\u1768\7\u017f\2\2\u1767\u1769\5\6\4\2\u1768\u1767"+
		"\3\2\2\2\u1769\u176a\3\2\2\2\u176a\u1768\3\2\2\2\u176a\u176b\3\2\2\2\u176b"+
		"\u176d\3\2\2\2\u176c\u1766\3\2\2\2\u176c\u176d\3\2\2\2\u176d\u176e\3\2"+
		"\2\2\u176e\u1770\7\u010c\2\2\u176f\u1771\5\6\4\2\u1770\u176f\3\2\2\2\u1771"+
		"\u1772\3\2\2\2\u1772\u1770\3\2\2\2\u1772\u1773\3\2\2\2\u1773\u1774\3\2"+
		"\2\2\u1774\u1776\7\u015a\2\2\u1775\u1777\5\6\4\2\u1776\u1775\3\2\2\2\u1777"+
		"\u1778\3\2\2\2\u1778\u1776\3\2\2\2\u1778\u1779\3\2\2\2\u1779\u177a\3\2"+
		"\2\2\u177a\u177b\5\u01b6\u00dc\2\u177b\u177e\3\2\2\2\u177c\u177e\7\u01ac"+
		"\2\2\u177d\u1765\3\2\2\2\u177d\u177c\3\2\2\2\u177e\u01b3\3\2\2\2\u177f"+
		"\u1780\7\u01ac\2\2\u1780\u01b5\3\2\2\2\u1781\u1782\7\u01ac\2\2\u1782\u01b7"+
		"\3\2\2\2\u1783\u1785\7:\2\2\u1784\u1786\5\6\4\2\u1785\u1784\3\2\2\2\u1786"+
		"\u1787\3\2\2\2\u1787\u1785\3\2\2\2\u1787\u1788\3\2\2\2\u1788\u1789\3\2"+
		"\2\2\u1789\u178b\5\u01ba\u00de\2\u178a\u178c\5\6\4\2\u178b\u178a\3\2\2"+
		"\2\u178c\u178d\3\2\2\2\u178d\u178b\3\2\2\2\u178d\u178e\3\2\2\2\u178e\u1795"+
		"\3\2\2\2\u178f\u1791\7\u00cf\2\2\u1790\u1792\5\6\4\2\u1791\u1790\3\2\2"+
		"\2\u1792\u1793\3\2\2\2\u1793\u1791\3\2\2\2\u1793\u1794\3\2\2\2\u1794\u1796"+
		"\3\2\2\2\u1795\u178f\3\2\2\2\u1795\u1796\3\2\2\2\u1796\u179e\3\2\2\2\u1797"+
		"\u179b\5\u01bc\u00df\2\u1798\u179a\5\6\4\2\u1799\u1798\3\2\2\2\u179a\u179d"+
		"\3\2\2\2\u179b\u1799\3\2\2\2\u179b\u179c\3\2\2\2\u179c\u179f\3\2\2\2\u179d"+
		"\u179b\3\2\2\2\u179e\u1797\3\2\2\2\u179f\u17a0\3\2\2\2\u17a0\u179e\3\2"+
		"\2\2\u17a0\u17a1\3\2\2\2\u17a1\u01b9\3\2\2\2\u17a2\u17a3\7\u01af\2\2\u17a3"+
		"\u01bb\3\2\2\2\u17a4\u17b2\5\u01d0\u00e9\2\u17a5\u17a7\5\6\4\2\u17a6\u17a5"+
		"\3\2\2\2\u17a7\u17a8\3\2\2\2\u17a8\u17a6\3\2\2\2\u17a8\u17a9\3\2\2\2\u17a9"+
		"\u17aa\3\2\2\2\u17aa\u17ac\t\f\2\2\u17ab\u17ad\5\6\4\2\u17ac\u17ab\3\2"+
		"\2\2\u17ad\u17ae\3\2\2\2\u17ae\u17ac\3\2\2\2\u17ae\u17af\3\2\2\2\u17af"+
		"\u17b0\3\2\2\2\u17b0\u17b1\5\u01d2\u00ea\2\u17b1\u17b3\3\2\2\2\u17b2\u17a6"+
		"\3\2\2\2\u17b2\u17b3\3\2\2\2\u17b3\u01bd\3\2\2\2\u17b4\u17b6\7\u015b\2"+
		"\2\u17b5\u17b7\5\6\4\2\u17b6\u17b5\3\2\2\2\u17b7\u17b8\3\2\2\2\u17b8\u17b6"+
		"\3\2\2\2\u17b8\u17b9\3\2\2\2\u17b9\u17c0\3\2\2\2\u17ba\u17bc\79\2\2\u17bb"+
		"\u17bd\5\6\4\2\u17bc\u17bb\3\2\2\2\u17bd\u17be\3\2\2\2\u17be\u17bc\3\2"+
		"\2\2\u17be\u17bf\3\2\2\2\u17bf\u17c1\3\2\2\2\u17c0\u17ba\3\2\2\2\u17c0"+
		"\u17c1\3\2\2\2\u17c1\u17c3\3\2\2\2\u17c2\u17c4\5\u01c0\u00e1\2\u17c3\u17c2"+
		"\3\2\2\2\u17c4\u17c5\3\2\2\2\u17c5\u17c3\3\2\2\2\u17c5\u17c6\3\2\2\2\u17c6"+
		"\u01bf\3\2\2\2\u17c7\u17c9\5\u01c2\u00e2\2\u17c8\u17c7\3\2\2\2\u17c9\u17ca"+
		"\3\2\2\2\u17ca\u17c8\3\2\2\2\u17ca\u17cb\3\2\2\2\u17cb\u17cd\3\2\2\2\u17cc"+
		"\u17ce\5\u01c4\u00e3\2\u17cd\u17cc\3\2\2\2\u17cd\u17ce\3\2\2\2\u17ce\u01c1"+
		"\3\2\2\2\u17cf\u17d1\5\u01c6\u00e4\2\u17d0\u17d2\5\6\4\2\u17d1\u17d0\3"+
		"\2\2\2\u17d2\u17d3\3\2\2\2\u17d3\u17d1\3\2\2\2\u17d3\u17d4\3\2\2\2\u17d4"+
		"\u17d6\3\2\2\2\u17d5\u17cf\3\2\2\2\u17d6\u17d7\3\2\2\2\u17d7\u17d5\3\2"+
		"\2\2\u17d7\u17d8\3\2\2\2\u17d8\u17df\3\2\2\2\u17d9\u17db\t\35\2\2\u17da"+
		"\u17dc\5\6\4\2\u17db\u17da\3\2\2\2\u17dc\u17dd\3\2\2\2\u17dd\u17db\3\2"+
		"\2\2\u17dd\u17de\3\2\2\2\u17de\u17e0\3\2\2\2\u17df\u17d9\3\2\2\2\u17df"+
		"\u17e0\3\2\2\2\u17e0\u17e7\3\2\2\2\u17e1\u17e3\5\u01c8\u00e5\2\u17e2\u17e4"+
		"\5\6\4\2\u17e3\u17e2\3\2\2\2\u17e4\u17e5\3\2\2\2\u17e5\u17e3\3\2\2\2\u17e5"+
		"\u17e6\3\2\2\2\u17e6\u17e8\3\2\2\2\u17e7\u17e1\3\2\2\2\u17e8\u17e9\3\2"+
		"\2\2\u17e9\u17e7\3\2\2\2\u17e9\u17ea\3\2\2\2\u17ea\u01c3\3\2\2\2\u17eb"+
		"\u17ed\7\u00c3\2\2\u17ec\u17ee\5\6\4\2\u17ed\u17ec\3\2\2\2\u17ee\u17ef"+
		"\3\2\2\2\u17ef\u17ed\3\2\2\2\u17ef\u17f0\3\2\2\2\u17f0\u17f1\3\2\2\2\u17f1"+
		"\u17f5\5\u01a4\u00d3\2\u17f2\u17f4\5\6\4\2\u17f3\u17f2\3\2\2\2\u17f4\u17f7"+
		"\3\2\2\2\u17f5\u17f3\3\2\2\2\u17f5\u17f6\3\2\2\2\u17f6\u01c5\3\2\2\2\u17f7"+
		"\u17f5\3\2\2\2\u17f8\u17f9\7\u01af\2\2\u17f9\u01c7\3\2\2\2\u17fa\u17fb"+
		"\7\u01ad\2\2\u17fb\u01c9\3\2\2\2\u17fc\u17fe\7\f\2\2\u17fd\u17ff\5\6\4"+
		"\2\u17fe\u17fd\3\2\2\2\u17ff\u1800\3\2\2\2\u1800\u17fe\3\2\2\2\u1800\u1801"+
		"\3\2\2\2\u1801\u1802\3\2\2\2\u1802\u1804\5\u01a4\u00d3\2\u1803\u1805\5"+
		"\6\4\2\u1804\u1803\3\2\2\2\u1805\u1806\3\2\2\2\u1806\u1804\3\2\2\2\u1806"+
		"\u1807\3\2\2\2\u1807\u180e\3\2\2\2\u1808\u180a\7\u00cf\2\2\u1809\u180b"+
		"\5\6\4\2\u180a\u1809\3\2\2\2\u180b\u180c\3\2\2\2\u180c\u180a\3\2\2\2\u180c"+
		"\u180d\3\2\2\2\u180d\u180f\3\2\2\2\u180e\u1808\3\2\2\2\u180e\u180f\3\2"+
		"\2\2\u180f\u1810\3\2\2\2\u1810\u1811\5\u01cc\u00e7\2\u1811\u01cb\3\2\2"+
		"\2\u1812\u1823\7\34\2\2\u1813\u1823\7\u014f\2\2\u1814\u1823\7\u0150\2"+
		"\2\u1815\u1823\7\u00ef\2\2\u1816\u1823\7y\2\2\u1817\u181b\5\u01ce\u00e8"+
		"\2\u1818\u181a\5\6\4\2\u1819\u1818\3\2\2\2\u181a\u181d\3\2\2\2\u181b\u1819"+
		"\3\2\2\2\u181b\u181c\3\2\2\2\u181c\u181f\3\2\2\2\u181d\u181b\3\2\2\2\u181e"+
		"\u1817\3\2\2\2\u181f\u1820\3\2\2\2\u1820\u181e\3\2\2\2\u1820\u1821\3\2"+
		"\2\2\u1821\u1823\3\2\2\2\u1822\u1812\3\2\2\2\u1822\u1813\3\2\2\2\u1822"+
		"\u1814\3\2\2\2\u1822\u1815\3\2\2\2\u1822\u1816\3\2\2\2\u1822\u181e\3\2"+
		"\2\2\u1823\u01cd\3\2\2\2\u1824\u1832\5\u01d0\u00e9\2\u1825\u1827\5\6\4"+
		"\2\u1826\u1825\3\2\2\2\u1827\u1828\3\2\2\2\u1828\u1826\3\2\2\2\u1828\u1829"+
		"\3\2\2\2\u1829\u182a\3\2\2\2\u182a\u182c\t\f\2\2\u182b\u182d\5\6\4\2\u182c"+
		"\u182b\3\2\2\2\u182d\u182e\3\2\2\2\u182e\u182c\3\2\2\2\u182e\u182f\3\2"+
		"\2\2\u182f\u1830\3\2\2\2\u1830\u1831\5\u01d2\u00ea\2\u1831\u1833\3\2\2"+
		"\2\u1832\u1826\3\2\2\2\u1832\u1833\3\2\2\2\u1833\u1847\3\2\2\2\u1834\u1842"+
		"\5\u01d0\u00e9\2\u1835\u1837\5\6\4\2\u1836\u1835\3\2\2\2\u1837\u1838\3"+
		"\2\2\2\u1838\u1836\3\2\2\2\u1838\u1839\3\2\2\2\u1839\u183a\3\2\2\2\u183a"+
		"\u183c\7\20\2\2\u183b\u183d\5\6\4\2\u183c\u183b\3\2\2\2\u183d\u183e\3"+
		"\2\2\2\u183e\u183c\3\2\2\2\u183e\u183f\3\2\2\2\u183f\u1840\3\2\2\2\u1840"+
		"\u1841\5\u01d4\u00eb\2\u1841\u1843\3\2\2\2\u1842\u1836\3\2\2\2\u1843\u1844"+
		"\3\2\2\2\u1844\u1842\3\2\2\2\u1844\u1845\3\2\2\2\u1845\u1847\3\2\2\2\u1846"+
		"\u1824\3\2\2\2\u1846\u1834\3\2\2\2\u1847\u01cf\3\2\2\2\u1848\u1849\t\r"+
		"\2\2\u1849\u01d1\3\2\2\2\u184a\u184b\t\r\2\2\u184b\u01d3\3\2\2\2\u184c"+
		"\u184d\t\r\2\2\u184d\u01d5\3\2\2\2\u184e\u1850\7\u0159\2\2\u184f\u1851"+
		"\5\6\4\2\u1850\u184f\3\2\2\2\u1851\u1852\3\2\2\2\u1852\u1850\3\2\2\2\u1852"+
		"\u1853\3\2\2\2\u1853\u1854\3\2\2\2\u1854\u1858\5\u01e0\u00f1\2\u1855\u1857"+
		"\5\6\4\2\u1856\u1855\3\2\2\2\u1857\u185a\3\2\2\2\u1858\u1856\3\2\2\2\u1858"+
		"\u1859\3\2\2\2\u1859\u1869\3\2\2\2\u185a\u1858\3\2\2\2\u185b\u185d\7\u00cf"+
		"\2\2\u185c\u185e\5\6\4\2\u185d\u185c\3\2\2\2\u185e\u185f\3\2\2\2\u185f"+
		"\u185d\3\2\2\2\u185f\u1860\3\2\2\2\u1860\u1862\3\2\2\2\u1861\u185b\3\2"+
		"\2\2\u1861\u1862\3\2\2\2\u1862\u1863\3\2\2\2\u1863\u1865\5\u01de\u00f0"+
		"\2\u1864\u1866\5\6\4\2\u1865\u1864\3\2\2\2\u1866\u1867\3\2\2\2\u1867\u1865"+
		"\3\2\2\2\u1867\u1868\3\2\2\2\u1868\u186a\3\2\2\2\u1869\u1861\3\2\2\2\u1869"+
		"\u186a\3\2\2\2\u186a\u187f\3\2\2\2\u186b\u1873\5\u01d8\u00ed\2\u186c\u186e"+
		"\5\6\4\2\u186d\u186c\3\2\2\2\u186e\u186f\3\2\2\2\u186f\u186d\3\2\2\2\u186f"+
		"\u1870\3\2\2\2\u1870\u1871\3\2\2\2\u1871\u1872\5\u01da\u00ee\2\u1872\u1874"+
		"\3\2\2\2\u1873\u186d\3\2\2\2\u1873\u1874\3\2\2\2\u1874\u1880\3\2\2\2\u1875"+
		"\u187d\5\u01da\u00ee\2\u1876\u1878\5\6\4\2\u1877\u1876\3\2\2\2\u1878\u1879"+
		"\3\2\2\2\u1879\u1877\3\2\2\2\u1879\u187a\3\2\2\2\u187a\u187b\3\2\2\2\u187b"+
		"\u187c\5\u01d8\u00ed\2\u187c\u187e\3\2\2\2\u187d\u1877\3\2\2\2\u187d\u187e"+
		"\3\2\2\2\u187e\u1880\3\2\2\2\u187f\u186b\3\2\2\2\u187f\u1875\3\2\2\2\u187f"+
		"\u1880\3\2\2\2\u1880\u1884\3\2\2\2\u1881\u1883\5\6\4\2\u1882\u1881\3\2"+
		"\2\2\u1883\u1886\3\2\2\2\u1884\u1882\3\2\2\2\u1884\u1885\3\2\2\2\u1885"+
		"\u01d7\3\2\2\2\u1886\u1884\3\2\2\2\u1887\u1889\7\u00fb\2\2\u1888\u188a"+
		"\5\6\4\2\u1889\u1888\3\2\2\2\u188a\u188b\3\2\2\2\u188b\u1889\3\2\2\2\u188b"+
		"\u188c\3\2\2\2\u188c\u1893\3\2\2\2\u188d\u188f\7\u0152\2\2\u188e\u1890"+
		"\5\6\4\2\u188f\u188e\3\2\2\2\u1890\u1891\3\2\2\2\u1891\u188f\3\2\2\2\u1891"+
		"\u1892\3\2\2\2\u1892\u1894\3\2\2\2\u1893\u188d\3\2\2\2\u1893\u1894\3\2"+
		"\2\2\u1894\u189b\3\2\2\2\u1895\u1897\7\u00cf\2\2\u1896\u1898\5\6\4\2\u1897"+
		"\u1896\3\2\2\2\u1898\u1899\3\2\2\2\u1899\u1897\3\2\2\2\u1899\u189a\3\2"+
		"\2\2\u189a\u189c\3\2\2\2\u189b\u1895\3\2\2\2\u189b\u189c\3\2\2\2\u189c"+
		"\u189d\3\2\2\2\u189d\u189e\5\u01dc\u00ef\2\u189e\u01d9\3\2\2\2\u189f\u18a1"+
		"\7\u00f9\2\2\u18a0\u18a2\5\6\4\2\u18a1\u18a0\3\2\2\2\u18a2\u18a3\3\2\2"+
		"\2\u18a3\u18a1\3\2\2\2\u18a3\u18a4\3\2\2\2\u18a4\u18ab\3\2\2\2\u18a5\u18a7"+
		"\7\u0152\2\2\u18a6\u18a8\5\6\4\2\u18a7\u18a6\3\2\2\2\u18a8\u18a9\3\2\2"+
		"\2\u18a9\u18a7\3\2\2\2\u18a9\u18aa\3\2\2\2\u18aa\u18ac\3\2\2\2\u18ab\u18a5"+
		"\3\2\2\2\u18ab\u18ac\3\2\2\2\u18ac\u18b3\3\2\2\2\u18ad\u18af\7\u00cf\2"+
		"\2\u18ae\u18b0\5\6\4\2\u18af\u18ae\3\2\2\2\u18b0\u18b1\3\2\2\2\u18b1\u18af"+
		"\3\2\2\2\u18b1\u18b2\3\2\2\2\u18b2\u18b4\3\2\2\2\u18b3\u18ad\3\2\2\2\u18b3"+
		"\u18b4\3\2\2\2\u18b4\u18b5\3\2\2\2\u18b5\u18b6\5\u01dc\u00ef\2\u18b6\u01db"+
		"\3\2\2\2\u18b7\u18b8\7\u01af\2\2\u18b8\u01dd\3\2\2\2\u18b9\u18ba\7\u01af"+
		"\2\2\u18ba\u01df\3\2\2\2\u18bb\u18bc\7\u01ad\2\2\u18bc\u01e1\3\2\2\2\u18bd"+
		"\u18be\7\u01af\2\2\u18be\u01e3\3\2\2\2\u18bf\u18c0\t\36\2\2\u18c0\u01e5"+
		"\3\2\2\2\u18c1\u18c2\7\u01af\2\2\u18c2\u01e7\3\2\2\2\u18c3\u18c4\t\37"+
		"\2\2\u18c4\u01e9\3\2\2\2\u18c5\u18c6\7\u01af\2\2\u18c6\u01eb\3\2\2\2\u18c7"+
		"\u18cb\7\u00a5\2\2\u18c8\u18ca\5\6\4\2\u18c9\u18c8\3\2\2\2\u18ca\u18cd"+
		"\3\2\2\2\u18cb\u18c9\3\2\2\2\u18cb\u18cc\3\2\2\2\u18cc\u18ce\3\2\2\2\u18cd"+
		"\u18cb\3\2\2\2\u18ce\u18d2\7\u01a9\2\2\u18cf\u18d1\5\6\4\2\u18d0\u18cf"+
		"\3\2\2\2\u18d1\u18d4\3\2\2\2\u18d2\u18d0\3\2\2\2\u18d2\u18d3\3\2\2\2\u18d3"+
		"\u18de\3\2\2\2\u18d4\u18d2\3\2\2\2\u18d5\u18d9\5\u01ee\u00f8\2\u18d6\u18d8"+
		"\5\6\4\2\u18d7\u18d6\3\2\2\2\u18d8\u18db\3\2\2\2\u18d9\u18d7\3\2\2\2\u18d9"+
		"\u18da\3\2\2\2\u18da\u18dd\3\2\2\2\u18db\u18d9\3\2\2\2\u18dc\u18d5\3\2"+
		"\2\2\u18dd\u18e0\3\2\2\2\u18de\u18dc\3\2\2\2\u18de\u18df\3\2\2\2\u18df"+
		"\u01ed\3\2\2\2\u18e0\u18de\3\2\2\2\u18e1\u18e3\7\u013f\2\2\u18e2\u18e4"+
		"\5\6\4\2\u18e3\u18e2\3\2\2\2\u18e4\u18e5\3\2\2\2\u18e5\u18e3\3\2\2\2\u18e5"+
		"\u18e6\3\2\2\2\u18e6\u18ed\3\2\2\2\u18e7\u18e9\7\u00fd\2\2\u18e8\u18ea"+
		"\5\6\4\2\u18e9\u18e8\3\2\2\2\u18ea\u18eb\3\2\2\2\u18eb\u18e9\3\2\2\2\u18eb"+
		"\u18ec\3\2\2\2\u18ec\u18ee\3\2\2\2\u18ed\u18e7\3\2\2\2\u18ed\u18ee\3\2"+
		"\2\2\u18ee\u18ef\3\2\2\2\u18ef\u18f3\5\u0218\u010d\2\u18f0\u18f2\5\6\4"+
		"\2\u18f1\u18f0\3\2\2\2\u18f2\u18f5\3\2\2\2\u18f3\u18f1\3\2\2\2\u18f3\u18f4"+
		"\3\2\2\2\u18f4\u18f6\3\2\2\2\u18f5\u18f3\3\2\2\2\u18f6\u18fa\5\u0212\u010a"+
		"\2\u18f7\u18f9\5\6\4\2\u18f8\u18f7\3\2\2\2\u18f9\u18fc\3\2\2\2\u18fa\u18f8"+
		"\3\2\2\2\u18fa\u18fb\3\2\2\2\u18fb\u1904\3\2\2\2\u18fc\u18fa\3\2\2\2\u18fd"+
		"\u1901\5\u01fa\u00fe\2\u18fe\u1900\5\6\4\2\u18ff\u18fe\3\2\2\2\u1900\u1903"+
		"\3\2\2\2\u1901\u18ff\3\2\2\2\u1901\u1902\3\2\2\2\u1902\u1905\3\2\2\2\u1903"+
		"\u1901\3\2\2\2\u1904\u18fd\3\2\2\2\u1904\u1905\3\2\2\2\u1905\u190d\3\2"+
		"\2\2\u1906\u190a\5\u0204\u0103\2\u1907\u1909\5\6\4\2\u1908\u1907\3\2\2"+
		"\2\u1909\u190c\3\2\2\2\u190a\u1908\3\2\2\2\u190a\u190b\3\2\2\2\u190b\u190e"+
		"\3\2\2\2\u190c\u190a\3\2\2\2\u190d\u1906\3\2\2\2\u190d\u190e\3\2\2\2\u190e"+
		"\u1916\3\2\2\2\u190f\u1913\5\u020c\u0107\2\u1910\u1912\5\6\4\2\u1911\u1910"+
		"\3\2\2\2\u1912\u1915\3\2\2\2\u1913\u1911\3\2\2\2\u1913\u1914\3\2\2\2\u1914"+
		"\u1917\3\2\2\2\u1915\u1913\3\2\2\2\u1916\u190f\3\2\2\2\u1916\u1917\3\2"+
		"\2\2\u1917\u191f\3\2\2\2\u1918\u191c\5\u020a\u0106\2\u1919\u191b\5\6\4"+
		"\2\u191a\u1919\3\2\2\2\u191b\u191e\3\2\2\2\u191c\u191a\3\2\2\2\u191c\u191d"+
		"\3\2\2\2\u191d\u1920\3\2\2\2\u191e\u191c\3\2\2\2\u191f\u1918\3\2\2\2\u191f"+
		"\u1920\3\2\2\2\u1920\u1928\3\2\2\2\u1921\u1925\5\u0200\u0101\2\u1922\u1924"+
		"\5\6\4\2\u1923\u1922\3\2\2\2\u1924\u1927\3\2\2\2\u1925\u1923\3\2\2\2\u1925"+
		"\u1926\3\2\2\2\u1926\u1929\3\2\2\2\u1927\u1925\3\2\2\2\u1928\u1921\3\2"+
		"\2\2\u1928\u1929\3\2\2\2\u1929\u1931\3\2\2\2\u192a\u192e\5\u01fe\u0100"+
		"\2\u192b\u192d\5\6\4\2\u192c\u192b\3\2\2\2\u192d\u1930\3\2\2\2\u192e\u192c"+
		"\3\2\2\2\u192e\u192f\3\2\2\2\u192f\u1932\3\2\2\2\u1930\u192e\3\2\2\2\u1931"+
		"\u192a\3\2\2\2\u1931\u1932\3\2\2\2\u1932\u193a\3\2\2\2\u1933\u1937\5\u01f8"+
		"\u00fd\2\u1934\u1936\5\6\4\2\u1935\u1934\3\2\2\2\u1936\u1939\3\2\2\2\u1937"+
		"\u1935\3\2\2\2\u1937\u1938\3\2\2\2\u1938\u193b\3\2\2\2\u1939\u1937\3\2"+
		"\2\2\u193a\u1933\3\2\2\2\u193a\u193b\3\2\2\2\u193b\u1945\3\2\2\2\u193c"+
		"\u1940\5\u01f4\u00fb\2\u193d\u193f\5\6\4\2\u193e\u193d\3\2\2\2\u193f\u1942"+
		"\3\2\2\2\u1940\u193e\3\2\2\2\u1940\u1941\3\2\2\2\u1941\u1944\3\2\2\2\u1942"+
		"\u1940\3\2\2\2\u1943\u193c\3\2\2\2\u1944\u1947\3\2\2\2\u1945\u1943\3\2"+
		"\2\2\u1945\u1946\3\2\2\2\u1946\u194f\3\2\2\2\u1947\u1945\3\2\2\2\u1948"+
		"\u194c\5\u0206\u0104\2\u1949\u194b\5\6\4\2\u194a\u1949\3\2\2\2\u194b\u194e"+
		"\3\2\2\2\u194c\u194a\3\2\2\2\u194c\u194d\3\2\2\2\u194d\u1950\3\2\2\2\u194e"+
		"\u194c\3\2\2\2\u194f\u1948\3\2\2\2\u194f\u1950\3\2\2\2\u1950\u1958\3\2"+
		"\2\2\u1951\u1955\5\u01f0\u00f9\2\u1952\u1954\5\6\4\2\u1953\u1952\3\2\2"+
		"\2\u1954\u1957\3\2\2\2\u1955\u1953\3\2\2\2\u1955\u1956\3\2\2\2\u1956\u1959"+
		"\3\2\2\2\u1957\u1955\3\2\2\2\u1958\u1951\3\2\2\2\u1958\u1959\3\2\2\2\u1959"+
		"\u195a\3\2\2\2\u195a\u195b\7\u01a9\2\2\u195b\u01ef\3\2\2\2\u195c\u195e"+
		"\7\u00a4\2\2\u195d\u195f\5\6\4\2\u195e\u195d\3\2\2\2\u195f\u1960\3\2\2"+
		"\2\u1960\u195e\3\2\2\2\u1960\u1961\3\2\2\2\u1961\u1963\3\2\2\2\u1962\u195c"+
		"\3\2\2\2\u1962\u1963\3\2\2\2\u1963\u1964\3\2\2\2\u1964\u1966\7\u0152\2"+
		"\2\u1965\u1967\5\6\4\2\u1966\u1965\3\2\2\2\u1967\u1968\3\2\2\2\u1968\u1966"+
		"\3\2\2\2\u1968\u1969\3\2\2\2\u1969\u1970\3\2\2\2\u196a\u196c\7\u00cf\2"+
		"\2\u196b\u196d\5\6\4\2\u196c\u196b\3\2\2\2\u196d\u196e\3\2\2\2\u196e\u196c"+
		"\3\2\2\2\u196e\u196f\3\2\2\2\u196f\u1971\3\2\2\2\u1970\u196a\3\2\2\2\u1970"+
		"\u1971\3\2\2\2\u1971\u1972\3\2\2\2\u1972\u1973\5\u01f2\u00fa\2\u1973\u01f1"+
		"\3\2\2\2\u1974\u1975\5\u01ae\u00d8\2\u1975\u01f3\3\2\2\2\u1976\u1978\7"+
		"\22\2\2\u1977\u1979\5\6\4\2\u1978\u1977\3\2\2\2\u1979\u197a\3\2\2\2\u197a"+
		"\u1978\3\2\2\2\u197a\u197b\3\2\2\2\u197b\u197d\3\2\2\2\u197c\u1976\3\2"+
		"\2\2\u197c\u197d\3\2\2\2\u197d\u197e\3\2\2\2\u197e\u1980\7\u011e\2\2\u197f"+
		"\u1981\5\6\4\2\u1980\u197f\3\2\2\2\u1981\u1982\3\2\2\2\u1982\u1980\3\2"+
		"\2\2\u1982\u1983\3\2\2\2\u1983\u198a\3\2\2\2\u1984\u1986\7\u00d4\2\2\u1985"+
		"\u1987\5\6\4\2\u1986\u1985\3\2\2\2\u1987\u1988\3\2\2\2\u1988\u1986\3\2"+
		"\2\2\u1988\u1989\3\2\2\2\u1989\u198b\3\2\2\2\u198a\u1984\3\2\2\2\u198a"+
		"\u198b\3\2\2\2\u198b\u1992\3\2\2\2\u198c\u198e\7\u00cf\2\2\u198d\u198f"+
		"\5\6\4\2\u198e\u198d\3\2\2\2\u198f\u1990\3\2\2\2\u1990\u198e\3\2\2\2\u1990"+
		"\u1991\3\2\2\2\u1991\u1993\3\2\2\2\u1992\u198c\3\2\2\2\u1992\u1993\3\2"+
		"\2\2\u1993\u1994\3\2\2\2\u1994\u19a4\5\u01f6\u00fc\2\u1995\u1997\5\6\4"+
		"\2\u1996\u1995\3\2\2\2\u1997\u1998\3\2\2\2\u1998\u1996\3\2\2\2\u1998\u1999"+
		"\3\2\2\2\u1999\u19a0\3\2\2\2\u199a\u199c\7\u017f\2\2\u199b\u199d\5\6\4"+
		"\2\u199c\u199b\3\2\2\2\u199d\u199e\3\2\2\2\u199e\u199c\3\2\2\2\u199e\u199f"+
		"\3\2\2\2\u199f\u19a1\3\2\2\2\u19a0\u199a\3\2\2\2\u19a0\u19a1\3\2\2\2\u19a1"+
		"\u19a2\3\2\2\2\u19a2\u19a3\7w\2\2\u19a3\u19a5\3\2\2\2\u19a4\u1996\3\2"+
		"\2\2\u19a4\u19a5\3\2\2\2\u19a5\u19ad\3\2\2\2\u19a6\u19a8\5\6\4\2\u19a7"+
		"\u19a6\3\2\2\2\u19a8\u19a9\3\2\2\2\u19a9\u19a7\3\2\2\2\u19a9\u19aa\3\2"+
		"\2\2\u19aa\u19ab\3\2\2\2\u19ab\u19ac\t\16\2\2\u19ac\u19ae\3\2\2\2\u19ad"+
		"\u19a7\3\2\2\2\u19ad\u19ae\3\2\2\2\u19ae\u01f5\3\2\2\2\u19af\u19cc\5\u01ae"+
		"\u00d8\2\u19b0\u19b4\7\u01af\2\2\u19b1\u19b3\5\6\4\2\u19b2\u19b1\3\2\2"+
		"\2\u19b3\u19b6\3\2\2\2\u19b4\u19b2\3\2\2\2\u19b4\u19b5\3\2\2\2\u19b5\u19b7"+
		"\3\2\2\2\u19b6\u19b4\3\2\2\2\u19b7\u19bb\7\u019e\2\2\u19b8\u19ba\5\6\4"+
		"\2\u19b9\u19b8\3\2\2\2\u19ba\u19bd\3\2\2\2\u19bb\u19b9\3\2\2\2\u19bb\u19bc"+
		"\3\2\2\2\u19bc\u19be\3\2\2\2\u19bd\u19bb\3\2\2\2\u19be\u19c8\5\u01ae\u00d8"+
		"\2\u19bf\u19c1\5\6\4\2\u19c0\u19bf\3\2\2\2\u19c1\u19c4\3\2\2\2\u19c2\u19c0"+
		"\3\2\2\2\u19c2\u19c3\3\2\2\2\u19c3\u19c5\3\2\2\2\u19c4\u19c2\3\2\2\2\u19c5"+
		"\u19c7\5\u01ae\u00d8\2\u19c6\u19c2\3\2\2\2\u19c7\u19ca\3\2\2\2\u19c8\u19c6"+
		"\3\2\2\2\u19c8\u19c9\3\2\2\2\u19c9\u19cc\3\2\2\2\u19ca\u19c8\3\2\2\2\u19cb"+
		"\u19af\3\2\2\2\u19cb\u19b0\3\2\2\2\u19cc\u01f7\3\2\2\2\u19cd\u19cf\7\7"+
		"\2\2\u19ce\u19d0\5\6\4\2\u19cf\u19ce\3\2\2\2\u19d0\u19d1\3\2\2\2\u19d1"+
		"\u19cf\3\2\2\2\u19d1\u19d2\3\2\2\2\u19d2\u19d9\3\2\2\2\u19d3\u19d5\7\u00ea"+
		"\2\2\u19d4\u19d6\5\6\4\2\u19d5\u19d4\3\2\2\2\u19d6\u19d7\3\2\2\2\u19d7"+
		"\u19d5\3\2\2\2\u19d7\u19d8\3\2\2\2\u19d8\u19da\3\2\2\2\u19d9\u19d3\3\2"+
		"\2\2\u19d9\u19da\3\2\2\2\u19da\u19e1\3\2\2\2\u19db\u19dd\7\u00cf\2\2\u19dc"+
		"\u19de\5\6\4\2\u19dd\u19dc\3\2\2\2\u19de\u19df\3\2\2\2\u19df\u19dd\3\2"+
		"\2\2\u19df\u19e0\3\2\2\2\u19e0\u19e2\3\2\2\2\u19e1\u19db\3\2\2\2\u19e1"+
		"\u19e2\3\2\2\2\u19e2\u19e4\3\2\2\2\u19e3\u19cd\3\2\2\2\u19e3\u19e4\3\2"+
		"\2\2\u19e4\u19e5\3\2\2\2\u19e5\u1a03\t \2\2\u19e6\u19e8\5\6\4\2\u19e7"+
		"\u19e6\3\2\2\2\u19e8\u19e9\3\2\2\2\u19e9\u19e7\3\2\2\2\u19e9\u19ea\3\2"+
		"\2\2\u19ea\u19eb\3\2\2\2\u19eb\u19ed\7\u0123\2\2\u19ec\u19ee\5\6\4\2\u19ed"+
		"\u19ec\3\2\2\2\u19ee\u19ef\3\2\2\2\u19ef\u19ed\3\2\2\2\u19ef\u19f0\3\2"+
		"\2\2\u19f0\u19f7\3\2\2\2\u19f1\u19f3\7\u00d4\2\2\u19f2\u19f4\5\6\4\2\u19f3"+
		"\u19f2\3\2\2\2\u19f4\u19f5\3\2\2\2\u19f5\u19f3\3\2\2\2\u19f5\u19f6\3\2"+
		"\2\2\u19f6\u19f8\3\2\2\2\u19f7\u19f1\3\2\2\2\u19f7\u19f8\3\2\2\2\u19f8"+
		"\u19ff\3\2\2\2\u19f9\u19fb\7\u00cf\2\2\u19fa\u19fc\5\6\4\2\u19fb\u19fa"+
		"\3\2\2\2\u19fc\u19fd\3\2\2\2\u19fd\u19fb\3\2\2\2\u19fd\u19fe\3\2\2\2\u19fe"+
		"\u1a00\3\2\2\2\u19ff\u19f9\3\2\2\2\u19ff\u1a00\3\2\2\2\u1a00\u1a01\3\2"+
		"\2\2\u1a01\u1a02\5\u01ae\u00d8\2\u1a02\u1a04\3\2\2\2\u1a03\u19e7\3\2\2"+
		"\2\u1a03\u1a04\3\2\2\2\u1a04\u01f9\3\2\2\2\u1a05\u1a07\7\u012d\2\2\u1a06"+
		"\u1a08\5\6\4\2\u1a07\u1a06\3\2\2\2\u1a08\u1a09\3\2\2\2\u1a09\u1a07\3\2"+
		"\2\2\u1a09\u1a0a\3\2\2\2\u1a0a\u1a0b\3\2\2\2\u1a0b\u1a13\5\u01fc\u00ff"+
		"\2\u1a0c\u1a0e\5\6\4\2\u1a0d\u1a0c\3\2\2\2\u1a0e\u1a0f\3\2\2\2\u1a0f\u1a0d"+
		"\3\2\2\2\u1a0f\u1a10\3\2\2\2\u1a10\u1a11\3\2\2\2\u1a11\u1a12\t!\2\2\u1a12"+
		"\u1a14\3\2\2\2\u1a13\u1a0d\3\2\2\2\u1a13\u1a14\3\2\2\2\u1a14\u01fb\3\2"+
		"\2\2\u1a15\u1a16\7\u01ad\2\2\u1a16\u01fd\3\2\2\2\u1a17\u1a19\7\u011e\2"+
		"\2\u1a18\u1a1a\5\6\4\2\u1a19\u1a18\3\2\2\2\u1a1a\u1a1b\3\2\2\2\u1a1b\u1a19"+
		"\3\2\2\2\u1a1b\u1a1c\3\2\2\2\u1a1c\u1a1d\3\2\2\2\u1a1d\u1a1f\7n\2\2\u1a1e"+
		"\u1a20\5\6\4\2\u1a1f\u1a1e\3\2\2\2\u1a20\u1a21\3\2\2\2\u1a21\u1a1f\3\2"+
		"\2\2\u1a21\u1a22\3\2\2\2\u1a22\u1a29\3\2\2\2\u1a23\u1a25\7\u00cf\2\2\u1a24"+
		"\u1a26\5\6\4\2\u1a25\u1a24\3\2\2\2\u1a26\u1a27\3\2\2\2\u1a27\u1a25\3\2"+
		"\2\2\u1a27\u1a28\3\2\2\2\u1a28\u1a2a\3\2\2\2\u1a29\u1a23\3\2\2\2\u1a29"+
		"\u1a2a\3\2\2\2\u1a2a\u1a2b\3\2\2\2\u1a2b\u1a2c\7\u014f\2\2\u1a2c\u01ff"+
		"\3\2\2\2\u1a2d\u1a2f\7\u0104\2\2\u1a2e\u1a30\5\6\4\2\u1a2f\u1a2e\3\2\2"+
		"\2\u1a30\u1a31\3\2\2\2\u1a31\u1a2f\3\2\2\2\u1a31\u1a32\3\2\2\2\u1a32\u1a39"+
		"\3\2\2\2\u1a33\u1a35\78\2\2\u1a34\u1a36\5\6\4\2\u1a35\u1a34\3\2\2\2\u1a36"+
		"\u1a37\3\2\2\2\u1a37\u1a35\3\2\2\2\u1a37\u1a38\3\2\2\2\u1a38\u1a3a\3\2"+
		"\2\2\u1a39\u1a33\3\2\2\2\u1a39\u1a3a\3\2\2\2\u1a3a\u1a41\3\2\2\2\u1a3b"+
		"\u1a3d\7\u00cf\2\2\u1a3c\u1a3e\5\6\4\2\u1a3d\u1a3c\3\2\2\2\u1a3e\u1a3f"+
		"\3\2\2\2\u1a3f\u1a3d\3\2\2\2\u1a3f\u1a40\3\2\2\2\u1a40\u1a42\3\2\2\2\u1a41"+
		"\u1a3b\3\2\2\2\u1a41\u1a42\3\2\2\2\u1a42\u1a43\3\2\2\2\u1a43\u1a44\5\u0202"+
		"\u0102\2\u1a44\u0201\3\2\2\2\u1a45\u1a46\7\u01ac\2\2\u1a46\u0203\3\2\2"+
		"\2\u1a47\u1a49\7\u0100\2\2\u1a48\u1a4a\5\6\4\2\u1a49\u1a48\3\2\2\2\u1a4a"+
		"\u1a4b\3\2\2\2\u1a4b\u1a49\3\2\2\2\u1a4b\u1a4c\3\2\2\2\u1a4c\u1a53\3\2"+
		"\2\2\u1a4d\u1a4f\7\u00cf\2\2\u1a4e\u1a50\5\6\4\2\u1a4f\u1a4e\3\2\2\2\u1a50"+
		"\u1a51\3\2\2\2\u1a51\u1a4f\3\2\2\2\u1a51\u1a52\3\2\2\2\u1a52\u1a54\3\2"+
		"\2\2\u1a53\u1a4d\3\2\2\2\u1a53\u1a54\3\2\2\2\u1a54\u1a56\3\2\2\2\u1a55"+
		"\u1a47\3\2\2\2\u1a55\u1a56\3\2\2\2\u1a56\u1a62\3\2\2\2\u1a57\u1a63\7\u0142"+
		"\2\2\u1a58\u1a5a\7\u00dd\2\2\u1a59\u1a5b\5\6\4\2\u1a5a\u1a59\3\2\2\2\u1a5b"+
		"\u1a5c\3\2\2\2\u1a5c\u1a5a\3\2\2\2\u1a5c\u1a5d\3\2\2\2\u1a5d\u1a5e\3\2"+
		"\2\2\u1a5e\u1a5f\7\u0142\2\2\u1a5f\u1a63\3\2\2\2\u1a60\u1a63\7\u0123\2"+
		"\2\u1a61\u1a63\7\u00c5\2\2\u1a62\u1a57\3\2\2\2\u1a62\u1a58\3\2\2\2\u1a62"+
		"\u1a60\3\2\2\2\u1a62\u1a61\3\2\2\2\u1a63\u0205\3\2\2\2\u1a64\u1a66\7\u00e1"+
		"\2\2\u1a65\u1a67\5\6\4\2\u1a66\u1a65\3\2\2\2\u1a67\u1a68\3\2\2\2\u1a68"+
		"\u1a66\3\2\2\2\u1a68\u1a69\3\2\2\2\u1a69\u1a70\3\2\2\2\u1a6a\u1a6c\7\u00ea"+
		"\2\2\u1a6b\u1a6d\5\6\4\2\u1a6c\u1a6b\3\2\2\2\u1a6d\u1a6e\3\2\2\2\u1a6e"+
		"\u1a6c\3\2\2\2\u1a6e\u1a6f\3\2\2\2\u1a6f\u1a71\3\2\2\2\u1a70\u1a6a\3\2"+
		"\2\2\u1a70\u1a71\3\2\2\2\u1a71\u1a78\3\2\2\2\u1a72\u1a74\7\u00cf\2\2\u1a73"+
		"\u1a75\5\6\4\2\u1a74\u1a73\3\2\2\2\u1a75\u1a76\3\2\2\2\u1a76\u1a74\3\2"+
		"\2\2\u1a76\u1a77\3\2\2\2\u1a77\u1a79\3\2\2\2\u1a78\u1a72\3\2\2\2\u1a78"+
		"\u1a79\3\2\2\2\u1a79\u1a7a\3\2\2\2\u1a7a\u1a7b\5\u0208\u0105\2\u1a7b\u0207"+
		"\3\2\2\2\u1a7c\u1a7e\7\u00e6\2\2\u1a7d\u1a7f\5\6\4\2\u1a7e\u1a7d\3\2\2"+
		"\2\u1a7f\u1a80\3\2\2\2\u1a80\u1a7e\3\2\2\2\u1a80\u1a81\3\2\2\2\u1a81\u1a88"+
		"\3\2\2\2\u1a82\u1a84\7\u017f\2\2\u1a83\u1a85\5\6\4\2\u1a84\u1a83\3\2\2"+
		"\2\u1a85\u1a86\3\2\2\2\u1a86\u1a84\3\2\2\2\u1a86\u1a87\3\2\2\2\u1a87\u1a89"+
		"\3\2\2\2\u1a88\u1a82\3\2\2\2\u1a88\u1a89\3\2\2\2\u1a89\u1a8a\3\2\2\2\u1a8a"+
		"\u1a8c\7\u00e1\2\2\u1a8b\u1a8d\5\6\4\2\u1a8c\u1a8b\3\2\2\2\u1a8d\u1a8e"+
		"\3\2\2\2\u1a8e\u1a8c\3\2\2\2\u1a8e\u1a8f\3\2\2\2\u1a8f\u1a90\3\2\2\2\u1a90"+
		"\u1a92\7\u00fb\2\2\u1a91\u1a93\5\6\4\2\u1a92\u1a91\3\2\2\2\u1a93\u1a94"+
		"\3\2\2\2\u1a94\u1a92\3\2\2\2\u1a94\u1a95\3\2\2\2\u1a95\u1a96\3\2\2\2\u1a96"+
		"\u1a98\7\u00ed\2\2\u1a97\u1a99\5\6\4\2\u1a98\u1a97\3\2\2\2\u1a99\u1a9a"+
		"\3\2\2\2\u1a9a\u1a98\3\2\2\2\u1a9a\u1a9b\3\2\2\2\u1a9b\u1a9c\3\2\2\2\u1a9c"+
		"\u1a9d\7\u011f\2\2\u1a9d\u1ac1\3\2\2\2\u1a9e\u1abd\7!\2\2\u1a9f\u1aa1"+
		"\5\6\4\2\u1aa0\u1a9f\3\2\2\2\u1aa1\u1aa2\3\2\2\2\u1aa2\u1aa0\3\2\2\2\u1aa2"+
		"\u1aa3\3\2\2\2\u1aa3\u1aaa\3\2\2\2\u1aa4\u1aa6\7\u017f\2\2\u1aa5\u1aa7"+
		"\5\6\4\2\u1aa6\u1aa5\3\2\2\2\u1aa7\u1aa8\3\2\2\2\u1aa8\u1aa6\3\2\2\2\u1aa8"+
		"\u1aa9\3\2\2\2\u1aa9\u1aab\3";
	private static final String _serializedATNSegment3 =
		"\2\2\2\u1aaa\u1aa4\3\2\2\2\u1aaa\u1aab\3\2\2\2\u1aab\u1abb\3\2\2\2\u1aac"+
		"\u1aae\7\u00e1\2\2\u1aad\u1aaf\5\6\4\2\u1aae\u1aad\3\2\2\2\u1aaf\u1ab0"+
		"\3\2\2\2\u1ab0\u1aae\3\2\2\2\u1ab0\u1ab1\3\2\2\2\u1ab1\u1ab2\3\2\2\2\u1ab2"+
		"\u1ab4\7\u00fb\2\2\u1ab3\u1ab5\5\6\4\2\u1ab4\u1ab3\3\2\2\2\u1ab5\u1ab6"+
		"\3\2\2\2\u1ab6\u1ab4\3\2\2\2\u1ab6\u1ab7\3\2\2\2\u1ab7\u1ab8\3\2\2\2\u1ab8"+
		"\u1ab9\7\u011e\2\2\u1ab9\u1abc\3\2\2\2\u1aba\u1abc\7\u0136\2\2\u1abb\u1aac"+
		"\3\2\2\2\u1abb\u1aba\3\2\2\2\u1abc\u1abe\3\2\2\2\u1abd\u1aa0\3\2\2\2\u1abd"+
		"\u1abe\3\2\2\2\u1abe\u1ac1\3\2\2\2\u1abf\u1ac1\7\u009d\2\2\u1ac0\u1a7c"+
		"\3\2\2\2\u1ac0\u1a9e\3\2\2\2\u1ac0\u1abf\3\2\2\2\u1ac1\u0209\3\2\2\2\u1ac2"+
		"\u1ac4\7>\2\2\u1ac3\u1ac5\5\6\4\2\u1ac4\u1ac3\3\2\2\2\u1ac5\u1ac6\3\2"+
		"\2\2\u1ac6\u1ac4\3\2\2\2\u1ac6\u1ac7\3\2\2\2\u1ac7\u1ace\3\2\2\2\u1ac8"+
		"\u1aca\7\u00cf\2\2\u1ac9\u1acb\5\6\4\2\u1aca\u1ac9\3\2\2\2\u1acb\u1acc"+
		"\3\2\2\2\u1acc\u1aca\3\2\2\2\u1acc\u1acd\3\2\2\2\u1acd\u1acf\3\2\2\2\u1ace"+
		"\u1ac8\3\2\2\2\u1ace\u1acf\3\2\2\2\u1acf\u1ad0\3\2\2\2\u1ad0\u1ad1\5\u01a4"+
		"\u00d3\2\u1ad1\u020b\3\2\2\2\u1ad2\u1ad4\7.\2\2\u1ad3\u1ad5\5\6\4\2\u1ad4"+
		"\u1ad3\3\2\2\2\u1ad5\u1ad6\3\2\2\2\u1ad6\u1ad4\3\2\2\2\u1ad6\u1ad7\3\2"+
		"\2\2\u1ad7\u1ade\3\2\2\2\u1ad8\u1ada\7T\2\2\u1ad9\u1adb\5\6\4\2\u1ada"+
		"\u1ad9\3\2\2\2\u1adb\u1adc\3\2\2\2\u1adc\u1ada\3\2\2\2\u1adc\u1add\3\2"+
		"\2\2\u1add\u1adf\3\2\2\2\u1ade\u1ad8\3\2\2\2\u1ade\u1adf\3\2\2\2\u1adf"+
		"\u1aec\3\2\2\2\u1ae0\u1ae2\5\u020e\u0108\2\u1ae1\u1ae3\5\6\4\2\u1ae2\u1ae1"+
		"\3\2\2\2\u1ae3\u1ae4\3\2\2\2\u1ae4\u1ae2\3\2\2\2\u1ae4\u1ae5\3\2\2\2\u1ae5"+
		"\u1ae6\3\2\2\2\u1ae6\u1ae8\7\u0169\2\2\u1ae7\u1ae9\5\6\4\2\u1ae8\u1ae7"+
		"\3\2\2\2\u1ae9\u1aea\3\2\2\2\u1aea\u1ae8\3\2\2\2\u1aea\u1aeb\3\2\2\2\u1aeb"+
		"\u1aed\3\2\2\2\u1aec\u1ae0\3\2\2\2\u1aec\u1aed\3\2\2\2\u1aed\u1aee\3\2"+
		"\2\2\u1aee\u1af0\5\u0210\u0109\2\u1aef\u1af1\5\6\4\2\u1af0\u1aef\3\2\2"+
		"\2\u1af1\u1af2\3\2\2\2\u1af2\u1af0\3\2\2\2\u1af2\u1af3\3\2\2\2\u1af3\u1af4"+
		"\3\2\2\2\u1af4\u1af5\t\"\2\2\u1af5\u020d\3\2\2\2\u1af6\u1af7\7\u01ad\2"+
		"\2\u1af7\u020f\3\2\2\2\u1af8\u1af9\7\u01ad\2\2\u1af9\u0211\3\2\2\2\u1afa"+
		"\u1afc\7\35\2\2\u1afb\u1afd\5\6\4\2\u1afc\u1afb\3\2\2\2\u1afd\u1afe\3"+
		"\2\2\2\u1afe\u1afc\3\2\2\2\u1afe\u1aff\3\2\2\2\u1aff\u1b06\3\2\2\2\u1b00"+
		"\u1b02\7\u0169\2\2\u1b01\u1b03\5\6\4\2\u1b02\u1b01\3\2\2\2\u1b03\u1b04"+
		"\3\2\2\2\u1b04\u1b02\3\2\2\2\u1b04\u1b05\3\2\2\2\u1b05\u1b07\3\2\2\2\u1b06"+
		"\u1b00\3\2\2\2\u1b06\u1b07\3\2\2\2\u1b07\u1b08\3\2\2\2\u1b08\u1b09\5\u0214"+
		"\u010b\2\u1b09\u0213\3\2\2\2\u1b0a\u1b0c\t#\2\2\u1b0b\u1b0d\5\6\4\2\u1b0c"+
		"\u1b0b\3\2\2\2\u1b0d\u1b0e\3\2\2\2\u1b0e\u1b0c\3\2\2\2\u1b0e\u1b0f\3\2"+
		"\2\2\u1b0f\u1b11\3\2\2\2\u1b10\u1b0a\3\2\2\2\u1b10\u1b11\3\2\2\2\u1b11"+
		"\u1b12\3\2\2\2\u1b12\u1b26\5\u0216\u010c\2\u1b13\u1b15\7\u00ed\2\2\u1b14"+
		"\u1b16\5\6\4\2\u1b15\u1b14\3\2\2\2\u1b16\u1b17\3\2\2\2\u1b17\u1b15\3\2"+
		"\2\2\u1b17\u1b18\3\2\2\2\u1b18\u1b1a\3\2\2\2\u1b19\u1b13\3\2\2\2\u1b19"+
		"\u1b1a\3\2\2\2\u1b1a\u1b1b\3\2\2\2\u1b1b\u1b23\t\6\2\2\u1b1c\u1b1e\5\6"+
		"\4\2\u1b1d\u1b1c\3\2\2\2\u1b1e\u1b1f\3\2\2\2\u1b1f\u1b1d\3\2\2\2\u1b1f"+
		"\u1b20\3\2\2\2\u1b20\u1b21\3\2\2\2\u1b21\u1b22\7\u00a4\2\2\u1b22\u1b24"+
		"\3\2\2\2\u1b23\u1b1d\3\2\2\2\u1b23\u1b24\3\2\2\2\u1b24\u1b26\3\2\2\2\u1b25"+
		"\u1b10\3\2\2\2\u1b25\u1b19\3\2\2\2\u1b26\u0215\3\2\2\2\u1b27\u1b2c\7\u01ac"+
		"\2\2\u1b28\u1b2c\5\u01ae\u00d8\2\u1b29\u1b2c\7r\2\2\u1b2a\u1b2c\7\u0113"+
		"\2\2\u1b2b\u1b27\3\2\2\2\u1b2b\u1b28\3\2\2\2\u1b2b\u1b29\3\2\2\2\u1b2b"+
		"\u1b2a\3\2\2\2\u1b2c\u0217\3\2\2\2\u1b2d\u1b2e\7\u01af\2\2\u1b2e\u0219"+
		"\3\2\2\2\u1b2f\u1b33\7\u00d1\2\2\u1b30\u1b32\5\6\4\2\u1b31\u1b30\3\2\2"+
		"\2\u1b32\u1b35\3\2\2\2\u1b33\u1b31\3\2\2\2\u1b33\u1b34\3\2\2\2\u1b34\u1b36"+
		"\3\2\2\2\u1b35\u1b33\3\2\2\2\u1b36\u1b3a\7\u01a9\2\2\u1b37\u1b39\5\6\4"+
		"\2\u1b38\u1b37\3\2\2\2\u1b39\u1b3c\3\2\2\2\u1b3a\u1b38\3\2\2\2\u1b3a\u1b3b"+
		"\3\2\2\2\u1b3b\u1b74\3\2\2\2\u1b3c\u1b3a\3\2\2\2\u1b3d\u1b41\5\u0234\u011b"+
		"\2\u1b3e\u1b40\5\6\4\2\u1b3f\u1b3e\3\2\2\2\u1b40\u1b43\3\2\2\2\u1b41\u1b3f"+
		"\3\2\2\2\u1b41\u1b42\3\2\2\2\u1b42\u1b45\3\2\2\2\u1b43\u1b41\3\2\2\2\u1b44"+
		"\u1b3d\3\2\2\2\u1b45\u1b48\3\2\2\2\u1b46\u1b44\3\2\2\2\u1b46\u1b47\3\2"+
		"\2\2\u1b47\u1b52\3\2\2\2\u1b48\u1b46\3\2\2\2\u1b49\u1b4d\5\u0230\u0119"+
		"\2\u1b4a\u1b4c\5\6\4\2\u1b4b\u1b4a\3\2\2\2\u1b4c\u1b4f\3\2\2\2\u1b4d\u1b4b"+
		"\3\2\2\2\u1b4d\u1b4e\3\2\2\2\u1b4e\u1b51\3\2\2\2\u1b4f\u1b4d\3\2\2\2\u1b50"+
		"\u1b49\3\2\2\2\u1b51\u1b54\3\2\2\2\u1b52\u1b50\3\2\2\2\u1b52\u1b53\3\2"+
		"\2\2\u1b53\u1b5e\3\2\2\2\u1b54\u1b52\3\2\2\2\u1b55\u1b59\5\u0224\u0113"+
		"\2\u1b56\u1b58\5\6\4\2\u1b57\u1b56\3\2\2\2\u1b58\u1b5b\3\2\2\2\u1b59\u1b57"+
		"\3\2\2\2\u1b59\u1b5a\3\2\2\2\u1b5a\u1b5d\3\2\2\2\u1b5b\u1b59\3\2\2\2\u1b5c"+
		"\u1b55\3\2\2\2\u1b5d\u1b60\3\2\2\2\u1b5e\u1b5c\3\2\2\2\u1b5e\u1b5f\3\2"+
		"\2\2\u1b5f\u1b6a\3\2\2\2\u1b60\u1b5e\3\2\2\2\u1b61\u1b65\5\u021c\u010f"+
		"\2\u1b62\u1b64\5\6\4\2\u1b63\u1b62\3\2\2\2\u1b64\u1b67\3\2\2\2\u1b65\u1b63"+
		"\3\2\2\2\u1b65\u1b66\3\2\2\2\u1b66\u1b69\3\2\2\2\u1b67\u1b65\3\2\2\2\u1b68"+
		"\u1b61\3\2\2\2\u1b69\u1b6c\3\2\2\2\u1b6a\u1b68\3\2\2\2\u1b6a\u1b6b\3\2"+
		"\2\2\u1b6b\u1b6d\3\2\2\2\u1b6c\u1b6a\3\2\2\2\u1b6d\u1b71\7\u01a9\2\2\u1b6e"+
		"\u1b70\5\6\4\2\u1b6f\u1b6e\3\2\2\2\u1b70\u1b73\3\2\2\2\u1b71\u1b6f\3\2"+
		"\2\2\u1b71\u1b72\3\2\2\2\u1b72\u1b75\3\2\2\2\u1b73\u1b71\3\2\2\2\u1b74"+
		"\u1b46\3\2\2\2\u1b74\u1b75\3\2\2\2\u1b75\u021b\3\2\2\2\u1b76\u1b78\7\u00ed"+
		"\2\2\u1b77\u1b79\5\6\4\2\u1b78\u1b77\3\2\2\2\u1b79\u1b7a\3\2\2\2\u1b7a"+
		"\u1b78\3\2\2\2\u1b7a\u1b7b\3\2\2\2\u1b7b\u1b7c\3\2\2\2\u1b7c\u1b7e\7\u00a4"+
		"\2\2\u1b7d\u1b7f\5\6\4\2\u1b7e\u1b7d\3\2\2\2\u1b7f\u1b80\3\2\2\2\u1b80"+
		"\u1b7e\3\2\2\2\u1b80\u1b81\3\2\2\2\u1b81\u1b88\3\2\2\2\u1b82\u1b84\7\u0162"+
		"\2\2\u1b83\u1b85\5\6\4\2\u1b84\u1b83\3\2\2\2\u1b85\u1b86\3\2\2\2\u1b86"+
		"\u1b84\3\2\2\2\u1b86\u1b87\3\2\2\2\u1b87\u1b89\3\2\2\2\u1b88\u1b82\3\2"+
		"\2\2\u1b88\u1b89\3\2\2\2\u1b89\u1b90\3\2\2\2\u1b8a\u1b8c\7T\2\2\u1b8b"+
		"\u1b8d\5\6\4\2\u1b8c\u1b8b\3\2\2\2\u1b8d\u1b8e\3\2\2\2\u1b8e\u1b8c\3\2"+
		"\2\2\u1b8e\u1b8f\3\2\2\2\u1b8f\u1b91\3\2\2\2\u1b90\u1b8a\3\2\2\2\u1b90"+
		"\u1b91\3\2\2\2\u1b91\u1b99\3\2\2\2\u1b92\u1b96\5\u021e\u0110\2\u1b93\u1b95"+
		"\5\6\4\2\u1b94\u1b93\3\2\2\2\u1b95\u1b98\3\2\2\2\u1b96\u1b94\3\2\2\2\u1b96"+
		"\u1b97\3\2\2\2\u1b97\u1b9a\3\2\2\2\u1b98\u1b96\3\2\2\2\u1b99\u1b92\3\2"+
		"\2\2\u1b9a\u1b9b\3\2\2\2\u1b9b\u1b99\3\2\2\2\u1b9b\u1b9c\3\2\2\2\u1b9c"+
		"\u021d\3\2\2\2\u1b9d\u1bab\5\u0220\u0111\2\u1b9e\u1ba0\5\6\4\2\u1b9f\u1b9e"+
		"\3\2\2\2\u1ba0\u1ba1\3\2\2\2\u1ba1\u1b9f\3\2\2\2\u1ba1\u1ba2\3\2\2\2\u1ba2"+
		"\u1ba3\3\2\2\2\u1ba3\u1ba5\7\u0110\2\2\u1ba4\u1ba6\5\6\4\2\u1ba5\u1ba4"+
		"\3\2\2\2\u1ba6\u1ba7\3\2\2\2\u1ba7\u1ba5\3\2\2\2\u1ba7\u1ba8\3\2\2\2\u1ba8"+
		"\u1ba9\3\2\2\2\u1ba9\u1baa\5\u0222\u0112\2\u1baa\u1bac\3\2\2\2\u1bab\u1b9f"+
		"\3\2\2\2\u1bab\u1bac\3\2\2\2\u1bac\u021f\3\2\2\2\u1bad\u1bae\7\u01af\2"+
		"\2\u1bae\u0221\3\2\2\2\u1baf\u1bb0\7\u01ad\2\2\u1bb0\u0223\3\2\2\2\u1bb1"+
		"\u1bb3\7\u012c\2\2\u1bb2\u1bb4\5\6\4\2\u1bb3\u1bb2\3\2\2\2\u1bb4\u1bb5"+
		"\3\2\2\2\u1bb5\u1bb3\3\2\2\2\u1bb5\u1bb6\3\2\2\2\u1bb6\u1bc3\3\2\2\2\u1bb7"+
		"\u1bb9\7\u00fb\2\2\u1bb8\u1bba\5\6\4\2\u1bb9\u1bb8\3\2\2\2\u1bba\u1bbb"+
		"\3\2\2\2\u1bbb\u1bb9\3\2\2\2\u1bbb\u1bbc\3\2\2\2\u1bbc\u1bbd\3\2\2\2\u1bbd"+
		"\u1bbf\5\u0218\u010d\2\u1bbe\u1bc0\5\6\4\2\u1bbf\u1bbe\3\2\2\2\u1bc0\u1bc1"+
		"\3\2\2\2\u1bc1\u1bbf\3\2\2\2\u1bc1\u1bc2\3\2\2\2\u1bc2\u1bc4\3\2\2\2\u1bc3"+
		"\u1bb7\3\2\2\2\u1bc3\u1bc4\3\2\2\2\u1bc4\u1bcb\3\2\2\2\u1bc5\u1bc7\7\u009b"+
		"\2\2\u1bc6\u1bc8\5\6\4\2\u1bc7\u1bc6\3\2\2\2\u1bc8\u1bc9\3\2\2\2\u1bc9"+
		"\u1bc7\3\2\2\2\u1bc9\u1bca\3\2\2\2\u1bca\u1bcc\3\2\2\2\u1bcb\u1bc5\3\2"+
		"\2\2\u1bcb\u1bcc\3\2\2\2\u1bcc\u1bcd\3\2\2\2\u1bcd\u1bce\5\u0226\u0114"+
		"\2\u1bce\u0225\3\2\2\2\u1bcf\u1bd1\5\u022c\u0117\2\u1bd0\u1bd2\5\6\4\2"+
		"\u1bd1\u1bd0\3\2\2\2\u1bd2\u1bd3\3\2\2\2\u1bd3\u1bd1\3\2\2\2\u1bd3\u1bd4"+
		"\3\2\2\2\u1bd4\u1bdb\3\2\2\2\u1bd5\u1bd7\7\u00f8\2\2\u1bd6\u1bd8\5\6\4"+
		"\2\u1bd7\u1bd6\3\2\2\2\u1bd8\u1bd9\3\2\2\2\u1bd9\u1bd7\3\2\2\2\u1bd9\u1bda"+
		"\3\2\2\2\u1bda\u1bdc\3\2\2\2\u1bdb\u1bd5\3\2\2\2\u1bdb\u1bdc\3\2\2\2\u1bdc"+
		"\u1bdd\3\2\2\2\u1bdd\u1bde\5\u0218\u010d\2\u1bde\u1be9\3\2\2\2\u1bdf\u1be1"+
		"\5\u0228\u0115\2\u1be0\u1be2\5\6\4\2\u1be1\u1be0\3\2\2\2\u1be2\u1be3\3"+
		"\2\2\2\u1be3\u1be1\3\2\2\2\u1be3\u1be4\3\2\2\2\u1be4\u1be5\3\2\2\2\u1be5"+
		"\u1be6\7;\2\2\u1be6\u1be9\3\2\2\2\u1be7\u1be9\5\u022a\u0116\2\u1be8\u1bcf"+
		"\3\2\2\2\u1be8\u1bdf\3\2\2\2\u1be8\u1be7\3\2\2\2\u1be9\u0227\3\2\2\2\u1bea"+
		"\u1beb\7\u01ad\2\2\u1beb\u0229\3\2\2\2\u1bec\u1bed\7\u01af\2\2\u1bed\u022b"+
		"\3\2\2\2\u1bee\u1bf0\7|\2\2\u1bef\u1bf1\5\6\4\2\u1bf0\u1bef\3\2\2\2\u1bf1"+
		"\u1bf2\3\2\2\2\u1bf2\u1bf0\3\2\2\2\u1bf2\u1bf3\3\2\2\2\u1bf3\u1bfa\3\2"+
		"\2\2\u1bf4\u1bf6\7\u00f8\2\2\u1bf5\u1bf7\5\6\4\2\u1bf6\u1bf5\3\2\2\2\u1bf7"+
		"\u1bf8\3\2\2\2\u1bf8\u1bf6\3\2\2\2\u1bf8\u1bf9\3\2\2\2\u1bf9\u1bfb\3\2"+
		"\2\2\u1bfa\u1bf4\3\2\2\2\u1bfa\u1bfb\3\2\2\2\u1bfb\u1bfd\3\2\2\2\u1bfc"+
		"\u1bee\3\2\2\2\u1bfc\u1bfd\3\2\2\2\u1bfd\u1bfe\3\2\2\2\u1bfe\u1c08\t\6"+
		"\2\2\u1bff\u1c01\5\u022e\u0118\2\u1c00\u1c02\5\6\4\2\u1c01\u1c00\3\2\2"+
		"\2\u1c02\u1c03\3\2\2\2\u1c03\u1c01\3\2\2\2\u1c03\u1c04\3\2\2\2\u1c04\u1c05"+
		"\3\2\2\2\u1c05\u1c06\7\u011f\2\2\u1c06\u1c08\3\2\2\2\u1c07\u1bfc\3\2\2"+
		"\2\u1c07\u1bff\3\2\2\2\u1c08\u022d\3\2\2\2\u1c09\u1c0a\7\u01ad\2\2\u1c0a"+
		"\u022f\3\2\2\2\u1c0b\u1c0d\7\u0137\2\2\u1c0c\u1c0e\5\6\4\2\u1c0d\u1c0c"+
		"\3\2\2\2\u1c0e\u1c0f\3\2\2\2\u1c0f\u1c0d\3\2\2\2\u1c0f\u1c10\3\2\2\2\u1c10"+
		"\u1c17\3\2\2\2\u1c11\u1c13\t$\2\2\u1c12\u1c14\5\6\4\2\u1c13\u1c12\3\2"+
		"\2\2\u1c14\u1c15\3\2\2\2\u1c15\u1c13\3\2\2\2\u1c15\u1c16\3\2\2\2\u1c16"+
		"\u1c18\3\2\2\2\u1c17\u1c11\3\2\2\2\u1c17\u1c18\3\2\2\2\u1c18\u1c1f\3\2"+
		"\2\2\u1c19\u1c1b\7\26\2\2\u1c1a\u1c1c\5\6\4\2\u1c1b\u1c1a\3\2\2\2\u1c1c"+
		"\u1c1d\3\2\2\2\u1c1d\u1c1b\3\2\2\2\u1c1d\u1c1e\3\2\2\2\u1c1e\u1c20\3\2"+
		"\2\2\u1c1f\u1c19\3\2\2\2\u1c1f\u1c20\3\2\2\2\u1c20\u1c27\3\2\2\2\u1c21"+
		"\u1c23\7\u00af\2\2\u1c22\u1c24\5\6\4\2\u1c23\u1c22\3\2\2\2\u1c24\u1c25"+
		"\3\2\2\2\u1c25\u1c23\3\2\2\2\u1c25\u1c26\3\2\2\2\u1c26\u1c28\3\2\2\2\u1c27"+
		"\u1c21\3\2\2\2\u1c27\u1c28\3\2\2\2\u1c28\u1c29\3\2\2\2\u1c29\u1c31\5\u0232"+
		"\u011a\2\u1c2a\u1c2c\5\6\4\2\u1c2b\u1c2a\3\2\2\2\u1c2c\u1c2d\3\2\2\2\u1c2d"+
		"\u1c2b\3\2\2\2\u1c2d\u1c2e\3\2\2\2\u1c2e\u1c2f\3\2\2\2\u1c2f\u1c30\5\u0232"+
		"\u011a\2\u1c30\u1c32\3\2\2\2\u1c31\u1c2b\3\2\2\2\u1c32\u1c33\3\2\2\2\u1c33"+
		"\u1c31\3\2\2\2\u1c33\u1c34\3\2\2\2\u1c34\u0231\3\2\2\2\u1c35\u1c36\7\u01af"+
		"\2\2\u1c36\u0233\3\2\2\2\u1c37\u1c39\7\24\2\2\u1c38\u1c3a\5\6\4\2\u1c39"+
		"\u1c38\3\2\2\2\u1c3a\u1c3b\3\2\2\2\u1c3b\u1c39\3\2\2\2\u1c3b\u1c3c\3\2"+
		"\2\2\u1c3c\u1c43\3\2\2\2\u1c3d\u1c3f\5\u0236\u011c\2\u1c3e\u1c40\5\6\4"+
		"\2\u1c3f\u1c3e\3\2\2\2\u1c40\u1c41\3\2\2\2\u1c41\u1c3f\3\2\2\2\u1c41\u1c42"+
		"\3\2\2\2\u1c42\u1c44\3\2\2\2\u1c43\u1c3d\3\2\2\2\u1c44\u1c45\3\2\2\2\u1c45"+
		"\u1c43\3\2\2\2\u1c45\u1c46\3\2\2\2\u1c46\u1c47\3\2\2\2\u1c47\u1c49\7\u00fb"+
		"\2\2\u1c48\u1c4a\5\6\4\2\u1c49\u1c48\3\2\2\2\u1c4a\u1c4b\3\2\2\2\u1c4b"+
		"\u1c49\3\2\2\2\u1c4b\u1c4c\3\2\2\2\u1c4c\u1c54\3\2\2\2\u1c4d\u1c51\5\u0218"+
		"\u010d\2\u1c4e\u1c50\5\6\4\2\u1c4f\u1c4e\3\2\2\2\u1c50\u1c53\3\2\2\2\u1c51"+
		"\u1c4f\3\2\2\2\u1c51\u1c52\3\2\2\2\u1c52\u1c55\3\2\2\2\u1c53\u1c51\3\2"+
		"\2\2\u1c54\u1c4d\3\2\2\2\u1c55\u1c56\3\2\2\2\u1c56\u1c54\3\2\2\2\u1c56"+
		"\u1c57\3\2\2\2\u1c57\u0235\3\2\2\2\u1c58\u1c7e\7l\2\2\u1c59\u1c5b\7\u00a0"+
		"\2\2\u1c5a\u1c5c\5\6\4\2\u1c5b\u1c5a\3\2\2\2\u1c5c\u1c5d\3\2\2\2\u1c5d"+
		"\u1c5b\3\2\2\2\u1c5d\u1c5e\3\2\2\2\u1c5e\u1c5f\3\2\2\2\u1c5f\u1c60\5\u023c"+
		"\u011f\2\u1c60\u1c7e\3\2\2\2\u1c61\u1c7e\7\u00a8\2\2\u1c62\u1c7e\7\u00e2"+
		"\2\2\u1c63\u1c7e\7\u00e7\2\2\u1c64\u1c66\t%\2\2\u1c65\u1c67\5\6\4\2\u1c66"+
		"\u1c65\3\2\2\2\u1c67\u1c68\3\2\2\2\u1c68\u1c66\3\2\2\2\u1c68\u1c69\3\2"+
		"\2\2\u1c69\u1c6b\3\2\2\2\u1c6a\u1c64\3\2\2\2\u1c6a\u1c6b\3\2\2\2\u1c6b"+
		"\u1c6c\3\2\2\2\u1c6c\u1c6e\7\u0112\2\2\u1c6d\u1c6f\5\6\4\2\u1c6e\u1c6d"+
		"\3\2\2\2\u1c6f\u1c70\3\2\2\2\u1c70\u1c6e\3\2\2\2\u1c70\u1c71\3\2\2\2\u1c71"+
		"\u1c72\3\2\2\2\u1c72\u1c73\5\u023a\u011e\2\u1c73\u1c7e\3\2\2\2\u1c74\u1c7e"+
		"\7\u0114\2\2\u1c75\u1c77\7\u017e\2\2\u1c76\u1c78\5\6\4\2\u1c77\u1c76\3"+
		"\2\2\2\u1c78\u1c79\3\2\2\2\u1c79\u1c77\3\2\2\2\u1c79\u1c7a\3\2\2\2\u1c7a"+
		"\u1c7b\3\2\2\2\u1c7b\u1c7c\5\u0238\u011d\2\u1c7c\u1c7e\3\2\2\2\u1c7d\u1c58"+
		"\3\2\2\2\u1c7d\u1c59\3\2\2\2\u1c7d\u1c61\3\2\2\2\u1c7d\u1c62\3\2\2\2\u1c7d"+
		"\u1c63\3\2\2\2\u1c7d\u1c6a\3\2\2\2\u1c7d\u1c74\3\2\2\2\u1c7d\u1c75\3\2"+
		"\2\2\u1c7e\u0237\3\2\2\2\u1c7f\u1c80\7\u01ad\2\2\u1c80\u0239\3\2\2\2\u1c81"+
		"\u1c82\7\u01ad\2\2\u1c82\u023b\3\2\2\2\u1c83\u1c84\7\u01ad\2\2\u1c84\u023d"+
		"\3\2\2\2\u1c85\u1c86\b\u0120\1\2\u1c86\u1c8a\7\u01a3\2\2\u1c87\u1c89\5"+
		"\b\5\2\u1c88\u1c87\3\2\2\2\u1c89\u1c8c\3\2\2\2\u1c8a\u1c88\3\2\2\2\u1c8a"+
		"\u1c8b\3\2\2\2\u1c8b\u1c8d\3\2\2\2\u1c8c\u1c8a\3\2\2\2\u1c8d\u1c91\5\u023e"+
		"\u0120\2\u1c8e\u1c90\5\b\5\2\u1c8f\u1c8e\3\2\2\2\u1c90\u1c93\3\2\2\2\u1c91"+
		"\u1c8f\3\2\2\2\u1c91\u1c92\3\2\2\2\u1c92\u1c94\3\2\2\2\u1c93\u1c91\3\2"+
		"\2\2\u1c94\u1c95\7\u01a4\2\2\u1c95\u1ca2\3\2\2\2\u1c96\u1c9a\5\u0244\u0123"+
		"\2\u1c97\u1c99\5\b\5\2\u1c98\u1c97\3\2\2\2\u1c99\u1c9c\3\2\2\2\u1c9a\u1c98"+
		"\3\2\2\2\u1c9a\u1c9b\3\2\2\2\u1c9b\u1c9d\3\2\2\2\u1c9c\u1c9a\3\2\2\2\u1c9d"+
		"\u1c9e\5\u023e\u0120\5\u1c9e\u1ca2\3\2\2\2\u1c9f\u1ca2\5\u025a\u012e\2"+
		"\u1ca0\u1ca2\5\u0240\u0121\2\u1ca1\u1c85\3\2\2\2\u1ca1\u1c96\3\2\2\2\u1ca1"+
		"\u1c9f\3\2\2\2\u1ca1\u1ca0\3\2\2\2\u1ca2\u1cb5\3\2\2\2\u1ca3\u1ca7\f\6"+
		"\2\2\u1ca4\u1ca6\5\b\5\2\u1ca5\u1ca4\3\2\2\2\u1ca6\u1ca9\3\2\2\2\u1ca7"+
		"\u1ca5\3\2\2\2\u1ca7\u1ca8\3\2\2\2\u1ca8\u1caa\3\2\2\2\u1ca9\u1ca7\3\2"+
		"\2\2\u1caa\u1cae\5\u0242\u0122\2\u1cab\u1cad\5\b\5\2\u1cac\u1cab\3\2\2"+
		"\2\u1cad\u1cb0\3\2\2\2\u1cae\u1cac\3\2\2\2\u1cae\u1caf\3\2\2\2\u1caf\u1cb1"+
		"\3\2\2\2\u1cb0\u1cae\3\2\2\2\u1cb1\u1cb2\5\u023e\u0120\7\u1cb2\u1cb4\3"+
		"\2\2\2\u1cb3\u1ca3\3\2\2\2\u1cb4\u1cb7\3\2\2\2\u1cb5\u1cb3\3\2\2\2\u1cb5"+
		"\u1cb6\3\2\2\2\u1cb6\u023f\3\2\2\2\u1cb7\u1cb5\3\2\2\2\u1cb8\u1cbc\7\u01ad"+
		"\2\2\u1cb9\u1cbc\7\u01ac\2\2\u1cba\u1cbc\5\4\3\2\u1cbb\u1cb8\3\2\2\2\u1cbb"+
		"\u1cb9\3\2\2\2\u1cbb\u1cba\3\2\2\2\u1cbc\u0241\3\2\2\2\u1cbd\u1cc4\7\u0197"+
		"\2\2\u1cbe\u1cc4\7\u0198\2\2\u1cbf\u1cc4\7\u0199\2\2\u1cc0\u1cc4\7\u019a"+
		"\2\2\u1cc1\u1cc2\7\u0199\2\2\u1cc2\u1cc4\7\u0199\2\2\u1cc3\u1cbd\3\2\2"+
		"\2\u1cc3\u1cbe\3\2\2\2\u1cc3\u1cbf\3\2\2\2\u1cc3\u1cc0\3\2\2\2\u1cc3\u1cc1"+
		"\3\2\2\2\u1cc4\u0243\3\2\2\2\u1cc5\u1cc6\t&\2\2\u1cc6\u0245\3\2\2\2\u1cc7"+
		"\u1cc8\b\u0124\1\2\u1cc8\u1ccc\7\u01a3\2\2\u1cc9\u1ccb\5\b\5\2\u1cca\u1cc9"+
		"\3\2\2\2\u1ccb\u1cce\3\2\2\2\u1ccc\u1cca\3\2\2\2\u1ccc\u1ccd\3\2\2\2\u1ccd"+
		"\u1ccf\3\2\2\2\u1cce\u1ccc\3\2\2\2\u1ccf\u1cd3\5\u0246\u0124\2\u1cd0\u1cd2"+
		"\5\b\5\2\u1cd1\u1cd0\3\2\2\2\u1cd2\u1cd5\3\2\2\2\u1cd3\u1cd1\3\2\2\2\u1cd3"+
		"\u1cd4\3\2\2\2\u1cd4\u1cd6\3\2\2\2\u1cd5\u1cd3\3\2\2\2\u1cd6\u1cd7\7\u01a4"+
		"\2\2\u1cd7\u1ce5\3\2\2\2\u1cd8\u1cdc\7\u00f3\2\2\u1cd9\u1cdb\5\b\5\2\u1cda"+
		"\u1cd9\3\2\2\2\u1cdb\u1cde\3\2\2\2\u1cdc\u1cda\3\2\2\2\u1cdc\u1cdd\3\2"+
		"\2\2\u1cdd\u1cdf\3\2\2\2\u1cde\u1cdc\3\2\2\2\u1cdf\u1ce5\5\u0246\u0124"+
		"\7\u1ce0\u1ce5\5\u0252\u012a\2\u1ce1\u1ce5\5\u024a\u0126\2\u1ce2\u1ce5"+
		"\5\u024e\u0128\2\u1ce3\u1ce5\5\u0248\u0125\2\u1ce4\u1cc7\3\2\2\2\u1ce4"+
		"\u1cd8\3\2\2\2\u1ce4\u1ce0\3\2\2\2\u1ce4\u1ce1\3\2\2\2\u1ce4\u1ce2\3\2"+
		"\2\2\u1ce4\u1ce3\3\2\2\2\u1ce5\u1cf8\3\2\2\2\u1ce6\u1cea\f\b\2\2\u1ce7"+
		"\u1ce9\5\b\5\2\u1ce8\u1ce7\3\2\2\2\u1ce9\u1cec\3\2\2\2\u1cea\u1ce8\3\2"+
		"\2\2\u1cea\u1ceb\3\2\2\2\u1ceb\u1ced\3\2\2\2\u1cec\u1cea\3\2\2\2\u1ced"+
		"\u1cf1\5\u024c\u0127\2\u1cee\u1cf0\5\b\5\2\u1cef\u1cee\3\2\2\2\u1cf0\u1cf3"+
		"\3\2\2\2\u1cf1\u1cef\3\2\2\2\u1cf1\u1cf2\3\2\2\2\u1cf2\u1cf4\3\2\2\2\u1cf3"+
		"\u1cf1\3\2\2\2\u1cf4\u1cf5\5\u0246\u0124\t\u1cf5\u1cf7\3\2\2\2\u1cf6\u1ce6"+
		"\3\2\2\2\u1cf7\u1cfa\3\2\2\2\u1cf8\u1cf6\3\2\2\2\u1cf8\u1cf9\3\2\2\2\u1cf9"+
		"\u0247\3\2\2\2\u1cfa\u1cf8\3\2\2\2\u1cfb\u1d03\5\u01ae\u00d8\2\u1cfc\u1cfe"+
		"\5\b\5\2\u1cfd\u1cfc\3\2\2\2\u1cfe\u1cff\3\2\2\2\u1cff\u1cfd\3\2\2\2\u1cff"+
		"\u1d00\3\2\2\2\u1d00\u1d01\3\2\2\2\u1d01\u1d02\7\u00cf\2\2\u1d02\u1d04"+
		"\3\2\2\2\u1d03\u1cfd\3\2\2\2\u1d03\u1d04\3\2\2\2\u1d04\u1d06\3\2\2\2\u1d05"+
		"\u1d07\5\b\5\2\u1d06\u1d05\3\2\2\2\u1d07\u1d08\3\2\2\2\u1d08\u1d06\3\2"+
		"\2\2\u1d08\u1d09\3\2\2\2\u1d09\u1d0a\3\2\2\2\u1d0a\u1d0b\t\'\2\2\u1d0b"+
		"\u0249\3\2\2\2\u1d0c\u1d0d\b\u0126\1\2\u1d0d\u1d11\5\u023e\u0120\2\u1d0e"+
		"\u1d10\5\b\5\2\u1d0f\u1d0e\3\2\2\2\u1d10\u1d13\3\2\2\2\u1d11\u1d0f\3\2"+
		"\2\2\u1d11\u1d12\3\2\2\2\u1d12\u1d14\3\2\2\2\u1d13\u1d11\3\2\2\2\u1d14"+
		"\u1d18\5\u0256\u012c\2\u1d15\u1d17\5\b\5\2\u1d16\u1d15\3\2\2\2\u1d17\u1d1a"+
		"\3\2\2\2\u1d18\u1d16\3\2\2\2\u1d18\u1d19\3\2\2\2\u1d19\u1d1b\3\2\2\2\u1d1a"+
		"\u1d18\3\2\2\2\u1d1b\u1d1c\5\u023e\u0120\2\u1d1c\u1d20\3\2\2\2\u1d1d\u1d20"+
		"\5\u0252\u012a\2\u1d1e\u1d20\5\u01ae\u00d8\2\u1d1f\u1d0c\3\2\2\2\u1d1f"+
		"\u1d1d\3\2\2\2\u1d1f\u1d1e\3\2\2\2\u1d20\u1d39\3\2\2\2\u1d21\u1d23\f\3"+
		"\2\2\u1d22\u1d24\5\b\5\2\u1d23\u1d22\3\2\2\2\u1d24\u1d25\3\2\2\2\u1d25"+
		"\u1d23\3\2\2\2\u1d25\u1d26\3\2\2\2\u1d26\u1d27\3\2\2\2\u1d27\u1d2b\5\u024c"+
		"\u0127\2\u1d28\u1d2a\5\b\5\2\u1d29\u1d28\3\2\2\2\u1d2a\u1d2d\3\2\2\2\u1d2b"+
		"\u1d29\3\2\2\2\u1d2b\u1d2c\3\2\2\2\u1d2c\u1d2e\3\2\2\2\u1d2d\u1d2b\3\2"+
		"\2\2\u1d2e\u1d32\5\u0256\u012c\2\u1d2f\u1d31\5\b\5\2\u1d30\u1d2f\3\2\2"+
		"\2\u1d31\u1d34\3\2\2\2\u1d32\u1d30\3\2\2\2\u1d32\u1d33\3\2\2\2\u1d33\u1d35"+
		"\3\2\2\2\u1d34\u1d32\3\2\2\2\u1d35\u1d36\5\u023e\u0120\2\u1d36\u1d38\3"+
		"\2\2\2\u1d37\u1d21\3\2\2\2\u1d38\u1d3b\3\2\2\2\u1d39\u1d37\3\2\2\2\u1d39"+
		"\u1d3a\3\2\2\2\u1d3a\u024b\3\2\2\2\u1d3b\u1d39\3\2\2\2\u1d3c\u1d3d\t("+
		"\2\2\u1d3d\u024d\3\2\2\2\u1d3e\u1d46\5\u023e\u0120\2\u1d3f\u1d41\5\b\5"+
		"\2\u1d40\u1d3f\3\2\2\2\u1d41\u1d42\3\2\2\2\u1d42\u1d40\3\2\2\2\u1d42\u1d43"+
		"\3\2\2\2\u1d43\u1d44\3\2\2\2\u1d44\u1d45\7\u00cf\2\2\u1d45\u1d47\3\2\2"+
		"\2\u1d46\u1d40\3\2\2\2\u1d46\u1d47\3\2\2\2\u1d47\u1d4f\3\2\2\2\u1d48\u1d4a"+
		"\5\b\5\2\u1d49\u1d48\3\2\2\2\u1d4a\u1d4b\3\2\2\2\u1d4b\u1d49\3\2\2\2\u1d4b"+
		"\u1d4c\3\2\2\2\u1d4c\u1d4d\3\2\2\2\u1d4d\u1d4e\7\u00f3\2\2\u1d4e\u1d50"+
		"\3\2\2\2\u1d4f\u1d49\3\2\2\2\u1d4f\u1d50\3\2\2\2\u1d50\u1d52\3\2\2\2\u1d51"+
		"\u1d53\5\b\5\2\u1d52\u1d51\3\2\2\2\u1d53\u1d54\3\2\2\2\u1d54\u1d52\3\2"+
		"\2\2\u1d54\u1d55\3\2\2\2\u1d55\u1d56\3\2\2\2\u1d56\u1d57\5\u0250\u0129"+
		"\2\u1d57\u024f\3\2\2\2\u1d58\u1d59\t)\2\2\u1d59\u0251\3\2\2\2\u1d5a\u1d62"+
		"\5\u025a\u012e\2\u1d5b\u1d5d\5\b\5\2\u1d5c\u1d5b\3\2\2\2\u1d5d\u1d5e\3"+
		"\2\2\2\u1d5e\u1d5c\3\2\2\2\u1d5e\u1d5f\3\2\2\2\u1d5f\u1d60\3\2\2\2\u1d60"+
		"\u1d61\7\u00cf\2\2\u1d61\u1d63\3\2\2\2\u1d62\u1d5c\3\2\2\2\u1d62\u1d63"+
		"\3\2\2\2\u1d63\u1d6b\3\2\2\2\u1d64\u1d66\5\b\5\2\u1d65\u1d64\3\2\2\2\u1d66"+
		"\u1d67\3\2\2\2\u1d67\u1d65\3\2\2\2\u1d67\u1d68\3\2\2\2\u1d68\u1d69\3\2"+
		"\2\2\u1d69\u1d6a\7\u00f3\2\2\u1d6a\u1d6c\3\2\2\2\u1d6b\u1d65\3\2\2\2\u1d6b"+
		"\u1d6c\3\2\2\2\u1d6c\u1d6e\3\2\2\2\u1d6d\u1d6f\5\b\5\2\u1d6e\u1d6d\3\2"+
		"\2\2\u1d6f\u1d70\3\2\2\2\u1d70\u1d6e\3\2\2\2\u1d70\u1d71\3\2\2\2\u1d71"+
		"\u1d72\3\2\2\2\u1d72\u1d73\5\u0254\u012b\2\u1d73\u0253\3\2\2\2\u1d74\u1d75"+
		"\t*\2\2\u1d75\u0255\3\2\2\2\u1d76\u1d7a\7\u00cf\2\2\u1d77\u1d79\5\b\5"+
		"\2\u1d78\u1d77\3\2\2\2\u1d79\u1d7c\3\2\2\2\u1d7a\u1d78\3\2\2\2\u1d7a\u1d7b"+
		"\3\2\2\2\u1d7b\u1d7e\3\2\2\2\u1d7c\u1d7a\3\2\2\2\u1d7d\u1d76\3\2\2\2\u1d7d"+
		"\u1d7e\3\2\2\2\u1d7e\u1e06\3\2\2\2\u1d7f\u1d83\7\u00f3\2\2\u1d80\u1d82"+
		"\5\b\5\2\u1d81\u1d80\3\2\2\2\u1d82\u1d85\3\2\2\2\u1d83\u1d81\3\2\2\2\u1d83"+
		"\u1d84\3\2\2\2\u1d84\u1d87\3\2\2\2\u1d85\u1d83\3\2\2\2\u1d86\u1d7f\3\2"+
		"\2\2\u1d86\u1d87\3\2\2\2\u1d87\u1dc4\3\2\2\2\u1d88\u1d90\7\u00b8\2\2\u1d89"+
		"\u1d8b\5\b\5\2\u1d8a\u1d89\3\2\2\2\u1d8b\u1d8c\3\2\2\2\u1d8c\u1d8a\3\2"+
		"\2\2\u1d8c\u1d8d\3\2\2\2\u1d8d\u1d8e\3\2\2\2\u1d8e\u1d8f\7\u0164\2\2\u1d8f"+
		"\u1d91\3\2\2\2\u1d90\u1d8a\3\2\2\2\u1d90\u1d91\3\2\2\2\u1d91\u1dc5\3\2"+
		"\2\2\u1d92\u1d9a\7\u01a2\2\2\u1d93\u1d95\5\b\5\2\u1d94\u1d93\3\2\2\2\u1d95"+
		"\u1d96\3\2\2\2\u1d96\u1d94\3\2\2\2\u1d96\u1d97\3\2\2\2\u1d97\u1d98\3\2"+
		"\2\2\u1d98\u1d99\7\u0164\2\2\u1d99\u1d9b\3\2\2\2\u1d9a\u1d94\3\2\2\2\u1d9a"+
		"\u1d9b\3\2\2\2\u1d9b\u1dc5\3\2\2\2\u1d9c\u1da4\7\u00d9\2\2\u1d9d\u1d9f"+
		"\5\b\5\2\u1d9e\u1d9d\3\2\2\2\u1d9f\u1da0\3\2\2\2\u1da0\u1d9e\3\2\2\2\u1da0"+
		"\u1da1\3\2\2\2\u1da1\u1da2\3\2\2\2\u1da2\u1da3\7\u0164\2\2\u1da3\u1da5"+
		"\3\2\2\2\u1da4\u1d9e\3\2\2\2\u1da4\u1da5\3\2\2\2\u1da5\u1dc5\3\2\2\2\u1da6"+
		"\u1dae\7\u019f\2\2\u1da7\u1da9\5\b\5\2\u1da8\u1da7\3\2\2\2\u1da9\u1daa"+
		"\3\2\2\2\u1daa\u1da8\3\2\2\2\u1daa\u1dab\3\2\2\2\u1dab\u1dac\3\2\2\2\u1dac"+
		"\u1dad\7\u0164\2\2\u1dad\u1daf\3\2\2\2\u1dae\u1da8\3\2\2\2\u1dae\u1daf"+
		"\3\2\2\2\u1daf\u1dc5\3\2\2\2\u1db0\u1db8\7\u0097\2\2\u1db1\u1db3\5\b\5"+
		"\2\u1db2\u1db1\3\2\2\2\u1db3\u1db4\3\2\2\2\u1db4\u1db2\3\2\2\2\u1db4\u1db5"+
		"\3\2\2\2\u1db5\u1db6\3\2\2\2\u1db6\u1db7\7\u0169\2\2\u1db7\u1db9\3\2\2"+
		"\2\u1db8\u1db2\3\2\2\2\u1db8\u1db9\3\2\2\2\u1db9\u1dc5\3\2\2\2\u1dba\u1dc2"+
		"\7\u019e\2\2\u1dbb\u1dbd\5\b\5\2\u1dbc\u1dbb\3\2\2\2\u1dbd\u1dbe\3\2\2"+
		"\2\u1dbe\u1dbc\3\2\2\2\u1dbe\u1dbf\3\2\2\2\u1dbf\u1dc0\3\2\2\2\u1dc0\u1dc1"+
		"\7\u0169\2\2\u1dc1\u1dc3\3\2\2\2\u1dc2\u1dbc\3\2\2\2\u1dc2\u1dc3\3\2\2"+
		"\2\u1dc3\u1dc5\3\2\2\2\u1dc4\u1d88\3\2\2\2\u1dc4\u1d92\3\2\2\2\u1dc4\u1d9c"+
		"\3\2\2\2\u1dc4\u1da6\3\2\2\2\u1dc4\u1db0\3\2\2\2\u1dc4\u1dba\3\2\2\2\u1dc5"+
		"\u1e07\3\2\2\2\u1dc6\u1dce\7\u00b8\2\2\u1dc7\u1dc9\5\b\5\2\u1dc8\u1dc7"+
		"\3\2\2\2\u1dc9\u1dca\3\2\2\2\u1dca\u1dc8\3\2\2\2\u1dca\u1dcb\3\2\2\2\u1dcb"+
		"\u1dcc\3\2\2\2\u1dcc\u1dcd\7\u0164\2\2\u1dcd\u1dcf\3\2\2\2\u1dce\u1dc8"+
		"\3\2\2\2\u1dce\u1dcf\3\2\2\2\u1dcf\u1dd1\3\2\2\2\u1dd0\u1dd2\5\b\5\2\u1dd1"+
		"\u1dd0\3\2\2\2\u1dd2\u1dd3\3\2\2\2\u1dd3\u1dd1\3\2\2\2\u1dd3\u1dd4\3\2"+
		"\2\2\u1dd4\u1dd5\3\2\2\2\u1dd5\u1dd7\7\u00ff\2\2\u1dd6\u1dd8\5\b\5\2\u1dd7"+
		"\u1dd6\3\2\2\2\u1dd8\u1dd9\3\2\2\2\u1dd9\u1dd7\3\2\2\2\u1dd9\u1dda\3\2"+
		"\2\2\u1dda\u1ddb\3\2\2\2\u1ddb\u1de3\7\u0097\2\2\u1ddc\u1dde\5\b\5\2\u1ddd"+
		"\u1ddc\3\2\2\2\u1dde\u1ddf\3\2\2\2\u1ddf\u1ddd\3\2\2\2\u1ddf\u1de0\3\2"+
		"\2\2\u1de0\u1de1\3\2\2\2\u1de1\u1de2\7\u0169\2\2\u1de2\u1de4\3\2\2\2\u1de3"+
		"\u1ddd\3\2\2\2\u1de3\u1de4\3\2\2\2\u1de4\u1e07\3\2\2\2\u1de5\u1e07\7\u01a1"+
		"\2\2\u1de6\u1dee\7\u00d9\2\2\u1de7\u1de9\5\b\5\2\u1de8\u1de7\3\2\2\2\u1de9"+
		"\u1dea\3\2\2\2\u1dea\u1de8\3\2\2\2\u1dea\u1deb\3\2\2\2\u1deb\u1dec\3\2"+
		"\2\2\u1dec\u1ded\7\u0164\2\2\u1ded\u1def\3\2\2\2\u1dee\u1de8\3\2\2\2\u1dee"+
		"\u1def\3\2\2\2\u1def\u1df1\3\2\2\2\u1df0\u1df2\5\b\5\2\u1df1\u1df0\3\2"+
		"\2\2\u1df2\u1df3\3\2\2\2\u1df3\u1df1\3\2\2\2\u1df3\u1df4\3\2\2\2\u1df4"+
		"\u1df5\3\2\2\2\u1df5\u1df7\7\u00ff\2\2\u1df6\u1df8\5\b\5\2\u1df7\u1df6"+
		"\3\2\2\2\u1df8\u1df9\3\2\2\2\u1df9\u1df7\3\2\2\2\u1df9\u1dfa\3\2\2\2\u1dfa"+
		"\u1dfb\3\2\2\2\u1dfb\u1e03\7\u0097\2\2\u1dfc\u1dfe\5\b\5\2\u1dfd\u1dfc"+
		"\3\2\2\2\u1dfe\u1dff\3\2\2\2\u1dff\u1dfd\3\2\2\2\u1dff\u1e00\3\2\2\2\u1e00"+
		"\u1e01\3\2\2\2\u1e01\u1e02\7\u0169\2\2\u1e02\u1e04\3\2\2\2\u1e03\u1dfd"+
		"\3\2\2\2\u1e03\u1e04\3\2\2\2\u1e04\u1e07\3\2\2\2\u1e05\u1e07\7\u01a0\2"+
		"\2\u1e06\u1d86\3\2\2\2\u1e06\u1dc6\3\2\2\2\u1e06\u1de5\3\2\2\2\u1e06\u1de6"+
		"\3\2\2\2\u1e06\u1e05\3\2\2\2\u1e07\u0257\3\2\2\2\u1e08\u1e10\5\u01ae\u00d8"+
		"\2\u1e09\u1e0b\5\b\5\2\u1e0a\u1e09\3\2\2\2\u1e0b\u1e0e\3\2\2\2\u1e0c\u1e0a"+
		"\3\2\2\2\u1e0c\u1e0d\3\2\2\2\u1e0d\u1e0f\3\2\2\2\u1e0e\u1e0c\3\2\2\2\u1e0f"+
		"\u1e11\5\u025e\u0130\2\u1e10\u1e0c\3\2\2\2\u1e10\u1e11\3\2\2\2\u1e11\u1e19"+
		"\3\2\2\2\u1e12\u1e14\5\b\5\2\u1e13\u1e12\3\2\2\2\u1e14\u1e17\3\2\2\2\u1e15"+
		"\u1e13\3\2\2\2\u1e15\u1e16\3\2\2\2\u1e16\u1e18\3\2\2\2\u1e17\u1e15\3\2"+
		"\2\2\u1e18\u1e1a\5\u0260\u0131\2\u1e19\u1e15\3\2\2\2\u1e19\u1e1a\3\2\2"+
		"\2\u1e1a\u0259\3\2\2\2\u1e1b\u1e37\5\u0258\u012d\2\u1e1c\u1e20\7\u00b3"+
		"\2\2\u1e1d\u1e1f\5\b\5\2\u1e1e\u1e1d\3\2\2\2\u1e1f\u1e22\3\2\2\2\u1e20"+
		"\u1e1e\3\2\2\2\u1e20\u1e21\3\2\2\2\u1e21\u1e23\3\2\2\2\u1e22\u1e20\3\2"+
		"\2\2\u1e23\u1e2b\5\u0266\u0134\2\u1e24\u1e26\5\b\5\2\u1e25\u1e24\3\2\2"+
		"\2\u1e26\u1e29\3\2\2\2\u1e27\u1e25\3\2\2\2\u1e27\u1e28\3\2\2\2\u1e28\u1e2a"+
		"\3\2\2\2\u1e29\u1e27\3\2\2\2\u1e2a\u1e2c\5\u025c\u012f\2\u1e2b\u1e27\3"+
		"\2\2\2\u1e2b\u1e2c\3\2\2\2\u1e2c\u1e34\3\2\2\2\u1e2d\u1e2f\5\b\5\2\u1e2e"+
		"\u1e2d\3\2\2\2\u1e2f\u1e32\3\2\2\2\u1e30\u1e2e\3\2\2\2\u1e30\u1e31\3\2"+
		"\2\2\u1e31\u1e33\3\2\2\2\u1e32\u1e30\3\2\2\2\u1e33\u1e35\5\u0260\u0131"+
		"\2\u1e34\u1e30\3\2\2\2\u1e34\u1e35\3\2\2\2\u1e35\u1e37\3\2\2\2\u1e36\u1e1b"+
		"\3\2\2\2\u1e36\u1e1c\3\2\2\2\u1e37\u025b\3\2\2\2\u1e38\u1e39\5\u025e\u0130"+
		"\2\u1e39\u025d\3\2\2\2\u1e3a\u1e3e\7\u01a3\2\2\u1e3b\u1e3d\5\b\5\2\u1e3c"+
		"\u1e3b\3\2\2\2\u1e3d\u1e40\3\2\2\2\u1e3e\u1e3c\3\2\2\2\u1e3e\u1e3f\3\2"+
		"\2\2\u1e3f\u1e43\3\2\2\2\u1e40\u1e3e\3\2\2\2\u1e41\u1e44\5\u023e\u0120"+
		"\2\u1e42\u1e44\7\n\2\2\u1e43\u1e41\3\2\2\2\u1e43\u1e42\3\2\2\2\u1e44\u1e51"+
		"\3\2\2\2\u1e45\u1e47\5\6\4\2\u1e46\u1e45\3\2\2\2\u1e47\u1e4a\3\2\2\2\u1e48"+
		"\u1e46\3\2\2\2\u1e48\u1e49\3\2\2\2\u1e49\u1e4d\3\2\2\2\u1e4a\u1e48\3\2"+
		"\2\2\u1e4b\u1e4e\5\u023e\u0120\2\u1e4c\u1e4e\7\n\2\2\u1e4d\u1e4b\3\2\2"+
		"\2\u1e4d\u1e4c\3\2\2\2\u1e4e\u1e50\3\2\2\2\u1e4f\u1e48\3\2\2\2\u1e50\u1e53"+
		"\3\2\2\2\u1e51\u1e4f\3\2\2\2\u1e51\u1e52\3\2\2\2\u1e52\u1e57\3\2\2\2\u1e53"+
		"\u1e51\3\2\2\2\u1e54\u1e56\5\b\5\2\u1e55\u1e54\3\2\2\2\u1e56\u1e59\3\2"+
		"\2\2\u1e57\u1e55\3\2\2\2\u1e57\u1e58\3\2\2\2\u1e58\u1e5a\3\2\2\2\u1e59"+
		"\u1e57\3\2\2\2\u1e5a\u1e5b\7\u01a4\2\2\u1e5b\u025f\3\2\2\2\u1e5c\u1e60"+
		"\7\u01a3\2\2\u1e5d\u1e5f\5\b\5\2\u1e5e\u1e5d\3\2\2\2\u1e5f\u1e62\3\2\2"+
		"\2\u1e60\u1e5e\3\2\2\2\u1e60\u1e61\3\2\2\2\u1e61\u1e63\3\2\2\2\u1e62\u1e60"+
		"\3\2\2\2\u1e63\u1e67\5\u0262\u0132\2\u1e64\u1e66\5\b\5\2\u1e65\u1e64\3"+
		"\2\2\2\u1e66\u1e69\3\2\2\2\u1e67\u1e65\3\2\2\2\u1e67\u1e68\3\2\2\2\u1e68"+
		"\u1e6a\3\2\2\2\u1e69\u1e67\3\2\2\2\u1e6a\u1e72\7\u019d\2\2\u1e6b\u1e6d"+
		"\5\b\5\2\u1e6c\u1e6b\3\2\2\2\u1e6d\u1e70\3\2\2\2\u1e6e\u1e6c\3\2\2\2\u1e6e"+
		"\u1e6f\3\2\2\2\u1e6f\u1e71\3\2\2\2\u1e70\u1e6e\3\2\2\2\u1e71\u1e73\5\u0264"+
		"\u0133\2\u1e72\u1e6e\3\2\2\2\u1e72\u1e73\3\2\2\2\u1e73\u1e77\3\2\2\2\u1e74"+
		"\u1e76\5\b\5\2\u1e75\u1e74\3\2\2\2\u1e76\u1e79\3\2\2\2\u1e77\u1e75\3\2"+
		"\2\2\u1e77\u1e78\3\2\2\2\u1e78\u1e7a\3\2\2\2\u1e79\u1e77\3\2\2\2\u1e7a"+
		"\u1e7b\7\u01a4\2\2\u1e7b\u0261\3\2\2\2\u1e7c\u1e7d\5\u023e\u0120\2\u1e7d"+
		"\u0263\3\2\2\2\u1e7e\u1e7f\5\u023e\u0120\2\u1e7f\u0265\3\2\2\2\u1e80\u1e81"+
		"\7\u01af\2\2\u1e81\u0267\3\2\2\2\u053a\u026a\u026c\u027d\u0285\u028b\u0291"+
		"\u0299\u029d\u02a1\u02a4\u02a7\u02ab\u02b1\u02b6\u02bd\u02c2\u02c5\u02ca"+
		"\u02ce\u02d3\u02da\u02df\u02e6\u02ec\u02f0\u02f5\u02fc\u0303\u0309\u030d"+
		"\u0312\u0316\u031b\u0322\u032b\u0332\u0339\u033e\u0344\u034a\u0351\u0359"+
		"\u035f\u0368\u036f\u0376\u037b\u0382\u0387\u038c\u0393\u0396\u039c\u03a0"+
		"\u03a5\u03ab\u03af\u03b4\u03ba\u03c0\u03c4\u03c9\u03cf\u03d6\u03dd\u03e3"+
		"\u03e7\u03ec\u03f3\u03fc\u0402\u0409\u040f\u0415\u0419\u041e\u0425\u0430"+
		"\u0436\u043c\u0443\u044b\u0454\u045a\u0467\u046b\u0471\u0477\u047d\u0483"+
		"\u0487\u048c\u0492\u0496\u049a\u049f\u04a3\u04a8\u04ac\u04b2\u04b8\u04be"+
		"\u04c4\u04c8\u04cd\u04d3\u04d7\u04dc\u04e2\u04e8\u04ec\u04f1\u04f5\u04fb"+
		"\u0501\u0507\u050d\u0513\u0518\u051d\u0521\u0527\u052d\u0533\u0538\u053d"+
		"\u0541\u0547\u054d\u0553\u0555\u055b\u055f\u0562\u0564\u0569\u056d\u0573"+
		"\u0579\u057f\u0585\u0589\u058e\u0592\u0596\u059e\u05a5\u05a9\u05af\u05b6"+
		"\u05ba\u05c0\u05c2\u05c9\u05d1\u05d3\u05d9\u05dd\u05df\u05e8\u05ee\u05f0"+
		"\u05f6\u05fa\u05fc\u0601\u0609\u060b\u0614\u0616\u061e\u0620\u0627\u0629"+
		"\u062f\u0633\u0635\u063b\u063d\u0643\u0647\u064c\u0654\u0656\u065c\u0660"+
		"\u0665\u066f\u0675\u0679\u067e\u0682\u0687\u068b\u0693\u0699\u069d\u06a1"+
		"\u06a6\u06ac\u06b1\u06b8\u06bb\u06c1\u06c5\u06ca\u06ce\u06d4\u06da\u06de"+
		"\u06e2\u06e8\u06ee\u06f0\u06f7\u06f9\u06ff\u0703\u0705\u070b\u070d\u0713"+
		"\u0718\u071a\u0720\u0726\u072c\u0732\u0736\u073b\u073f\u0744\u0748\u074d"+
		"\u0751\u0757\u075f\u0765\u076c\u076e\u0774\u077a\u077d\u0783\u0785\u078c"+
		"\u078e\u0795\u0797\u079e\u07a0\u07a3\u07a8\u07b0\u07b6\u07bc\u07c2\u07c8"+
		"\u07ca\u07d0\u07da\u07e0\u07e5\u07eb\u07f1\u07f5\u07f9\u07ff\u0805\u080b"+
		"\u080f\u0814\u081a\u081f\u0825\u082b\u082f\u0833\u0839\u083f\u0845\u084b"+
		"\u0851\u0855\u0857\u085c\u0860\u0865\u0869\u086f\u0877\u087d\u0883\u0887"+
		"\u088d\u0893\u0897\u0899\u089f\u08a5\u08a9\u08af\u08b5\u08b9\u08bb\u08c1"+
		"\u08c7\u08cb\u08d1\u08d7\u08db\u08dd\u08e3\u08e9\u08ed\u08f3\u08f9\u08fd"+
		"\u08ff\u0905\u090b\u0911\u0913\u0919\u091d\u0922\u0926\u092e\u0934\u093a"+
		"\u093e\u0943\u0949\u094d\u0952\u0956\u095b\u095f\u0965\u096b\u0971\u0979"+
		"\u097f\u0985\u098a\u098e\u0990\u0995\u0999\u099f\u09a5\u09a7\u09ad\u09b3"+
		"\u09b5\u09bb\u09c1\u09c6\u09ca\u09cc\u09d1\u09d5\u09db\u09e1\u09e5\u09ea"+
		"\u09ee\u09f3\u09f7\u09fd\u09ff\u0a05\u0a09\u0a0f\u0a13\u0a15\u0a1b\u0a21"+
		"\u0a23\u0a27\u0a2d\u0a33\u0a35\u0a39\u0a3f\u0a41\u0a47\u0a4b\u0a50\u0a58"+
		"\u0a5a\u0a60\u0a64\u0a69\u0a71\u0a77\u0a79\u0a7f\u0a83\u0a85\u0a8a\u0a92"+
		"\u0a94\u0a97\u0aa0\u0aa2\u0aa9\u0aad\u0ab3\u0ab5\u0abd\u0abf\u0ac5\u0acd"+
		"\u0ad3\u0ad5\u0add\u0adf\u0ae5\u0ae9\u0aee\u0af2\u0afd\u0b01\u0b03\u0b09"+
		"\u0b11\u0b13\u0b1a\u0b1c\u0b22\u0b2a\u0b2c\u0b33\u0b35\u0b3b\u0b3f\u0b45"+
		"\u0b4c\u0b52\u0b56\u0b58\u0b5e\u0b62\u0b64\u0b6a\u0b6e\u0b74\u0b78\u0b7c"+
		"\u0b86\u0b88\u0b8e\u0b92\u0b98\u0b9a\u0ba0\u0ba4\u0baa\u0bac\u0bb2\u0bb8"+
		"\u0bbc\u0bc2\u0bc6\u0bcb\u0bcf\u0bd5\u0bdb\u0be2\u0be9\u0bec\u0bf2\u0bf5"+
		"\u0bfb\u0bfe\u0c04\u0c07\u0c0d\u0c10\u0c16\u0c1c\u0c23\u0c2a\u0c30\u0c38"+
		"\u0c3e\u0c41\u0c46\u0c4b\u0c52\u0c58\u0c5f\u0c66\u0c6b\u0c72\u0c78\u0c7f"+
		"\u0c86\u0c8b\u0c92\u0c98\u0c9f\u0ca6\u0cac\u0cb2\u0cb7\u0cbe\u0cc4\u0ccb"+
		"\u0cd2\u0cd7\u0cde\u0ce4\u0ceb\u0cf0\u0cf9\u0cff\u0d06\u0d0b\u0d14\u0d1a"+
		"\u0d21\u0d26\u0d2f\u0d31\u0d38\u0d3a\u0d48\u0d4e\u0d54\u0d5b\u0d5f\u0d61"+
		"\u0d66\u0d6c\u0d70\u0d75\u0d7b\u0d86\u0d88\u0d8f\u0d91\u0d9c\u0da0\u0da6"+
		"\u0daa\u0db0\u0db6\u0db8\u0dbe\u0dc4\u0dca\u0dd0\u0dd4\u0dde\u0de2\u0de8"+
		"\u0dec\u0dee\u0df3\u0df9\u0dff\u0e06\u0e0a\u0e11\u0e19\u0e1d\u0e23\u0e31"+
		"\u0e37\u0e3d\u0e43\u0e47\u0e4d\u0e53\u0e55\u0e5b\u0e61\u0e6a\u0e70\u0e72"+
		"\u0e78\u0e7a\u0e80\u0e86\u0e8f\u0e97\u0e9d\u0ea3\u0ea9\u0eaf\u0eb5\u0eb7"+
		"\u0ebb\u0ec7\u0ecd\u0ed4\u0ed8\u0edd\u0ee3\u0eec\u0ef2\u0ef4\u0efa\u0efc"+
		"\u0f04\u0f0a\u0f10\u0f12\u0f1a\u0f20\u0f22\u0f2a\u0f30\u0f32\u0f34\u0f3b"+
		"\u0f41\u0f43\u0f4b\u0f51\u0f53\u0f59\u0f5b\u0f63\u0f67\u0f6d\u0f71\u0f79"+
		"\u0f7f\u0f81\u0f89\u0f8f\u0f91\u0f96\u0f9c\u0fa0\u0fa5\u0fa7\u0fad\u0fb3"+
		"\u0fb7\u0fb9\u0fbf\u0fc5\u0fcb\u0fd1\u0fd5\u0fda\u0fe0\u0fe5\u0fea\u0ff1"+
		"\u0ff7\u0ff9\u0ffd\u100d\u1016\u101f\u1024\u1029\u1033\u1038\u103d\u1045"+
		"\u104e\u1053\u105c\u1064\u1068\u106e\u1074\u1076\u107c\u1080\u1086\u108a"+
		"\u1092\u1094\u109b\u10a3\u10a7\u10ad\u10b1\u10b3\u10b8\u10be\u10c4\u10cb"+
		"\u10d1\u10d4\u10da\u10e0\u10e6\u10e8\u10ee\u10f4\u10f6\u10f8\u10fe\u1102"+
		"\u1107\u110d\u1111\u1116\u111c\u1122\u1126\u112b\u1131\u1137\u113b\u1140"+
		"\u1146\u114a\u114c\u1160\u1164\u1169\u116b\u1174\u1178\u117e\u1182\u1188"+
		"\u118c\u1192\u1196\u11ae\u11b4\u11ba\u11bc\u11c3\u11cd\u11d3\u11d7\u11dd"+
		"\u11e1\u11e3\u11e8\u11ee\u11f4\u11fd\u1203\u1205\u120b\u120f\u1214\u121a"+
		"\u121c\u1222\u1228\u122a\u122e\u1233\u1239\u123b\u1241\u1243\u1249\u124d"+
		"\u1252\u1258\u125a\u1260\u1262\u1268\u126c\u1270\u1274\u1278\u127c\u1282"+
		"\u1288\u128c\u1292\u1296\u1298\u129e\u12a4\u12ad\u12b3\u12b9\u12bf\u12c1"+
		"\u12c7\u12cd\u12d3\u12d7\u12dd\u12e1\u12e3\u12e8\u12f0\u12f8\u12fa\u1300"+
		"\u1306\u1308\u130e\u1315\u1318\u131e\u1320\u1326\u132c\u132e\u1334\u1337"+
		"\u133d\u133f\u1342\u1348\u134c\u1351\u1358\u135b\u1361\u1367\u1369\u136d"+
		"\u136f\u137b\u137f\u1381\u1386\u138c\u1397\u139f\u13a5\u13a7\u13af\u13b5"+
		"\u13b7\u13c2\u13c8\u13ca\u13cc\u13d7\u13e3\u13e9\u13eb\u13f1\u13f3\u13f9"+
		"\u13fb\u1403\u1409\u140b\u1411\u1413\u1419\u141b\u1423\u1429\u142b\u1433"+
		"\u1439\u143b\u1443\u1447\u144d\u1454\u1458\u145b\u145d\u1463\u146b\u146f"+
		"\u1475\u147d\u1485\u148b\u1492\u1498\u14a3\u14a9\u14b0\u14b7\u14bb\u14c0"+
		"\u14c4\u14c9\u14d4\u14d6\u14dc\u14e0\u14e6\u14e8\u14ee\u14f8\u14fd\u1503"+
		"\u150a\u1511\u1518\u151f\u1526\u152d\u1534\u153b\u1542\u1549\u1550\u1557"+
		"\u155e\u1565\u156c\u1573\u1577\u157c\u1580\u1586\u158c\u158e\u1594\u159d"+
		"\u15a3\u15aa\u15ae\u15b1\u15b7\u15bd\u15c4\u15c8\u15cd\u15d1\u15d6\u15da"+
		"\u15df\u15e6\u15ec\u15f3\u15f7\u15fa\u1600\u1607\u160e\u1612\u1617\u161c"+
		"\u1624\u1626\u162c\u1634\u163b\u1642\u1646\u164b\u164f\u1654\u1658\u165d"+
		"\u1662\u1668\u166c\u1671\u1677\u1683\u1685\u168b\u168d\u1693\u1697\u169c"+
		"\u16a6\u16aa\u16b4\u16bb\u16c2\u16c7\u16cb\u16d1\u16d7\u16d9\u16e1\u16e7"+
		"\u16e9\u16f1\u16f7\u16f9\u1706\u170c\u170e\u1716\u171c\u171e\u1726\u172c"+
		"\u1732\u1734\u1738\u173e\u1744\u174a\u1751\u1757\u1759\u175f\u1761\u176a"+
		"\u176c\u1772\u1778\u177d\u1787\u178d\u1793\u1795\u179b\u17a0\u17a8\u17ae"+
		"\u17b2\u17b8\u17be\u17c0\u17c5\u17ca\u17cd\u17d3\u17d7\u17dd\u17df\u17e5"+
		"\u17e9\u17ef\u17f5\u1800\u1806\u180c\u180e\u181b\u1820\u1822\u1828\u182e"+
		"\u1832\u1838\u183e\u1844\u1846\u1852\u1858\u185f\u1861\u1867\u1869\u186f"+
		"\u1873\u1879\u187d\u187f\u1884\u188b\u1891\u1893\u1899\u189b\u18a3\u18a9"+
		"\u18ab\u18b1\u18b3\u18cb\u18d2\u18d9\u18de\u18e5\u18eb\u18ed\u18f3\u18fa"+
		"\u1901\u1904\u190a\u190d\u1913\u1916\u191c\u191f\u1925\u1928\u192e\u1931"+
		"\u1937\u193a\u1940\u1945\u194c\u194f\u1955\u1958\u1960\u1962\u1968\u196e"+
		"\u1970\u197a\u197c\u1982\u1988\u198a\u1990\u1992\u1998\u199e\u19a0\u19a4"+
		"\u19a9\u19ad\u19b4\u19bb\u19c2\u19c8\u19cb\u19d1\u19d7\u19d9\u19df\u19e1"+
		"\u19e3\u19e9\u19ef\u19f5\u19f7\u19fd\u19ff\u1a03\u1a09\u1a0f\u1a13\u1a1b"+
		"\u1a21\u1a27\u1a29\u1a31\u1a37\u1a39\u1a3f\u1a41\u1a4b\u1a51\u1a53\u1a55"+
		"\u1a5c\u1a62\u1a68\u1a6e\u1a70\u1a76\u1a78\u1a80\u1a86\u1a88\u1a8e\u1a94"+
		"\u1a9a\u1aa2\u1aa8\u1aaa\u1ab0\u1ab6\u1abb\u1abd\u1ac0\u1ac6\u1acc\u1ace"+
		"\u1ad6\u1adc\u1ade\u1ae4\u1aea\u1aec\u1af2\u1afe\u1b04\u1b06\u1b0e\u1b10"+
		"\u1b17\u1b19\u1b1f\u1b23\u1b25\u1b2b\u1b33\u1b3a\u1b41\u1b46\u1b4d\u1b52"+
		"\u1b59\u1b5e\u1b65\u1b6a\u1b71\u1b74\u1b7a\u1b80\u1b86\u1b88\u1b8e\u1b90"+
		"\u1b96\u1b9b\u1ba1\u1ba7\u1bab\u1bb5\u1bbb\u1bc1\u1bc3\u1bc9\u1bcb\u1bd3"+
		"\u1bd9\u1bdb\u1be3\u1be8\u1bf2\u1bf8\u1bfa\u1bfc\u1c03\u1c07\u1c0f\u1c15"+
		"\u1c17\u1c1d\u1c1f\u1c25\u1c27\u1c2d\u1c33\u1c3b\u1c41\u1c45\u1c4b\u1c51"+
		"\u1c56\u1c5d\u1c68\u1c6a\u1c70\u1c79\u1c7d\u1c8a\u1c91\u1c9a\u1ca1\u1ca7"+
		"\u1cae\u1cb5\u1cbb\u1cc3\u1ccc\u1cd3\u1cdc\u1ce4\u1cea\u1cf1\u1cf8\u1cff"+
		"\u1d03\u1d08\u1d11\u1d18\u1d1f\u1d25\u1d2b\u1d32\u1d39\u1d42\u1d46\u1d4b"+
		"\u1d4f\u1d54\u1d5e\u1d62\u1d67\u1d6b\u1d70\u1d7a\u1d7d\u1d83\u1d86\u1d8c"+
		"\u1d90\u1d96\u1d9a\u1da0\u1da4\u1daa\u1dae\u1db4\u1db8\u1dbe\u1dc2\u1dc4"+
		"\u1dca\u1dce\u1dd3\u1dd9\u1ddf\u1de3\u1dea\u1dee\u1df3\u1df9\u1dff\u1e03"+
		"\u1e06\u1e0c\u1e10\u1e15\u1e19\u1e20\u1e27\u1e2b\u1e30\u1e34\u1e36\u1e3e"+
		"\u1e43\u1e48\u1e4d\u1e51\u1e57\u1e60\u1e67\u1e6e\u1e72\u1e77";
	public static final String _serializedATN = Utils.join(
		new String[] {
			_serializedATNSegment0,
			_serializedATNSegment1,
			_serializedATNSegment2,
			_serializedATNSegment3
		},
		""
	);
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}