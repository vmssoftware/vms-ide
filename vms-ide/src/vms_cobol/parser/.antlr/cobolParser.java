// Generated from d:\vmssoftware.work\vms-ide\src\vms_cobol\parser\cobol.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.misc.*;
import org.antlr.v4.runtime.tree.*;
import java.util.List;
import java.util.Iterator;
import java.util.ArrayList;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class cobolParser extends Parser {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		DECLARATIVES_IN_A_AREA=1, END_IN_A_AREA=2, IDENTIFICATION_IN_A_AREA=3, 
		ACCEPT=4, ACCESS=5, ADD=6, ADVANCING=7, AFTER=8, ALL=9, ALPHA=10, ALPHABET=11, 
		ALPHABETIC=12, ALPHABETIC_LOWER=13, ALPHABETIC_UPPER=14, ALSO=15, ALTER=16, 
		ALTERNATE=17, AND=18, APPLY=19, ARE=20, AREA=21, AREAS=22, ARGUMENT_NUMBER=23, 
		ARGUMENT_VALUE=24, ARITHMETIC=25, ASCENDING=26, ASCII=27, ASSIGN=28, AT=29, 
		AUTHOR=30, AUTO=31, AUTOMATIC=32, AUTOTERMINATE=33, BACKGROUND_COLOR=34, 
		BEFORE=35, BELL=36, BINARY=37, BINARY_CHAR=38, BINARY_DOUBLE=39, BINARY_LONG=40, 
		BINARY_SHORT=41, BLANK=42, BLINK=43, BLINKING=44, BLOCK=45, BOLD=46, BOTTOM=47, 
		BY=48, C01=49, CALL=50, CANCEL=51, CARD_READER=52, CF=53, CH=54, CHARACTER=55, 
		CHARACTERS=56, CLASS=57, CLOCK_UNITS=58, CLOSE=59, CODE=60, CODE_SET=61, 
		COLLATING=62, COLUMN=63, COMMA=64, COMMON=65, COMP=66, COMPUTATIONAL=67, 
		COMPUTATIONAL_1=68, COMPUTATIONAL_2=69, COMPUTATIONAL_3=70, COMPUTATIONAL_4=71, 
		COMPUTATIONAL_5=72, COMPUTATIONAL_X=73, COMPUTE=74, COMP_1=75, COMP_2=76, 
		COMP_3=77, COMP_4=78, COMP_5=79, COMP_X=80, CONFIGURATION=81, CONSOLE=82, 
		CONTAINS=83, CONTENT=84, CONTIGUOUS=85, CONTIGUOUS_BEST_TRY=86, CONTINUE=87, 
		CONTROL=88, CONTROLS=89, CONVERSION=90, CONVERTING=91, COPY=92, CORR=93, 
		CORRESPONDING=94, CRT=95, CURRENCY=96, CURRENT=97, CURSOR=98, DATA=99, 
		DATE=100, DATE_COMPILED=101, DATE_WRITTEN=102, DAY=103, DAY_OF_WEEK=104, 
		DE=105, DEBUGGING=106, DECIMAL_POINT=107, DECLARATIVES=108, DEFAULT=109, 
		DEFERRED_WRITE=110, DELETE=111, DELIMITER=112, DEPENDING=113, DESCENDING=114, 
		DESCRIPTOR=115, DETAIL=116, DISK=117, DISPLAY=118, DIVIDE=119, DIVISION=120, 
		DOWN=121, DUPLICATES=122, DYNAMIC=123, EBCDIC=124, ECHO=125, EDITING=126, 
		END=127, END_ACCEPT=128, END_ADD=129, END_CALL=130, END_COMPUTE=131, END_DELETE=132, 
		END_DISPLAY=133, END_DIVIDE=134, END_EVALUATE=135, END_IF=136, END_MULTIPLY=137, 
		END_OF_PAGE=138, END_PERFORM=139, END_READ=140, END_RETURN=141, END_REWRITE=142, 
		END_SEARCH=143, END_START=144, END_STRING=145, END_SUBTRACT=146, END_UNSTRING=147, 
		END_WRITE=148, ENVIRONMENT=149, ENVIRONMENT_NAME=150, ENVIRONMENT_VALUE=151, 
		EOL=152, EOS=153, EQUAL=154, ERASE=155, ERROR=156, EVALUATE=157, EVERY=158, 
		EXCEPTION=159, EXCLUSIVE=160, EXIT=161, EXTEND=162, EXTENSION=163, EXTERNAL=164, 
		FAILURE=165, FALSE=166, FD=167, FILE=168, FILE_CONTROL=169, FILE_ID=170, 
		FILLER=171, FILL_SIZE=172, FINAL=173, FIRST=174, FLOAT_EXTENDED=175, FLOAT_LONG=176, 
		FLOAT_SHORT=177, FOOTING=178, FOR=179, FOREGROUND_COLOR=180, FROM=181, 
		FULL=182, FUNCTION=183, GENERATE=184, GIVING=185, GLOBAL=186, GO=187, 
		GREATER=188, GROUP=189, HEADING=190, HIGHLIGHT=191, HIGH_VALUE=192, HIGH_VALUES=193, 
		I64=194, ID=195, IDENT=196, IDENTIFICATION=197, IF=198, IN=199, INDEX=200, 
		INDEXED=201, INDICATE=202, INITIAL=203, INITIALIZE=204, INITIATE=205, 
		INPUT=206, INPUT_OUTPUT=207, INSPECT=208, INSTALLATION=209, INTO=210, 
		INVALID=211, IS=212, I_O=213, I_O_CONTROL=214, JUST=215, JUSTIFIED=216, 
		KEY=217, LABEL=218, LAST=219, LEADING=220, LEFT=221, LESS=222, LIMIT=223, 
		LIMITS=224, LINAGE=225, LINE=226, LINES=227, LINE_PRINTER=228, LINKAGE=229, 
		LOCK=230, LOCK_HOLDING=231, LOWLIGHT=232, LOW_VALUE=233, LOW_VALUES=234, 
		MANUAL=235, MASS_INSERT=236, MEMORY=237, MERGE=238, MODE=239, MODULES=240, 
		MOVE=241, MULTIPLE=242, MULTIPLY=243, NATIVE=244, NEGATIVE=245, NEXT=246, 
		NO=247, NOT=248, NUMBER=249, NUMERIC=250, OBJECT_COMPUTER=251, OCCURS=252, 
		OF=253, OFF=254, OMITTED=255, ON=256, OPEN=257, OPTIONAL=258, OPTIONS=259, 
		OR=260, ORGANIZATION=261, OUTPUT=262, OVERFLOW=263, PACKED_DECIMAL=264, 
		PADDING=265, PAGE=266, PAPER_TAPE_PUNCH=267, PAPER_TAPE_READER=268, PERFORM=269, 
		PF=270, PH=271, PIC=272, PICTURE=273, PLUS=274, POINTER=275, POINTER_64=276, 
		POSITION=277, POSITIVE=278, PREALLOCATION=279, PRINTER=280, PRINT_CONTROL=281, 
		PROCEDURE=282, PROCEED=283, PROGRAM=284, PROGRAM_ID=285, PROTECTED=286, 
		QUOTE=287, QUOTES=288, RANDOM=289, RD=290, READ=291, RECORD=292, RECORDS=293, 
		REDEFINES=294, REEL=295, REFERENCE=296, RELATIVE=297, RELEASE=298, REMAINDER=299, 
		REMOVAL=300, RENAMES=301, REPLACE=302, REPLACING=303, REPORT=304, REPORTING=305, 
		REPORTS=306, REQUIRED=307, RERUN=308, RESERVE=309, RESET=310, RETURN=311, 
		REVERSED=312, REVERSE_VIDEO=313, REWIND=314, REWRITE=315, RF=316, RH=317, 
		RIGHT=318, ROLLBACK=319, ROUNDED=320, SAME=321, SCREEN=322, SD=323, SEARCH=324, 
		SECTION=325, SECURE=326, SECURITY=327, SEGMENT_LIMIT=328, SELECT=329, 
		SEPARATE=330, SEQUENCE=331, SEQUENTIAL=332, SET=333, SIGN=334, SIGNED=335, 
		SIZE=336, SORT=337, SORT_MERGE=338, SOURCE=339, SOURCE_COMPUTER=340, SPACE=341, 
		SPACES=342, SPECIAL_NAMES=343, STANDARD=344, STANDARD_1=345, STANDARD_2=346, 
		START=347, STATUS=348, STOP=349, STRING=350, SUBTRACT=351, SUCCESS=352, 
		SUM=353, SUPPRESS=354, SWITCH=355, SYMBOL=356, SYMBOLIC=357, SYNC=358, 
		SYNCHRONIZED=359, SYSERR=360, SYSIN=361, SYSOUT=362, TALLYING=363, TAPE=364, 
		TERMINATE=365, THAN=366, THROUGH=367, THRU=368, TIME=369, TIMES=370, TO=371, 
		TOP=372, TRAILING=373, TRUE=374, TYPE=375, UNDERLINE=376, UNDERLINED=377, 
		UNIT=378, UNLOCK=379, UNSIGNED=380, UNSTRING=381, UP=382, UPON=383, USAGE=384, 
		USE=385, USING=386, VALUE=387, VALUES=388, VARYING=389, VAX=390, WHEN=391, 
		WINDOW=392, WITH=393, WORDS=394, WORKING_STORAGE=395, WRITE=396, YYYYDDD=397, 
		YYYYMMDD=398, ZERO=399, ZEROES=400, ZEROS=401, OTHER=402, ANY=403, THEN=404, 
		SENTENCE=405, ELSE=406, ALPHANUMERIC=407, NUMERIC_EDITED=408, ALPHANUMERIC_EDITED=409, 
		START_SLASH_=410, START_STAR_=411, EXCLAM_=412, UNDER_=413, PLUS_=414, 
		MINUS_=415, STAR_=416, SLASH_=417, COMMA_=418, SEMI_=419, COLON_=420, 
		EQUAL_=421, LT_=422, LE_=423, GE_=424, GT_=425, LPAREN_=426, RPAREN_=427, 
		LBRACK_=428, RBRACK_=429, POINTER_=430, ATP_=431, DOT_=432, LCURLY_=433, 
		RCURLY_=434, STRING_LITERAL=435, NUMERIC_LITERAL=436, HEX_LITERAL=437, 
		USER_DEFINED_WORD=438, START_FOUR_SPACES=439, WHITESPACE=440, NEWLINE=441;
	public static final int
		RULE_cobol_source = 0, RULE_figurative_constant_witout_zero = 1, RULE_figurative_constant = 2, 
		RULE_separator = 3, RULE_arithmetic_separator = 4, RULE_line_comment = 5, 
		RULE_program = 6, RULE_procedure_division = 7, RULE_end_program = 8, RULE_procedure_division_header = 9, 
		RULE_section = 10, RULE_declaratives = 11, RULE_declaratives_section = 12, 
		RULE_declarative_paragraph = 13, RULE_paragraph = 14, RULE_sentense = 15, 
		RULE_use_statement = 16, RULE_group_data_name = 17, RULE_use_on = 18, 
		RULE_section_header = 19, RULE_paragraph_name = 20, RULE_section_name = 21, 
		RULE_using = 22, RULE_giving = 23, RULE_procedure_test_line = 24, RULE_statement = 25, 
		RULE_initialize_statement = 26, RULE_replacing = 27, RULE_init_value = 28, 
		RULE_fld_name = 29, RULE_move_statement = 30, RULE_if_statement = 31, 
		RULE_generate_statement = 32, RULE_report_item = 33, RULE_exit_statement = 34, 
		RULE_exit_program_statement = 35, RULE_go_to_statement = 36, RULE_proc_name = 37, 
		RULE_evaluate_statement = 38, RULE_when_condition = 39, RULE_subj_item = 40, 
		RULE_divide_statement = 41, RULE_divide_statement_form1 = 42, RULE_divide_statement_form2 = 43, 
		RULE_remaind = 44, RULE_divide_num = 45, RULE_display_statement = 46, 
		RULE_display_statement_form1 = 47, RULE_display_statement_form2 = 48, 
		RULE_display_statement_form3 = 49, RULE_display_statement_form4 = 50, 
		RULE_src_item = 51, RULE_display_upon = 52, RULE_disp_f3_line = 53, RULE_disp_f3_column = 54, 
		RULE_display_form1_clause = 55, RULE_display_form2_clause = 56, RULE_at_line_number = 57, 
		RULE_at_column_number = 58, RULE_out_dest = 59, RULE_delete_statement = 60, 
		RULE_continue_statement = 61, RULE_compute_statement = 62, RULE_close_statement = 63, 
		RULE_close_params = 64, RULE_cancel_statement = 65, RULE_call_statement = 66, 
		RULE_call_giving = 67, RULE_call_using = 68, RULE_using_arg = 69, RULE_using_prefix = 70, 
		RULE_argument = 71, RULE_prog_name = 72, RULE_alter_statement = 73, RULE_alter_new_proc = 74, 
		RULE_alter_proc = 75, RULE_add_statement = 76, RULE_add_grp = 77, RULE_add_num = 78, 
		RULE_accept_statement = 79, RULE_on_exception_variants = 80, RULE_at_end_variants = 81, 
		RULE_on_size_variants = 82, RULE_on_key_variants = 83, RULE_accept_form6 = 84, 
		RULE_accept6_item = 85, RULE_accept_form1 = 86, RULE_accept_form2 = 87, 
		RULE_accept_form3 = 88, RULE_accept_form4 = 89, RULE_accept_form5 = 90, 
		RULE_accept_at = 91, RULE_accept_at_line = 92, RULE_accept_at_column = 93, 
		RULE_accept_form4_clause = 94, RULE_accept_form3_clause = 95, RULE_key_dest_item = 96, 
		RULE_def_value = 97, RULE_protected_value = 98, RULE_prot_fill_lit = 99, 
		RULE_prot_size_value = 100, RULE_number_value = 101, RULE_date_time = 102, 
		RULE_dest_item = 103, RULE_input_source = 104, RULE_at_end = 105, RULE_on_exception = 106, 
		RULE_on_size = 107, RULE_on_key = 108, RULE_data_division = 109, RULE_file_section = 110, 
		RULE_working_storage_section = 111, RULE_linkage_section = 112, RULE_report_section = 113, 
		RULE_screen_section = 114, RULE_file_description_entry = 115, RULE_sort_merge_file_description_entry = 116, 
		RULE_report_description_entry = 117, RULE_fd_clause = 118, RULE_record_description_entry = 119, 
		RULE_data_description_entry = 120, RULE_level_number = 121, RULE_data_description_clause = 122, 
		RULE_renames = 123, RULE_rename_start = 124, RULE_rename_end = 125, RULE_value_is = 126, 
		RULE_value_is_definition = 127, RULE_value_is_definition_part = 128, RULE_value_is_definition_thru = 129, 
		RULE_external_name = 130, RULE_ref_data_name = 131, RULE_value_is_literal = 132, 
		RULE_occurs = 133, RULE_indexed_by = 134, RULE_ind_name = 135, RULE_key_is = 136, 
		RULE_key_name = 137, RULE_times_definition = 138, RULE_table_size = 139, 
		RULE_min_times = 140, RULE_max_times = 141, RULE_report_group_description_entry = 142, 
		RULE_report_group_data_description = 143, RULE_report_group_data_description_clause = 144, 
		RULE_sign_is = 145, RULE_sum = 146, RULE_control_foot_name = 147, RULE_detail_report_group_name = 148, 
		RULE_sum_name = 149, RULE_source_name = 150, RULE_column_number = 151, 
		RULE_type_is_definition = 152, RULE_type_control_name = 153, RULE_next_group_definition = 154, 
		RULE_line_num_definition = 155, RULE_line_num = 156, RULE_rd_clause = 157, 
		RULE_footing_line_rd = 158, RULE_last_detail_line = 159, RULE_first_detail_line = 160, 
		RULE_heading_line = 161, RULE_page_size_rd = 162, RULE_control_name = 163, 
		RULE_report_code = 164, RULE_usage = 165, RULE_usage_definition = 166, 
		RULE_picture = 167, RULE_character_string = 168, RULE_char_str_part = 169, 
		RULE_other_data_item = 170, RULE_data_name = 171, RULE_sd_clause = 172, 
		RULE_report_is = 173, RULE_report_name = 174, RULE_linage = 175, RULE_bottom_lines = 176, 
		RULE_top_lines = 177, RULE_footing_line = 178, RULE_page_size = 179, RULE_data_rec = 180, 
		RULE_rec_name = 181, RULE_value_of_id = 182, RULE_value_of_id_definition = 183, 
		RULE_label = 184, RULE_record = 185, RULE_record_definition = 186, RULE_depending_item = 187, 
		RULE_shortest_rec = 188, RULE_longest_rec = 189, RULE_screen_description_entry = 190, 
		RULE_screen_name = 191, RULE_screen_description_clause = 192, RULE_scr_pic_using = 193, 
		RULE_scr_pic_from = 194, RULE_scr_pic_to = 195, RULE_nonnumeric_literal = 196, 
		RULE_src_number = 197, RULE_color_num = 198, RULE_identification_division = 199, 
		RULE_identification_division_paragraph = 200, RULE_program_id = 201, RULE_program_name = 202, 
		RULE_is_program = 203, RULE_with_ident = 204, RULE_ident_string = 205, 
		RULE_comment_entry = 206, RULE_author = 207, RULE_installation = 208, 
		RULE_date_written = 209, RULE_date_compiled = 210, RULE_security = 211, 
		RULE_options_ = 212, RULE_arithmetic = 213, RULE_environment_division = 214, 
		RULE_configuration_section = 215, RULE_input_output_section = 216, RULE_source_computer = 217, 
		RULE_computer_type = 218, RULE_with_debugging = 219, RULE_object_computer = 220, 
		RULE_memory_size = 221, RULE_memory_size_amount = 222, RULE_memory_size_unit = 223, 
		RULE_program_collating = 224, RULE_alpha_name = 225, RULE_segment_limit = 226, 
		RULE_segment_number = 227, RULE_special_names = 228, RULE_special_names_content = 229, 
		RULE_qualified_data_item = 230, RULE_currency = 231, RULE_currency_definition = 232, 
		RULE_literal_7 = 233, RULE_literal_8 = 234, RULE_class_ = 235, RULE_class_name = 236, 
		RULE_user_class = 237, RULE_symbolic_chars = 238, RULE_symb_ch_definition = 239, 
		RULE_symb_ch_def_clause = 240, RULE_symb_ch_def_in_alphabet = 241, RULE_symbol_char = 242, 
		RULE_char_val = 243, RULE_alphabet = 244, RULE_alpha_value = 245, RULE_user_alpha = 246, 
		RULE_first_literal = 247, RULE_last_literal = 248, RULE_same_literal = 249, 
		RULE_switch_ = 250, RULE_switch_clause_on = 251, RULE_switch_clause_off = 252, 
		RULE_cond_name = 253, RULE_switch_name = 254, RULE_switch_num = 255, RULE_top_of_page_name = 256, 
		RULE_predefined_device = 257, RULE_device_name = 258, RULE_arg_env = 259, 
		RULE_arg_env_name = 260, RULE_file_control = 261, RULE_select = 262, RULE_file_status = 263, 
		RULE_file_stat = 264, RULE_record_key = 265, RULE_record_key_definition = 266, 
		RULE_access_mode = 267, RULE_reserve = 268, RULE_reserve_num = 269, RULE_record_delimiter = 270, 
		RULE_padding = 271, RULE_pad_char = 272, RULE_organization = 273, RULE_lock_mode = 274, 
		RULE_lock_mode_definition = 275, RULE_code_set = 276, RULE_block_contains = 277, 
		RULE_smallest_block = 278, RULE_blocksize = 279, RULE_assign_to = 280, 
		RULE_assign_to_definition = 281, RULE_file_spec = 282, RULE_file_name = 283, 
		RULE_i_o_control = 284, RULE_multiple_file = 285, RULE_multiple_file_definition = 286, 
		RULE_multiple_file_name = 287, RULE_pos_integer = 288, RULE_rerun = 289, 
		RULE_rerun_definition = 290, RULE_clock_count = 291, RULE_condition_name = 292, 
		RULE_rerun_def_file = 293, RULE_rec_count = 294, RULE_same = 295, RULE_same_area_file = 296, 
		RULE_apply = 297, RULE_apply_definition = 298, RULE_window_ptrs = 299, 
		RULE_preall_amt = 300, RULE_extend_amt = 301, RULE_arithmetic_expression = 302, 
		RULE_constant = 303, RULE_binary_arithmetic_operator = 304, RULE_unary_arithmetic_operator = 305, 
		RULE_logic_expression = 306, RULE_success_failure_condition = 307, RULE_logic_condition = 308, 
		RULE_logic_operation = 309, RULE_sign_condition = 310, RULE_sign_condition_name = 311, 
		RULE_class_condition = 312, RULE_class_condition_name = 313, RULE_condition_operator = 314, 
		RULE_identifier_result = 315, RULE_identifier = 316, RULE_arguments = 317, 
		RULE_subscripting = 318, RULE_reference_modification = 319, RULE_leftmost_character_position = 320, 
		RULE_length = 321, RULE_function_name = 322;
	public static final String[] ruleNames = {
		"cobol_source", "figurative_constant_witout_zero", "figurative_constant", 
		"separator", "arithmetic_separator", "line_comment", "program", "procedure_division", 
		"end_program", "procedure_division_header", "section", "declaratives", 
		"declaratives_section", "declarative_paragraph", "paragraph", "sentense", 
		"use_statement", "group_data_name", "use_on", "section_header", "paragraph_name", 
		"section_name", "using", "giving", "procedure_test_line", "statement", 
		"initialize_statement", "replacing", "init_value", "fld_name", "move_statement", 
		"if_statement", "generate_statement", "report_item", "exit_statement", 
		"exit_program_statement", "go_to_statement", "proc_name", "evaluate_statement", 
		"when_condition", "subj_item", "divide_statement", "divide_statement_form1", 
		"divide_statement_form2", "remaind", "divide_num", "display_statement", 
		"display_statement_form1", "display_statement_form2", "display_statement_form3", 
		"display_statement_form4", "src_item", "display_upon", "disp_f3_line", 
		"disp_f3_column", "display_form1_clause", "display_form2_clause", "at_line_number", 
		"at_column_number", "out_dest", "delete_statement", "continue_statement", 
		"compute_statement", "close_statement", "close_params", "cancel_statement", 
		"call_statement", "call_giving", "call_using", "using_arg", "using_prefix", 
		"argument", "prog_name", "alter_statement", "alter_new_proc", "alter_proc", 
		"add_statement", "add_grp", "add_num", "accept_statement", "on_exception_variants", 
		"at_end_variants", "on_size_variants", "on_key_variants", "accept_form6", 
		"accept6_item", "accept_form1", "accept_form2", "accept_form3", "accept_form4", 
		"accept_form5", "accept_at", "accept_at_line", "accept_at_column", "accept_form4_clause", 
		"accept_form3_clause", "key_dest_item", "def_value", "protected_value", 
		"prot_fill_lit", "prot_size_value", "number_value", "date_time", "dest_item", 
		"input_source", "at_end", "on_exception", "on_size", "on_key", "data_division", 
		"file_section", "working_storage_section", "linkage_section", "report_section", 
		"screen_section", "file_description_entry", "sort_merge_file_description_entry", 
		"report_description_entry", "fd_clause", "record_description_entry", "data_description_entry", 
		"level_number", "data_description_clause", "renames", "rename_start", 
		"rename_end", "value_is", "value_is_definition", "value_is_definition_part", 
		"value_is_definition_thru", "external_name", "ref_data_name", "value_is_literal", 
		"occurs", "indexed_by", "ind_name", "key_is", "key_name", "times_definition", 
		"table_size", "min_times", "max_times", "report_group_description_entry", 
		"report_group_data_description", "report_group_data_description_clause", 
		"sign_is", "sum", "control_foot_name", "detail_report_group_name", "sum_name", 
		"source_name", "column_number", "type_is_definition", "type_control_name", 
		"next_group_definition", "line_num_definition", "line_num", "rd_clause", 
		"footing_line_rd", "last_detail_line", "first_detail_line", "heading_line", 
		"page_size_rd", "control_name", "report_code", "usage", "usage_definition", 
		"picture", "character_string", "char_str_part", "other_data_item", "data_name", 
		"sd_clause", "report_is", "report_name", "linage", "bottom_lines", "top_lines", 
		"footing_line", "page_size", "data_rec", "rec_name", "value_of_id", "value_of_id_definition", 
		"label", "record", "record_definition", "depending_item", "shortest_rec", 
		"longest_rec", "screen_description_entry", "screen_name", "screen_description_clause", 
		"scr_pic_using", "scr_pic_from", "scr_pic_to", "nonnumeric_literal", "src_number", 
		"color_num", "identification_division", "identification_division_paragraph", 
		"program_id", "program_name", "is_program", "with_ident", "ident_string", 
		"comment_entry", "author", "installation", "date_written", "date_compiled", 
		"security", "options_", "arithmetic", "environment_division", "configuration_section", 
		"input_output_section", "source_computer", "computer_type", "with_debugging", 
		"object_computer", "memory_size", "memory_size_amount", "memory_size_unit", 
		"program_collating", "alpha_name", "segment_limit", "segment_number", 
		"special_names", "special_names_content", "qualified_data_item", "currency", 
		"currency_definition", "literal_7", "literal_8", "class_", "class_name", 
		"user_class", "symbolic_chars", "symb_ch_definition", "symb_ch_def_clause", 
		"symb_ch_def_in_alphabet", "symbol_char", "char_val", "alphabet", "alpha_value", 
		"user_alpha", "first_literal", "last_literal", "same_literal", "switch_", 
		"switch_clause_on", "switch_clause_off", "cond_name", "switch_name", "switch_num", 
		"top_of_page_name", "predefined_device", "device_name", "arg_env", "arg_env_name", 
		"file_control", "select", "file_status", "file_stat", "record_key", "record_key_definition", 
		"access_mode", "reserve", "reserve_num", "record_delimiter", "padding", 
		"pad_char", "organization", "lock_mode", "lock_mode_definition", "code_set", 
		"block_contains", "smallest_block", "blocksize", "assign_to", "assign_to_definition", 
		"file_spec", "file_name", "i_o_control", "multiple_file", "multiple_file_definition", 
		"multiple_file_name", "pos_integer", "rerun", "rerun_definition", "clock_count", 
		"condition_name", "rerun_def_file", "rec_count", "same", "same_area_file", 
		"apply", "apply_definition", "window_ptrs", "preall_amt", "extend_amt", 
		"arithmetic_expression", "constant", "binary_arithmetic_operator", "unary_arithmetic_operator", 
		"logic_expression", "success_failure_condition", "logic_condition", "logic_operation", 
		"sign_condition", "sign_condition_name", "class_condition", "class_condition_name", 
		"condition_operator", "identifier_result", "identifier", "arguments", 
		"subscripting", "reference_modification", "leftmost_character_position", 
		"length", "function_name"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, "'!'", "'_'", "'+'", "'-'", null, null, "','", 
		"';'", "':'", "'='", "'<'", "'<='", "'>='", "'>'", "'('", "')'", "'['", 
		"']'", "'^'", "'@'", "'.'", "'{'", "'}'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "DECLARATIVES_IN_A_AREA", "END_IN_A_AREA", "IDENTIFICATION_IN_A_AREA", 
		"ACCEPT", "ACCESS", "ADD", "ADVANCING", "AFTER", "ALL", "ALPHA", "ALPHABET", 
		"ALPHABETIC", "ALPHABETIC_LOWER", "ALPHABETIC_UPPER", "ALSO", "ALTER", 
		"ALTERNATE", "AND", "APPLY", "ARE", "AREA", "AREAS", "ARGUMENT_NUMBER", 
		"ARGUMENT_VALUE", "ARITHMETIC", "ASCENDING", "ASCII", "ASSIGN", "AT", 
		"AUTHOR", "AUTO", "AUTOMATIC", "AUTOTERMINATE", "BACKGROUND_COLOR", "BEFORE", 
		"BELL", "BINARY", "BINARY_CHAR", "BINARY_DOUBLE", "BINARY_LONG", "BINARY_SHORT", 
		"BLANK", "BLINK", "BLINKING", "BLOCK", "BOLD", "BOTTOM", "BY", "C01", 
		"CALL", "CANCEL", "CARD_READER", "CF", "CH", "CHARACTER", "CHARACTERS", 
		"CLASS", "CLOCK_UNITS", "CLOSE", "CODE", "CODE_SET", "COLLATING", "COLUMN", 
		"COMMA", "COMMON", "COMP", "COMPUTATIONAL", "COMPUTATIONAL_1", "COMPUTATIONAL_2", 
		"COMPUTATIONAL_3", "COMPUTATIONAL_4", "COMPUTATIONAL_5", "COMPUTATIONAL_X", 
		"COMPUTE", "COMP_1", "COMP_2", "COMP_3", "COMP_4", "COMP_5", "COMP_X", 
		"CONFIGURATION", "CONSOLE", "CONTAINS", "CONTENT", "CONTIGUOUS", "CONTIGUOUS_BEST_TRY", 
		"CONTINUE", "CONTROL", "CONTROLS", "CONVERSION", "CONVERTING", "COPY", 
		"CORR", "CORRESPONDING", "CRT", "CURRENCY", "CURRENT", "CURSOR", "DATA", 
		"DATE", "DATE_COMPILED", "DATE_WRITTEN", "DAY", "DAY_OF_WEEK", "DE", "DEBUGGING", 
		"DECIMAL_POINT", "DECLARATIVES", "DEFAULT", "DEFERRED_WRITE", "DELETE", 
		"DELIMITER", "DEPENDING", "DESCENDING", "DESCRIPTOR", "DETAIL", "DISK", 
		"DISPLAY", "DIVIDE", "DIVISION", "DOWN", "DUPLICATES", "DYNAMIC", "EBCDIC", 
		"ECHO", "EDITING", "END", "END_ACCEPT", "END_ADD", "END_CALL", "END_COMPUTE", 
		"END_DELETE", "END_DISPLAY", "END_DIVIDE", "END_EVALUATE", "END_IF", "END_MULTIPLY", 
		"END_OF_PAGE", "END_PERFORM", "END_READ", "END_RETURN", "END_REWRITE", 
		"END_SEARCH", "END_START", "END_STRING", "END_SUBTRACT", "END_UNSTRING", 
		"END_WRITE", "ENVIRONMENT", "ENVIRONMENT_NAME", "ENVIRONMENT_VALUE", "EOL", 
		"EOS", "EQUAL", "ERASE", "ERROR", "EVALUATE", "EVERY", "EXCEPTION", "EXCLUSIVE", 
		"EXIT", "EXTEND", "EXTENSION", "EXTERNAL", "FAILURE", "FALSE", "FD", "FILE", 
		"FILE_CONTROL", "FILE_ID", "FILLER", "FILL_SIZE", "FINAL", "FIRST", "FLOAT_EXTENDED", 
		"FLOAT_LONG", "FLOAT_SHORT", "FOOTING", "FOR", "FOREGROUND_COLOR", "FROM", 
		"FULL", "FUNCTION", "GENERATE", "GIVING", "GLOBAL", "GO", "GREATER", "GROUP", 
		"HEADING", "HIGHLIGHT", "HIGH_VALUE", "HIGH_VALUES", "I64", "ID", "IDENT", 
		"IDENTIFICATION", "IF", "IN", "INDEX", "INDEXED", "INDICATE", "INITIAL", 
		"INITIALIZE", "INITIATE", "INPUT", "INPUT_OUTPUT", "INSPECT", "INSTALLATION", 
		"INTO", "INVALID", "IS", "I_O", "I_O_CONTROL", "JUST", "JUSTIFIED", "KEY", 
		"LABEL", "LAST", "LEADING", "LEFT", "LESS", "LIMIT", "LIMITS", "LINAGE", 
		"LINE", "LINES", "LINE_PRINTER", "LINKAGE", "LOCK", "LOCK_HOLDING", "LOWLIGHT", 
		"LOW_VALUE", "LOW_VALUES", "MANUAL", "MASS_INSERT", "MEMORY", "MERGE", 
		"MODE", "MODULES", "MOVE", "MULTIPLE", "MULTIPLY", "NATIVE", "NEGATIVE", 
		"NEXT", "NO", "NOT", "NUMBER", "NUMERIC", "OBJECT_COMPUTER", "OCCURS", 
		"OF", "OFF", "OMITTED", "ON", "OPEN", "OPTIONAL", "OPTIONS", "OR", "ORGANIZATION", 
		"OUTPUT", "OVERFLOW", "PACKED_DECIMAL", "PADDING", "PAGE", "PAPER_TAPE_PUNCH", 
		"PAPER_TAPE_READER", "PERFORM", "PF", "PH", "PIC", "PICTURE", "PLUS", 
		"POINTER", "POINTER_64", "POSITION", "POSITIVE", "PREALLOCATION", "PRINTER", 
		"PRINT_CONTROL", "PROCEDURE", "PROCEED", "PROGRAM", "PROGRAM_ID", "PROTECTED", 
		"QUOTE", "QUOTES", "RANDOM", "RD", "READ", "RECORD", "RECORDS", "REDEFINES", 
		"REEL", "REFERENCE", "RELATIVE", "RELEASE", "REMAINDER", "REMOVAL", "RENAMES", 
		"REPLACE", "REPLACING", "REPORT", "REPORTING", "REPORTS", "REQUIRED", 
		"RERUN", "RESERVE", "RESET", "RETURN", "REVERSED", "REVERSE_VIDEO", "REWIND", 
		"REWRITE", "RF", "RH", "RIGHT", "ROLLBACK", "ROUNDED", "SAME", "SCREEN", 
		"SD", "SEARCH", "SECTION", "SECURE", "SECURITY", "SEGMENT_LIMIT", "SELECT", 
		"SEPARATE", "SEQUENCE", "SEQUENTIAL", "SET", "SIGN", "SIGNED", "SIZE", 
		"SORT", "SORT_MERGE", "SOURCE", "SOURCE_COMPUTER", "SPACE", "SPACES", 
		"SPECIAL_NAMES", "STANDARD", "STANDARD_1", "STANDARD_2", "START", "STATUS", 
		"STOP", "STRING", "SUBTRACT", "SUCCESS", "SUM", "SUPPRESS", "SWITCH", 
		"SYMBOL", "SYMBOLIC", "SYNC", "SYNCHRONIZED", "SYSERR", "SYSIN", "SYSOUT", 
		"TALLYING", "TAPE", "TERMINATE", "THAN", "THROUGH", "THRU", "TIME", "TIMES", 
		"TO", "TOP", "TRAILING", "TRUE", "TYPE", "UNDERLINE", "UNDERLINED", "UNIT", 
		"UNLOCK", "UNSIGNED", "UNSTRING", "UP", "UPON", "USAGE", "USE", "USING", 
		"VALUE", "VALUES", "VARYING", "VAX", "WHEN", "WINDOW", "WITH", "WORDS", 
		"WORKING_STORAGE", "WRITE", "YYYYDDD", "YYYYMMDD", "ZERO", "ZEROES", "ZEROS", 
		"OTHER", "ANY", "THEN", "SENTENCE", "ELSE", "ALPHANUMERIC", "NUMERIC_EDITED", 
		"ALPHANUMERIC_EDITED", "START_SLASH_", "START_STAR_", "EXCLAM_", "UNDER_", 
		"PLUS_", "MINUS_", "STAR_", "SLASH_", "COMMA_", "SEMI_", "COLON_", "EQUAL_", 
		"LT_", "LE_", "GE_", "GT_", "LPAREN_", "RPAREN_", "LBRACK_", "RBRACK_", 
		"POINTER_", "ATP_", "DOT_", "LCURLY_", "RCURLY_", "STRING_LITERAL", "NUMERIC_LITERAL", 
		"HEX_LITERAL", "USER_DEFINED_WORD", "START_FOUR_SPACES", "WHITESPACE", 
		"NEWLINE"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	@Override
	public String getGrammarFileName() { return "cobol.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public ATN getATN() { return _ATN; }

	public cobolParser(TokenStream input) {
		super(input);
		_interp = new ParserATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}
	public static class Cobol_sourceContext extends ParserRuleContext {
		public TerminalNode EOF() { return getToken(cobolParser.EOF, 0); }
		public List<ProgramContext> program() {
			return getRuleContexts(ProgramContext.class);
		}
		public ProgramContext program(int i) {
			return getRuleContext(ProgramContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Cobol_sourceContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_cobol_source; }
	}

	public final Cobol_sourceContext cobol_source() throws RecognitionException {
		Cobol_sourceContext _localctx = new Cobol_sourceContext(_ctx, getState());
		enterRule(_localctx, 0, RULE_cobol_source);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(650);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==IDENTIFICATION_IN_A_AREA || ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				setState(648);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case IDENTIFICATION_IN_A_AREA:
					{
					setState(646);
					program();
					}
					break;
				case START_SLASH_:
				case START_STAR_:
				case COMMA_:
				case SEMI_:
				case START_FOUR_SPACES:
				case WHITESPACE:
				case NEWLINE:
					{
					setState(647);
					separator();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				setState(652);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(653);
			match(EOF);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Figurative_constant_witout_zeroContext extends ParserRuleContext {
		public TerminalNode SPACE() { return getToken(cobolParser.SPACE, 0); }
		public TerminalNode SPACES() { return getToken(cobolParser.SPACES, 0); }
		public TerminalNode HIGH_VALUE() { return getToken(cobolParser.HIGH_VALUE, 0); }
		public TerminalNode HIGH_VALUES() { return getToken(cobolParser.HIGH_VALUES, 0); }
		public TerminalNode LOW_VALUE() { return getToken(cobolParser.LOW_VALUE, 0); }
		public TerminalNode LOW_VALUES() { return getToken(cobolParser.LOW_VALUES, 0); }
		public TerminalNode QUOTE() { return getToken(cobolParser.QUOTE, 0); }
		public TerminalNode QUOTES() { return getToken(cobolParser.QUOTES, 0); }
		public TerminalNode ALL() { return getToken(cobolParser.ALL, 0); }
		public TerminalNode WHITESPACE() { return getToken(cobolParser.WHITESPACE, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Figurative_constant_witout_zeroContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_figurative_constant_witout_zero; }
	}

	public final Figurative_constant_witout_zeroContext figurative_constant_witout_zero() throws RecognitionException {
		Figurative_constant_witout_zeroContext _localctx = new Figurative_constant_witout_zeroContext(_ctx, getState());
		enterRule(_localctx, 2, RULE_figurative_constant_witout_zero);
		try {
			setState(666);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case SPACE:
				enterOuterAlt(_localctx, 1);
				{
				setState(655);
				match(SPACE);
				}
				break;
			case SPACES:
				enterOuterAlt(_localctx, 2);
				{
				setState(656);
				match(SPACES);
				}
				break;
			case HIGH_VALUE:
				enterOuterAlt(_localctx, 3);
				{
				setState(657);
				match(HIGH_VALUE);
				}
				break;
			case HIGH_VALUES:
				enterOuterAlt(_localctx, 4);
				{
				setState(658);
				match(HIGH_VALUES);
				}
				break;
			case LOW_VALUE:
				enterOuterAlt(_localctx, 5);
				{
				setState(659);
				match(LOW_VALUE);
				}
				break;
			case LOW_VALUES:
				enterOuterAlt(_localctx, 6);
				{
				setState(660);
				match(LOW_VALUES);
				}
				break;
			case QUOTE:
				enterOuterAlt(_localctx, 7);
				{
				setState(661);
				match(QUOTE);
				}
				break;
			case QUOTES:
				enterOuterAlt(_localctx, 8);
				{
				setState(662);
				match(QUOTES);
				}
				break;
			case ALL:
				enterOuterAlt(_localctx, 9);
				{
				setState(663);
				match(ALL);
				setState(664);
				match(WHITESPACE);
				setState(665);
				match(STRING_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Figurative_constantContext extends ParserRuleContext {
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public Figurative_constant_witout_zeroContext figurative_constant_witout_zero() {
			return getRuleContext(Figurative_constant_witout_zeroContext.class,0);
		}
		public Figurative_constantContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_figurative_constant; }
	}

	public final Figurative_constantContext figurative_constant() throws RecognitionException {
		Figurative_constantContext _localctx = new Figurative_constantContext(_ctx, getState());
		enterRule(_localctx, 4, RULE_figurative_constant);
		try {
			setState(670);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ZERO:
				enterOuterAlt(_localctx, 1);
				{
				setState(668);
				match(ZERO);
				}
				break;
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
				enterOuterAlt(_localctx, 2);
				{
				setState(669);
				figurative_constant_witout_zero();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SeparatorContext extends ParserRuleContext {
		public TerminalNode WHITESPACE() { return getToken(cobolParser.WHITESPACE, 0); }
		public TerminalNode NEWLINE() { return getToken(cobolParser.NEWLINE, 0); }
		public TerminalNode START_FOUR_SPACES() { return getToken(cobolParser.START_FOUR_SPACES, 0); }
		public TerminalNode COMMA_() { return getToken(cobolParser.COMMA_, 0); }
		public TerminalNode SEMI_() { return getToken(cobolParser.SEMI_, 0); }
		public Line_commentContext line_comment() {
			return getRuleContext(Line_commentContext.class,0);
		}
		public SeparatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_separator; }
	}

	public final SeparatorContext separator() throws RecognitionException {
		SeparatorContext _localctx = new SeparatorContext(_ctx, getState());
		enterRule(_localctx, 6, RULE_separator);
		try {
			setState(678);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case WHITESPACE:
				enterOuterAlt(_localctx, 1);
				{
				setState(672);
				match(WHITESPACE);
				}
				break;
			case NEWLINE:
				enterOuterAlt(_localctx, 2);
				{
				setState(673);
				match(NEWLINE);
				}
				break;
			case START_FOUR_SPACES:
				enterOuterAlt(_localctx, 3);
				{
				setState(674);
				match(START_FOUR_SPACES);
				}
				break;
			case COMMA_:
				enterOuterAlt(_localctx, 4);
				{
				setState(675);
				match(COMMA_);
				}
				break;
			case SEMI_:
				enterOuterAlt(_localctx, 5);
				{
				setState(676);
				match(SEMI_);
				}
				break;
			case START_SLASH_:
			case START_STAR_:
				enterOuterAlt(_localctx, 6);
				{
				setState(677);
				line_comment();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arithmetic_separatorContext extends ParserRuleContext {
		public TerminalNode WHITESPACE() { return getToken(cobolParser.WHITESPACE, 0); }
		public TerminalNode NEWLINE() { return getToken(cobolParser.NEWLINE, 0); }
		public TerminalNode START_FOUR_SPACES() { return getToken(cobolParser.START_FOUR_SPACES, 0); }
		public Line_commentContext line_comment() {
			return getRuleContext(Line_commentContext.class,0);
		}
		public Arithmetic_separatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arithmetic_separator; }
	}

	public final Arithmetic_separatorContext arithmetic_separator() throws RecognitionException {
		Arithmetic_separatorContext _localctx = new Arithmetic_separatorContext(_ctx, getState());
		enterRule(_localctx, 8, RULE_arithmetic_separator);
		try {
			setState(684);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case WHITESPACE:
				enterOuterAlt(_localctx, 1);
				{
				setState(680);
				match(WHITESPACE);
				}
				break;
			case NEWLINE:
				enterOuterAlt(_localctx, 2);
				{
				setState(681);
				match(NEWLINE);
				}
				break;
			case START_FOUR_SPACES:
				enterOuterAlt(_localctx, 3);
				{
				setState(682);
				match(START_FOUR_SPACES);
				}
				break;
			case START_SLASH_:
			case START_STAR_:
				enterOuterAlt(_localctx, 4);
				{
				setState(683);
				line_comment();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Line_commentContext extends ParserRuleContext {
		public TerminalNode START_SLASH_() { return getToken(cobolParser.START_SLASH_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public TerminalNode START_STAR_() { return getToken(cobolParser.START_STAR_, 0); }
		public Line_commentContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_line_comment; }
	}

	public final Line_commentContext line_comment() throws RecognitionException {
		Line_commentContext _localctx = new Line_commentContext(_ctx, getState());
		enterRule(_localctx, 10, RULE_line_comment);
		int _la;
		try {
			setState(702);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case START_SLASH_:
				enterOuterAlt(_localctx, 1);
				{
				setState(686);
				match(START_SLASH_);
				setState(690);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
					{
					{
					setState(687);
					_la = _input.LA(1);
					if ( _la <= 0 || (_la==NEWLINE) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					}
					setState(692);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(693);
				match(NEWLINE);
				}
				break;
			case START_STAR_:
				enterOuterAlt(_localctx, 2);
				{
				setState(694);
				match(START_STAR_);
				setState(698);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
					{
					{
					setState(695);
					_la = _input.LA(1);
					if ( _la <= 0 || (_la==NEWLINE) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					}
					setState(700);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(701);
				match(NEWLINE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ProgramContext extends ParserRuleContext {
		public Identification_divisionContext identification_division() {
			return getRuleContext(Identification_divisionContext.class,0);
		}
		public Environment_divisionContext environment_division() {
			return getRuleContext(Environment_divisionContext.class,0);
		}
		public Data_divisionContext data_division() {
			return getRuleContext(Data_divisionContext.class,0);
		}
		public Procedure_divisionContext procedure_division() {
			return getRuleContext(Procedure_divisionContext.class,0);
		}
		public ProgramContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program; }
	}

	public final ProgramContext program() throws RecognitionException {
		ProgramContext _localctx = new ProgramContext(_ctx, getState());
		enterRule(_localctx, 12, RULE_program);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(704);
			identification_division();
			setState(706);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ENVIRONMENT) {
				{
				setState(705);
				environment_division();
				}
			}

			setState(709);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==DATA) {
				{
				setState(708);
				data_division();
				}
			}

			setState(712);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==PROCEDURE) {
				{
				setState(711);
				procedure_division();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Procedure_divisionContext extends ParserRuleContext {
		public Procedure_division_headerContext procedure_division_header() {
			return getRuleContext(Procedure_division_headerContext.class,0);
		}
		public DeclarativesContext declaratives() {
			return getRuleContext(DeclarativesContext.class,0);
		}
		public End_programContext end_program() {
			return getRuleContext(End_programContext.class,0);
		}
		public List<Procedure_test_lineContext> procedure_test_line() {
			return getRuleContexts(Procedure_test_lineContext.class);
		}
		public Procedure_test_lineContext procedure_test_line(int i) {
			return getRuleContext(Procedure_test_lineContext.class,i);
		}
		public List<SectionContext> section() {
			return getRuleContexts(SectionContext.class);
		}
		public SectionContext section(int i) {
			return getRuleContext(SectionContext.class,i);
		}
		public List<ParagraphContext> paragraph() {
			return getRuleContexts(ParagraphContext.class);
		}
		public ParagraphContext paragraph(int i) {
			return getRuleContext(ParagraphContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Procedure_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_procedure_division; }
	}

	public final Procedure_divisionContext procedure_division() throws RecognitionException {
		Procedure_divisionContext _localctx = new Procedure_divisionContext(_ctx, getState());
		enterRule(_localctx, 14, RULE_procedure_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(714);
			procedure_division_header();
			setState(716);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==DECLARATIVES_IN_A_AREA) {
				{
				setState(715);
				declaratives();
				}
			}

			setState(742);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,17,_ctx) ) {
			case 1:
				{
				setState(727);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,14,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(718);
						section();
						setState(722);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,13,_ctx);
						while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
							if ( _alt==1 ) {
								{
								{
								setState(719);
								separator();
								}
								} 
							}
							setState(724);
							_errHandler.sync(this);
							_alt = getInterpreter().adaptivePredict(_input,13,_ctx);
						}
						}
						} 
					}
					setState(729);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,14,_ctx);
				}
				}
				break;
			case 2:
				{
				setState(739);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,16,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(730);
						paragraph();
						setState(734);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,15,_ctx);
						while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
							if ( _alt==1 ) {
								{
								{
								setState(731);
								separator();
								}
								} 
							}
							setState(736);
							_errHandler.sync(this);
							_alt = getInterpreter().adaptivePredict(_input,15,_ctx);
						}
						}
						} 
					}
					setState(741);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,16,_ctx);
				}
				}
				break;
			}
			setState(751);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,19,_ctx) ) {
			case 1:
				{
				setState(747);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(744);
					separator();
					}
					}
					setState(749);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(750);
				end_program();
				}
				break;
			}
			setState(768);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,22,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(756);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,20,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(753);
							separator();
							}
							} 
						}
						setState(758);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,20,_ctx);
					}
					setState(759);
					procedure_test_line();
					setState(763);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,21,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(760);
							separator();
							}
							} 
						}
						setState(765);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,21,_ctx);
					}
					}
					} 
				}
				setState(770);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,22,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class End_programContext extends ParserRuleContext {
		public TerminalNode END_IN_A_AREA() { return getToken(cobolParser.END_IN_A_AREA, 0); }
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Program_nameContext program_name() {
			return getRuleContext(Program_nameContext.class,0);
		}
		public End_programContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_end_program; }
	}

	public final End_programContext end_program() throws RecognitionException {
		End_programContext _localctx = new End_programContext(_ctx, getState());
		enterRule(_localctx, 16, RULE_end_program);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(771);
			match(END_IN_A_AREA);
			setState(773); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(772);
				separator();
				}
				}
				setState(775); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(777);
			match(PROGRAM);
			setState(785);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,25,_ctx) ) {
			case 1:
				{
				setState(779); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(778);
					separator();
					}
					}
					setState(781); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(783);
				program_name();
				}
				break;
			}
			setState(790);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(787);
				separator();
				}
				}
				setState(792);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(793);
			match(DOT_);
			setState(797);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,27,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(794);
					separator();
					}
					} 
				}
				setState(799);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,27,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Procedure_division_headerContext extends ParserRuleContext {
		public TerminalNode PROCEDURE() { return getToken(cobolParser.PROCEDURE, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public UsingContext using() {
			return getRuleContext(UsingContext.class,0);
		}
		public GivingContext giving() {
			return getRuleContext(GivingContext.class,0);
		}
		public Procedure_division_headerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_procedure_division_header; }
	}

	public final Procedure_division_headerContext procedure_division_header() throws RecognitionException {
		Procedure_division_headerContext _localctx = new Procedure_division_headerContext(_ctx, getState());
		enterRule(_localctx, 18, RULE_procedure_division_header);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(800);
			match(PROCEDURE);
			setState(802); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(801);
				separator();
				}
				}
				setState(804); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(806);
			match(DIVISION);
			setState(814);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,30,_ctx) ) {
			case 1:
				{
				setState(808); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(807);
					separator();
					}
					}
					setState(810); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(812);
				using();
				}
				break;
			}
			setState(823);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,32,_ctx) ) {
			case 1:
				{
				setState(817); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(816);
					separator();
					}
					}
					setState(819); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(821);
				giving();
				}
				break;
			}
			setState(828);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(825);
				separator();
				}
				}
				setState(830);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(831);
			match(DOT_);
			setState(835);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,34,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(832);
					separator();
					}
					} 
				}
				setState(837);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,34,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SectionContext extends ParserRuleContext {
		public Section_headerContext section_header() {
			return getRuleContext(Section_headerContext.class,0);
		}
		public SectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_section; }
	}

	public final SectionContext section() throws RecognitionException {
		SectionContext _localctx = new SectionContext(_ctx, getState());
		enterRule(_localctx, 20, RULE_section);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(838);
			section_header();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class DeclarativesContext extends ParserRuleContext {
		public TerminalNode DECLARATIVES_IN_A_AREA() { return getToken(cobolParser.DECLARATIVES_IN_A_AREA, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public TerminalNode END_IN_A_AREA() { return getToken(cobolParser.END_IN_A_AREA, 0); }
		public TerminalNode DECLARATIVES() { return getToken(cobolParser.DECLARATIVES, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Declaratives_sectionContext> declaratives_section() {
			return getRuleContexts(Declaratives_sectionContext.class);
		}
		public Declaratives_sectionContext declaratives_section(int i) {
			return getRuleContext(Declaratives_sectionContext.class,i);
		}
		public DeclarativesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_declaratives; }
	}

	public final DeclarativesContext declaratives() throws RecognitionException {
		DeclarativesContext _localctx = new DeclarativesContext(_ctx, getState());
		enterRule(_localctx, 22, RULE_declaratives);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(840);
			match(DECLARATIVES_IN_A_AREA);
			setState(844);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(841);
				separator();
				}
				}
				setState(846);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(847);
			match(DOT_);
			setState(851);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(848);
				separator();
				}
				}
				setState(853);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(861); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(854);
				declaratives_section();
				setState(858);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(855);
					separator();
					}
					}
					setState(860);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(863); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			setState(865);
			match(END_IN_A_AREA);
			setState(867); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(866);
				separator();
				}
				}
				setState(869); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(871);
			match(DECLARATIVES);
			setState(875);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(872);
				separator();
				}
				}
				setState(877);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(878);
			match(DOT_);
			setState(882);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,41,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(879);
					separator();
					}
					} 
				}
				setState(884);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,41,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Declaratives_sectionContext extends ParserRuleContext {
		public Section_headerContext section_header() {
			return getRuleContext(Section_headerContext.class,0);
		}
		public Use_statementContext use_statement() {
			return getRuleContext(Use_statementContext.class,0);
		}
		public List<Declarative_paragraphContext> declarative_paragraph() {
			return getRuleContexts(Declarative_paragraphContext.class);
		}
		public Declarative_paragraphContext declarative_paragraph(int i) {
			return getRuleContext(Declarative_paragraphContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Declaratives_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_declaratives_section; }
	}

	public final Declaratives_sectionContext declaratives_section() throws RecognitionException {
		Declaratives_sectionContext _localctx = new Declaratives_sectionContext(_ctx, getState());
		enterRule(_localctx, 24, RULE_declaratives_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(885);
			section_header();
			setState(886);
			use_statement();
			setState(896);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,43,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(888); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(887);
						separator();
						}
						}
						setState(890); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(892);
					declarative_paragraph();
					}
					} 
				}
				setState(898);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,43,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Declarative_paragraphContext extends ParserRuleContext {
		public ParagraphContext paragraph() {
			return getRuleContext(ParagraphContext.class,0);
		}
		public Declarative_paragraphContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_declarative_paragraph; }
	}

	public final Declarative_paragraphContext declarative_paragraph() throws RecognitionException {
		Declarative_paragraphContext _localctx = new Declarative_paragraphContext(_ctx, getState());
		enterRule(_localctx, 26, RULE_declarative_paragraph);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(899);
			paragraph();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ParagraphContext extends ParserRuleContext {
		public Paragraph_nameContext paragraph_name() {
			return getRuleContext(Paragraph_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<SentenseContext> sentense() {
			return getRuleContexts(SentenseContext.class);
		}
		public SentenseContext sentense(int i) {
			return getRuleContext(SentenseContext.class,i);
		}
		public ParagraphContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_paragraph; }
	}

	public final ParagraphContext paragraph() throws RecognitionException {
		ParagraphContext _localctx = new ParagraphContext(_ctx, getState());
		enterRule(_localctx, 28, RULE_paragraph);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(901);
			paragraph_name();
			setState(905);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(902);
				separator();
				}
				}
				setState(907);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(908);
			match(DOT_);
			setState(912);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,45,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(909);
					separator();
					}
					} 
				}
				setState(914);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,45,_ctx);
			}
			setState(924);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCEPT) | (1L << ADD) | (1L << ALTER) | (1L << CALL) | (1L << CANCEL) | (1L << CLOSE))) != 0) || ((((_la - 74)) & ~0x3f) == 0 && ((1L << (_la - 74)) & ((1L << (COMPUTE - 74)) | (1L << (CONTINUE - 74)) | (1L << (DELETE - 74)) | (1L << (DISPLAY - 74)) | (1L << (DIVIDE - 74)))) != 0) || ((((_la - 157)) & ~0x3f) == 0 && ((1L << (_la - 157)) & ((1L << (EVALUATE - 157)) | (1L << (EXIT - 157)) | (1L << (GENERATE - 157)) | (1L << (GO - 157)) | (1L << (IF - 157)) | (1L << (INITIALIZE - 157)))) != 0) || _la==MOVE) {
				{
				{
				setState(915);
				sentense();
				setState(919);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,46,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(916);
						separator();
						}
						} 
					}
					setState(921);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,46,_ctx);
				}
				}
				}
				setState(926);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SentenseContext extends ParserRuleContext {
		public List<StatementContext> statement() {
			return getRuleContexts(StatementContext.class);
		}
		public StatementContext statement(int i) {
			return getRuleContext(StatementContext.class,i);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public SentenseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sentense; }
	}

	public final SentenseContext sentense() throws RecognitionException {
		SentenseContext _localctx = new SentenseContext(_ctx, getState());
		enterRule(_localctx, 30, RULE_sentense);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(934); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(927);
					statement();
					setState(931);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,48,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(928);
							separator();
							}
							} 
						}
						setState(933);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,48,_ctx);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(936); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,49,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(951);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,52,_ctx) ) {
			case 1:
				{
				setState(941);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(938);
					separator();
					}
					}
					setState(943);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(944);
				match(DOT_);
				setState(948);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,51,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(945);
						separator();
						}
						} 
					}
					setState(950);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,51,_ctx);
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Use_statementContext extends ParserRuleContext {
		public TerminalNode USE() { return getToken(cobolParser.USE, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public TerminalNode AFTER() { return getToken(cobolParser.AFTER, 0); }
		public TerminalNode PROCEDURE() { return getToken(cobolParser.PROCEDURE, 0); }
		public Use_onContext use_on() {
			return getRuleContext(Use_onContext.class,0);
		}
		public TerminalNode BEFORE() { return getToken(cobolParser.BEFORE, 0); }
		public TerminalNode REPORTING() { return getToken(cobolParser.REPORTING, 0); }
		public Group_data_nameContext group_data_name() {
			return getRuleContext(Group_data_nameContext.class,0);
		}
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode EXCEPTION() { return getToken(cobolParser.EXCEPTION, 0); }
		public TerminalNode ERROR() { return getToken(cobolParser.ERROR, 0); }
		public TerminalNode STANDARD() { return getToken(cobolParser.STANDARD, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Use_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_use_statement; }
	}

	public final Use_statementContext use_statement() throws RecognitionException {
		Use_statementContext _localctx = new Use_statementContext(_ctx, getState());
		enterRule(_localctx, 32, RULE_use_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(953);
			match(USE);
			setState(961);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,54,_ctx) ) {
			case 1:
				{
				setState(955); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(954);
					separator();
					}
					}
					setState(957); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(959);
				match(GLOBAL);
				}
				break;
			}
			setState(964); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(963);
				separator();
				}
				}
				setState(966); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1032);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case AFTER:
				{
				setState(968);
				match(AFTER);
				setState(976);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,57,_ctx) ) {
				case 1:
					{
					setState(970); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(969);
						separator();
						}
						}
						setState(972); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(974);
					match(STANDARD);
					}
					break;
				}
				setState(979); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(978);
					separator();
					}
					}
					setState(981); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(983);
				_la = _input.LA(1);
				if ( !(_la==ERROR || _la==EXCEPTION) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(985); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(984);
					separator();
					}
					}
					setState(987); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(989);
				match(PROCEDURE);
				setState(997);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,61,_ctx) ) {
				case 1:
					{
					setState(991); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(990);
						separator();
						}
						}
						setState(993); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(995);
					match(ON);
					}
					break;
				}
				setState(1000); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(999);
					separator();
					}
					}
					setState(1002); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1004);
				use_on();
				setState(1008);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(1005);
					separator();
					}
					}
					setState(1010);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(1011);
				match(DOT_);
				setState(1015);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,64,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1012);
						separator();
						}
						} 
					}
					setState(1017);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,64,_ctx);
				}
				}
				break;
			case BEFORE:
				{
				setState(1018);
				match(BEFORE);
				setState(1020); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1019);
					separator();
					}
					}
					setState(1022); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1024);
				match(REPORTING);
				setState(1026); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1025);
					separator();
					}
					}
					setState(1028); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1030);
				group_data_name();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(1037);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(1034);
				separator();
				}
				}
				setState(1039);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1040);
			match(DOT_);
			setState(1044);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,69,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1041);
					separator();
					}
					} 
				}
				setState(1046);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,69,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Group_data_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Group_data_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_group_data_name; }
	}

	public final Group_data_nameContext group_data_name() throws RecognitionException {
		Group_data_nameContext _localctx = new Group_data_nameContext(_ctx, getState());
		enterRule(_localctx, 34, RULE_group_data_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1047);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Use_onContext extends ParserRuleContext {
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode INPUT() { return getToken(cobolParser.INPUT, 0); }
		public TerminalNode OUTPUT() { return getToken(cobolParser.OUTPUT, 0); }
		public TerminalNode I_O() { return getToken(cobolParser.I_O, 0); }
		public TerminalNode EXTEND() { return getToken(cobolParser.EXTEND, 0); }
		public Use_onContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_use_on; }
	}

	public final Use_onContext use_on() throws RecognitionException {
		Use_onContext _localctx = new Use_onContext(_ctx, getState());
		enterRule(_localctx, 36, RULE_use_on);
		int _la;
		try {
			int _alt;
			setState(1066);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(1049);
				file_name();
				setState(1059);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,71,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1051); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1050);
							separator();
							}
							}
							setState(1053); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(1055);
						file_name();
						}
						} 
					}
					setState(1061);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,71,_ctx);
				}
				}
				break;
			case INPUT:
				enterOuterAlt(_localctx, 2);
				{
				setState(1062);
				match(INPUT);
				}
				break;
			case OUTPUT:
				enterOuterAlt(_localctx, 3);
				{
				setState(1063);
				match(OUTPUT);
				}
				break;
			case I_O:
				enterOuterAlt(_localctx, 4);
				{
				setState(1064);
				match(I_O);
				}
				break;
			case EXTEND:
				enterOuterAlt(_localctx, 5);
				{
				setState(1065);
				match(EXTEND);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Section_headerContext extends ParserRuleContext {
		public Section_nameContext section_name() {
			return getRuleContext(Section_nameContext.class,0);
		}
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Segment_numberContext segment_number() {
			return getRuleContext(Segment_numberContext.class,0);
		}
		public Section_headerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_section_header; }
	}

	public final Section_headerContext section_header() throws RecognitionException {
		Section_headerContext _localctx = new Section_headerContext(_ctx, getState());
		enterRule(_localctx, 38, RULE_section_header);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1068);
			section_name();
			setState(1070); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1069);
				separator();
				}
				}
				setState(1072); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1074);
			match(SECTION);
			setState(1082);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,75,_ctx) ) {
			case 1:
				{
				setState(1076); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1075);
					separator();
					}
					}
					setState(1078); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1080);
				segment_number();
				}
				break;
			}
			setState(1087);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(1084);
				separator();
				}
				}
				setState(1089);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1090);
			match(DOT_);
			setState(1094);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,77,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1091);
					separator();
					}
					} 
				}
				setState(1096);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,77,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Paragraph_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Paragraph_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_paragraph_name; }
	}

	public final Paragraph_nameContext paragraph_name() throws RecognitionException {
		Paragraph_nameContext _localctx = new Paragraph_nameContext(_ctx, getState());
		enterRule(_localctx, 40, RULE_paragraph_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1097);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Section_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Section_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_section_name; }
	}

	public final Section_nameContext section_name() throws RecognitionException {
		Section_nameContext _localctx = new Section_nameContext(_ctx, getState());
		enterRule(_localctx, 42, RULE_section_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1099);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class UsingContext extends ParserRuleContext {
		public TerminalNode USING() { return getToken(cobolParser.USING, 0); }
		public List<Qualified_data_itemContext> qualified_data_item() {
			return getRuleContexts(Qualified_data_itemContext.class);
		}
		public Qualified_data_itemContext qualified_data_item(int i) {
			return getRuleContext(Qualified_data_itemContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public UsingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_using; }
	}

	public final UsingContext using() throws RecognitionException {
		UsingContext _localctx = new UsingContext(_ctx, getState());
		enterRule(_localctx, 44, RULE_using);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1101);
			match(USING);
			setState(1103); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1102);
				separator();
				}
				}
				setState(1105); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1107);
			qualified_data_item();
			setState(1117);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,80,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1109); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1108);
						separator();
						}
						}
						setState(1111); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1113);
					qualified_data_item();
					}
					} 
				}
				setState(1119);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,80,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class GivingContext extends ParserRuleContext {
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public GivingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_giving; }
	}

	public final GivingContext giving() throws RecognitionException {
		GivingContext _localctx = new GivingContext(_ctx, getState());
		enterRule(_localctx, 46, RULE_giving);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1120);
			match(GIVING);
			setState(1122); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1121);
				separator();
				}
				}
				setState(1124); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1126);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Procedure_test_lineContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Logic_expressionContext logic_expression() {
			return getRuleContext(Logic_expressionContext.class,0);
		}
		public Procedure_test_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_procedure_test_line; }
	}

	public final Procedure_test_lineContext procedure_test_line() throws RecognitionException {
		Procedure_test_lineContext _localctx = new Procedure_test_lineContext(_ctx, getState());
		enterRule(_localctx, 48, RULE_procedure_test_line);
		int _la;
		try {
			setState(1147);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,84,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1128);
				arithmetic_expression(0);
				setState(1132);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(1129);
					separator();
					}
					}
					setState(1134);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(1135);
				match(DOT_);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1137);
				logic_expression(0);
				setState(1141);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(1138);
					separator();
					}
					}
					setState(1143);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(1144);
				match(DOT_);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1146);
				separator();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class StatementContext extends ParserRuleContext {
		public Accept_statementContext accept_statement() {
			return getRuleContext(Accept_statementContext.class,0);
		}
		public Add_statementContext add_statement() {
			return getRuleContext(Add_statementContext.class,0);
		}
		public Alter_statementContext alter_statement() {
			return getRuleContext(Alter_statementContext.class,0);
		}
		public Call_statementContext call_statement() {
			return getRuleContext(Call_statementContext.class,0);
		}
		public Cancel_statementContext cancel_statement() {
			return getRuleContext(Cancel_statementContext.class,0);
		}
		public Close_statementContext close_statement() {
			return getRuleContext(Close_statementContext.class,0);
		}
		public Compute_statementContext compute_statement() {
			return getRuleContext(Compute_statementContext.class,0);
		}
		public Continue_statementContext continue_statement() {
			return getRuleContext(Continue_statementContext.class,0);
		}
		public Delete_statementContext delete_statement() {
			return getRuleContext(Delete_statementContext.class,0);
		}
		public Display_statementContext display_statement() {
			return getRuleContext(Display_statementContext.class,0);
		}
		public Divide_statementContext divide_statement() {
			return getRuleContext(Divide_statementContext.class,0);
		}
		public Evaluate_statementContext evaluate_statement() {
			return getRuleContext(Evaluate_statementContext.class,0);
		}
		public Go_to_statementContext go_to_statement() {
			return getRuleContext(Go_to_statementContext.class,0);
		}
		public Exit_statementContext exit_statement() {
			return getRuleContext(Exit_statementContext.class,0);
		}
		public Exit_program_statementContext exit_program_statement() {
			return getRuleContext(Exit_program_statementContext.class,0);
		}
		public Generate_statementContext generate_statement() {
			return getRuleContext(Generate_statementContext.class,0);
		}
		public If_statementContext if_statement() {
			return getRuleContext(If_statementContext.class,0);
		}
		public Move_statementContext move_statement() {
			return getRuleContext(Move_statementContext.class,0);
		}
		public Initialize_statementContext initialize_statement() {
			return getRuleContext(Initialize_statementContext.class,0);
		}
		public StatementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_statement; }
	}

	public final StatementContext statement() throws RecognitionException {
		StatementContext _localctx = new StatementContext(_ctx, getState());
		enterRule(_localctx, 50, RULE_statement);
		try {
			setState(1168);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,85,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1149);
				accept_statement();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1150);
				add_statement();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1151);
				alter_statement();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(1152);
				call_statement();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(1153);
				cancel_statement();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(1154);
				close_statement();
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(1155);
				compute_statement();
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(1156);
				continue_statement();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(1157);
				delete_statement();
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(1158);
				display_statement();
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(1159);
				divide_statement();
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(1160);
				evaluate_statement();
				}
				break;
			case 13:
				enterOuterAlt(_localctx, 13);
				{
				setState(1161);
				go_to_statement();
				}
				break;
			case 14:
				enterOuterAlt(_localctx, 14);
				{
				setState(1162);
				exit_statement();
				}
				break;
			case 15:
				enterOuterAlt(_localctx, 15);
				{
				setState(1163);
				exit_program_statement();
				}
				break;
			case 16:
				enterOuterAlt(_localctx, 16);
				{
				setState(1164);
				generate_statement();
				}
				break;
			case 17:
				enterOuterAlt(_localctx, 17);
				{
				setState(1165);
				if_statement();
				}
				break;
			case 18:
				enterOuterAlt(_localctx, 18);
				{
				setState(1166);
				move_statement();
				}
				break;
			case 19:
				enterOuterAlt(_localctx, 19);
				{
				setState(1167);
				initialize_statement();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Initialize_statementContext extends ParserRuleContext {
		public TerminalNode INITIALIZE() { return getToken(cobolParser.INITIALIZE, 0); }
		public List<Fld_nameContext> fld_name() {
			return getRuleContexts(Fld_nameContext.class);
		}
		public Fld_nameContext fld_name(int i) {
			return getRuleContext(Fld_nameContext.class,i);
		}
		public List<ReplacingContext> replacing() {
			return getRuleContexts(ReplacingContext.class);
		}
		public ReplacingContext replacing(int i) {
			return getRuleContext(ReplacingContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Initialize_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_initialize_statement; }
	}

	public final Initialize_statementContext initialize_statement() throws RecognitionException {
		Initialize_statementContext _localctx = new Initialize_statementContext(_ctx, getState());
		enterRule(_localctx, 52, RULE_initialize_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1170);
			match(INITIALIZE);
			setState(1178); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1172); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1171);
						separator();
						}
						}
						setState(1174); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1176);
					fld_name();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1180); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,87,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(1191);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,89,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1183); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1182);
						separator();
						}
						}
						setState(1185); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1187);
					replacing();
					}
					} 
				}
				setState(1193);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,89,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ReplacingContext extends ParserRuleContext {
		public TerminalNode REPLACING() { return getToken(cobolParser.REPLACING, 0); }
		public List<TerminalNode> BY() { return getTokens(cobolParser.BY); }
		public TerminalNode BY(int i) {
			return getToken(cobolParser.BY, i);
		}
		public List<Init_valueContext> init_value() {
			return getRuleContexts(Init_valueContext.class);
		}
		public Init_valueContext init_value(int i) {
			return getRuleContext(Init_valueContext.class,i);
		}
		public List<TerminalNode> ALPHABETIC() { return getTokens(cobolParser.ALPHABETIC); }
		public TerminalNode ALPHABETIC(int i) {
			return getToken(cobolParser.ALPHABETIC, i);
		}
		public List<TerminalNode> ALPHANUMERIC() { return getTokens(cobolParser.ALPHANUMERIC); }
		public TerminalNode ALPHANUMERIC(int i) {
			return getToken(cobolParser.ALPHANUMERIC, i);
		}
		public List<TerminalNode> NUMERIC() { return getTokens(cobolParser.NUMERIC); }
		public TerminalNode NUMERIC(int i) {
			return getToken(cobolParser.NUMERIC, i);
		}
		public List<TerminalNode> ALPHANUMERIC_EDITED() { return getTokens(cobolParser.ALPHANUMERIC_EDITED); }
		public TerminalNode ALPHANUMERIC_EDITED(int i) {
			return getToken(cobolParser.ALPHANUMERIC_EDITED, i);
		}
		public List<TerminalNode> NUMERIC_EDITED() { return getTokens(cobolParser.NUMERIC_EDITED); }
		public TerminalNode NUMERIC_EDITED(int i) {
			return getToken(cobolParser.NUMERIC_EDITED, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> DATA() { return getTokens(cobolParser.DATA); }
		public TerminalNode DATA(int i) {
			return getToken(cobolParser.DATA, i);
		}
		public ReplacingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_replacing; }
	}

	public final ReplacingContext replacing() throws RecognitionException {
		ReplacingContext _localctx = new ReplacingContext(_ctx, getState());
		enterRule(_localctx, 54, RULE_replacing);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1194);
			match(REPLACING);
			setState(1222); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1196); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1195);
						separator();
						}
						}
						setState(1198); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1200);
					_la = _input.LA(1);
					if ( !(_la==ALPHABETIC || _la==NUMERIC || ((((_la - 407)) & ~0x3f) == 0 && ((1L << (_la - 407)) & ((1L << (ALPHANUMERIC - 407)) | (1L << (NUMERIC_EDITED - 407)) | (1L << (ALPHANUMERIC_EDITED - 407)))) != 0)) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(1202); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1201);
						separator();
						}
						}
						setState(1204); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1212);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==DATA) {
						{
						setState(1206);
						match(DATA);
						setState(1208); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1207);
							separator();
							}
							}
							setState(1210); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					setState(1214);
					match(BY);
					setState(1216); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1215);
						separator();
						}
						}
						setState(1218); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1220);
					init_value();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1224); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,95,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Init_valueContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public ConstantContext constant() {
			return getRuleContext(ConstantContext.class,0);
		}
		public Init_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_init_value; }
	}

	public final Init_valueContext init_value() throws RecognitionException {
		Init_valueContext _localctx = new Init_valueContext(_ctx, getState());
		enterRule(_localctx, 56, RULE_init_value);
		try {
			setState(1228);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(1226);
				qualified_data_item();
				}
				break;
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(1227);
				constant();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Fld_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Fld_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_fld_name; }
	}

	public final Fld_nameContext fld_name() throws RecognitionException {
		Fld_nameContext _localctx = new Fld_nameContext(_ctx, getState());
		enterRule(_localctx, 58, RULE_fld_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1230);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Move_statementContext extends ParserRuleContext {
		public TerminalNode MOVE() { return getToken(cobolParser.MOVE, 0); }
		public Src_itemContext src_item() {
			return getRuleContext(Src_itemContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CORRESPONDING() { return getToken(cobolParser.CORRESPONDING, 0); }
		public TerminalNode CORR() { return getToken(cobolParser.CORR, 0); }
		public Move_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_move_statement; }
	}

	public final Move_statementContext move_statement() throws RecognitionException {
		Move_statementContext _localctx = new Move_statementContext(_ctx, getState());
		enterRule(_localctx, 60, RULE_move_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1232);
			match(MOVE);
			setState(1234); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1233);
				separator();
				}
				}
				setState(1236); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1244);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CORR || _la==CORRESPONDING) {
				{
				setState(1238);
				_la = _input.LA(1);
				if ( !(_la==CORR || _la==CORRESPONDING) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(1240); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1239);
					separator();
					}
					}
					setState(1242); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(1246);
			src_item();
			setState(1248); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1247);
				separator();
				}
				}
				setState(1250); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1252);
			match(TO);
			setState(1254); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1253);
				separator();
				}
				}
				setState(1256); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1258);
			dest_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class If_statementContext extends ParserRuleContext {
		public TerminalNode IF() { return getToken(cobolParser.IF, 0); }
		public Logic_expressionContext logic_expression() {
			return getRuleContext(Logic_expressionContext.class,0);
		}
		public List<SentenseContext> sentense() {
			return getRuleContexts(SentenseContext.class);
		}
		public SentenseContext sentense(int i) {
			return getRuleContext(SentenseContext.class,i);
		}
		public List<TerminalNode> NEXT() { return getTokens(cobolParser.NEXT); }
		public TerminalNode NEXT(int i) {
			return getToken(cobolParser.NEXT, i);
		}
		public List<TerminalNode> SENTENCE() { return getTokens(cobolParser.SENTENCE); }
		public TerminalNode SENTENCE(int i) {
			return getToken(cobolParser.SENTENCE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode THEN() { return getToken(cobolParser.THEN, 0); }
		public TerminalNode ELSE() { return getToken(cobolParser.ELSE, 0); }
		public TerminalNode END_IF() { return getToken(cobolParser.END_IF, 0); }
		public If_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_if_statement; }
	}

	public final If_statementContext if_statement() throws RecognitionException {
		If_statementContext _localctx = new If_statementContext(_ctx, getState());
		enterRule(_localctx, 62, RULE_if_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1260);
			match(IF);
			setState(1262); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1261);
				separator();
				}
				}
				setState(1264); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1266);
			logic_expression(0);
			setState(1274);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,104,_ctx) ) {
			case 1:
				{
				setState(1268); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1267);
					separator();
					}
					}
					setState(1270); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1272);
				match(THEN);
				}
				break;
			}
			setState(1277); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1276);
				separator();
				}
				}
				setState(1279); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1290);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ACCEPT:
			case ADD:
			case ALTER:
			case CALL:
			case CANCEL:
			case CLOSE:
			case COMPUTE:
			case CONTINUE:
			case DELETE:
			case DISPLAY:
			case DIVIDE:
			case EVALUATE:
			case EXIT:
			case GENERATE:
			case GO:
			case IF:
			case INITIALIZE:
			case MOVE:
				{
				setState(1281);
				sentense();
				}
				break;
			case NEXT:
				{
				setState(1282);
				match(NEXT);
				setState(1284); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1283);
					separator();
					}
					}
					setState(1286); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1288);
				match(SENTENCE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(1314);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,112,_ctx) ) {
			case 1:
				{
				setState(1293); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1292);
					separator();
					}
					}
					setState(1295); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1297);
				match(ELSE);
				setState(1299); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1298);
					separator();
					}
					}
					setState(1301); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1312);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case ACCEPT:
				case ADD:
				case ALTER:
				case CALL:
				case CANCEL:
				case CLOSE:
				case COMPUTE:
				case CONTINUE:
				case DELETE:
				case DISPLAY:
				case DIVIDE:
				case EVALUATE:
				case EXIT:
				case GENERATE:
				case GO:
				case IF:
				case INITIALIZE:
				case MOVE:
					{
					setState(1303);
					sentense();
					}
					break;
				case NEXT:
					{
					setState(1304);
					match(NEXT);
					setState(1306); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1305);
						separator();
						}
						}
						setState(1308); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1310);
					match(SENTENCE);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(1323);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,114,_ctx) ) {
			case 1:
				{
				setState(1317); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1316);
					separator();
					}
					}
					setState(1319); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1321);
				match(END_IF);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Generate_statementContext extends ParserRuleContext {
		public TerminalNode GENERATE() { return getToken(cobolParser.GENERATE, 0); }
		public Report_itemContext report_item() {
			return getRuleContext(Report_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Generate_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_generate_statement; }
	}

	public final Generate_statementContext generate_statement() throws RecognitionException {
		Generate_statementContext _localctx = new Generate_statementContext(_ctx, getState());
		enterRule(_localctx, 64, RULE_generate_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1325);
			match(GENERATE);
			setState(1327); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1326);
				separator();
				}
				}
				setState(1329); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1331);
			report_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_itemContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Report_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_item; }
	}

	public final Report_itemContext report_item() throws RecognitionException {
		Report_itemContext _localctx = new Report_itemContext(_ctx, getState());
		enterRule(_localctx, 66, RULE_report_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1333);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Exit_statementContext extends ParserRuleContext {
		public TerminalNode EXIT() { return getToken(cobolParser.EXIT, 0); }
		public Exit_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_exit_statement; }
	}

	public final Exit_statementContext exit_statement() throws RecognitionException {
		Exit_statementContext _localctx = new Exit_statementContext(_ctx, getState());
		enterRule(_localctx, 68, RULE_exit_statement);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1335);
			match(EXIT);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Exit_program_statementContext extends ParserRuleContext {
		public TerminalNode EXIT() { return getToken(cobolParser.EXIT, 0); }
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Exit_program_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_exit_program_statement; }
	}

	public final Exit_program_statementContext exit_program_statement() throws RecognitionException {
		Exit_program_statementContext _localctx = new Exit_program_statementContext(_ctx, getState());
		enterRule(_localctx, 70, RULE_exit_program_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1337);
			match(EXIT);
			setState(1339); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1338);
				separator();
				}
				}
				setState(1341); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1343);
			match(PROGRAM);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Go_to_statementContext extends ParserRuleContext {
		public TerminalNode GO() { return getToken(cobolParser.GO, 0); }
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public List<Proc_nameContext> proc_name() {
			return getRuleContexts(Proc_nameContext.class);
		}
		public Proc_nameContext proc_name(int i) {
			return getRuleContext(Proc_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode DEPENDING() { return getToken(cobolParser.DEPENDING, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Go_to_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_go_to_statement; }
	}

	public final Go_to_statementContext go_to_statement() throws RecognitionException {
		Go_to_statementContext _localctx = new Go_to_statementContext(_ctx, getState());
		enterRule(_localctx, 72, RULE_go_to_statement);
		int _la;
		try {
			setState(1400);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,127,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1345);
				match(GO);
				setState(1353);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,118,_ctx) ) {
				case 1:
					{
					setState(1347); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1346);
						separator();
						}
						}
						setState(1349); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1351);
					match(TO);
					}
					break;
				}
				setState(1362);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,120,_ctx) ) {
				case 1:
					{
					setState(1356); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1355);
						separator();
						}
						}
						setState(1358); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1360);
					proc_name();
					}
					break;
				}
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1364);
				match(GO);
				setState(1372);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,122,_ctx) ) {
				case 1:
					{
					setState(1366); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1365);
						separator();
						}
						}
						setState(1368); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1370);
					match(TO);
					}
					break;
				}
				setState(1381); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1375); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1374);
						separator();
						}
						}
						setState(1377); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1379);
					proc_name();
					}
					}
					setState(1383); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1385);
				match(DEPENDING);
				{
				setState(1387); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1386);
					separator();
					}
					}
					setState(1389); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1391);
				match(ON);
				}
				setState(1394); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1393);
					separator();
					}
					}
					setState(1396); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1398);
				qualified_data_item();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Proc_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Proc_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_proc_name; }
	}

	public final Proc_nameContext proc_name() throws RecognitionException {
		Proc_nameContext _localctx = new Proc_nameContext(_ctx, getState());
		enterRule(_localctx, 74, RULE_proc_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1402);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Evaluate_statementContext extends ParserRuleContext {
		public TerminalNode EVALUATE() { return getToken(cobolParser.EVALUATE, 0); }
		public List<Subj_itemContext> subj_item() {
			return getRuleContexts(Subj_itemContext.class);
		}
		public Subj_itemContext subj_item(int i) {
			return getRuleContext(Subj_itemContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> WHEN() { return getTokens(cobolParser.WHEN); }
		public TerminalNode WHEN(int i) {
			return getToken(cobolParser.WHEN, i);
		}
		public List<When_conditionContext> when_condition() {
			return getRuleContexts(When_conditionContext.class);
		}
		public When_conditionContext when_condition(int i) {
			return getRuleContext(When_conditionContext.class,i);
		}
		public List<SentenseContext> sentense() {
			return getRuleContexts(SentenseContext.class);
		}
		public SentenseContext sentense(int i) {
			return getRuleContext(SentenseContext.class,i);
		}
		public TerminalNode OTHER() { return getToken(cobolParser.OTHER, 0); }
		public TerminalNode END_EVALUATE() { return getToken(cobolParser.END_EVALUATE, 0); }
		public List<TerminalNode> ALSO() { return getTokens(cobolParser.ALSO); }
		public TerminalNode ALSO(int i) {
			return getToken(cobolParser.ALSO, i);
		}
		public Evaluate_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_evaluate_statement; }
	}

	public final Evaluate_statementContext evaluate_statement() throws RecognitionException {
		Evaluate_statementContext _localctx = new Evaluate_statementContext(_ctx, getState());
		enterRule(_localctx, 76, RULE_evaluate_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1404);
			match(EVALUATE);
			setState(1406); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1405);
				separator();
				}
				}
				setState(1408); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1410);
			subj_item();
			setState(1429);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,132,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1418);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,130,_ctx) ) {
					case 1:
						{
						setState(1412); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1411);
							separator();
							}
							}
							setState(1414); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(1416);
						match(ALSO);
						}
						break;
					}
					setState(1421); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1420);
						separator();
						}
						}
						setState(1423); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1425);
					subj_item();
					}
					} 
				}
				setState(1431);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,132,_ctx);
			}
			setState(1472); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1433); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1432);
						separator();
						}
						}
						setState(1435); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1437);
					match(WHEN);
					setState(1439); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1438);
						separator();
						}
						}
						setState(1441); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1443);
					when_condition();
					setState(1462);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,138,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(1451);
							_errHandler.sync(this);
							switch ( getInterpreter().adaptivePredict(_input,136,_ctx) ) {
							case 1:
								{
								setState(1445); 
								_errHandler.sync(this);
								_la = _input.LA(1);
								do {
									{
									{
									setState(1444);
									separator();
									}
									}
									setState(1447); 
									_errHandler.sync(this);
									_la = _input.LA(1);
								} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
								setState(1449);
								match(ALSO);
								}
								break;
							}
							setState(1454); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(1453);
								separator();
								}
								}
								setState(1456); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
							setState(1458);
							when_condition();
							}
							} 
						}
						setState(1464);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,138,_ctx);
					}
					setState(1466); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1465);
						separator();
						}
						}
						setState(1468); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1470);
					sentense();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1474); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,140,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(1495);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,144,_ctx) ) {
			case 1:
				{
				setState(1477); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1476);
					separator();
					}
					}
					setState(1479); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1481);
				match(WHEN);
				setState(1483); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1482);
					separator();
					}
					}
					setState(1485); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1487);
				match(OTHER);
				setState(1489); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1488);
					separator();
					}
					}
					setState(1491); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1493);
				sentense();
				}
				break;
			}
			setState(1504);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,146,_ctx) ) {
			case 1:
				{
				setState(1498); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1497);
					separator();
					}
					}
					setState(1500); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1502);
				match(END_EVALUATE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class When_conditionContext extends ParserRuleContext {
		public Logic_expressionContext logic_expression() {
			return getRuleContext(Logic_expressionContext.class,0);
		}
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ANY() { return getToken(cobolParser.ANY, 0); }
		public TerminalNode TRUE() { return getToken(cobolParser.TRUE, 0); }
		public TerminalNode FALSE() { return getToken(cobolParser.FALSE, 0); }
		public When_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_when_condition; }
	}

	public final When_conditionContext when_condition() throws RecognitionException {
		When_conditionContext _localctx = new When_conditionContext(_ctx, getState());
		enterRule(_localctx, 78, RULE_when_condition);
		int _la;
		try {
			setState(1534);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,152,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1506);
				logic_expression(0);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1513);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NOT) {
					{
					setState(1507);
					match(NOT);
					setState(1509); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1508);
						separator();
						}
						}
						setState(1511); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(1515);
				arithmetic_expression(0);
				setState(1529);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,151,_ctx) ) {
				case 1:
					{
					setState(1517); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1516);
						separator();
						}
						}
						setState(1519); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1521);
					_la = _input.LA(1);
					if ( !(_la==THROUGH || _la==THRU) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(1523); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1522);
						separator();
						}
						}
						setState(1525); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1527);
					arithmetic_expression(0);
					}
					break;
				}
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1531);
				match(ANY);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(1532);
				match(TRUE);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(1533);
				match(FALSE);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Subj_itemContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public Logic_expressionContext logic_expression() {
			return getRuleContext(Logic_expressionContext.class,0);
		}
		public TerminalNode TRUE() { return getToken(cobolParser.TRUE, 0); }
		public TerminalNode FALSE() { return getToken(cobolParser.FALSE, 0); }
		public Subj_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_subj_item; }
	}

	public final Subj_itemContext subj_item() throws RecognitionException {
		Subj_itemContext _localctx = new Subj_itemContext(_ctx, getState());
		enterRule(_localctx, 80, RULE_subj_item);
		try {
			setState(1540);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,153,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1536);
				arithmetic_expression(0);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1537);
				logic_expression(0);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1538);
				match(TRUE);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(1539);
				match(FALSE);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Divide_statementContext extends ParserRuleContext {
		public Divide_statement_form1Context divide_statement_form1() {
			return getRuleContext(Divide_statement_form1Context.class,0);
		}
		public Divide_statement_form2Context divide_statement_form2() {
			return getRuleContext(Divide_statement_form2Context.class,0);
		}
		public Divide_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_divide_statement; }
	}

	public final Divide_statementContext divide_statement() throws RecognitionException {
		Divide_statementContext _localctx = new Divide_statementContext(_ctx, getState());
		enterRule(_localctx, 82, RULE_divide_statement);
		try {
			setState(1544);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,154,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1542);
				divide_statement_form1();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1543);
				divide_statement_form2();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Divide_statement_form1Context extends ParserRuleContext {
		public TerminalNode DIVIDE() { return getToken(cobolParser.DIVIDE, 0); }
		public List<Divide_numContext> divide_num() {
			return getRuleContexts(Divide_numContext.class);
		}
		public Divide_numContext divide_num(int i) {
			return getRuleContext(Divide_numContext.class,i);
		}
		public TerminalNode INTO() { return getToken(cobolParser.INTO, 0); }
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public List<Identifier_resultContext> identifier_result() {
			return getRuleContexts(Identifier_resultContext.class);
		}
		public Identifier_resultContext identifier_result(int i) {
			return getRuleContext(Identifier_resultContext.class,i);
		}
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_DIVIDE() { return getToken(cobolParser.END_DIVIDE, 0); }
		public List<TerminalNode> ROUNDED() { return getTokens(cobolParser.ROUNDED); }
		public TerminalNode ROUNDED(int i) {
			return getToken(cobolParser.ROUNDED, i);
		}
		public Divide_statement_form1Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_divide_statement_form1; }
	}

	public final Divide_statement_form1Context divide_statement_form1() throws RecognitionException {
		Divide_statement_form1Context _localctx = new Divide_statement_form1Context(_ctx, getState());
		enterRule(_localctx, 84, RULE_divide_statement_form1);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1546);
			match(DIVIDE);
			setState(1548); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1547);
				separator();
				}
				}
				setState(1550); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1552);
			divide_num();
			setState(1554); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1553);
				separator();
				}
				}
				setState(1556); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1558);
			_la = _input.LA(1);
			if ( !(_la==BY || _la==INTO) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(1572);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,159,_ctx) ) {
			case 1:
				{
				setState(1560); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1559);
					separator();
					}
					}
					setState(1562); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1564);
				divide_num();
				setState(1566); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1565);
					separator();
					}
					}
					setState(1568); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1570);
				match(GIVING);
				}
				break;
			}
			setState(1589); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1575); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1574);
						separator();
						}
						}
						setState(1577); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1579);
					identifier_result();
					setState(1587);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,162,_ctx) ) {
					case 1:
						{
						setState(1581); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1580);
							separator();
							}
							}
							setState(1583); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(1585);
						match(ROUNDED);
						}
						break;
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1591); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,163,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(1600);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,165,_ctx) ) {
			case 1:
				{
				setState(1594); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1593);
					separator();
					}
					}
					setState(1596); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1598);
				on_size_variants();
				}
				break;
			}
			setState(1609);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,167,_ctx) ) {
			case 1:
				{
				setState(1603); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1602);
					separator();
					}
					}
					setState(1605); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1607);
				match(END_DIVIDE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Divide_statement_form2Context extends ParserRuleContext {
		public TerminalNode DIVIDE() { return getToken(cobolParser.DIVIDE, 0); }
		public List<Divide_numContext> divide_num() {
			return getRuleContexts(Divide_numContext.class);
		}
		public Divide_numContext divide_num(int i) {
			return getRuleContext(Divide_numContext.class,i);
		}
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public TerminalNode REMAINDER() { return getToken(cobolParser.REMAINDER, 0); }
		public RemaindContext remaind() {
			return getRuleContext(RemaindContext.class,0);
		}
		public TerminalNode INTO() { return getToken(cobolParser.INTO, 0); }
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public TerminalNode ROUNDED() { return getToken(cobolParser.ROUNDED, 0); }
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_DIVIDE() { return getToken(cobolParser.END_DIVIDE, 0); }
		public Divide_statement_form2Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_divide_statement_form2; }
	}

	public final Divide_statement_form2Context divide_statement_form2() throws RecognitionException {
		Divide_statement_form2Context _localctx = new Divide_statement_form2Context(_ctx, getState());
		enterRule(_localctx, 86, RULE_divide_statement_form2);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1611);
			match(DIVIDE);
			setState(1613); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1612);
				separator();
				}
				}
				setState(1615); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1617);
			divide_num();
			setState(1619); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1618);
				separator();
				}
				}
				setState(1621); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1623);
			_la = _input.LA(1);
			if ( !(_la==BY || _la==INTO) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(1637);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,172,_ctx) ) {
			case 1:
				{
				setState(1625); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1624);
					separator();
					}
					}
					setState(1627); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1629);
				divide_num();
				setState(1631); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1630);
					separator();
					}
					}
					setState(1633); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1635);
				match(GIVING);
				}
				break;
			}
			setState(1640); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1639);
				separator();
				}
				}
				setState(1642); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1644);
			identifier_result();
			setState(1652);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,175,_ctx) ) {
			case 1:
				{
				setState(1646); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1645);
					separator();
					}
					}
					setState(1648); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1650);
				match(ROUNDED);
				}
				break;
			}
			setState(1655); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1654);
				separator();
				}
				}
				setState(1657); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1659);
			match(REMAINDER);
			setState(1661); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1660);
				separator();
				}
				}
				setState(1663); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1665);
			remaind();
			setState(1673);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,179,_ctx) ) {
			case 1:
				{
				setState(1667); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1666);
					separator();
					}
					}
					setState(1669); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1671);
				on_size_variants();
				}
				break;
			}
			setState(1682);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,181,_ctx) ) {
			case 1:
				{
				setState(1676); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1675);
					separator();
					}
					}
					setState(1678); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1680);
				match(END_DIVIDE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RemaindContext extends ParserRuleContext {
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public RemaindContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_remaind; }
	}

	public final RemaindContext remaind() throws RecognitionException {
		RemaindContext _localctx = new RemaindContext(_ctx, getState());
		enterRule(_localctx, 88, RULE_remaind);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1684);
			identifier_result();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Divide_numContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Divide_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_divide_num; }
	}

	public final Divide_numContext divide_num() throws RecognitionException {
		Divide_numContext _localctx = new Divide_numContext(_ctx, getState());
		enterRule(_localctx, 90, RULE_divide_num);
		try {
			setState(1688);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(1686);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(1687);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statementContext extends ParserRuleContext {
		public Display_statement_form1Context display_statement_form1() {
			return getRuleContext(Display_statement_form1Context.class,0);
		}
		public Display_statement_form2Context display_statement_form2() {
			return getRuleContext(Display_statement_form2Context.class,0);
		}
		public Display_statement_form3Context display_statement_form3() {
			return getRuleContext(Display_statement_form3Context.class,0);
		}
		public Display_statement_form4Context display_statement_form4() {
			return getRuleContext(Display_statement_form4Context.class,0);
		}
		public Display_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement; }
	}

	public final Display_statementContext display_statement() throws RecognitionException {
		Display_statementContext _localctx = new Display_statementContext(_ctx, getState());
		enterRule(_localctx, 92, RULE_display_statement);
		try {
			setState(1694);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,183,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1690);
				display_statement_form1();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1691);
				display_statement_form2();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1692);
				display_statement_form3();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(1693);
				display_statement_form4();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statement_form1Context extends ParserRuleContext {
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public List<Src_itemContext> src_item() {
			return getRuleContexts(Src_itemContext.class);
		}
		public Src_itemContext src_item(int i) {
			return getRuleContext(Src_itemContext.class,i);
		}
		public TerminalNode END_DISPLAY() { return getToken(cobolParser.END_DISPLAY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Display_form1_clauseContext> display_form1_clause() {
			return getRuleContexts(Display_form1_clauseContext.class);
		}
		public Display_form1_clauseContext display_form1_clause(int i) {
			return getRuleContext(Display_form1_clauseContext.class,i);
		}
		public Display_statement_form1Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement_form1; }
	}

	public final Display_statement_form1Context display_statement_form1() throws RecognitionException {
		Display_statement_form1Context _localctx = new Display_statement_form1Context(_ctx, getState());
		enterRule(_localctx, 94, RULE_display_statement_form1);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1696);
			match(DISPLAY);
			setState(1715); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1698); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1697);
						separator();
						}
						}
						setState(1700); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1702);
					src_item();
					setState(1712);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,186,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(1704); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(1703);
								separator();
								}
								}
								setState(1706); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
							setState(1708);
							display_form1_clause();
							}
							} 
						}
						setState(1714);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,186,_ctx);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1717); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,187,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(1726);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,189,_ctx) ) {
			case 1:
				{
				setState(1720); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1719);
					separator();
					}
					}
					setState(1722); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1724);
				match(END_DISPLAY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statement_form2Context extends ParserRuleContext {
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public List<Src_itemContext> src_item() {
			return getRuleContexts(Src_itemContext.class);
		}
		public Src_itemContext src_item(int i) {
			return getRuleContext(Src_itemContext.class,i);
		}
		public TerminalNode END_DISPLAY() { return getToken(cobolParser.END_DISPLAY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Display_form2_clauseContext> display_form2_clause() {
			return getRuleContexts(Display_form2_clauseContext.class);
		}
		public Display_form2_clauseContext display_form2_clause(int i) {
			return getRuleContext(Display_form2_clauseContext.class,i);
		}
		public Display_statement_form2Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement_form2; }
	}

	public final Display_statement_form2Context display_statement_form2() throws RecognitionException {
		Display_statement_form2Context _localctx = new Display_statement_form2Context(_ctx, getState());
		enterRule(_localctx, 96, RULE_display_statement_form2);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1728);
			match(DISPLAY);
			setState(1747); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1730); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1729);
						separator();
						}
						}
						setState(1732); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1734);
					src_item();
					setState(1744);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,192,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(1736); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(1735);
								separator();
								}
								}
								setState(1738); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
							setState(1740);
							display_form2_clause();
							}
							} 
						}
						setState(1746);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,192,_ctx);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1749); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,193,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(1758);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,195,_ctx) ) {
			case 1:
				{
				setState(1752); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1751);
					separator();
					}
					}
					setState(1754); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1756);
				match(END_DISPLAY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statement_form3Context extends ParserRuleContext {
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode END_DISPLAY() { return getToken(cobolParser.END_DISPLAY, 0); }
		public Disp_f3_lineContext disp_f3_line() {
			return getRuleContext(Disp_f3_lineContext.class,0);
		}
		public Disp_f3_columnContext disp_f3_column() {
			return getRuleContext(Disp_f3_columnContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public Display_statement_form3Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement_form3; }
	}

	public final Display_statement_form3Context display_statement_form3() throws RecognitionException {
		Display_statement_form3Context _localctx = new Display_statement_form3Context(_ctx, getState());
		enterRule(_localctx, 98, RULE_display_statement_form3);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1760);
			match(DISPLAY);
			setState(1762); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1761);
				separator();
				}
				}
				setState(1764); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1766);
			qualified_data_item();
			setState(1793);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,203,_ctx) ) {
			case 1:
				{
				setState(1768); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1767);
					separator();
					}
					}
					setState(1770); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1778);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(1772);
					match(AT);
					setState(1774); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1773);
						separator();
						}
						}
						setState(1776); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(1791);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case LINE:
					{
					setState(1780);
					disp_f3_line();
					setState(1788);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,201,_ctx) ) {
					case 1:
						{
						setState(1782); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1781);
							separator();
							}
							}
							setState(1784); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(1786);
						disp_f3_column();
						}
						break;
					}
					}
					break;
				case COLUMN:
					{
					setState(1790);
					disp_f3_column();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(1802);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,205,_ctx) ) {
			case 1:
				{
				setState(1796); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1795);
					separator();
					}
					}
					setState(1798); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1800);
				match(END_DISPLAY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statement_form4Context extends ParserRuleContext {
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public Src_itemContext src_item() {
			return getRuleContext(Src_itemContext.class,0);
		}
		public TerminalNode UPON() { return getToken(cobolParser.UPON, 0); }
		public Display_uponContext display_upon() {
			return getRuleContext(Display_uponContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_DISPLAY() { return getToken(cobolParser.END_DISPLAY, 0); }
		public Display_statement_form4Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement_form4; }
	}

	public final Display_statement_form4Context display_statement_form4() throws RecognitionException {
		Display_statement_form4Context _localctx = new Display_statement_form4Context(_ctx, getState());
		enterRule(_localctx, 100, RULE_display_statement_form4);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1804);
			match(DISPLAY);
			setState(1806); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1805);
				separator();
				}
				}
				setState(1808); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1810);
			src_item();
			setState(1812); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1811);
				separator();
				}
				}
				setState(1814); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1816);
			match(UPON);
			setState(1818); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1817);
				separator();
				}
				}
				setState(1820); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1822);
			display_upon();
			setState(1830);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,210,_ctx) ) {
			case 1:
				{
				setState(1824); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1823);
					separator();
					}
					}
					setState(1826); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1828);
				on_exception_variants();
				}
				break;
			}
			setState(1839);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,212,_ctx) ) {
			case 1:
				{
				setState(1833); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1832);
					separator();
					}
					}
					setState(1835); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1837);
				match(END_DISPLAY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Src_itemContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public ConstantContext constant() {
			return getRuleContext(ConstantContext.class,0);
		}
		public Src_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_src_item; }
	}

	public final Src_itemContext src_item() throws RecognitionException {
		Src_itemContext _localctx = new Src_itemContext(_ctx, getState());
		enterRule(_localctx, 102, RULE_src_item);
		try {
			setState(1843);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(1841);
				identifier();
				}
				break;
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(1842);
				constant();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_uponContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Display_uponContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_upon; }
	}

	public final Display_uponContext display_upon() throws RecognitionException {
		Display_uponContext _localctx = new Display_uponContext(_ctx, getState());
		enterRule(_localctx, 104, RULE_display_upon);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1845);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Disp_f3_lineContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Disp_f3_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_disp_f3_line; }
	}

	public final Disp_f3_lineContext disp_f3_line() throws RecognitionException {
		Disp_f3_lineContext _localctx = new Disp_f3_lineContext(_ctx, getState());
		enterRule(_localctx, 106, RULE_disp_f3_line);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1847);
			match(LINE);
			{
			setState(1849); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1848);
				separator();
				}
				}
				setState(1851); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1853);
			match(NUMBER);
			}
			setState(1856); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1855);
				separator();
				}
				}
				setState(1858); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1862);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				{
				setState(1860);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				{
				setState(1861);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Disp_f3_columnContext extends ParserRuleContext {
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Disp_f3_columnContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_disp_f3_column; }
	}

	public final Disp_f3_columnContext disp_f3_column() throws RecognitionException {
		Disp_f3_columnContext _localctx = new Disp_f3_columnContext(_ctx, getState());
		enterRule(_localctx, 108, RULE_disp_f3_column);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1864);
			match(COLUMN);
			{
			setState(1866); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1865);
				separator();
				}
				}
				setState(1868); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1870);
			match(NUMBER);
			}
			setState(1873); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1872);
				separator();
				}
				}
				setState(1875); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(1879);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				{
				setState(1877);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				{
				setState(1878);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_form1_clauseContext extends ParserRuleContext {
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode UPON() { return getToken(cobolParser.UPON, 0); }
		public Out_destContext out_dest() {
			return getRuleContext(Out_destContext.class,0);
		}
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode ADVANCING() { return getToken(cobolParser.ADVANCING, 0); }
		public Display_form1_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_form1_clause; }
	}

	public final Display_form1_clauseContext display_form1_clause() throws RecognitionException {
		Display_form1_clauseContext _localctx = new Display_form1_clauseContext(_ctx, getState());
		enterRule(_localctx, 110, RULE_display_form1_clause);
		int _la;
		try {
			setState(1916);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,227,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1887);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1881);
					match(WITH);
					setState(1883); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1882);
						separator();
						}
						}
						setState(1885); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(1889);
				match(CONVERSION);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1890);
				match(UPON);
				setState(1892); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1891);
					separator();
					}
					}
					setState(1894); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1896);
				out_dest();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1904);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1898);
					match(WITH);
					setState(1900); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1899);
						separator();
						}
						}
						setState(1902); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(1906);
				match(NO);
				setState(1914);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,226,_ctx) ) {
				case 1:
					{
					setState(1908); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1907);
						separator();
						}
						}
						setState(1910); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1912);
					match(ADVANCING);
					}
					break;
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_form2_clauseContext extends ParserRuleContext {
		public Display_form1_clauseContext display_form1_clause() {
			return getRuleContext(Display_form1_clauseContext.class,0);
		}
		public At_line_numberContext at_line_number() {
			return getRuleContext(At_line_numberContext.class,0);
		}
		public At_column_numberContext at_column_number() {
			return getRuleContext(At_column_numberContext.class,0);
		}
		public TerminalNode ERASE() { return getToken(cobolParser.ERASE, 0); }
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public TerminalNode BELL() { return getToken(cobolParser.BELL, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode UNDERLINED() { return getToken(cobolParser.UNDERLINED, 0); }
		public TerminalNode BOLD() { return getToken(cobolParser.BOLD, 0); }
		public TerminalNode BLINKING() { return getToken(cobolParser.BLINKING, 0); }
		public TerminalNode REVERSED() { return getToken(cobolParser.REVERSED, 0); }
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode ADVANCING() { return getToken(cobolParser.ADVANCING, 0); }
		public Display_form2_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_form2_clause; }
	}

	public final Display_form2_clauseContext display_form2_clause() throws RecognitionException {
		Display_form2_clauseContext _localctx = new Display_form2_clauseContext(_ctx, getState());
		enterRule(_localctx, 112, RULE_display_form2_clause);
		int _la;
		try {
			setState(2002);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,245,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1918);
				display_form1_clause();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1919);
				at_line_number();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1920);
				at_column_number();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(1921);
				match(ERASE);
				setState(1945);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,233,_ctx) ) {
				case 1:
					{
					setState(1923); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1922);
						separator();
						}
						}
						setState(1925); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1933);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==TO) {
						{
						setState(1927);
						match(TO);
						setState(1929); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1928);
							separator();
							}
							}
							setState(1931); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					setState(1935);
					match(END);
					setState(1943);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,232,_ctx) ) {
					case 1:
						{
						setState(1937); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1936);
							separator();
							}
							}
							setState(1939); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(1941);
						match(OF);
						}
						break;
					}
					}
					break;
				}
				setState(1948); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1947);
					separator();
					}
					}
					setState(1950); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(1952);
				_la = _input.LA(1);
				if ( !(_la==LINE || _la==SCREEN) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(1960);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1954);
					match(WITH);
					setState(1956); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1955);
						separator();
						}
						}
						setState(1958); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(1962);
				match(BELL);
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(1963);
				match(UNDERLINED);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(1964);
				match(BOLD);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(1971);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1965);
					match(WITH);
					setState(1967); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1966);
						separator();
						}
						}
						setState(1969); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(1973);
				match(BLINKING);
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(1974);
				match(REVERSED);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(1981);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1975);
					match(WITH);
					setState(1977); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1976);
						separator();
						}
						}
						setState(1979); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(1983);
				match(CONVERSION);
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(1990);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1984);
					match(WITH);
					setState(1986); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1985);
						separator();
						}
						}
						setState(1988); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(1992);
				match(NO);
				setState(2000);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,244,_ctx) ) {
				case 1:
					{
					setState(1994); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1993);
						separator();
						}
						}
						setState(1996); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(1998);
					match(ADVANCING);
					}
					break;
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_line_numberContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public Number_valueContext number_value() {
			return getRuleContext(Number_valueContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_line_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_line_number; }
	}

	public final At_line_numberContext at_line_number() throws RecognitionException {
		At_line_numberContext _localctx = new At_line_numberContext(_ctx, getState());
		enterRule(_localctx, 114, RULE_at_line_number);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2010);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(2004);
				match(AT);
				setState(2006); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2005);
					separator();
					}
					}
					setState(2008); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(2012);
			match(LINE);
			setState(2020);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,249,_ctx) ) {
			case 1:
				{
				setState(2014); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2013);
					separator();
					}
					}
					setState(2016); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2018);
				match(NUMBER);
				}
				break;
			}
			setState(2023); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2022);
				separator();
				}
				}
				setState(2025); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2027);
			number_value();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_column_numberContext extends ParserRuleContext {
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public Number_valueContext number_value() {
			return getRuleContext(Number_valueContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_column_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_column_number; }
	}

	public final At_column_numberContext at_column_number() throws RecognitionException {
		At_column_numberContext _localctx = new At_column_numberContext(_ctx, getState());
		enterRule(_localctx, 116, RULE_at_column_number);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2035);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(2029);
				match(AT);
				setState(2031); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2030);
					separator();
					}
					}
					setState(2033); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(2037);
			match(COLUMN);
			setState(2045);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,254,_ctx) ) {
			case 1:
				{
				setState(2039); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2038);
					separator();
					}
					}
					setState(2041); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2043);
				match(NUMBER);
				}
				break;
			}
			setState(2048); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2047);
				separator();
				}
				}
				setState(2050); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2052);
			number_value();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Out_destContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Out_destContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_out_dest; }
	}

	public final Out_destContext out_dest() throws RecognitionException {
		Out_destContext _localctx = new Out_destContext(_ctx, getState());
		enterRule(_localctx, 118, RULE_out_dest);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2054);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Delete_statementContext extends ParserRuleContext {
		public TerminalNode DELETE() { return getToken(cobolParser.DELETE, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public On_key_variantsContext on_key_variants() {
			return getRuleContext(On_key_variantsContext.class,0);
		}
		public TerminalNode END_DELETE() { return getToken(cobolParser.END_DELETE, 0); }
		public Delete_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_delete_statement; }
	}

	public final Delete_statementContext delete_statement() throws RecognitionException {
		Delete_statementContext _localctx = new Delete_statementContext(_ctx, getState());
		enterRule(_localctx, 120, RULE_delete_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2056);
			match(DELETE);
			setState(2058); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2057);
				separator();
				}
				}
				setState(2060); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2062);
			file_name();
			setState(2070);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,258,_ctx) ) {
			case 1:
				{
				setState(2064); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2063);
					separator();
					}
					}
					setState(2066); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2068);
				match(RECORD);
				}
				break;
			}
			setState(2079);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,260,_ctx) ) {
			case 1:
				{
				setState(2073); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2072);
					separator();
					}
					}
					setState(2075); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2077);
				on_key_variants();
				}
				break;
			}
			setState(2088);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,262,_ctx) ) {
			case 1:
				{
				setState(2082); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2081);
					separator();
					}
					}
					setState(2084); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2086);
				match(END_DELETE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Continue_statementContext extends ParserRuleContext {
		public TerminalNode CONTINUE() { return getToken(cobolParser.CONTINUE, 0); }
		public Continue_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_continue_statement; }
	}

	public final Continue_statementContext continue_statement() throws RecognitionException {
		Continue_statementContext _localctx = new Continue_statementContext(_ctx, getState());
		enterRule(_localctx, 122, RULE_continue_statement);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2090);
			match(CONTINUE);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Compute_statementContext extends ParserRuleContext {
		public TerminalNode COMPUTE() { return getToken(cobolParser.COMPUTE, 0); }
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public TerminalNode EQUAL() { return getToken(cobolParser.EQUAL, 0); }
		public TerminalNode EQUAL_() { return getToken(cobolParser.EQUAL_, 0); }
		public List<Identifier_resultContext> identifier_result() {
			return getRuleContexts(Identifier_resultContext.class);
		}
		public Identifier_resultContext identifier_result(int i) {
			return getRuleContext(Identifier_resultContext.class,i);
		}
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_COMPUTE() { return getToken(cobolParser.END_COMPUTE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> ROUNDED() { return getTokens(cobolParser.ROUNDED); }
		public TerminalNode ROUNDED(int i) {
			return getToken(cobolParser.ROUNDED, i);
		}
		public Compute_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_compute_statement; }
	}

	public final Compute_statementContext compute_statement() throws RecognitionException {
		Compute_statementContext _localctx = new Compute_statementContext(_ctx, getState());
		enterRule(_localctx, 124, RULE_compute_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2092);
			match(COMPUTE);
			setState(2108); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2094); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2093);
						separator();
						}
						}
						setState(2096); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2098);
					identifier_result();
					setState(2106);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,265,_ctx) ) {
					case 1:
						{
						setState(2100); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2099);
							separator();
							}
							}
							setState(2102); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(2104);
						match(ROUNDED);
						}
						break;
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2110); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,266,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(2136);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,271,_ctx) ) {
			case 1:
				{
				setState(2113); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2112);
					separator();
					}
					}
					setState(2115); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2117);
				match(EQUAL);
				setState(2119); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2118);
					separator();
					}
					}
					setState(2121); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
				break;
			case 2:
				{
				setState(2126);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(2123);
					separator();
					}
					}
					setState(2128);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(2129);
				match(EQUAL_);
				setState(2133);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(2130);
					separator();
					}
					}
					setState(2135);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				break;
			}
			setState(2138);
			arithmetic_expression(0);
			setState(2146);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,273,_ctx) ) {
			case 1:
				{
				setState(2140); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2139);
					separator();
					}
					}
					setState(2142); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2144);
				on_size_variants();
				}
				break;
			}
			setState(2155);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,275,_ctx) ) {
			case 1:
				{
				setState(2149); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2148);
					separator();
					}
					}
					setState(2151); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2153);
				match(END_COMPUTE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Close_statementContext extends ParserRuleContext {
		public TerminalNode CLOSE() { return getToken(cobolParser.CLOSE, 0); }
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Close_paramsContext> close_params() {
			return getRuleContexts(Close_paramsContext.class);
		}
		public Close_paramsContext close_params(int i) {
			return getRuleContext(Close_paramsContext.class,i);
		}
		public Close_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_close_statement; }
	}

	public final Close_statementContext close_statement() throws RecognitionException {
		Close_statementContext _localctx = new Close_statementContext(_ctx, getState());
		enterRule(_localctx, 126, RULE_close_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2157);
			match(CLOSE);
			setState(2173); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2159); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2158);
						separator();
						}
						}
						setState(2161); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2163);
					file_name();
					setState(2171);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,278,_ctx) ) {
					case 1:
						{
						setState(2165); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2164);
							separator();
							}
							}
							setState(2167); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(2169);
						close_params();
						}
						break;
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2175); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,279,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Close_paramsContext extends ParserRuleContext {
		public TerminalNode REEL() { return getToken(cobolParser.REEL, 0); }
		public TerminalNode UNIT() { return getToken(cobolParser.UNIT, 0); }
		public TerminalNode REMOVAL() { return getToken(cobolParser.REMOVAL, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode REWIND() { return getToken(cobolParser.REWIND, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FOR() { return getToken(cobolParser.FOR, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public Close_paramsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_close_params; }
	}

	public final Close_paramsContext close_params() throws RecognitionException {
		Close_paramsContext _localctx = new Close_paramsContext(_ctx, getState());
		enterRule(_localctx, 128, RULE_close_params);
		int _la;
		try {
			setState(2231);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case REEL:
			case UNIT:
				enterOuterAlt(_localctx, 1);
				{
				setState(2177);
				_la = _input.LA(1);
				if ( !(_la==REEL || _la==UNIT) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(2210);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,287,_ctx) ) {
				case 1:
					{
					setState(2179); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2178);
						separator();
						}
						}
						setState(2181); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2208);
					_errHandler.sync(this);
					switch (_input.LA(1)) {
					case FOR:
					case REMOVAL:
						{
						setState(2189);
						_errHandler.sync(this);
						_la = _input.LA(1);
						if (_la==FOR) {
							{
							setState(2183);
							match(FOR);
							setState(2185); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2184);
								separator();
								}
								}
								setState(2187); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
							}
						}

						setState(2191);
						match(REMOVAL);
						}
						break;
					case NO:
					case WITH:
						{
						setState(2198);
						_errHandler.sync(this);
						_la = _input.LA(1);
						if (_la==WITH) {
							{
							setState(2192);
							match(WITH);
							setState(2194); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2193);
								separator();
								}
								}
								setState(2196); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
							}
						}

						setState(2200);
						match(NO);
						setState(2202); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2201);
							separator();
							}
							}
							setState(2204); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(2206);
						match(REWIND);
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					}
					break;
				}
				}
				break;
			case LOCK:
			case NO:
			case WITH:
				enterOuterAlt(_localctx, 2);
				{
				setState(2218);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(2212);
					match(WITH);
					setState(2214); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2213);
						separator();
						}
						}
						setState(2216); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(2229);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case NO:
					{
					setState(2220);
					match(NO);
					setState(2222); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2221);
						separator();
						}
						}
						setState(2224); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2226);
					match(REWIND);
					}
					break;
				case LOCK:
					{
					setState(2228);
					match(LOCK);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Cancel_statementContext extends ParserRuleContext {
		public TerminalNode CANCEL() { return getToken(cobolParser.CANCEL, 0); }
		public List<Prog_nameContext> prog_name() {
			return getRuleContexts(Prog_nameContext.class);
		}
		public Prog_nameContext prog_name(int i) {
			return getRuleContext(Prog_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Cancel_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_cancel_statement; }
	}

	public final Cancel_statementContext cancel_statement() throws RecognitionException {
		Cancel_statementContext _localctx = new Cancel_statementContext(_ctx, getState());
		enterRule(_localctx, 130, RULE_cancel_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2233);
			match(CANCEL);
			setState(2241); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2235); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2234);
						separator();
						}
						}
						setState(2237); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2239);
					prog_name();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2243); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,294,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Call_statementContext extends ParserRuleContext {
		public TerminalNode CALL() { return getToken(cobolParser.CALL, 0); }
		public Prog_nameContext prog_name() {
			return getRuleContext(Prog_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Call_usingContext call_using() {
			return getRuleContext(Call_usingContext.class,0);
		}
		public Call_givingContext call_giving() {
			return getRuleContext(Call_givingContext.class,0);
		}
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_CALL() { return getToken(cobolParser.END_CALL, 0); }
		public Call_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_call_statement; }
	}

	public final Call_statementContext call_statement() throws RecognitionException {
		Call_statementContext _localctx = new Call_statementContext(_ctx, getState());
		enterRule(_localctx, 132, RULE_call_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2245);
			match(CALL);
			setState(2247); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2246);
				separator();
				}
				}
				setState(2249); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2251);
			prog_name();
			setState(2259);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,297,_ctx) ) {
			case 1:
				{
				setState(2253); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2252);
					separator();
					}
					}
					setState(2255); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2257);
				call_using();
				}
				break;
			}
			setState(2268);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,299,_ctx) ) {
			case 1:
				{
				setState(2262); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2261);
					separator();
					}
					}
					setState(2264); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2266);
				call_giving();
				}
				break;
			}
			setState(2277);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,301,_ctx) ) {
			case 1:
				{
				setState(2271); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2270);
					separator();
					}
					}
					setState(2273); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2275);
				on_exception_variants();
				}
				break;
			}
			setState(2286);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,303,_ctx) ) {
			case 1:
				{
				setState(2280); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2279);
					separator();
					}
					}
					setState(2282); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2284);
				match(END_CALL);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Call_givingContext extends ParserRuleContext {
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Call_givingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_call_giving; }
	}

	public final Call_givingContext call_giving() throws RecognitionException {
		Call_givingContext _localctx = new Call_givingContext(_ctx, getState());
		enterRule(_localctx, 134, RULE_call_giving);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2288);
			match(GIVING);
			setState(2290); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2289);
				separator();
				}
				}
				setState(2292); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2294);
			identifier_result();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Call_usingContext extends ParserRuleContext {
		public TerminalNode USING() { return getToken(cobolParser.USING, 0); }
		public List<Using_argContext> using_arg() {
			return getRuleContexts(Using_argContext.class);
		}
		public Using_argContext using_arg(int i) {
			return getRuleContext(Using_argContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Call_usingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_call_using; }
	}

	public final Call_usingContext call_using() throws RecognitionException {
		Call_usingContext _localctx = new Call_usingContext(_ctx, getState());
		enterRule(_localctx, 136, RULE_call_using);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2296);
			match(USING);
			setState(2304); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2298); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2297);
						separator();
						}
						}
						setState(2300); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2302);
					using_arg();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2306); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,306,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Using_argContext extends ParserRuleContext {
		public TerminalNode OMITTED() { return getToken(cobolParser.OMITTED, 0); }
		public List<ArgumentContext> argument() {
			return getRuleContexts(ArgumentContext.class);
		}
		public ArgumentContext argument(int i) {
			return getRuleContext(ArgumentContext.class,i);
		}
		public Using_prefixContext using_prefix() {
			return getRuleContext(Using_prefixContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Using_argContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_using_arg; }
	}

	public final Using_argContext using_arg() throws RecognitionException {
		Using_argContext _localctx = new Using_argContext(_ctx, getState());
		enterRule(_localctx, 138, RULE_using_arg);
		int _la;
		try {
			int _alt;
			setState(2330);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case OMITTED:
				enterOuterAlt(_localctx, 1);
				{
				setState(2308);
				match(OMITTED);
				}
				break;
			case BY:
			case CONTENT:
			case DESCRIPTOR:
			case REFERENCE:
			case VALUE:
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(2315);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY || _la==CONTENT || _la==DESCRIPTOR || _la==REFERENCE || _la==VALUE) {
					{
					setState(2309);
					using_prefix();
					setState(2311); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2310);
						separator();
						}
						}
						setState(2313); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(2317);
				argument();
				setState(2327);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,310,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(2319); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2318);
							separator();
							}
							}
							setState(2321); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(2323);
						argument();
						}
						} 
					}
					setState(2329);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,310,_ctx);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Using_prefixContext extends ParserRuleContext {
		public TerminalNode REFERENCE() { return getToken(cobolParser.REFERENCE, 0); }
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CONTENT() { return getToken(cobolParser.CONTENT, 0); }
		public TerminalNode DESCRIPTOR() { return getToken(cobolParser.DESCRIPTOR, 0); }
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public Using_prefixContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_using_prefix; }
	}

	public final Using_prefixContext using_prefix() throws RecognitionException {
		Using_prefixContext _localctx = new Using_prefixContext(_ctx, getState());
		enterRule(_localctx, 140, RULE_using_prefix);
		int _la;
		try {
			setState(2368);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,320,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2338);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY) {
					{
					setState(2332);
					match(BY);
					setState(2334); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2333);
						separator();
						}
						}
						setState(2336); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(2340);
				match(REFERENCE);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2347);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY) {
					{
					setState(2341);
					match(BY);
					setState(2343); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2342);
						separator();
						}
						}
						setState(2345); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(2349);
				match(CONTENT);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(2356);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY) {
					{
					setState(2350);
					match(BY);
					setState(2352); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2351);
						separator();
						}
						}
						setState(2354); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(2358);
				match(DESCRIPTOR);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(2365);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY) {
					{
					setState(2359);
					match(BY);
					setState(2361); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2360);
						separator();
						}
						}
						setState(2363); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(2367);
				match(VALUE);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArgumentContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public ArgumentContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_argument; }
	}

	public final ArgumentContext argument() throws RecognitionException {
		ArgumentContext _localctx = new ArgumentContext(_ctx, getState());
		enterRule(_localctx, 142, RULE_argument);
		try {
			setState(2373);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(2370);
				qualified_data_item();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(2371);
				match(NUMERIC_LITERAL);
				}
				break;
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 3);
				{
				setState(2372);
				match(STRING_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Prog_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Prog_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prog_name; }
	}

	public final Prog_nameContext prog_name() throws RecognitionException {
		Prog_nameContext _localctx = new Prog_nameContext(_ctx, getState());
		enterRule(_localctx, 144, RULE_prog_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2375);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alter_statementContext extends ParserRuleContext {
		public TerminalNode ALTER() { return getToken(cobolParser.ALTER, 0); }
		public List<Alter_procContext> alter_proc() {
			return getRuleContexts(Alter_procContext.class);
		}
		public Alter_procContext alter_proc(int i) {
			return getRuleContext(Alter_procContext.class,i);
		}
		public List<TerminalNode> TO() { return getTokens(cobolParser.TO); }
		public TerminalNode TO(int i) {
			return getToken(cobolParser.TO, i);
		}
		public List<Alter_new_procContext> alter_new_proc() {
			return getRuleContexts(Alter_new_procContext.class);
		}
		public Alter_new_procContext alter_new_proc(int i) {
			return getRuleContext(Alter_new_procContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> PROCEED() { return getTokens(cobolParser.PROCEED); }
		public TerminalNode PROCEED(int i) {
			return getToken(cobolParser.PROCEED, i);
		}
		public Alter_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alter_statement; }
	}

	public final Alter_statementContext alter_statement() throws RecognitionException {
		Alter_statementContext _localctx = new Alter_statementContext(_ctx, getState());
		enterRule(_localctx, 146, RULE_alter_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2377);
			match(ALTER);
			setState(2411); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2379); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2378);
						separator();
						}
						}
						setState(2381); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2383);
					alter_proc();
					setState(2385); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2384);
						separator();
						}
						}
						setState(2387); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2389);
					match(TO);
					setState(2391); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2390);
						separator();
						}
						}
						setState(2393); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2407);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==PROCEED) {
						{
						setState(2395);
						match(PROCEED);
						setState(2397); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2396);
							separator();
							}
							}
							setState(2399); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(2401);
						match(TO);
						setState(2403); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2402);
							separator();
							}
							}
							setState(2405); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					setState(2409);
					alter_new_proc();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2413); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,328,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alter_new_procContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Alter_new_procContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alter_new_proc; }
	}

	public final Alter_new_procContext alter_new_proc() throws RecognitionException {
		Alter_new_procContext _localctx = new Alter_new_procContext(_ctx, getState());
		enterRule(_localctx, 148, RULE_alter_new_proc);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2415);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alter_procContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Alter_procContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alter_proc; }
	}

	public final Alter_procContext alter_proc() throws RecognitionException {
		Alter_procContext _localctx = new Alter_procContext(_ctx, getState());
		enterRule(_localctx, 150, RULE_alter_proc);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2417);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Add_statementContext extends ParserRuleContext {
		public TerminalNode ADD() { return getToken(cobolParser.ADD, 0); }
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public List<Add_grpContext> add_grp() {
			return getRuleContexts(Add_grpContext.class);
		}
		public Add_grpContext add_grp(int i) {
			return getRuleContext(Add_grpContext.class,i);
		}
		public TerminalNode CORR() { return getToken(cobolParser.CORR, 0); }
		public TerminalNode CORRESPONDING() { return getToken(cobolParser.CORRESPONDING, 0); }
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_ADD() { return getToken(cobolParser.END_ADD, 0); }
		public List<Add_numContext> add_num() {
			return getRuleContexts(Add_numContext.class);
		}
		public Add_numContext add_num(int i) {
			return getRuleContext(Add_numContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Identifier_resultContext> identifier_result() {
			return getRuleContexts(Identifier_resultContext.class);
		}
		public Identifier_resultContext identifier_result(int i) {
			return getRuleContext(Identifier_resultContext.class,i);
		}
		public List<TerminalNode> ROUNDED() { return getTokens(cobolParser.ROUNDED); }
		public TerminalNode ROUNDED(int i) {
			return getToken(cobolParser.ROUNDED, i);
		}
		public Add_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_add_statement; }
	}

	public final Add_statementContext add_statement() throws RecognitionException {
		Add_statementContext _localctx = new Add_statementContext(_ctx, getState());
		enterRule(_localctx, 152, RULE_add_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2548);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,353,_ctx) ) {
			case 1:
				{
				setState(2419);
				match(ADD);
				setState(2427); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(2421); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2420);
							separator();
							}
							}
							setState(2423); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(2425);
						add_num();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(2429); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,330,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				setState(2432); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2431);
					separator();
					}
					}
					setState(2434); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2436);
				match(TO);
				setState(2452); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(2438); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2437);
							separator();
							}
							}
							setState(2440); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(2442);
						identifier_result();
						setState(2450);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,334,_ctx) ) {
						case 1:
							{
							setState(2444); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2443);
								separator();
								}
								}
								setState(2446); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
							setState(2448);
							match(ROUNDED);
							}
							break;
						}
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(2454); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,335,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				break;
			case 2:
				{
				setState(2456);
				match(ADD);
				setState(2466);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,337,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(2458); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2457);
							separator();
							}
							}
							setState(2460); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(2462);
						add_num();
						}
						} 
					}
					setState(2468);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,337,_ctx);
				}
				setState(2476);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,339,_ctx) ) {
				case 1:
					{
					setState(2470); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2469);
						separator();
						}
						}
						setState(2472); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2474);
					match(TO);
					}
					break;
				}
				setState(2485); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(2479); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2478);
							separator();
							}
							}
							setState(2481); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(2483);
						add_num();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(2487); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,341,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				setState(2490); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2489);
					separator();
					}
					}
					setState(2492); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2494);
				match(GIVING);
				setState(2510); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(2496); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2495);
							separator();
							}
							}
							setState(2498); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(2500);
						identifier_result();
						setState(2508);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,345,_ctx) ) {
						case 1:
							{
							setState(2502); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2501);
								separator();
								}
								}
								setState(2504); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
							setState(2506);
							match(ROUNDED);
							}
							break;
						}
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(2512); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,346,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				break;
			case 3:
				{
				setState(2514);
				match(ADD);
				setState(2516); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2515);
					separator();
					}
					}
					setState(2518); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2520);
				_la = _input.LA(1);
				if ( !(_la==CORR || _la==CORRESPONDING) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(2522); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2521);
					separator();
					}
					}
					setState(2524); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2526);
				add_grp();
				setState(2528); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2527);
					separator();
					}
					}
					setState(2530); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2532);
				match(TO);
				setState(2534); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2533);
					separator();
					}
					}
					setState(2536); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2538);
				add_grp();
				setState(2546);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,352,_ctx) ) {
				case 1:
					{
					setState(2540); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2539);
						separator();
						}
						}
						setState(2542); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2544);
					match(ROUNDED);
					}
					break;
				}
				}
				break;
			}
			setState(2557);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,355,_ctx) ) {
			case 1:
				{
				setState(2551); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2550);
					separator();
					}
					}
					setState(2553); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2555);
				on_size_variants();
				}
				break;
			}
			setState(2566);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,357,_ctx) ) {
			case 1:
				{
				setState(2560); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2559);
					separator();
					}
					}
					setState(2562); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2564);
				match(END_ADD);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Add_grpContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Add_grpContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_add_grp; }
	}

	public final Add_grpContext add_grp() throws RecognitionException {
		Add_grpContext _localctx = new Add_grpContext(_ctx, getState());
		enterRule(_localctx, 154, RULE_add_grp);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2568);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Add_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public Add_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_add_num; }
	}

	public final Add_numContext add_num() throws RecognitionException {
		Add_numContext _localctx = new Add_numContext(_ctx, getState());
		enterRule(_localctx, 156, RULE_add_num);
		try {
			setState(2572);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(2570);
				match(NUMERIC_LITERAL);
				}
				break;
			case FUNCTION:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(2571);
				identifier();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_statementContext extends ParserRuleContext {
		public Accept_form1Context accept_form1() {
			return getRuleContext(Accept_form1Context.class,0);
		}
		public Accept_form2Context accept_form2() {
			return getRuleContext(Accept_form2Context.class,0);
		}
		public Accept_form3Context accept_form3() {
			return getRuleContext(Accept_form3Context.class,0);
		}
		public Accept_form4Context accept_form4() {
			return getRuleContext(Accept_form4Context.class,0);
		}
		public Accept_form5Context accept_form5() {
			return getRuleContext(Accept_form5Context.class,0);
		}
		public Accept_form6Context accept_form6() {
			return getRuleContext(Accept_form6Context.class,0);
		}
		public Accept_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_statement; }
	}

	public final Accept_statementContext accept_statement() throws RecognitionException {
		Accept_statementContext _localctx = new Accept_statementContext(_ctx, getState());
		enterRule(_localctx, 158, RULE_accept_statement);
		try {
			setState(2580);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,359,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2574);
				accept_form1();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2575);
				accept_form2();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(2576);
				accept_form3();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(2577);
				accept_form4();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(2578);
				accept_form5();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(2579);
				accept_form6();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_exception_variantsContext extends ParserRuleContext {
		public List<On_exceptionContext> on_exception() {
			return getRuleContexts(On_exceptionContext.class);
		}
		public On_exceptionContext on_exception(int i) {
			return getRuleContext(On_exceptionContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_exception_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_exception_variants; }
	}

	public final On_exception_variantsContext on_exception_variants() throws RecognitionException {
		On_exception_variantsContext _localctx = new On_exception_variantsContext(_ctx, getState());
		enterRule(_localctx, 160, RULE_on_exception_variants);
		int _la;
		try {
			setState(2614);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case EXCEPTION:
			case ON:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(2582);
				on_exception();
				setState(2596);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,362,_ctx) ) {
				case 1:
					{
					setState(2584); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2583);
						separator();
						}
						}
						setState(2586); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2588);
					match(NOT);
					setState(2590); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2589);
						separator();
						}
						}
						setState(2592); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2594);
					on_exception();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(2598);
				match(NOT);
				setState(2600); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2599);
					separator();
					}
					}
					setState(2602); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2604);
				on_exception();
				setState(2612);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,365,_ctx) ) {
				case 1:
					{
					setState(2606); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2605);
						separator();
						}
						}
						setState(2608); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2610);
					on_exception();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_end_variantsContext extends ParserRuleContext {
		public List<At_endContext> at_end() {
			return getRuleContexts(At_endContext.class);
		}
		public At_endContext at_end(int i) {
			return getRuleContext(At_endContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_end_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_end_variants; }
	}

	public final At_end_variantsContext at_end_variants() throws RecognitionException {
		At_end_variantsContext _localctx = new At_end_variantsContext(_ctx, getState());
		enterRule(_localctx, 162, RULE_at_end_variants);
		int _la;
		try {
			setState(2648);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case AT:
			case END:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(2616);
				at_end();
				setState(2630);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,369,_ctx) ) {
				case 1:
					{
					setState(2618); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2617);
						separator();
						}
						}
						setState(2620); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2622);
					match(NOT);
					setState(2624); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2623);
						separator();
						}
						}
						setState(2626); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2628);
					at_end();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(2632);
				match(NOT);
				setState(2634); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2633);
					separator();
					}
					}
					setState(2636); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2638);
				at_end();
				setState(2646);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,372,_ctx) ) {
				case 1:
					{
					setState(2640); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2639);
						separator();
						}
						}
						setState(2642); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2644);
					at_end();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_size_variantsContext extends ParserRuleContext {
		public List<On_sizeContext> on_size() {
			return getRuleContexts(On_sizeContext.class);
		}
		public On_sizeContext on_size(int i) {
			return getRuleContext(On_sizeContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_size_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_size_variants; }
	}

	public final On_size_variantsContext on_size_variants() throws RecognitionException {
		On_size_variantsContext _localctx = new On_size_variantsContext(_ctx, getState());
		enterRule(_localctx, 164, RULE_on_size_variants);
		int _la;
		try {
			setState(2682);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ON:
			case SIZE:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(2650);
				on_size();
				setState(2664);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,376,_ctx) ) {
				case 1:
					{
					setState(2652); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2651);
						separator();
						}
						}
						setState(2654); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2656);
					match(NOT);
					setState(2658); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2657);
						separator();
						}
						}
						setState(2660); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2662);
					on_size();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(2666);
				match(NOT);
				setState(2668); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2667);
					separator();
					}
					}
					setState(2670); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2672);
				on_size();
				setState(2680);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,379,_ctx) ) {
				case 1:
					{
					setState(2674); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2673);
						separator();
						}
						}
						setState(2676); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2678);
					on_size();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_key_variantsContext extends ParserRuleContext {
		public List<On_keyContext> on_key() {
			return getRuleContexts(On_keyContext.class);
		}
		public On_keyContext on_key(int i) {
			return getRuleContext(On_keyContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_key_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_key_variants; }
	}

	public final On_key_variantsContext on_key_variants() throws RecognitionException {
		On_key_variantsContext _localctx = new On_key_variantsContext(_ctx, getState());
		enterRule(_localctx, 166, RULE_on_key_variants);
		int _la;
		try {
			setState(2716);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case INVALID:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(2684);
				on_key();
				setState(2698);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,383,_ctx) ) {
				case 1:
					{
					setState(2686); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2685);
						separator();
						}
						}
						setState(2688); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2690);
					match(NOT);
					setState(2692); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2691);
						separator();
						}
						}
						setState(2694); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2696);
					on_key();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(2700);
				match(NOT);
				setState(2702); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2701);
					separator();
					}
					}
					setState(2704); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2706);
				on_key();
				setState(2714);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,386,_ctx) ) {
				case 1:
					{
					setState(2708); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2707);
						separator();
						}
						}
						setState(2710); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2712);
					on_key();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form6Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public Accept6_itemContext accept6_item() {
			return getRuleContext(Accept6_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public Accept_form6Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form6; }
	}

	public final Accept_form6Context accept_form6() throws RecognitionException {
		Accept_form6Context _localctx = new Accept_form6Context(_ctx, getState());
		enterRule(_localctx, 168, RULE_accept_form6);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2718);
			match(ACCEPT);
			setState(2720); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2719);
				separator();
				}
				}
				setState(2722); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2724);
			dest_item();
			setState(2726); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2725);
				separator();
				}
				}
				setState(2728); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2736);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FROM) {
				{
				setState(2730);
				match(FROM);
				setState(2732); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2731);
					separator();
					}
					}
					setState(2734); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(2738);
			accept6_item();
			setState(2746);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,393,_ctx) ) {
			case 1:
				{
				setState(2740); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2739);
					separator();
					}
					}
					setState(2742); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2744);
				on_exception_variants();
				}
				break;
			}
			setState(2755);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,395,_ctx) ) {
			case 1:
				{
				setState(2749); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2748);
					separator();
					}
					}
					setState(2751); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2753);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept6_itemContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Accept6_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept6_item; }
	}

	public final Accept6_itemContext accept6_item() throws RecognitionException {
		Accept6_itemContext _localctx = new Accept6_itemContext(_ctx, getState());
		enterRule(_localctx, 170, RULE_accept6_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2757);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form1Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Input_sourceContext input_source() {
			return getRuleContext(Input_sourceContext.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public Accept_form1Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form1; }
	}

	public final Accept_form1Context accept_form1() throws RecognitionException {
		Accept_form1Context _localctx = new Accept_form1Context(_ctx, getState());
		enterRule(_localctx, 172, RULE_accept_form1);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2759);
			match(ACCEPT);
			setState(2761); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2760);
				separator();
				}
				}
				setState(2763); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2765);
			dest_item();
			setState(2779);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,399,_ctx) ) {
			case 1:
				{
				setState(2767); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2766);
					separator();
					}
					}
					setState(2769); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2771);
				match(FROM);
				setState(2773); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2772);
					separator();
					}
					}
					setState(2775); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2777);
				input_source();
				}
				break;
			}
			setState(2794);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,402,_ctx) ) {
			case 1:
				{
				setState(2782); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2781);
					separator();
					}
					}
					setState(2784); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2786);
				match(WITH);
				setState(2788); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2787);
					separator();
					}
					}
					setState(2790); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2792);
				match(CONVERSION);
				}
				break;
			}
			setState(2803);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,404,_ctx) ) {
			case 1:
				{
				setState(2797); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2796);
					separator();
					}
					}
					setState(2799); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2801);
				at_end_variants();
				}
				break;
			}
			setState(2812);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,406,_ctx) ) {
			case 1:
				{
				setState(2806); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2805);
					separator();
					}
					}
					setState(2808); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2810);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form2Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Date_timeContext date_time() {
			return getRuleContext(Date_timeContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Accept_form2Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form2; }
	}

	public final Accept_form2Context accept_form2() throws RecognitionException {
		Accept_form2Context _localctx = new Accept_form2Context(_ctx, getState());
		enterRule(_localctx, 174, RULE_accept_form2);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2814);
			match(ACCEPT);
			setState(2816); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2815);
				separator();
				}
				}
				setState(2818); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2820);
			dest_item();
			setState(2822); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2821);
				separator();
				}
				}
				setState(2824); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2826);
			match(FROM);
			setState(2828); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2827);
				separator();
				}
				}
				setState(2830); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2832);
			date_time();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form3Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Accept_form3_clauseContext> accept_form3_clause() {
			return getRuleContexts(Accept_form3_clauseContext.class);
		}
		public Accept_form3_clauseContext accept_form3_clause(int i) {
			return getRuleContext(Accept_form3_clauseContext.class,i);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public Accept_form3Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form3; }
	}

	public final Accept_form3Context accept_form3() throws RecognitionException {
		Accept_form3Context _localctx = new Accept_form3Context(_ctx, getState());
		enterRule(_localctx, 176, RULE_accept_form3);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2834);
			match(ACCEPT);
			setState(2836); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2835);
				separator();
				}
				}
				setState(2838); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2840);
			dest_item();
			setState(2848); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2842); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2841);
						separator();
						}
						}
						setState(2844); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2846);
					accept_form3_clause();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2850); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,412,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(2861);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,415,_ctx) ) {
			case 1:
				{
				setState(2853); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2852);
					separator();
					}
					}
					setState(2855); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2859);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,414,_ctx) ) {
				case 1:
					{
					setState(2857);
					on_exception_variants();
					}
					break;
				case 2:
					{
					setState(2858);
					at_end_variants();
					}
					break;
				}
				}
				break;
			}
			setState(2870);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,417,_ctx) ) {
			case 1:
				{
				setState(2864); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2863);
					separator();
					}
					}
					setState(2866); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2868);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form4Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Key_dest_itemContext key_dest_item() {
			return getRuleContext(Key_dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public List<Accept_form4_clauseContext> accept_form4_clause() {
			return getRuleContexts(Accept_form4_clauseContext.class);
		}
		public Accept_form4_clauseContext accept_form4_clause(int i) {
			return getRuleContext(Accept_form4_clauseContext.class,i);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public Accept_form4Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form4; }
	}

	public final Accept_form4Context accept_form4() throws RecognitionException {
		Accept_form4Context _localctx = new Accept_form4Context(_ctx, getState());
		enterRule(_localctx, 178, RULE_accept_form4);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2872);
			match(ACCEPT);
			setState(2874); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2873);
				separator();
				}
				}
				setState(2876); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2884);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONTROL) {
				{
				setState(2878);
				match(CONTROL);
				setState(2880); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2879);
					separator();
					}
					}
					setState(2882); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(2886);
			match(KEY);
			setState(2888); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2887);
				separator();
				}
				}
				setState(2890); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2898);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IN) {
				{
				setState(2892);
				match(IN);
				setState(2894); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2893);
					separator();
					}
					}
					setState(2896); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(2900);
			key_dest_item();
			setState(2908); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2902); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2901);
						separator();
						}
						}
						setState(2904); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2906);
					accept_form4_clause();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2910); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,425,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(2921);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,428,_ctx) ) {
			case 1:
				{
				setState(2913); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2912);
					separator();
					}
					}
					setState(2915); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2919);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,427,_ctx) ) {
				case 1:
					{
					setState(2917);
					on_exception_variants();
					}
					break;
				case 2:
					{
					setState(2918);
					at_end_variants();
					}
					break;
				}
				}
				break;
			}
			setState(2930);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,430,_ctx) ) {
			case 1:
				{
				setState(2924); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2923);
					separator();
					}
					}
					setState(2926); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2928);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form5Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Screen_nameContext screen_name() {
			return getRuleContext(Screen_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Accept_atContext accept_at() {
			return getRuleContext(Accept_atContext.class,0);
		}
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public Accept_form5Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form5; }
	}

	public final Accept_form5Context accept_form5() throws RecognitionException {
		Accept_form5Context _localctx = new Accept_form5Context(_ctx, getState());
		enterRule(_localctx, 180, RULE_accept_form5);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2932);
			match(ACCEPT);
			setState(2934); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2933);
				separator();
				}
				}
				setState(2936); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(2938);
			screen_name();
			setState(2946);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,433,_ctx) ) {
			case 1:
				{
				setState(2940); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2939);
					separator();
					}
					}
					setState(2942); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2944);
				accept_at();
				}
				break;
			}
			setState(2955);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,435,_ctx) ) {
			case 1:
				{
				setState(2949); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2948);
					separator();
					}
					}
					setState(2951); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2953);
				on_exception_variants();
				}
				break;
			}
			setState(2964);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,437,_ctx) ) {
			case 1:
				{
				setState(2958); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2957);
					separator();
					}
					}
					setState(2960); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(2962);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_atContext extends ParserRuleContext {
		public Accept_at_lineContext accept_at_line() {
			return getRuleContext(Accept_at_lineContext.class,0);
		}
		public Accept_at_columnContext accept_at_column() {
			return getRuleContext(Accept_at_columnContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Accept_atContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_at; }
	}

	public final Accept_atContext accept_at() throws RecognitionException {
		Accept_atContext _localctx = new Accept_atContext(_ctx, getState());
		enterRule(_localctx, 182, RULE_accept_at);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2972);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(2966);
				match(AT);
				setState(2968); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2967);
					separator();
					}
					}
					setState(2970); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(2994);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LINE:
				{
				setState(2974);
				accept_at_line();
				setState(2982);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,441,_ctx) ) {
				case 1:
					{
					setState(2976); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2975);
						separator();
						}
						}
						setState(2978); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2980);
					accept_at_column();
					}
					break;
				}
				}
				break;
			case COLUMN:
				{
				setState(2984);
				accept_at_column();
				setState(2992);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,443,_ctx) ) {
				case 1:
					{
					setState(2986); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2985);
						separator();
						}
						}
						setState(2988); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(2990);
					accept_at_line();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_at_lineContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public Accept_at_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_at_line; }
	}

	public final Accept_at_lineContext accept_at_line() throws RecognitionException {
		Accept_at_lineContext _localctx = new Accept_at_lineContext(_ctx, getState());
		enterRule(_localctx, 184, RULE_accept_at_line);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2996);
			match(LINE);
			setState(2998); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2997);
				separator();
				}
				}
				setState(3000); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3008);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==NUMBER) {
				{
				setState(3002);
				match(NUMBER);
				setState(3004); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3003);
					separator();
					}
					}
					setState(3006); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(3012);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				{
				setState(3010);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				{
				setState(3011);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_at_columnContext extends ParserRuleContext {
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public Accept_at_columnContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_at_column; }
	}

	public final Accept_at_columnContext accept_at_column() throws RecognitionException {
		Accept_at_columnContext _localctx = new Accept_at_columnContext(_ctx, getState());
		enterRule(_localctx, 186, RULE_accept_at_column);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3014);
			match(COLUMN);
			setState(3016); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3015);
				separator();
				}
				}
				setState(3018); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3026);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==NUMBER) {
				{
				setState(3020);
				match(NUMBER);
				setState(3022); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3021);
					separator();
					}
					}
					setState(3024); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(3030);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				{
				setState(3028);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				{
				setState(3029);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form4_clauseContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public Number_valueContext number_value() {
			return getRuleContext(Number_valueContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode ERASE() { return getToken(cobolParser.ERASE, 0); }
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public TerminalNode BELL() { return getToken(cobolParser.BELL, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public Accept_form4_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form4_clause; }
	}

	public final Accept_form4_clauseContext accept_form4_clause() throws RecognitionException {
		Accept_form4_clauseContext _localctx = new Accept_form4_clauseContext(_ctx, getState());
		enterRule(_localctx, 188, RULE_accept_form4_clause);
		int _la;
		try {
			setState(3124);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,472,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3038);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==FROM) {
					{
					setState(3032);
					match(FROM);
					setState(3034); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3033);
						separator();
						}
						}
						setState(3036); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3040);
				match(LINE);
				setState(3048);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,456,_ctx) ) {
				case 1:
					{
					setState(3042); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3041);
						separator();
						}
						}
						setState(3044); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3046);
					match(NUMBER);
					}
					break;
				}
				setState(3051); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3050);
					separator();
					}
					}
					setState(3053); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3055);
				number_value();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3063);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==FROM) {
					{
					setState(3057);
					match(FROM);
					setState(3059); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3058);
						separator();
						}
						}
						setState(3061); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3065);
				match(COLUMN);
				setState(3073);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,461,_ctx) ) {
				case 1:
					{
					setState(3067); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3066);
						separator();
						}
						}
						setState(3069); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3071);
					match(NUMBER);
					}
					break;
				}
				setState(3076); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3075);
					separator();
					}
					}
					setState(3078); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3080);
				number_value();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3082);
				match(ERASE);
				setState(3106);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,468,_ctx) ) {
				case 1:
					{
					setState(3084); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3083);
						separator();
						}
						}
						setState(3086); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3094);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==TO) {
						{
						setState(3088);
						match(TO);
						setState(3090); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3089);
							separator();
							}
							}
							setState(3092); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					setState(3096);
					match(END);
					setState(3104);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,467,_ctx) ) {
					case 1:
						{
						setState(3098); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3097);
							separator();
							}
							}
							setState(3100); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(3102);
						match(OF);
						}
						break;
					}
					}
					break;
				}
				setState(3109); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3108);
					separator();
					}
					}
					setState(3111); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3113);
				_la = _input.LA(1);
				if ( !(_la==LINE || _la==SCREEN) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(3121);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3115);
					match(WITH);
					setState(3117); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3116);
						separator();
						}
						}
						setState(3119); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3123);
				match(BELL);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form3_clauseContext extends ParserRuleContext {
		public Accept_form4_clauseContext accept_form4_clause() {
			return getRuleContext(Accept_form4_clauseContext.class,0);
		}
		public TerminalNode UNDERLINED() { return getToken(cobolParser.UNDERLINED, 0); }
		public TerminalNode BOLD() { return getToken(cobolParser.BOLD, 0); }
		public TerminalNode BLINKING() { return getToken(cobolParser.BLINKING, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode PROTECTED() { return getToken(cobolParser.PROTECTED, 0); }
		public Protected_valueContext protected_value() {
			return getRuleContext(Protected_valueContext.class,0);
		}
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public TerminalNode REVERSED() { return getToken(cobolParser.REVERSED, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode ECHO() { return getToken(cobolParser.ECHO, 0); }
		public TerminalNode DEFAULT() { return getToken(cobolParser.DEFAULT, 0); }
		public Def_valueContext def_value() {
			return getRuleContext(Def_valueContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Key_dest_itemContext key_dest_item() {
			return getRuleContext(Key_dest_itemContext.class,0);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public Accept_form3_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form3_clause; }
	}

	public final Accept_form3_clauseContext accept_form3_clause() throws RecognitionException {
		Accept_form3_clauseContext _localctx = new Accept_form3_clauseContext(_ctx, getState());
		enterRule(_localctx, 190, RULE_accept_form3_clause);
		int _la;
		try {
			setState(3215);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,490,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3126);
				accept_form4_clause();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3127);
				match(UNDERLINED);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3128);
				match(BOLD);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(3135);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3129);
					match(WITH);
					setState(3131); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3130);
						separator();
						}
						}
						setState(3133); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3137);
				match(BLINKING);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(3138);
				match(PROTECTED);
				setState(3146);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,476,_ctx) ) {
				case 1:
					{
					setState(3140); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3139);
						separator();
						}
						}
						setState(3142); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3144);
					protected_value();
					}
					break;
				}
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(3154);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3148);
					match(WITH);
					setState(3150); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3149);
						separator();
						}
						}
						setState(3152); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3156);
				match(CONVERSION);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(3157);
				match(REVERSED);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(3164);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3158);
					match(WITH);
					setState(3160); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3159);
						separator();
						}
						}
						setState(3162); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3166);
				match(NO);
				setState(3168); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3167);
					separator();
					}
					}
					setState(3170); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3172);
				match(ECHO);
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(3174);
				match(DEFAULT);
				setState(3176); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3175);
					separator();
					}
					}
					setState(3178); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3186);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3180);
					match(IS);
					setState(3182); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3181);
						separator();
						}
						}
						setState(3184); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3188);
				def_value();
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(3196);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CONTROL) {
					{
					setState(3190);
					match(CONTROL);
					setState(3192); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3191);
						separator();
						}
						}
						setState(3194); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3198);
				match(KEY);
				setState(3206);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,488,_ctx) ) {
				case 1:
					{
					setState(3200); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3199);
						separator();
						}
						}
						setState(3202); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3204);
					match(IN);
					}
					break;
				}
				setState(3209); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3208);
					separator();
					}
					}
					setState(3211); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3213);
				key_dest_item();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Key_dest_itemContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Key_dest_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_key_dest_item; }
	}

	public final Key_dest_itemContext key_dest_item() throws RecognitionException {
		Key_dest_itemContext _localctx = new Key_dest_itemContext(_ctx, getState());
		enterRule(_localctx, 192, RULE_key_dest_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3217);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Def_valueContext extends ParserRuleContext {
		public Figurative_constantContext figurative_constant() {
			return getRuleContext(Figurative_constantContext.class,0);
		}
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode CURRENT() { return getToken(cobolParser.CURRENT, 0); }
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Def_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_def_value; }
	}

	public final Def_valueContext def_value() throws RecognitionException {
		Def_valueContext _localctx = new Def_valueContext(_ctx, getState());
		enterRule(_localctx, 194, RULE_def_value);
		int _la;
		try {
			setState(3232);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
				enterOuterAlt(_localctx, 1);
				{
				setState(3219);
				figurative_constant();
				}
				break;
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(3220);
				match(STRING_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 3);
				{
				setState(3221);
				qualified_data_item();
				}
				break;
			case CURRENT:
				enterOuterAlt(_localctx, 4);
				{
				setState(3222);
				match(CURRENT);
				setState(3230);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,492,_ctx) ) {
				case 1:
					{
					setState(3224); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3223);
						separator();
						}
						}
						setState(3226); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3228);
					match(VALUE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Protected_valueContext extends ParserRuleContext {
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public Prot_size_valueContext prot_size_value() {
			return getRuleContext(Prot_size_valueContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode AUTOTERMINATE() { return getToken(cobolParser.AUTOTERMINATE, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode EDITING() { return getToken(cobolParser.EDITING, 0); }
		public TerminalNode FILLER() { return getToken(cobolParser.FILLER, 0); }
		public Prot_fill_litContext prot_fill_lit() {
			return getRuleContext(Prot_fill_litContext.class,0);
		}
		public Protected_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_protected_value; }
	}

	public final Protected_valueContext protected_value() throws RecognitionException {
		Protected_valueContext _localctx = new Protected_valueContext(_ctx, getState());
		enterRule(_localctx, 196, RULE_protected_value);
		int _la;
		try {
			setState(3292);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,505,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3234);
				match(SIZE);
				setState(3236); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3235);
					separator();
					}
					}
					setState(3238); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3240);
				prot_size_value();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3248);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3242);
					match(WITH);
					setState(3244); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3243);
						separator();
						}
						}
						setState(3246); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3250);
				match(AUTOTERMINATE);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3257);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3251);
					match(WITH);
					setState(3253); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3252);
						separator();
						}
						}
						setState(3255); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3259);
				match(NO);
				setState(3261); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3260);
					separator();
					}
					}
					setState(3263); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3265);
				match(BLANK);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(3273);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3267);
					match(WITH);
					setState(3269); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3268);
						separator();
						}
						}
						setState(3271); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3275);
				match(EDITING);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(3282);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3276);
					match(WITH);
					setState(3278); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3277);
						separator();
						}
						}
						setState(3280); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3284);
				match(FILLER);
				setState(3286); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3285);
					separator();
					}
					}
					setState(3288); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3290);
				prot_fill_lit();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Prot_fill_litContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Prot_fill_litContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prot_fill_lit; }
	}

	public final Prot_fill_litContext prot_fill_lit() throws RecognitionException {
		Prot_fill_litContext _localctx = new Prot_fill_litContext(_ctx, getState());
		enterRule(_localctx, 198, RULE_prot_fill_lit);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3294);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Prot_size_valueContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Prot_size_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prot_size_value; }
	}

	public final Prot_size_valueContext prot_size_value() throws RecognitionException {
		Prot_size_valueContext _localctx = new Prot_size_valueContext(_ctx, getState());
		enterRule(_localctx, 200, RULE_prot_size_value);
		try {
			setState(3298);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(3296);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(3297);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Number_valueContext extends ParserRuleContext {
		public Line_numContext line_num() {
			return getRuleContext(Line_numContext.class,0);
		}
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Number_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_number_value; }
	}

	public final Number_valueContext number_value() throws RecognitionException {
		Number_valueContext _localctx = new Number_valueContext(_ctx, getState());
		enterRule(_localctx, 202, RULE_number_value);
		int _la;
		try {
			setState(3329);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(3300);
				line_num();
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(3301);
				qualified_data_item();
				setState(3317);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,510,_ctx) ) {
				case 1:
					{
					setState(3303); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3302);
						separator();
						}
						}
						setState(3305); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3307);
					match(PLUS);
					setState(3315);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,509,_ctx) ) {
					case 1:
						{
						setState(3309); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3308);
							separator();
							}
							}
							setState(3311); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(3313);
						line_num();
						}
						break;
					}
					}
					break;
				}
				}
				break;
			case PLUS:
				enterOuterAlt(_localctx, 3);
				{
				setState(3319);
				match(PLUS);
				setState(3327);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,512,_ctx) ) {
				case 1:
					{
					setState(3321); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3320);
						separator();
						}
						}
						setState(3323); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3325);
					line_num();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Date_timeContext extends ParserRuleContext {
		public TerminalNode DATE() { return getToken(cobolParser.DATE, 0); }
		public TerminalNode YYYYMMDD() { return getToken(cobolParser.YYYYMMDD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode DAY() { return getToken(cobolParser.DAY, 0); }
		public TerminalNode YYYYDDD() { return getToken(cobolParser.YYYYDDD, 0); }
		public TerminalNode DAY_OF_WEEK() { return getToken(cobolParser.DAY_OF_WEEK, 0); }
		public TerminalNode TIME() { return getToken(cobolParser.TIME, 0); }
		public Date_timeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_date_time; }
	}

	public final Date_timeContext date_time() throws RecognitionException {
		Date_timeContext _localctx = new Date_timeContext(_ctx, getState());
		enterRule(_localctx, 204, RULE_date_time);
		int _la;
		try {
			setState(3353);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DATE:
				enterOuterAlt(_localctx, 1);
				{
				setState(3331);
				match(DATE);
				setState(3339);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,515,_ctx) ) {
				case 1:
					{
					setState(3333); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3332);
						separator();
						}
						}
						setState(3335); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3337);
					match(YYYYMMDD);
					}
					break;
				}
				}
				break;
			case DAY:
				enterOuterAlt(_localctx, 2);
				{
				setState(3341);
				match(DAY);
				setState(3349);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,517,_ctx) ) {
				case 1:
					{
					setState(3343); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3342);
						separator();
						}
						}
						setState(3345); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3347);
					match(YYYYDDD);
					}
					break;
				}
				}
				break;
			case DAY_OF_WEEK:
				enterOuterAlt(_localctx, 3);
				{
				setState(3351);
				match(DAY_OF_WEEK);
				}
				break;
			case TIME:
				enterOuterAlt(_localctx, 4);
				{
				setState(3352);
				match(TIME);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Dest_itemContext extends ParserRuleContext {
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public Dest_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_dest_item; }
	}

	public final Dest_itemContext dest_item() throws RecognitionException {
		Dest_itemContext _localctx = new Dest_itemContext(_ctx, getState());
		enterRule(_localctx, 206, RULE_dest_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3355);
			identifier_result();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Input_sourceContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Input_sourceContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_input_source; }
	}

	public final Input_sourceContext input_source() throws RecognitionException {
		Input_sourceContext _localctx = new Input_sourceContext(_ctx, getState());
		enterRule(_localctx, 208, RULE_input_source);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3357);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_endContext extends ParserRuleContext {
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public SentenseContext sentense() {
			return getRuleContext(SentenseContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_endContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_end; }
	}

	public final At_endContext at_end() throws RecognitionException {
		At_endContext _localctx = new At_endContext(_ctx, getState());
		enterRule(_localctx, 210, RULE_at_end);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3365);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(3359);
				match(AT);
				setState(3361); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3360);
					separator();
					}
					}
					setState(3363); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(3367);
			match(END);
			setState(3375);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,522,_ctx) ) {
			case 1:
				{
				setState(3369); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3368);
					separator();
					}
					}
					setState(3371); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3373);
				sentense();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_exceptionContext extends ParserRuleContext {
		public TerminalNode EXCEPTION() { return getToken(cobolParser.EXCEPTION, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public SentenseContext sentense() {
			return getRuleContext(SentenseContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_exceptionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_exception; }
	}

	public final On_exceptionContext on_exception() throws RecognitionException {
		On_exceptionContext _localctx = new On_exceptionContext(_ctx, getState());
		enterRule(_localctx, 212, RULE_on_exception);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3383);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ON) {
				{
				setState(3377);
				match(ON);
				setState(3379); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3378);
					separator();
					}
					}
					setState(3381); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(3385);
			match(EXCEPTION);
			setState(3393);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,526,_ctx) ) {
			case 1:
				{
				setState(3387); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3386);
					separator();
					}
					}
					setState(3389); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3391);
				sentense();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_sizeContext extends ParserRuleContext {
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public TerminalNode ERROR() { return getToken(cobolParser.ERROR, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public SentenseContext sentense() {
			return getRuleContext(SentenseContext.class,0);
		}
		public On_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_size; }
	}

	public final On_sizeContext on_size() throws RecognitionException {
		On_sizeContext _localctx = new On_sizeContext(_ctx, getState());
		enterRule(_localctx, 214, RULE_on_size);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3401);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ON) {
				{
				setState(3395);
				match(ON);
				setState(3397); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3396);
					separator();
					}
					}
					setState(3399); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(3403);
			match(SIZE);
			setState(3405); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3404);
				separator();
				}
				}
				setState(3407); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3409);
			match(ERROR);
			setState(3417);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,531,_ctx) ) {
			case 1:
				{
				setState(3411); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3410);
					separator();
					}
					}
					setState(3413); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3415);
				sentense();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_keyContext extends ParserRuleContext {
		public TerminalNode INVALID() { return getToken(cobolParser.INVALID, 0); }
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public SentenseContext sentense() {
			return getRuleContext(SentenseContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_keyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_key; }
	}

	public final On_keyContext on_key() throws RecognitionException {
		On_keyContext _localctx = new On_keyContext(_ctx, getState());
		enterRule(_localctx, 216, RULE_on_key);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3419);
			match(INVALID);
			setState(3427);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,533,_ctx) ) {
			case 1:
				{
				setState(3421); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3420);
					separator();
					}
					}
					setState(3423); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3425);
				match(KEY);
				}
				break;
			}
			setState(3436);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,535,_ctx) ) {
			case 1:
				{
				setState(3430); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3429);
					separator();
					}
					}
					setState(3432); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3434);
				sentense();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_divisionContext extends ParserRuleContext {
		public TerminalNode DATA() { return getToken(cobolParser.DATA, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public File_sectionContext file_section() {
			return getRuleContext(File_sectionContext.class,0);
		}
		public Working_storage_sectionContext working_storage_section() {
			return getRuleContext(Working_storage_sectionContext.class,0);
		}
		public Linkage_sectionContext linkage_section() {
			return getRuleContext(Linkage_sectionContext.class,0);
		}
		public Report_sectionContext report_section() {
			return getRuleContext(Report_sectionContext.class,0);
		}
		public Screen_sectionContext screen_section() {
			return getRuleContext(Screen_sectionContext.class,0);
		}
		public Data_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_division; }
	}

	public final Data_divisionContext data_division() throws RecognitionException {
		Data_divisionContext _localctx = new Data_divisionContext(_ctx, getState());
		enterRule(_localctx, 218, RULE_data_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3438);
			match(DATA);
			setState(3440); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3439);
				separator();
				}
				}
				setState(3442); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3444);
			match(DIVISION);
			setState(3448);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(3445);
				separator();
				}
				}
				setState(3450);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3451);
			match(DOT_);
			setState(3455);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,538,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3452);
					separator();
					}
					} 
				}
				setState(3457);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,538,_ctx);
			}
			setState(3465);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE) {
				{
				setState(3458);
				file_section();
				setState(3462);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,539,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3459);
						separator();
						}
						} 
					}
					setState(3464);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,539,_ctx);
				}
				}
			}

			setState(3474);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WORKING_STORAGE) {
				{
				setState(3467);
				working_storage_section();
				setState(3471);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,541,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3468);
						separator();
						}
						} 
					}
					setState(3473);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,541,_ctx);
				}
				}
			}

			setState(3483);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==LINKAGE) {
				{
				setState(3476);
				linkage_section();
				setState(3480);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,543,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3477);
						separator();
						}
						} 
					}
					setState(3482);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,543,_ctx);
				}
				}
			}

			setState(3492);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==REPORT) {
				{
				setState(3485);
				report_section();
				setState(3489);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,545,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3486);
						separator();
						}
						} 
					}
					setState(3491);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,545,_ctx);
				}
				}
			}

			setState(3501);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SCREEN) {
				{
				setState(3494);
				screen_section();
				setState(3498);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,547,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3495);
						separator();
						}
						} 
					}
					setState(3500);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,547,_ctx);
				}
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_sectionContext extends ParserRuleContext {
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<File_description_entryContext> file_description_entry() {
			return getRuleContexts(File_description_entryContext.class);
		}
		public File_description_entryContext file_description_entry(int i) {
			return getRuleContext(File_description_entryContext.class,i);
		}
		public List<Report_description_entryContext> report_description_entry() {
			return getRuleContexts(Report_description_entryContext.class);
		}
		public Report_description_entryContext report_description_entry(int i) {
			return getRuleContext(Report_description_entryContext.class,i);
		}
		public List<Sort_merge_file_description_entryContext> sort_merge_file_description_entry() {
			return getRuleContexts(Sort_merge_file_description_entryContext.class);
		}
		public Sort_merge_file_description_entryContext sort_merge_file_description_entry(int i) {
			return getRuleContext(Sort_merge_file_description_entryContext.class,i);
		}
		public List<Record_description_entryContext> record_description_entry() {
			return getRuleContexts(Record_description_entryContext.class);
		}
		public Record_description_entryContext record_description_entry(int i) {
			return getRuleContext(Record_description_entryContext.class,i);
		}
		public File_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_section; }
	}

	public final File_sectionContext file_section() throws RecognitionException {
		File_sectionContext _localctx = new File_sectionContext(_ctx, getState());
		enterRule(_localctx, 220, RULE_file_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3503);
			match(FILE);
			setState(3505); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3504);
				separator();
				}
				}
				setState(3507); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3509);
			match(SECTION);
			setState(3513);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(3510);
				separator();
				}
				}
				setState(3515);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3516);
			match(DOT_);
			setState(3520);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,551,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3517);
					separator();
					}
					} 
				}
				setState(3522);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,551,_ctx);
			}
			setState(3560);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==FD || _la==RD || _la==SD) {
				{
				{
				setState(3550);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case FD:
					{
					setState(3523);
					file_description_entry();
					setState(3533);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,553,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(3527);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
								{
								{
								setState(3524);
								separator();
								}
								}
								setState(3529);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(3530);
							record_description_entry();
							}
							} 
						}
						setState(3535);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,553,_ctx);
					}
					}
					break;
				case RD:
					{
					setState(3536);
					report_description_entry();
					}
					break;
				case SD:
					{
					setState(3537);
					sort_merge_file_description_entry();
					setState(3547);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,555,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(3541);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
								{
								{
								setState(3538);
								separator();
								}
								}
								setState(3543);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(3544);
							record_description_entry();
							}
							} 
						}
						setState(3549);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,555,_ctx);
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(3555);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,557,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3552);
						separator();
						}
						} 
					}
					setState(3557);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,557,_ctx);
				}
				}
				}
				setState(3562);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Working_storage_sectionContext extends ParserRuleContext {
		public TerminalNode WORKING_STORAGE() { return getToken(cobolParser.WORKING_STORAGE, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Record_description_entryContext> record_description_entry() {
			return getRuleContexts(Record_description_entryContext.class);
		}
		public Record_description_entryContext record_description_entry(int i) {
			return getRuleContext(Record_description_entryContext.class,i);
		}
		public Working_storage_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_working_storage_section; }
	}

	public final Working_storage_sectionContext working_storage_section() throws RecognitionException {
		Working_storage_sectionContext _localctx = new Working_storage_sectionContext(_ctx, getState());
		enterRule(_localctx, 222, RULE_working_storage_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3563);
			match(WORKING_STORAGE);
			setState(3565); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3564);
				separator();
				}
				}
				setState(3567); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3569);
			match(SECTION);
			setState(3573);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(3570);
				separator();
				}
				}
				setState(3575);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3576);
			match(DOT_);
			setState(3580);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,561,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3577);
					separator();
					}
					} 
				}
				setState(3582);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,561,_ctx);
			}
			setState(3592);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==NUMERIC_LITERAL) {
				{
				{
				setState(3583);
				record_description_entry();
				setState(3587);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,562,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3584);
						separator();
						}
						} 
					}
					setState(3589);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,562,_ctx);
				}
				}
				}
				setState(3594);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Linkage_sectionContext extends ParserRuleContext {
		public TerminalNode LINKAGE() { return getToken(cobolParser.LINKAGE, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Record_description_entryContext> record_description_entry() {
			return getRuleContexts(Record_description_entryContext.class);
		}
		public Record_description_entryContext record_description_entry(int i) {
			return getRuleContext(Record_description_entryContext.class,i);
		}
		public Linkage_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_linkage_section; }
	}

	public final Linkage_sectionContext linkage_section() throws RecognitionException {
		Linkage_sectionContext _localctx = new Linkage_sectionContext(_ctx, getState());
		enterRule(_localctx, 224, RULE_linkage_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3595);
			match(LINKAGE);
			setState(3597); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3596);
				separator();
				}
				}
				setState(3599); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3601);
			match(SECTION);
			setState(3605);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(3602);
				separator();
				}
				}
				setState(3607);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3608);
			match(DOT_);
			setState(3612);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,566,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3609);
					separator();
					}
					} 
				}
				setState(3614);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,566,_ctx);
			}
			setState(3624);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==NUMERIC_LITERAL) {
				{
				{
				setState(3615);
				record_description_entry();
				setState(3619);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,567,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3616);
						separator();
						}
						} 
					}
					setState(3621);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,567,_ctx);
				}
				}
				}
				setState(3626);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_sectionContext extends ParserRuleContext {
		public TerminalNode REPORT() { return getToken(cobolParser.REPORT, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Report_description_entryContext> report_description_entry() {
			return getRuleContexts(Report_description_entryContext.class);
		}
		public Report_description_entryContext report_description_entry(int i) {
			return getRuleContext(Report_description_entryContext.class,i);
		}
		public List<Report_group_description_entryContext> report_group_description_entry() {
			return getRuleContexts(Report_group_description_entryContext.class);
		}
		public Report_group_description_entryContext report_group_description_entry(int i) {
			return getRuleContext(Report_group_description_entryContext.class,i);
		}
		public Report_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_section; }
	}

	public final Report_sectionContext report_section() throws RecognitionException {
		Report_sectionContext _localctx = new Report_sectionContext(_ctx, getState());
		enterRule(_localctx, 226, RULE_report_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3627);
			match(REPORT);
			setState(3629); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3628);
				separator();
				}
				}
				setState(3631); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3633);
			match(SECTION);
			setState(3637);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(3634);
				separator();
				}
				}
				setState(3639);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3640);
			match(DOT_);
			setState(3644);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,571,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3641);
					separator();
					}
					} 
				}
				setState(3646);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,571,_ctx);
			}
			setState(3668);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==RD) {
				{
				{
				setState(3647);
				report_description_entry();
				setState(3657);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,573,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3651);
						_errHandler.sync(this);
						_la = _input.LA(1);
						while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
							{
							{
							setState(3648);
							separator();
							}
							}
							setState(3653);
							_errHandler.sync(this);
							_la = _input.LA(1);
						}
						setState(3654);
						report_group_description_entry();
						}
						} 
					}
					setState(3659);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,573,_ctx);
				}
				setState(3663);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,574,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3660);
						separator();
						}
						} 
					}
					setState(3665);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,574,_ctx);
				}
				}
				}
				setState(3670);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_sectionContext extends ParserRuleContext {
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Screen_description_entryContext> screen_description_entry() {
			return getRuleContexts(Screen_description_entryContext.class);
		}
		public Screen_description_entryContext screen_description_entry(int i) {
			return getRuleContext(Screen_description_entryContext.class,i);
		}
		public Screen_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_section; }
	}

	public final Screen_sectionContext screen_section() throws RecognitionException {
		Screen_sectionContext _localctx = new Screen_sectionContext(_ctx, getState());
		enterRule(_localctx, 228, RULE_screen_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3671);
			match(SCREEN);
			setState(3673); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3672);
				separator();
				}
				}
				setState(3675); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3677);
			match(SECTION);
			setState(3681);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(3678);
				separator();
				}
				}
				setState(3683);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3684);
			match(DOT_);
			setState(3688);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,578,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3685);
					separator();
					}
					} 
				}
				setState(3690);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,578,_ctx);
			}
			setState(3700);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==NUMERIC_LITERAL) {
				{
				{
				setState(3691);
				screen_description_entry();
				setState(3695);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,579,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3692);
						separator();
						}
						} 
					}
					setState(3697);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,579,_ctx);
				}
				}
				}
				setState(3702);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_description_entryContext extends ParserRuleContext {
		public TerminalNode FD() { return getToken(cobolParser.FD, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Fd_clauseContext> fd_clause() {
			return getRuleContexts(Fd_clauseContext.class);
		}
		public Fd_clauseContext fd_clause(int i) {
			return getRuleContext(Fd_clauseContext.class,i);
		}
		public File_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_description_entry; }
	}

	public final File_description_entryContext file_description_entry() throws RecognitionException {
		File_description_entryContext _localctx = new File_description_entryContext(_ctx, getState());
		enterRule(_localctx, 230, RULE_file_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3703);
			match(FD);
			setState(3705); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3704);
				separator();
				}
				}
				setState(3707); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3709);
			file_name();
			setState(3713);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(3710);
				separator();
				}
				}
				setState(3715);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3725);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCESS) | (1L << ALTERNATE) | (1L << BLOCK) | (1L << CODE_SET))) != 0) || _la==DATA || _la==DYNAMIC || ((((_la - 164)) & ~0x3f) == 0 && ((1L << (_la - 164)) & ((1L << (EXTERNAL - 164)) | (1L << (FILE - 164)) | (1L << (GLOBAL - 164)) | (1L << (IS - 164)) | (1L << (LABEL - 164)) | (1L << (LINAGE - 164)))) != 0) || ((((_la - 289)) & ~0x3f) == 0 && ((1L << (_la - 289)) & ((1L << (RANDOM - 289)) | (1L << (RECORD - 289)) | (1L << (REPORT - 289)) | (1L << (REPORTS - 289)) | (1L << (SEQUENTIAL - 289)) | (1L << (STATUS - 289)))) != 0) || _la==VALUE) {
				{
				{
				setState(3716);
				fd_clause();
				setState(3720);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(3717);
					separator();
					}
					}
					setState(3722);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(3727);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3728);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sort_merge_file_description_entryContext extends ParserRuleContext {
		public TerminalNode SD() { return getToken(cobolParser.SD, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Sd_clauseContext> sd_clause() {
			return getRuleContexts(Sd_clauseContext.class);
		}
		public Sd_clauseContext sd_clause(int i) {
			return getRuleContext(Sd_clauseContext.class,i);
		}
		public Sort_merge_file_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sort_merge_file_description_entry; }
	}

	public final Sort_merge_file_description_entryContext sort_merge_file_description_entry() throws RecognitionException {
		Sort_merge_file_description_entryContext _localctx = new Sort_merge_file_description_entryContext(_ctx, getState());
		enterRule(_localctx, 232, RULE_sort_merge_file_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3730);
			match(SD);
			setState(3732); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3731);
				separator();
				}
				}
				setState(3734); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3736);
			file_name();
			setState(3740);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(3737);
				separator();
				}
				}
				setState(3742);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3752);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==DATA || _la==RECORD) {
				{
				{
				setState(3743);
				sd_clause();
				setState(3747);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(3744);
					separator();
					}
					}
					setState(3749);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(3754);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3755);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_description_entryContext extends ParserRuleContext {
		public TerminalNode RD() { return getToken(cobolParser.RD, 0); }
		public Report_nameContext report_name() {
			return getRuleContext(Report_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Rd_clauseContext> rd_clause() {
			return getRuleContexts(Rd_clauseContext.class);
		}
		public Rd_clauseContext rd_clause(int i) {
			return getRuleContext(Rd_clauseContext.class,i);
		}
		public Report_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_description_entry; }
	}

	public final Report_description_entryContext report_description_entry() throws RecognitionException {
		Report_description_entryContext _localctx = new Report_description_entryContext(_ctx, getState());
		enterRule(_localctx, 234, RULE_report_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3757);
			match(RD);
			setState(3759); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3758);
				separator();
				}
				}
				setState(3761); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3763);
			report_name();
			setState(3767);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(3764);
				separator();
				}
				}
				setState(3769);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3779);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 60)) & ~0x3f) == 0 && ((1L << (_la - 60)) & ((1L << (CODE - 60)) | (1L << (CONTROL - 60)) | (1L << (CONTROLS - 60)))) != 0) || _la==GLOBAL || _la==IS || _la==PAGE) {
				{
				{
				setState(3770);
				rd_clause();
				setState(3774);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(3771);
					separator();
					}
					}
					setState(3776);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(3781);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3782);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Fd_clauseContext extends ParserRuleContext {
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public Block_containsContext block_contains() {
			return getRuleContext(Block_containsContext.class,0);
		}
		public RecordContext record() {
			return getRuleContext(RecordContext.class,0);
		}
		public LabelContext label() {
			return getRuleContext(LabelContext.class,0);
		}
		public Value_of_idContext value_of_id() {
			return getRuleContext(Value_of_idContext.class,0);
		}
		public Data_recContext data_rec() {
			return getRuleContext(Data_recContext.class,0);
		}
		public LinageContext linage() {
			return getRuleContext(LinageContext.class,0);
		}
		public Report_isContext report_is() {
			return getRuleContext(Report_isContext.class,0);
		}
		public Code_setContext code_set() {
			return getRuleContext(Code_setContext.class,0);
		}
		public Access_modeContext access_mode() {
			return getRuleContext(Access_modeContext.class,0);
		}
		public Record_keyContext record_key() {
			return getRuleContext(Record_keyContext.class,0);
		}
		public File_statusContext file_status() {
			return getRuleContext(File_statusContext.class,0);
		}
		public Fd_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_fd_clause; }
	}

	public final Fd_clauseContext fd_clause() throws RecognitionException {
		Fd_clauseContext _localctx = new Fd_clauseContext(_ctx, getState());
		enterRule(_localctx, 236, RULE_fd_clause);
		int _la;
		try {
			setState(3813);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,597,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3790);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3784);
					match(IS);
					setState(3786); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3785);
						separator();
						}
						}
						setState(3788); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3792);
				match(EXTERNAL);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3799);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3793);
					match(IS);
					setState(3795); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3794);
						separator();
						}
						}
						setState(3797); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3801);
				match(GLOBAL);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3802);
				block_contains();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(3803);
				record();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(3804);
				label();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(3805);
				value_of_id();
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(3806);
				data_rec();
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(3807);
				linage();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(3808);
				report_is();
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(3809);
				code_set();
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(3810);
				access_mode();
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(3811);
				record_key();
				}
				break;
			case 13:
				enterOuterAlt(_localctx, 13);
				{
				setState(3812);
				file_status();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_description_entryContext extends ParserRuleContext {
		public List<Data_description_entryContext> data_description_entry() {
			return getRuleContexts(Data_description_entryContext.class);
		}
		public Data_description_entryContext data_description_entry(int i) {
			return getRuleContext(Data_description_entryContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Record_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_description_entry; }
	}

	public final Record_description_entryContext record_description_entry() throws RecognitionException {
		Record_description_entryContext _localctx = new Record_description_entryContext(_ctx, getState());
		enterRule(_localctx, 238, RULE_record_description_entry);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3815);
			data_description_entry();
			setState(3825);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,599,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3819);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(3816);
						separator();
						}
						}
						setState(3821);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(3822);
					data_description_entry();
					}
					} 
				}
				setState(3827);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,599,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_description_entryContext extends ParserRuleContext {
		public Level_numberContext level_number() {
			return getRuleContext(Level_numberContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode REDEFINES() { return getToken(cobolParser.REDEFINES, 0); }
		public Other_data_itemContext other_data_item() {
			return getRuleContext(Other_data_itemContext.class,0);
		}
		public List<Data_description_clauseContext> data_description_clause() {
			return getRuleContexts(Data_description_clauseContext.class);
		}
		public Data_description_clauseContext data_description_clause(int i) {
			return getRuleContext(Data_description_clauseContext.class,i);
		}
		public Data_nameContext data_name() {
			return getRuleContext(Data_nameContext.class,0);
		}
		public TerminalNode FILLER() { return getToken(cobolParser.FILLER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Data_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_description_entry; }
	}

	public final Data_description_entryContext data_description_entry() throws RecognitionException {
		Data_description_entryContext _localctx = new Data_description_entryContext(_ctx, getState());
		enterRule(_localctx, 240, RULE_data_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3828);
			level_number();
			setState(3838);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,602,_ctx) ) {
			case 1:
				{
				setState(3830); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3829);
					separator();
					}
					}
					setState(3832); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3836);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USER_DEFINED_WORD:
					{
					setState(3834);
					data_name();
					}
					break;
				case FILLER:
					{
					setState(3835);
					match(FILLER);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(3853);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,605,_ctx) ) {
			case 1:
				{
				setState(3841); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3840);
					separator();
					}
					}
					setState(3843); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3845);
				match(REDEFINES);
				setState(3847); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3846);
					separator();
					}
					}
					setState(3849); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3851);
				other_data_item();
				}
				break;
			}
			setState(3864);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(3856); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3855);
					separator();
					}
					}
					setState(3858); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3860);
				data_description_clause();
				}
				}
				setState(3866);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3867);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Level_numberContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Level_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_level_number; }
	}

	public final Level_numberContext level_number() throws RecognitionException {
		Level_numberContext _localctx = new Level_numberContext(_ctx, getState());
		enterRule(_localctx, 242, RULE_level_number);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3869);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_description_clauseContext extends ParserRuleContext {
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public PictureContext picture() {
			return getRuleContext(PictureContext.class,0);
		}
		public UsageContext usage() {
			return getRuleContext(UsageContext.class,0);
		}
		public Sign_isContext sign_is() {
			return getRuleContext(Sign_isContext.class,0);
		}
		public OccursContext occurs() {
			return getRuleContext(OccursContext.class,0);
		}
		public TerminalNode SYNCHRONIZED() { return getToken(cobolParser.SYNCHRONIZED, 0); }
		public TerminalNode SYNC() { return getToken(cobolParser.SYNC, 0); }
		public TerminalNode LEFT() { return getToken(cobolParser.LEFT, 0); }
		public TerminalNode RIGHT() { return getToken(cobolParser.RIGHT, 0); }
		public TerminalNode JUSTIFIED() { return getToken(cobolParser.JUSTIFIED, 0); }
		public TerminalNode JUST() { return getToken(cobolParser.JUST, 0); }
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode WHEN() { return getToken(cobolParser.WHEN, 0); }
		public Value_isContext value_is() {
			return getRuleContext(Value_isContext.class,0);
		}
		public RenamesContext renames() {
			return getRuleContext(RenamesContext.class,0);
		}
		public Data_description_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_description_clause; }
	}

	public final Data_description_clauseContext data_description_clause() throws RecognitionException {
		Data_description_clauseContext _localctx = new Data_description_clauseContext(_ctx, getState());
		enterRule(_localctx, 244, RULE_data_description_clause);
		int _la;
		try {
			setState(3931);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,619,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3877);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3871);
					match(IS);
					setState(3873); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3872);
						separator();
						}
						}
						setState(3875); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3879);
				match(EXTERNAL);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3886);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3880);
					match(IS);
					setState(3882); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3881);
						separator();
						}
						}
						setState(3884); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3888);
				match(GLOBAL);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3889);
				picture();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(3890);
				usage();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(3891);
				sign_is();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(3892);
				occurs();
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(3893);
				_la = _input.LA(1);
				if ( !(_la==SYNC || _la==SYNCHRONIZED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(3901);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,613,_ctx) ) {
				case 1:
					{
					setState(3895); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3894);
						separator();
						}
						}
						setState(3897); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3899);
					_la = _input.LA(1);
					if ( !(_la==LEFT || _la==RIGHT) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(3903);
				_la = _input.LA(1);
				if ( !(_la==JUST || _la==JUSTIFIED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(3911);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,615,_ctx) ) {
				case 1:
					{
					setState(3905); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3904);
						separator();
						}
						}
						setState(3907); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3909);
					match(RIGHT);
					}
					break;
				}
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(3913);
				match(BLANK);
				setState(3915); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3914);
					separator();
					}
					}
					setState(3917); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3925);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WHEN) {
					{
					setState(3919);
					match(WHEN);
					setState(3921); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3920);
						separator();
						}
						}
						setState(3923); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(3927);
				match(ZERO);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(3929);
				value_is();
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(3930);
				renames();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RenamesContext extends ParserRuleContext {
		public TerminalNode RENAMES() { return getToken(cobolParser.RENAMES, 0); }
		public Rename_startContext rename_start() {
			return getRuleContext(Rename_startContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Rename_endContext rename_end() {
			return getRuleContext(Rename_endContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public RenamesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_renames; }
	}

	public final RenamesContext renames() throws RecognitionException {
		RenamesContext _localctx = new RenamesContext(_ctx, getState());
		enterRule(_localctx, 246, RULE_renames);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3933);
			match(RENAMES);
			setState(3935); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3934);
				separator();
				}
				}
				setState(3937); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3939);
			rename_start();
			setState(3953);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,623,_ctx) ) {
			case 1:
				{
				setState(3941); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3940);
					separator();
					}
					}
					setState(3943); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3945);
				_la = _input.LA(1);
				if ( !(_la==THROUGH || _la==THRU) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(3947); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3946);
					separator();
					}
					}
					setState(3949); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(3951);
				rename_end();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rename_startContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Rename_startContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rename_start; }
	}

	public final Rename_startContext rename_start() throws RecognitionException {
		Rename_startContext _localctx = new Rename_startContext(_ctx, getState());
		enterRule(_localctx, 248, RULE_rename_start);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3955);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rename_endContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Rename_endContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rename_end; }
	}

	public final Rename_endContext rename_end() throws RecognitionException {
		Rename_endContext _localctx = new Rename_endContext(_ctx, getState());
		enterRule(_localctx, 250, RULE_rename_end);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3957);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_isContext extends ParserRuleContext {
		public List<Value_is_definitionContext> value_is_definition() {
			return getRuleContexts(Value_is_definitionContext.class);
		}
		public Value_is_definitionContext value_is_definition(int i) {
			return getRuleContext(Value_is_definitionContext.class,i);
		}
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public TerminalNode VALUES() { return getToken(cobolParser.VALUES, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public Value_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is; }
	}

	public final Value_isContext value_is() throws RecognitionException {
		Value_isContext _localctx = new Value_isContext(_ctx, getState());
		enterRule(_localctx, 252, RULE_value_is);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3979);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case VALUE:
				{
				setState(3959);
				match(VALUE);
				setState(3967);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,625,_ctx) ) {
				case 1:
					{
					setState(3961); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3960);
						separator();
						}
						}
						setState(3963); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3965);
					match(IS);
					}
					break;
				}
				}
				break;
			case VALUES:
				{
				setState(3969);
				match(VALUES);
				setState(3977);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,627,_ctx) ) {
				case 1:
					{
					setState(3971); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3970);
						separator();
						}
						}
						setState(3973); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3975);
					match(ARE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(3982); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3981);
				separator();
				}
				}
				setState(3984); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(3986);
			value_is_definition();
			setState(3996);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,631,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3988); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3987);
						separator();
						}
						}
						setState(3990); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(3992);
					value_is_definition();
					}
					} 
				}
				setState(3998);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,631,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_definitionContext extends ParserRuleContext {
		public Value_is_definition_partContext value_is_definition_part() {
			return getRuleContext(Value_is_definition_partContext.class,0);
		}
		public Value_is_definition_thruContext value_is_definition_thru() {
			return getRuleContext(Value_is_definition_thruContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Value_is_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_definition; }
	}

	public final Value_is_definitionContext value_is_definition() throws RecognitionException {
		Value_is_definitionContext _localctx = new Value_is_definitionContext(_ctx, getState());
		enterRule(_localctx, 254, RULE_value_is_definition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3999);
			value_is_definition_part();
			setState(4007);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,633,_ctx) ) {
			case 1:
				{
				setState(4001); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4000);
					separator();
					}
					}
					setState(4003); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4005);
				value_is_definition_thru();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_definition_partContext extends ParserRuleContext {
		public Value_is_literalContext value_is_literal() {
			return getRuleContext(Value_is_literalContext.class,0);
		}
		public TerminalNode REFERENCE() { return getToken(cobolParser.REFERENCE, 0); }
		public Ref_data_nameContext ref_data_name() {
			return getRuleContext(Ref_data_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public External_nameContext external_name() {
			return getRuleContext(External_nameContext.class,0);
		}
		public Value_is_definition_partContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_definition_part; }
	}

	public final Value_is_definition_partContext value_is_definition_part() throws RecognitionException {
		Value_is_definition_partContext _localctx = new Value_is_definition_partContext(_ctx, getState());
		enterRule(_localctx, 256, RULE_value_is_definition_part);
		int _la;
		try {
			setState(4026);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4009);
				value_is_literal();
				}
				break;
			case REFERENCE:
				enterOuterAlt(_localctx, 2);
				{
				setState(4010);
				match(REFERENCE);
				setState(4012); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4011);
					separator();
					}
					}
					setState(4014); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4016);
				ref_data_name();
				}
				break;
			case EXTERNAL:
				enterOuterAlt(_localctx, 3);
				{
				setState(4018);
				match(EXTERNAL);
				setState(4020); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4019);
					separator();
					}
					}
					setState(4022); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4024);
				external_name();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_definition_thruContext extends ParserRuleContext {
		public Value_is_definition_partContext value_is_definition_part() {
			return getRuleContext(Value_is_definition_partContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Value_is_definition_thruContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_definition_thru; }
	}

	public final Value_is_definition_thruContext value_is_definition_thru() throws RecognitionException {
		Value_is_definition_thruContext _localctx = new Value_is_definition_thruContext(_ctx, getState());
		enterRule(_localctx, 258, RULE_value_is_definition_thru);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4028);
			_la = _input.LA(1);
			if ( !(_la==THROUGH || _la==THRU) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(4030); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4029);
				separator();
				}
				}
				setState(4032); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(4034);
			value_is_definition_part();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class External_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public External_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_external_name; }
	}

	public final External_nameContext external_name() throws RecognitionException {
		External_nameContext _localctx = new External_nameContext(_ctx, getState());
		enterRule(_localctx, 260, RULE_external_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4036);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Ref_data_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Ref_data_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_ref_data_name; }
	}

	public final Ref_data_nameContext ref_data_name() throws RecognitionException {
		Ref_data_nameContext _localctx = new Ref_data_nameContext(_ctx, getState());
		enterRule(_localctx, 262, RULE_ref_data_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4038);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Value_is_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_literal; }
	}

	public final Value_is_literalContext value_is_literal() throws RecognitionException {
		Value_is_literalContext _localctx = new Value_is_literalContext(_ctx, getState());
		enterRule(_localctx, 264, RULE_value_is_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4040);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class OccursContext extends ParserRuleContext {
		public TerminalNode OCCURS() { return getToken(cobolParser.OCCURS, 0); }
		public Times_definitionContext times_definition() {
			return getRuleContext(Times_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Key_isContext> key_is() {
			return getRuleContexts(Key_isContext.class);
		}
		public Key_isContext key_is(int i) {
			return getRuleContext(Key_isContext.class,i);
		}
		public Indexed_byContext indexed_by() {
			return getRuleContext(Indexed_byContext.class,0);
		}
		public OccursContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_occurs; }
	}

	public final OccursContext occurs() throws RecognitionException {
		OccursContext _localctx = new OccursContext(_ctx, getState());
		enterRule(_localctx, 266, RULE_occurs);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4042);
			match(OCCURS);
			setState(4044); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4043);
				separator();
				}
				}
				setState(4046); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(4048);
			times_definition();
			setState(4058);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,640,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4050); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4049);
						separator();
						}
						}
						setState(4052); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4054);
					key_is();
					}
					} 
				}
				setState(4060);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,640,_ctx);
			}
			setState(4068);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,642,_ctx) ) {
			case 1:
				{
				setState(4062); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4061);
					separator();
					}
					}
					setState(4064); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4066);
				indexed_by();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Indexed_byContext extends ParserRuleContext {
		public TerminalNode INDEXED() { return getToken(cobolParser.INDEXED, 0); }
		public List<Ind_nameContext> ind_name() {
			return getRuleContexts(Ind_nameContext.class);
		}
		public Ind_nameContext ind_name(int i) {
			return getRuleContext(Ind_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public Indexed_byContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_indexed_by; }
	}

	public final Indexed_byContext indexed_by() throws RecognitionException {
		Indexed_byContext _localctx = new Indexed_byContext(_ctx, getState());
		enterRule(_localctx, 268, RULE_indexed_by);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4070);
			match(INDEXED);
			setState(4072); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4071);
				separator();
				}
				}
				setState(4074); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(4082);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==BY) {
				{
				setState(4076);
				match(BY);
				setState(4078); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4077);
					separator();
					}
					}
					setState(4080); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(4084);
			ind_name();
			setState(4094);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,647,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4086); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4085);
						separator();
						}
						}
						setState(4088); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4090);
					ind_name();
					}
					} 
				}
				setState(4096);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,647,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Ind_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Ind_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_ind_name; }
	}

	public final Ind_nameContext ind_name() throws RecognitionException {
		Ind_nameContext _localctx = new Ind_nameContext(_ctx, getState());
		enterRule(_localctx, 270, RULE_ind_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4097);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Key_isContext extends ParserRuleContext {
		public List<Key_nameContext> key_name() {
			return getRuleContexts(Key_nameContext.class);
		}
		public Key_nameContext key_name(int i) {
			return getRuleContext(Key_nameContext.class,i);
		}
		public TerminalNode ASCENDING() { return getToken(cobolParser.ASCENDING, 0); }
		public TerminalNode DESCENDING() { return getToken(cobolParser.DESCENDING, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Key_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_key_is; }
	}

	public final Key_isContext key_is() throws RecognitionException {
		Key_isContext _localctx = new Key_isContext(_ctx, getState());
		enterRule(_localctx, 272, RULE_key_is);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4099);
			_la = _input.LA(1);
			if ( !(_la==ASCENDING || _la==DESCENDING) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(4101); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4100);
				separator();
				}
				}
				setState(4103); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(4111);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==KEY) {
				{
				setState(4105);
				match(KEY);
				setState(4107); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4106);
					separator();
					}
					}
					setState(4109); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(4119);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(4113);
				match(IS);
				setState(4115); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4114);
					separator();
					}
					}
					setState(4117); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(4121);
			key_name();
			setState(4131);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,654,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4123); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4122);
						separator();
						}
						}
						setState(4125); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4127);
					key_name();
					}
					} 
				}
				setState(4133);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,654,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Key_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Key_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_key_name; }
	}

	public final Key_nameContext key_name() throws RecognitionException {
		Key_nameContext _localctx = new Key_nameContext(_ctx, getState());
		enterRule(_localctx, 274, RULE_key_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4134);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Times_definitionContext extends ParserRuleContext {
		public Table_sizeContext table_size() {
			return getRuleContext(Table_sizeContext.class,0);
		}
		public TerminalNode TIMES() { return getToken(cobolParser.TIMES, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Min_timesContext min_times() {
			return getRuleContext(Min_timesContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Max_timesContext max_times() {
			return getRuleContext(Max_timesContext.class,0);
		}
		public TerminalNode DEPENDING() { return getToken(cobolParser.DEPENDING, 0); }
		public Depending_itemContext depending_item() {
			return getRuleContext(Depending_itemContext.class,0);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Times_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_times_definition; }
	}

	public final Times_definitionContext times_definition() throws RecognitionException {
		Times_definitionContext _localctx = new Times_definitionContext(_ctx, getState());
		enterRule(_localctx, 276, RULE_times_definition);
		int _la;
		try {
			setState(4184);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,663,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(4136);
				table_size();
				setState(4138); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4137);
					separator();
					}
					}
					setState(4140); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4142);
				match(TIMES);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(4144);
				min_times();
				setState(4146); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4145);
					separator();
					}
					}
					setState(4148); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4150);
				match(TO);
				setState(4152); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4151);
					separator();
					}
					}
					setState(4154); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4156);
				max_times();
				setState(4158); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4157);
					separator();
					}
					}
					setState(4160); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4162);
				match(TIMES);
				setState(4164); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4163);
					separator();
					}
					}
					setState(4166); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4168);
				match(DEPENDING);
				setState(4170); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4169);
					separator();
					}
					}
					setState(4172); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4180);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==ON) {
					{
					setState(4174);
					match(ON);
					setState(4176); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4175);
						separator();
						}
						}
						setState(4178); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(4182);
				depending_item();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Table_sizeContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Table_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_table_size; }
	}

	public final Table_sizeContext table_size() throws RecognitionException {
		Table_sizeContext _localctx = new Table_sizeContext(_ctx, getState());
		enterRule(_localctx, 278, RULE_table_size);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4186);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Min_timesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Min_timesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_min_times; }
	}

	public final Min_timesContext min_times() throws RecognitionException {
		Min_timesContext _localctx = new Min_timesContext(_ctx, getState());
		enterRule(_localctx, 280, RULE_min_times);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4188);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Max_timesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Max_timesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_max_times; }
	}

	public final Max_timesContext max_times() throws RecognitionException {
		Max_timesContext _localctx = new Max_timesContext(_ctx, getState());
		enterRule(_localctx, 282, RULE_max_times);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4190);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_group_description_entryContext extends ParserRuleContext {
		public List<Report_group_data_descriptionContext> report_group_data_description() {
			return getRuleContexts(Report_group_data_descriptionContext.class);
		}
		public Report_group_data_descriptionContext report_group_data_description(int i) {
			return getRuleContext(Report_group_data_descriptionContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Report_group_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_group_description_entry; }
	}

	public final Report_group_description_entryContext report_group_description_entry() throws RecognitionException {
		Report_group_description_entryContext _localctx = new Report_group_description_entryContext(_ctx, getState());
		enterRule(_localctx, 284, RULE_report_group_description_entry);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4192);
			report_group_data_description();
			setState(4202);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,665,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4196);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(4193);
						separator();
						}
						}
						setState(4198);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(4199);
					report_group_data_description();
					}
					} 
				}
				setState(4204);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,665,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_group_data_descriptionContext extends ParserRuleContext {
		public Level_numberContext level_number() {
			return getRuleContext(Level_numberContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public Data_nameContext data_name() {
			return getRuleContext(Data_nameContext.class,0);
		}
		public List<Report_group_data_description_clauseContext> report_group_data_description_clause() {
			return getRuleContexts(Report_group_data_description_clauseContext.class);
		}
		public Report_group_data_description_clauseContext report_group_data_description_clause(int i) {
			return getRuleContext(Report_group_data_description_clauseContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Report_group_data_descriptionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_group_data_description; }
	}

	public final Report_group_data_descriptionContext report_group_data_description() throws RecognitionException {
		Report_group_data_descriptionContext _localctx = new Report_group_data_descriptionContext(_ctx, getState());
		enterRule(_localctx, 286, RULE_report_group_data_description);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4205);
			level_number();
			setState(4213);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,667,_ctx) ) {
			case 1:
				{
				setState(4207); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4206);
					separator();
					}
					}
					setState(4209); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4211);
				data_name();
				}
				break;
			}
			setState(4224);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(4216); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4215);
					separator();
					}
					}
					setState(4218); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4220);
				report_group_data_description_clause();
				}
				}
				setState(4226);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4227);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_group_data_description_clauseContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public Line_num_definitionContext line_num_definition() {
			return getRuleContext(Line_num_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode GROUP() { return getToken(cobolParser.GROUP, 0); }
		public Next_group_definitionContext next_group_definition() {
			return getRuleContext(Next_group_definitionContext.class,0);
		}
		public TerminalNode TYPE() { return getToken(cobolParser.TYPE, 0); }
		public Type_is_definitionContext type_is_definition() {
			return getRuleContext(Type_is_definitionContext.class,0);
		}
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public TerminalNode USAGE() { return getToken(cobolParser.USAGE, 0); }
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode WHEN() { return getToken(cobolParser.WHEN, 0); }
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public Column_numberContext column_number() {
			return getRuleContext(Column_numberContext.class,0);
		}
		public TerminalNode INDICATE() { return getToken(cobolParser.INDICATE, 0); }
		public TerminalNode JUSTIFIED() { return getToken(cobolParser.JUSTIFIED, 0); }
		public TerminalNode JUST() { return getToken(cobolParser.JUST, 0); }
		public TerminalNode RIGHT() { return getToken(cobolParser.RIGHT, 0); }
		public PictureContext picture() {
			return getRuleContext(PictureContext.class,0);
		}
		public Sign_isContext sign_is() {
			return getRuleContext(Sign_isContext.class,0);
		}
		public TerminalNode SOURCE() { return getToken(cobolParser.SOURCE, 0); }
		public Source_nameContext source_name() {
			return getRuleContext(Source_nameContext.class,0);
		}
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public Value_is_literalContext value_is_literal() {
			return getRuleContext(Value_is_literalContext.class,0);
		}
		public SumContext sum() {
			return getRuleContext(SumContext.class,0);
		}
		public Report_group_data_description_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_group_data_description_clause; }
	}

	public final Report_group_data_description_clauseContext report_group_data_description_clause() throws RecognitionException {
		Report_group_data_description_clauseContext _localctx = new Report_group_data_description_clauseContext(_ctx, getState());
		enterRule(_localctx, 288, RULE_report_group_data_description_clause);
		int _la;
		try {
			setState(4403);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LINE:
				enterOuterAlt(_localctx, 1);
				{
				setState(4229);
				match(LINE);
				setState(4231); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4230);
					separator();
					}
					}
					setState(4233); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4241);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(4235);
					match(NUMBER);
					setState(4237); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4236);
						separator();
						}
						}
						setState(4239); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(4249);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4243);
					match(IS);
					setState(4245); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4244);
						separator();
						}
						}
						setState(4247); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(4251);
				line_num_definition();
				}
				break;
			case NEXT:
				enterOuterAlt(_localctx, 2);
				{
				setState(4253);
				match(NEXT);
				setState(4255); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4254);
					separator();
					}
					}
					setState(4257); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4259);
				match(GROUP);
				setState(4261); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4260);
					separator();
					}
					}
					setState(4263); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4271);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4265);
					match(IS);
					setState(4267); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4266);
						separator();
						}
						}
						setState(4269); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(4273);
				next_group_definition();
				}
				break;
			case TYPE:
				enterOuterAlt(_localctx, 3);
				{
				setState(4275);
				match(TYPE);
				setState(4277); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4276);
					separator();
					}
					}
					setState(4279); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4287);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4281);
					match(IS);
					setState(4283); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4282);
						separator();
						}
						}
						setState(4285); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(4289);
				type_is_definition();
				}
				break;
			case DISPLAY:
			case USAGE:
				enterOuterAlt(_localctx, 4);
				{
				setState(4305);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==USAGE) {
					{
					setState(4291);
					match(USAGE);
					setState(4293); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4292);
						separator();
						}
						}
						setState(4295); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4303);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==IS) {
						{
						setState(4297);
						match(IS);
						setState(4299); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4298);
							separator();
							}
							}
							setState(4301); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					}
				}

				setState(4307);
				match(DISPLAY);
				}
				break;
			case BLANK:
				enterOuterAlt(_localctx, 5);
				{
				setState(4308);
				match(BLANK);
				setState(4310); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4309);
					separator();
					}
					}
					setState(4312); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4320);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WHEN) {
					{
					setState(4314);
					match(WHEN);
					setState(4316); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4315);
						separator();
						}
						}
						setState(4318); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(4322);
				match(ZERO);
				}
				break;
			case COLUMN:
				enterOuterAlt(_localctx, 6);
				{
				setState(4324);
				match(COLUMN);
				setState(4326); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4325);
					separator();
					}
					}
					setState(4328); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4336);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(4330);
					match(NUMBER);
					setState(4332); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4331);
						separator();
						}
						}
						setState(4334); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(4344);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4338);
					match(IS);
					setState(4340); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4339);
						separator();
						}
						}
						setState(4342); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(4346);
				column_number();
				}
				break;
			case GROUP:
				enterOuterAlt(_localctx, 7);
				{
				setState(4348);
				match(GROUP);
				setState(4356);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,695,_ctx) ) {
				case 1:
					{
					setState(4350); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4349);
						separator();
						}
						}
						setState(4352); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4354);
					match(INDICATE);
					}
					break;
				}
				}
				break;
			case JUST:
			case JUSTIFIED:
				enterOuterAlt(_localctx, 8);
				{
				setState(4358);
				_la = _input.LA(1);
				if ( !(_la==JUST || _la==JUSTIFIED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(4366);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,697,_ctx) ) {
				case 1:
					{
					setState(4360); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4359);
						separator();
						}
						}
						setState(4362); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4364);
					match(RIGHT);
					}
					break;
				}
				}
				break;
			case PIC:
			case PICTURE:
				enterOuterAlt(_localctx, 9);
				{
				setState(4368);
				picture();
				}
				break;
			case LEADING:
			case SIGN:
			case TRAILING:
				enterOuterAlt(_localctx, 10);
				{
				setState(4369);
				sign_is();
				}
				break;
			case SOURCE:
				enterOuterAlt(_localctx, 11);
				{
				setState(4370);
				match(SOURCE);
				setState(4372); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4371);
					separator();
					}
					}
					setState(4374); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4382);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4376);
					match(IS);
					setState(4378); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4377);
						separator();
						}
						}
						setState(4380); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(4384);
				source_name();
				}
				break;
			case VALUE:
				enterOuterAlt(_localctx, 12);
				{
				setState(4386);
				match(VALUE);
				setState(4388); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4387);
					separator();
					}
					}
					setState(4390); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4398);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4392);
					match(IS);
					setState(4394); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4393);
						separator();
						}
						}
						setState(4396); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(4400);
				value_is_literal();
				}
				break;
			case SUM:
				enterOuterAlt(_localctx, 13);
				{
				setState(4402);
				sum();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sign_isContext extends ParserRuleContext {
		public TerminalNode LEADING() { return getToken(cobolParser.LEADING, 0); }
		public TerminalNode TRAILING() { return getToken(cobolParser.TRAILING, 0); }
		public TerminalNode SIGN() { return getToken(cobolParser.SIGN, 0); }
		public TerminalNode SEPARATE() { return getToken(cobolParser.SEPARATE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTER() { return getToken(cobolParser.CHARACTER, 0); }
		public Sign_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sign_is; }
	}

	public final Sign_isContext sign_is() throws RecognitionException {
		Sign_isContext _localctx = new Sign_isContext(_ctx, getState());
		enterRule(_localctx, 290, RULE_sign_is);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4420);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SIGN) {
				{
				setState(4405);
				match(SIGN);
				setState(4413);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,706,_ctx) ) {
				case 1:
					{
					setState(4407); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4406);
						separator();
						}
						}
						setState(4409); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4411);
					match(IS);
					}
					break;
				}
				setState(4416); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4415);
					separator();
					}
					}
					setState(4418); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(4422);
			_la = _input.LA(1);
			if ( !(_la==LEADING || _la==TRAILING) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(4438);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,712,_ctx) ) {
			case 1:
				{
				setState(4424); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4423);
					separator();
					}
					}
					setState(4426); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4428);
				match(SEPARATE);
				setState(4436);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,711,_ctx) ) {
				case 1:
					{
					setState(4430); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4429);
						separator();
						}
						}
						setState(4432); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4434);
					match(CHARACTER);
					}
					break;
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SumContext extends ParserRuleContext {
		public List<TerminalNode> SUM() { return getTokens(cobolParser.SUM); }
		public TerminalNode SUM(int i) {
			return getToken(cobolParser.SUM, i);
		}
		public List<Sum_nameContext> sum_name() {
			return getRuleContexts(Sum_nameContext.class);
		}
		public Sum_nameContext sum_name(int i) {
			return getRuleContext(Sum_nameContext.class,i);
		}
		public TerminalNode RESET() { return getToken(cobolParser.RESET, 0); }
		public Control_foot_nameContext control_foot_name() {
			return getRuleContext(Control_foot_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> UPON() { return getTokens(cobolParser.UPON); }
		public TerminalNode UPON(int i) {
			return getToken(cobolParser.UPON, i);
		}
		public List<Detail_report_group_nameContext> detail_report_group_name() {
			return getRuleContexts(Detail_report_group_nameContext.class);
		}
		public Detail_report_group_nameContext detail_report_group_name(int i) {
			return getRuleContext(Detail_report_group_nameContext.class,i);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public SumContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sum; }
	}

	public final SumContext sum() throws RecognitionException {
		SumContext _localctx = new SumContext(_ctx, getState());
		enterRule(_localctx, 292, RULE_sum);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4480); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4440);
				match(SUM);
				setState(4442); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4441);
					separator();
					}
					}
					setState(4444); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4446);
				sum_name();
				setState(4456);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,715,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(4448); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4447);
							separator();
							}
							}
							setState(4450); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(4452);
						sum_name();
						}
						} 
					}
					setState(4458);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,715,_ctx);
				}
				setState(4466);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,717,_ctx) ) {
				case 1:
					{
					setState(4460); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4459);
						separator();
						}
						}
						setState(4462); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4464);
					match(UPON);
					}
					break;
				}
				setState(4477);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,719,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(4469); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4468);
							separator();
							}
							}
							setState(4471); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(4473);
						detail_report_group_name();
						}
						} 
					}
					setState(4479);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,719,_ctx);
				}
				}
				}
				setState(4482); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==SUM );
			setState(4506);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,725,_ctx) ) {
			case 1:
				{
				setState(4487);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(4484);
					separator();
					}
					}
					setState(4489);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(4490);
				match(RESET);
				setState(4492); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4491);
					separator();
					}
					}
					setState(4494); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4502);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==ON) {
					{
					setState(4496);
					match(ON);
					setState(4498); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4497);
						separator();
						}
						}
						setState(4500); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(4504);
				control_foot_name();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Control_foot_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode FINAL() { return getToken(cobolParser.FINAL, 0); }
		public Control_foot_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_control_foot_name; }
	}

	public final Control_foot_nameContext control_foot_name() throws RecognitionException {
		Control_foot_nameContext _localctx = new Control_foot_nameContext(_ctx, getState());
		enterRule(_localctx, 294, RULE_control_foot_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4508);
			_la = _input.LA(1);
			if ( !(_la==FINAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Detail_report_group_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Detail_report_group_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_detail_report_group_name; }
	}

	public final Detail_report_group_nameContext detail_report_group_name() throws RecognitionException {
		Detail_report_group_nameContext _localctx = new Detail_report_group_nameContext(_ctx, getState());
		enterRule(_localctx, 296, RULE_detail_report_group_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4510);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sum_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Sum_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sum_name; }
	}

	public final Sum_nameContext sum_name() throws RecognitionException {
		Sum_nameContext _localctx = new Sum_nameContext(_ctx, getState());
		enterRule(_localctx, 298, RULE_sum_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4512);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Source_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Source_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_source_name; }
	}

	public final Source_nameContext source_name() throws RecognitionException {
		Source_nameContext _localctx = new Source_nameContext(_ctx, getState());
		enterRule(_localctx, 300, RULE_source_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4514);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Column_numberContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Column_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_column_number; }
	}

	public final Column_numberContext column_number() throws RecognitionException {
		Column_numberContext _localctx = new Column_numberContext(_ctx, getState());
		enterRule(_localctx, 302, RULE_column_number);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4516);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Type_is_definitionContext extends ParserRuleContext {
		public TerminalNode REPORT() { return getToken(cobolParser.REPORT, 0); }
		public TerminalNode HEADING() { return getToken(cobolParser.HEADING, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode RH() { return getToken(cobolParser.RH, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public TerminalNode PH() { return getToken(cobolParser.PH, 0); }
		public Type_control_nameContext type_control_name() {
			return getRuleContext(Type_control_nameContext.class,0);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode CH() { return getToken(cobolParser.CH, 0); }
		public TerminalNode DETAIL() { return getToken(cobolParser.DETAIL, 0); }
		public TerminalNode DE() { return getToken(cobolParser.DE, 0); }
		public TerminalNode FOOTING() { return getToken(cobolParser.FOOTING, 0); }
		public TerminalNode CF() { return getToken(cobolParser.CF, 0); }
		public TerminalNode PF() { return getToken(cobolParser.PF, 0); }
		public TerminalNode RF() { return getToken(cobolParser.RF, 0); }
		public Type_is_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_type_is_definition; }
	}

	public final Type_is_definitionContext type_is_definition() throws RecognitionException {
		Type_is_definitionContext _localctx = new Type_is_definitionContext(_ctx, getState());
		enterRule(_localctx, 304, RULE_type_is_definition);
		int _la;
		try {
			setState(4592);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,736,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(4518);
				match(REPORT);
				setState(4520); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4519);
					separator();
					}
					}
					setState(4522); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4524);
				match(HEADING);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(4526);
				match(RH);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(4527);
				match(PAGE);
				setState(4529); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4528);
					separator();
					}
					}
					setState(4531); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4533);
				match(HEADING);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(4535);
				match(PH);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(4545);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case CONTROL:
					{
					setState(4536);
					match(CONTROL);
					setState(4538); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4537);
						separator();
						}
						}
						setState(4540); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4542);
					match(HEADING);
					}
					break;
				case CH:
					{
					setState(4544);
					match(CH);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4548); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4547);
					separator();
					}
					}
					setState(4550); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4552);
				type_control_name();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(4554);
				match(DETAIL);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(4555);
				match(DE);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(4565);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case CONTROL:
					{
					setState(4556);
					match(CONTROL);
					setState(4558); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4557);
						separator();
						}
						}
						setState(4560); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4562);
					match(FOOTING);
					}
					break;
				case CF:
					{
					setState(4564);
					match(CF);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4568); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4567);
					separator();
					}
					}
					setState(4570); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4572);
				type_control_name();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(4574);
				match(PAGE);
				setState(4576); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4575);
					separator();
					}
					}
					setState(4578); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4580);
				match(FOOTING);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(4582);
				match(PF);
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(4583);
				match(REPORT);
				setState(4585); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4584);
					separator();
					}
					}
					setState(4587); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4589);
				match(FOOTING);
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(4591);
				match(RF);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Type_control_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode FINAL() { return getToken(cobolParser.FINAL, 0); }
		public Type_control_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_type_control_name; }
	}

	public final Type_control_nameContext type_control_name() throws RecognitionException {
		Type_control_nameContext _localctx = new Type_control_nameContext(_ctx, getState());
		enterRule(_localctx, 306, RULE_type_control_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4594);
			_la = _input.LA(1);
			if ( !(_la==FINAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Next_group_definitionContext extends ParserRuleContext {
		public Line_numContext line_num() {
			return getRuleContext(Line_numContext.class,0);
		}
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public Next_group_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_next_group_definition; }
	}

	public final Next_group_definitionContext next_group_definition() throws RecognitionException {
		Next_group_definitionContext _localctx = new Next_group_definitionContext(_ctx, getState());
		enterRule(_localctx, 308, RULE_next_group_definition);
		int _la;
		try {
			setState(4613);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4596);
				line_num();
				}
				break;
			case PLUS:
				enterOuterAlt(_localctx, 2);
				{
				setState(4597);
				match(PLUS);
				setState(4599); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4598);
					separator();
					}
					}
					setState(4601); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4603);
				line_num();
				}
				break;
			case NEXT:
				enterOuterAlt(_localctx, 3);
				{
				setState(4605);
				match(NEXT);
				setState(4607); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4606);
					separator();
					}
					}
					setState(4609); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4611);
				match(PAGE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Line_num_definitionContext extends ParserRuleContext {
		public Line_numContext line_num() {
			return getRuleContext(Line_numContext.class,0);
		}
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public Line_num_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_line_num_definition; }
	}

	public final Line_num_definitionContext line_num_definition() throws RecognitionException {
		Line_num_definitionContext _localctx = new Line_num_definitionContext(_ctx, getState());
		enterRule(_localctx, 310, RULE_line_num_definition);
		int _la;
		try {
			setState(4647);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4615);
				line_num();
				setState(4637);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,744,_ctx) ) {
				case 1:
					{
					setState(4617); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4616);
						separator();
						}
						}
						setState(4619); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4627);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==ON) {
						{
						setState(4621);
						match(ON);
						setState(4623); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4622);
							separator();
							}
							}
							setState(4625); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					setState(4629);
					match(NEXT);
					setState(4631); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4630);
						separator();
						}
						}
						setState(4633); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4635);
					match(PAGE);
					}
					break;
				}
				}
				break;
			case PLUS:
				enterOuterAlt(_localctx, 2);
				{
				setState(4639);
				match(PLUS);
				setState(4641); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4640);
					separator();
					}
					}
					setState(4643); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4645);
				line_num();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Line_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Line_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_line_num; }
	}

	public final Line_numContext line_num() throws RecognitionException {
		Line_numContext _localctx = new Line_numContext(_ctx, getState());
		enterRule(_localctx, 312, RULE_line_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4649);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rd_clauseContext extends ParserRuleContext {
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CODE() { return getToken(cobolParser.CODE, 0); }
		public Report_codeContext report_code() {
			return getRuleContext(Report_codeContext.class,0);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode CONTROLS() { return getToken(cobolParser.CONTROLS, 0); }
		public List<Control_nameContext> control_name() {
			return getRuleContexts(Control_nameContext.class);
		}
		public Control_nameContext control_name(int i) {
			return getRuleContext(Control_nameContext.class,i);
		}
		public TerminalNode FINAL() { return getToken(cobolParser.FINAL, 0); }
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public Page_size_rdContext page_size_rd() {
			return getRuleContext(Page_size_rdContext.class,0);
		}
		public TerminalNode LIMIT() { return getToken(cobolParser.LIMIT, 0); }
		public TerminalNode LIMITS() { return getToken(cobolParser.LIMITS, 0); }
		public TerminalNode HEADING() { return getToken(cobolParser.HEADING, 0); }
		public Heading_lineContext heading_line() {
			return getRuleContext(Heading_lineContext.class,0);
		}
		public TerminalNode FIRST() { return getToken(cobolParser.FIRST, 0); }
		public List<TerminalNode> DETAIL() { return getTokens(cobolParser.DETAIL); }
		public TerminalNode DETAIL(int i) {
			return getToken(cobolParser.DETAIL, i);
		}
		public First_detail_lineContext first_detail_line() {
			return getRuleContext(First_detail_lineContext.class,0);
		}
		public TerminalNode LAST() { return getToken(cobolParser.LAST, 0); }
		public Last_detail_lineContext last_detail_line() {
			return getRuleContext(Last_detail_lineContext.class,0);
		}
		public TerminalNode FOOTING() { return getToken(cobolParser.FOOTING, 0); }
		public Footing_line_rdContext footing_line_rd() {
			return getRuleContext(Footing_line_rdContext.class,0);
		}
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode LINES() { return getToken(cobolParser.LINES, 0); }
		public Rd_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rd_clause; }
	}

	public final Rd_clauseContext rd_clause() throws RecognitionException {
		Rd_clauseContext _localctx = new Rd_clauseContext(_ctx, getState());
		enterRule(_localctx, 314, RULE_rd_clause);
		int _la;
		try {
			int _alt;
			setState(4841);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case GLOBAL:
			case IS:
				enterOuterAlt(_localctx, 1);
				{
				setState(4657);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4651);
					match(IS);
					setState(4653); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4652);
						separator();
						}
						}
						setState(4655); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(4659);
				match(GLOBAL);
				}
				break;
			case CODE:
				enterOuterAlt(_localctx, 2);
				{
				setState(4660);
				match(CODE);
				setState(4662); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4661);
					separator();
					}
					}
					setState(4664); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4666);
				report_code();
				}
				break;
			case CONTROL:
			case CONTROLS:
				enterOuterAlt(_localctx, 3);
				{
				setState(4688);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case CONTROL:
					{
					setState(4668);
					match(CONTROL);
					setState(4676);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,751,_ctx) ) {
					case 1:
						{
						setState(4670); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4669);
							separator();
							}
							}
							setState(4672); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(4674);
						match(IS);
						}
						break;
					}
					}
					break;
				case CONTROLS:
					{
					setState(4678);
					match(CONTROLS);
					setState(4686);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,753,_ctx) ) {
					case 1:
						{
						setState(4680); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4679);
							separator();
							}
							}
							setState(4682); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(4684);
						match(ARE);
						}
						break;
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4691); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4690);
					separator();
					}
					}
					setState(4693); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4721);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USER_DEFINED_WORD:
					{
					setState(4695);
					control_name();
					setState(4705);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,757,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(4699);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
								{
								{
								setState(4696);
								separator();
								}
								}
								setState(4701);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(4702);
							control_name();
							}
							} 
						}
						setState(4707);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,757,_ctx);
					}
					}
					break;
				case FINAL:
					{
					setState(4708);
					match(FINAL);
					setState(4718);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,759,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(4712);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
								{
								{
								setState(4709);
								separator();
								}
								}
								setState(4714);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(4715);
							control_name();
							}
							} 
						}
						setState(4720);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,759,_ctx);
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			case PAGE:
				enterOuterAlt(_localctx, 4);
				{
				setState(4723);
				match(PAGE);
				setState(4725); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4724);
					separator();
					}
					}
					setState(4727); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(4757);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case LIMIT:
					{
					setState(4729);
					match(LIMIT);
					setState(4731); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4730);
						separator();
						}
						}
						setState(4733); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4741);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==IS) {
						{
						setState(4735);
						match(IS);
						setState(4737); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4736);
							separator();
							}
							}
							setState(4739); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					}
					break;
				case LIMITS:
					{
					setState(4743);
					match(LIMITS);
					setState(4745); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4744);
						separator();
						}
						}
						setState(4747); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4755);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==ARE) {
						{
						setState(4749);
						match(ARE);
						setState(4751); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4750);
							separator();
							}
							}
							setState(4753); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					}
					break;
				case NUMERIC_LITERAL:
					break;
				default:
					break;
				}
				setState(4759);
				page_size_rd();
				setState(4767);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,770,_ctx) ) {
				case 1:
					{
					setState(4761); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4760);
						separator();
						}
						}
						setState(4763); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4765);
					_la = _input.LA(1);
					if ( !(_la==LINE || _la==LINES) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				setState(4782);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,773,_ctx) ) {
				case 1:
					{
					setState(4770); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4769);
						separator();
						}
						}
						setState(4772); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4774);
					match(HEADING);
					setState(4776); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4775);
						separator();
						}
						}
						setState(4778); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4780);
					heading_line();
					}
					break;
				}
				setState(4803);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,777,_ctx) ) {
				case 1:
					{
					setState(4785); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4784);
						separator();
						}
						}
						setState(4787); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4789);
					match(FIRST);
					setState(4791); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4790);
						separator();
						}
						}
						setState(4793); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4795);
					match(DETAIL);
					setState(4797); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4796);
						separator();
						}
						}
						setState(4799); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4801);
					first_detail_line();
					}
					break;
				}
				setState(4824);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,781,_ctx) ) {
				case 1:
					{
					setState(4806); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4805);
						separator();
						}
						}
						setState(4808); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4810);
					match(LAST);
					setState(4812); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4811);
						separator();
						}
						}
						setState(4814); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4816);
					match(DETAIL);
					setState(4818); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4817);
						separator();
						}
						}
						setState(4820); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4822);
					last_detail_line();
					}
					break;
				}
				setState(4839);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,784,_ctx) ) {
				case 1:
					{
					setState(4827); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4826);
						separator();
						}
						}
						setState(4829); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4831);
					match(FOOTING);
					setState(4833); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4832);
						separator();
						}
						}
						setState(4835); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4837);
					footing_line_rd();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Footing_line_rdContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Footing_line_rdContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_footing_line_rd; }
	}

	public final Footing_line_rdContext footing_line_rd() throws RecognitionException {
		Footing_line_rdContext _localctx = new Footing_line_rdContext(_ctx, getState());
		enterRule(_localctx, 316, RULE_footing_line_rd);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4843);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Last_detail_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Last_detail_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_last_detail_line; }
	}

	public final Last_detail_lineContext last_detail_line() throws RecognitionException {
		Last_detail_lineContext _localctx = new Last_detail_lineContext(_ctx, getState());
		enterRule(_localctx, 318, RULE_last_detail_line);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4845);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class First_detail_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public First_detail_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_first_detail_line; }
	}

	public final First_detail_lineContext first_detail_line() throws RecognitionException {
		First_detail_lineContext _localctx = new First_detail_lineContext(_ctx, getState());
		enterRule(_localctx, 320, RULE_first_detail_line);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4847);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Heading_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Heading_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_heading_line; }
	}

	public final Heading_lineContext heading_line() throws RecognitionException {
		Heading_lineContext _localctx = new Heading_lineContext(_ctx, getState());
		enterRule(_localctx, 322, RULE_heading_line);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4849);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Page_size_rdContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Page_size_rdContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_page_size_rd; }
	}

	public final Page_size_rdContext page_size_rd() throws RecognitionException {
		Page_size_rdContext _localctx = new Page_size_rdContext(_ctx, getState());
		enterRule(_localctx, 324, RULE_page_size_rd);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4851);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Control_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Control_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_control_name; }
	}

	public final Control_nameContext control_name() throws RecognitionException {
		Control_nameContext _localctx = new Control_nameContext(_ctx, getState());
		enterRule(_localctx, 326, RULE_control_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4853);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_codeContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Report_codeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_code; }
	}

	public final Report_codeContext report_code() throws RecognitionException {
		Report_codeContext _localctx = new Report_codeContext(_ctx, getState());
		enterRule(_localctx, 328, RULE_report_code);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4855);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class UsageContext extends ParserRuleContext {
		public Usage_definitionContext usage_definition() {
			return getRuleContext(Usage_definitionContext.class,0);
		}
		public TerminalNode USAGE() { return getToken(cobolParser.USAGE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public UsageContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_usage; }
	}

	public final UsageContext usage() throws RecognitionException {
		UsageContext _localctx = new UsageContext(_ctx, getState());
		enterRule(_localctx, 330, RULE_usage);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4872);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==USAGE) {
				{
				setState(4857);
				match(USAGE);
				setState(4865);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,787,_ctx) ) {
				case 1:
					{
					setState(4859); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4858);
						separator();
						}
						}
						setState(4861); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4863);
					match(IS);
					}
					break;
				}
				setState(4868); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4867);
					separator();
					}
					}
					setState(4870); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(4874);
			usage_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Usage_definitionContext extends ParserRuleContext {
		public TerminalNode BINARY() { return getToken(cobolParser.BINARY, 0); }
		public TerminalNode BINARY_CHAR() { return getToken(cobolParser.BINARY_CHAR, 0); }
		public TerminalNode SIGNED() { return getToken(cobolParser.SIGNED, 0); }
		public TerminalNode UNSIGNED() { return getToken(cobolParser.UNSIGNED, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode BINARY_SHORT() { return getToken(cobolParser.BINARY_SHORT, 0); }
		public TerminalNode BINARY_LONG() { return getToken(cobolParser.BINARY_LONG, 0); }
		public TerminalNode BINARY_DOUBLE() { return getToken(cobolParser.BINARY_DOUBLE, 0); }
		public TerminalNode COMPUTATIONAL() { return getToken(cobolParser.COMPUTATIONAL, 0); }
		public TerminalNode COMPUTATIONAL_1() { return getToken(cobolParser.COMPUTATIONAL_1, 0); }
		public TerminalNode COMPUTATIONAL_2() { return getToken(cobolParser.COMPUTATIONAL_2, 0); }
		public TerminalNode COMPUTATIONAL_3() { return getToken(cobolParser.COMPUTATIONAL_3, 0); }
		public TerminalNode COMPUTATIONAL_4() { return getToken(cobolParser.COMPUTATIONAL_4, 0); }
		public TerminalNode COMPUTATIONAL_5() { return getToken(cobolParser.COMPUTATIONAL_5, 0); }
		public TerminalNode COMPUTATIONAL_X() { return getToken(cobolParser.COMPUTATIONAL_X, 0); }
		public TerminalNode COMP() { return getToken(cobolParser.COMP, 0); }
		public TerminalNode COMP_1() { return getToken(cobolParser.COMP_1, 0); }
		public TerminalNode COMP_2() { return getToken(cobolParser.COMP_2, 0); }
		public TerminalNode COMP_3() { return getToken(cobolParser.COMP_3, 0); }
		public TerminalNode COMP_4() { return getToken(cobolParser.COMP_4, 0); }
		public TerminalNode COMP_5() { return getToken(cobolParser.COMP_5, 0); }
		public TerminalNode COMP_X() { return getToken(cobolParser.COMP_X, 0); }
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public TerminalNode FLOAT_SHORT() { return getToken(cobolParser.FLOAT_SHORT, 0); }
		public TerminalNode FLOAT_LONG() { return getToken(cobolParser.FLOAT_LONG, 0); }
		public TerminalNode FLOAT_EXTENDED() { return getToken(cobolParser.FLOAT_EXTENDED, 0); }
		public TerminalNode INDEX() { return getToken(cobolParser.INDEX, 0); }
		public TerminalNode PACKED_DECIMAL() { return getToken(cobolParser.PACKED_DECIMAL, 0); }
		public TerminalNode POINTER() { return getToken(cobolParser.POINTER, 0); }
		public TerminalNode POINTER_64() { return getToken(cobolParser.POINTER_64, 0); }
		public Usage_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_usage_definition; }
	}

	public final Usage_definitionContext usage_definition() throws RecognitionException {
		Usage_definitionContext _localctx = new Usage_definitionContext(_ctx, getState());
		enterRule(_localctx, 332, RULE_usage_definition);
		int _la;
		try {
			setState(4939);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case BINARY:
				enterOuterAlt(_localctx, 1);
				{
				setState(4876);
				match(BINARY);
				}
				break;
			case BINARY_CHAR:
				enterOuterAlt(_localctx, 2);
				{
				setState(4877);
				match(BINARY_CHAR);
				setState(4885);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,791,_ctx) ) {
				case 1:
					{
					setState(4879); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4878);
						separator();
						}
						}
						setState(4881); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4883);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case BINARY_SHORT:
				enterOuterAlt(_localctx, 3);
				{
				setState(4887);
				match(BINARY_SHORT);
				setState(4895);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,793,_ctx) ) {
				case 1:
					{
					setState(4889); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4888);
						separator();
						}
						}
						setState(4891); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4893);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case BINARY_LONG:
				enterOuterAlt(_localctx, 4);
				{
				setState(4897);
				match(BINARY_LONG);
				setState(4905);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,795,_ctx) ) {
				case 1:
					{
					setState(4899); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4898);
						separator();
						}
						}
						setState(4901); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4903);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case BINARY_DOUBLE:
				enterOuterAlt(_localctx, 5);
				{
				setState(4907);
				match(BINARY_DOUBLE);
				setState(4915);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,797,_ctx) ) {
				case 1:
					{
					setState(4909); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4908);
						separator();
						}
						}
						setState(4911); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4913);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case COMPUTATIONAL:
				enterOuterAlt(_localctx, 6);
				{
				setState(4917);
				match(COMPUTATIONAL);
				}
				break;
			case COMPUTATIONAL_1:
				enterOuterAlt(_localctx, 7);
				{
				setState(4918);
				match(COMPUTATIONAL_1);
				}
				break;
			case COMPUTATIONAL_2:
				enterOuterAlt(_localctx, 8);
				{
				setState(4919);
				match(COMPUTATIONAL_2);
				}
				break;
			case COMPUTATIONAL_3:
				enterOuterAlt(_localctx, 9);
				{
				setState(4920);
				match(COMPUTATIONAL_3);
				}
				break;
			case COMPUTATIONAL_4:
				enterOuterAlt(_localctx, 10);
				{
				setState(4921);
				match(COMPUTATIONAL_4);
				}
				break;
			case COMPUTATIONAL_5:
				enterOuterAlt(_localctx, 11);
				{
				setState(4922);
				match(COMPUTATIONAL_5);
				}
				break;
			case COMPUTATIONAL_X:
				enterOuterAlt(_localctx, 12);
				{
				setState(4923);
				match(COMPUTATIONAL_X);
				}
				break;
			case COMP:
				enterOuterAlt(_localctx, 13);
				{
				setState(4924);
				match(COMP);
				}
				break;
			case COMP_1:
				enterOuterAlt(_localctx, 14);
				{
				setState(4925);
				match(COMP_1);
				}
				break;
			case COMP_2:
				enterOuterAlt(_localctx, 15);
				{
				setState(4926);
				match(COMP_2);
				}
				break;
			case COMP_3:
				enterOuterAlt(_localctx, 16);
				{
				setState(4927);
				match(COMP_3);
				}
				break;
			case COMP_4:
				enterOuterAlt(_localctx, 17);
				{
				setState(4928);
				match(COMP_4);
				}
				break;
			case COMP_5:
				enterOuterAlt(_localctx, 18);
				{
				setState(4929);
				match(COMP_5);
				}
				break;
			case COMP_X:
				enterOuterAlt(_localctx, 19);
				{
				setState(4930);
				match(COMP_X);
				}
				break;
			case DISPLAY:
				enterOuterAlt(_localctx, 20);
				{
				setState(4931);
				match(DISPLAY);
				}
				break;
			case FLOAT_SHORT:
				enterOuterAlt(_localctx, 21);
				{
				setState(4932);
				match(FLOAT_SHORT);
				}
				break;
			case FLOAT_LONG:
				enterOuterAlt(_localctx, 22);
				{
				setState(4933);
				match(FLOAT_LONG);
				}
				break;
			case FLOAT_EXTENDED:
				enterOuterAlt(_localctx, 23);
				{
				setState(4934);
				match(FLOAT_EXTENDED);
				}
				break;
			case INDEX:
				enterOuterAlt(_localctx, 24);
				{
				setState(4935);
				match(INDEX);
				}
				break;
			case PACKED_DECIMAL:
				enterOuterAlt(_localctx, 25);
				{
				setState(4936);
				match(PACKED_DECIMAL);
				}
				break;
			case POINTER:
				enterOuterAlt(_localctx, 26);
				{
				setState(4937);
				match(POINTER);
				}
				break;
			case POINTER_64:
				enterOuterAlt(_localctx, 27);
				{
				setState(4938);
				match(POINTER_64);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class PictureContext extends ParserRuleContext {
		public Character_stringContext character_string() {
			return getRuleContext(Character_stringContext.class,0);
		}
		public TerminalNode PICTURE() { return getToken(cobolParser.PICTURE, 0); }
		public TerminalNode PIC() { return getToken(cobolParser.PIC, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public PictureContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_picture; }
	}

	public final PictureContext picture() throws RecognitionException {
		PictureContext _localctx = new PictureContext(_ctx, getState());
		enterRule(_localctx, 334, RULE_picture);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4941);
			_la = _input.LA(1);
			if ( !(_la==PIC || _la==PICTURE) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(4943); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(4942);
					separator();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4945); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,799,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(4953);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(4947);
				match(IS);
				setState(4949); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(4948);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(4951); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,800,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
			}

			setState(4955);
			character_string();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Character_stringContext extends ParserRuleContext {
		public List<Char_str_partContext> char_str_part() {
			return getRuleContexts(Char_str_partContext.class);
		}
		public Char_str_partContext char_str_part(int i) {
			return getRuleContext(Char_str_partContext.class,i);
		}
		public Character_stringContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_character_string; }
	}

	public final Character_stringContext character_string() throws RecognitionException {
		Character_stringContext _localctx = new Character_stringContext(_ctx, getState());
		enterRule(_localctx, 336, RULE_character_string);
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4958); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(4957);
					char_str_part();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4960); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,802,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Char_str_partContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode COMMA_() { return getToken(cobolParser.COMMA_, 0); }
		public TerminalNode SLASH_() { return getToken(cobolParser.SLASH_, 0); }
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Char_str_partContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_char_str_part; }
	}

	public final Char_str_partContext char_str_part() throws RecognitionException {
		Char_str_partContext _localctx = new Char_str_partContext(_ctx, getState());
		enterRule(_localctx, 338, RULE_char_str_part);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4962);
			_la = _input.LA(1);
			if ( !(((((_la - 417)) & ~0x3f) == 0 && ((1L << (_la - 417)) & ((1L << (SLASH_ - 417)) | (1L << (COMMA_ - 417)) | (1L << (LPAREN_ - 417)) | (1L << (RPAREN_ - 417)) | (1L << (DOT_ - 417)) | (1L << (NUMERIC_LITERAL - 417)) | (1L << (USER_DEFINED_WORD - 417)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Other_data_itemContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Other_data_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_other_data_item; }
	}

	public final Other_data_itemContext other_data_item() throws RecognitionException {
		Other_data_itemContext _localctx = new Other_data_itemContext(_ctx, getState());
		enterRule(_localctx, 340, RULE_other_data_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4964);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Data_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_name; }
	}

	public final Data_nameContext data_name() throws RecognitionException {
		Data_nameContext _localctx = new Data_nameContext(_ctx, getState());
		enterRule(_localctx, 342, RULE_data_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4966);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sd_clauseContext extends ParserRuleContext {
		public RecordContext record() {
			return getRuleContext(RecordContext.class,0);
		}
		public Data_recContext data_rec() {
			return getRuleContext(Data_recContext.class,0);
		}
		public Sd_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sd_clause; }
	}

	public final Sd_clauseContext sd_clause() throws RecognitionException {
		Sd_clauseContext _localctx = new Sd_clauseContext(_ctx, getState());
		enterRule(_localctx, 344, RULE_sd_clause);
		try {
			setState(4970);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case RECORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(4968);
				record();
				}
				break;
			case DATA:
				enterOuterAlt(_localctx, 2);
				{
				setState(4969);
				data_rec();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_isContext extends ParserRuleContext {
		public List<Report_nameContext> report_name() {
			return getRuleContexts(Report_nameContext.class);
		}
		public Report_nameContext report_name(int i) {
			return getRuleContext(Report_nameContext.class,i);
		}
		public TerminalNode REPORT() { return getToken(cobolParser.REPORT, 0); }
		public TerminalNode REPORTS() { return getToken(cobolParser.REPORTS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public Report_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_is; }
	}

	public final Report_isContext report_is() throws RecognitionException {
		Report_isContext _localctx = new Report_isContext(_ctx, getState());
		enterRule(_localctx, 346, RULE_report_is);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4992);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case REPORT:
				{
				setState(4972);
				match(REPORT);
				setState(4980);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,805,_ctx) ) {
				case 1:
					{
					setState(4974); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4973);
						separator();
						}
						}
						setState(4976); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4978);
					match(IS);
					}
					break;
				}
				}
				break;
			case REPORTS:
				{
				setState(4982);
				match(REPORTS);
				setState(4990);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,807,_ctx) ) {
				case 1:
					{
					setState(4984); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4983);
						separator();
						}
						}
						setState(4986); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(4988);
					match(ARE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(4995); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4994);
				separator();
				}
				}
				setState(4997); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(4999);
			report_name();
			setState(5009);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,811,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5003);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(5000);
						separator();
						}
						}
						setState(5005);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(5006);
					report_name();
					}
					} 
				}
				setState(5011);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,811,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Report_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_name; }
	}

	public final Report_nameContext report_name() throws RecognitionException {
		Report_nameContext _localctx = new Report_nameContext(_ctx, getState());
		enterRule(_localctx, 348, RULE_report_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5012);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class LinageContext extends ParserRuleContext {
		public TerminalNode LINAGE() { return getToken(cobolParser.LINAGE, 0); }
		public Page_sizeContext page_size() {
			return getRuleContext(Page_sizeContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<TerminalNode> LINES() { return getTokens(cobolParser.LINES); }
		public TerminalNode LINES(int i) {
			return getToken(cobolParser.LINES, i);
		}
		public TerminalNode FOOTING() { return getToken(cobolParser.FOOTING, 0); }
		public Footing_lineContext footing_line() {
			return getRuleContext(Footing_lineContext.class,0);
		}
		public TerminalNode TOP() { return getToken(cobolParser.TOP, 0); }
		public Top_linesContext top_lines() {
			return getRuleContext(Top_linesContext.class,0);
		}
		public TerminalNode BOTTOM() { return getToken(cobolParser.BOTTOM, 0); }
		public Bottom_linesContext bottom_lines() {
			return getRuleContext(Bottom_linesContext.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<TerminalNode> AT() { return getTokens(cobolParser.AT); }
		public TerminalNode AT(int i) {
			return getToken(cobolParser.AT, i);
		}
		public LinageContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_linage; }
	}

	public final LinageContext linage() throws RecognitionException {
		LinageContext _localctx = new LinageContext(_ctx, getState());
		enterRule(_localctx, 350, RULE_linage);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5014);
			match(LINAGE);
			setState(5016); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5015);
				separator();
				}
				}
				setState(5018); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5026);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5020);
				match(IS);
				setState(5022); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5021);
					separator();
					}
					}
					setState(5024); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(5028);
			page_size();
			setState(5036);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,816,_ctx) ) {
			case 1:
				{
				setState(5030); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5029);
					separator();
					}
					}
					setState(5032); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5034);
				match(LINES);
				}
				break;
			}
			setState(5067);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,823,_ctx) ) {
			case 1:
				{
				setState(5039); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5038);
					separator();
					}
					}
					setState(5041); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5049);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(5043);
					match(WITH);
					setState(5045); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5044);
						separator();
						}
						}
						setState(5047); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5051);
				match(FOOTING);
				setState(5053); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5052);
					separator();
					}
					}
					setState(5055); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5063);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(5057);
					match(AT);
					setState(5059); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5058);
						separator();
						}
						}
						setState(5061); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5065);
				footing_line();
				}
				break;
			}
			setState(5098);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,830,_ctx) ) {
			case 1:
				{
				setState(5070); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5069);
					separator();
					}
					}
					setState(5072); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5080);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==LINES) {
					{
					setState(5074);
					match(LINES);
					setState(5076); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5075);
						separator();
						}
						}
						setState(5078); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5088);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(5082);
					match(AT);
					setState(5084); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5083);
						separator();
						}
						}
						setState(5086); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5090);
				match(TOP);
				setState(5092); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5091);
					separator();
					}
					}
					setState(5094); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5096);
				top_lines();
				}
				break;
			}
			setState(5129);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,837,_ctx) ) {
			case 1:
				{
				setState(5101); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5100);
					separator();
					}
					}
					setState(5103); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5111);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==LINES) {
					{
					setState(5105);
					match(LINES);
					setState(5107); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5106);
						separator();
						}
						}
						setState(5109); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5119);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(5113);
					match(AT);
					setState(5115); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5114);
						separator();
						}
						}
						setState(5117); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5121);
				match(BOTTOM);
				setState(5123); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5122);
					separator();
					}
					}
					setState(5125); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5127);
				bottom_lines();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Bottom_linesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Bottom_linesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_bottom_lines; }
	}

	public final Bottom_linesContext bottom_lines() throws RecognitionException {
		Bottom_linesContext _localctx = new Bottom_linesContext(_ctx, getState());
		enterRule(_localctx, 352, RULE_bottom_lines);
		try {
			setState(5133);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(5131);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(5132);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Top_linesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Top_linesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_top_lines; }
	}

	public final Top_linesContext top_lines() throws RecognitionException {
		Top_linesContext _localctx = new Top_linesContext(_ctx, getState());
		enterRule(_localctx, 354, RULE_top_lines);
		try {
			setState(5137);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(5135);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(5136);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Footing_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Footing_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_footing_line; }
	}

	public final Footing_lineContext footing_line() throws RecognitionException {
		Footing_lineContext _localctx = new Footing_lineContext(_ctx, getState());
		enterRule(_localctx, 356, RULE_footing_line);
		try {
			setState(5141);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(5139);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(5140);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Page_sizeContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Page_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_page_size; }
	}

	public final Page_sizeContext page_size() throws RecognitionException {
		Page_sizeContext _localctx = new Page_sizeContext(_ctx, getState());
		enterRule(_localctx, 358, RULE_page_size);
		try {
			setState(5145);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(5143);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(5144);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_recContext extends ParserRuleContext {
		public TerminalNode DATA() { return getToken(cobolParser.DATA, 0); }
		public List<Rec_nameContext> rec_name() {
			return getRuleContexts(Rec_nameContext.class);
		}
		public Rec_nameContext rec_name(int i) {
			return getRuleContext(Rec_nameContext.class,i);
		}
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Data_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_rec; }
	}

	public final Data_recContext data_rec() throws RecognitionException {
		Data_recContext _localctx = new Data_recContext(_ctx, getState());
		enterRule(_localctx, 360, RULE_data_rec);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5147);
			match(DATA);
			setState(5149); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5148);
				separator();
				}
				}
				setState(5151); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5173);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case RECORDS:
				{
				setState(5153);
				match(RECORDS);
				setState(5161);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					setState(5155); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5154);
						separator();
						}
						}
						setState(5157); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(5159);
					match(ARE);
					}
				}

				}
				break;
			case RECORD:
				{
				setState(5163);
				match(RECORD);
				setState(5171);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					setState(5165); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5164);
						separator();
						}
						}
						setState(5167); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(5169);
					match(IS);
					}
				}

				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(5175);
			rec_name();
			setState(5185);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,849,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5177); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5176);
						separator();
						}
						}
						setState(5179); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(5181);
					rec_name();
					}
					} 
				}
				setState(5187);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,849,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rec_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Rec_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rec_name; }
	}

	public final Rec_nameContext rec_name() throws RecognitionException {
		Rec_nameContext _localctx = new Rec_nameContext(_ctx, getState());
		enterRule(_localctx, 362, RULE_rec_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5188);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_of_idContext extends ParserRuleContext {
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public Value_of_id_definitionContext value_of_id_definition() {
			return getRuleContext(Value_of_id_definitionContext.class,0);
		}
		public TerminalNode ID() { return getToken(cobolParser.ID, 0); }
		public TerminalNode FILE_ID() { return getToken(cobolParser.FILE_ID, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Value_of_idContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_of_id; }
	}

	public final Value_of_idContext value_of_id() throws RecognitionException {
		Value_of_idContext _localctx = new Value_of_idContext(_ctx, getState());
		enterRule(_localctx, 364, RULE_value_of_id);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5190);
			match(VALUE);
			setState(5192); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5191);
				separator();
				}
				}
				setState(5194); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5196);
			match(OF);
			setState(5198); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5197);
				separator();
				}
				}
				setState(5200); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5202);
			_la = _input.LA(1);
			if ( !(_la==FILE_ID || _la==ID) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(5204); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5203);
				separator();
				}
				}
				setState(5206); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5214);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5208);
				match(IS);
				setState(5210); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5209);
					separator();
					}
					}
					setState(5212); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(5216);
			value_of_id_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_of_id_definitionContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Value_of_id_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_of_id_definition; }
	}

	public final Value_of_id_definitionContext value_of_id_definition() throws RecognitionException {
		Value_of_id_definitionContext _localctx = new Value_of_id_definitionContext(_ctx, getState());
		enterRule(_localctx, 366, RULE_value_of_id_definition);
		try {
			setState(5220);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(5218);
				match(STRING_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(5219);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class LabelContext extends ParserRuleContext {
		public TerminalNode LABEL() { return getToken(cobolParser.LABEL, 0); }
		public TerminalNode STANDARD() { return getToken(cobolParser.STANDARD, 0); }
		public TerminalNode OMITTED() { return getToken(cobolParser.OMITTED, 0); }
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public LabelContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_label; }
	}

	public final LabelContext label() throws RecognitionException {
		LabelContext _localctx = new LabelContext(_ctx, getState());
		enterRule(_localctx, 368, RULE_label);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5222);
			match(LABEL);
			setState(5224); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5223);
				separator();
				}
				}
				setState(5226); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5248);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case RECORDS:
				{
				setState(5228);
				match(RECORDS);
				setState(5236);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,858,_ctx) ) {
				case 1:
					{
					setState(5230); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5229);
						separator();
						}
						}
						setState(5232); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(5234);
					match(ARE);
					}
					break;
				}
				}
				break;
			case RECORD:
				{
				setState(5238);
				match(RECORD);
				setState(5246);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,860,_ctx) ) {
				case 1:
					{
					setState(5240); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5239);
						separator();
						}
						}
						setState(5242); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(5244);
					match(IS);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(5251); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5250);
				separator();
				}
				}
				setState(5253); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5255);
			_la = _input.LA(1);
			if ( !(_la==OMITTED || _la==STANDARD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RecordContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public Record_definitionContext record_definition() {
			return getRuleContext(Record_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public RecordContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record; }
	}

	public final RecordContext record() throws RecognitionException {
		RecordContext _localctx = new RecordContext(_ctx, getState());
		enterRule(_localctx, 370, RULE_record);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5257);
			match(RECORD);
			setState(5259); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5258);
				separator();
				}
				}
				setState(5261); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5263);
			record_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_definitionContext extends ParserRuleContext {
		public Longest_recContext longest_rec() {
			return getRuleContext(Longest_recContext.class,0);
		}
		public TerminalNode CONTAINS() { return getToken(cobolParser.CONTAINS, 0); }
		public Shortest_recContext shortest_rec() {
			return getRuleContext(Shortest_recContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public TerminalNode VARYING() { return getToken(cobolParser.VARYING, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public TerminalNode DEPENDING() { return getToken(cobolParser.DEPENDING, 0); }
		public Depending_itemContext depending_item() {
			return getRuleContext(Depending_itemContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Record_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_definition; }
	}

	public final Record_definitionContext record_definition() throws RecognitionException {
		Record_definitionContext _localctx = new Record_definitionContext(_ctx, getState());
		enterRule(_localctx, 372, RULE_record_definition);
		int _la;
		try {
			int _alt;
			setState(5388);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case CONTAINS:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(5271);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CONTAINS) {
					{
					setState(5265);
					match(CONTAINS);
					setState(5267); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5266);
						separator();
						}
						}
						setState(5269); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5285);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,868,_ctx) ) {
				case 1:
					{
					setState(5273);
					shortest_rec();
					setState(5275); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5274);
						separator();
						}
						}
						setState(5277); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(5279);
					match(TO);
					setState(5281); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5280);
						separator();
						}
						}
						setState(5283); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
					break;
				}
				setState(5287);
				longest_rec();
				setState(5291);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,869,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5288);
						separator();
						}
						} 
					}
					setState(5293);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,869,_ctx);
				}
				setState(5301);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CHARACTERS) {
					{
					setState(5294);
					match(CHARACTERS);
					setState(5298);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,870,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(5295);
							separator();
							}
							} 
						}
						setState(5300);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,870,_ctx);
					}
					}
				}

				}
				break;
			case IS:
			case VARYING:
				enterOuterAlt(_localctx, 2);
				{
				setState(5309);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5303);
					match(IS);
					setState(5305); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5304);
						separator();
						}
						}
						setState(5307); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5311);
				match(VARYING);
				setState(5313); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(5312);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(5315); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,874,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				setState(5323);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IN) {
					{
					setState(5317);
					match(IN);
					setState(5319); 
					_errHandler.sync(this);
					_alt = 1;
					do {
						switch (_alt) {
						case 1:
							{
							{
							setState(5318);
							separator();
							}
							}
							break;
						default:
							throw new NoViableAltException(this);
						}
						setState(5321); 
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,875,_ctx);
					} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
					}
				}

				setState(5332);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==SIZE) {
					{
					setState(5325);
					match(SIZE);
					setState(5329);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,877,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(5326);
							separator();
							}
							} 
						}
						setState(5331);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,877,_ctx);
					}
					}
				}

				setState(5343);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==FROM || _la==NUMERIC_LITERAL) {
					{
					setState(5340);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==FROM) {
						{
						setState(5334);
						match(FROM);
						setState(5336); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5335);
							separator();
							}
							}
							setState(5338); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					setState(5342);
					shortest_rec();
					}
				}

				setState(5353);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==TO) {
					{
					setState(5345);
					match(TO);
					setState(5347); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5346);
						separator();
						}
						}
						setState(5349); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(5351);
					longest_rec();
					}
				}

				setState(5368);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,886,_ctx) ) {
				case 1:
					{
					setState(5358);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(5355);
						separator();
						}
						}
						setState(5360);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(5361);
					match(CHARACTERS);
					setState(5365);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,885,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(5362);
							separator();
							}
							} 
						}
						setState(5367);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,885,_ctx);
					}
					}
					break;
				}
				setState(5386);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==DEPENDING) {
					{
					setState(5370);
					match(DEPENDING);
					setState(5372); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5371);
						separator();
						}
						}
						setState(5374); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(5382);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==ON) {
						{
						setState(5376);
						match(ON);
						setState(5378); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5377);
							separator();
							}
							}
							setState(5380); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					setState(5384);
					depending_item();
					}
				}

				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Depending_itemContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Depending_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_depending_item; }
	}

	public final Depending_itemContext depending_item() throws RecognitionException {
		Depending_itemContext _localctx = new Depending_itemContext(_ctx, getState());
		enterRule(_localctx, 374, RULE_depending_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5390);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Shortest_recContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Shortest_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_shortest_rec; }
	}

	public final Shortest_recContext shortest_rec() throws RecognitionException {
		Shortest_recContext _localctx = new Shortest_recContext(_ctx, getState());
		enterRule(_localctx, 376, RULE_shortest_rec);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5392);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Longest_recContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Longest_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_longest_rec; }
	}

	public final Longest_recContext longest_rec() throws RecognitionException {
		Longest_recContext _localctx = new Longest_recContext(_ctx, getState());
		enterRule(_localctx, 378, RULE_longest_rec);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5394);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_description_entryContext extends ParserRuleContext {
		public Level_numberContext level_number() {
			return getRuleContext(Level_numberContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<Screen_description_clauseContext> screen_description_clause() {
			return getRuleContexts(Screen_description_clauseContext.class);
		}
		public Screen_description_clauseContext screen_description_clause(int i) {
			return getRuleContext(Screen_description_clauseContext.class,i);
		}
		public Screen_nameContext screen_name() {
			return getRuleContext(Screen_nameContext.class,0);
		}
		public TerminalNode FILLER() { return getToken(cobolParser.FILLER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Screen_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_description_entry; }
	}

	public final Screen_description_entryContext screen_description_entry() throws RecognitionException {
		Screen_description_entryContext _localctx = new Screen_description_entryContext(_ctx, getState());
		enterRule(_localctx, 380, RULE_screen_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5396);
			level_number();
			setState(5406);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,894,_ctx) ) {
			case 1:
				{
				setState(5398); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5397);
					separator();
					}
					}
					setState(5400); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5404);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USER_DEFINED_WORD:
					{
					setState(5402);
					screen_name();
					}
					break;
				case FILLER:
					{
					setState(5403);
					match(FILLER);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(5417);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5409); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5408);
					separator();
					}
					}
					setState(5411); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5413);
				screen_description_clause();
				}
				}
				setState(5419);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5420);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Screen_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_name; }
	}

	public final Screen_nameContext screen_name() throws RecognitionException {
		Screen_nameContext _localctx = new Screen_nameContext(_ctx, getState());
		enterRule(_localctx, 382, RULE_screen_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5422);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_description_clauseContext extends ParserRuleContext {
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FOREGROUND_COLOR() { return getToken(cobolParser.FOREGROUND_COLOR, 0); }
		public Color_numContext color_num() {
			return getRuleContext(Color_numContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode BACKGROUND_COLOR() { return getToken(cobolParser.BACKGROUND_COLOR, 0); }
		public TerminalNode AUTO() { return getToken(cobolParser.AUTO, 0); }
		public TerminalNode SECURE() { return getToken(cobolParser.SECURE, 0); }
		public TerminalNode REQUIRED() { return getToken(cobolParser.REQUIRED, 0); }
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public TerminalNode USAGE() { return getToken(cobolParser.USAGE, 0); }
		public Sign_isContext sign_is() {
			return getRuleContext(Sign_isContext.class,0);
		}
		public TerminalNode FULL() { return getToken(cobolParser.FULL, 0); }
		public TerminalNode BELL() { return getToken(cobolParser.BELL, 0); }
		public TerminalNode BLINK() { return getToken(cobolParser.BLINK, 0); }
		public TerminalNode ERASE() { return getToken(cobolParser.ERASE, 0); }
		public TerminalNode EOL() { return getToken(cobolParser.EOL, 0); }
		public TerminalNode EOS() { return getToken(cobolParser.EOS, 0); }
		public TerminalNode HIGHLIGHT() { return getToken(cobolParser.HIGHLIGHT, 0); }
		public TerminalNode LOWLIGHT() { return getToken(cobolParser.LOWLIGHT, 0); }
		public TerminalNode REVERSE_VIDEO() { return getToken(cobolParser.REVERSE_VIDEO, 0); }
		public TerminalNode UNDERLINE() { return getToken(cobolParser.UNDERLINE, 0); }
		public Src_numberContext src_number() {
			return getRuleContext(Src_numberContext.class,0);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public Nonnumeric_literalContext nonnumeric_literal() {
			return getRuleContext(Nonnumeric_literalContext.class,0);
		}
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode WHEN() { return getToken(cobolParser.WHEN, 0); }
		public TerminalNode JUSTIFIED() { return getToken(cobolParser.JUSTIFIED, 0); }
		public TerminalNode JUST() { return getToken(cobolParser.JUST, 0); }
		public TerminalNode RIGHT() { return getToken(cobolParser.RIGHT, 0); }
		public PictureContext picture() {
			return getRuleContext(PictureContext.class,0);
		}
		public Scr_pic_usingContext scr_pic_using() {
			return getRuleContext(Scr_pic_usingContext.class,0);
		}
		public Scr_pic_fromContext scr_pic_from() {
			return getRuleContext(Scr_pic_fromContext.class,0);
		}
		public Scr_pic_toContext scr_pic_to() {
			return getRuleContext(Scr_pic_toContext.class,0);
		}
		public Screen_description_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_description_clause; }
	}

	public final Screen_description_clauseContext screen_description_clause() throws RecognitionException {
		Screen_description_clauseContext _localctx = new Screen_description_clauseContext(_ctx, getState());
		enterRule(_localctx, 384, RULE_screen_description_clause);
		int _la;
		try {
			setState(5626);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,935,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(5424);
				match(BLANK);
				setState(5426); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5425);
					separator();
					}
					}
					setState(5428); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5430);
				_la = _input.LA(1);
				if ( !(_la==LINE || _la==SCREEN) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(5432);
				match(FOREGROUND_COLOR);
				setState(5434); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5433);
					separator();
					}
					}
					setState(5436); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5444);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5438);
					match(IS);
					setState(5440); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5439);
						separator();
						}
						}
						setState(5442); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5446);
				color_num();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(5448);
				match(BACKGROUND_COLOR);
				setState(5450); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5449);
					separator();
					}
					}
					setState(5452); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5460);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5454);
					match(IS);
					setState(5456); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5455);
						separator();
						}
						}
						setState(5458); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5462);
				color_num();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(5464);
				match(AUTO);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(5465);
				match(SECURE);
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(5466);
				match(REQUIRED);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(5481);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==USAGE) {
					{
					setState(5467);
					match(USAGE);
					setState(5469); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5468);
						separator();
						}
						}
						setState(5471); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(5479);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==IS) {
						{
						setState(5473);
						match(IS);
						setState(5475); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5474);
							separator();
							}
							}
							setState(5477); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					}
				}

				setState(5483);
				match(DISPLAY);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(5484);
				sign_is();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(5485);
				match(FULL);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(5486);
				match(BELL);
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(5487);
				match(BLINK);
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(5488);
				match(ERASE);
				setState(5490); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5489);
					separator();
					}
					}
					setState(5492); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5494);
				_la = _input.LA(1);
				if ( !(_la==EOL || _la==EOS) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 13:
				enterOuterAlt(_localctx, 13);
				{
				setState(5496);
				match(HIGHLIGHT);
				}
				break;
			case 14:
				enterOuterAlt(_localctx, 14);
				{
				setState(5497);
				match(LOWLIGHT);
				}
				break;
			case 15:
				enterOuterAlt(_localctx, 15);
				{
				setState(5498);
				match(REVERSE_VIDEO);
				}
				break;
			case 16:
				enterOuterAlt(_localctx, 16);
				{
				setState(5499);
				match(UNDERLINE);
				}
				break;
			case 17:
				enterOuterAlt(_localctx, 17);
				{
				setState(5500);
				match(LINE);
				setState(5502); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5501);
					separator();
					}
					}
					setState(5504); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5512);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(5506);
					match(NUMBER);
					setState(5508); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5507);
						separator();
						}
						}
						setState(5510); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5520);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5514);
					match(IS);
					setState(5516); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5515);
						separator();
						}
						}
						setState(5518); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5528);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==PLUS) {
					{
					setState(5522);
					match(PLUS);
					setState(5524); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5523);
						separator();
						}
						}
						setState(5526); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5530);
				src_number();
				}
				break;
			case 18:
				enterOuterAlt(_localctx, 18);
				{
				setState(5532);
				match(COLUMN);
				setState(5534); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5533);
					separator();
					}
					}
					setState(5536); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5544);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(5538);
					match(NUMBER);
					setState(5540); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5539);
						separator();
						}
						}
						setState(5542); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5552);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5546);
					match(IS);
					setState(5548); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5547);
						separator();
						}
						}
						setState(5550); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5560);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==PLUS) {
					{
					setState(5554);
					match(PLUS);
					setState(5556); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5555);
						separator();
						}
						}
						setState(5558); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5562);
				src_number();
				}
				break;
			case 19:
				enterOuterAlt(_localctx, 19);
				{
				setState(5564);
				match(VALUE);
				setState(5566); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5565);
					separator();
					}
					}
					setState(5568); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5576);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5570);
					match(IS);
					setState(5572); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5571);
						separator();
						}
						}
						setState(5574); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5578);
				nonnumeric_literal();
				}
				break;
			case 20:
				enterOuterAlt(_localctx, 20);
				{
				setState(5580);
				match(BLANK);
				setState(5582); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5581);
					separator();
					}
					}
					setState(5584); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5592);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WHEN) {
					{
					setState(5586);
					match(WHEN);
					setState(5588); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5587);
						separator();
						}
						}
						setState(5590); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(5594);
				match(ZERO);
				}
				break;
			case 21:
				enterOuterAlt(_localctx, 21);
				{
				setState(5596);
				_la = _input.LA(1);
				if ( !(_la==JUST || _la==JUSTIFIED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(5604);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,930,_ctx) ) {
				case 1:
					{
					setState(5598); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5597);
						separator();
						}
						}
						setState(5600); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(5602);
					match(RIGHT);
					}
					break;
				}
				}
				break;
			case 22:
				enterOuterAlt(_localctx, 22);
				{
				setState(5606);
				picture();
				setState(5608); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5607);
					separator();
					}
					}
					setState(5610); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5624);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USING:
					{
					setState(5612);
					scr_pic_using();
					}
					break;
				case FROM:
					{
					setState(5613);
					scr_pic_from();
					setState(5621);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,933,_ctx) ) {
					case 1:
						{
						setState(5615); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5614);
							separator();
							}
							}
							setState(5617); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(5619);
						scr_pic_to();
						}
						break;
					}
					}
					break;
				case TO:
					{
					setState(5623);
					scr_pic_to();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Scr_pic_usingContext extends ParserRuleContext {
		public TerminalNode USING() { return getToken(cobolParser.USING, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Scr_pic_usingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_scr_pic_using; }
	}

	public final Scr_pic_usingContext scr_pic_using() throws RecognitionException {
		Scr_pic_usingContext _localctx = new Scr_pic_usingContext(_ctx, getState());
		enterRule(_localctx, 386, RULE_scr_pic_using);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5628);
			match(USING);
			setState(5630); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5629);
				separator();
				}
				}
				setState(5632); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5634);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Scr_pic_fromContext extends ParserRuleContext {
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Nonnumeric_literalContext nonnumeric_literal() {
			return getRuleContext(Nonnumeric_literalContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Scr_pic_fromContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_scr_pic_from; }
	}

	public final Scr_pic_fromContext scr_pic_from() throws RecognitionException {
		Scr_pic_fromContext _localctx = new Scr_pic_fromContext(_ctx, getState());
		enterRule(_localctx, 388, RULE_scr_pic_from);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5636);
			match(FROM);
			setState(5638); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5637);
				separator();
				}
				}
				setState(5640); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5644);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				{
				setState(5642);
				qualified_data_item();
				}
				break;
			case STRING_LITERAL:
				{
				setState(5643);
				nonnumeric_literal();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Scr_pic_toContext extends ParserRuleContext {
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Scr_pic_toContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_scr_pic_to; }
	}

	public final Scr_pic_toContext scr_pic_to() throws RecognitionException {
		Scr_pic_toContext _localctx = new Scr_pic_toContext(_ctx, getState());
		enterRule(_localctx, 390, RULE_scr_pic_to);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5646);
			match(TO);
			setState(5648); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5647);
				separator();
				}
				}
				setState(5650); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5652);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Nonnumeric_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Nonnumeric_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_nonnumeric_literal; }
	}

	public final Nonnumeric_literalContext nonnumeric_literal() throws RecognitionException {
		Nonnumeric_literalContext _localctx = new Nonnumeric_literalContext(_ctx, getState());
		enterRule(_localctx, 392, RULE_nonnumeric_literal);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5654);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Src_numberContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Src_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_src_number; }
	}

	public final Src_numberContext src_number() throws RecognitionException {
		Src_numberContext _localctx = new Src_numberContext(_ctx, getState());
		enterRule(_localctx, 394, RULE_src_number);
		try {
			setState(5658);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(5656);
				qualified_data_item();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(5657);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Color_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Color_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_color_num; }
	}

	public final Color_numContext color_num() throws RecognitionException {
		Color_numContext _localctx = new Color_numContext(_ctx, getState());
		enterRule(_localctx, 396, RULE_color_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5660);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Identification_divisionContext extends ParserRuleContext {
		public TerminalNode IDENTIFICATION_IN_A_AREA() { return getToken(cobolParser.IDENTIFICATION_IN_A_AREA, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Identification_division_paragraphContext> identification_division_paragraph() {
			return getRuleContexts(Identification_division_paragraphContext.class);
		}
		public Identification_division_paragraphContext identification_division_paragraph(int i) {
			return getRuleContext(Identification_division_paragraphContext.class,i);
		}
		public Identification_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identification_division; }
	}

	public final Identification_divisionContext identification_division() throws RecognitionException {
		Identification_divisionContext _localctx = new Identification_divisionContext(_ctx, getState());
		enterRule(_localctx, 398, RULE_identification_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5662);
			match(IDENTIFICATION_IN_A_AREA);
			setState(5664); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5663);
				separator();
				}
				}
				setState(5666); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5668);
			match(DIVISION);
			setState(5672);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5669);
				separator();
				}
				}
				setState(5674);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5675);
			match(DOT_);
			setState(5679);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,943,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5676);
					separator();
					}
					} 
				}
				setState(5681);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,943,_ctx);
			}
			setState(5685);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,944,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5682);
					identification_division_paragraph();
					}
					} 
				}
				setState(5687);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,944,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Identification_division_paragraphContext extends ParserRuleContext {
		public Program_idContext program_id() {
			return getRuleContext(Program_idContext.class,0);
		}
		public AuthorContext author() {
			return getRuleContext(AuthorContext.class,0);
		}
		public InstallationContext installation() {
			return getRuleContext(InstallationContext.class,0);
		}
		public Date_writtenContext date_written() {
			return getRuleContext(Date_writtenContext.class,0);
		}
		public Date_compiledContext date_compiled() {
			return getRuleContext(Date_compiledContext.class,0);
		}
		public SecurityContext security() {
			return getRuleContext(SecurityContext.class,0);
		}
		public Options_Context options_() {
			return getRuleContext(Options_Context.class,0);
		}
		public SeparatorContext separator() {
			return getRuleContext(SeparatorContext.class,0);
		}
		public Identification_division_paragraphContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identification_division_paragraph; }
	}

	public final Identification_division_paragraphContext identification_division_paragraph() throws RecognitionException {
		Identification_division_paragraphContext _localctx = new Identification_division_paragraphContext(_ctx, getState());
		enterRule(_localctx, 400, RULE_identification_division_paragraph);
		try {
			setState(5696);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case PROGRAM_ID:
				enterOuterAlt(_localctx, 1);
				{
				setState(5688);
				program_id();
				}
				break;
			case AUTHOR:
				enterOuterAlt(_localctx, 2);
				{
				setState(5689);
				author();
				}
				break;
			case INSTALLATION:
				enterOuterAlt(_localctx, 3);
				{
				setState(5690);
				installation();
				}
				break;
			case DATE_WRITTEN:
				enterOuterAlt(_localctx, 4);
				{
				setState(5691);
				date_written();
				}
				break;
			case DATE_COMPILED:
				enterOuterAlt(_localctx, 5);
				{
				setState(5692);
				date_compiled();
				}
				break;
			case SECURITY:
				enterOuterAlt(_localctx, 6);
				{
				setState(5693);
				security();
				}
				break;
			case OPTIONS:
				enterOuterAlt(_localctx, 7);
				{
				setState(5694);
				options_();
				}
				break;
			case START_SLASH_:
			case START_STAR_:
			case COMMA_:
			case SEMI_:
			case START_FOUR_SPACES:
			case WHITESPACE:
			case NEWLINE:
				enterOuterAlt(_localctx, 8);
				{
				setState(5695);
				separator();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Program_idContext extends ParserRuleContext {
		public TerminalNode PROGRAM_ID() { return getToken(cobolParser.PROGRAM_ID, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public Program_nameContext program_name() {
			return getRuleContext(Program_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Is_programContext is_program() {
			return getRuleContext(Is_programContext.class,0);
		}
		public With_identContext with_ident() {
			return getRuleContext(With_identContext.class,0);
		}
		public Program_idContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program_id; }
	}

	public final Program_idContext program_id() throws RecognitionException {
		Program_idContext _localctx = new Program_idContext(_ctx, getState());
		enterRule(_localctx, 402, RULE_program_id);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5698);
			match(PROGRAM_ID);
			setState(5702);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5699);
				separator();
				}
				}
				setState(5704);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5705);
			match(DOT_);
			setState(5709);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5706);
				separator();
				}
				}
				setState(5711);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5712);
			program_name();
			setState(5716);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,948,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5713);
					separator();
					}
					} 
				}
				setState(5718);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,948,_ctx);
			}
			setState(5720);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==COMMON || _la==INITIAL || _la==IS) {
				{
				setState(5719);
				is_program();
				}
			}

			setState(5725);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,950,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5722);
					separator();
					}
					} 
				}
				setState(5727);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,950,_ctx);
			}
			setState(5729);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IDENT || _la==WITH) {
				{
				setState(5728);
				with_ident();
				}
			}

			setState(5734);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5731);
				separator();
				}
				}
				setState(5736);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5737);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Program_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Program_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program_name; }
	}

	public final Program_nameContext program_name() throws RecognitionException {
		Program_nameContext _localctx = new Program_nameContext(_ctx, getState());
		enterRule(_localctx, 404, RULE_program_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5739);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Is_programContext extends ParserRuleContext {
		public TerminalNode COMMON() { return getToken(cobolParser.COMMON, 0); }
		public TerminalNode INITIAL() { return getToken(cobolParser.INITIAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Is_programContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_is_program; }
	}

	public final Is_programContext is_program() throws RecognitionException {
		Is_programContext _localctx = new Is_programContext(_ctx, getState());
		enterRule(_localctx, 406, RULE_is_program);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5747);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5741);
				match(IS);
				setState(5743); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5742);
					separator();
					}
					}
					setState(5745); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(5749);
			_la = _input.LA(1);
			if ( !(_la==COMMON || _la==INITIAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(5757);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,956,_ctx) ) {
			case 1:
				{
				setState(5751); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5750);
					separator();
					}
					}
					setState(5753); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(5755);
				match(PROGRAM);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class With_identContext extends ParserRuleContext {
		public TerminalNode IDENT() { return getToken(cobolParser.IDENT, 0); }
		public Ident_stringContext ident_string() {
			return getRuleContext(Ident_stringContext.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public With_identContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_with_ident; }
	}

	public final With_identContext with_ident() throws RecognitionException {
		With_identContext _localctx = new With_identContext(_ctx, getState());
		enterRule(_localctx, 408, RULE_with_ident);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5765);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WITH) {
				{
				setState(5759);
				match(WITH);
				setState(5761); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5760);
					separator();
					}
					}
					setState(5763); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(5767);
			match(IDENT);
			setState(5769); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5768);
				separator();
				}
				}
				setState(5771); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5773);
			ident_string();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Ident_stringContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Ident_stringContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_ident_string; }
	}

	public final Ident_stringContext ident_string() throws RecognitionException {
		Ident_stringContext _localctx = new Ident_stringContext(_ctx, getState());
		enterRule(_localctx, 410, RULE_ident_string);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5775);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Comment_entryContext extends ParserRuleContext {
		public TerminalNode START_FOUR_SPACES() { return getToken(cobolParser.START_FOUR_SPACES, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public Line_commentContext line_comment() {
			return getRuleContext(Line_commentContext.class,0);
		}
		public Comment_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_comment_entry; }
	}

	public final Comment_entryContext comment_entry() throws RecognitionException {
		Comment_entryContext _localctx = new Comment_entryContext(_ctx, getState());
		enterRule(_localctx, 412, RULE_comment_entry);
		int _la;
		try {
			setState(5786);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case START_FOUR_SPACES:
				enterOuterAlt(_localctx, 1);
				{
				setState(5777);
				match(START_FOUR_SPACES);
				setState(5781);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
					{
					{
					setState(5778);
					_la = _input.LA(1);
					if ( _la <= 0 || (_la==NEWLINE) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					}
					setState(5783);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(5784);
				match(NEWLINE);
				}
				break;
			case START_SLASH_:
			case START_STAR_:
				enterOuterAlt(_localctx, 2);
				{
				setState(5785);
				line_comment();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class AuthorContext extends ParserRuleContext {
		public TerminalNode AUTHOR() { return getToken(cobolParser.AUTHOR, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public AuthorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_author; }
	}

	public final AuthorContext author() throws RecognitionException {
		AuthorContext _localctx = new AuthorContext(_ctx, getState());
		enterRule(_localctx, 414, RULE_author);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5788);
			match(AUTHOR);
			setState(5792);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5789);
				separator();
				}
				}
				setState(5794);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5795);
			match(DOT_);
			setState(5799);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(5796);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(5801);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5802);
			match(NEWLINE);
			setState(5806);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,964,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5803);
					comment_entry();
					}
					} 
				}
				setState(5808);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,964,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class InstallationContext extends ParserRuleContext {
		public TerminalNode INSTALLATION() { return getToken(cobolParser.INSTALLATION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public InstallationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_installation; }
	}

	public final InstallationContext installation() throws RecognitionException {
		InstallationContext _localctx = new InstallationContext(_ctx, getState());
		enterRule(_localctx, 416, RULE_installation);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5809);
			match(INSTALLATION);
			setState(5813);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5810);
				separator();
				}
				}
				setState(5815);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5816);
			match(DOT_);
			setState(5820);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(5817);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(5822);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5823);
			match(NEWLINE);
			setState(5827);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,967,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5824);
					comment_entry();
					}
					} 
				}
				setState(5829);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,967,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Date_writtenContext extends ParserRuleContext {
		public TerminalNode DATE_WRITTEN() { return getToken(cobolParser.DATE_WRITTEN, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public Date_writtenContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_date_written; }
	}

	public final Date_writtenContext date_written() throws RecognitionException {
		Date_writtenContext _localctx = new Date_writtenContext(_ctx, getState());
		enterRule(_localctx, 418, RULE_date_written);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5830);
			match(DATE_WRITTEN);
			setState(5834);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5831);
				separator();
				}
				}
				setState(5836);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5837);
			match(DOT_);
			setState(5841);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(5838);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(5843);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5844);
			match(NEWLINE);
			setState(5848);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,970,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5845);
					comment_entry();
					}
					} 
				}
				setState(5850);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,970,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Date_compiledContext extends ParserRuleContext {
		public TerminalNode DATE_COMPILED() { return getToken(cobolParser.DATE_COMPILED, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public Date_compiledContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_date_compiled; }
	}

	public final Date_compiledContext date_compiled() throws RecognitionException {
		Date_compiledContext _localctx = new Date_compiledContext(_ctx, getState());
		enterRule(_localctx, 420, RULE_date_compiled);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5851);
			match(DATE_COMPILED);
			setState(5855);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5852);
				separator();
				}
				}
				setState(5857);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5858);
			match(DOT_);
			setState(5862);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(5859);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(5864);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5865);
			match(NEWLINE);
			setState(5869);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,973,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5866);
					comment_entry();
					}
					} 
				}
				setState(5871);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,973,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SecurityContext extends ParserRuleContext {
		public TerminalNode SECURITY() { return getToken(cobolParser.SECURITY, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public SecurityContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_security; }
	}

	public final SecurityContext security() throws RecognitionException {
		SecurityContext _localctx = new SecurityContext(_ctx, getState());
		enterRule(_localctx, 422, RULE_security);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5872);
			match(SECURITY);
			setState(5876);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5873);
				separator();
				}
				}
				setState(5878);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5879);
			match(DOT_);
			setState(5883);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(5880);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(5885);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5886);
			match(NEWLINE);
			setState(5890);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,976,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5887);
					comment_entry();
					}
					} 
				}
				setState(5892);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,976,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Options_Context extends ParserRuleContext {
		public TerminalNode OPTIONS() { return getToken(cobolParser.OPTIONS, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public ArithmeticContext arithmetic() {
			return getRuleContext(ArithmeticContext.class,0);
		}
		public Options_Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_options_; }
	}

	public final Options_Context options_() throws RecognitionException {
		Options_Context _localctx = new Options_Context(_ctx, getState());
		enterRule(_localctx, 424, RULE_options_);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5893);
			match(OPTIONS);
			setState(5897);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5894);
				separator();
				}
				}
				setState(5899);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5900);
			match(DOT_);
			setState(5904);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,978,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5901);
					separator();
					}
					} 
				}
				setState(5906);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,978,_ctx);
			}
			setState(5908);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ARITHMETIC) {
				{
				setState(5907);
				arithmetic();
				}
			}

			setState(5913);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,980,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5910);
					separator();
					}
					} 
				}
				setState(5915);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,980,_ctx);
			}
			setState(5917);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==DOT_) {
				{
				setState(5916);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArithmeticContext extends ParserRuleContext {
		public TerminalNode ARITHMETIC() { return getToken(cobolParser.ARITHMETIC, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode NATIVE() { return getToken(cobolParser.NATIVE, 0); }
		public TerminalNode STANDARD() { return getToken(cobolParser.STANDARD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public ArithmeticContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arithmetic; }
	}

	public final ArithmeticContext arithmetic() throws RecognitionException {
		ArithmeticContext _localctx = new ArithmeticContext(_ctx, getState());
		enterRule(_localctx, 426, RULE_arithmetic);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5919);
			match(ARITHMETIC);
			setState(5921); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5920);
				separator();
				}
				}
				setState(5923); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5931);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5925);
				match(IS);
				setState(5927); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5926);
					separator();
					}
					}
					setState(5929); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(5933);
			_la = _input.LA(1);
			if ( !(_la==NATIVE || _la==STANDARD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(5937);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5934);
				separator();
				}
				}
				setState(5939);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5940);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Environment_divisionContext extends ParserRuleContext {
		public TerminalNode ENVIRONMENT() { return getToken(cobolParser.ENVIRONMENT, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Configuration_sectionContext configuration_section() {
			return getRuleContext(Configuration_sectionContext.class,0);
		}
		public Input_output_sectionContext input_output_section() {
			return getRuleContext(Input_output_sectionContext.class,0);
		}
		public Environment_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_environment_division; }
	}

	public final Environment_divisionContext environment_division() throws RecognitionException {
		Environment_divisionContext _localctx = new Environment_divisionContext(_ctx, getState());
		enterRule(_localctx, 428, RULE_environment_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5942);
			match(ENVIRONMENT);
			setState(5944); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5943);
				separator();
				}
				}
				setState(5946); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5948);
			match(DIVISION);
			setState(5952);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5949);
				separator();
				}
				}
				setState(5954);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5955);
			match(DOT_);
			setState(5959);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,988,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5956);
					separator();
					}
					} 
				}
				setState(5961);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,988,_ctx);
			}
			setState(5963);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONFIGURATION) {
				{
				setState(5962);
				configuration_section();
				}
			}

			setState(5966);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==INPUT_OUTPUT) {
				{
				setState(5965);
				input_output_section();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Configuration_sectionContext extends ParserRuleContext {
		public TerminalNode CONFIGURATION() { return getToken(cobolParser.CONFIGURATION, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Source_computerContext source_computer() {
			return getRuleContext(Source_computerContext.class,0);
		}
		public Object_computerContext object_computer() {
			return getRuleContext(Object_computerContext.class,0);
		}
		public Special_namesContext special_names() {
			return getRuleContext(Special_namesContext.class,0);
		}
		public Configuration_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_configuration_section; }
	}

	public final Configuration_sectionContext configuration_section() throws RecognitionException {
		Configuration_sectionContext _localctx = new Configuration_sectionContext(_ctx, getState());
		enterRule(_localctx, 430, RULE_configuration_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5968);
			match(CONFIGURATION);
			setState(5970); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5969);
				separator();
				}
				}
				setState(5972); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(5974);
			match(SECTION);
			setState(5978);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(5975);
				separator();
				}
				}
				setState(5980);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5981);
			match(DOT_);
			setState(5985);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,993,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5982);
					separator();
					}
					} 
				}
				setState(5987);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,993,_ctx);
			}
			setState(5989);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SOURCE_COMPUTER) {
				{
				setState(5988);
				source_computer();
				}
			}

			setState(5994);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,995,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5991);
					separator();
					}
					} 
				}
				setState(5996);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,995,_ctx);
			}
			setState(5998);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==OBJECT_COMPUTER) {
				{
				setState(5997);
				object_computer();
				}
			}

			setState(6003);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,997,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6000);
					separator();
					}
					} 
				}
				setState(6005);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,997,_ctx);
			}
			setState(6007);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SPECIAL_NAMES) {
				{
				setState(6006);
				special_names();
				}
			}

			setState(6012);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,999,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6009);
					separator();
					}
					} 
				}
				setState(6014);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,999,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Input_output_sectionContext extends ParserRuleContext {
		public TerminalNode INPUT_OUTPUT() { return getToken(cobolParser.INPUT_OUTPUT, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public File_controlContext file_control() {
			return getRuleContext(File_controlContext.class,0);
		}
		public I_o_controlContext i_o_control() {
			return getRuleContext(I_o_controlContext.class,0);
		}
		public Input_output_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_input_output_section; }
	}

	public final Input_output_sectionContext input_output_section() throws RecognitionException {
		Input_output_sectionContext _localctx = new Input_output_sectionContext(_ctx, getState());
		enterRule(_localctx, 432, RULE_input_output_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6015);
			match(INPUT_OUTPUT);
			setState(6017); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6016);
				separator();
				}
				}
				setState(6019); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6021);
			match(SECTION);
			setState(6025);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(6022);
				separator();
				}
				}
				setState(6027);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6028);
			match(DOT_);
			setState(6032);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1002,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6029);
					separator();
					}
					} 
				}
				setState(6034);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1002,_ctx);
			}
			setState(6036);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE_CONTROL) {
				{
				setState(6035);
				file_control();
				}
			}

			setState(6039);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==I_O_CONTROL) {
				{
				setState(6038);
				i_o_control();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Source_computerContext extends ParserRuleContext {
		public TerminalNode SOURCE_COMPUTER() { return getToken(cobolParser.SOURCE_COMPUTER, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Computer_typeContext computer_type() {
			return getRuleContext(Computer_typeContext.class,0);
		}
		public With_debuggingContext with_debugging() {
			return getRuleContext(With_debuggingContext.class,0);
		}
		public Source_computerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_source_computer; }
	}

	public final Source_computerContext source_computer() throws RecognitionException {
		Source_computerContext _localctx = new Source_computerContext(_ctx, getState());
		enterRule(_localctx, 434, RULE_source_computer);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6041);
			match(SOURCE_COMPUTER);
			setState(6045);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(6042);
				separator();
				}
				}
				setState(6047);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6048);
			match(DOT_);
			setState(6052);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1006,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6049);
					separator();
					}
					} 
				}
				setState(6054);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1006,_ctx);
			}
			setState(6073);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ALPHA || _la==I64 || _la==VAX || _la==USER_DEFINED_WORD) {
				{
				setState(6055);
				computer_type();
				setState(6063);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1008,_ctx) ) {
				case 1:
					{
					setState(6057); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6056);
						separator();
						}
						}
						setState(6059); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(6061);
					with_debugging();
					}
					break;
				}
				setState(6068);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6065);
					separator();
					}
					}
					setState(6070);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6071);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Computer_typeContext extends ParserRuleContext {
		public TerminalNode ALPHA() { return getToken(cobolParser.ALPHA, 0); }
		public TerminalNode I64() { return getToken(cobolParser.I64, 0); }
		public TerminalNode VAX() { return getToken(cobolParser.VAX, 0); }
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Computer_typeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_computer_type; }
	}

	public final Computer_typeContext computer_type() throws RecognitionException {
		Computer_typeContext _localctx = new Computer_typeContext(_ctx, getState());
		enterRule(_localctx, 436, RULE_computer_type);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6075);
			_la = _input.LA(1);
			if ( !(_la==ALPHA || _la==I64 || _la==VAX || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class With_debuggingContext extends ParserRuleContext {
		public TerminalNode DEBUGGING() { return getToken(cobolParser.DEBUGGING, 0); }
		public TerminalNode MODE() { return getToken(cobolParser.MODE, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public With_debuggingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_with_debugging; }
	}

	public final With_debuggingContext with_debugging() throws RecognitionException {
		With_debuggingContext _localctx = new With_debuggingContext(_ctx, getState());
		enterRule(_localctx, 438, RULE_with_debugging);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6083);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WITH) {
				{
				setState(6077);
				match(WITH);
				setState(6079); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6078);
					separator();
					}
					}
					setState(6081); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6085);
			match(DEBUGGING);
			setState(6087); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6086);
				separator();
				}
				}
				setState(6089); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6091);
			match(MODE);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Object_computerContext extends ParserRuleContext {
		public TerminalNode OBJECT_COMPUTER() { return getToken(cobolParser.OBJECT_COMPUTER, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Computer_typeContext computer_type() {
			return getRuleContext(Computer_typeContext.class,0);
		}
		public Memory_sizeContext memory_size() {
			return getRuleContext(Memory_sizeContext.class,0);
		}
		public Program_collatingContext program_collating() {
			return getRuleContext(Program_collatingContext.class,0);
		}
		public Segment_limitContext segment_limit() {
			return getRuleContext(Segment_limitContext.class,0);
		}
		public Object_computerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_object_computer; }
	}

	public final Object_computerContext object_computer() throws RecognitionException {
		Object_computerContext _localctx = new Object_computerContext(_ctx, getState());
		enterRule(_localctx, 440, RULE_object_computer);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6093);
			match(OBJECT_COMPUTER);
			setState(6097);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(6094);
				separator();
				}
				}
				setState(6099);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6100);
			match(DOT_);
			setState(6104);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1015,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6101);
					separator();
					}
					} 
				}
				setState(6106);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1015,_ctx);
			}
			setState(6143);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ALPHA || _la==I64 || _la==VAX || _la==USER_DEFINED_WORD) {
				{
				setState(6107);
				computer_type();
				setState(6115);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1017,_ctx) ) {
				case 1:
					{
					setState(6109); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6108);
						separator();
						}
						}
						setState(6111); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(6113);
					memory_size();
					}
					break;
				}
				setState(6124);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1019,_ctx) ) {
				case 1:
					{
					setState(6118); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6117);
						separator();
						}
						}
						setState(6120); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(6122);
					program_collating();
					}
					break;
				}
				setState(6133);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1021,_ctx) ) {
				case 1:
					{
					setState(6127); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6126);
						separator();
						}
						}
						setState(6129); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(6131);
					segment_limit();
					}
					break;
				}
				setState(6138);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6135);
					separator();
					}
					}
					setState(6140);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6141);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Memory_sizeContext extends ParserRuleContext {
		public TerminalNode MEMORY() { return getToken(cobolParser.MEMORY, 0); }
		public Memory_size_amountContext memory_size_amount() {
			return getRuleContext(Memory_size_amountContext.class,0);
		}
		public Memory_size_unitContext memory_size_unit() {
			return getRuleContext(Memory_size_unitContext.class,0);
		}
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Memory_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_memory_size; }
	}

	public final Memory_sizeContext memory_size() throws RecognitionException {
		Memory_sizeContext _localctx = new Memory_sizeContext(_ctx, getState());
		enterRule(_localctx, 442, RULE_memory_size);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6145);
			match(MEMORY);
			setState(6153);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1025,_ctx) ) {
			case 1:
				{
				setState(6147); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6146);
					separator();
					}
					}
					setState(6149); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6151);
				match(SIZE);
				}
				break;
			}
			setState(6156); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6155);
				separator();
				}
				}
				setState(6158); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6160);
			memory_size_amount();
			setState(6162); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6161);
				separator();
				}
				}
				setState(6164); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6166);
			memory_size_unit();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Memory_size_amountContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Memory_size_amountContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_memory_size_amount; }
	}

	public final Memory_size_amountContext memory_size_amount() throws RecognitionException {
		Memory_size_amountContext _localctx = new Memory_size_amountContext(_ctx, getState());
		enterRule(_localctx, 444, RULE_memory_size_amount);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6168);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Memory_size_unitContext extends ParserRuleContext {
		public TerminalNode WORDS() { return getToken(cobolParser.WORDS, 0); }
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public TerminalNode MODULES() { return getToken(cobolParser.MODULES, 0); }
		public Memory_size_unitContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_memory_size_unit; }
	}

	public final Memory_size_unitContext memory_size_unit() throws RecognitionException {
		Memory_size_unitContext _localctx = new Memory_size_unitContext(_ctx, getState());
		enterRule(_localctx, 446, RULE_memory_size_unit);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6170);
			_la = _input.LA(1);
			if ( !(_la==CHARACTERS || _la==MODULES || _la==WORDS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Program_collatingContext extends ParserRuleContext {
		public TerminalNode SEQUENCE() { return getToken(cobolParser.SEQUENCE, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public TerminalNode COLLATING() { return getToken(cobolParser.COLLATING, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Program_collatingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program_collating; }
	}

	public final Program_collatingContext program_collating() throws RecognitionException {
		Program_collatingContext _localctx = new Program_collatingContext(_ctx, getState());
		enterRule(_localctx, 448, RULE_program_collating);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6178);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==PROGRAM) {
				{
				setState(6172);
				match(PROGRAM);
				setState(6174); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6173);
					separator();
					}
					}
					setState(6176); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6186);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==COLLATING) {
				{
				setState(6180);
				match(COLLATING);
				setState(6182); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6181);
					separator();
					}
					}
					setState(6184); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6188);
			match(SEQUENCE);
			setState(6196);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1033,_ctx) ) {
			case 1:
				{
				setState(6190); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6189);
					separator();
					}
					}
					setState(6192); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6194);
				match(IS);
				}
				break;
			}
			setState(6199); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6198);
				separator();
				}
				}
				setState(6201); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6203);
			alpha_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alpha_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Alpha_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alpha_name; }
	}

	public final Alpha_nameContext alpha_name() throws RecognitionException {
		Alpha_nameContext _localctx = new Alpha_nameContext(_ctx, getState());
		enterRule(_localctx, 450, RULE_alpha_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6205);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Segment_limitContext extends ParserRuleContext {
		public TerminalNode SEGMENT_LIMIT() { return getToken(cobolParser.SEGMENT_LIMIT, 0); }
		public Segment_numberContext segment_number() {
			return getRuleContext(Segment_numberContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Segment_limitContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_segment_limit; }
	}

	public final Segment_limitContext segment_limit() throws RecognitionException {
		Segment_limitContext _localctx = new Segment_limitContext(_ctx, getState());
		enterRule(_localctx, 452, RULE_segment_limit);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6207);
			match(SEGMENT_LIMIT);
			setState(6215);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				setState(6209); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6208);
					separator();
					}
					}
					setState(6211); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6213);
				match(IS);
				}
			}

			setState(6217);
			segment_number();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Segment_numberContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Segment_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_segment_number; }
	}

	public final Segment_numberContext segment_number() throws RecognitionException {
		Segment_numberContext _localctx = new Segment_numberContext(_ctx, getState());
		enterRule(_localctx, 454, RULE_segment_number);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6219);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Special_namesContext extends ParserRuleContext {
		public TerminalNode SPECIAL_NAMES() { return getToken(cobolParser.SPECIAL_NAMES, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Special_names_contentContext> special_names_content() {
			return getRuleContexts(Special_names_contentContext.class);
		}
		public Special_names_contentContext special_names_content(int i) {
			return getRuleContext(Special_names_contentContext.class,i);
		}
		public Special_namesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_special_names; }
	}

	public final Special_namesContext special_names() throws RecognitionException {
		Special_namesContext _localctx = new Special_namesContext(_ctx, getState());
		enterRule(_localctx, 456, RULE_special_names);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6221);
			match(SPECIAL_NAMES);
			setState(6225);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(6222);
				separator();
				}
				}
				setState(6227);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6228);
			match(DOT_);
			setState(6232);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1038,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6229);
					separator();
					}
					} 
				}
				setState(6234);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1038,_ctx);
			}
			setState(6248);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ALPHABET) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << C01) | (1L << CARD_READER) | (1L << CLASS))) != 0) || ((((_la - 82)) & ~0x3f) == 0 && ((1L << (_la - 82)) & ((1L << (CONSOLE - 82)) | (1L << (CRT - 82)) | (1L << (CURRENCY - 82)) | (1L << (CURSOR - 82)) | (1L << (DECIMAL_POINT - 82)))) != 0) || _la==ENVIRONMENT_NAME || _la==ENVIRONMENT_VALUE || ((((_la - 228)) & ~0x3f) == 0 && ((1L << (_la - 228)) & ((1L << (LINE_PRINTER - 228)) | (1L << (PAPER_TAPE_PUNCH - 228)) | (1L << (PAPER_TAPE_READER - 228)))) != 0) || ((((_la - 355)) & ~0x3f) == 0 && ((1L << (_la - 355)) & ((1L << (SWITCH - 355)) | (1L << (SYMBOLIC - 355)) | (1L << (SYSERR - 355)) | (1L << (SYSIN - 355)) | (1L << (SYSOUT - 355)))) != 0)) {
				{
				setState(6242); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6235);
					special_names_content();
					setState(6239);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(6236);
						separator();
						}
						}
						setState(6241);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(6244); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ALPHABET) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << C01) | (1L << CARD_READER) | (1L << CLASS))) != 0) || ((((_la - 82)) & ~0x3f) == 0 && ((1L << (_la - 82)) & ((1L << (CONSOLE - 82)) | (1L << (CRT - 82)) | (1L << (CURRENCY - 82)) | (1L << (CURSOR - 82)) | (1L << (DECIMAL_POINT - 82)))) != 0) || _la==ENVIRONMENT_NAME || _la==ENVIRONMENT_VALUE || ((((_la - 228)) & ~0x3f) == 0 && ((1L << (_la - 228)) & ((1L << (LINE_PRINTER - 228)) | (1L << (PAPER_TAPE_PUNCH - 228)) | (1L << (PAPER_TAPE_READER - 228)))) != 0) || ((((_la - 355)) & ~0x3f) == 0 && ((1L << (_la - 355)) & ((1L << (SWITCH - 355)) | (1L << (SYMBOLIC - 355)) | (1L << (SYSERR - 355)) | (1L << (SYSIN - 355)) | (1L << (SYSOUT - 355)))) != 0) );
				setState(6246);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Special_names_contentContext extends ParserRuleContext {
		public Predefined_deviceContext predefined_device() {
			return getRuleContext(Predefined_deviceContext.class,0);
		}
		public Device_nameContext device_name() {
			return getRuleContext(Device_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Arg_envContext arg_env() {
			return getRuleContext(Arg_envContext.class,0);
		}
		public Arg_env_nameContext arg_env_name() {
			return getRuleContext(Arg_env_nameContext.class,0);
		}
		public TerminalNode C01() { return getToken(cobolParser.C01, 0); }
		public Top_of_page_nameContext top_of_page_name() {
			return getRuleContext(Top_of_page_nameContext.class,0);
		}
		public Switch_Context switch_() {
			return getRuleContext(Switch_Context.class,0);
		}
		public AlphabetContext alphabet() {
			return getRuleContext(AlphabetContext.class,0);
		}
		public Symbolic_charsContext symbolic_chars() {
			return getRuleContext(Symbolic_charsContext.class,0);
		}
		public Class_Context class_() {
			return getRuleContext(Class_Context.class,0);
		}
		public CurrencyContext currency() {
			return getRuleContext(CurrencyContext.class,0);
		}
		public TerminalNode DECIMAL_POINT() { return getToken(cobolParser.DECIMAL_POINT, 0); }
		public TerminalNode COMMA() { return getToken(cobolParser.COMMA, 0); }
		public TerminalNode CURSOR() { return getToken(cobolParser.CURSOR, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode CRT() { return getToken(cobolParser.CRT, 0); }
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public Special_names_contentContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_special_names_content; }
	}

	public final Special_names_contentContext special_names_content() throws RecognitionException {
		Special_names_contentContext _localctx = new Special_names_contentContext(_ctx, getState());
		enterRule(_localctx, 458, RULE_special_names_content);
		int _la;
		try {
			setState(6357);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case CARD_READER:
			case CONSOLE:
			case LINE_PRINTER:
			case PAPER_TAPE_PUNCH:
			case PAPER_TAPE_READER:
			case SYSERR:
			case SYSIN:
			case SYSOUT:
				enterOuterAlt(_localctx, 1);
				{
				setState(6250);
				predefined_device();
				setState(6252); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6251);
					separator();
					}
					}
					setState(6254); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6262);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6256);
					match(IS);
					setState(6258); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6257);
						separator();
						}
						}
						setState(6260); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(6264);
				device_name();
				}
				break;
			case ARGUMENT_NUMBER:
			case ARGUMENT_VALUE:
			case ENVIRONMENT_NAME:
			case ENVIRONMENT_VALUE:
				enterOuterAlt(_localctx, 2);
				{
				setState(6266);
				arg_env();
				setState(6268); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6267);
					separator();
					}
					}
					setState(6270); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6278);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6272);
					match(IS);
					setState(6274); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6273);
						separator();
						}
						}
						setState(6276); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(6280);
				arg_env_name();
				}
				break;
			case C01:
				enterOuterAlt(_localctx, 3);
				{
				setState(6282);
				match(C01);
				setState(6284); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6283);
					separator();
					}
					}
					setState(6286); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6294);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6288);
					match(IS);
					setState(6290); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6289);
						separator();
						}
						}
						setState(6292); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(6296);
				top_of_page_name();
				}
				break;
			case SWITCH:
				enterOuterAlt(_localctx, 4);
				{
				setState(6298);
				switch_();
				}
				break;
			case ALPHABET:
				enterOuterAlt(_localctx, 5);
				{
				setState(6299);
				alphabet();
				}
				break;
			case SYMBOLIC:
				enterOuterAlt(_localctx, 6);
				{
				setState(6300);
				symbolic_chars();
				}
				break;
			case CLASS:
				enterOuterAlt(_localctx, 7);
				{
				setState(6301);
				class_();
				}
				break;
			case CURRENCY:
				enterOuterAlt(_localctx, 8);
				{
				setState(6302);
				currency();
				}
				break;
			case DECIMAL_POINT:
				enterOuterAlt(_localctx, 9);
				{
				setState(6303);
				match(DECIMAL_POINT);
				setState(6305); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6304);
					separator();
					}
					}
					setState(6307); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6315);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6309);
					match(IS);
					setState(6311); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6310);
						separator();
						}
						}
						setState(6313); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(6317);
				match(COMMA);
				}
				break;
			case CURSOR:
				enterOuterAlt(_localctx, 10);
				{
				setState(6319);
				match(CURSOR);
				setState(6321); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6320);
					separator();
					}
					}
					setState(6323); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6331);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6325);
					match(IS);
					setState(6327); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6326);
						separator();
						}
						}
						setState(6329); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(6333);
				qualified_data_item();
				}
				break;
			case CRT:
				enterOuterAlt(_localctx, 11);
				{
				setState(6335);
				match(CRT);
				setState(6337); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6336);
					separator();
					}
					}
					setState(6339); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6341);
				match(STATUS);
				setState(6343); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6342);
					separator();
					}
					}
					setState(6345); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6353);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6347);
					match(IS);
					setState(6349); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6348);
						separator();
						}
						}
						setState(6351); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(6355);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Qualified_data_itemContext extends ParserRuleContext {
		public List<TerminalNode> USER_DEFINED_WORD() { return getTokens(cobolParser.USER_DEFINED_WORD); }
		public TerminalNode USER_DEFINED_WORD(int i) {
			return getToken(cobolParser.USER_DEFINED_WORD, i);
		}
		public List<TerminalNode> IN() { return getTokens(cobolParser.IN); }
		public TerminalNode IN(int i) {
			return getToken(cobolParser.IN, i);
		}
		public List<TerminalNode> OF() { return getTokens(cobolParser.OF); }
		public TerminalNode OF(int i) {
			return getToken(cobolParser.OF, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Qualified_data_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_qualified_data_item; }
	}

	public final Qualified_data_itemContext qualified_data_item() throws RecognitionException {
		Qualified_data_itemContext _localctx = new Qualified_data_itemContext(_ctx, getState());
		enterRule(_localctx, 460, RULE_qualified_data_item);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6359);
			match(USER_DEFINED_WORD);
			setState(6375);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1064,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6361); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6360);
						separator();
						}
						}
						setState(6363); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(6365);
					_la = _input.LA(1);
					if ( !(_la==IN || _la==OF) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(6367); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6366);
						separator();
						}
						}
						setState(6369); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(6371);
					match(USER_DEFINED_WORD);
					}
					} 
				}
				setState(6377);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1064,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class CurrencyContext extends ParserRuleContext {
		public TerminalNode CURRENCY() { return getToken(cobolParser.CURRENCY, 0); }
		public Currency_definitionContext currency_definition() {
			return getRuleContext(Currency_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode SIGN() { return getToken(cobolParser.SIGN, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public CurrencyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_currency; }
	}

	public final CurrencyContext currency() throws RecognitionException {
		CurrencyContext _localctx = new CurrencyContext(_ctx, getState());
		enterRule(_localctx, 462, RULE_currency);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6378);
			match(CURRENCY);
			setState(6380); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6379);
				separator();
				}
				}
				setState(6382); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6390);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SIGN) {
				{
				setState(6384);
				match(SIGN);
				setState(6386); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6385);
					separator();
					}
					}
					setState(6388); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6398);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6392);
				match(IS);
				setState(6394); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6393);
					separator();
					}
					}
					setState(6396); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6400);
			currency_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Currency_definitionContext extends ParserRuleContext {
		public Literal_7Context literal_7() {
			return getRuleContext(Literal_7Context.class,0);
		}
		public TerminalNode PICTURE() { return getToken(cobolParser.PICTURE, 0); }
		public TerminalNode SYMBOL() { return getToken(cobolParser.SYMBOL, 0); }
		public Literal_8Context literal_8() {
			return getRuleContext(Literal_8Context.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Currency_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_currency_definition; }
	}

	public final Currency_definitionContext currency_definition() throws RecognitionException {
		Currency_definitionContext _localctx = new Currency_definitionContext(_ctx, getState());
		enterRule(_localctx, 464, RULE_currency_definition);
		int _la;
		try {
			setState(6426);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1074,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(6402);
				literal_7();
				setState(6409);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(6403);
					match(WITH);
					setState(6405); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6404);
						separator();
						}
						}
						setState(6407); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(6411);
				match(PICTURE);
				setState(6413); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6412);
					separator();
					}
					}
					setState(6415); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6417);
				match(SYMBOL);
				setState(6419); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6418);
					separator();
					}
					}
					setState(6421); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6423);
				literal_8();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(6425);
				match(STRING_LITERAL);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Literal_7Context extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Literal_7Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_literal_7; }
	}

	public final Literal_7Context literal_7() throws RecognitionException {
		Literal_7Context _localctx = new Literal_7Context(_ctx, getState());
		enterRule(_localctx, 466, RULE_literal_7);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6428);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Literal_8Context extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Literal_8Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_literal_8; }
	}

	public final Literal_8Context literal_8() throws RecognitionException {
		Literal_8Context _localctx = new Literal_8Context(_ctx, getState());
		enterRule(_localctx, 468, RULE_literal_8);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6430);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_Context extends ParserRuleContext {
		public TerminalNode CLASS() { return getToken(cobolParser.CLASS, 0); }
		public Class_nameContext class_name() {
			return getRuleContext(Class_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<User_classContext> user_class() {
			return getRuleContexts(User_classContext.class);
		}
		public User_classContext user_class(int i) {
			return getRuleContext(User_classContext.class,i);
		}
		public Class_Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_; }
	}

	public final Class_Context class_() throws RecognitionException {
		Class_Context _localctx = new Class_Context(_ctx, getState());
		enterRule(_localctx, 470, RULE_class_);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6432);
			match(CLASS);
			setState(6434); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6433);
				separator();
				}
				}
				setState(6436); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6438);
			class_name();
			setState(6440); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6439);
				separator();
				}
				}
				setState(6442); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6450);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6444);
				match(IS);
				setState(6446); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6445);
					separator();
					}
					}
					setState(6448); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6459); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6452);
				user_class();
				setState(6456);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1079,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(6453);
						separator();
						}
						} 
					}
					setState(6458);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1079,_ctx);
				}
				}
				}
				setState(6461); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==STRING_LITERAL || _la==NUMERIC_LITERAL );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Class_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_name; }
	}

	public final Class_nameContext class_name() throws RecognitionException {
		Class_nameContext _localctx = new Class_nameContext(_ctx, getState());
		enterRule(_localctx, 472, RULE_class_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6463);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class User_classContext extends ParserRuleContext {
		public First_literalContext first_literal() {
			return getRuleContext(First_literalContext.class,0);
		}
		public Last_literalContext last_literal() {
			return getRuleContext(Last_literalContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public User_classContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_user_class; }
	}

	public final User_classContext user_class() throws RecognitionException {
		User_classContext _localctx = new User_classContext(_ctx, getState());
		enterRule(_localctx, 474, RULE_user_class);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6465);
			first_literal();
			setState(6479);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1083,_ctx) ) {
			case 1:
				{
				setState(6467); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6466);
					separator();
					}
					}
					setState(6469); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6471);
				_la = _input.LA(1);
				if ( !(_la==THROUGH || _la==THRU) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(6473); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6472);
					separator();
					}
					}
					setState(6475); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6477);
				last_literal();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symbolic_charsContext extends ParserRuleContext {
		public TerminalNode SYMBOLIC() { return getToken(cobolParser.SYMBOLIC, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public List<Symb_ch_definitionContext> symb_ch_definition() {
			return getRuleContexts(Symb_ch_definitionContext.class);
		}
		public Symb_ch_definitionContext symb_ch_definition(int i) {
			return getRuleContext(Symb_ch_definitionContext.class,i);
		}
		public Symbolic_charsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symbolic_chars; }
	}

	public final Symbolic_charsContext symbolic_chars() throws RecognitionException {
		Symbolic_charsContext _localctx = new Symbolic_charsContext(_ctx, getState());
		enterRule(_localctx, 476, RULE_symbolic_chars);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6481);
			match(SYMBOLIC);
			setState(6483); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6482);
				separator();
				}
				}
				setState(6485); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6493);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CHARACTERS) {
				{
				setState(6487);
				match(CHARACTERS);
				setState(6489); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6488);
					separator();
					}
					}
					setState(6491); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6496); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6495);
				symb_ch_definition();
				}
				}
				setState(6498); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symb_ch_definitionContext extends ParserRuleContext {
		public List<Symb_ch_def_clauseContext> symb_ch_def_clause() {
			return getRuleContexts(Symb_ch_def_clauseContext.class);
		}
		public Symb_ch_def_clauseContext symb_ch_def_clause(int i) {
			return getRuleContext(Symb_ch_def_clauseContext.class,i);
		}
		public Symb_ch_def_in_alphabetContext symb_ch_def_in_alphabet() {
			return getRuleContext(Symb_ch_def_in_alphabetContext.class,0);
		}
		public Symb_ch_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symb_ch_definition; }
	}

	public final Symb_ch_definitionContext symb_ch_definition() throws RecognitionException {
		Symb_ch_definitionContext _localctx = new Symb_ch_definitionContext(_ctx, getState());
		enterRule(_localctx, 478, RULE_symb_ch_definition);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6501); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(6500);
					symb_ch_def_clause();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(6503); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1088,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(6506);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IN) {
				{
				setState(6505);
				symb_ch_def_in_alphabet();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symb_ch_def_clauseContext extends ParserRuleContext {
		public List<Symbol_charContext> symbol_char() {
			return getRuleContexts(Symbol_charContext.class);
		}
		public Symbol_charContext symbol_char(int i) {
			return getRuleContext(Symbol_charContext.class,i);
		}
		public List<Char_valContext> char_val() {
			return getRuleContexts(Char_valContext.class);
		}
		public Char_valContext char_val(int i) {
			return getRuleContext(Char_valContext.class,i);
		}
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Symb_ch_def_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symb_ch_def_clause; }
	}

	public final Symb_ch_def_clauseContext symb_ch_def_clause() throws RecognitionException {
		Symb_ch_def_clauseContext _localctx = new Symb_ch_def_clauseContext(_ctx, getState());
		enterRule(_localctx, 480, RULE_symb_ch_def_clause);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6514); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6508);
				symbol_char();
				setState(6510); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6509);
					separator();
					}
					}
					setState(6512); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
				}
				setState(6516); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			setState(6524);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ARE || _la==IS) {
				{
				setState(6518);
				_la = _input.LA(1);
				if ( !(_la==ARE || _la==IS) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(6520); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6519);
					separator();
					}
					}
					setState(6522); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6532); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6526);
				char_val();
				setState(6528); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(6527);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(6530); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1094,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				}
				setState(6534); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==NUMERIC_LITERAL );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symb_ch_def_in_alphabetContext extends ParserRuleContext {
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Symb_ch_def_in_alphabetContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symb_ch_def_in_alphabet; }
	}

	public final Symb_ch_def_in_alphabetContext symb_ch_def_in_alphabet() throws RecognitionException {
		Symb_ch_def_in_alphabetContext _localctx = new Symb_ch_def_in_alphabetContext(_ctx, getState());
		enterRule(_localctx, 482, RULE_symb_ch_def_in_alphabet);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6536);
			match(IN);
			setState(6538); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6537);
				separator();
				}
				}
				setState(6540); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6542);
			alpha_name();
			setState(6546);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1097,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6543);
					separator();
					}
					} 
				}
				setState(6548);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1097,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symbol_charContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Symbol_charContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symbol_char; }
	}

	public final Symbol_charContext symbol_char() throws RecognitionException {
		Symbol_charContext _localctx = new Symbol_charContext(_ctx, getState());
		enterRule(_localctx, 484, RULE_symbol_char);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6549);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Char_valContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Char_valContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_char_val; }
	}

	public final Char_valContext char_val() throws RecognitionException {
		Char_valContext _localctx = new Char_valContext(_ctx, getState());
		enterRule(_localctx, 486, RULE_char_val);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6551);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class AlphabetContext extends ParserRuleContext {
		public TerminalNode ALPHABET() { return getToken(cobolParser.ALPHABET, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public Alpha_valueContext alpha_value() {
			return getRuleContext(Alpha_valueContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public AlphabetContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alphabet; }
	}

	public final AlphabetContext alphabet() throws RecognitionException {
		AlphabetContext _localctx = new AlphabetContext(_ctx, getState());
		enterRule(_localctx, 488, RULE_alphabet);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6553);
			match(ALPHABET);
			setState(6555); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6554);
				separator();
				}
				}
				setState(6557); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6559);
			alpha_name();
			setState(6561); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6560);
				separator();
				}
				}
				setState(6563); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6571);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6565);
				match(IS);
				setState(6567); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6566);
					separator();
					}
					}
					setState(6569); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6573);
			alpha_value();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alpha_valueContext extends ParserRuleContext {
		public TerminalNode ASCII() { return getToken(cobolParser.ASCII, 0); }
		public TerminalNode STANDARD_1() { return getToken(cobolParser.STANDARD_1, 0); }
		public TerminalNode STANDARD_2() { return getToken(cobolParser.STANDARD_2, 0); }
		public TerminalNode NATIVE() { return getToken(cobolParser.NATIVE, 0); }
		public TerminalNode EBCDIC() { return getToken(cobolParser.EBCDIC, 0); }
		public List<User_alphaContext> user_alpha() {
			return getRuleContexts(User_alphaContext.class);
		}
		public User_alphaContext user_alpha(int i) {
			return getRuleContext(User_alphaContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Alpha_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alpha_value; }
	}

	public final Alpha_valueContext alpha_value() throws RecognitionException {
		Alpha_valueContext _localctx = new Alpha_valueContext(_ctx, getState());
		enterRule(_localctx, 490, RULE_alpha_value);
		int _la;
		try {
			int _alt;
			setState(6591);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ASCII:
				enterOuterAlt(_localctx, 1);
				{
				setState(6575);
				match(ASCII);
				}
				break;
			case STANDARD_1:
				enterOuterAlt(_localctx, 2);
				{
				setState(6576);
				match(STANDARD_1);
				}
				break;
			case STANDARD_2:
				enterOuterAlt(_localctx, 3);
				{
				setState(6577);
				match(STANDARD_2);
				}
				break;
			case NATIVE:
				enterOuterAlt(_localctx, 4);
				{
				setState(6578);
				match(NATIVE);
				}
				break;
			case EBCDIC:
				enterOuterAlt(_localctx, 5);
				{
				setState(6579);
				match(EBCDIC);
				}
				break;
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 6);
				{
				setState(6587); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6580);
					user_alpha();
					setState(6584);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1102,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(6581);
							separator();
							}
							} 
						}
						setState(6586);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,1102,_ctx);
					}
					}
					}
					setState(6589); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( _la==STRING_LITERAL || _la==NUMERIC_LITERAL );
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class User_alphaContext extends ParserRuleContext {
		public First_literalContext first_literal() {
			return getRuleContext(First_literalContext.class,0);
		}
		public Last_literalContext last_literal() {
			return getRuleContext(Last_literalContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> ALSO() { return getTokens(cobolParser.ALSO); }
		public TerminalNode ALSO(int i) {
			return getToken(cobolParser.ALSO, i);
		}
		public List<Same_literalContext> same_literal() {
			return getRuleContexts(Same_literalContext.class);
		}
		public Same_literalContext same_literal(int i) {
			return getRuleContext(Same_literalContext.class,i);
		}
		public User_alphaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_user_alpha; }
	}

	public final User_alphaContext user_alpha() throws RecognitionException {
		User_alphaContext _localctx = new User_alphaContext(_ctx, getState());
		enterRule(_localctx, 492, RULE_user_alpha);
		int _la;
		try {
			int _alt;
			setState(6627);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1111,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(6593);
				first_literal();
				setState(6607);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1107,_ctx) ) {
				case 1:
					{
					setState(6595); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6594);
						separator();
						}
						}
						setState(6597); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(6599);
					_la = _input.LA(1);
					if ( !(_la==THROUGH || _la==THRU) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(6601); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6600);
						separator();
						}
						}
						setState(6603); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(6605);
					last_literal();
					}
					break;
				}
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(6609);
				first_literal();
				setState(6623); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(6611); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6610);
							separator();
							}
							}
							setState(6613); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(6615);
						match(ALSO);
						setState(6617); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6616);
							separator();
							}
							}
							setState(6619); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(6621);
						same_literal();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(6625); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1110,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class First_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public First_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_first_literal; }
	}

	public final First_literalContext first_literal() throws RecognitionException {
		First_literalContext _localctx = new First_literalContext(_ctx, getState());
		enterRule(_localctx, 494, RULE_first_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6629);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Last_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Last_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_last_literal; }
	}

	public final Last_literalContext last_literal() throws RecognitionException {
		Last_literalContext _localctx = new Last_literalContext(_ctx, getState());
		enterRule(_localctx, 496, RULE_last_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6631);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Same_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Same_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_same_literal; }
	}

	public final Same_literalContext same_literal() throws RecognitionException {
		Same_literalContext _localctx = new Same_literalContext(_ctx, getState());
		enterRule(_localctx, 498, RULE_same_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6633);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_Context extends ParserRuleContext {
		public TerminalNode SWITCH() { return getToken(cobolParser.SWITCH, 0); }
		public Switch_numContext switch_num() {
			return getRuleContext(Switch_numContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Switch_nameContext switch_name() {
			return getRuleContext(Switch_nameContext.class,0);
		}
		public Switch_clause_onContext switch_clause_on() {
			return getRuleContext(Switch_clause_onContext.class,0);
		}
		public Switch_clause_offContext switch_clause_off() {
			return getRuleContext(Switch_clause_offContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Switch_Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_; }
	}

	public final Switch_Context switch_() throws RecognitionException {
		Switch_Context _localctx = new Switch_Context(_ctx, getState());
		enterRule(_localctx, 500, RULE_switch_);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6635);
			match(SWITCH);
			setState(6637); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6636);
				separator();
				}
				}
				setState(6639); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6641);
			switch_num();
			setState(6645);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1113,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6642);
					separator();
					}
					} 
				}
				setState(6647);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1113,_ctx);
			}
			setState(6662);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS || _la==USER_DEFINED_WORD) {
				{
				setState(6654);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6648);
					match(IS);
					setState(6650); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6649);
						separator();
						}
						}
						setState(6652); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(6656);
				switch_name();
				setState(6658); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(6657);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(6660); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1116,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
			}

			setState(6684);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ON:
				{
				setState(6664);
				switch_clause_on();
				setState(6672);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1119,_ctx) ) {
				case 1:
					{
					setState(6666); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6665);
						separator();
						}
						}
						setState(6668); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(6670);
					switch_clause_off();
					}
					break;
				}
				}
				break;
			case OFF:
				{
				setState(6674);
				switch_clause_off();
				setState(6682);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1121,_ctx) ) {
				case 1:
					{
					setState(6676); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6675);
						separator();
						}
						}
						setState(6678); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(6680);
					switch_clause_on();
					}
					break;
				}
				}
				break;
			case ALPHABET:
			case ARGUMENT_NUMBER:
			case ARGUMENT_VALUE:
			case C01:
			case CARD_READER:
			case CLASS:
			case CONSOLE:
			case CRT:
			case CURRENCY:
			case CURSOR:
			case DECIMAL_POINT:
			case ENVIRONMENT_NAME:
			case ENVIRONMENT_VALUE:
			case LINE_PRINTER:
			case PAPER_TAPE_PUNCH:
			case PAPER_TAPE_READER:
			case SWITCH:
			case SYMBOLIC:
			case SYSERR:
			case SYSIN:
			case SYSOUT:
			case START_SLASH_:
			case START_STAR_:
			case COMMA_:
			case SEMI_:
			case DOT_:
			case START_FOUR_SPACES:
			case WHITESPACE:
			case NEWLINE:
				break;
			default:
				break;
			}
			setState(6689);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1123,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6686);
					separator();
					}
					} 
				}
				setState(6691);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1123,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_clause_onContext extends ParserRuleContext {
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Cond_nameContext cond_name() {
			return getRuleContext(Cond_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Switch_clause_onContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_clause_on; }
	}

	public final Switch_clause_onContext switch_clause_on() throws RecognitionException {
		Switch_clause_onContext _localctx = new Switch_clause_onContext(_ctx, getState());
		enterRule(_localctx, 502, RULE_switch_clause_on);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6692);
			match(ON);
			setState(6694); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6693);
				separator();
				}
				}
				setState(6696); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6704);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==STATUS) {
				{
				setState(6698);
				match(STATUS);
				setState(6700); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6699);
					separator();
					}
					}
					setState(6702); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6712);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6706);
				match(IS);
				setState(6708); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6707);
					separator();
					}
					}
					setState(6710); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6714);
			cond_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_clause_offContext extends ParserRuleContext {
		public TerminalNode OFF() { return getToken(cobolParser.OFF, 0); }
		public Cond_nameContext cond_name() {
			return getRuleContext(Cond_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Switch_clause_offContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_clause_off; }
	}

	public final Switch_clause_offContext switch_clause_off() throws RecognitionException {
		Switch_clause_offContext _localctx = new Switch_clause_offContext(_ctx, getState());
		enterRule(_localctx, 504, RULE_switch_clause_off);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6716);
			match(OFF);
			setState(6718); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6717);
				separator();
				}
				}
				setState(6720); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6728);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==STATUS) {
				{
				setState(6722);
				match(STATUS);
				setState(6724); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6723);
					separator();
					}
					}
					setState(6726); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6736);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6730);
				match(IS);
				setState(6732); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6731);
					separator();
					}
					}
					setState(6734); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6738);
			cond_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Cond_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Cond_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_cond_name; }
	}

	public final Cond_nameContext cond_name() throws RecognitionException {
		Cond_nameContext _localctx = new Cond_nameContext(_ctx, getState());
		enterRule(_localctx, 506, RULE_cond_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6740);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Switch_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_name; }
	}

	public final Switch_nameContext switch_name() throws RecognitionException {
		Switch_nameContext _localctx = new Switch_nameContext(_ctx, getState());
		enterRule(_localctx, 508, RULE_switch_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6742);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Switch_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_num; }
	}

	public final Switch_numContext switch_num() throws RecognitionException {
		Switch_numContext _localctx = new Switch_numContext(_ctx, getState());
		enterRule(_localctx, 510, RULE_switch_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6744);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Top_of_page_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Top_of_page_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_top_of_page_name; }
	}

	public final Top_of_page_nameContext top_of_page_name() throws RecognitionException {
		Top_of_page_nameContext _localctx = new Top_of_page_nameContext(_ctx, getState());
		enterRule(_localctx, 512, RULE_top_of_page_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6746);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Predefined_deviceContext extends ParserRuleContext {
		public TerminalNode CARD_READER() { return getToken(cobolParser.CARD_READER, 0); }
		public TerminalNode PAPER_TAPE_READER() { return getToken(cobolParser.PAPER_TAPE_READER, 0); }
		public TerminalNode CONSOLE() { return getToken(cobolParser.CONSOLE, 0); }
		public TerminalNode LINE_PRINTER() { return getToken(cobolParser.LINE_PRINTER, 0); }
		public TerminalNode PAPER_TAPE_PUNCH() { return getToken(cobolParser.PAPER_TAPE_PUNCH, 0); }
		public TerminalNode SYSIN() { return getToken(cobolParser.SYSIN, 0); }
		public TerminalNode SYSOUT() { return getToken(cobolParser.SYSOUT, 0); }
		public TerminalNode SYSERR() { return getToken(cobolParser.SYSERR, 0); }
		public Predefined_deviceContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_predefined_device; }
	}

	public final Predefined_deviceContext predefined_device() throws RecognitionException {
		Predefined_deviceContext _localctx = new Predefined_deviceContext(_ctx, getState());
		enterRule(_localctx, 514, RULE_predefined_device);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6748);
			_la = _input.LA(1);
			if ( !(_la==CARD_READER || _la==CONSOLE || ((((_la - 228)) & ~0x3f) == 0 && ((1L << (_la - 228)) & ((1L << (LINE_PRINTER - 228)) | (1L << (PAPER_TAPE_PUNCH - 228)) | (1L << (PAPER_TAPE_READER - 228)))) != 0) || ((((_la - 360)) & ~0x3f) == 0 && ((1L << (_la - 360)) & ((1L << (SYSERR - 360)) | (1L << (SYSIN - 360)) | (1L << (SYSOUT - 360)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Device_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Device_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_device_name; }
	}

	public final Device_nameContext device_name() throws RecognitionException {
		Device_nameContext _localctx = new Device_nameContext(_ctx, getState());
		enterRule(_localctx, 516, RULE_device_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6750);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arg_envContext extends ParserRuleContext {
		public TerminalNode ARGUMENT_NUMBER() { return getToken(cobolParser.ARGUMENT_NUMBER, 0); }
		public TerminalNode ARGUMENT_VALUE() { return getToken(cobolParser.ARGUMENT_VALUE, 0); }
		public TerminalNode ENVIRONMENT_NAME() { return getToken(cobolParser.ENVIRONMENT_NAME, 0); }
		public TerminalNode ENVIRONMENT_VALUE() { return getToken(cobolParser.ENVIRONMENT_VALUE, 0); }
		public Arg_envContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arg_env; }
	}

	public final Arg_envContext arg_env() throws RecognitionException {
		Arg_envContext _localctx = new Arg_envContext(_ctx, getState());
		enterRule(_localctx, 518, RULE_arg_env);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6752);
			_la = _input.LA(1);
			if ( !(_la==ARGUMENT_NUMBER || _la==ARGUMENT_VALUE || _la==ENVIRONMENT_NAME || _la==ENVIRONMENT_VALUE) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arg_env_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Arg_env_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arg_env_name; }
	}

	public final Arg_env_nameContext arg_env_name() throws RecognitionException {
		Arg_env_nameContext _localctx = new Arg_env_nameContext(_ctx, getState());
		enterRule(_localctx, 520, RULE_arg_env_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6754);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_controlContext extends ParserRuleContext {
		public TerminalNode FILE_CONTROL() { return getToken(cobolParser.FILE_CONTROL, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<SelectContext> select() {
			return getRuleContexts(SelectContext.class);
		}
		public SelectContext select(int i) {
			return getRuleContext(SelectContext.class,i);
		}
		public File_controlContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_control; }
	}

	public final File_controlContext file_control() throws RecognitionException {
		File_controlContext _localctx = new File_controlContext(_ctx, getState());
		enterRule(_localctx, 522, RULE_file_control);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6756);
			match(FILE_CONTROL);
			setState(6760);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(6757);
				separator();
				}
				}
				setState(6762);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6763);
			match(DOT_);
			setState(6767);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1135,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6764);
					separator();
					}
					} 
				}
				setState(6769);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1135,_ctx);
			}
			setState(6779);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==SELECT) {
				{
				{
				setState(6770);
				select();
				setState(6774);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1136,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(6771);
						separator();
						}
						} 
					}
					setState(6776);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1136,_ctx);
				}
				}
				}
				setState(6781);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SelectContext extends ParserRuleContext {
		public TerminalNode SELECT() { return getToken(cobolParser.SELECT, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public Assign_toContext assign_to() {
			return getRuleContext(Assign_toContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode OPTIONAL() { return getToken(cobolParser.OPTIONAL, 0); }
		public ReserveContext reserve() {
			return getRuleContext(ReserveContext.class,0);
		}
		public OrganizationContext organization() {
			return getRuleContext(OrganizationContext.class,0);
		}
		public Block_containsContext block_contains() {
			return getRuleContext(Block_containsContext.class,0);
		}
		public Code_setContext code_set() {
			return getRuleContext(Code_setContext.class,0);
		}
		public PaddingContext padding() {
			return getRuleContext(PaddingContext.class,0);
		}
		public Record_delimiterContext record_delimiter() {
			return getRuleContext(Record_delimiterContext.class,0);
		}
		public Access_modeContext access_mode() {
			return getRuleContext(Access_modeContext.class,0);
		}
		public List<Record_keyContext> record_key() {
			return getRuleContexts(Record_keyContext.class);
		}
		public Record_keyContext record_key(int i) {
			return getRuleContext(Record_keyContext.class,i);
		}
		public Lock_modeContext lock_mode() {
			return getRuleContext(Lock_modeContext.class,0);
		}
		public File_statusContext file_status() {
			return getRuleContext(File_statusContext.class,0);
		}
		public SelectContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_select; }
	}

	public final SelectContext select() throws RecognitionException {
		SelectContext _localctx = new SelectContext(_ctx, getState());
		enterRule(_localctx, 524, RULE_select);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6782);
			match(SELECT);
			setState(6784); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6783);
				separator();
				}
				}
				setState(6786); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6794);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==OPTIONAL) {
				{
				setState(6788);
				match(OPTIONAL);
				setState(6790); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6789);
					separator();
					}
					}
					setState(6792); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6796);
			file_name();
			setState(6800);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(6797);
				separator();
				}
				}
				setState(6802);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6803);
			assign_to();
			setState(6807);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(6804);
				separator();
				}
				}
				setState(6809);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6817);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==RESERVE) {
				{
				setState(6810);
				reserve();
				setState(6814);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6811);
					separator();
					}
					}
					setState(6816);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6826);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1146,_ctx) ) {
			case 1:
				{
				setState(6819);
				organization();
				setState(6823);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6820);
					separator();
					}
					}
					setState(6825);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				break;
			}
			setState(6835);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==BLOCK) {
				{
				setState(6828);
				block_contains();
				setState(6832);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6829);
					separator();
					}
					}
					setState(6834);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6844);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CODE_SET) {
				{
				setState(6837);
				code_set();
				setState(6841);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6838);
					separator();
					}
					}
					setState(6843);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6853);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==PADDING) {
				{
				setState(6846);
				padding();
				setState(6850);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6847);
					separator();
					}
					}
					setState(6852);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6862);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1154,_ctx) ) {
			case 1:
				{
				setState(6855);
				record_delimiter();
				setState(6859);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6856);
					separator();
					}
					}
					setState(6861);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				break;
			}
			setState(6871);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ACCESS || _la==DYNAMIC || _la==RANDOM || _la==SEQUENTIAL) {
				{
				setState(6864);
				access_mode();
				setState(6868);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6865);
					separator();
					}
					}
					setState(6870);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6882);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==ALTERNATE || _la==RECORD) {
				{
				{
				setState(6873);
				record_key();
				setState(6877);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6874);
					separator();
					}
					}
					setState(6879);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(6884);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6892);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==LOCK) {
				{
				setState(6885);
				lock_mode();
				setState(6889);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6886);
					separator();
					}
					}
					setState(6891);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6901);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE || _la==STATUS) {
				{
				setState(6894);
				file_status();
				setState(6898);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6895);
					separator();
					}
					}
					setState(6900);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6903);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_statusContext extends ParserRuleContext {
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public File_statContext file_stat() {
			return getRuleContext(File_statContext.class,0);
		}
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public File_statusContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_status; }
	}

	public final File_statusContext file_status() throws RecognitionException {
		File_statusContext _localctx = new File_statusContext(_ctx, getState());
		enterRule(_localctx, 526, RULE_file_status);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6911);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE) {
				{
				setState(6905);
				match(FILE);
				setState(6907); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6906);
					separator();
					}
					}
					setState(6909); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6913);
			match(STATUS);
			setState(6915); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6914);
				separator();
				}
				}
				setState(6917); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6925);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6919);
				match(IS);
				setState(6921); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6920);
					separator();
					}
					}
					setState(6923); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6927);
			file_stat();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_statContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public File_statContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_stat; }
	}

	public final File_statContext file_stat() throws RecognitionException {
		File_statContext _localctx = new File_statContext(_ctx, getState());
		enterRule(_localctx, 528, RULE_file_stat);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6929);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_keyContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public Record_key_definitionContext record_key_definition() {
			return getRuleContext(Record_key_definitionContext.class,0);
		}
		public TerminalNode ALTERNATE() { return getToken(cobolParser.ALTERNATE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode DUPLICATES() { return getToken(cobolParser.DUPLICATES, 0); }
		public TerminalNode ASCENDING() { return getToken(cobolParser.ASCENDING, 0); }
		public TerminalNode DESCENDING() { return getToken(cobolParser.DESCENDING, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public Record_keyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_key; }
	}

	public final Record_keyContext record_key() throws RecognitionException {
		Record_keyContext _localctx = new Record_keyContext(_ctx, getState());
		enterRule(_localctx, 530, RULE_record_key);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6937);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ALTERNATE) {
				{
				setState(6931);
				match(ALTERNATE);
				setState(6933); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6932);
					separator();
					}
					}
					setState(6935); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6939);
			match(RECORD);
			setState(6941); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6940);
				separator();
				}
				}
				setState(6943); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(6951);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==KEY) {
				{
				setState(6945);
				match(KEY);
				setState(6947); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6946);
					separator();
					}
					}
					setState(6949); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6959);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6953);
				match(IS);
				setState(6955); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6954);
					separator();
					}
					}
					setState(6957); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(6961);
			record_key_definition();
			setState(6977);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1178,_ctx) ) {
			case 1:
				{
				setState(6963); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6962);
					separator();
					}
					}
					setState(6965); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6973);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(6967);
					match(WITH);
					setState(6969); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6968);
						separator();
						}
						}
						setState(6971); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(6975);
				match(DUPLICATES);
				}
				break;
			}
			setState(6986);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1180,_ctx) ) {
			case 1:
				{
				setState(6980); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6979);
					separator();
					}
					}
					setState(6982); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(6984);
				_la = _input.LA(1);
				if ( !(_la==ASCENDING || _la==DESCENDING) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_key_definitionContext extends ParserRuleContext {
		public List<Qualified_data_itemContext> qualified_data_item() {
			return getRuleContexts(Qualified_data_itemContext.class);
		}
		public Qualified_data_itemContext qualified_data_item(int i) {
			return getRuleContext(Qualified_data_itemContext.class,i);
		}
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode EQUAL_() { return getToken(cobolParser.EQUAL_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Record_key_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_key_definition; }
	}

	public final Record_key_definitionContext record_key_definition() throws RecognitionException {
		Record_key_definitionContext _localctx = new Record_key_definitionContext(_ctx, getState());
		enterRule(_localctx, 532, RULE_record_key_definition);
		int _la;
		try {
			int _alt;
			setState(7016);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1185,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(6988);
				qualified_data_item();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(6989);
				match(USER_DEFINED_WORD);
				setState(6993);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6990);
					separator();
					}
					}
					setState(6995);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6996);
				match(EQUAL_);
				setState(7000);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(6997);
					separator();
					}
					}
					setState(7002);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7003);
				qualified_data_item();
				setState(7013);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1184,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(7007);
						_errHandler.sync(this);
						_la = _input.LA(1);
						while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
							{
							{
							setState(7004);
							separator();
							}
							}
							setState(7009);
							_errHandler.sync(this);
							_la = _input.LA(1);
						}
						setState(7010);
						qualified_data_item();
						}
						} 
					}
					setState(7015);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1184,_ctx);
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Access_modeContext extends ParserRuleContext {
		public TerminalNode SEQUENTIAL() { return getToken(cobolParser.SEQUENTIAL, 0); }
		public TerminalNode RANDOM() { return getToken(cobolParser.RANDOM, 0); }
		public TerminalNode DYNAMIC() { return getToken(cobolParser.DYNAMIC, 0); }
		public TerminalNode ACCESS() { return getToken(cobolParser.ACCESS, 0); }
		public TerminalNode RELATIVE() { return getToken(cobolParser.RELATIVE, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode MODE() { return getToken(cobolParser.MODE, 0); }
		public List<TerminalNode> IS() { return getTokens(cobolParser.IS); }
		public TerminalNode IS(int i) {
			return getToken(cobolParser.IS, i);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Access_modeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_access_mode; }
	}

	public final Access_modeContext access_mode() throws RecognitionException {
		Access_modeContext _localctx = new Access_modeContext(_ctx, getState());
		enterRule(_localctx, 534, RULE_access_mode);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7040);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ACCESS) {
				{
				setState(7018);
				match(ACCESS);
				setState(7020); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7019);
					separator();
					}
					}
					setState(7022); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7030);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==MODE) {
					{
					setState(7024);
					match(MODE);
					setState(7026); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7025);
						separator();
						}
						}
						setState(7028); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(7038);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(7032);
					match(IS);
					setState(7034); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7033);
						separator();
						}
						}
						setState(7036); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				}
			}

			setState(7042);
			_la = _input.LA(1);
			if ( !(_la==DYNAMIC || _la==RANDOM || _la==SEQUENTIAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(7072);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1198,_ctx) ) {
			case 1:
				{
				setState(7044); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7043);
					separator();
					}
					}
					setState(7046); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7048);
				match(RELATIVE);
				setState(7050); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7049);
					separator();
					}
					}
					setState(7052); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7060);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==KEY) {
					{
					setState(7054);
					match(KEY);
					setState(7056); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7055);
						separator();
						}
						}
						setState(7058); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(7068);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(7062);
					match(IS);
					setState(7064); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7063);
						separator();
						}
						}
						setState(7066); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(7070);
				qualified_data_item();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ReserveContext extends ParserRuleContext {
		public TerminalNode RESERVE() { return getToken(cobolParser.RESERVE, 0); }
		public Reserve_numContext reserve_num() {
			return getRuleContext(Reserve_numContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode AREA() { return getToken(cobolParser.AREA, 0); }
		public TerminalNode AREAS() { return getToken(cobolParser.AREAS, 0); }
		public ReserveContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_reserve; }
	}

	public final ReserveContext reserve() throws RecognitionException {
		ReserveContext _localctx = new ReserveContext(_ctx, getState());
		enterRule(_localctx, 536, RULE_reserve);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7074);
			match(RESERVE);
			setState(7076); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7075);
				separator();
				}
				}
				setState(7078); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7080);
			reserve_num();
			setState(7088);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1201,_ctx) ) {
			case 1:
				{
				setState(7082); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7081);
					separator();
					}
					}
					setState(7084); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7086);
				_la = _input.LA(1);
				if ( !(_la==AREA || _la==AREAS) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Reserve_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Reserve_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_reserve_num; }
	}

	public final Reserve_numContext reserve_num() throws RecognitionException {
		Reserve_numContext _localctx = new Reserve_numContext(_ctx, getState());
		enterRule(_localctx, 538, RULE_reserve_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7090);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_delimiterContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode DELIMITER() { return getToken(cobolParser.DELIMITER, 0); }
		public TerminalNode STANDARD_1() { return getToken(cobolParser.STANDARD_1, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Record_delimiterContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_delimiter; }
	}

	public final Record_delimiterContext record_delimiter() throws RecognitionException {
		Record_delimiterContext _localctx = new Record_delimiterContext(_ctx, getState());
		enterRule(_localctx, 540, RULE_record_delimiter);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7092);
			match(RECORD);
			setState(7094); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7093);
				separator();
				}
				}
				setState(7096); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7098);
			match(DELIMITER);
			setState(7100); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7099);
				separator();
				}
				}
				setState(7102); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7110);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(7104);
				match(IS);
				setState(7106); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7105);
					separator();
					}
					}
					setState(7108); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7112);
			match(STANDARD_1);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class PaddingContext extends ParserRuleContext {
		public TerminalNode PADDING() { return getToken(cobolParser.PADDING, 0); }
		public Pad_charContext pad_char() {
			return getRuleContext(Pad_charContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTER() { return getToken(cobolParser.CHARACTER, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public PaddingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_padding; }
	}

	public final PaddingContext padding() throws RecognitionException {
		PaddingContext _localctx = new PaddingContext(_ctx, getState());
		enterRule(_localctx, 542, RULE_padding);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7114);
			match(PADDING);
			setState(7116); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7115);
				separator();
				}
				}
				setState(7118); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7126);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CHARACTER) {
				{
				setState(7120);
				match(CHARACTER);
				setState(7122); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7121);
					separator();
					}
					}
					setState(7124); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7134);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(7128);
				match(IS);
				setState(7130); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7129);
					separator();
					}
					}
					setState(7132); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7136);
			pad_char();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Pad_charContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Pad_charContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_pad_char; }
	}

	public final Pad_charContext pad_char() throws RecognitionException {
		Pad_charContext _localctx = new Pad_charContext(_ctx, getState());
		enterRule(_localctx, 544, RULE_pad_char);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7138);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class OrganizationContext extends ParserRuleContext {
		public TerminalNode SEQUENTIAL() { return getToken(cobolParser.SEQUENTIAL, 0); }
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode RELATIVE() { return getToken(cobolParser.RELATIVE, 0); }
		public TerminalNode INDEXED() { return getToken(cobolParser.INDEXED, 0); }
		public TerminalNode ORGANIZATION() { return getToken(cobolParser.ORGANIZATION, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public OrganizationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_organization; }
	}

	public final OrganizationContext organization() throws RecognitionException {
		OrganizationContext _localctx = new OrganizationContext(_ctx, getState());
		enterRule(_localctx, 546, RULE_organization);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7154);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ORGANIZATION) {
				{
				setState(7140);
				match(ORGANIZATION);
				setState(7142); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7141);
					separator();
					}
					}
					setState(7144); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7152);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(7146);
					match(IS);
					setState(7148); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7147);
						separator();
						}
						}
						setState(7150); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				}
			}

			setState(7167);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case SEQUENTIAL:
				{
				setState(7156);
				match(SEQUENTIAL);
				}
				break;
			case LINE:
				{
				setState(7157);
				match(LINE);
				setState(7159); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7158);
					separator();
					}
					}
					setState(7161); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7163);
				match(SEQUENTIAL);
				}
				break;
			case RELATIVE:
				{
				setState(7165);
				match(RELATIVE);
				}
				break;
			case INDEXED:
				{
				setState(7166);
				match(INDEXED);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Lock_modeContext extends ParserRuleContext {
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public Lock_mode_definitionContext lock_mode_definition() {
			return getRuleContext(Lock_mode_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode MODE() { return getToken(cobolParser.MODE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Lock_modeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_lock_mode; }
	}

	public final Lock_modeContext lock_mode() throws RecognitionException {
		Lock_modeContext _localctx = new Lock_modeContext(_ctx, getState());
		enterRule(_localctx, 548, RULE_lock_mode);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7169);
			match(LOCK);
			setState(7171); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7170);
				separator();
				}
				}
				setState(7173); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7181);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==MODE) {
				{
				setState(7175);
				match(MODE);
				setState(7177); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7176);
					separator();
					}
					}
					setState(7179); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7189);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(7183);
				match(IS);
				setState(7185); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7184);
					separator();
					}
					}
					setState(7187); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7191);
			lock_mode_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Lock_mode_definitionContext extends ParserRuleContext {
		public TerminalNode MANUAL() { return getToken(cobolParser.MANUAL, 0); }
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public TerminalNode MULTIPLE() { return getToken(cobolParser.MULTIPLE, 0); }
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode AUTOMATIC() { return getToken(cobolParser.AUTOMATIC, 0); }
		public TerminalNode ROLLBACK() { return getToken(cobolParser.ROLLBACK, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode EXCLUSIVE() { return getToken(cobolParser.EXCLUSIVE, 0); }
		public Lock_mode_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_lock_mode_definition; }
	}

	public final Lock_mode_definitionContext lock_mode_definition() throws RecognitionException {
		Lock_mode_definitionContext _localctx = new Lock_mode_definitionContext(_ctx, getState());
		enterRule(_localctx, 550, RULE_lock_mode_definition);
		int _la;
		try {
			setState(7261);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case MANUAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(7193);
				match(MANUAL);
				setState(7195); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7194);
					separator();
					}
					}
					setState(7197); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7205);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(7199);
					match(WITH);
					setState(7201); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7200);
						separator();
						}
						}
						setState(7203); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(7207);
				match(LOCK);
				setState(7209); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7208);
					separator();
					}
					}
					setState(7211); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7213);
				match(ON);
				setState(7215); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7214);
					separator();
					}
					}
					setState(7217); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7219);
				match(MULTIPLE);
				setState(7221); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7220);
					separator();
					}
					}
					setState(7223); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7225);
				match(RECORDS);
				}
				break;
			case AUTOMATIC:
				enterOuterAlt(_localctx, 2);
				{
				setState(7227);
				match(AUTOMATIC);
				setState(7258);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1234,_ctx) ) {
				case 1:
					{
					setState(7229); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7228);
						separator();
						}
						}
						setState(7231); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(7239);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==WITH) {
						{
						setState(7233);
						match(WITH);
						setState(7235); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7234);
							separator();
							}
							}
							setState(7237); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					setState(7256);
					_errHandler.sync(this);
					switch (_input.LA(1)) {
					case LOCK:
						{
						{
						setState(7241);
						match(LOCK);
						setState(7243); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7242);
							separator();
							}
							}
							setState(7245); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(7247);
						match(ON);
						setState(7249); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7248);
							separator();
							}
							}
							setState(7251); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(7253);
						match(RECORD);
						}
						}
						break;
					case ROLLBACK:
						{
						setState(7255);
						match(ROLLBACK);
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					}
					break;
				}
				}
				break;
			case EXCLUSIVE:
				enterOuterAlt(_localctx, 3);
				{
				setState(7260);
				match(EXCLUSIVE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Code_setContext extends ParserRuleContext {
		public TerminalNode CODE_SET() { return getToken(cobolParser.CODE_SET, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Code_setContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_code_set; }
	}

	public final Code_setContext code_set() throws RecognitionException {
		Code_setContext _localctx = new Code_setContext(_ctx, getState());
		enterRule(_localctx, 552, RULE_code_set);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7263);
			match(CODE_SET);
			setState(7265); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7264);
				separator();
				}
				}
				setState(7267); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7275);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(7269);
				match(IS);
				setState(7271); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7270);
					separator();
					}
					}
					setState(7273); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7277);
			alpha_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Block_containsContext extends ParserRuleContext {
		public TerminalNode BLOCK() { return getToken(cobolParser.BLOCK, 0); }
		public BlocksizeContext blocksize() {
			return getRuleContext(BlocksizeContext.class,0);
		}
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CONTAINS() { return getToken(cobolParser.CONTAINS, 0); }
		public Smallest_blockContext smallest_block() {
			return getRuleContext(Smallest_blockContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Block_containsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_block_contains; }
	}

	public final Block_containsContext block_contains() throws RecognitionException {
		Block_containsContext _localctx = new Block_containsContext(_ctx, getState());
		enterRule(_localctx, 554, RULE_block_contains);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7279);
			match(BLOCK);
			setState(7281); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7280);
				separator();
				}
				}
				setState(7283); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7291);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONTAINS) {
				{
				setState(7285);
				match(CONTAINS);
				setState(7287); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7286);
					separator();
					}
					}
					setState(7289); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7305);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1244,_ctx) ) {
			case 1:
				{
				setState(7293);
				smallest_block();
				setState(7295); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7294);
					separator();
					}
					}
					setState(7297); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7299);
				match(TO);
				setState(7301); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7300);
					separator();
					}
					}
					setState(7303); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
				break;
			}
			setState(7307);
			blocksize();
			setState(7309); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7308);
				separator();
				}
				}
				setState(7311); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7313);
			_la = _input.LA(1);
			if ( !(_la==CHARACTERS || _la==RECORDS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Smallest_blockContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Smallest_blockContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_smallest_block; }
	}

	public final Smallest_blockContext smallest_block() throws RecognitionException {
		Smallest_blockContext _localctx = new Smallest_blockContext(_ctx, getState());
		enterRule(_localctx, 556, RULE_smallest_block);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7315);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class BlocksizeContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public BlocksizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_blocksize; }
	}

	public final BlocksizeContext blocksize() throws RecognitionException {
		BlocksizeContext _localctx = new BlocksizeContext(_ctx, getState());
		enterRule(_localctx, 558, RULE_blocksize);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7317);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Assign_toContext extends ParserRuleContext {
		public TerminalNode ASSIGN() { return getToken(cobolParser.ASSIGN, 0); }
		public Assign_to_definitionContext assign_to_definition() {
			return getRuleContext(Assign_to_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Assign_toContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_assign_to; }
	}

	public final Assign_toContext assign_to() throws RecognitionException {
		Assign_toContext _localctx = new Assign_toContext(_ctx, getState());
		enterRule(_localctx, 560, RULE_assign_to);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7319);
			match(ASSIGN);
			setState(7321); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7320);
				separator();
				}
				}
				setState(7323); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7331);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==TO) {
				{
				setState(7325);
				match(TO);
				setState(7327); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7326);
					separator();
					}
					}
					setState(7329); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7333);
			assign_to_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Assign_to_definitionContext extends ParserRuleContext {
		public File_specContext file_spec() {
			return getRuleContext(File_specContext.class,0);
		}
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public TerminalNode DYNAMIC() { return getToken(cobolParser.DYNAMIC, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode REEL() { return getToken(cobolParser.REEL, 0); }
		public TerminalNode UNIT() { return getToken(cobolParser.UNIT, 0); }
		public TerminalNode MULTIPLE() { return getToken(cobolParser.MULTIPLE, 0); }
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public Assign_to_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_assign_to_definition; }
	}

	public final Assign_to_definitionContext assign_to_definition() throws RecognitionException {
		Assign_to_definitionContext _localctx = new Assign_to_definitionContext(_ctx, getState());
		enterRule(_localctx, 562, RULE_assign_to_definition);
		int _la;
		try {
			setState(7362);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DISK:
			case DYNAMIC:
			case EXTERNAL:
			case PRINTER:
			case STRING_LITERAL:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(7341);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==DYNAMIC || _la==EXTERNAL) {
					{
					setState(7335);
					_la = _input.LA(1);
					if ( !(_la==DYNAMIC || _la==EXTERNAL) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(7337); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7336);
						separator();
						}
						}
						setState(7339); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(7343);
				file_spec();
				}
				break;
			case MULTIPLE:
			case REEL:
			case UNIT:
				enterOuterAlt(_localctx, 2);
				{
				setState(7350);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==MULTIPLE) {
					{
					setState(7344);
					match(MULTIPLE);
					setState(7346); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7345);
						separator();
						}
						}
						setState(7348); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(7352);
				_la = _input.LA(1);
				if ( !(_la==REEL || _la==UNIT) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(7360);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1254,_ctx) ) {
				case 1:
					{
					setState(7354); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7353);
						separator();
						}
						}
						setState(7356); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(7358);
					match(FILE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_specContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode DISK() { return getToken(cobolParser.DISK, 0); }
		public TerminalNode PRINTER() { return getToken(cobolParser.PRINTER, 0); }
		public File_specContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_spec; }
	}

	public final File_specContext file_spec() throws RecognitionException {
		File_specContext _localctx = new File_specContext(_ctx, getState());
		enterRule(_localctx, 564, RULE_file_spec);
		try {
			setState(7368);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(7364);
				match(STRING_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(7365);
				qualified_data_item();
				}
				break;
			case DISK:
				enterOuterAlt(_localctx, 3);
				{
				setState(7366);
				match(DISK);
				}
				break;
			case PRINTER:
				enterOuterAlt(_localctx, 4);
				{
				setState(7367);
				match(PRINTER);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public File_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_name; }
	}

	public final File_nameContext file_name() throws RecognitionException {
		File_nameContext _localctx = new File_nameContext(_ctx, getState());
		enterRule(_localctx, 566, RULE_file_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7370);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class I_o_controlContext extends ParserRuleContext {
		public TerminalNode I_O_CONTROL() { return getToken(cobolParser.I_O_CONTROL, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<ApplyContext> apply() {
			return getRuleContexts(ApplyContext.class);
		}
		public ApplyContext apply(int i) {
			return getRuleContext(ApplyContext.class,i);
		}
		public List<SameContext> same() {
			return getRuleContexts(SameContext.class);
		}
		public SameContext same(int i) {
			return getRuleContext(SameContext.class,i);
		}
		public List<RerunContext> rerun() {
			return getRuleContexts(RerunContext.class);
		}
		public RerunContext rerun(int i) {
			return getRuleContext(RerunContext.class,i);
		}
		public List<Multiple_fileContext> multiple_file() {
			return getRuleContexts(Multiple_fileContext.class);
		}
		public Multiple_fileContext multiple_file(int i) {
			return getRuleContext(Multiple_fileContext.class,i);
		}
		public I_o_controlContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_i_o_control; }
	}

	public final I_o_controlContext i_o_control() throws RecognitionException {
		I_o_controlContext _localctx = new I_o_controlContext(_ctx, getState());
		enterRule(_localctx, 568, RULE_i_o_control);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7372);
			match(I_O_CONTROL);
			setState(7376);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(7373);
				separator();
				}
				}
				setState(7378);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7379);
			match(DOT_);
			setState(7383);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1258,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7380);
					separator();
					}
					} 
				}
				setState(7385);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1258,_ctx);
			}
			setState(7441);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==APPLY || _la==MULTIPLE || _la==RERUN || _la==SAME || _la==DOT_) {
				{
				setState(7395);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==APPLY) {
					{
					{
					setState(7386);
					apply();
					setState(7390);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(7387);
						separator();
						}
						}
						setState(7392);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(7397);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7407);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==SAME) {
					{
					{
					setState(7398);
					same();
					setState(7402);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(7399);
						separator();
						}
						}
						setState(7404);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(7409);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7419);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==RERUN) {
					{
					{
					setState(7410);
					rerun();
					setState(7414);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(7411);
						separator();
						}
						}
						setState(7416);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(7421);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7431);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==MULTIPLE) {
					{
					{
					setState(7422);
					multiple_file();
					setState(7426);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(7423);
						separator();
						}
						}
						setState(7428);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(7433);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7434);
				match(DOT_);
				setState(7438);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1267,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(7435);
						separator();
						}
						} 
					}
					setState(7440);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1267,_ctx);
				}
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiple_fileContext extends ParserRuleContext {
		public TerminalNode MULTIPLE() { return getToken(cobolParser.MULTIPLE, 0); }
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode TAPE() { return getToken(cobolParser.TAPE, 0); }
		public TerminalNode CONTAINS() { return getToken(cobolParser.CONTAINS, 0); }
		public List<Multiple_file_definitionContext> multiple_file_definition() {
			return getRuleContexts(Multiple_file_definitionContext.class);
		}
		public Multiple_file_definitionContext multiple_file_definition(int i) {
			return getRuleContext(Multiple_file_definitionContext.class,i);
		}
		public Multiple_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiple_file; }
	}

	public final Multiple_fileContext multiple_file() throws RecognitionException {
		Multiple_fileContext _localctx = new Multiple_fileContext(_ctx, getState());
		enterRule(_localctx, 570, RULE_multiple_file);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7443);
			match(MULTIPLE);
			setState(7445); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7444);
				separator();
				}
				}
				setState(7447); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7449);
			match(FILE);
			setState(7451); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7450);
				separator();
				}
				}
				setState(7453); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7461);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==TAPE) {
				{
				setState(7455);
				match(TAPE);
				setState(7457); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7456);
					separator();
					}
					}
					setState(7459); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7469);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONTAINS) {
				{
				setState(7463);
				match(CONTAINS);
				setState(7465); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7464);
					separator();
					}
					}
					setState(7467); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7478); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7471);
				multiple_file_definition();
				setState(7475);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1275,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(7472);
						separator();
						}
						} 
					}
					setState(7477);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1275,_ctx);
				}
				}
				}
				setState(7480); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiple_file_definitionContext extends ParserRuleContext {
		public Multiple_file_nameContext multiple_file_name() {
			return getRuleContext(Multiple_file_nameContext.class,0);
		}
		public TerminalNode POSITION() { return getToken(cobolParser.POSITION, 0); }
		public Pos_integerContext pos_integer() {
			return getRuleContext(Pos_integerContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Multiple_file_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiple_file_definition; }
	}

	public final Multiple_file_definitionContext multiple_file_definition() throws RecognitionException {
		Multiple_file_definitionContext _localctx = new Multiple_file_definitionContext(_ctx, getState());
		enterRule(_localctx, 572, RULE_multiple_file_definition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7482);
			multiple_file_name();
			setState(7496);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1279,_ctx) ) {
			case 1:
				{
				setState(7484); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7483);
					separator();
					}
					}
					setState(7486); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7488);
				match(POSITION);
				setState(7490); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7489);
					separator();
					}
					}
					setState(7492); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7494);
				pos_integer();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiple_file_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Multiple_file_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiple_file_name; }
	}

	public final Multiple_file_nameContext multiple_file_name() throws RecognitionException {
		Multiple_file_nameContext _localctx = new Multiple_file_nameContext(_ctx, getState());
		enterRule(_localctx, 574, RULE_multiple_file_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7498);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Pos_integerContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Pos_integerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_pos_integer; }
	}

	public final Pos_integerContext pos_integer() throws RecognitionException {
		Pos_integerContext _localctx = new Pos_integerContext(_ctx, getState());
		enterRule(_localctx, 576, RULE_pos_integer);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7500);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RerunContext extends ParserRuleContext {
		public TerminalNode RERUN() { return getToken(cobolParser.RERUN, 0); }
		public Rerun_definitionContext rerun_definition() {
			return getRuleContext(Rerun_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public TerminalNode EVERY() { return getToken(cobolParser.EVERY, 0); }
		public RerunContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rerun; }
	}

	public final RerunContext rerun() throws RecognitionException {
		RerunContext _localctx = new RerunContext(_ctx, getState());
		enterRule(_localctx, 578, RULE_rerun);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7502);
			match(RERUN);
			setState(7504); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7503);
				separator();
				}
				}
				setState(7506); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7520);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ON) {
				{
				setState(7508);
				match(ON);
				setState(7510); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7509);
					separator();
					}
					}
					setState(7512); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7514);
				file_name();
				setState(7516); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7515);
					separator();
					}
					}
					setState(7518); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7528);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==EVERY) {
				{
				setState(7522);
				match(EVERY);
				setState(7524); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7523);
					separator();
					}
					}
					setState(7526); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7530);
			rerun_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rerun_definitionContext extends ParserRuleContext {
		public Rerun_def_fileContext rerun_def_file() {
			return getRuleContext(Rerun_def_fileContext.class,0);
		}
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public Clock_countContext clock_count() {
			return getRuleContext(Clock_countContext.class,0);
		}
		public TerminalNode CLOCK_UNITS() { return getToken(cobolParser.CLOCK_UNITS, 0); }
		public Condition_nameContext condition_name() {
			return getRuleContext(Condition_nameContext.class,0);
		}
		public Rerun_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rerun_definition; }
	}

	public final Rerun_definitionContext rerun_definition() throws RecognitionException {
		Rerun_definitionContext _localctx = new Rerun_definitionContext(_ctx, getState());
		enterRule(_localctx, 580, RULE_rerun_definition);
		int _la;
		try {
			setState(7557);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1290,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(7532);
				rerun_def_file();
				setState(7534); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7533);
					separator();
					}
					}
					setState(7536); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7544);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==OF) {
					{
					setState(7538);
					match(OF);
					setState(7540); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7539);
						separator();
						}
						}
						setState(7542); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(7546);
				file_name();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(7548);
				clock_count();
				setState(7550); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7549);
					separator();
					}
					}
					setState(7552); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7554);
				match(CLOCK_UNITS);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(7556);
				condition_name();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Clock_countContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Clock_countContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_clock_count; }
	}

	public final Clock_countContext clock_count() throws RecognitionException {
		Clock_countContext _localctx = new Clock_countContext(_ctx, getState());
		enterRule(_localctx, 582, RULE_clock_count);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7559);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Condition_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Condition_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_condition_name; }
	}

	public final Condition_nameContext condition_name() throws RecognitionException {
		Condition_nameContext _localctx = new Condition_nameContext(_ctx, getState());
		enterRule(_localctx, 584, RULE_condition_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7561);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rerun_def_fileContext extends ParserRuleContext {
		public TerminalNode REEL() { return getToken(cobolParser.REEL, 0); }
		public TerminalNode UNIT() { return getToken(cobolParser.UNIT, 0); }
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public Rec_countContext rec_count() {
			return getRuleContext(Rec_countContext.class,0);
		}
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public Rerun_def_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rerun_def_file; }
	}

	public final Rerun_def_fileContext rerun_def_file() throws RecognitionException {
		Rerun_def_fileContext _localctx = new Rerun_def_fileContext(_ctx, getState());
		enterRule(_localctx, 586, RULE_rerun_def_file);
		int _la;
		try {
			setState(7588);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case END:
			case REEL:
			case UNIT:
				enterOuterAlt(_localctx, 1);
				{
				setState(7577);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==END) {
					{
					setState(7563);
					match(END);
					setState(7565); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7564);
						separator();
						}
						}
						setState(7567); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(7575);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==OF) {
						{
						setState(7569);
						match(OF);
						setState(7571); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7570);
							separator();
							}
							}
							setState(7573); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						}
					}

					}
				}

				setState(7579);
				_la = _input.LA(1);
				if ( !(_la==REEL || _la==UNIT) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(7580);
				rec_count();
				setState(7582); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7581);
					separator();
					}
					}
					setState(7584); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7586);
				match(RECORDS);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rec_countContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Rec_countContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rec_count; }
	}

	public final Rec_countContext rec_count() throws RecognitionException {
		Rec_countContext _localctx = new Rec_countContext(_ctx, getState());
		enterRule(_localctx, 588, RULE_rec_count);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7590);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SameContext extends ParserRuleContext {
		public TerminalNode SAME() { return getToken(cobolParser.SAME, 0); }
		public List<Same_area_fileContext> same_area_file() {
			return getRuleContexts(Same_area_fileContext.class);
		}
		public Same_area_fileContext same_area_file(int i) {
			return getRuleContext(Same_area_fileContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode AREA() { return getToken(cobolParser.AREA, 0); }
		public TerminalNode FOR() { return getToken(cobolParser.FOR, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode SORT() { return getToken(cobolParser.SORT, 0); }
		public TerminalNode SORT_MERGE() { return getToken(cobolParser.SORT_MERGE, 0); }
		public SameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_same; }
	}

	public final SameContext same() throws RecognitionException {
		SameContext _localctx = new SameContext(_ctx, getState());
		enterRule(_localctx, 590, RULE_same);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7592);
			match(SAME);
			setState(7594); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7593);
				separator();
				}
				}
				setState(7596); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7604);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (((((_la - 292)) & ~0x3f) == 0 && ((1L << (_la - 292)) & ((1L << (RECORD - 292)) | (1L << (SORT - 292)) | (1L << (SORT_MERGE - 292)))) != 0)) {
				{
				setState(7598);
				_la = _input.LA(1);
				if ( !(((((_la - 292)) & ~0x3f) == 0 && ((1L << (_la - 292)) & ((1L << (RECORD - 292)) | (1L << (SORT - 292)) | (1L << (SORT_MERGE - 292)))) != 0)) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(7600); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7599);
					separator();
					}
					}
					setState(7602); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7612);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AREA) {
				{
				setState(7606);
				match(AREA);
				setState(7608); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7607);
					separator();
					}
					}
					setState(7610); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7620);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FOR) {
				{
				setState(7614);
				match(FOR);
				setState(7616); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7615);
					separator();
					}
					}
					setState(7618); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
			}

			setState(7622);
			same_area_file();
			setState(7630); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(7624); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7623);
						separator();
						}
						}
						setState(7626); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(7628);
					same_area_file();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(7632); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1305,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Same_area_fileContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Same_area_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_same_area_file; }
	}

	public final Same_area_fileContext same_area_file() throws RecognitionException {
		Same_area_fileContext _localctx = new Same_area_fileContext(_ctx, getState());
		enterRule(_localctx, 592, RULE_same_area_file);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7634);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ApplyContext extends ParserRuleContext {
		public TerminalNode APPLY() { return getToken(cobolParser.APPLY, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Apply_definitionContext> apply_definition() {
			return getRuleContexts(Apply_definitionContext.class);
		}
		public Apply_definitionContext apply_definition(int i) {
			return getRuleContext(Apply_definitionContext.class,i);
		}
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public ApplyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_apply; }
	}

	public final ApplyContext apply() throws RecognitionException {
		ApplyContext _localctx = new ApplyContext(_ctx, getState());
		enterRule(_localctx, 594, RULE_apply);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7636);
			match(APPLY);
			setState(7638); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7637);
				separator();
				}
				}
				setState(7640); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7648); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7642);
				apply_definition();
				setState(7644); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7643);
					separator();
					}
					}
					setState(7646); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				}
				}
				setState(7650); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 85)) & ~0x3f) == 0 && ((1L << (_la - 85)) & ((1L << (CONTIGUOUS - 85)) | (1L << (CONTIGUOUS_BEST_TRY - 85)) | (1L << (DEFERRED_WRITE - 85)))) != 0) || _la==EXTENSION || _la==FILL_SIZE || ((((_la - 231)) & ~0x3f) == 0 && ((1L << (_la - 231)) & ((1L << (LOCK_HOLDING - 231)) | (1L << (MASS_INSERT - 231)) | (1L << (PREALLOCATION - 231)) | (1L << (PRINT_CONTROL - 231)))) != 0) || _la==WINDOW );
			setState(7652);
			match(ON);
			setState(7654); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7653);
				separator();
				}
				}
				setState(7656); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7665); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7658);
				file_name();
				setState(7662);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1310,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(7659);
						separator();
						}
						} 
					}
					setState(7664);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1310,_ctx);
				}
				}
				}
				setState(7667); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Apply_definitionContext extends ParserRuleContext {
		public TerminalNode DEFERRED_WRITE() { return getToken(cobolParser.DEFERRED_WRITE, 0); }
		public TerminalNode EXTENSION() { return getToken(cobolParser.EXTENSION, 0); }
		public Extend_amtContext extend_amt() {
			return getRuleContext(Extend_amtContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FILL_SIZE() { return getToken(cobolParser.FILL_SIZE, 0); }
		public TerminalNode LOCK_HOLDING() { return getToken(cobolParser.LOCK_HOLDING, 0); }
		public TerminalNode MASS_INSERT() { return getToken(cobolParser.MASS_INSERT, 0); }
		public TerminalNode PREALLOCATION() { return getToken(cobolParser.PREALLOCATION, 0); }
		public Preall_amtContext preall_amt() {
			return getRuleContext(Preall_amtContext.class,0);
		}
		public TerminalNode CONTIGUOUS() { return getToken(cobolParser.CONTIGUOUS, 0); }
		public TerminalNode CONTIGUOUS_BEST_TRY() { return getToken(cobolParser.CONTIGUOUS_BEST_TRY, 0); }
		public TerminalNode PRINT_CONTROL() { return getToken(cobolParser.PRINT_CONTROL, 0); }
		public TerminalNode WINDOW() { return getToken(cobolParser.WINDOW, 0); }
		public Window_ptrsContext window_ptrs() {
			return getRuleContext(Window_ptrsContext.class,0);
		}
		public Apply_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_apply_definition; }
	}

	public final Apply_definitionContext apply_definition() throws RecognitionException {
		Apply_definitionContext _localctx = new Apply_definitionContext(_ctx, getState());
		enterRule(_localctx, 596, RULE_apply_definition);
		int _la;
		try {
			setState(7706);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DEFERRED_WRITE:
				enterOuterAlt(_localctx, 1);
				{
				setState(7669);
				match(DEFERRED_WRITE);
				}
				break;
			case EXTENSION:
				enterOuterAlt(_localctx, 2);
				{
				setState(7670);
				match(EXTENSION);
				setState(7672); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7671);
					separator();
					}
					}
					setState(7674); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7676);
				extend_amt();
				}
				break;
			case FILL_SIZE:
				enterOuterAlt(_localctx, 3);
				{
				setState(7678);
				match(FILL_SIZE);
				}
				break;
			case LOCK_HOLDING:
				enterOuterAlt(_localctx, 4);
				{
				setState(7679);
				match(LOCK_HOLDING);
				}
				break;
			case MASS_INSERT:
				enterOuterAlt(_localctx, 5);
				{
				setState(7680);
				match(MASS_INSERT);
				}
				break;
			case CONTIGUOUS:
			case CONTIGUOUS_BEST_TRY:
			case PREALLOCATION:
				enterOuterAlt(_localctx, 6);
				{
				setState(7687);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CONTIGUOUS || _la==CONTIGUOUS_BEST_TRY) {
					{
					setState(7681);
					_la = _input.LA(1);
					if ( !(_la==CONTIGUOUS || _la==CONTIGUOUS_BEST_TRY) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(7683); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7682);
						separator();
						}
						}
						setState(7685); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					}
				}

				setState(7689);
				match(PREALLOCATION);
				setState(7691); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7690);
					separator();
					}
					}
					setState(7693); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7695);
				preall_amt();
				}
				break;
			case PRINT_CONTROL:
				enterOuterAlt(_localctx, 7);
				{
				setState(7697);
				match(PRINT_CONTROL);
				}
				break;
			case WINDOW:
				enterOuterAlt(_localctx, 8);
				{
				setState(7698);
				match(WINDOW);
				setState(7700); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7699);
					separator();
					}
					}
					setState(7702); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7704);
				window_ptrs();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Window_ptrsContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Window_ptrsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_window_ptrs; }
	}

	public final Window_ptrsContext window_ptrs() throws RecognitionException {
		Window_ptrsContext _localctx = new Window_ptrsContext(_ctx, getState());
		enterRule(_localctx, 598, RULE_window_ptrs);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7708);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Preall_amtContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Preall_amtContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_preall_amt; }
	}

	public final Preall_amtContext preall_amt() throws RecognitionException {
		Preall_amtContext _localctx = new Preall_amtContext(_ctx, getState());
		enterRule(_localctx, 600, RULE_preall_amt);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7710);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Extend_amtContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Extend_amtContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_extend_amt; }
	}

	public final Extend_amtContext extend_amt() throws RecognitionException {
		Extend_amtContext _localctx = new Extend_amtContext(_ctx, getState());
		enterRule(_localctx, 602, RULE_extend_amt);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7712);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arithmetic_expressionContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Unary_arithmetic_operatorContext unary_arithmetic_operator() {
			return getRuleContext(Unary_arithmetic_operatorContext.class,0);
		}
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public ConstantContext constant() {
			return getRuleContext(ConstantContext.class,0);
		}
		public Binary_arithmetic_operatorContext binary_arithmetic_operator() {
			return getRuleContext(Binary_arithmetic_operatorContext.class,0);
		}
		public Arithmetic_expressionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arithmetic_expression; }
	}

	public final Arithmetic_expressionContext arithmetic_expression() throws RecognitionException {
		return arithmetic_expression(0);
	}

	private Arithmetic_expressionContext arithmetic_expression(int _p) throws RecognitionException {
		ParserRuleContext _parentctx = _ctx;
		int _parentState = getState();
		Arithmetic_expressionContext _localctx = new Arithmetic_expressionContext(_ctx, _parentState);
		Arithmetic_expressionContext _prevctx = _localctx;
		int _startState = 604;
		enterRecursionRule(_localctx, 604, RULE_arithmetic_expression, _p);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7742);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LPAREN_:
				{
				setState(7715);
				match(LPAREN_);
				setState(7719);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(7716);
					arithmetic_separator();
					}
					}
					setState(7721);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7722);
				arithmetic_expression(0);
				setState(7726);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(7723);
					arithmetic_separator();
					}
					}
					setState(7728);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7729);
				match(RPAREN_);
				}
				break;
			case PLUS_:
			case MINUS_:
				{
				setState(7731);
				unary_arithmetic_operator();
				setState(7735);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(7732);
					arithmetic_separator();
					}
					}
					setState(7737);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7738);
				arithmetic_expression(3);
				}
				break;
			case FUNCTION:
			case USER_DEFINED_WORD:
				{
				setState(7740);
				identifier();
				}
				break;
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				{
				setState(7741);
				constant();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			_ctx.stop = _input.LT(-1);
			setState(7762);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1324,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( _parseListeners!=null ) triggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Arithmetic_expressionContext(_parentctx, _parentState);
					pushNewRecursionContext(_localctx, _startState, RULE_arithmetic_expression);
					setState(7744);
					if (!(precpred(_ctx, 4))) throw new FailedPredicateException(this, "precpred(_ctx, 4)");
					setState(7748);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(7745);
						arithmetic_separator();
						}
						}
						setState(7750);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7751);
					binary_arithmetic_operator();
					setState(7755);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(7752);
						arithmetic_separator();
						}
						}
						setState(7757);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7758);
					arithmetic_expression(5);
					}
					} 
				}
				setState(7764);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1324,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public static class ConstantContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Figurative_constantContext figurative_constant() {
			return getRuleContext(Figurative_constantContext.class,0);
		}
		public ConstantContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_constant; }
	}

	public final ConstantContext constant() throws RecognitionException {
		ConstantContext _localctx = new ConstantContext(_ctx, getState());
		enterRule(_localctx, 606, RULE_constant);
		try {
			setState(7768);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(7765);
				match(NUMERIC_LITERAL);
				}
				break;
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(7766);
				match(STRING_LITERAL);
				}
				break;
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
				enterOuterAlt(_localctx, 3);
				{
				setState(7767);
				figurative_constant();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Binary_arithmetic_operatorContext extends ParserRuleContext {
		public TerminalNode PLUS_() { return getToken(cobolParser.PLUS_, 0); }
		public TerminalNode MINUS_() { return getToken(cobolParser.MINUS_, 0); }
		public List<TerminalNode> STAR_() { return getTokens(cobolParser.STAR_); }
		public TerminalNode STAR_(int i) {
			return getToken(cobolParser.STAR_, i);
		}
		public TerminalNode SLASH_() { return getToken(cobolParser.SLASH_, 0); }
		public Binary_arithmetic_operatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_binary_arithmetic_operator; }
	}

	public final Binary_arithmetic_operatorContext binary_arithmetic_operator() throws RecognitionException {
		Binary_arithmetic_operatorContext _localctx = new Binary_arithmetic_operatorContext(_ctx, getState());
		enterRule(_localctx, 608, RULE_binary_arithmetic_operator);
		try {
			setState(7776);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1326,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(7770);
				match(PLUS_);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(7771);
				match(MINUS_);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(7772);
				match(STAR_);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(7773);
				match(SLASH_);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(7774);
				match(STAR_);
				setState(7775);
				match(STAR_);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Unary_arithmetic_operatorContext extends ParserRuleContext {
		public TerminalNode PLUS_() { return getToken(cobolParser.PLUS_, 0); }
		public TerminalNode MINUS_() { return getToken(cobolParser.MINUS_, 0); }
		public Unary_arithmetic_operatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_unary_arithmetic_operator; }
	}

	public final Unary_arithmetic_operatorContext unary_arithmetic_operator() throws RecognitionException {
		Unary_arithmetic_operatorContext _localctx = new Unary_arithmetic_operatorContext(_ctx, getState());
		enterRule(_localctx, 610, RULE_unary_arithmetic_operator);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7778);
			_la = _input.LA(1);
			if ( !(_la==PLUS_ || _la==MINUS_) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Logic_expressionContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public List<Logic_expressionContext> logic_expression() {
			return getRuleContexts(Logic_expressionContext.class);
		}
		public Logic_expressionContext logic_expression(int i) {
			return getRuleContext(Logic_expressionContext.class,i);
		}
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public Class_conditionContext class_condition() {
			return getRuleContext(Class_conditionContext.class,0);
		}
		public Logic_conditionContext logic_condition() {
			return getRuleContext(Logic_conditionContext.class,0);
		}
		public Sign_conditionContext sign_condition() {
			return getRuleContext(Sign_conditionContext.class,0);
		}
		public Success_failure_conditionContext success_failure_condition() {
			return getRuleContext(Success_failure_conditionContext.class,0);
		}
		public Logic_operationContext logic_operation() {
			return getRuleContext(Logic_operationContext.class,0);
		}
		public Logic_expressionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_logic_expression; }
	}

	public final Logic_expressionContext logic_expression() throws RecognitionException {
		return logic_expression(0);
	}

	private Logic_expressionContext logic_expression(int _p) throws RecognitionException {
		ParserRuleContext _parentctx = _ctx;
		int _parentState = getState();
		Logic_expressionContext _localctx = new Logic_expressionContext(_ctx, _parentState);
		Logic_expressionContext _prevctx = _localctx;
		int _startState = 612;
		enterRecursionRule(_localctx, 612, RULE_logic_expression, _p);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7809);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1330,_ctx) ) {
			case 1:
				{
				setState(7781);
				match(LPAREN_);
				setState(7785);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(7782);
					arithmetic_separator();
					}
					}
					setState(7787);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7788);
				logic_expression(0);
				setState(7792);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(7789);
					arithmetic_separator();
					}
					}
					setState(7794);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7795);
				match(RPAREN_);
				}
				break;
			case 2:
				{
				setState(7797);
				match(NOT);
				setState(7801);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(7798);
					arithmetic_separator();
					}
					}
					setState(7803);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7804);
				logic_expression(5);
				}
				break;
			case 3:
				{
				setState(7805);
				class_condition();
				}
				break;
			case 4:
				{
				setState(7806);
				logic_condition(0);
				}
				break;
			case 5:
				{
				setState(7807);
				sign_condition();
				}
				break;
			case 6:
				{
				setState(7808);
				success_failure_condition();
				}
				break;
			}
			_ctx.stop = _input.LT(-1);
			setState(7829);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1333,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( _parseListeners!=null ) triggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Logic_expressionContext(_parentctx, _parentState);
					pushNewRecursionContext(_localctx, _startState, RULE_logic_expression);
					setState(7811);
					if (!(precpred(_ctx, 6))) throw new FailedPredicateException(this, "precpred(_ctx, 6)");
					setState(7815);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(7812);
						arithmetic_separator();
						}
						}
						setState(7817);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7818);
					logic_operation();
					setState(7822);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(7819);
						arithmetic_separator();
						}
						}
						setState(7824);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7825);
					logic_expression(7);
					}
					} 
				}
				setState(7831);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1333,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public static class Success_failure_conditionContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode SUCCESS() { return getToken(cobolParser.SUCCESS, 0); }
		public TerminalNode FAILURE() { return getToken(cobolParser.FAILURE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Success_failure_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_success_failure_condition; }
	}

	public final Success_failure_conditionContext success_failure_condition() throws RecognitionException {
		Success_failure_conditionContext _localctx = new Success_failure_conditionContext(_ctx, getState());
		enterRule(_localctx, 614, RULE_success_failure_condition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7832);
			qualified_data_item();
			setState(7840);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1335,_ctx) ) {
			case 1:
				{
				setState(7834); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7833);
					arithmetic_separator();
					}
					}
					setState(7836); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7838);
				match(IS);
				}
				break;
			}
			setState(7843); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7842);
				arithmetic_separator();
				}
				}
				setState(7845); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7847);
			_la = _input.LA(1);
			if ( !(_la==FAILURE || _la==SUCCESS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Logic_conditionContext extends ParserRuleContext {
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public Condition_operatorContext condition_operator() {
			return getRuleContext(Condition_operatorContext.class,0);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Class_conditionContext class_condition() {
			return getRuleContext(Class_conditionContext.class,0);
		}
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Logic_conditionContext logic_condition() {
			return getRuleContext(Logic_conditionContext.class,0);
		}
		public Logic_operationContext logic_operation() {
			return getRuleContext(Logic_operationContext.class,0);
		}
		public Logic_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_logic_condition; }
	}

	public final Logic_conditionContext logic_condition() throws RecognitionException {
		return logic_condition(0);
	}

	private Logic_conditionContext logic_condition(int _p) throws RecognitionException {
		ParserRuleContext _parentctx = _ctx;
		int _parentState = getState();
		Logic_conditionContext _localctx = new Logic_conditionContext(_ctx, _parentState);
		Logic_conditionContext _prevctx = _localctx;
		int _startState = 616;
		enterRecursionRule(_localctx, 616, RULE_logic_condition, _p);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7868);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1339,_ctx) ) {
			case 1:
				{
				setState(7850);
				arithmetic_expression(0);
				setState(7854);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(7851);
					arithmetic_separator();
					}
					}
					setState(7856);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7857);
				condition_operator();
				setState(7861);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(7858);
					arithmetic_separator();
					}
					}
					setState(7863);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7864);
				arithmetic_expression(0);
				}
				break;
			case 2:
				{
				setState(7866);
				class_condition();
				}
				break;
			case 3:
				{
				setState(7867);
				qualified_data_item();
				}
				break;
			}
			_ctx.stop = _input.LT(-1);
			setState(7894);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1343,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( _parseListeners!=null ) triggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Logic_conditionContext(_parentctx, _parentState);
					pushNewRecursionContext(_localctx, _startState, RULE_logic_condition);
					setState(7870);
					if (!(precpred(_ctx, 1))) throw new FailedPredicateException(this, "precpred(_ctx, 1)");
					setState(7872); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7871);
						arithmetic_separator();
						}
						}
						setState(7874); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(7876);
					logic_operation();
					setState(7880);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(7877);
						arithmetic_separator();
						}
						}
						setState(7882);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7883);
					condition_operator();
					setState(7887);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(7884);
						arithmetic_separator();
						}
						}
						setState(7889);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(7890);
					arithmetic_expression(0);
					}
					} 
				}
				setState(7896);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1343,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public static class Logic_operationContext extends ParserRuleContext {
		public TerminalNode AND() { return getToken(cobolParser.AND, 0); }
		public TerminalNode OR() { return getToken(cobolParser.OR, 0); }
		public Logic_operationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_logic_operation; }
	}

	public final Logic_operationContext logic_operation() throws RecognitionException {
		Logic_operationContext _localctx = new Logic_operationContext(_ctx, getState());
		enterRule(_localctx, 618, RULE_logic_operation);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7897);
			_la = _input.LA(1);
			if ( !(_la==AND || _la==OR) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sign_conditionContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public Sign_condition_nameContext sign_condition_name() {
			return getRuleContext(Sign_condition_nameContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Sign_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sign_condition; }
	}

	public final Sign_conditionContext sign_condition() throws RecognitionException {
		Sign_conditionContext _localctx = new Sign_conditionContext(_ctx, getState());
		enterRule(_localctx, 620, RULE_sign_condition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7899);
			arithmetic_expression(0);
			setState(7907);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1345,_ctx) ) {
			case 1:
				{
				setState(7901); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7900);
					arithmetic_separator();
					}
					}
					setState(7903); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7905);
				match(IS);
				}
				break;
			}
			setState(7916);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1347,_ctx) ) {
			case 1:
				{
				setState(7910); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7909);
					arithmetic_separator();
					}
					}
					setState(7912); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7914);
				match(NOT);
				}
				break;
			}
			setState(7919); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7918);
				arithmetic_separator();
				}
				}
				setState(7921); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7923);
			sign_condition_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sign_condition_nameContext extends ParserRuleContext {
		public TerminalNode POSITIVE() { return getToken(cobolParser.POSITIVE, 0); }
		public TerminalNode NEGATIVE() { return getToken(cobolParser.NEGATIVE, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public Sign_condition_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sign_condition_name; }
	}

	public final Sign_condition_nameContext sign_condition_name() throws RecognitionException {
		Sign_condition_nameContext _localctx = new Sign_condition_nameContext(_ctx, getState());
		enterRule(_localctx, 622, RULE_sign_condition_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7925);
			_la = _input.LA(1);
			if ( !(_la==NEGATIVE || _la==POSITIVE || _la==ZERO) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_conditionContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public Class_condition_nameContext class_condition_name() {
			return getRuleContext(Class_condition_nameContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Class_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_condition; }
	}

	public final Class_conditionContext class_condition() throws RecognitionException {
		Class_conditionContext _localctx = new Class_conditionContext(_ctx, getState());
		enterRule(_localctx, 624, RULE_class_condition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7927);
			identifier();
			setState(7935);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1350,_ctx) ) {
			case 1:
				{
				setState(7929); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7928);
					arithmetic_separator();
					}
					}
					setState(7931); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7933);
				match(IS);
				}
				break;
			}
			setState(7944);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1352,_ctx) ) {
			case 1:
				{
				setState(7938); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7937);
					arithmetic_separator();
					}
					}
					setState(7940); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(7942);
				match(NOT);
				}
				break;
			}
			setState(7947); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7946);
				arithmetic_separator();
				}
				}
				setState(7949); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
			setState(7951);
			class_condition_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_condition_nameContext extends ParserRuleContext {
		public TerminalNode NUMERIC() { return getToken(cobolParser.NUMERIC, 0); }
		public TerminalNode ALPHABETIC() { return getToken(cobolParser.ALPHABETIC, 0); }
		public TerminalNode ALPHABETIC_LOWER() { return getToken(cobolParser.ALPHABETIC_LOWER, 0); }
		public TerminalNode ALPHABETIC_UPPER() { return getToken(cobolParser.ALPHABETIC_UPPER, 0); }
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Class_condition_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_condition_name; }
	}

	public final Class_condition_nameContext class_condition_name() throws RecognitionException {
		Class_condition_nameContext _localctx = new Class_condition_nameContext(_ctx, getState());
		enterRule(_localctx, 626, RULE_class_condition_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7953);
			_la = _input.LA(1);
			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER))) != 0) || _la==NUMERIC || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Condition_operatorContext extends ParserRuleContext {
		public TerminalNode GREATER() { return getToken(cobolParser.GREATER, 0); }
		public TerminalNode OR() { return getToken(cobolParser.OR, 0); }
		public TerminalNode EQUAL() { return getToken(cobolParser.EQUAL, 0); }
		public TerminalNode GE_() { return getToken(cobolParser.GE_, 0); }
		public TerminalNode LESS() { return getToken(cobolParser.LESS, 0); }
		public TerminalNode LE_() { return getToken(cobolParser.LE_, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode GT_() { return getToken(cobolParser.GT_, 0); }
		public TerminalNode LT_() { return getToken(cobolParser.LT_, 0); }
		public TerminalNode EQUAL_() { return getToken(cobolParser.EQUAL_, 0); }
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public TerminalNode THAN() { return getToken(cobolParser.THAN, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Condition_operatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_condition_operator; }
	}

	public final Condition_operatorContext condition_operator() throws RecognitionException {
		Condition_operatorContext _localctx = new Condition_operatorContext(_ctx, getState());
		enterRule(_localctx, 628, RULE_condition_operator);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7962);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(7955);
				match(IS);
				setState(7959);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(7956);
					arithmetic_separator();
					}
					}
					setState(7961);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(8099);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1383,_ctx) ) {
			case 1:
				{
				setState(7971);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NOT) {
					{
					setState(7964);
					match(NOT);
					setState(7968);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(7965);
						arithmetic_separator();
						}
						}
						setState(7970);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
				}

				setState(8033);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case GREATER:
					{
					setState(7973);
					match(GREATER);
					setState(7981);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1359,_ctx) ) {
					case 1:
						{
						setState(7975); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7974);
							arithmetic_separator();
							}
							}
							setState(7977); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(7979);
						match(THAN);
						}
						break;
					}
					}
					break;
				case GT_:
					{
					setState(7983);
					match(GT_);
					setState(7991);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1361,_ctx) ) {
					case 1:
						{
						setState(7985); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7984);
							arithmetic_separator();
							}
							}
							setState(7987); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(7989);
						match(THAN);
						}
						break;
					}
					}
					break;
				case LESS:
					{
					setState(7993);
					match(LESS);
					setState(8001);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1363,_ctx) ) {
					case 1:
						{
						setState(7995); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7994);
							arithmetic_separator();
							}
							}
							setState(7997); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(7999);
						match(THAN);
						}
						break;
					}
					}
					break;
				case LT_:
					{
					setState(8003);
					match(LT_);
					setState(8011);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1365,_ctx) ) {
					case 1:
						{
						setState(8005); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(8004);
							arithmetic_separator();
							}
							}
							setState(8007); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(8009);
						match(THAN);
						}
						break;
					}
					}
					break;
				case EQUAL:
					{
					setState(8013);
					match(EQUAL);
					setState(8021);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1367,_ctx) ) {
					case 1:
						{
						setState(8015); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(8014);
							arithmetic_separator();
							}
							}
							setState(8017); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(8019);
						match(TO);
						}
						break;
					}
					}
					break;
				case EQUAL_:
					{
					setState(8023);
					match(EQUAL_);
					setState(8031);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1369,_ctx) ) {
					case 1:
						{
						setState(8025); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(8024);
							arithmetic_separator();
							}
							}
							setState(8027); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
						setState(8029);
						match(TO);
						}
						break;
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			case 2:
				{
				setState(8035);
				match(GREATER);
				setState(8043);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1372,_ctx) ) {
				case 1:
					{
					setState(8037); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8036);
						arithmetic_separator();
						}
						}
						setState(8039); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(8041);
					match(THAN);
					}
					break;
				}
				setState(8046); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8045);
					arithmetic_separator();
					}
					}
					setState(8048); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(8050);
				match(OR);
				setState(8052); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8051);
					arithmetic_separator();
					}
					}
					setState(8054); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(8056);
				match(EQUAL);
				setState(8064);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1376,_ctx) ) {
				case 1:
					{
					setState(8058); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8057);
						arithmetic_separator();
						}
						}
						setState(8060); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(8062);
					match(TO);
					}
					break;
				}
				}
				break;
			case 3:
				{
				setState(8066);
				match(GE_);
				}
				break;
			case 4:
				{
				setState(8067);
				match(LESS);
				setState(8075);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1378,_ctx) ) {
				case 1:
					{
					setState(8069); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8068);
						arithmetic_separator();
						}
						}
						setState(8071); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(8073);
					match(THAN);
					}
					break;
				}
				setState(8078); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8077);
					arithmetic_separator();
					}
					}
					setState(8080); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(8082);
				match(OR);
				setState(8084); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8083);
					arithmetic_separator();
					}
					}
					setState(8086); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
				setState(8088);
				match(EQUAL);
				setState(8096);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1382,_ctx) ) {
				case 1:
					{
					setState(8090); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8089);
						arithmetic_separator();
						}
						}
						setState(8092); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0) );
					setState(8094);
					match(TO);
					}
					break;
				}
				}
				break;
			case 5:
				{
				setState(8098);
				match(LE_);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Identifier_resultContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public SubscriptingContext subscripting() {
			return getRuleContext(SubscriptingContext.class,0);
		}
		public Reference_modificationContext reference_modification() {
			return getRuleContext(Reference_modificationContext.class,0);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Identifier_resultContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identifier_result; }
	}

	public final Identifier_resultContext identifier_result() throws RecognitionException {
		Identifier_resultContext _localctx = new Identifier_resultContext(_ctx, getState());
		enterRule(_localctx, 630, RULE_identifier_result);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8101);
			qualified_data_item();
			setState(8109);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1385,_ctx) ) {
			case 1:
				{
				setState(8105);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(8102);
					arithmetic_separator();
					}
					}
					setState(8107);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(8108);
				subscripting();
				}
				break;
			}
			setState(8118);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1387,_ctx) ) {
			case 1:
				{
				setState(8114);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(8111);
					arithmetic_separator();
					}
					}
					setState(8116);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(8117);
				reference_modification();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class IdentifierContext extends ParserRuleContext {
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public TerminalNode FUNCTION() { return getToken(cobolParser.FUNCTION, 0); }
		public Function_nameContext function_name() {
			return getRuleContext(Function_nameContext.class,0);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public ArgumentsContext arguments() {
			return getRuleContext(ArgumentsContext.class,0);
		}
		public Reference_modificationContext reference_modification() {
			return getRuleContext(Reference_modificationContext.class,0);
		}
		public IdentifierContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identifier; }
	}

	public final IdentifierContext identifier() throws RecognitionException {
		IdentifierContext _localctx = new IdentifierContext(_ctx, getState());
		enterRule(_localctx, 632, RULE_identifier);
		int _la;
		try {
			setState(8147);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(8120);
				identifier_result();
				}
				break;
			case FUNCTION:
				enterOuterAlt(_localctx, 2);
				{
				setState(8121);
				match(FUNCTION);
				setState(8125);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(8122);
					arithmetic_separator();
					}
					}
					setState(8127);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(8128);
				function_name();
				setState(8136);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1390,_ctx) ) {
				case 1:
					{
					setState(8132);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(8129);
						arithmetic_separator();
						}
						}
						setState(8134);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(8135);
					arguments();
					}
					break;
				}
				setState(8145);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1392,_ctx) ) {
				case 1:
					{
					setState(8141);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(8138);
						arithmetic_separator();
						}
						}
						setState(8143);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(8144);
					reference_modification();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArgumentsContext extends ParserRuleContext {
		public SubscriptingContext subscripting() {
			return getRuleContext(SubscriptingContext.class,0);
		}
		public ArgumentsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arguments; }
	}

	public final ArgumentsContext arguments() throws RecognitionException {
		ArgumentsContext _localctx = new ArgumentsContext(_ctx, getState());
		enterRule(_localctx, 634, RULE_arguments);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8149);
			subscripting();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SubscriptingContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public List<TerminalNode> ALL() { return getTokens(cobolParser.ALL); }
		public TerminalNode ALL(int i) {
			return getToken(cobolParser.ALL, i);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public SubscriptingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_subscripting; }
	}

	public final SubscriptingContext subscripting() throws RecognitionException {
		SubscriptingContext _localctx = new SubscriptingContext(_ctx, getState());
		enterRule(_localctx, 636, RULE_subscripting);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(8151);
			match(LPAREN_);
			setState(8155);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(8152);
				arithmetic_separator();
				}
				}
				setState(8157);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(8160);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1395,_ctx) ) {
			case 1:
				{
				setState(8158);
				arithmetic_expression(0);
				}
				break;
			case 2:
				{
				setState(8159);
				match(ALL);
				}
				break;
			}
			setState(8174);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1398,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(8165);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (COMMA_ - 410)) | (1L << (SEMI_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
						{
						{
						setState(8162);
						separator();
						}
						}
						setState(8167);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(8170);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1397,_ctx) ) {
					case 1:
						{
						setState(8168);
						arithmetic_expression(0);
						}
						break;
					case 2:
						{
						setState(8169);
						match(ALL);
						}
						break;
					}
					}
					} 
				}
				setState(8176);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1398,_ctx);
			}
			setState(8180);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(8177);
				arithmetic_separator();
				}
				}
				setState(8182);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(8183);
			match(RPAREN_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Reference_modificationContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public Leftmost_character_positionContext leftmost_character_position() {
			return getRuleContext(Leftmost_character_positionContext.class,0);
		}
		public TerminalNode COLON_() { return getToken(cobolParser.COLON_, 0); }
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public LengthContext length() {
			return getRuleContext(LengthContext.class,0);
		}
		public Reference_modificationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_reference_modification; }
	}

	public final Reference_modificationContext reference_modification() throws RecognitionException {
		Reference_modificationContext _localctx = new Reference_modificationContext(_ctx, getState());
		enterRule(_localctx, 638, RULE_reference_modification);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8185);
			match(LPAREN_);
			setState(8189);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(8186);
				arithmetic_separator();
				}
				}
				setState(8191);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(8192);
			leftmost_character_position();
			setState(8196);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(8193);
				arithmetic_separator();
				}
				}
				setState(8198);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(8199);
			match(COLON_);
			setState(8207);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1403,_ctx) ) {
			case 1:
				{
				setState(8203);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
					{
					{
					setState(8200);
					arithmetic_separator();
					}
					}
					setState(8205);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(8206);
				length();
				}
				break;
			}
			setState(8212);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 410)) & ~0x3f) == 0 && ((1L << (_la - 410)) & ((1L << (START_SLASH_ - 410)) | (1L << (START_STAR_ - 410)) | (1L << (START_FOUR_SPACES - 410)) | (1L << (WHITESPACE - 410)) | (1L << (NEWLINE - 410)))) != 0)) {
				{
				{
				setState(8209);
				arithmetic_separator();
				}
				}
				setState(8214);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(8215);
			match(RPAREN_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Leftmost_character_positionContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public Leftmost_character_positionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_leftmost_character_position; }
	}

	public final Leftmost_character_positionContext leftmost_character_position() throws RecognitionException {
		Leftmost_character_positionContext _localctx = new Leftmost_character_positionContext(_ctx, getState());
		enterRule(_localctx, 640, RULE_leftmost_character_position);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8217);
			arithmetic_expression(0);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class LengthContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public LengthContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_length; }
	}

	public final LengthContext length() throws RecognitionException {
		LengthContext _localctx = new LengthContext(_ctx, getState());
		enterRule(_localctx, 642, RULE_length);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8219);
			arithmetic_expression(0);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Function_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Function_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_function_name; }
	}

	public final Function_nameContext function_name() throws RecognitionException {
		Function_nameContext _localctx = new Function_nameContext(_ctx, getState());
		enterRule(_localctx, 644, RULE_function_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8221);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 302:
			return arithmetic_expression_sempred((Arithmetic_expressionContext)_localctx, predIndex);
		case 306:
			return logic_expression_sempred((Logic_expressionContext)_localctx, predIndex);
		case 308:
			return logic_condition_sempred((Logic_conditionContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean arithmetic_expression_sempred(Arithmetic_expressionContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0:
			return precpred(_ctx, 4);
		}
		return true;
	}
	private boolean logic_expression_sempred(Logic_expressionContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1:
			return precpred(_ctx, 6);
		}
		return true;
	}
	private boolean logic_condition_sempred(Logic_conditionContext _localctx, int predIndex) {
		switch (predIndex) {
		case 2:
			return precpred(_ctx, 1);
		}
		return true;
	}

	private static final int _serializedATNSegments = 4;
	private static final String _serializedATNSegment0 =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\3\u01bb\u2022\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4"+
		"`\t`\4a\ta\4b\tb\4c\tc\4d\td\4e\te\4f\tf\4g\tg\4h\th\4i\ti\4j\tj\4k\t"+
		"k\4l\tl\4m\tm\4n\tn\4o\to\4p\tp\4q\tq\4r\tr\4s\ts\4t\tt\4u\tu\4v\tv\4"+
		"w\tw\4x\tx\4y\ty\4z\tz\4{\t{\4|\t|\4}\t}\4~\t~\4\177\t\177\4\u0080\t\u0080"+
		"\4\u0081\t\u0081\4\u0082\t\u0082\4\u0083\t\u0083\4\u0084\t\u0084\4\u0085"+
		"\t\u0085\4\u0086\t\u0086\4\u0087\t\u0087\4\u0088\t\u0088\4\u0089\t\u0089"+
		"\4\u008a\t\u008a\4\u008b\t\u008b\4\u008c\t\u008c\4\u008d\t\u008d\4\u008e"+
		"\t\u008e\4\u008f\t\u008f\4\u0090\t\u0090\4\u0091\t\u0091\4\u0092\t\u0092"+
		"\4\u0093\t\u0093\4\u0094\t\u0094\4\u0095\t\u0095\4\u0096\t\u0096\4\u0097"+
		"\t\u0097\4\u0098\t\u0098\4\u0099\t\u0099\4\u009a\t\u009a\4\u009b\t\u009b"+
		"\4\u009c\t\u009c\4\u009d\t\u009d\4\u009e\t\u009e\4\u009f\t\u009f\4\u00a0"+
		"\t\u00a0\4\u00a1\t\u00a1\4\u00a2\t\u00a2\4\u00a3\t\u00a3\4\u00a4\t\u00a4"+
		"\4\u00a5\t\u00a5\4\u00a6\t\u00a6\4\u00a7\t\u00a7\4\u00a8\t\u00a8\4\u00a9"+
		"\t\u00a9\4\u00aa\t\u00aa\4\u00ab\t\u00ab\4\u00ac\t\u00ac\4\u00ad\t\u00ad"+
		"\4\u00ae\t\u00ae\4\u00af\t\u00af\4\u00b0\t\u00b0\4\u00b1\t\u00b1\4\u00b2"+
		"\t\u00b2\4\u00b3\t\u00b3\4\u00b4\t\u00b4\4\u00b5\t\u00b5\4\u00b6\t\u00b6"+
		"\4\u00b7\t\u00b7\4\u00b8\t\u00b8\4\u00b9\t\u00b9\4\u00ba\t\u00ba\4\u00bb"+
		"\t\u00bb\4\u00bc\t\u00bc\4\u00bd\t\u00bd\4\u00be\t\u00be\4\u00bf\t\u00bf"+
		"\4\u00c0\t\u00c0\4\u00c1\t\u00c1\4\u00c2\t\u00c2\4\u00c3\t\u00c3\4\u00c4"+
		"\t\u00c4\4\u00c5\t\u00c5\4\u00c6\t\u00c6\4\u00c7\t\u00c7\4\u00c8\t\u00c8"+
		"\4\u00c9\t\u00c9\4\u00ca\t\u00ca\4\u00cb\t\u00cb\4\u00cc\t\u00cc\4\u00cd"+
		"\t\u00cd\4\u00ce\t\u00ce\4\u00cf\t\u00cf\4\u00d0\t\u00d0\4\u00d1\t\u00d1"+
		"\4\u00d2\t\u00d2\4\u00d3\t\u00d3\4\u00d4\t\u00d4\4\u00d5\t\u00d5\4\u00d6"+
		"\t\u00d6\4\u00d7\t\u00d7\4\u00d8\t\u00d8\4\u00d9\t\u00d9\4\u00da\t\u00da"+
		"\4\u00db\t\u00db\4\u00dc\t\u00dc\4\u00dd\t\u00dd\4\u00de\t\u00de\4\u00df"+
		"\t\u00df\4\u00e0\t\u00e0\4\u00e1\t\u00e1\4\u00e2\t\u00e2\4\u00e3\t\u00e3"+
		"\4\u00e4\t\u00e4\4\u00e5\t\u00e5\4\u00e6\t\u00e6\4\u00e7\t\u00e7\4\u00e8"+
		"\t\u00e8\4\u00e9\t\u00e9\4\u00ea\t\u00ea\4\u00eb\t\u00eb\4\u00ec\t\u00ec"+
		"\4\u00ed\t\u00ed\4\u00ee\t\u00ee\4\u00ef\t\u00ef\4\u00f0\t\u00f0\4\u00f1"+
		"\t\u00f1\4\u00f2\t\u00f2\4\u00f3\t\u00f3\4\u00f4\t\u00f4\4\u00f5\t\u00f5"+
		"\4\u00f6\t\u00f6\4\u00f7\t\u00f7\4\u00f8\t\u00f8\4\u00f9\t\u00f9\4\u00fa"+
		"\t\u00fa\4\u00fb\t\u00fb\4\u00fc\t\u00fc\4\u00fd\t\u00fd\4\u00fe\t\u00fe"+
		"\4\u00ff\t\u00ff\4\u0100\t\u0100\4\u0101\t\u0101\4\u0102\t\u0102\4\u0103"+
		"\t\u0103\4\u0104\t\u0104\4\u0105\t\u0105\4\u0106\t\u0106\4\u0107\t\u0107"+
		"\4\u0108\t\u0108\4\u0109\t\u0109\4\u010a\t\u010a\4\u010b\t\u010b\4\u010c"+
		"\t\u010c\4\u010d\t\u010d\4\u010e\t\u010e\4\u010f\t\u010f\4\u0110\t\u0110"+
		"\4\u0111\t\u0111\4\u0112\t\u0112\4\u0113\t\u0113\4\u0114\t\u0114\4\u0115"+
		"\t\u0115\4\u0116\t\u0116\4\u0117\t\u0117\4\u0118\t\u0118\4\u0119\t\u0119"+
		"\4\u011a\t\u011a\4\u011b\t\u011b\4\u011c\t\u011c\4\u011d\t\u011d\4\u011e"+
		"\t\u011e\4\u011f\t\u011f\4\u0120\t\u0120\4\u0121\t\u0121\4\u0122\t\u0122"+
		"\4\u0123\t\u0123\4\u0124\t\u0124\4\u0125\t\u0125\4\u0126\t\u0126\4\u0127"+
		"\t\u0127\4\u0128\t\u0128\4\u0129\t\u0129\4\u012a\t\u012a\4\u012b\t\u012b"+
		"\4\u012c\t\u012c\4\u012d\t\u012d\4\u012e\t\u012e\4\u012f\t\u012f\4\u0130"+
		"\t\u0130\4\u0131\t\u0131\4\u0132\t\u0132\4\u0133\t\u0133\4\u0134\t\u0134"+
		"\4\u0135\t\u0135\4\u0136\t\u0136\4\u0137\t\u0137\4\u0138\t\u0138\4\u0139"+
		"\t\u0139\4\u013a\t\u013a\4\u013b\t\u013b\4\u013c\t\u013c\4\u013d\t\u013d"+
		"\4\u013e\t\u013e\4\u013f\t\u013f\4\u0140\t\u0140\4\u0141\t\u0141\4\u0142"+
		"\t\u0142\4\u0143\t\u0143\4\u0144\t\u0144\3\2\3\2\7\2\u028b\n\2\f\2\16"+
		"\2\u028e\13\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\5\3"+
		"\u029d\n\3\3\4\3\4\5\4\u02a1\n\4\3\5\3\5\3\5\3\5\3\5\3\5\5\5\u02a9\n\5"+
		"\3\6\3\6\3\6\3\6\5\6\u02af\n\6\3\7\3\7\7\7\u02b3\n\7\f\7\16\7\u02b6\13"+
		"\7\3\7\3\7\3\7\7\7\u02bb\n\7\f\7\16\7\u02be\13\7\3\7\5\7\u02c1\n\7\3\b"+
		"\3\b\5\b\u02c5\n\b\3\b\5\b\u02c8\n\b\3\b\5\b\u02cb\n\b\3\t\3\t\5\t\u02cf"+
		"\n\t\3\t\3\t\7\t\u02d3\n\t\f\t\16\t\u02d6\13\t\7\t\u02d8\n\t\f\t\16\t"+
		"\u02db\13\t\3\t\3\t\7\t\u02df\n\t\f\t\16\t\u02e2\13\t\7\t\u02e4\n\t\f"+
		"\t\16\t\u02e7\13\t\5\t\u02e9\n\t\3\t\7\t\u02ec\n\t\f\t\16\t\u02ef\13\t"+
		"\3\t\5\t\u02f2\n\t\3\t\7\t\u02f5\n\t\f\t\16\t\u02f8\13\t\3\t\3\t\7\t\u02fc"+
		"\n\t\f\t\16\t\u02ff\13\t\7\t\u0301\n\t\f\t\16\t\u0304\13\t\3\n\3\n\6\n"+
		"\u0308\n\n\r\n\16\n\u0309\3\n\3\n\6\n\u030e\n\n\r\n\16\n\u030f\3\n\3\n"+
		"\5\n\u0314\n\n\3\n\7\n\u0317\n\n\f\n\16\n\u031a\13\n\3\n\3\n\7\n\u031e"+
		"\n\n\f\n\16\n\u0321\13\n\3\13\3\13\6\13\u0325\n\13\r\13\16\13\u0326\3"+
		"\13\3\13\6\13\u032b\n\13\r\13\16\13\u032c\3\13\3\13\5\13\u0331\n\13\3"+
		"\13\6\13\u0334\n\13\r\13\16\13\u0335\3\13\3\13\5\13\u033a\n\13\3\13\7"+
		"\13\u033d\n\13\f\13\16\13\u0340\13\13\3\13\3\13\7\13\u0344\n\13\f\13\16"+
		"\13\u0347\13\13\3\f\3\f\3\r\3\r\7\r\u034d\n\r\f\r\16\r\u0350\13\r\3\r"+
		"\3\r\7\r\u0354\n\r\f\r\16\r\u0357\13\r\3\r\3\r\7\r\u035b\n\r\f\r\16\r"+
		"\u035e\13\r\6\r\u0360\n\r\r\r\16\r\u0361\3\r\3\r\6\r\u0366\n\r\r\r\16"+
		"\r\u0367\3\r\3\r\7\r\u036c\n\r\f\r\16\r\u036f\13\r\3\r\3\r\7\r\u0373\n"+
		"\r\f\r\16\r\u0376\13\r\3\16\3\16\3\16\6\16\u037b\n\16\r\16\16\16\u037c"+
		"\3\16\3\16\7\16\u0381\n\16\f\16\16\16\u0384\13\16\3\17\3\17\3\20\3\20"+
		"\7\20\u038a\n\20\f\20\16\20\u038d\13\20\3\20\3\20\7\20\u0391\n\20\f\20"+
		"\16\20\u0394\13\20\3\20\3\20\7\20\u0398\n\20\f\20\16\20\u039b\13\20\7"+
		"\20\u039d\n\20\f\20\16\20\u03a0\13\20\3\21\3\21\7\21\u03a4\n\21\f\21\16"+
		"\21\u03a7\13\21\6\21\u03a9\n\21\r\21\16\21\u03aa\3\21\7\21\u03ae\n\21"+
		"\f\21\16\21\u03b1\13\21\3\21\3\21\7\21\u03b5\n\21\f\21\16\21\u03b8\13"+
		"\21\5\21\u03ba\n\21\3\22\3\22\6\22\u03be\n\22\r\22\16\22\u03bf\3\22\3"+
		"\22\5\22\u03c4\n\22\3\22\6\22\u03c7\n\22\r\22\16\22\u03c8\3\22\3\22\6"+
		"\22\u03cd\n\22\r\22\16\22\u03ce\3\22\3\22\5\22\u03d3\n\22\3\22\6\22\u03d6"+
		"\n\22\r\22\16\22\u03d7\3\22\3\22\6\22\u03dc\n\22\r\22\16\22\u03dd\3\22"+
		"\3\22\6\22\u03e2\n\22\r\22\16\22\u03e3\3\22\3\22\5\22\u03e8\n\22\3\22"+
		"\6\22\u03eb\n\22\r\22\16\22\u03ec\3\22\3\22\7\22\u03f1\n\22\f\22\16\22"+
		"\u03f4\13\22\3\22\3\22\7\22\u03f8\n\22\f\22\16\22\u03fb\13\22\3\22\3\22"+
		"\6\22\u03ff\n\22\r\22\16\22\u0400\3\22\3\22\6\22\u0405\n\22\r\22\16\22"+
		"\u0406\3\22\3\22\5\22\u040b\n\22\3\22\7\22\u040e\n\22\f\22\16\22\u0411"+
		"\13\22\3\22\3\22\7\22\u0415\n\22\f\22\16\22\u0418\13\22\3\23\3\23\3\24"+
		"\3\24\6\24\u041e\n\24\r\24\16\24\u041f\3\24\3\24\7\24\u0424\n\24\f\24"+
		"\16\24\u0427\13\24\3\24\3\24\3\24\3\24\5\24\u042d\n\24\3\25\3\25\6\25"+
		"\u0431\n\25\r\25\16\25\u0432\3\25\3\25\6\25\u0437\n\25\r\25\16\25\u0438"+
		"\3\25\3\25\5\25\u043d\n\25\3\25\7\25\u0440\n\25\f\25\16\25\u0443\13\25"+
		"\3\25\3\25\7\25\u0447\n\25\f\25\16\25\u044a\13\25\3\26\3\26\3\27\3\27"+
		"\3\30\3\30\6\30\u0452\n\30\r\30\16\30\u0453\3\30\3\30\6\30\u0458\n\30"+
		"\r\30\16\30\u0459\3\30\3\30\7\30\u045e\n\30\f\30\16\30\u0461\13\30\3\31"+
		"\3\31\6\31\u0465\n\31\r\31\16\31\u0466\3\31\3\31\3\32\3\32\7\32\u046d"+
		"\n\32\f\32\16\32\u0470\13\32\3\32\3\32\3\32\3\32\7\32\u0476\n\32\f\32"+
		"\16\32\u0479\13\32\3\32\3\32\3\32\5\32\u047e\n\32\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33"+
		"\3\33\5\33\u0493\n\33\3\34\3\34\6\34\u0497\n\34\r\34\16\34\u0498\3\34"+
		"\3\34\6\34\u049d\n\34\r\34\16\34\u049e\3\34\6\34\u04a2\n\34\r\34\16\34"+
		"\u04a3\3\34\3\34\7\34\u04a8\n\34\f\34\16\34\u04ab\13\34\3\35\3\35\6\35"+
		"\u04af\n\35\r\35\16\35\u04b0\3\35\3\35\6\35\u04b5\n\35\r\35\16\35\u04b6"+
		"\3\35\3\35\6\35\u04bb\n\35\r\35\16\35\u04bc\5\35\u04bf\n\35\3\35\3\35"+
		"\6\35\u04c3\n\35\r\35\16\35\u04c4\3\35\3\35\6\35\u04c9\n\35\r\35\16\35"+
		"\u04ca\3\36\3\36\5\36\u04cf\n\36\3\37\3\37\3 \3 \6 \u04d5\n \r \16 \u04d6"+
		"\3 \3 \6 \u04db\n \r \16 \u04dc\5 \u04df\n \3 \3 \6 \u04e3\n \r \16 \u04e4"+
		"\3 \3 \6 \u04e9\n \r \16 \u04ea\3 \3 \3!\3!\6!\u04f1\n!\r!\16!\u04f2\3"+
		"!\3!\6!\u04f7\n!\r!\16!\u04f8\3!\3!\5!\u04fd\n!\3!\6!\u0500\n!\r!\16!"+
		"\u0501\3!\3!\3!\6!\u0507\n!\r!\16!\u0508\3!\3!\5!\u050d\n!\3!\6!\u0510"+
		"\n!\r!\16!\u0511\3!\3!\6!\u0516\n!\r!\16!\u0517\3!\3!\3!\6!\u051d\n!\r"+
		"!\16!\u051e\3!\3!\5!\u0523\n!\5!\u0525\n!\3!\6!\u0528\n!\r!\16!\u0529"+
		"\3!\3!\5!\u052e\n!\3\"\3\"\6\"\u0532\n\"\r\"\16\"\u0533\3\"\3\"\3#\3#"+
		"\3$\3$\3%\3%\6%\u053e\n%\r%\16%\u053f\3%\3%\3&\3&\6&\u0546\n&\r&\16&\u0547"+
		"\3&\3&\5&\u054c\n&\3&\6&\u054f\n&\r&\16&\u0550\3&\3&\5&\u0555\n&\3&\3"+
		"&\6&\u0559\n&\r&\16&\u055a\3&\3&\5&\u055f\n&\3&\6&\u0562\n&\r&\16&\u0563"+
		"\3&\3&\6&\u0568\n&\r&\16&\u0569\3&\3&\6&\u056e\n&\r&\16&\u056f\3&\3&\3"+
		"&\6&\u0575\n&\r&\16&\u0576\3&\3&\5&\u057b\n&\3\'\3\'\3(\3(\6(\u0581\n"+
		"(\r(\16(\u0582\3(\3(\6(\u0587\n(\r(\16(\u0588\3(\3(\5(\u058d\n(\3(\6("+
		"\u0590\n(\r(\16(\u0591\3(\3(\7(\u0596\n(\f(\16(\u0599\13(\3(\6(\u059c"+
		"\n(\r(\16(\u059d\3(\3(\6(\u05a2\n(\r(\16(\u05a3\3(\3(\6(\u05a8\n(\r(\16"+
		"(\u05a9\3(\3(\5(\u05ae\n(\3(\6(\u05b1\n(\r(\16(\u05b2\3(\3(\7(\u05b7\n"+
		"(\f(\16(\u05ba\13(\3(\6(\u05bd\n(\r(\16(\u05be\3(\3(\6(\u05c3\n(\r(\16"+
		"(\u05c4\3(\6(\u05c8\n(\r(\16(\u05c9\3(\3(\6(\u05ce\n(\r(\16(\u05cf\3("+
		"\3(\6(\u05d4\n(\r(\16(\u05d5\3(\3(\5(\u05da\n(\3(\6(\u05dd\n(\r(\16(\u05de"+
		"\3(\3(\5(\u05e3\n(\3)\3)\3)\6)\u05e8\n)\r)\16)\u05e9\5)\u05ec\n)\3)\3"+
		")\6)\u05f0\n)\r)\16)\u05f1\3)\3)\6)\u05f6\n)\r)\16)\u05f7\3)\3)\5)\u05fc"+
		"\n)\3)\3)\3)\5)\u0601\n)\3*\3*\3*\3*\5*\u0607\n*\3+\3+\5+\u060b\n+\3,"+
		"\3,\6,\u060f\n,\r,\16,\u0610\3,\3,\6,\u0615\n,\r,\16,\u0616\3,\3,\6,\u061b"+
		"\n,\r,\16,\u061c\3,\3,\6,\u0621\n,\r,\16,\u0622\3,\3,\5,\u0627\n,\3,\6"+
		",\u062a\n,\r,\16,\u062b\3,\3,\6,\u0630\n,\r,\16,\u0631\3,\3,\5,\u0636"+
		"\n,\6,\u0638\n,\r,\16,\u0639\3,\6,\u063d\n,\r,\16,\u063e\3,\3,\5,\u0643"+
		"\n,\3,\6,\u0646\n,\r,\16,\u0647\3,\3,\5,\u064c\n,\3-\3-\6-\u0650\n-\r"+
		"-\16-\u0651\3-\3-\6-\u0656\n-\r-\16-\u0657\3-\3-\6-\u065c\n-\r-\16-\u065d"+
		"\3-\3-\6-\u0662\n-\r-\16-\u0663\3-\3-\5-\u0668\n-\3-\6-\u066b\n-\r-\16"+
		"-\u066c\3-\3-\6-\u0671\n-\r-\16-\u0672\3-\3-\5-\u0677\n-\3-\6-\u067a\n"+
		"-\r-\16-\u067b\3-\3-\6-\u0680\n-\r-\16-\u0681\3-\3-\6-\u0686\n-\r-\16"+
		"-\u0687\3-\3-\5-\u068c\n-\3-\6-\u068f\n-\r-\16-\u0690\3-\3-\5-\u0695\n"+
		"-\3.\3.\3/\3/\5/\u069b\n/\3\60\3\60\3\60\3\60\5\60\u06a1\n\60\3\61\3\61"+
		"\6\61\u06a5\n\61\r\61\16\61\u06a6\3\61\3\61\6\61\u06ab\n\61\r\61\16\61"+
		"\u06ac\3\61\3\61\7\61\u06b1\n\61\f\61\16\61\u06b4\13\61\6\61\u06b6\n\61"+
		"\r\61\16\61\u06b7\3\61\6\61\u06bb\n\61\r\61\16\61\u06bc\3\61\3\61\5\61"+
		"\u06c1\n\61\3\62\3\62\6\62\u06c5\n\62\r\62\16\62\u06c6\3\62\3\62\6\62"+
		"\u06cb\n\62\r\62\16\62\u06cc\3\62\3\62\7\62\u06d1\n\62\f\62\16\62\u06d4"+
		"\13\62\6\62\u06d6\n\62\r\62\16\62\u06d7\3\62\6\62\u06db\n\62\r\62\16\62"+
		"\u06dc\3\62\3\62\5\62\u06e1\n\62\3\63\3\63\6\63\u06e5\n\63\r\63\16\63"+
		"\u06e6\3\63\3\63\6\63\u06eb\n\63\r\63\16\63\u06ec\3\63\3\63\6\63\u06f1"+
		"\n\63\r\63\16\63\u06f2\5\63\u06f5\n\63\3\63\3\63\6\63\u06f9\n\63\r\63"+
		"\16\63\u06fa\3\63\3\63\5\63\u06ff\n\63\3\63\5\63\u0702\n\63\5\63\u0704"+
		"\n\63\3\63\6\63\u0707\n\63\r\63\16\63\u0708\3\63\3\63\5\63\u070d\n\63"+
		"\3\64\3\64\6\64\u0711\n\64\r\64\16\64\u0712\3\64\3\64\6\64\u0717\n\64"+
		"\r\64\16\64\u0718\3\64\3\64\6\64\u071d\n\64\r\64\16\64\u071e\3\64\3\64"+
		"\6\64\u0723\n\64\r\64\16\64\u0724\3\64\3\64\5\64\u0729\n\64\3\64\6\64"+
		"\u072c\n\64\r\64\16\64\u072d\3\64\3\64\5\64\u0732\n\64\3\65\3\65\5\65"+
		"\u0736\n\65\3\66\3\66\3\67\3\67\6\67\u073c\n\67\r\67\16\67\u073d\3\67"+
		"\3\67\3\67\6\67\u0743\n\67\r\67\16\67\u0744\3\67\3\67\5\67\u0749\n\67"+
		"\38\38\68\u074d\n8\r8\168\u074e\38\38\38\68\u0754\n8\r8\168\u0755\38\3"+
		"8\58\u075a\n8\39\39\69\u075e\n9\r9\169\u075f\59\u0762\n9\39\39\39\69\u0767"+
		"\n9\r9\169\u0768\39\39\39\39\69\u076f\n9\r9\169\u0770\59\u0773\n9\39\3"+
		"9\69\u0777\n9\r9\169\u0778\39\39\59\u077d\n9\59\u077f\n9\3:\3:\3:\3:\3"+
		":\6:\u0786\n:\r:\16:\u0787\3:\3:\6:\u078c\n:\r:\16:\u078d\5:\u0790\n:"+
		"\3:\3:\6:\u0794\n:\r:\16:\u0795\3:\3:\5:\u079a\n:\5:\u079c\n:\3:\6:\u079f"+
		"\n:\r:\16:\u07a0\3:\3:\3:\3:\6:\u07a7\n:\r:\16:\u07a8\5:\u07ab\n:\3:\3"+
		":\3:\3:\3:\6:\u07b2\n:\r:\16:\u07b3\5:\u07b6\n:\3:\3:\3:\3:\6:\u07bc\n"+
		":\r:\16:\u07bd\5:\u07c0\n:\3:\3:\3:\6:\u07c5\n:\r:\16:\u07c6\5:\u07c9"+
		"\n:\3:\3:\6:\u07cd\n:\r:\16:\u07ce\3:\3:\5:\u07d3\n:\5:\u07d5\n:\3;\3"+
		";\6;\u07d9\n;\r;\16;\u07da\5;\u07dd\n;\3;\3;\6;\u07e1\n;\r;\16;\u07e2"+
		"\3;\3;\5;\u07e7\n;\3;\6;\u07ea\n;\r;\16;\u07eb\3;\3;\3<\3<\6<\u07f2\n"+
		"<\r<\16<\u07f3\5<\u07f6\n<\3<\3<\6<\u07fa\n<\r<\16<\u07fb\3<\3<\5<\u0800"+
		"\n<\3<\6<\u0803\n<\r<\16<\u0804\3<\3<\3=\3=\3>\3>\6>\u080d\n>\r>\16>\u080e"+
		"\3>\3>\6>\u0813\n>\r>\16>\u0814\3>\3>\5>\u0819\n>\3>\6>\u081c\n>\r>\16"+
		">\u081d\3>\3>\5>\u0822\n>\3>\6>\u0825\n>\r>\16>\u0826\3>\3>\5>\u082b\n"+
		">\3?\3?\3@\3@\6@\u0831\n@\r@\16@\u0832\3@\3@\6@\u0837\n@\r@\16@\u0838"+
		"\3@\3@\5@\u083d\n@\6@\u083f\n@\r@\16@\u0840\3@\6@\u0844\n@\r@\16@\u0845"+
		"\3@\3@\6@\u084a\n@\r@\16@\u084b\3@\7@\u084f\n@\f@\16@\u0852\13@\3@\3@"+
		"\7@\u0856\n@\f@\16@\u0859\13@\5@\u085b\n@\3@\3@\6@\u085f\n@\r@\16@\u0860"+
		"\3@\3@\5@\u0865\n@\3@\6@\u0868\n@\r@\16@\u0869\3@\3@\5@\u086e\n@\3A\3"+
		"A\6A\u0872\nA\rA\16A\u0873\3A\3A\6A\u0878\nA\rA\16A\u0879\3A\3A\5A\u087e"+
		"\nA\6A\u0880\nA\rA\16A\u0881\3B\3B\6B\u0886\nB\rB\16B\u0887\3B\3B\6B\u088c"+
		"\nB\rB\16B\u088d\5B\u0890\nB\3B\3B\3B\6B\u0895\nB\rB\16B\u0896\5B\u0899"+
		"\nB\3B\3B\6B\u089d\nB\rB\16B\u089e\3B\3B\5B\u08a3\nB\5B\u08a5\nB\3B\3"+
		"B\6B\u08a9\nB\rB\16B\u08aa\5B\u08ad\nB\3B\3B\6B\u08b1\nB\rB\16B\u08b2"+
		"\3B\3B\3B\5B\u08b8\nB\5B\u08ba\nB\3C\3C\6C\u08be\nC\rC\16C\u08bf\3C\3"+
		"C\6C\u08c4\nC\rC\16C\u08c5\3D\3D\6D\u08ca\nD\rD\16D\u08cb\3D\3D\6D\u08d0"+
		"\nD\rD\16D\u08d1\3D\3D\5D\u08d6\nD\3D\6D\u08d9\nD\rD\16D\u08da\3D\3D\5"+
		"D\u08df\nD\3D\6D\u08e2\nD\rD\16D\u08e3\3D\3D\5D\u08e8\nD\3D\6D\u08eb\n"+
		"D\rD\16D\u08ec\3D\3D\5D\u08f1\nD\3E\3E\6E\u08f5\nE\rE\16E\u08f6\3E\3E"+
		"\3F\3F\6F\u08fd\nF\rF\16F\u08fe\3F\3F\6F\u0903\nF\rF\16F\u0904\3G\3G\3"+
		"G\6G\u090a\nG\rG\16G\u090b\5G\u090e\nG\3G\3G\6G\u0912\nG\rG\16G\u0913"+
		"\3G\3G\7G\u0918\nG\fG\16G\u091b\13G\5G\u091d\nG\3H\3H\6H\u0921\nH\rH\16"+
		"H\u0922\5H\u0925\nH\3H\3H\3H\6H\u092a\nH\rH\16H\u092b\5H\u092e\nH\3H\3"+
		"H\3H\6H\u0933\nH\rH\16H\u0934\5H\u0937\nH\3H\3H\3H\6H\u093c\nH\rH\16H"+
		"\u093d\5H\u0940\nH\3H\5H\u0943\nH\3I\3I\3I\5I\u0948\nI\3J\3J\3K\3K\6K"+
		"\u094e\nK\rK\16K\u094f\3K\3K\6K\u0954\nK\rK\16K\u0955\3K\3K\6K\u095a\n"+
		"K\rK\16K\u095b\3K\3K\6K\u0960\nK\rK\16K\u0961\3K\3K\6K\u0966\nK\rK\16"+
		"K\u0967\5K\u096a\nK\3K\3K\6K\u096e\nK\rK\16K\u096f\3L\3L\3M\3M\3N\3N\6"+
		"N\u0978\nN\rN\16N\u0979\3N\3N\6N\u097e\nN\rN\16N\u097f\3N\6N\u0983\nN"+
		"\rN\16N\u0984\3N\3N\6N\u0989\nN\rN\16N\u098a\3N\3N\6N\u098f\nN\rN\16N"+
		"\u0990\3N\3N\5N\u0995\nN\6N\u0997\nN\rN\16N\u0998\3N\3N\6N\u099d\nN\r"+
		"N\16N\u099e\3N\3N\7N\u09a3\nN\fN\16N\u09a6\13N\3N\6N\u09a9\nN\rN\16N\u09aa"+
		"\3N\3N\5N\u09af\nN\3N\6N\u09b2\nN\rN\16N\u09b3\3N\3N\6N\u09b8\nN\rN\16"+
		"N\u09b9\3N\6N\u09bd\nN\rN\16N\u09be\3N\3N\6N\u09c3\nN\rN\16N\u09c4\3N"+
		"\3N\6N\u09c9\nN\rN\16N\u09ca\3N\3N\5N\u09cf\nN\6N\u09d1\nN\rN\16N\u09d2"+
		"\3N\3N\6N\u09d7\nN\rN\16N\u09d8\3N\3N\6N\u09dd\nN\rN\16N\u09de\3N\3N\6"+
		"N\u09e3\nN\rN\16N\u09e4\3N\3N\6N\u09e9\nN\rN\16N\u09ea\3N\3N\6N\u09ef"+
		"\nN\rN\16N\u09f0\3N\3N\5N\u09f5\nN\5N\u09f7\nN\3N\6N\u09fa\nN\rN\16N\u09fb"+
		"\3N\3N\5N\u0a00\nN\3N\6N\u0a03\nN\rN\16N\u0a04\3N\3N\5N\u0a09\nN\3O\3"+
		"O\3P\3P\5P\u0a0f\nP\3Q\3Q\3Q\3Q\3Q\3Q\5Q\u0a17\nQ\3R\3R\6R\u0a1b\nR\r"+
		"R\16R\u0a1c\3R\3R\6R\u0a21\nR\rR\16R\u0a22\3R\3R\5R\u0a27\nR\3R\3R\6R"+
		"\u0a2b\nR\rR\16R\u0a2c\3R\3R\6R\u0a31\nR\rR\16R\u0a32\3R\3R\5R\u0a37\n"+
		"R\5R\u0a39\nR\3S\3S\6S\u0a3d\nS\rS\16S\u0a3e\3S\3S\6S\u0a43\nS\rS\16S"+
		"\u0a44\3S\3S\5S\u0a49\nS\3S\3S\6S\u0a4d\nS\rS\16S\u0a4e\3S\3S\6S\u0a53"+
		"\nS\rS\16S\u0a54\3S\3S\5S\u0a59\nS\5S\u0a5b\nS\3T\3T\6T\u0a5f\nT\rT\16"+
		"T\u0a60\3T\3T\6T\u0a65\nT\rT\16T\u0a66\3T\3T\5T\u0a6b\nT\3T\3T\6T\u0a6f"+
		"\nT\rT\16T\u0a70\3T\3T\6T\u0a75\nT\rT\16T\u0a76\3T\3T\5T\u0a7b\nT\5T\u0a7d"+
		"\nT\3U\3U\6U\u0a81\nU\rU\16U\u0a82\3U\3U\6U\u0a87\nU\rU\16U\u0a88\3U\3"+
		"U\5U\u0a8d\nU\3U\3U\6U\u0a91\nU\rU\16U\u0a92\3U\3U\6U\u0a97\nU\rU\16U"+
		"\u0a98\3U\3U\5U\u0a9d\nU\5U\u0a9f\nU\3V\3V\6V\u0aa3\nV\rV\16V\u0aa4\3"+
		"V\3V\6V\u0aa9\nV\rV\16V\u0aaa\3V\3V\6V\u0aaf\nV\rV\16V\u0ab0\5V\u0ab3"+
		"\nV\3V\3V\6V\u0ab7\nV\rV\16V\u0ab8\3V\3V\5V\u0abd\nV\3V\6V\u0ac0\nV\r"+
		"V\16V\u0ac1\3V\3V\5V\u0ac6\nV\3W\3W\3X\3X\6X\u0acc\nX\rX\16X\u0acd\3X"+
		"\3X\6X\u0ad2\nX\rX\16X\u0ad3\3X\3X\6X\u0ad8\nX\rX\16X\u0ad9\3X\3X\5X\u0ade"+
		"\nX\3X\6X\u0ae1\nX\rX\16X\u0ae2\3X\3X\6X\u0ae7\nX\rX\16X\u0ae8\3X\3X\5"+
		"X\u0aed\nX\3X\6X\u0af0\nX\rX\16X\u0af1\3X\3X\5X\u0af6\nX\3X\6X\u0af9\n"+
		"X\rX\16X\u0afa\3X\3X\5X\u0aff\nX\3Y\3Y\6Y\u0b03\nY\rY\16Y\u0b04\3Y\3Y"+
		"\6Y\u0b09\nY\rY\16Y\u0b0a\3Y\3Y\6Y\u0b0f\nY\rY\16Y\u0b10\3Y\3Y\3Z\3Z\6"+
		"Z\u0b17\nZ\rZ\16Z\u0b18\3Z\3Z\6Z\u0b1d\nZ\rZ\16Z\u0b1e\3Z\3Z\6Z\u0b23"+
		"\nZ\rZ\16Z\u0b24\3Z\6Z\u0b28\nZ\rZ\16Z\u0b29\3Z\3Z\5Z\u0b2e\nZ\5Z\u0b30"+
		"\nZ\3Z\6Z\u0b33\nZ\rZ\16Z\u0b34\3Z\3Z\5Z\u0b39\nZ\3[\3[\6[\u0b3d\n[\r"+
		"[\16[\u0b3e\3[\3[\6[\u0b43\n[\r[\16[\u0b44\5[\u0b47\n[\3[\3[\6[\u0b4b"+
		"\n[\r[\16[\u0b4c\3[\3[\6[\u0b51\n[\r[\16[\u0b52\5[\u0b55\n[\3[\3[\6[\u0b59"+
		"\n[\r[\16[\u0b5a\3[\3[\6[\u0b5f\n[\r[\16[\u0b60\3[\6[\u0b64\n[\r[\16["+
		"\u0b65\3[\3[\5[\u0b6a\n[\5[\u0b6c\n[\3[\6[\u0b6f\n[\r[\16[\u0b70\3[\3"+
		"[\5[\u0b75\n[\3\\\3\\\6\\\u0b79\n\\\r\\\16\\\u0b7a\3\\\3\\\6\\\u0b7f\n"+
		"\\\r\\\16\\\u0b80\3\\\3\\\5\\\u0b85\n\\\3\\\6\\\u0b88\n\\\r\\\16\\\u0b89"+
		"\3\\\3\\\5\\\u0b8e\n\\\3\\\6\\\u0b91\n\\\r\\\16\\\u0b92\3\\\3\\\5\\\u0b97"+
		"\n\\\3]\3]\6]\u0b9b\n]\r]\16]\u0b9c\5]\u0b9f\n]\3]\3]\6]\u0ba3\n]\r]\16"+
		"]\u0ba4\3]\3]\5]\u0ba9\n]\3]\3]\6]\u0bad\n]\r]\16]\u0bae\3]\3]\5]\u0bb3"+
		"\n]\5]\u0bb5\n]\3^\3^\6^\u0bb9\n^\r^\16^\u0bba\3^\3^\6^\u0bbf\n^\r^\16"+
		"^\u0bc0\5^\u0bc3\n^\3^\3^\5^\u0bc7\n^\3_\3_\6_\u0bcb\n_\r_\16_\u0bcc\3"+
		"_\3_\6_\u0bd1\n_\r_\16_\u0bd2\5_\u0bd5\n_\3_\3_\5_\u0bd9\n_\3`\3`\6`\u0bdd"+
		"\n`\r`\16`\u0bde\5`\u0be1\n`\3`\3`\6`\u0be5\n`\r`\16`\u0be6\3`\3`\5`\u0beb"+
		"\n`\3`\6`\u0bee\n`\r`\16`\u0bef\3`\3`\3`\3`\6`\u0bf6\n`\r`\16`\u0bf7\5"+
		"`\u0bfa\n`\3`\3`\6`\u0bfe\n`\r`\16`\u0bff\3`\3`\5`\u0c04\n`\3`\6`\u0c07"+
		"\n`\r`\16`\u0c08\3`\3`\3`\3`\6`\u0c0f\n`\r`\16`\u0c10\3`\3`\6`\u0c15\n"+
		"`\r`\16`\u0c16\5`\u0c19\n`\3`\3`\6`\u0c1d\n`\r`\16`\u0c1e\3`\3`\5`\u0c23"+
		"\n`\5`\u0c25\n`\3`\6`\u0c28\n`\r`\16`\u0c29\3`\3`\3`\3`\6`\u0c30\n`\r"+
		"`\16`\u0c31\5`\u0c34\n`\3`\5`\u0c37\n`\3a\3a\3a\3a\3a\6a\u0c3e\na\ra\16"+
		"a\u0c3f\5a\u0c42\na\3a\3a\3a\6a\u0c47\na\ra\16a\u0c48\3a\3a\5a\u0c4d\n"+
		"a\3a\3a\6a\u0c51\na\ra\16a\u0c52\5a\u0c55\na\3a\3a\3a\3a\6a\u0c5b\na\r"+
		"a\16a\u0c5c\5a\u0c5f\na\3a\3a\6a\u0c63\na\ra\16a\u0c64\3a\3a\3a\3a\6a"+
		"\u0c6b\na\ra\16a\u0c6c\3a\3a\6a\u0c71\na\ra\16a\u0c72\5a\u0c75\na\3a\3"+
		"a\3a\3a\6a\u0c7b\na\ra\16a\u0c7c\5a\u0c7f\na\3a\3a\6a\u0c83\na\ra\16a"+
		"\u0c84\3a\3a\5a\u0c89\na\3a\6a\u0c8c\na\ra\16a\u0c8d\3a\3a\5a\u0c92\n"+
		"a\3b\3b\3c\3c\3c\3c\3c\6c\u0c9b\nc\rc\16c\u0c9c\3c\3c\5c\u0ca1\nc\5c\u0ca3"+
		"\nc\3d\3d\6d\u0ca7\nd\rd\16d\u0ca8\3d\3d\3d\3d\6d\u0caf\nd\rd\16d\u0cb0"+
		"\5d\u0cb3\nd\3d\3d\3d\6d\u0cb8\nd\rd\16d\u0cb9\5d\u0cbc\nd\3d\3d\6d\u0cc0"+
		"\nd\rd\16d\u0cc1\3d\3d\3d\3d\6d\u0cc8\nd\rd\16d\u0cc9\5d\u0ccc\nd\3d\3"+
		"d\3d\6d\u0cd1\nd\rd\16d\u0cd2\5d\u0cd5\nd\3d\3d\6d\u0cd9\nd\rd\16d\u0cda"+
		"\3d\3d\5d\u0cdf\nd\3e\3e\3f\3f\5f\u0ce5\nf\3g\3g\3g\6g\u0cea\ng\rg\16"+
		"g\u0ceb\3g\3g\6g\u0cf0\ng\rg\16g\u0cf1\3g\3g\5g\u0cf6\ng\5g\u0cf8\ng\3"+
		"g\3g\6g\u0cfc\ng\rg\16g\u0cfd\3g\3g\5g\u0d02\ng\5g\u0d04\ng\3h\3h\6h\u0d08"+
		"\nh\rh\16h\u0d09\3h\3h\5h\u0d0e\nh\3h\3h\6h\u0d12\nh\rh\16h\u0d13\3h\3"+
		"h\5h\u0d18\nh\3h\3h\5h\u0d1c\nh\3i\3i\3j\3j\3k\3k\6k\u0d24\nk\rk\16k\u0d25"+
		"\5k\u0d28\nk\3k\3k\6k\u0d2c\nk\rk\16k\u0d2d\3k\3k\5k\u0d32\nk\3l\3l\6"+
		"l\u0d36\nl\rl\16l\u0d37\5l\u0d3a\nl\3l\3l\6l\u0d3e\nl\rl\16l\u0d3f\3l"+
		"\3l\5l\u0d44\nl\3m\3m\6m\u0d48\nm\rm\16m\u0d49\5m\u0d4c\nm\3m\3m\6m\u0d50"+
		"\nm\rm\16m\u0d51\3m\3m\6m\u0d56\nm\rm\16m\u0d57\3m\3m\5m\u0d5c\nm\3n\3"+
		"n\6n\u0d60\nn\rn\16n\u0d61\3n\3n\5n\u0d66\nn\3n\6n\u0d69\nn\rn\16n\u0d6a"+
		"\3n\3n\5n\u0d6f\nn\3o\3o\6o\u0d73\no\ro\16o\u0d74\3o\3o\7o\u0d79\no\f"+
		"o\16o\u0d7c\13o\3o\3o\7o\u0d80\no\fo\16o\u0d83\13o\3o\3o\7o\u0d87\no\f"+
		"o\16o\u0d8a\13o\5o\u0d8c\no\3o\3o\7o\u0d90\no\fo\16o\u0d93\13o\5o\u0d95"+
		"\no\3o\3o\7o\u0d99\no\fo\16o\u0d9c\13o\5o\u0d9e\no\3o\3o\7o\u0da2\no\f"+
		"o\16o\u0da5\13o\5o\u0da7\no\3o\3o\7o\u0dab\no\fo\16o\u0dae\13o\5o\u0db0"+
		"\no\3p\3p\6p\u0db4\np\rp\16p\u0db5\3p\3p\7p\u0dba\np\fp\16p\u0dbd\13p"+
		"\3p\3p\7p\u0dc1\np\fp\16p\u0dc4\13p\3p\3p\7p\u0dc8\np\fp\16p\u0dcb\13"+
		"p\3p\7p\u0dce\np\fp\16p\u0dd1\13p\3p\3p\3p\7p\u0dd6\np\fp\16p\u0dd9\13"+
		"p\3p\7p\u0ddc\np\fp\16p\u0ddf\13p\5p\u0de1\np\3p\7p\u0de4\np\fp\16p\u0de7"+
		"\13p\7p\u0de9\np\fp\16p\u0dec\13p\3q\3q\6q\u0df0\nq\rq\16q\u0df1\3q\3"+
		"q\7q\u0df6\nq\fq\16q\u0df9\13q\3q\3q\7q\u0dfd\nq\fq\16q\u0e00\13q\3q\3"+
		"q\7q\u0e04\nq\fq\16q\u0e07\13q\7q\u0e09\nq\fq\16q\u0e0c\13q\3r\3r\6r\u0e10"+
		"\nr\rr\16r\u0e11\3r\3r\7r\u0e16\nr\fr\16r\u0e19\13r\3r\3r\7r\u0e1d\nr"+
		"\fr\16r\u0e20\13r\3r\3r\7r\u0e24\nr\fr\16r\u0e27\13r\7r\u0e29\nr\fr\16"+
		"r\u0e2c\13r\3s\3s\6s\u0e30\ns\rs\16s\u0e31\3s\3s\7s\u0e36\ns\fs\16s\u0e39"+
		"\13s\3s\3s\7s\u0e3d\ns\fs\16s\u0e40\13s\3s\3s\7s\u0e44\ns\fs\16s\u0e47"+
		"\13s\3s\7s\u0e4a\ns\fs\16s\u0e4d\13s\3s\7s\u0e50\ns\fs\16s\u0e53\13s\7"+
		"s\u0e55\ns\fs\16s\u0e58\13s\3t\3t\6t\u0e5c\nt\rt\16t\u0e5d\3t\3t\7t\u0e62"+
		"\nt\ft\16t\u0e65\13t\3t\3t\7t\u0e69\nt\ft\16t\u0e6c\13t\3t\3t\7t\u0e70"+
		"\nt\ft\16t\u0e73\13t\7t\u0e75\nt\ft\16t\u0e78\13t\3u\3u\6u\u0e7c\nu\r"+
		"u\16u\u0e7d\3u\3u\7u\u0e82\nu\fu\16u\u0e85\13u\3u\3u\7u\u0e89\nu\fu\16"+
		"u\u0e8c\13u\7u\u0e8e\nu\fu\16u\u0e91\13u\3u\3u\3v\3v\6v\u0e97\nv\rv\16"+
		"v\u0e98\3v\3v\7v\u0e9d\nv\fv\16v\u0ea0\13v\3v\3v\7v\u0ea4\nv\fv\16v\u0ea7"+
		"\13v\7v\u0ea9\nv\fv\16v\u0eac\13v\3v\3v\3w\3w\6w\u0eb2\nw\rw\16w\u0eb3"+
		"\3w\3w\7w\u0eb8\nw\fw\16w\u0ebb\13w\3w\3w\7w\u0ebf\nw\fw\16w\u0ec2\13"+
		"w\7w\u0ec4\nw\fw\16w\u0ec7\13w\3w\3w\3x\3x\6x\u0ecd\nx\rx\16x\u0ece\5"+
		"x\u0ed1\nx\3x\3x\3x\6x\u0ed6\nx\rx\16x\u0ed7\5x\u0eda\nx\3x\3x\3x\3x\3"+
		"x\3x\3x\3x\3x\3x\3x\3x\5x\u0ee8\nx\3y\3y\7y\u0eec\ny\fy\16y\u0eef\13y"+
		"\3y\7y\u0ef2\ny\fy\16y\u0ef5\13y\3z\3z\6z\u0ef9\nz\rz\16z\u0efa\3z\3z"+
		"\5z\u0eff\nz\5z\u0f01\nz\3z\6z\u0f04\nz\rz\16z\u0f05\3z\3z\6z\u0f0a\n"+
		"z\rz\16z\u0f0b\3z\3z\5z\u0f10\nz\3z\6z\u0f13\nz\rz\16z\u0f14\3z\3z\7z"+
		"\u0f19\nz\fz\16z\u0f1c\13z\3z\3z\3{\3{\3|\3|\6|\u0f24\n|\r|\16|\u0f25"+
		"\5|\u0f28\n|\3|\3|\3|\6|\u0f2d\n|\r|\16|\u0f2e\5|\u0f31\n|\3|\3|\3|\3"+
		"|\3|\3|\3|\6|\u0f3a\n|\r|\16|\u0f3b\3|\3|\5|\u0f40\n|\3|\3|\6|\u0f44\n"+
		"|\r|\16|\u0f45\3|\3|\5|\u0f4a\n|\3|\3|\6|\u0f4e\n|\r|\16|\u0f4f\3|\3|"+
		"\6|\u0f54\n|\r|\16|\u0f55\5|\u0f58\n|\3|\3|\3|\3|\5|\u0f5e\n|\3}\3}\6"+
		"}\u0f62\n}\r}\16}\u0f63\3}\3}\6}\u0f68\n}\r}\16}\u0f69\3}\3}\6}\u0f6e"+
		"\n}\r}\16}\u0f6f\3}\3}\5}\u0f74\n}\3~\3~\3\177\3\177\3\u0080\3\u0080\6"+
		"\u0080\u0f7c\n\u0080\r\u0080\16\u0080\u0f7d\3\u0080\3\u0080\5\u0080\u0f82"+
		"\n\u0080\3\u0080\3\u0080\6\u0080\u0f86\n\u0080\r\u0080\16\u0080\u0f87"+
		"\3\u0080\3\u0080\5\u0080\u0f8c\n\u0080\5\u0080\u0f8e\n\u0080\3\u0080\6"+
		"\u0080\u0f91\n\u0080\r\u0080\16\u0080\u0f92\3\u0080\3\u0080\6\u0080\u0f97"+
		"\n\u0080\r\u0080\16\u0080\u0f98\3\u0080\3\u0080\7\u0080\u0f9d\n\u0080"+
		"\f\u0080\16\u0080\u0fa0\13\u0080\3\u0081\3\u0081\6\u0081\u0fa4\n\u0081"+
		"\r\u0081\16\u0081\u0fa5\3\u0081\3\u0081\5\u0081\u0faa\n\u0081\3\u0082"+
		"\3\u0082\3\u0082\6\u0082\u0faf\n\u0082\r\u0082\16\u0082\u0fb0\3\u0082"+
		"\3\u0082\3\u0082\3\u0082\6\u0082\u0fb7\n\u0082\r\u0082\16\u0082\u0fb8"+
		"\3\u0082\3\u0082\5\u0082\u0fbd\n\u0082\3\u0083\3\u0083\6\u0083\u0fc1\n"+
		"\u0083\r\u0083\16\u0083\u0fc2\3\u0083\3\u0083\3\u0084\3\u0084\3\u0085"+
		"\3\u0085\3\u0086\3\u0086\3\u0087\3\u0087\6\u0087\u0fcf\n\u0087\r\u0087"+
		"\16\u0087\u0fd0\3\u0087\3\u0087\6\u0087\u0fd5\n\u0087\r\u0087\16\u0087"+
		"\u0fd6\3\u0087\3\u0087\7\u0087\u0fdb\n\u0087\f\u0087\16\u0087\u0fde\13"+
		"\u0087\3\u0087\6\u0087\u0fe1\n\u0087\r\u0087\16\u0087\u0fe2\3\u0087\3"+
		"\u0087\5\u0087\u0fe7\n\u0087\3\u0088\3\u0088\6\u0088\u0feb\n\u0088\r\u0088"+
		"\16\u0088\u0fec\3\u0088\3\u0088\6\u0088\u0ff1\n\u0088\r\u0088\16\u0088"+
		"\u0ff2\5\u0088\u0ff5\n\u0088\3\u0088\3\u0088\6\u0088\u0ff9\n\u0088\r\u0088"+
		"\16\u0088\u0ffa\3\u0088\3\u0088\7\u0088\u0fff\n\u0088\f\u0088\16\u0088"+
		"\u1002\13\u0088\3\u0089\3\u0089\3\u008a\3\u008a\6\u008a\u1008\n\u008a"+
		"\r\u008a\16\u008a\u1009\3\u008a\3\u008a\6\u008a\u100e\n\u008a\r\u008a"+
		"\16\u008a\u100f\5\u008a\u1012\n\u008a\3\u008a\3\u008a\6\u008a\u1016\n"+
		"\u008a\r\u008a\16\u008a\u1017\5\u008a\u101a\n\u008a\3\u008a\3\u008a\6"+
		"\u008a\u101e\n\u008a\r\u008a\16\u008a\u101f\3\u008a\3\u008a\7\u008a\u1024"+
		"\n\u008a\f\u008a\16\u008a\u1027\13\u008a\3\u008b\3\u008b\3\u008c\3\u008c"+
		"\6\u008c\u102d\n\u008c\r\u008c\16\u008c\u102e\3\u008c\3\u008c\3\u008c"+
		"\3\u008c\6\u008c\u1035\n\u008c\r\u008c\16\u008c\u1036\3\u008c\3\u008c"+
		"\6\u008c\u103b\n\u008c\r\u008c\16\u008c\u103c\3\u008c\3\u008c\6\u008c"+
		"\u1041\n\u008c\r\u008c\16\u008c\u1042\3\u008c\3\u008c\6\u008c\u1047\n"+
		"\u008c\r\u008c\16\u008c\u1048\3\u008c\3\u008c\6\u008c\u104d\n\u008c\r"+
		"\u008c\16\u008c\u104e\3\u008c\3\u008c\6\u008c\u1053\n\u008c\r\u008c\16"+
		"\u008c\u1054\5\u008c\u1057\n\u008c\3\u008c\3\u008c\5\u008c\u105b\n\u008c"+
		"\3\u008d\3\u008d\3\u008e\3\u008e\3\u008f\3\u008f\3\u0090\3\u0090\7\u0090"+
		"\u1065\n\u0090\f\u0090\16\u0090\u1068\13\u0090\3\u0090\7\u0090\u106b\n"+
		"\u0090\f\u0090\16\u0090\u106e\13\u0090\3\u0091\3\u0091\6\u0091\u1072\n"+
		"\u0091\r\u0091\16\u0091\u1073\3\u0091\3\u0091\5\u0091\u1078\n\u0091\3"+
		"\u0091\6\u0091\u107b\n\u0091\r\u0091\16\u0091\u107c\3\u0091\3\u0091\7"+
		"\u0091\u1081\n\u0091\f\u0091\16\u0091\u1084\13\u0091\3\u0091\3\u0091\3"+
		"\u0092\3\u0092\6\u0092\u108a\n\u0092\r\u0092\16\u0092\u108b\3\u0092\3"+
		"\u0092\6\u0092\u1090\n\u0092\r\u0092\16\u0092\u1091\5\u0092\u1094\n\u0092"+
		"\3\u0092\3\u0092\6\u0092\u1098\n\u0092\r\u0092\16\u0092\u1099\5\u0092"+
		"\u109c\n\u0092\3\u0092\3\u0092\3\u0092\3\u0092\6\u0092\u10a2\n\u0092\r"+
		"\u0092\16\u0092\u10a3\3\u0092\3\u0092\6\u0092\u10a8\n\u0092\r\u0092\16"+
		"\u0092\u10a9\3\u0092\3\u0092\6\u0092\u10ae\n\u0092\r\u0092\16\u0092\u10af"+
		"\5\u0092\u10b2\n\u0092\3\u0092\3\u0092\3\u0092\3\u0092\6\u0092\u10b8\n"+
		"\u0092\r\u0092\16\u0092\u10b9\3\u0092\3\u0092\6\u0092\u10be\n\u0092\r"+
		"\u0092\16\u0092\u10bf\5\u0092\u10c2\n\u0092\3\u0092\3\u0092\3\u0092\3"+
		"\u0092\6\u0092\u10c8\n\u0092\r\u0092\16\u0092\u10c9\3\u0092\3\u0092\6"+
		"\u0092\u10ce\n\u0092\r\u0092\16\u0092\u10cf\5\u0092\u10d2\n\u0092\5\u0092"+
		"\u10d4\n\u0092\3\u0092\3\u0092\3\u0092\6\u0092\u10d9\n\u0092\r\u0092\16"+
		"\u0092\u10da\3\u0092\3\u0092\6\u0092\u10df\n\u0092\r\u0092\16\u0092\u10e0"+
		"\5\u0092\u10e3\n\u0092\3\u0092\3\u0092\3\u0092\3\u0092\6\u0092\u10e9\n"+
		"\u0092\r\u0092\16\u0092\u10ea\3\u0092\3\u0092\6\u0092\u10ef\n\u0092\r"+
		"\u0092\16\u0092\u10f0\5\u0092\u10f3\n\u0092\3\u0092\3\u0092\6\u0092\u10f7"+
		"\n\u0092\r\u0092\16\u0092\u10f8\5\u0092\u10fb\n\u0092\3\u0092\3\u0092"+
		"\3\u0092\3\u0092\6\u0092\u1101\n\u0092\r\u0092\16\u0092\u1102\3\u0092"+
		"\3\u0092\5\u0092\u1107\n\u0092\3\u0092\3\u0092\6\u0092\u110b\n\u0092\r"+
		"\u0092\16\u0092\u110c\3\u0092\3\u0092\5\u0092\u1111\n\u0092\3\u0092\3"+
		"\u0092\3\u0092\3\u0092\6\u0092\u1117\n\u0092\r\u0092\16\u0092\u1118\3"+
		"\u0092\3\u0092\6\u0092\u111d\n\u0092\r\u0092\16\u0092\u111e\5\u0092\u1121"+
		"\n\u0092\3\u0092\3\u0092\3\u0092\3\u0092\6\u0092\u1127\n\u0092\r\u0092"+
		"\16\u0092\u1128\3\u0092\3\u0092\6\u0092\u112d\n\u0092\r\u0092\16\u0092"+
		"\u112e\5\u0092\u1131\n\u0092\3\u0092\3\u0092\3\u0092\5\u0092\u1136\n\u0092"+
		"\3\u0093\3\u0093\6\u0093\u113a\n\u0093\r\u0093\16\u0093\u113b\3\u0093"+
		"\3\u0093\5\u0093\u1140\n\u0093\3\u0093\6\u0093\u1143\n\u0093\r\u0093\16"+
		"\u0093\u1144\5\u0093\u1147\n\u0093\3\u0093\3\u0093\6\u0093\u114b\n\u0093"+
		"\r\u0093\16\u0093\u114c\3\u0093\3\u0093\6\u0093\u1151\n\u0093\r\u0093"+
		"\16\u0093\u1152\3\u0093\3\u0093\5\u0093\u1157\n\u0093\5\u0093\u1159\n"+
		"\u0093\3\u0094\3\u0094\6\u0094\u115d\n\u0094\r\u0094\16\u0094\u115e\3"+
		"\u0094\3\u0094\6\u0094\u1163\n\u0094\r\u0094\16\u0094\u1164\3\u0094\3"+
		"\u0094\7\u0094\u1169\n\u0094\f\u0094\16\u0094\u116c\13\u0094\3\u0094\6"+
		"\u0094\u116f\n\u0094\r\u0094\16\u0094\u1170\3\u0094\3\u0094\5\u0094\u1175"+
		"\n\u0094\3\u0094\6\u0094\u1178\n\u0094\r\u0094\16\u0094\u1179\3\u0094"+
		"\3\u0094\7\u0094\u117e\n\u0094\f\u0094\16\u0094\u1181\13\u0094\6\u0094"+
		"\u1183\n\u0094\r\u0094\16\u0094\u1184\3\u0094\7\u0094\u1188\n\u0094\f"+
		"\u0094\16\u0094\u118b\13\u0094\3\u0094\3\u0094\6\u0094\u118f\n\u0094\r"+
		"\u0094\16\u0094\u1190\3\u0094\3\u0094\6\u0094\u1195\n\u0094\r\u0094\16"+
		"\u0094\u1196\5\u0094\u1199\n\u0094\3\u0094\3\u0094\5\u0094\u119d\n\u0094"+
		"\3\u0095\3\u0095\3\u0096\3\u0096\3\u0097\3\u0097\3\u0098\3\u0098\3\u0099"+
		"\3\u0099\3\u009a\3\u009a\6\u009a\u11ab\n\u009a\r\u009a\16\u009a\u11ac"+
		"\3\u009a\3\u009a\3\u009a\3\u009a\3\u009a\6\u009a\u11b4\n\u009a\r\u009a"+
		"\16\u009a\u11b5\3\u009a\3\u009a\3\u009a\3\u009a\3\u009a\6\u009a\u11bd"+
		"\n\u009a\r\u009a\16\u009a\u11be\3\u009a\3\u009a\3\u009a\5\u009a\u11c4"+
		"\n\u009a\3\u009a\6\u009a\u11c7\n\u009a\r\u009a\16\u009a\u11c8\3\u009a"+
		"\3\u009a\3\u009a\3\u009a\3\u009a\3\u009a\6\u009a\u11d1\n\u009a\r\u009a"+
		"\16\u009a\u11d2\3\u009a\3\u009a\3\u009a\5\u009a\u11d8\n\u009a\3\u009a"+
		"\6\u009a\u11db\n\u009a\r\u009a\16\u009a\u11dc\3\u009a\3\u009a\3\u009a"+
		"\3\u009a\6\u009a\u11e3\n\u009a\r\u009a\16\u009a\u11e4\3\u009a\3\u009a"+
		"\3\u009a\3\u009a\3\u009a\6\u009a\u11ec\n\u009a\r\u009a\16\u009a\u11ed"+
		"\3\u009a\3\u009a\3\u009a\5\u009a\u11f3\n\u009a\3\u009b\3\u009b\3\u009c"+
		"\3\u009c\3\u009c\6\u009c\u11fa\n\u009c\r\u009c\16\u009c\u11fb\3\u009c"+
		"\3\u009c\3\u009c\3\u009c\6\u009c\u1202\n\u009c\r\u009c\16\u009c\u1203"+
		"\3\u009c\3\u009c\5\u009c\u1208\n\u009c\3\u009d\3\u009d\6\u009d\u120c\n"+
		"\u009d\r\u009d\16\u009d\u120d\3\u009d\3\u009d\6\u009d\u1212\n\u009d\r"+
		"\u009d\16\u009d\u1213\5\u009d\u1216\n\u009d\3\u009d\3\u009d\6\u009d\u121a"+
		"\n\u009d\r\u009d\16\u009d\u121b\3\u009d\3\u009d\5\u009d\u1220\n\u009d"+
		"\3\u009d\3\u009d\6\u009d\u1224\n\u009d\r\u009d\16\u009d\u1225\3\u009d"+
		"\3\u009d\5\u009d\u122a\n\u009d\3\u009e\3\u009e\3\u009f\3\u009f\6\u009f"+
		"\u1230\n\u009f\r\u009f\16\u009f\u1231\5\u009f\u1234\n\u009f\3\u009f\3"+
		"\u009f\3\u009f\6\u009f\u1239\n\u009f\r\u009f\16\u009f\u123a\3\u009f\3"+
		"\u009f\3\u009f\3\u009f\6\u009f\u1241\n\u009f\r\u009f\16\u009f\u1242\3"+
		"\u009f\3\u009f\5\u009f\u1247\n\u009f\3\u009f\3\u009f\6\u009f\u124b\n\u009f"+
		"\r\u009f\16\u009f\u124c\3\u009f\3\u009f\5\u009f\u1251\n\u009f\5\u009f"+
		"\u1253\n\u009f\3\u009f\6\u009f\u1256\n\u009f\r\u009f\16\u009f\u1257\3"+
		"\u009f\3\u009f\7\u009f\u125c\n\u009f\f\u009f\16\u009f\u125f\13\u009f\3"+
		"\u009f\7\u009f\u1262\n\u009f\f\u009f\16\u009f\u1265\13\u009f\3\u009f\3"+
		"\u009f\7\u009f\u1269\n\u009f\f\u009f\16\u009f\u126c\13\u009f\3\u009f\7"+
		"\u009f\u126f\n\u009f\f\u009f\16\u009f\u1272\13\u009f\5\u009f\u1274\n\u009f"+
		"\3\u009f\3\u009f\6\u009f\u1278\n\u009f\r\u009f\16\u009f\u1279\3\u009f"+
		"\3\u009f\6\u009f\u127e\n\u009f\r\u009f\16\u009f\u127f\3\u009f\3\u009f"+
		"\6\u009f\u1284\n\u009f\r\u009f\16\u009f\u1285\5\u009f\u1288\n\u009f\3"+
		"\u009f\3\u009f\6\u009f\u128c\n\u009f\r\u009f\16\u009f\u128d\3\u009f\3"+
		"\u009f\6\u009f\u1292\n\u009f\r\u009f\16\u009f\u1293\5\u009f\u1296\n\u009f"+
		"\5\u009f\u1298\n\u009f\3\u009f\3\u009f\6\u009f\u129c\n\u009f\r\u009f\16"+
		"\u009f\u129d\3\u009f\3\u009f\5\u009f\u12a2\n\u009f\3\u009f\6\u009f\u12a5"+
		"\n\u009f\r\u009f\16\u009f\u12a6\3\u009f\3\u009f\6\u009f\u12ab\n\u009f"+
		"\r\u009f\16\u009f\u12ac\3\u009f\3\u009f\5\u009f\u12b1\n\u009f\3\u009f"+
		"\6\u009f\u12b4\n\u009f\r\u009f\16\u009f\u12b5\3\u009f\3\u009f\6\u009f"+
		"\u12ba\n\u009f\r\u009f\16\u009f\u12bb\3\u009f\3\u009f\6\u009f\u12c0\n"+
		"\u009f\r\u009f\16\u009f\u12c1\3\u009f\3\u009f\5\u009f\u12c6\n\u009f\3"+
		"\u009f\6\u009f\u12c9\n\u009f\r\u009f\16\u009f\u12ca\3\u009f\3\u009f\6"+
		"\u009f\u12cf\n\u009f\r\u009f\16\u009f\u12d0\3\u009f\3\u009f\6\u009f\u12d5"+
		"\n\u009f\r\u009f\16\u009f\u12d6\3\u009f\3\u009f\5\u009f\u12db\n\u009f"+
		"\3\u009f\6\u009f\u12de\n\u009f\r\u009f\16\u009f\u12df\3\u009f\3\u009f"+
		"\6\u009f\u12e4\n\u009f\r\u009f\16\u009f\u12e5\3\u009f\3\u009f\5\u009f"+
		"\u12ea\n\u009f\5\u009f\u12ec\n\u009f\3\u00a0\3\u00a0\3\u00a1\3\u00a1\3"+
		"\u00a2\3\u00a2\3\u00a3\3\u00a3\3\u00a4\3\u00a4\3\u00a5\3\u00a5\3\u00a6"+
		"\3\u00a6\3\u00a7\3\u00a7\6\u00a7\u12fe\n\u00a7\r\u00a7\16\u00a7\u12ff"+
		"\3\u00a7\3\u00a7\5\u00a7\u1304\n\u00a7\3\u00a7\6\u00a7\u1307\n\u00a7\r"+
		"\u00a7\16\u00a7\u1308\5\u00a7\u130b\n\u00a7\3\u00a7\3\u00a7\3\u00a8\3"+
		"\u00a8\3\u00a8\6\u00a8\u1312\n\u00a8\r\u00a8\16\u00a8\u1313\3\u00a8\3"+
		"\u00a8\5\u00a8\u1318\n\u00a8\3\u00a8\3\u00a8\6\u00a8\u131c\n\u00a8\r\u00a8"+
		"\16\u00a8\u131d\3\u00a8\3\u00a8\5\u00a8\u1322\n\u00a8\3\u00a8\3\u00a8"+
		"\6\u00a8\u1326\n\u00a8\r\u00a8\16\u00a8\u1327\3\u00a8\3\u00a8\5\u00a8"+
		"\u132c\n\u00a8\3\u00a8\3\u00a8\6\u00a8\u1330\n\u00a8\r\u00a8\16\u00a8"+
		"\u1331\3\u00a8\3\u00a8\5\u00a8\u1336\n\u00a8\3\u00a8\3\u00a8\3\u00a8\3"+
		"\u00a8\3\u00a8\3\u00a8\3\u00a8\3\u00a8\3\u00a8\3\u00a8\3\u00a8\3\u00a8"+
		"\3\u00a8\3\u00a8\3\u00a8\3\u00a8\3\u00a8\3\u00a8\3\u00a8\3\u00a8\3\u00a8"+
		"\3\u00a8\5\u00a8\u134e\n\u00a8\3\u00a9\3\u00a9\6\u00a9\u1352\n\u00a9\r"+
		"\u00a9\16\u00a9\u1353\3\u00a9\3\u00a9\6\u00a9\u1358\n\u00a9\r\u00a9\16"+
		"\u00a9\u1359\5\u00a9\u135c\n\u00a9\3\u00a9\3\u00a9\3\u00aa\6\u00aa\u1361"+
		"\n\u00aa\r\u00aa\16\u00aa\u1362\3\u00ab\3\u00ab\3\u00ac\3\u00ac\3\u00ad"+
		"\3\u00ad\3\u00ae\3\u00ae\5\u00ae\u136d\n\u00ae\3\u00af\3\u00af\6\u00af"+
		"\u1371\n\u00af\r\u00af\16\u00af\u1372\3\u00af\3\u00af\5\u00af\u1377\n"+
		"\u00af\3\u00af\3\u00af\6\u00af\u137b\n\u00af\r\u00af\16\u00af\u137c\3"+
		"\u00af\3\u00af\5\u00af\u1381\n\u00af\5\u00af\u1383\n\u00af\3\u00af\6\u00af"+
		"\u1386\n\u00af\r\u00af\16\u00af\u1387\3\u00af\3\u00af\7\u00af\u138c\n"+
		"\u00af\f\u00af\16\u00af\u138f\13\u00af\3\u00af\7\u00af\u1392\n\u00af\f"+
		"\u00af\16\u00af\u1395\13\u00af\3\u00b0\3\u00b0\3\u00b1\3\u00b1\6\u00b1"+
		"\u139b\n\u00b1\r\u00b1\16\u00b1\u139c\3\u00b1\3\u00b1\6\u00b1\u13a1\n"+
		"\u00b1\r\u00b1\16\u00b1\u13a2\5\u00b1\u13a5\n\u00b1\3\u00b1\3\u00b1\6"+
		"\u00b1\u13a9\n\u00b1\r\u00b1\16\u00b1\u13aa\3\u00b1\3\u00b1\5\u00b1\u13af"+
		"\n\u00b1\3\u00b1\6\u00b1\u13b2\n\u00b1\r\u00b1\16\u00b1\u13b3\3\u00b1"+
		"\3\u00b1\6\u00b1\u13b8\n\u00b1\r\u00b1\16\u00b1\u13b9\5\u00b1\u13bc\n"+
		"\u00b1\3\u00b1\3\u00b1\6\u00b1\u13c0\n\u00b1\r\u00b1\16\u00b1\u13c1\3"+
		"\u00b1\3\u00b1\6\u00b1\u13c6\n\u00b1\r\u00b1\16\u00b1\u13c7\5\u00b1\u13ca"+
		"\n\u00b1\3\u00b1\3\u00b1\5\u00b1\u13ce\n\u00b1\3\u00b1\6\u00b1\u13d1\n"+
		"\u00b1\r\u00b1\16\u00b1\u13d2\3\u00b1\3\u00b1\6\u00b1\u13d7\n\u00b1\r"+
		"\u00b1\16\u00b1\u13d8\5\u00b1\u13db\n\u00b1\3\u00b1\3\u00b1\6\u00b1\u13df"+
		"\n\u00b1\r\u00b1\16\u00b1\u13e0\5\u00b1\u13e3\n\u00b1\3\u00b1\3\u00b1"+
		"\6\u00b1\u13e7\n\u00b1\r\u00b1\16\u00b1\u13e8\3\u00b1\3\u00b1\5\u00b1"+
		"\u13ed\n\u00b1\3\u00b1\6\u00b1\u13f0\n\u00b1\r\u00b1\16\u00b1\u13f1\3"+
		"\u00b1\3\u00b1\6\u00b1\u13f6\n\u00b1\r\u00b1\16\u00b1\u13f7\5\u00b1\u13fa"+
		"\n\u00b1\3\u00b1\3\u00b1\6\u00b1\u13fe\n\u00b1\r\u00b1\16\u00b1\u13ff"+
		"\5\u00b1\u1402\n\u00b1\3\u00b1\3\u00b1\6\u00b1\u1406\n\u00b1\r\u00b1\16"+
		"\u00b1\u1407\3\u00b1\3\u00b1\5\u00b1\u140c\n\u00b1\3\u00b2\3\u00b2\5\u00b2"+
		"\u1410\n\u00b2\3\u00b3\3\u00b3\5\u00b3\u1414\n\u00b3\3\u00b4\3\u00b4\5"+
		"\u00b4\u1418\n\u00b4\3\u00b5\3\u00b5\5\u00b5\u141c\n\u00b5\3\u00b6\3\u00b6"+
		"\6\u00b6\u1420\n\u00b6\r\u00b6\16\u00b6\u1421\3\u00b6\3\u00b6\6\u00b6"+
		"\u1426\n\u00b6\r\u00b6\16\u00b6\u1427\3\u00b6\3\u00b6\5\u00b6\u142c\n"+
		"\u00b6\3\u00b6\3\u00b6\6\u00b6\u1430\n\u00b6\r\u00b6\16\u00b6\u1431\3"+
		"\u00b6\3\u00b6\5\u00b6\u1436\n\u00b6\5\u00b6\u1438\n\u00b6\3\u00b6\3\u00b6"+
		"\6\u00b6\u143c\n\u00b6\r\u00b6\16\u00b6\u143d\3\u00b6\3\u00b6\7\u00b6"+
		"\u1442\n\u00b6\f\u00b6\16\u00b6\u1445\13\u00b6\3\u00b7\3\u00b7\3\u00b8"+
		"\3\u00b8\6\u00b8\u144b\n\u00b8\r\u00b8\16\u00b8\u144c\3\u00b8\3\u00b8"+
		"\6\u00b8\u1451\n\u00b8\r\u00b8\16\u00b8\u1452\3\u00b8\3\u00b8\6\u00b8"+
		"\u1457\n\u00b8\r\u00b8\16\u00b8\u1458\3\u00b8\3\u00b8\6\u00b8\u145d\n"+
		"\u00b8\r\u00b8\16\u00b8\u145e\5\u00b8\u1461\n\u00b8\3\u00b8\3\u00b8\3"+
		"\u00b9\3\u00b9\5\u00b9\u1467\n\u00b9\3\u00ba\3\u00ba\6\u00ba\u146b\n\u00ba"+
		"\r\u00ba\16\u00ba\u146c\3\u00ba\3\u00ba\6\u00ba\u1471\n\u00ba\r\u00ba"+
		"\16\u00ba\u1472\3\u00ba\3\u00ba\5\u00ba\u1477\n\u00ba\3\u00ba\3\u00ba"+
		"\6\u00ba\u147b\n\u00ba\r\u00ba\16\u00ba\u147c\3\u00ba\3\u00ba\5\u00ba"+
		"\u1481\n\u00ba\5\u00ba\u1483\n\u00ba\3\u00ba\6\u00ba\u1486\n\u00ba\r\u00ba"+
		"\16\u00ba\u1487\3\u00ba\3\u00ba\3\u00bb\3\u00bb\6\u00bb\u148e\n\u00bb"+
		"\r\u00bb\16\u00bb\u148f\3\u00bb\3\u00bb\3\u00bc\3\u00bc\6\u00bc\u1496"+
		"\n\u00bc\r\u00bc\16\u00bc\u1497\5\u00bc\u149a\n\u00bc\3\u00bc\3\u00bc"+
		"\6\u00bc\u149e\n\u00bc\r\u00bc\16\u00bc\u149f\3\u00bc\3\u00bc\6\u00bc"+
		"\u14a4\n\u00bc\r\u00bc\16\u00bc\u14a5\5\u00bc\u14a8\n\u00bc\3\u00bc\3"+
		"\u00bc\7\u00bc\u14ac\n\u00bc\f\u00bc\16\u00bc\u14af\13\u00bc\3\u00bc\3"+
		"\u00bc\7\u00bc\u14b3\n\u00bc\f\u00bc\16\u00bc\u14b6\13\u00bc\5\u00bc\u14b8"+
		"\n\u00bc\3\u00bc\3\u00bc\6\u00bc\u14bc\n\u00bc\r\u00bc\16\u00bc\u14bd"+
		"\5\u00bc\u14c0\n\u00bc\3\u00bc\3\u00bc\6\u00bc\u14c4\n\u00bc\r\u00bc\16"+
		"\u00bc\u14c5\3\u00bc\3\u00bc\6\u00bc\u14ca\n\u00bc\r\u00bc\16\u00bc\u14cb"+
		"\5\u00bc\u14ce\n\u00bc\3\u00bc\3\u00bc\7\u00bc\u14d2\n\u00bc\f\u00bc\16"+
		"\u00bc\u14d5\13\u00bc\5\u00bc\u14d7\n\u00bc\3\u00bc\3\u00bc\6\u00bc\u14db"+
		"\n\u00bc\r\u00bc\16\u00bc\u14dc\5\u00bc\u14df\n\u00bc\3\u00bc\5\u00bc"+
		"\u14e2\n\u00bc\3\u00bc\3\u00bc\6\u00bc\u14e6\n\u00bc\r\u00bc\16\u00bc"+
		"\u14e7\3\u00bc\3\u00bc\5\u00bc\u14ec\n\u00bc\3\u00bc\7\u00bc\u14ef\n\u00bc"+
		"\f\u00bc\16\u00bc\u14f2\13\u00bc\3\u00bc\3\u00bc\7\u00bc\u14f6\n\u00bc"+
		"\f\u00bc\16\u00bc\u14f9\13\u00bc\5\u00bc\u14fb\n\u00bc\3\u00bc\3\u00bc"+
		"\6\u00bc\u14ff\n\u00bc\r\u00bc\16\u00bc\u1500\3\u00bc\3\u00bc\6\u00bc"+
		"\u1505\n\u00bc\r\u00bc\16\u00bc\u1506\5\u00bc\u1509\n\u00bc\3\u00bc\3"+
		"\u00bc\5\u00bc\u150d\n\u00bc\5\u00bc\u150f\n\u00bc\3\u00bd\3\u00bd\3\u00be"+
		"\3\u00be\3\u00bf\3\u00bf\3\u00c0\3\u00c0\6\u00c0\u1519\n\u00c0\r\u00c0"+
		"\16\u00c0\u151a\3\u00c0\3\u00c0\5\u00c0\u151f\n\u00c0\5\u00c0\u1521\n"+
		"\u00c0\3\u00c0\6\u00c0\u1524\n\u00c0\r\u00c0\16\u00c0\u1525\3\u00c0\3"+
		"\u00c0\7\u00c0\u152a\n\u00c0\f\u00c0\16\u00c0\u152d\13\u00c0\3\u00c0\3"+
		"\u00c0\3\u00c1\3\u00c1\3\u00c2\3\u00c2\6\u00c2\u1535\n\u00c2\r\u00c2\16"+
		"\u00c2\u1536\3\u00c2\3\u00c2\3\u00c2\3\u00c2\6\u00c2\u153d\n\u00c2\r\u00c2"+
		"\16\u00c2\u153e\3\u00c2\3\u00c2\6\u00c2\u1543\n\u00c2\r\u00c2\16\u00c2"+
		"\u1544\5\u00c2\u1547\n\u00c2\3\u00c2\3\u00c2\3\u00c2\3\u00c2\6\u00c2\u154d"+
		"\n\u00c2\r\u00c2\16\u00c2\u154e\3\u00c2\3\u00c2\6\u00c2\u1553\n\u00c2"+
		"\r\u00c2\16\u00c2\u1554\5\u00c2\u1557\n\u00c2\3\u00c2\3\u00c2\3\u00c2"+
		"\3\u00c2\3\u00c2\3\u00c2\3\u00c2\6\u00c2\u1560\n\u00c2\r\u00c2\16\u00c2"+
		"\u1561\3\u00c2\3\u00c2\6\u00c2\u1566\n\u00c2\r\u00c2\16\u00c2\u1567\5"+
		"\u00c2\u156a\n\u00c2\5\u00c2\u156c\n\u00c2\3\u00c2\3\u00c2\3\u00c2\3\u00c2"+
		"\3\u00c2\3\u00c2\3\u00c2\6\u00c2\u1575\n\u00c2\r\u00c2\16\u00c2\u1576"+
		"\3\u00c2\3\u00c2\3\u00c2\3\u00c2\3\u00c2\3\u00c2\3\u00c2\3\u00c2\6\u00c2"+
		"\u1581\n\u00c2\r\u00c2\16\u00c2\u1582\3\u00c2\3\u00c2\6\u00c2\u1587\n"+
		"\u00c2\r\u00c2\16\u00c2\u1588\5\u00c2\u158b\n\u00c2\3\u00c2\3\u00c2\6"+
		"\u00c2\u158f\n\u00c2\r\u00c2\16\u00c2\u1590\5\u00c2\u1593\n\u00c2\3\u00c2"+
		"\3\u00c2\6\u00c2\u1597\n\u00c2\r\u00c2\16\u00c2\u1598\5\u00c2\u159b\n"+
		"\u00c2\3\u00c2\3\u00c2\3\u00c2\3\u00c2\6\u00c2\u15a1\n\u00c2\r\u00c2\16"+
		"\u00c2\u15a2\3\u00c2\3\u00c2\6\u00c2\u15a7\n\u00c2\r\u00c2\16\u00c2\u15a8"+
		"\5\u00c2\u15ab\n\u00c2\3\u00c2\3\u00c2\6\u00c2\u15af\n\u00c2\r\u00c2\16"+
		"\u00c2\u15b0\5\u00c2\u15b3\n\u00c2\3\u00c2\3\u00c2\6\u00c2\u15b7\n\u00c2"+
		"\r\u00c2\16\u00c2\u15b8\5\u00c2\u15bb\n\u00c2\3\u00c2\3\u00c2\3\u00c2"+
		"\3\u00c2\6\u00c2\u15c1\n\u00c2\r\u00c2\16\u00c2\u15c2\3\u00c2\3\u00c2"+
		"\6\u00c2\u15c7\n\u00c2\r\u00c2\16\u00c2\u15c8\5\u00c2\u15cb\n\u00c2\3"+
		"\u00c2\3\u00c2\3\u00c2\3\u00c2\6\u00c2\u15d1\n\u00c2\r\u00c2\16\u00c2"+
		"\u15d2\3\u00c2\3\u00c2\6\u00c2\u15d7\n\u00c2\r\u00c2\16\u00c2\u15d8\5"+
		"\u00c2\u15db\n\u00c2\3\u00c2\3\u00c2\3\u00c2\3\u00c2\6\u00c2\u15e1\n\u00c2"+
		"\r\u00c2\16\u00c2\u15e2\3\u00c2\3\u00c2\5\u00c2\u15e7\n\u00c2\3\u00c2"+
		"\3\u00c2\6\u00c2\u15eb\n\u00c2\r\u00c2\16\u00c2\u15ec\3\u00c2\3\u00c2"+
		"\3\u00c2\6\u00c2\u15f2\n\u00c2\r\u00c2\16\u00c2\u15f3\3\u00c2\3\u00c2"+
		"\5\u00c2\u15f8\n\u00c2\3\u00c2\5\u00c2\u15fb\n\u00c2\5\u00c2\u15fd\n\u00c2"+
		"\3\u00c3\3\u00c3\6\u00c3\u1601\n\u00c3\r\u00c3\16\u00c3\u1602\3\u00c3"+
		"\3\u00c3\3\u00c4\3\u00c4\6\u00c4\u1609\n\u00c4\r\u00c4\16\u00c4\u160a"+
		"\3\u00c4\3\u00c4\5\u00c4\u160f\n\u00c4\3\u00c5\3\u00c5\6\u00c5\u1613\n"+
		"\u00c5\r\u00c5\16\u00c5\u1614\3\u00c5\3\u00c5\3\u00c6\3\u00c6\3\u00c7"+
		"\3\u00c7\5\u00c7\u161d\n\u00c7\3\u00c8\3\u00c8\3\u00c9\3\u00c9\6\u00c9"+
		"\u1623\n\u00c9\r\u00c9\16\u00c9\u1624\3\u00c9\3\u00c9\7\u00c9\u1629\n"+
		"\u00c9\f\u00c9\16\u00c9\u162c\13\u00c9\3\u00c9\3\u00c9\7\u00c9\u1630\n"+
		"\u00c9\f\u00c9\16\u00c9\u1633\13\u00c9\3\u00c9\7\u00c9\u1636\n\u00c9\f"+
		"\u00c9\16\u00c9\u1639\13\u00c9\3\u00ca\3\u00ca\3\u00ca\3\u00ca\3\u00ca"+
		"\3\u00ca\3\u00ca\3\u00ca\5\u00ca\u1643\n\u00ca\3\u00cb\3\u00cb\7\u00cb"+
		"\u1647\n\u00cb\f\u00cb\16\u00cb\u164a\13\u00cb\3\u00cb\3\u00cb\7\u00cb"+
		"\u164e\n\u00cb\f\u00cb\16\u00cb\u1651\13\u00cb\3\u00cb\3\u00cb\7\u00cb"+
		"\u1655\n\u00cb\f\u00cb\16\u00cb\u1658\13\u00cb\3\u00cb\5\u00cb\u165b\n"+
		"\u00cb\3\u00cb\7\u00cb\u165e\n\u00cb\f\u00cb\16\u00cb\u1661\13\u00cb\3"+
		"\u00cb\5\u00cb\u1664\n\u00cb\3\u00cb\7\u00cb\u1667\n\u00cb\f\u00cb\16"+
		"\u00cb\u166a\13\u00cb\3\u00cb\3\u00cb\3\u00cc\3\u00cc\3\u00cd\3\u00cd"+
		"\6\u00cd\u1672\n\u00cd\r\u00cd\16\u00cd\u1673\5\u00cd\u1676\n\u00cd\3"+
		"\u00cd\3\u00cd\6\u00cd\u167a\n\u00cd\r\u00cd\16\u00cd\u167b\3\u00cd\3"+
		"\u00cd\5\u00cd\u1680\n\u00cd\3\u00ce\3\u00ce\6\u00ce\u1684\n\u00ce\r\u00ce"+
		"\16\u00ce\u1685\5\u00ce\u1688\n\u00ce\3\u00ce\3\u00ce\6\u00ce\u168c\n"+
		"\u00ce\r\u00ce\16\u00ce\u168d\3\u00ce\3\u00ce\3\u00cf\3\u00cf\3\u00d0"+
		"\3\u00d0\7\u00d0\u1696\n\u00d0\f\u00d0\16\u00d0\u1699\13\u00d0\3\u00d0"+
		"\3\u00d0\5\u00d0\u169d\n\u00d0\3\u00d1\3\u00d1\7\u00d1\u16a1\n\u00d1\f"+
		"\u00d1\16\u00d1\u16a4\13\u00d1\3\u00d1\3\u00d1\7\u00d1\u16a8\n\u00d1\f"+
		"\u00d1\16\u00d1\u16ab\13\u00d1\3\u00d1\3\u00d1\7\u00d1\u16af\n\u00d1\f"+
		"\u00d1\16\u00d1\u16b2\13\u00d1\3\u00d2\3\u00d2\7\u00d2\u16b6\n\u00d2\f"+
		"\u00d2\16\u00d2\u16b9\13\u00d2\3\u00d2\3\u00d2\7\u00d2\u16bd\n\u00d2\f"+
		"\u00d2\16\u00d2\u16c0\13\u00d2\3\u00d2\3\u00d2\7\u00d2\u16c4\n\u00d2\f"+
		"\u00d2\16\u00d2\u16c7\13\u00d2\3\u00d3\3\u00d3\7\u00d3\u16cb\n\u00d3\f"+
		"\u00d3\16\u00d3\u16ce\13\u00d3\3\u00d3\3\u00d3\7\u00d3\u16d2\n\u00d3\f"+
		"\u00d3\16\u00d3\u16d5\13\u00d3\3\u00d3\3\u00d3\7\u00d3\u16d9\n\u00d3\f"+
		"\u00d3\16\u00d3\u16dc\13\u00d3\3\u00d4\3\u00d4\7\u00d4\u16e0\n\u00d4\f"+
		"\u00d4\16\u00d4\u16e3\13\u00d4\3\u00d4\3\u00d4\7\u00d4\u16e7\n\u00d4\f"+
		"\u00d4\16\u00d4\u16ea\13\u00d4\3\u00d4\3\u00d4\7\u00d4\u16ee\n\u00d4\f"+
		"\u00d4\16\u00d4\u16f1\13\u00d4\3\u00d5\3\u00d5\7\u00d5\u16f5\n\u00d5\f"+
		"\u00d5\16\u00d5\u16f8\13\u00d5\3\u00d5\3\u00d5\7\u00d5\u16fc\n\u00d5\f"+
		"\u00d5\16\u00d5\u16ff\13\u00d5\3\u00d5\3\u00d5\7\u00d5\u1703\n\u00d5\f"+
		"\u00d5\16\u00d5\u1706\13\u00d5\3\u00d6\3\u00d6\7\u00d6\u170a\n\u00d6\f"+
		"\u00d6\16\u00d6\u170d\13\u00d6\3\u00d6\3\u00d6\7\u00d6\u1711\n\u00d6\f"+
		"\u00d6\16\u00d6\u1714\13\u00d6\3\u00d6\5\u00d6\u1717\n\u00d6\3\u00d6\7"+
		"\u00d6\u171a\n\u00d6\f\u00d6\16\u00d6\u171d\13\u00d6\3\u00d6\5\u00d6\u1720"+
		"\n\u00d6\3\u00d7\3\u00d7\6\u00d7\u1724\n\u00d7\r\u00d7\16\u00d7\u1725"+
		"\3\u00d7\3\u00d7\6\u00d7\u172a\n\u00d7\r\u00d7\16\u00d7\u172b\5\u00d7"+
		"\u172e\n\u00d7\3\u00d7\3\u00d7\7\u00d7\u1732\n\u00d7\f\u00d7\16\u00d7"+
		"\u1735\13\u00d7\3\u00d7\3\u00d7\3\u00d8\3\u00d8\6\u00d8\u173b\n\u00d8"+
		"\r\u00d8\16\u00d8\u173c\3\u00d8\3\u00d8\7\u00d8\u1741\n\u00d8\f\u00d8"+
		"\16\u00d8\u1744\13\u00d8\3\u00d8\3\u00d8\7\u00d8\u1748\n\u00d8\f\u00d8"+
		"\16\u00d8\u174b\13\u00d8\3\u00d8\5\u00d8\u174e\n\u00d8\3\u00d8\5\u00d8"+
		"\u1751\n\u00d8\3\u00d9\3\u00d9\6\u00d9\u1755\n\u00d9\r\u00d9\16\u00d9"+
		"\u1756\3\u00d9\3\u00d9\7\u00d9\u175b\n\u00d9\f\u00d9\16\u00d9\u175e\13"+
		"\u00d9\3\u00d9\3\u00d9\7\u00d9\u1762\n\u00d9\f\u00d9\16\u00d9\u1765\13"+
		"\u00d9\3\u00d9\5\u00d9\u1768\n\u00d9\3\u00d9\7\u00d9\u176b\n\u00d9\f\u00d9"+
		"\16\u00d9\u176e\13\u00d9\3\u00d9\5\u00d9\u1771\n\u00d9\3\u00d9\7\u00d9"+
		"\u1774\n\u00d9\f\u00d9\16\u00d9\u1777\13\u00d9\3\u00d9\5\u00d9\u177a\n"+
		"\u00d9\3\u00d9\7\u00d9\u177d\n\u00d9\f\u00d9\16\u00d9\u1780\13\u00d9\3"+
		"\u00da\3\u00da\6\u00da\u1784\n\u00da\r\u00da\16\u00da\u1785\3\u00da\3"+
		"\u00da\7\u00da\u178a\n\u00da\f\u00da\16\u00da\u178d\13\u00da\3\u00da\3"+
		"\u00da\7\u00da\u1791\n\u00da\f\u00da\16\u00da\u1794\13\u00da\3\u00da\5"+
		"\u00da\u1797\n\u00da\3\u00da\5\u00da\u179a\n\u00da\3\u00db\3\u00db\7\u00db"+
		"\u179e\n\u00db\f\u00db\16\u00db\u17a1\13\u00db\3\u00db\3\u00db\7\u00db"+
		"\u17a5\n\u00db\f\u00db\16\u00db\u17a8\13\u00db\3\u00db\3\u00db\6\u00db"+
		"\u17ac\n\u00db\r\u00db\16\u00db\u17ad\3\u00db\3\u00db\5\u00db\u17b2\n"+
		"\u00db\3\u00db\7\u00db\u17b5\n\u00db\f\u00db\16\u00db\u17b8\13\u00db\3"+
		"\u00db\3\u00db\5\u00db\u17bc\n\u00db\3\u00dc\3\u00dc\3\u00dd\3\u00dd\6"+
		"\u00dd\u17c2\n\u00dd\r\u00dd\16\u00dd\u17c3\5\u00dd\u17c6\n\u00dd\3\u00dd"+
		"\3\u00dd\6\u00dd\u17ca\n\u00dd\r\u00dd\16\u00dd\u17cb\3\u00dd\3\u00dd"+
		"\3\u00de\3\u00de\7\u00de\u17d2\n\u00de\f\u00de\16\u00de\u17d5\13\u00de"+
		"\3\u00de\3\u00de\7\u00de\u17d9\n\u00de\f\u00de\16\u00de\u17dc\13\u00de"+
		"\3\u00de\3\u00de\6\u00de\u17e0\n\u00de\r\u00de\16\u00de\u17e1\3\u00de"+
		"\3\u00de\5\u00de\u17e6\n\u00de\3\u00de\6\u00de\u17e9\n\u00de\r\u00de\16"+
		"\u00de\u17ea\3\u00de\3\u00de\5\u00de\u17ef\n\u00de\3\u00de\6\u00de\u17f2"+
		"\n\u00de\r\u00de\16\u00de\u17f3\3\u00de\3\u00de\5\u00de\u17f8\n\u00de"+
		"\3\u00de\7\u00de\u17fb\n\u00de\f\u00de\16\u00de\u17fe\13\u00de\3\u00de"+
		"\3\u00de\5\u00de\u1802\n\u00de\3\u00df\3\u00df\6\u00df\u1806\n\u00df\r"+
		"\u00df\16\u00df\u1807\3\u00df\3\u00df\5\u00df\u180c\n\u00df\3\u00df\6"+
		"\u00df\u180f\n\u00df\r\u00df\16\u00df\u1810\3\u00df\3\u00df\6\u00df\u1815"+
		"\n\u00df\r\u00df\16\u00df\u1816\3\u00df\3\u00df\3\u00e0\3\u00e0\3\u00e1"+
		"\3\u00e1\3\u00e2\3\u00e2\6\u00e2\u1821\n\u00e2\r\u00e2\16\u00e2\u1822"+
		"\5\u00e2\u1825\n\u00e2\3\u00e2\3\u00e2\6\u00e2\u1829\n\u00e2\r\u00e2\16"+
		"\u00e2\u182a\5\u00e2\u182d\n\u00e2\3\u00e2\3\u00e2\6\u00e2\u1831\n\u00e2"+
		"\r\u00e2\16\u00e2\u1832\3\u00e2\3\u00e2\5\u00e2\u1837\n\u00e2\3\u00e2"+
		"\6\u00e2\u183a\n\u00e2\r\u00e2\16\u00e2\u183b\3\u00e2\3\u00e2\3\u00e3"+
		"\3\u00e3\3\u00e4\3\u00e4\6\u00e4\u1844\n\u00e4\r\u00e4\16\u00e4\u1845"+
		"\3\u00e4\3\u00e4\5\u00e4\u184a\n\u00e4\3\u00e4\3\u00e4\3\u00e5\3\u00e5"+
		"\3\u00e6\3\u00e6\7\u00e6\u1852\n\u00e6\f\u00e6\16\u00e6\u1855\13\u00e6"+
		"\3\u00e6\3\u00e6\7\u00e6\u1859\n\u00e6\f\u00e6\16\u00e6\u185c\13\u00e6"+
		"\3\u00e6\3\u00e6\7\u00e6\u1860\n\u00e6\f\u00e6\16\u00e6\u1863\13\u00e6"+
		"\6\u00e6\u1865\n\u00e6\r\u00e6\16\u00e6\u1866\3\u00e6\3\u00e6\5\u00e6"+
		"\u186b\n\u00e6\3\u00e7\3\u00e7\6\u00e7\u186f\n\u00e7\r\u00e7\16\u00e7"+
		"\u1870\3\u00e7\3\u00e7\6\u00e7\u1875\n\u00e7\r\u00e7\16\u00e7\u1876\5"+
		"\u00e7\u1879\n\u00e7\3\u00e7\3\u00e7\3\u00e7\3\u00e7\6\u00e7\u187f\n\u00e7"+
		"\r\u00e7\16\u00e7\u1880\3\u00e7\3\u00e7\6\u00e7\u1885\n\u00e7\r\u00e7"+
		"\16\u00e7\u1886\5\u00e7\u1889\n\u00e7\3\u00e7\3\u00e7\3\u00e7\3\u00e7"+
		"\6\u00e7\u188f\n\u00e7\r\u00e7\16\u00e7\u1890\3\u00e7\3\u00e7\6\u00e7"+
		"\u1895\n\u00e7\r\u00e7\16\u00e7\u1896\5\u00e7\u1899\n\u00e7\3\u00e7\3"+
		"\u00e7\3\u00e7\3\u00e7\3\u00e7\3\u00e7\3\u00e7\3\u00e7\3\u00e7\6\u00e7"+
		"\u18a4\n\u00e7\r\u00e7\16\u00e7\u18a5\3\u00e7\3\u00e7\6\u00e7\u18aa\n"+
		"\u00e7\r\u00e7\16\u00e7\u18ab\5\u00e7\u18ae\n\u00e7\3\u00e7\3\u00e7\3"+
		"\u00e7\3\u00e7\6\u00e7\u18b4\n\u00e7\r\u00e7\16\u00e7\u18b5\3\u00e7\3"+
		"\u00e7\6\u00e7\u18ba\n\u00e7\r\u00e7\16\u00e7\u18bb\5\u00e7\u18be\n\u00e7"+
		"\3\u00e7\3\u00e7\3\u00e7\3\u00e7\6\u00e7\u18c4\n\u00e7\r\u00e7\16\u00e7"+
		"\u18c5\3\u00e7\3\u00e7\6\u00e7\u18ca\n\u00e7\r\u00e7\16\u00e7\u18cb\3"+
		"\u00e7\3\u00e7\6\u00e7\u18d0\n\u00e7\r\u00e7\16\u00e7\u18d1\5\u00e7\u18d4"+
		"\n\u00e7\3\u00e7\3\u00e7\5\u00e7\u18d8\n\u00e7\3\u00e8\3\u00e8\6\u00e8"+
		"\u18dc\n\u00e8\r\u00e8\16\u00e8\u18dd\3\u00e8\3\u00e8\6\u00e8\u18e2\n"+
		"\u00e8\r\u00e8\16\u00e8\u18e3\3\u00e8\3\u00e8\7\u00e8\u18e8\n\u00e8\f"+
		"\u00e8\16\u00e8\u18eb\13\u00e8\3\u00e9\3\u00e9\6\u00e9\u18ef\n\u00e9\r"+
		"\u00e9\16\u00e9\u18f0\3\u00e9\3\u00e9\6\u00e9\u18f5\n\u00e9\r\u00e9\16"+
		"\u00e9\u18f6\5\u00e9\u18f9\n\u00e9\3\u00e9\3\u00e9\6\u00e9\u18fd\n\u00e9"+
		"\r\u00e9\16\u00e9\u18fe\5\u00e9\u1901\n\u00e9\3\u00e9\3\u00e9\3\u00ea"+
		"\3\u00ea\3\u00ea\6\u00ea\u1908\n\u00ea\r\u00ea\16\u00ea\u1909\5\u00ea"+
		"\u190c\n\u00ea\3\u00ea\3\u00ea\6\u00ea\u1910\n\u00ea\r\u00ea\16\u00ea"+
		"\u1911\3\u00ea\3\u00ea\6\u00ea\u1916\n\u00ea\r\u00ea\16\u00ea\u1917\3"+
		"\u00ea\3\u00ea\3\u00ea\5\u00ea\u191d\n\u00ea\3\u00eb\3\u00eb\3\u00ec\3"+
		"\u00ec\3\u00ed\3\u00ed\6\u00ed\u1925\n\u00ed\r\u00ed\16\u00ed\u1926\3"+
		"\u00ed\3\u00ed\6\u00ed\u192b\n\u00ed\r\u00ed\16\u00ed\u192c\3\u00ed\3"+
		"\u00ed\6\u00ed\u1931\n\u00ed\r\u00ed\16\u00ed\u1932\5\u00ed\u1935\n\u00ed"+
		"\3\u00ed\3\u00ed\7\u00ed\u1939\n\u00ed\f\u00ed\16\u00ed\u193c\13\u00ed"+
		"\6\u00ed\u193e\n\u00ed\r\u00ed\16\u00ed\u193f\3\u00ee\3\u00ee\3\u00ef"+
		"\3\u00ef\6\u00ef\u1946\n\u00ef\r\u00ef\16\u00ef\u1947\3\u00ef\3\u00ef"+
		"\6\u00ef\u194c\n\u00ef\r\u00ef\16\u00ef\u194d\3\u00ef\3\u00ef\5\u00ef"+
		"\u1952\n\u00ef\3\u00f0\3\u00f0\6\u00f0\u1956\n\u00f0\r\u00f0\16\u00f0"+
		"\u1957\3\u00f0\3\u00f0\6\u00f0\u195c\n\u00f0\r\u00f0\16\u00f0\u195d\5"+
		"\u00f0\u1960\n\u00f0\3\u00f0\6\u00f0\u1963\n\u00f0\r\u00f0\16\u00f0\u1964"+
		"\3\u00f1\6\u00f1\u1968\n\u00f1\r\u00f1\16\u00f1\u1969\3\u00f1\5\u00f1"+
		"\u196d\n\u00f1\3\u00f2\3\u00f2\6\u00f2\u1971\n\u00f2\r\u00f2\16\u00f2"+
		"\u1972\6\u00f2\u1975\n\u00f2\r\u00f2\16\u00f2\u1976\3\u00f2\3\u00f2\6"+
		"\u00f2\u197b\n\u00f2\r\u00f2\16\u00f2\u197c\5\u00f2\u197f\n\u00f2\3\u00f2"+
		"\3\u00f2\6\u00f2\u1983\n\u00f2\r\u00f2\16\u00f2\u1984\6\u00f2\u1987\n"+
		"\u00f2\r\u00f2\16\u00f2\u1988\3\u00f3\3\u00f3\6\u00f3\u198d\n\u00f3\r"+
		"\u00f3\16\u00f3\u198e\3\u00f3\3\u00f3\7\u00f3\u1993\n\u00f3\f\u00f3\16"+
		"\u00f3\u1996\13\u00f3\3\u00f4\3\u00f4\3\u00f5\3\u00f5\3\u00f6\3\u00f6"+
		"\6\u00f6\u199e\n\u00f6\r\u00f6\16\u00f6\u199f\3\u00f6\3\u00f6\6\u00f6"+
		"\u19a4\n\u00f6\r\u00f6\16\u00f6\u19a5\3\u00f6\3\u00f6\6\u00f6\u19aa\n"+
		"\u00f6\r\u00f6\16\u00f6\u19ab\5\u00f6\u19ae\n\u00f6\3\u00f6\3\u00f6\3"+
		"\u00f7\3\u00f7\3\u00f7\3\u00f7\3\u00f7\3\u00f7\3\u00f7\7\u00f7\u19b9\n"+
		"\u00f7\f\u00f7\16\u00f7\u19bc\13\u00f7\6\u00f7\u19be\n\u00f7\r\u00f7\16"+
		"\u00f7\u19bf\5\u00f7\u19c2\n\u00f7\3\u00f8\3\u00f8\6\u00f8\u19c6\n\u00f8"+
		"\r\u00f8\16\u00f8\u19c7\3\u00f8\3\u00f8\6\u00f8\u19cc\n\u00f8\r\u00f8"+
		"\16\u00f8\u19cd\3\u00f8\3\u00f8\5\u00f8\u19d2\n\u00f8\3\u00f8\3\u00f8"+
		"\6\u00f8\u19d6\n\u00f8\r\u00f8\16\u00f8\u19d7\3\u00f8\3\u00f8\6\u00f8"+
		"\u19dc\n\u00f8\r\u00f8\16\u00f8\u19dd\3\u00f8\3\u00f8\6\u00f8\u19e2\n"+
		"\u00f8\r\u00f8\16\u00f8\u19e3\5\u00f8\u19e6\n\u00f8\3\u00f9\3\u00f9\3"+
		"\u00fa\3\u00fa\3\u00fb\3\u00fb\3\u00fc\3\u00fc\6\u00fc\u19f0\n\u00fc\r"+
		"\u00fc\16\u00fc\u19f1\3\u00fc\3\u00fc\7\u00fc\u19f6\n\u00fc\f\u00fc\16"+
		"\u00fc\u19f9\13\u00fc\3\u00fc\3\u00fc\6\u00fc\u19fd\n\u00fc\r\u00fc\16"+
		"\u00fc\u19fe\5\u00fc\u1a01\n\u00fc\3\u00fc\3\u00fc\6\u00fc\u1a05\n\u00fc"+
		"\r\u00fc\16\u00fc\u1a06\5\u00fc\u1a09\n\u00fc\3\u00fc\3\u00fc\6\u00fc"+
		"\u1a0d\n\u00fc\r\u00fc\16\u00fc\u1a0e\3\u00fc\3\u00fc\5\u00fc\u1a13\n"+
		"\u00fc\3\u00fc\3\u00fc\6\u00fc\u1a17\n\u00fc\r\u00fc\16\u00fc\u1a18\3"+
		"\u00fc\3\u00fc\5\u00fc\u1a1d\n\u00fc\5\u00fc\u1a1f\n\u00fc\3\u00fc\7\u00fc"+
		"\u1a22\n\u00fc\f\u00fc\16\u00fc\u1a25\13\u00fc\3\u00fd\3\u00fd\6\u00fd"+
		"\u1a29\n\u00fd\r\u00fd\16\u00fd\u1a2a\3\u00fd\3\u00fd\6\u00fd\u1a2f\n"+
		"\u00fd\r\u00fd\16\u00fd\u1a30\5\u00fd\u1a33\n\u00fd\3\u00fd\3\u00fd\6"+
		"\u00fd\u1a37\n\u00fd\r\u00fd\16\u00fd\u1a38\5\u00fd\u1a3b\n\u00fd\3\u00fd"+
		"\3\u00fd\3\u00fe\3\u00fe\6\u00fe\u1a41\n\u00fe\r\u00fe\16\u00fe\u1a42"+
		"\3\u00fe\3\u00fe\6\u00fe\u1a47\n\u00fe\r\u00fe\16\u00fe\u1a48\5\u00fe"+
		"\u1a4b\n\u00fe\3\u00fe\3\u00fe\6\u00fe\u1a4f\n\u00fe\r\u00fe\16\u00fe"+
		"\u1a50\5\u00fe\u1a53\n\u00fe\3\u00fe\3\u00fe\3\u00ff\3\u00ff\3\u0100\3"+
		"\u0100\3\u0101\3\u0101\3\u0102\3\u0102\3\u0103\3\u0103\3\u0104\3\u0104"+
		"\3\u0105\3\u0105\3\u0106\3\u0106\3\u0107\3\u0107\7\u0107\u1a69\n\u0107"+
		"\f\u0107\16\u0107\u1a6c\13\u0107\3\u0107\3\u0107\7\u0107\u1a70\n\u0107"+
		"\f\u0107\16\u0107\u1a73\13\u0107\3\u0107\3\u0107\7\u0107\u1a77\n\u0107"+
		"\f\u0107\16\u0107\u1a7a\13\u0107\7\u0107\u1a7c\n\u0107\f\u0107\16\u0107"+
		"\u1a7f\13\u0107\3\u0108\3\u0108\6\u0108\u1a83\n\u0108\r\u0108\16\u0108"+
		"\u1a84\3\u0108\3\u0108\6\u0108\u1a89\n\u0108\r\u0108\16\u0108\u1a8a\5"+
		"\u0108\u1a8d\n\u0108\3\u0108\3\u0108\7\u0108\u1a91\n\u0108\f\u0108\16"+
		"\u0108\u1a94\13\u0108\3\u0108\3\u0108\7\u0108\u1a98\n\u0108\f\u0108\16"+
		"\u0108\u1a9b\13\u0108\3\u0108\3\u0108\7\u0108\u1a9f\n\u0108\f\u0108\16"+
		"\u0108\u1aa2\13\u0108\5\u0108\u1aa4\n\u0108\3\u0108\3\u0108\7\u0108\u1aa8"+
		"\n\u0108\f\u0108\16\u0108\u1aab\13\u0108\5\u0108\u1aad\n\u0108\3\u0108"+
		"\3\u0108\7\u0108\u1ab1\n\u0108\f\u0108\16\u0108\u1ab4\13\u0108\5\u0108"+
		"\u1ab6\n\u0108\3\u0108\3\u0108\7\u0108\u1aba\n\u0108\f\u0108\16\u0108"+
		"\u1abd\13\u0108\5\u0108\u1abf\n\u0108\3\u0108\3\u0108\7\u0108\u1ac3\n"+
		"\u0108\f\u0108\16\u0108\u1ac6\13\u0108\5\u0108\u1ac8\n\u0108\3\u0108\3"+
		"\u0108\7\u0108\u1acc\n\u0108\f\u0108\16\u0108\u1acf\13\u0108\5\u0108\u1ad1"+
		"\n\u0108\3\u0108\3\u0108\7\u0108\u1ad5\n\u0108\f\u0108\16\u0108\u1ad8"+
		"\13\u0108\5\u0108\u1ada\n\u0108\3\u0108\3\u0108\7\u0108\u1ade\n\u0108"+
		"\f\u0108\16\u0108\u1ae1\13\u0108\7\u0108\u1ae3\n\u0108\f\u0108\16\u0108"+
		"\u1ae6\13\u0108\3\u0108\3\u0108\7\u0108\u1aea\n\u0108\f\u0108\16\u0108"+
		"\u1aed\13\u0108\5\u0108\u1aef\n\u0108\3\u0108\3\u0108\7\u0108\u1af3\n"+
		"\u0108\f\u0108\16\u0108\u1af6\13\u0108\5\u0108\u1af8\n\u0108\3\u0108\3"+
		"\u0108\3\u0109\3\u0109\6\u0109\u1afe\n\u0109\r\u0109\16\u0109\u1aff\5"+
		"\u0109\u1b02\n\u0109\3\u0109\3\u0109\6\u0109\u1b06\n\u0109\r\u0109\16"+
		"\u0109\u1b07\3\u0109\3\u0109\6\u0109\u1b0c\n\u0109\r\u0109\16\u0109\u1b0d"+
		"\5\u0109\u1b10\n\u0109\3\u0109\3\u0109\3\u010a\3\u010a\3\u010b\3\u010b"+
		"\6\u010b\u1b18\n\u010b\r\u010b\16\u010b\u1b19\5\u010b\u1b1c\n\u010b\3"+
		"\u010b\3\u010b\6\u010b\u1b20\n\u010b\r\u010b\16\u010b\u1b21\3\u010b\3"+
		"\u010b\6\u010b\u1b26\n\u010b\r\u010b\16\u010b\u1b27\5\u010b\u1b2a\n\u010b"+
		"\3\u010b\3\u010b\6\u010b\u1b2e\n\u010b\r\u010b\16\u010b\u1b2f\5\u010b"+
		"\u1b32\n\u010b\3\u010b\3\u010b\6\u010b\u1b36\n\u010b\r\u010b\16\u010b"+
		"\u1b37\3\u010b\3\u010b\6\u010b\u1b3c\n\u010b\r\u010b\16\u010b\u1b3d\5"+
		"\u010b\u1b40\n\u010b\3\u010b\3\u010b\5\u010b\u1b44\n\u010b\3\u010b\6\u010b"+
		"\u1b47\n\u010b\r\u010b\16\u010b\u1b48\3\u010b\3\u010b\5\u010b\u1b4d\n"+
		"\u010b\3\u010c\3\u010c\3\u010c\7\u010c\u1b52\n\u010c\f\u010c\16\u010c"+
		"\u1b55\13\u010c\3\u010c\3\u010c\7\u010c\u1b59\n\u010c\f\u010c\16\u010c"+
		"\u1b5c\13\u010c\3\u010c\3\u010c\7\u010c\u1b60\n\u010c\f\u010c\16\u010c"+
		"\u1b63\13\u010c\3\u010c\7\u010c\u1b66\n\u010c\f\u010c\16\u010c\u1b69\13"+
		"\u010c\5\u010c\u1b6b\n\u010c\3\u010d\3\u010d\6\u010d\u1b6f\n\u010d\r\u010d"+
		"\16\u010d\u1b70\3\u010d\3\u010d\6\u010d\u1b75\n\u010d\r\u010d\16\u010d"+
		"\u1b76\5\u010d\u1b79\n\u010d\3\u010d\3\u010d\6\u010d\u1b7d\n\u010d\r\u010d"+
		"\16\u010d\u1b7e\5\u010d\u1b81\n\u010d\5\u010d\u1b83\n\u010d\3\u010d\3"+
		"\u010d\6\u010d\u1b87\n\u010d\r\u010d\16\u010d\u1b88\3\u010d\3\u010d\6"+
		"\u010d\u1b8d\n\u010d\r\u010d\16\u010d\u1b8e\3\u010d\3\u010d\6\u010d\u1b93"+
		"\n\u010d\r\u010d\16\u010d\u1b94\5\u010d\u1b97\n\u010d\3\u010d\3\u010d"+
		"\6\u010d\u1b9b\n\u010d\r\u010d\16\u010d\u1b9c\5\u010d\u1b9f\n\u010d\3"+
		"\u010d\3\u010d\5\u010d\u1ba3\n\u010d\3\u010e\3\u010e\6\u010e\u1ba7\n\u010e"+
		"\r\u010e\16\u010e\u1ba8\3\u010e\3\u010e\6\u010e\u1bad\n\u010e\r\u010e"+
		"\16\u010e\u1bae\3\u010e\3\u010e\5\u010e\u1bb3\n\u010e\3\u010f\3\u010f"+
		"\3\u0110\3\u0110\6\u0110\u1bb9\n\u0110\r\u0110\16\u0110\u1bba\3\u0110"+
		"\3\u0110\6\u0110\u1bbf\n\u0110\r\u0110\16\u0110\u1bc0\3\u0110\3\u0110"+
		"\6\u0110\u1bc5\n\u0110\r\u0110\16\u0110\u1bc6\5\u0110\u1bc9\n\u0110\3"+
		"\u0110\3\u0110\3\u0111\3\u0111\6\u0111\u1bcf\n\u0111\r\u0111\16\u0111"+
		"\u1bd0\3\u0111\3\u0111\6\u0111\u1bd5\n\u0111\r\u0111\16\u0111\u1bd6\5"+
		"\u0111\u1bd9\n\u0111\3\u0111\3\u0111\6\u0111\u1bdd\n\u0111\r\u0111\16"+
		"\u0111\u1bde\5\u0111\u1be1\n\u0111\3\u0111\3\u0111\3\u0112\3\u0112\3\u0113"+
		"\3\u0113\6\u0113\u1be9\n\u0113\r\u0113\16\u0113\u1bea\3\u0113\3\u0113"+
		"\6\u0113\u1bef\n\u0113\r\u0113\16\u0113\u1bf0\5\u0113\u1bf3\n\u0113\5"+
		"\u0113\u1bf5\n\u0113\3\u0113\3\u0113\3\u0113\6\u0113\u1bfa\n\u0113\r\u0113"+
		"\16\u0113\u1bfb\3\u0113\3\u0113\3\u0113\3\u0113\5\u0113\u1c02\n\u0113"+
		"\3\u0114\3\u0114\6\u0114\u1c06\n\u0114\r\u0114\16\u0114\u1c07\3\u0114"+
		"\3\u0114\6\u0114\u1c0c\n\u0114\r\u0114\16\u0114\u1c0d\5\u0114\u1c10\n"+
		"\u0114\3\u0114\3\u0114\6\u0114\u1c14\n\u0114\r\u0114\16\u0114\u1c15\5"+
		"\u0114\u1c18\n\u0114\3\u0114\3\u0114\3\u0115\3\u0115\6\u0115\u1c1e\n\u0115"+
		"\r\u0115\16\u0115\u1c1f\3\u0115\3\u0115\6\u0115\u1c24\n\u0115\r\u0115"+
		"\16\u0115\u1c25\5\u0115\u1c28\n\u0115\3\u0115\3\u0115\6\u0115\u1c2c\n"+
		"\u0115\r\u0115\16\u0115\u1c2d\3\u0115\3\u0115\6\u0115\u1c32\n\u0115\r"+
		"\u0115\16\u0115\u1c33\3\u0115\3\u0115\6\u0115\u1c38\n\u0115\r\u0115\16"+
		"\u0115\u1c39\3\u0115\3\u0115\3\u0115\3\u0115\6\u0115\u1c40\n\u0115\r\u0115"+
		"\16\u0115\u1c41\3\u0115\3\u0115\6\u0115\u1c46\n\u0115\r\u0115\16\u0115"+
		"\u1c47\5\u0115\u1c4a\n\u0115\3\u0115\3\u0115\6\u0115\u1c4e\n\u0115\r\u0115"+
		"\16\u0115\u1c4f\3\u0115\3\u0115\6\u0115\u1c54\n\u0115\r\u0115\16\u0115"+
		"\u1c55\3\u0115\3\u0115\3\u0115\5\u0115\u1c5b\n\u0115\5\u0115\u1c5d\n\u0115"+
		"\3\u0115\5\u0115\u1c60\n\u0115\3\u0116\3\u0116\6\u0116\u1c64\n\u0116\r"+
		"\u0116\16\u0116\u1c65\3\u0116\3\u0116\6\u0116\u1c6a\n\u0116\r\u0116\16"+
		"\u0116\u1c6b\5\u0116\u1c6e\n\u0116\3\u0116\3\u0116\3\u0117\3\u0117\6\u0117"+
		"\u1c74\n\u0117\r\u0117\16\u0117\u1c75\3\u0117\3\u0117\6\u0117\u1c7a\n"+
		"\u0117\r\u0117\16\u0117\u1c7b\5\u0117\u1c7e\n\u0117\3\u0117\3\u0117\6"+
		"\u0117\u1c82\n\u0117\r\u0117\16\u0117\u1c83\3\u0117\3\u0117\6\u0117\u1c88"+
		"\n\u0117\r\u0117\16\u0117\u1c89\5\u0117\u1c8c\n\u0117\3\u0117\3\u0117"+
		"\6\u0117\u1c90\n\u0117\r\u0117\16\u0117\u1c91\3\u0117\3\u0117\3\u0118"+
		"\3\u0118\3\u0119\3\u0119\3\u011a\3\u011a\6\u011a\u1c9c\n\u011a\r\u011a"+
		"\16\u011a\u1c9d\3\u011a\3\u011a\6\u011a\u1ca2\n\u011a\r\u011a\16\u011a"+
		"\u1ca3\5\u011a\u1ca6\n\u011a\3\u011a\3\u011a\3\u011b\3\u011b\6\u011b\u1cac"+
		"\n\u011b\r\u011b\16\u011b\u1cad\5\u011b\u1cb0\n\u011b\3\u011b\3\u011b"+
		"\3\u011b\6\u011b\u1cb5\n\u011b\r\u011b\16\u011b\u1cb6\5\u011b\u1cb9\n"+
		"\u011b\3\u011b\3\u011b\6\u011b\u1cbd\n\u011b\r\u011b\16\u011b\u1cbe\3"+
		"\u011b\3\u011b\5\u011b\u1cc3\n\u011b\5\u011b\u1cc5\n\u011b\3\u011c\3\u011c"+
		"\3\u011c\3\u011c\5\u011c\u1ccb\n\u011c\3\u011d\3\u011d\3\u011e\3\u011e"+
		"\7\u011e\u1cd1\n\u011e\f\u011e\16\u011e\u1cd4\13\u011e\3\u011e\3\u011e"+
		"\7\u011e\u1cd8\n\u011e\f\u011e\16\u011e\u1cdb\13\u011e\3\u011e\3\u011e"+
		"\7\u011e\u1cdf\n\u011e\f\u011e\16\u011e\u1ce2\13\u011e\7\u011e\u1ce4\n"+
		"\u011e\f\u011e\16\u011e\u1ce7\13\u011e\3\u011e\3\u011e\7\u011e\u1ceb\n"+
		"\u011e\f\u011e\16\u011e\u1cee\13\u011e\7\u011e\u1cf0\n\u011e\f\u011e\16"+
		"\u011e\u1cf3\13\u011e\3\u011e\3\u011e\7\u011e\u1cf7\n\u011e\f\u011e\16"+
		"\u011e\u1cfa\13\u011e\7\u011e\u1cfc\n\u011e\f\u011e\16\u011e\u1cff\13"+
		"\u011e\3\u011e\3\u011e\7\u011e\u1d03\n\u011e\f\u011e\16\u011e\u1d06\13"+
		"\u011e\7\u011e\u1d08\n\u011e\f\u011e\16\u011e\u1d0b\13\u011e\3\u011e\3"+
		"\u011e\7\u011e\u1d0f\n\u011e\f\u011e\16\u011e\u1d12\13\u011e\5\u011e\u1d14"+
		"\n\u011e\3\u011f\3\u011f\6\u011f\u1d18\n\u011f\r\u011f\16\u011f\u1d19"+
		"\3\u011f\3\u011f\6\u011f\u1d1e\n\u011f\r\u011f\16\u011f\u1d1f\3\u011f"+
		"\3\u011f\6\u011f\u1d24\n\u011f\r\u011f\16\u011f\u1d25\5\u011f\u1d28\n"+
		"\u011f\3\u011f\3\u011f\6\u011f\u1d2c\n\u011f\r\u011f\16\u011f\u1d2d\5"+
		"\u011f\u1d30\n\u011f\3\u011f\3\u011f\7\u011f\u1d34\n\u011f\f\u011f\16"+
		"\u011f\u1d37\13\u011f\6\u011f\u1d39\n\u011f\r\u011f\16\u011f\u1d3a\3\u0120"+
		"\3\u0120\6\u0120\u1d3f\n\u0120\r\u0120\16\u0120\u1d40\3\u0120\3\u0120"+
		"\6\u0120\u1d45\n\u0120\r\u0120\16\u0120\u1d46\3\u0120\3\u0120\5\u0120"+
		"\u1d4b\n\u0120\3\u0121\3\u0121\3\u0122\3\u0122\3\u0123\3\u0123\6\u0123"+
		"\u1d53\n\u0123\r\u0123\16\u0123\u1d54\3\u0123\3\u0123\6\u0123\u1d59\n"+
		"\u0123\r\u0123\16\u0123\u1d5a\3\u0123\3\u0123\6\u0123\u1d5f\n\u0123\r"+
		"\u0123\16\u0123\u1d60\5\u0123\u1d63\n\u0123\3\u0123\3\u0123\6\u0123\u1d67"+
		"\n\u0123\r\u0123\16\u0123\u1d68\5\u0123\u1d6b\n\u0123\3\u0123\3\u0123"+
		"\3\u0124\3\u0124\6\u0124\u1d71\n\u0124\r\u0124\16\u0124\u1d72\3\u0124"+
		"\3\u0124\6\u0124\u1d77\n\u0124\r\u0124\16\u0124\u1d78\5\u0124\u1d7b\n"+
		"\u0124\3\u0124\3\u0124\3\u0124\3\u0124\6\u0124\u1d81\n\u0124\r\u0124\16"+
		"\u0124\u1d82\3\u0124\3\u0124\3\u0124\5\u0124\u1d88\n\u0124\3\u0125\3\u0125"+
		"\3\u0126\3\u0126\3\u0127\3\u0127\6\u0127\u1d90\n\u0127\r\u0127\16\u0127"+
		"\u1d91\3\u0127\3\u0127\6\u0127\u1d96\n\u0127\r\u0127\16\u0127\u1d97\5"+
		"\u0127\u1d9a\n\u0127\5\u0127\u1d9c\n\u0127\3\u0127\3\u0127\3\u0127\6\u0127"+
		"\u1da1\n\u0127\r\u0127\16\u0127\u1da2\3\u0127\3\u0127\5\u0127\u1da7\n"+
		"\u0127\3\u0128\3\u0128\3\u0129\3\u0129\6\u0129\u1dad\n\u0129\r\u0129\16"+
		"\u0129\u1dae\3\u0129\3\u0129\6\u0129\u1db3\n\u0129\r\u0129\16\u0129\u1db4"+
		"\5\u0129\u1db7\n\u0129\3\u0129\3\u0129\6\u0129\u1dbb\n\u0129\r\u0129\16"+
		"\u0129\u1dbc\5\u0129\u1dbf\n\u0129\3\u0129\3\u0129\6\u0129\u1dc3\n\u0129"+
		"\r\u0129\16\u0129\u1dc4\5\u0129\u1dc7\n\u0129\3\u0129\3\u0129\6\u0129"+
		"\u1dcb\n\u0129\r\u0129\16\u0129\u1dcc\3\u0129\3\u0129\6\u0129\u1dd1\n"+
		"\u0129\r\u0129\16\u0129\u1dd2\3\u012a\3\u012a\3\u012b\3\u012b\6\u012b"+
		"\u1dd9\n\u012b\r\u012b\16\u012b\u1dda\3\u012b\3\u012b\6\u012b\u1ddf\n"+
		"\u012b\r\u012b\16\u012b\u1de0\6\u012b\u1de3\n\u012b\r\u012b\16\u012b\u1de4"+
		"\3\u012b\3\u012b\6\u012b\u1de9\n\u012b\r\u012b\16\u012b\u1dea\3\u012b"+
		"\3\u012b\7\u012b\u1def\n\u012b\f\u012b\16\u012b\u1df2\13\u012b\6\u012b"+
		"\u1df4\n\u012b\r\u012b\16\u012b\u1df5\3\u012c\3\u012c\3\u012c\6\u012c"+
		"\u1dfb\n\u012c\r\u012c\16\u012c\u1dfc\3\u012c\3\u012c\3\u012c\3\u012c"+
		"\3\u012c\3\u012c\3\u012c\6\u012c\u1e06\n\u012c\r\u012c\16\u012c\u1e07"+
		"\5\u012c\u1e0a\n\u012c\3\u012c\3\u012c\6\u012c\u1e0e\n\u012c\r\u012c\16"+
		"\u012c\u1e0f\3\u012c\3\u012c\3\u012c\3\u012c\3\u012c\6\u012c\u1e17\n\u012c"+
		"\r\u012c\16\u012c\u1e18\3\u012c\3\u012c\5\u012c\u1e1d\n\u012c\3\u012d"+
		"\3\u012d\3\u012e\3\u012e\3\u012f\3\u012f\3\u0130\3\u0130\3\u0130\7\u0130"+
		"\u1e28\n\u0130\f\u0130\16\u0130\u1e2b\13\u0130\3\u0130\3\u0130\7\u0130"+
		"\u1e2f\n\u0130\f\u0130\16\u0130\u1e32\13\u0130\3\u0130\3\u0130\3\u0130"+
		"\3\u0130\7\u0130\u1e38\n\u0130\f\u0130\16\u0130\u1e3b\13\u0130\3\u0130"+
		"\3\u0130\3\u0130\3\u0130\5\u0130\u1e41\n\u0130\3\u0130\3\u0130\7\u0130"+
		"\u1e45\n\u0130\f\u0130\16\u0130\u1e48\13\u0130\3\u0130\3\u0130\7\u0130"+
		"\u1e4c\n\u0130\f\u0130\16\u0130\u1e4f\13\u0130\3\u0130\3\u0130\7\u0130"+
		"\u1e53\n\u0130\f\u0130\16\u0130\u1e56\13\u0130\3\u0131\3\u0131\3\u0131"+
		"\5\u0131\u1e5b\n\u0131\3\u0132\3\u0132\3\u0132\3\u0132\3\u0132\3\u0132"+
		"\5\u0132\u1e63\n\u0132\3\u0133\3\u0133\3\u0134\3\u0134\3\u0134\7\u0134"+
		"\u1e6a\n\u0134\f\u0134\16\u0134\u1e6d\13\u0134\3\u0134\3\u0134\7\u0134"+
		"\u1e71\n\u0134\f\u0134\16\u0134\u1e74\13\u0134\3\u0134\3\u0134\3\u0134"+
		"\3\u0134\7\u0134\u1e7a\n\u0134\f\u0134\16\u0134\u1e7d\13\u0134\3\u0134"+
		"\3\u0134\3\u0134\3\u0134\3\u0134\5\u0134\u1e84\n\u0134\3\u0134\3\u0134"+
		"\7\u0134\u1e88\n\u0134\f\u0134\16\u0134\u1e8b\13\u0134\3\u0134\3\u0134"+
		"\7\u0134\u1e8f\n\u0134\f\u0134\16\u0134\u1e92\13\u0134\3\u0134\3\u0134"+
		"\7\u0134\u1e96\n\u0134\f\u0134\16\u0134\u1e99\13\u0134\3\u0135\3\u0135"+
		"\6\u0135\u1e9d\n\u0135\r\u0135\16\u0135\u1e9e\3\u0135\3\u0135\5\u0135"+
		"\u1ea3\n\u0135\3\u0135\6\u0135\u1ea6\n\u0135\r\u0135\16\u0135\u1ea7\3"+
		"\u0135\3\u0135\3\u0136\3\u0136\3\u0136\7\u0136\u1eaf\n\u0136\f\u0136\16"+
		"\u0136\u1eb2\13\u0136\3\u0136\3\u0136\7\u0136\u1eb6\n\u0136\f\u0136\16"+
		"\u0136\u1eb9\13\u0136\3\u0136\3\u0136\3\u0136\3\u0136\5\u0136\u1ebf\n"+
		"\u0136\3\u0136\3\u0136\6\u0136\u1ec3\n\u0136\r\u0136\16\u0136\u1ec4\3"+
		"\u0136\3\u0136\7\u0136\u1ec9\n\u0136\f\u0136\16\u0136\u1ecc\13\u0136\3"+
		"\u0136\3\u0136\7\u0136\u1ed0\n\u0136\f\u0136\16\u0136\u1ed3\13\u0136\3"+
		"\u0136\3\u0136\7\u0136\u1ed7\n\u0136\f\u0136\16\u0136\u1eda\13\u0136\3"+
		"\u0137\3\u0137\3\u0138\3\u0138\6\u0138\u1ee0\n\u0138\r\u0138\16\u0138"+
		"\u1ee1\3\u0138\3\u0138\5\u0138\u1ee6\n\u0138\3\u0138\6\u0138\u1ee9\n\u0138"+
		"\r\u0138\16\u0138\u1eea\3\u0138\3\u0138\5\u0138\u1eef\n\u0138\3\u0138"+
		"\6\u0138\u1ef2\n\u0138\r\u0138\16\u0138\u1ef3\3\u0138\3\u0138\3\u0139"+
		"\3\u0139\3\u013a\3\u013a\6\u013a\u1efc\n\u013a\r\u013a\16\u013a\u1efd"+
		"\3\u013a\3\u013a\5\u013a\u1f02\n\u013a\3\u013a\6\u013a\u1f05\n\u013a\r"+
		"\u013a\16\u013a\u1f06\3\u013a\3\u013a\5\u013a\u1f0b\n\u013a\3\u013a\6"+
		"\u013a\u1f0e\n\u013a\r\u013a\16\u013a\u1f0f\3\u013a\3\u013a\3\u013b\3"+
		"\u013b\3\u013c\3\u013c\7\u013c\u1f18\n\u013c\f\u013c\16\u013c\u1f1b\13"+
		"\u013c\5\u013c\u1f1d\n\u013c\3\u013c\3\u013c\7\u013c\u1f21\n\u013c\f\u013c"+
		"\16\u013c\u1f24\13\u013c\5\u013c\u1f26\n\u013c\3\u013c\3\u013c\6\u013c"+
		"\u1f2a\n\u013c\r\u013c\16\u013c\u1f2b\3\u013c\3\u013c\5\u013c\u1f30\n"+
		"\u013c\3\u013c\3\u013c\6\u013c\u1f34\n\u013c\r\u013c\16\u013c\u1f35\3"+
		"\u013c\3\u013c\5\u013c\u1f3a\n\u013c\3\u013c\3\u013c\6\u013c\u1f3e\n\u013c"+
		"\r\u013c\16\u013c\u1f3f\3\u013c\3\u013c\5\u013c\u1f44\n\u013c\3\u013c"+
		"\3\u013c\6\u013c\u1f48\n\u013c\r\u013c\16\u013c\u1f49\3\u013c\3\u013c"+
		"\5\u013c\u1f4e\n\u013c\3\u013c\3\u013c\6\u013c\u1f52\n\u013c\r\u013c\16"+
		"\u013c\u1f53\3\u013c\3\u013c\5\u013c\u1f58\n\u013c\3\u013c\3\u013c\6\u013c"+
		"\u1f5c\n\u013c\r\u013c\16\u013c\u1f5d\3\u013c\3\u013c\5\u013c\u1f62\n"+
		"\u013c\5\u013c\u1f64\n\u013c\3\u013c\3\u013c\6\u013c\u1f68\n\u013c\r\u013c"+
		"\16\u013c\u1f69\3\u013c\3\u013c\5\u013c\u1f6e\n\u013c\3\u013c\6\u013c"+
		"\u1f71\n\u013c\r\u013c\16\u013c\u1f72\3\u013c\3\u013c\6\u013c\u1f77\n"+
		"\u013c\r\u013c\16\u013c\u1f78\3\u013c\3\u013c\6\u013c\u1f7d\n\u013c\r"+
		"\u013c\16\u013c\u1f7e\3\u013c\3\u013c\5\u013c\u1f83\n\u013c\3\u013c\3"+
		"\u013c\3\u013c\6\u013c\u1f88\n\u013c\r\u013c\16\u013c\u1f89\3\u013c\3"+
		"\u013c\5\u013c\u1f8e\n\u013c\3\u013c\6\u013c\u1f91\n\u013c\r\u013c\16"+
		"\u013c\u1f92\3\u013c\3\u013c\6\u013c\u1f97\n\u013c\r\u013c\16\u013c\u1f98"+
		"\3\u013c\3\u013c\6\u013c\u1f9d\n\u013c\r\u013c\16\u013c\u1f9e\3\u013c"+
		"\3\u013c\5\u013c\u1fa3\n\u013c\3\u013c\5\u013c\u1fa6\n\u013c\3\u013d\3"+
		"\u013d\7\u013d\u1faa\n\u013d\f\u013d\16\u013d\u1fad\13\u013d\3\u013d\5"+
		"\u013d\u1fb0\n\u013d\3\u013d\7\u013d\u1fb3\n\u013d\f\u013d\16\u013d\u1fb6"+
		"\13\u013d\3\u013d\5\u013d\u1fb9\n\u013d\3\u013e\3\u013e\3\u013e\7\u013e"+
		"\u1fbe\n\u013e\f\u013e\16\u013e\u1fc1\13\u013e\3\u013e\3\u013e\7\u013e"+
		"\u1fc5\n\u013e\f\u013e\16\u013e\u1fc8\13\u013e\3\u013e\5\u013e\u1fcb\n"+
		"\u013e\3\u013e\7\u013e\u1fce\n\u013e\f\u013e\16\u013e\u1fd1\13\u013e\3"+
		"\u013e\5\u013e\u1fd4\n\u013e\5\u013e\u1fd6\n\u013e\3\u013f\3\u013f\3\u0140"+
		"\3\u0140\7\u0140\u1fdc\n\u0140\f\u0140\16\u0140\u1fdf\13\u0140\3\u0140"+
		"\3\u0140\5\u0140\u1fe3\n\u0140\3\u0140\7\u0140\u1fe6\n\u0140\f\u0140\16"+
		"\u0140\u1fe9\13\u0140\3\u0140\3\u0140\5\u0140\u1fed\n\u0140\7\u0140\u1fef"+
		"\n\u0140\f\u0140\16\u0140\u1ff2\13\u0140\3\u0140\7\u0140\u1ff5\n\u0140"+
		"\f\u0140\16\u0140\u1ff8\13\u0140\3\u0140\3\u0140\3\u0141\3\u0141\7\u0141"+
		"\u1ffe\n\u0141\f\u0141\16\u0141\u2001\13\u0141\3\u0141\3\u0141\7\u0141"+
		"\u2005\n\u0141\f\u0141\16\u0141\u2008\13\u0141\3\u0141\3\u0141\7\u0141"+
		"\u200c\n\u0141\f\u0141\16\u0141\u200f\13\u0141\3\u0141\5\u0141\u2012\n"+
		"\u0141\3\u0141\7\u0141\u2015\n\u0141\f\u0141\16\u0141\u2018\13\u0141\3"+
		"\u0141\3\u0141\3\u0142\3\u0142\3\u0143\3\u0143\3\u0144\3\u0144\3\u0144"+
		"\2\5\u025e\u0266\u026a\u0145\2\4\6\b\n\f\16\20\22\24\26\30\32\34\36 \""+
		"$&(*,.\60\62\64\668:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084"+
		"\u0086\u0088\u008a\u008c\u008e\u0090\u0092\u0094\u0096\u0098\u009a\u009c"+
		"\u009e\u00a0\u00a2\u00a4\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4"+
		"\u00b6\u00b8\u00ba\u00bc\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca\u00cc"+
		"\u00ce\u00d0\u00d2\u00d4\u00d6\u00d8\u00da\u00dc\u00de\u00e0\u00e2\u00e4"+
		"\u00e6\u00e8\u00ea\u00ec\u00ee\u00f0\u00f2\u00f4\u00f6\u00f8\u00fa\u00fc"+
		"\u00fe\u0100\u0102\u0104\u0106\u0108\u010a\u010c\u010e\u0110\u0112\u0114"+
		"\u0116\u0118\u011a\u011c\u011e\u0120\u0122\u0124\u0126\u0128\u012a\u012c"+
		"\u012e\u0130\u0132\u0134\u0136\u0138\u013a\u013c\u013e\u0140\u0142\u0144"+
		"\u0146\u0148\u014a\u014c\u014e\u0150\u0152\u0154\u0156\u0158\u015a\u015c"+
		"\u015e\u0160\u0162\u0164\u0166\u0168\u016a\u016c\u016e\u0170\u0172\u0174"+
		"\u0176\u0178\u017a\u017c\u017e\u0180\u0182\u0184\u0186\u0188\u018a\u018c"+
		"\u018e\u0190\u0192\u0194\u0196\u0198\u019a\u019c\u019e\u01a0\u01a2\u01a4"+
		"\u01a6\u01a8\u01aa\u01ac\u01ae\u01b0\u01b2\u01b4\u01b6\u01b8\u01ba\u01bc"+
		"\u01be\u01c0\u01c2\u01c4\u01c6\u01c8\u01ca\u01cc\u01ce\u01d0\u01d2\u01d4"+
		"\u01d6\u01d8\u01da\u01dc\u01de\u01e0\u01e2\u01e4\u01e6\u01e8\u01ea\u01ec"+
		"\u01ee\u01f0\u01f2\u01f4\u01f6\u01f8\u01fa\u01fc\u01fe\u0200\u0202\u0204"+
		"\u0206\u0208\u020a\u020c\u020e\u0210\u0212\u0214\u0216\u0218\u021a\u021c"+
		"\u021e\u0220\u0222\u0224\u0226\u0228\u022a\u022c\u022e\u0230\u0232\u0234"+
		"\u0236\u0238\u023a\u023c\u023e\u0240\u0242\u0244\u0246\u0248\u024a\u024c"+
		"\u024e\u0250\u0252\u0254\u0256\u0258\u025a\u025c\u025e\u0260\u0262\u0264"+
		"\u0266\u0268\u026a\u026c\u026e\u0270\u0272\u0274\u0276\u0278\u027a\u027c"+
		"\u027e\u0280\u0282\u0284\u0286\2,\3\2\u01bb\u01bb\4\2\u009e\u009e\u00a1"+
		"\u00a1\5\2\16\16\u00fc\u00fc\u0199\u019b\3\2_`\3\2\u0171\u0172\4\2\62"+
		"\62\u00d4\u00d4\4\2\u00e4\u00e4\u0144\u0144\4\2\u0129\u0129\u017c\u017c"+
		"\4\2\u01b5\u01b5\u01b8\u01b8\3\2\u0168\u0169\4\2\u00df\u00df\u0140\u0140"+
		"\3\2\u00d9\u00da\3\2\u01b5\u01b6\4\2\34\34tt\4\2\u00de\u00de\u0177\u0177"+
		"\4\2\u00af\u00af\u01b8\u01b8\3\2\u00e4\u00e5\4\2\u0151\u0151\u017e\u017e"+
		"\3\2\u0112\u0113\7\2\u01a3\u01a4\u01ac\u01ad\u01b2\u01b2\u01b6\u01b6\u01b8"+
		"\u01b8\4\2\u00ac\u00ac\u00c5\u00c5\4\2\u0101\u0101\u015a\u015a\3\2\u009a"+
		"\u009b\4\2CC\u00cd\u00cd\4\2\u00f6\u00f6\u015a\u015a\6\2\f\f\u00c4\u00c4"+
		"\u0188\u0188\u01b8\u01b8\5\2::\u00f2\u00f2\u018c\u018c\4\2\u00c9\u00c9"+
		"\u00ff\u00ff\4\2\26\26\u00d6\u00d6\7\2\66\66TT\u00e6\u00e6\u010d\u010e"+
		"\u016a\u016c\4\2\31\32\u0098\u0099\5\2}}\u0123\u0123\u014e\u014e\3\2\27"+
		"\30\4\2::\u0127\u0127\4\2}}\u00a6\u00a6\4\2\u0126\u0126\u0153\u0154\3"+
		"\2WX\3\2\u01a0\u01a1\4\2\u00a7\u00a7\u0162\u0162\4\2\24\24\u0106\u0106"+
		"\5\2\u00f7\u00f7\u0118\u0118\u0191\u0191\5\2\16\20\u00fc\u00fc\u01b8\u01b8"+
		"\2\u2537\2\u028c\3\2\2\2\4\u029c\3\2\2\2\6\u02a0\3\2\2\2\b\u02a8\3\2\2"+
		"\2\n\u02ae\3\2\2\2\f\u02c0\3\2\2\2\16\u02c2\3\2\2\2\20\u02cc\3\2\2\2\22"+
		"\u0305\3\2\2\2\24\u0322\3\2\2\2\26\u0348\3\2\2\2\30\u034a\3\2\2\2\32\u0377"+
		"\3\2\2\2\34\u0385\3\2\2\2\36\u0387\3\2\2\2 \u03a8\3\2\2\2\"\u03bb\3\2"+
		"\2\2$\u0419\3\2\2\2&\u042c\3\2\2\2(\u042e\3\2\2\2*\u044b\3\2\2\2,\u044d"+
		"\3\2\2\2.\u044f\3\2\2\2\60\u0462\3\2\2\2\62\u047d\3\2\2\2\64\u0492\3\2"+
		"\2\2\66\u0494\3\2\2\28\u04ac\3\2\2\2:\u04ce\3\2\2\2<\u04d0\3\2\2\2>\u04d2"+
		"\3\2\2\2@\u04ee\3\2\2\2B\u052f\3\2\2\2D\u0537\3\2\2\2F\u0539\3\2\2\2H"+
		"\u053b\3\2\2\2J\u057a\3\2\2\2L\u057c\3\2\2\2N\u057e\3\2\2\2P\u0600\3\2"+
		"\2\2R\u0606\3\2\2\2T\u060a\3\2\2\2V\u060c\3\2\2\2X\u064d\3\2\2\2Z\u0696"+
		"\3\2\2\2\\\u069a\3\2\2\2^\u06a0\3\2\2\2`\u06a2\3\2\2\2b\u06c2\3\2\2\2"+
		"d\u06e2\3\2\2\2f\u070e\3\2\2\2h\u0735\3\2\2\2j\u0737\3\2\2\2l\u0739\3"+
		"\2\2\2n\u074a\3\2\2\2p\u077e\3\2\2\2r\u07d4\3\2\2\2t\u07dc\3\2\2\2v\u07f5"+
		"\3\2\2\2x\u0808\3\2\2\2z\u080a\3\2\2\2|\u082c\3\2\2\2~\u082e\3\2\2\2\u0080"+
		"\u086f\3\2\2\2\u0082\u08b9\3\2\2\2\u0084\u08bb\3\2\2\2\u0086\u08c7\3\2"+
		"\2\2\u0088\u08f2\3\2\2\2\u008a\u08fa\3\2\2\2\u008c\u091c\3\2\2\2\u008e"+
		"\u0942\3\2\2\2\u0090\u0947\3\2\2\2\u0092\u0949\3\2\2\2\u0094\u094b\3\2"+
		"\2\2\u0096\u0971\3\2\2\2\u0098\u0973\3\2\2\2\u009a\u09f6\3\2\2\2\u009c"+
		"\u0a0a\3\2\2\2\u009e\u0a0e\3\2\2\2\u00a0\u0a16\3\2\2\2\u00a2\u0a38\3\2"+
		"\2\2\u00a4\u0a5a\3\2\2\2\u00a6\u0a7c\3\2\2\2\u00a8\u0a9e\3\2\2\2\u00aa"+
		"\u0aa0\3\2\2\2\u00ac\u0ac7\3\2\2\2\u00ae\u0ac9\3\2\2\2\u00b0\u0b00\3\2"+
		"\2\2\u00b2\u0b14\3\2\2\2\u00b4\u0b3a\3\2\2\2\u00b6\u0b76\3\2\2\2\u00b8"+
		"\u0b9e\3\2\2\2\u00ba\u0bb6\3\2\2\2\u00bc\u0bc8\3\2\2\2\u00be\u0c36\3\2"+
		"\2\2\u00c0\u0c91\3\2\2\2\u00c2\u0c93\3\2\2\2\u00c4\u0ca2\3\2\2\2\u00c6"+
		"\u0cde\3\2\2\2\u00c8\u0ce0\3\2\2\2\u00ca\u0ce4\3\2\2\2\u00cc\u0d03\3\2"+
		"\2\2\u00ce\u0d1b\3\2\2\2\u00d0\u0d1d\3\2\2\2\u00d2\u0d1f\3\2\2\2\u00d4"+
		"\u0d27\3\2\2\2\u00d6\u0d39\3\2\2\2\u00d8\u0d4b\3\2\2\2\u00da\u0d5d\3\2"+
		"\2\2\u00dc\u0d70\3\2\2\2\u00de\u0db1\3\2\2\2\u00e0\u0ded\3\2\2\2\u00e2"+
		"\u0e0d\3\2\2\2\u00e4\u0e2d\3\2\2\2\u00e6\u0e59\3\2\2\2\u00e8\u0e79\3\2"+
		"\2\2\u00ea\u0e94\3\2\2\2\u00ec\u0eaf\3\2\2\2\u00ee\u0ee7\3\2\2\2\u00f0"+
		"\u0ee9\3\2\2\2\u00f2\u0ef6\3\2\2\2\u00f4\u0f1f\3\2\2\2\u00f6\u0f5d\3\2"+
		"\2\2\u00f8\u0f5f\3\2\2\2\u00fa\u0f75\3\2\2\2\u00fc\u0f77\3\2\2\2\u00fe"+
		"\u0f8d\3\2\2\2\u0100\u0fa1\3\2\2\2\u0102\u0fbc\3\2\2\2\u0104\u0fbe\3\2"+
		"\2\2\u0106\u0fc6\3\2\2\2\u0108\u0fc8\3\2\2\2\u010a\u0fca\3\2\2\2\u010c"+
		"\u0fcc\3\2\2\2\u010e\u0fe8\3\2\2\2\u0110\u1003\3\2\2\2\u0112\u1005\3\2"+
		"\2\2\u0114\u1028\3\2\2\2\u0116\u105a\3\2\2\2\u0118\u105c\3\2\2\2\u011a"+
		"\u105e\3\2\2\2\u011c\u1060\3\2\2\2\u011e\u1062\3\2\2\2\u0120\u106f\3\2"+
		"\2\2\u0122\u1135\3\2\2\2\u0124\u1146\3\2\2\2\u0126\u1182\3\2\2\2\u0128"+
		"\u119e\3\2\2\2\u012a\u11a0\3\2\2\2\u012c\u11a2\3\2\2\2\u012e\u11a4\3\2"+
		"\2\2\u0130\u11a6\3\2\2\2\u0132\u11f2\3\2\2\2\u0134\u11f4\3\2\2\2\u0136"+
		"\u1207\3\2\2\2\u0138\u1229\3\2\2\2\u013a\u122b\3\2\2\2\u013c\u12eb\3\2"+
		"\2\2\u013e\u12ed\3\2\2\2\u0140\u12ef\3\2\2\2\u0142\u12f1\3\2\2\2\u0144"+
		"\u12f3\3\2\2\2\u0146\u12f5\3\2\2\2\u0148\u12f7\3\2\2\2\u014a\u12f9\3\2"+
		"\2\2\u014c\u130a\3\2\2\2\u014e\u134d\3\2\2\2\u0150\u134f\3\2\2\2\u0152"+
		"\u1360\3\2\2\2\u0154\u1364\3\2\2\2\u0156\u1366\3\2\2\2\u0158\u1368\3\2"+
		"\2\2\u015a\u136c\3\2\2\2\u015c\u1382\3\2\2\2\u015e\u1396\3\2\2\2\u0160"+
		"\u1398\3\2\2\2\u0162\u140f\3\2\2\2\u0164\u1413\3\2\2\2\u0166\u1417\3\2"+
		"\2\2\u0168\u141b\3\2\2\2\u016a\u141d\3\2\2\2\u016c\u1446\3\2\2\2\u016e"+
		"\u1448\3\2\2\2\u0170\u1466\3\2\2\2\u0172\u1468\3\2\2\2\u0174\u148b\3\2"+
		"\2\2\u0176\u150e\3\2\2\2\u0178\u1510\3\2\2\2\u017a\u1512\3\2\2\2\u017c"+
		"\u1514\3\2\2\2\u017e\u1516\3\2\2\2\u0180\u1530\3\2\2\2\u0182\u15fc\3\2"+
		"\2\2\u0184\u15fe\3\2\2\2\u0186\u1606\3\2\2\2\u0188\u1610\3\2\2\2\u018a"+
		"\u1618\3\2\2\2\u018c\u161c\3\2\2\2\u018e\u161e\3\2\2\2\u0190\u1620\3\2"+
		"\2\2\u0192\u1642\3\2\2\2\u0194\u1644\3\2\2\2\u0196\u166d\3\2\2\2\u0198"+
		"\u1675\3\2\2\2\u019a\u1687\3\2\2\2\u019c\u1691\3\2\2\2\u019e\u169c\3\2"+
		"\2\2\u01a0\u169e\3\2\2\2\u01a2\u16b3\3\2\2\2\u01a4\u16c8\3\2\2\2\u01a6"+
		"\u16dd\3\2\2\2\u01a8\u16f2\3\2\2\2\u01aa\u1707\3\2\2\2\u01ac\u1721\3\2"+
		"\2\2\u01ae\u1738\3\2\2\2\u01b0\u1752\3\2\2\2\u01b2\u1781\3\2\2\2\u01b4"+
		"\u179b\3\2\2\2\u01b6\u17bd\3\2\2\2\u01b8\u17c5\3\2\2\2\u01ba\u17cf\3\2"+
		"\2\2\u01bc\u1803\3\2\2\2\u01be\u181a\3\2\2\2\u01c0\u181c\3\2\2\2\u01c2"+
		"\u1824\3\2\2\2\u01c4\u183f\3\2\2\2\u01c6\u1841\3\2\2\2\u01c8\u184d\3\2"+
		"\2\2\u01ca\u184f\3\2\2\2\u01cc\u18d7\3\2\2\2\u01ce\u18d9\3\2\2\2\u01d0"+
		"\u18ec\3\2\2\2\u01d2\u191c\3\2\2\2\u01d4\u191e\3\2\2\2\u01d6\u1920\3\2"+
		"\2\2\u01d8\u1922\3\2\2\2\u01da\u1941\3\2\2\2\u01dc\u1943\3\2\2\2\u01de"+
		"\u1953\3\2\2\2\u01e0\u1967\3\2\2\2\u01e2\u1974\3\2\2\2\u01e4\u198a\3\2"+
		"\2\2\u01e6\u1997\3\2\2\2\u01e8\u1999\3\2\2\2\u01ea\u199b\3\2\2\2\u01ec"+
		"\u19c1\3\2\2\2\u01ee\u19e5\3\2\2\2\u01f0\u19e7\3\2\2\2\u01f2\u19e9\3\2"+
		"\2\2\u01f4\u19eb\3\2\2\2\u01f6\u19ed\3\2\2\2\u01f8\u1a26\3\2\2\2\u01fa"+
		"\u1a3e\3\2\2\2\u01fc\u1a56\3\2\2\2\u01fe\u1a58\3\2\2\2\u0200\u1a5a\3\2"+
		"\2\2\u0202\u1a5c\3\2\2\2\u0204\u1a5e\3\2\2\2\u0206\u1a60\3\2\2\2\u0208"+
		"\u1a62\3\2\2\2\u020a\u1a64\3\2\2\2\u020c\u1a66\3\2\2\2\u020e\u1a80\3\2"+
		"\2\2\u0210\u1b01\3\2\2\2\u0212\u1b13\3\2\2\2\u0214\u1b1b\3\2\2\2\u0216"+
		"\u1b6a\3\2\2\2\u0218\u1b82\3\2\2\2\u021a\u1ba4\3\2\2\2\u021c\u1bb4\3\2"+
		"\2\2\u021e\u1bb6\3\2\2\2\u0220\u1bcc\3\2\2\2\u0222\u1be4\3\2\2\2\u0224"+
		"\u1bf4\3\2\2\2\u0226\u1c03\3\2\2\2\u0228\u1c5f\3\2\2\2\u022a\u1c61\3\2"+
		"\2\2\u022c\u1c71\3\2\2\2\u022e\u1c95\3\2\2\2\u0230\u1c97\3\2\2\2\u0232"+
		"\u1c99\3\2\2\2\u0234\u1cc4\3\2\2\2\u0236\u1cca\3\2\2\2\u0238\u1ccc\3\2"+
		"\2\2\u023a\u1cce\3\2\2\2\u023c\u1d15\3\2\2\2\u023e\u1d3c\3\2\2\2\u0240"+
		"\u1d4c\3\2\2\2\u0242\u1d4e\3\2\2\2\u0244\u1d50\3\2\2\2\u0246\u1d87\3\2"+
		"\2\2\u0248\u1d89\3\2\2\2\u024a\u1d8b\3\2\2\2\u024c\u1da6\3\2\2\2\u024e"+
		"\u1da8\3\2\2\2\u0250\u1daa\3\2\2\2\u0252\u1dd4\3\2\2\2\u0254\u1dd6\3\2"+
		"\2\2\u0256\u1e1c\3\2\2\2\u0258\u1e1e\3\2\2\2\u025a\u1e20\3\2\2\2\u025c"+
		"\u1e22\3\2\2\2\u025e\u1e40\3\2\2\2\u0260\u1e5a\3\2\2\2\u0262\u1e62\3\2"+
		"\2\2\u0264\u1e64\3\2\2\2\u0266\u1e83\3\2\2\2\u0268\u1e9a\3\2\2\2\u026a"+
		"\u1ebe\3\2\2\2\u026c\u1edb\3\2\2\2\u026e\u1edd\3\2\2\2\u0270\u1ef7\3\2"+
		"\2\2\u0272\u1ef9\3\2\2\2\u0274\u1f13\3\2\2\2\u0276\u1f1c\3\2\2\2\u0278"+
		"\u1fa7\3\2\2\2\u027a\u1fd5\3\2\2\2\u027c\u1fd7\3\2\2\2\u027e\u1fd9\3\2"+
		"\2\2\u0280\u1ffb\3\2\2\2\u0282\u201b\3\2\2\2\u0284\u201d\3\2\2\2\u0286"+
		"\u201f\3\2\2\2\u0288\u028b\5\16\b\2\u0289\u028b\5\b\5\2\u028a\u0288\3"+
		"\2\2\2\u028a\u0289\3\2\2\2\u028b\u028e\3\2\2\2\u028c\u028a\3\2\2\2\u028c"+
		"\u028d\3\2\2\2\u028d\u028f\3\2\2\2\u028e\u028c\3\2\2\2\u028f\u0290\7\2"+
		"\2\3\u0290\3\3\2\2\2\u0291\u029d\7\u0157\2\2\u0292\u029d\7\u0158\2\2\u0293"+
		"\u029d\7\u00c2\2\2\u0294\u029d\7\u00c3\2\2\u0295\u029d\7\u00eb\2\2\u0296"+
		"\u029d\7\u00ec\2\2\u0297\u029d\7\u0121\2\2\u0298\u029d\7\u0122\2\2\u0299"+
		"\u029a\7\13\2\2\u029a\u029b\7\u01ba\2\2\u029b\u029d\7\u01b5\2\2\u029c"+
		"\u0291\3\2\2\2\u029c\u0292\3\2\2\2\u029c\u0293\3\2\2\2\u029c\u0294\3\2"+
		"\2\2\u029c\u0295\3\2\2\2\u029c\u0296\3\2\2\2\u029c\u0297\3\2\2\2\u029c"+
		"\u0298\3\2\2\2\u029c\u0299\3\2\2\2\u029d\5\3\2\2\2\u029e\u02a1\7\u0191"+
		"\2\2\u029f\u02a1\5\4\3\2\u02a0\u029e\3\2\2\2\u02a0\u029f\3\2\2\2\u02a1"+
		"\7\3\2\2\2\u02a2\u02a9\7\u01ba\2\2\u02a3\u02a9\7\u01bb\2\2\u02a4\u02a9"+
		"\7\u01b9\2\2\u02a5\u02a9\7\u01a4\2\2\u02a6\u02a9\7\u01a5\2\2\u02a7\u02a9"+
		"\5\f\7\2\u02a8\u02a2\3\2\2\2\u02a8\u02a3\3\2\2\2\u02a8\u02a4\3\2\2\2\u02a8"+
		"\u02a5\3\2\2\2\u02a8\u02a6\3\2\2\2\u02a8\u02a7\3\2\2\2\u02a9\t\3\2\2\2"+
		"\u02aa\u02af\7\u01ba\2\2\u02ab\u02af\7\u01bb\2\2\u02ac\u02af\7\u01b9\2"+
		"\2\u02ad\u02af\5\f\7\2\u02ae\u02aa\3\2\2\2\u02ae\u02ab\3\2\2\2\u02ae\u02ac"+
		"\3\2\2\2\u02ae\u02ad\3\2\2\2\u02af\13\3\2\2\2\u02b0\u02b4\7\u019c\2\2"+
		"\u02b1\u02b3\n\2\2\2\u02b2\u02b1\3\2\2\2\u02b3\u02b6\3\2\2\2\u02b4\u02b2"+
		"\3\2\2\2\u02b4\u02b5\3\2\2\2\u02b5\u02b7\3\2\2\2\u02b6\u02b4\3\2\2\2\u02b7"+
		"\u02c1\7\u01bb\2\2\u02b8\u02bc\7\u019d\2\2\u02b9\u02bb\n\2\2\2\u02ba\u02b9"+
		"\3\2\2\2\u02bb\u02be\3\2\2\2\u02bc\u02ba\3\2\2\2\u02bc\u02bd\3\2\2\2\u02bd"+
		"\u02bf\3\2\2\2\u02be\u02bc\3\2\2\2\u02bf\u02c1\7\u01bb\2\2\u02c0\u02b0"+
		"\3\2\2\2\u02c0\u02b8\3\2\2\2\u02c1\r\3\2\2\2\u02c2\u02c4\5\u0190\u00c9"+
		"\2\u02c3\u02c5\5\u01ae\u00d8\2\u02c4\u02c3\3\2\2\2\u02c4\u02c5\3\2\2\2"+
		"\u02c5\u02c7\3\2\2\2\u02c6\u02c8\5\u00dco\2\u02c7\u02c6\3\2\2\2\u02c7"+
		"\u02c8\3\2\2\2\u02c8\u02ca\3\2\2\2\u02c9\u02cb\5\20\t\2\u02ca\u02c9\3"+
		"\2\2\2";
	private static final String _serializedATNSegment1 =
		"\u02ca\u02cb\3\2\2\2\u02cb\17\3\2\2\2\u02cc\u02ce\5\24\13\2\u02cd\u02cf"+
		"\5\30\r\2\u02ce\u02cd\3\2\2\2\u02ce\u02cf\3\2\2\2\u02cf\u02e8\3\2\2\2"+
		"\u02d0\u02d4\5\26\f\2\u02d1\u02d3\5\b\5\2\u02d2\u02d1\3\2\2\2\u02d3\u02d6"+
		"\3\2\2\2\u02d4\u02d2\3\2\2\2\u02d4\u02d5\3\2\2\2\u02d5\u02d8\3\2\2\2\u02d6"+
		"\u02d4\3\2\2\2\u02d7\u02d0\3\2\2\2\u02d8\u02db\3\2\2\2\u02d9\u02d7\3\2"+
		"\2\2\u02d9\u02da\3\2\2\2\u02da\u02e9\3\2\2\2\u02db\u02d9\3\2\2\2\u02dc"+
		"\u02e0\5\36\20\2\u02dd\u02df\5\b\5\2\u02de\u02dd\3\2\2\2\u02df\u02e2\3"+
		"\2\2\2\u02e0\u02de\3\2\2\2\u02e0\u02e1\3\2\2\2\u02e1\u02e4\3\2\2\2\u02e2"+
		"\u02e0\3\2\2\2\u02e3\u02dc\3\2\2\2\u02e4\u02e7\3\2\2\2\u02e5\u02e3\3\2"+
		"\2\2\u02e5\u02e6\3\2\2\2\u02e6\u02e9\3\2\2\2\u02e7\u02e5\3\2\2\2\u02e8"+
		"\u02d9\3\2\2\2\u02e8\u02e5\3\2\2\2\u02e9\u02f1\3\2\2\2\u02ea\u02ec\5\b"+
		"\5\2\u02eb\u02ea\3\2\2\2\u02ec\u02ef\3\2\2\2\u02ed\u02eb\3\2\2\2\u02ed"+
		"\u02ee\3\2\2\2\u02ee\u02f0\3\2\2\2\u02ef\u02ed\3\2\2\2\u02f0\u02f2\5\22"+
		"\n\2\u02f1\u02ed\3\2\2\2\u02f1\u02f2\3\2\2\2\u02f2\u0302\3\2\2\2\u02f3"+
		"\u02f5\5\b\5\2\u02f4\u02f3\3\2\2\2\u02f5\u02f8\3\2\2\2\u02f6\u02f4\3\2"+
		"\2\2\u02f6\u02f7\3\2\2\2\u02f7\u02f9\3\2\2\2\u02f8\u02f6\3\2\2\2\u02f9"+
		"\u02fd\5\62\32\2\u02fa\u02fc\5\b\5\2\u02fb\u02fa\3\2\2\2\u02fc\u02ff\3"+
		"\2\2\2\u02fd\u02fb\3\2\2\2\u02fd\u02fe\3\2\2\2\u02fe\u0301\3\2\2\2\u02ff"+
		"\u02fd\3\2\2\2\u0300\u02f6\3\2\2\2\u0301\u0304\3\2\2\2\u0302\u0300\3\2"+
		"\2\2\u0302\u0303\3\2\2\2\u0303\21\3\2\2\2\u0304\u0302\3\2\2\2\u0305\u0307"+
		"\7\4\2\2\u0306\u0308\5\b\5\2\u0307\u0306\3\2\2\2\u0308\u0309\3\2\2\2\u0309"+
		"\u0307\3\2\2\2\u0309\u030a\3\2\2\2\u030a\u030b\3\2\2\2\u030b\u0313\7\u011e"+
		"\2\2\u030c\u030e\5\b\5\2\u030d\u030c\3\2\2\2\u030e\u030f\3\2\2\2\u030f"+
		"\u030d\3\2\2\2\u030f\u0310\3\2\2\2\u0310\u0311\3\2\2\2\u0311\u0312\5\u0196"+
		"\u00cc\2\u0312\u0314\3\2\2\2\u0313\u030d\3\2\2\2\u0313\u0314\3\2\2\2\u0314"+
		"\u0318\3\2\2\2\u0315\u0317\5\b\5\2\u0316\u0315\3\2\2\2\u0317\u031a\3\2"+
		"\2\2\u0318\u0316\3\2\2\2\u0318\u0319\3\2\2\2\u0319\u031b\3\2\2\2\u031a"+
		"\u0318\3\2\2\2\u031b\u031f\7\u01b2\2\2\u031c\u031e\5\b\5\2\u031d\u031c"+
		"\3\2\2\2\u031e\u0321\3\2\2\2\u031f\u031d\3\2\2\2\u031f\u0320\3\2\2\2\u0320"+
		"\23\3\2\2\2\u0321\u031f\3\2\2\2\u0322\u0324\7\u011c\2\2\u0323\u0325\5"+
		"\b\5\2\u0324\u0323\3\2\2\2\u0325\u0326\3\2\2\2\u0326\u0324\3\2\2\2\u0326"+
		"\u0327\3\2\2\2\u0327\u0328\3\2\2\2\u0328\u0330\7z\2\2\u0329\u032b\5\b"+
		"\5\2\u032a\u0329\3\2\2\2\u032b\u032c\3\2\2\2\u032c\u032a\3\2\2\2\u032c"+
		"\u032d\3\2\2\2\u032d\u032e\3\2\2\2\u032e\u032f\5.\30\2\u032f\u0331\3\2"+
		"\2\2\u0330\u032a\3\2\2\2\u0330\u0331\3\2\2\2\u0331\u0339\3\2\2\2\u0332"+
		"\u0334\5\b\5\2\u0333\u0332\3\2\2\2\u0334\u0335\3\2\2\2\u0335\u0333\3\2"+
		"\2\2\u0335\u0336\3\2\2\2\u0336\u0337\3\2\2\2\u0337\u0338\5\60\31\2\u0338"+
		"\u033a\3\2\2\2\u0339\u0333\3\2\2\2\u0339\u033a\3\2\2\2\u033a\u033e\3\2"+
		"\2\2\u033b\u033d\5\b\5\2\u033c\u033b\3\2\2\2\u033d\u0340\3\2\2\2\u033e"+
		"\u033c\3\2\2\2\u033e\u033f\3\2\2\2\u033f\u0341\3\2\2\2\u0340\u033e\3\2"+
		"\2\2\u0341\u0345\7\u01b2\2\2\u0342\u0344\5\b\5\2\u0343\u0342\3\2\2\2\u0344"+
		"\u0347\3\2\2\2\u0345\u0343\3\2\2\2\u0345\u0346\3\2\2\2\u0346\25\3\2\2"+
		"\2\u0347\u0345\3\2\2\2\u0348\u0349\5(\25\2\u0349\27\3\2\2\2\u034a\u034e"+
		"\7\3\2\2\u034b\u034d\5\b\5\2\u034c\u034b\3\2\2\2\u034d\u0350\3\2\2\2\u034e"+
		"\u034c\3\2\2\2\u034e\u034f\3\2\2\2\u034f\u0351\3\2\2\2\u0350\u034e\3\2"+
		"\2\2\u0351\u0355\7\u01b2\2\2\u0352\u0354\5\b\5\2\u0353\u0352\3\2\2\2\u0354"+
		"\u0357\3\2\2\2\u0355\u0353\3\2\2\2\u0355\u0356\3\2\2\2\u0356\u035f\3\2"+
		"\2\2\u0357\u0355\3\2\2\2\u0358\u035c\5\32\16\2\u0359\u035b\5\b\5\2\u035a"+
		"\u0359\3\2\2\2\u035b\u035e\3\2\2\2\u035c\u035a\3\2\2\2\u035c\u035d\3\2"+
		"\2\2\u035d\u0360\3\2\2\2\u035e\u035c\3\2\2\2\u035f\u0358\3\2\2\2\u0360"+
		"\u0361\3\2\2\2\u0361\u035f\3\2\2\2\u0361\u0362\3\2\2\2\u0362\u0363\3\2"+
		"\2\2\u0363\u0365\7\4\2\2\u0364\u0366\5\b\5\2\u0365\u0364\3\2\2\2\u0366"+
		"\u0367\3\2\2\2\u0367\u0365\3\2\2\2\u0367\u0368\3\2\2\2\u0368\u0369\3\2"+
		"\2\2\u0369\u036d\7n\2\2\u036a\u036c\5\b\5\2\u036b\u036a\3\2\2\2\u036c"+
		"\u036f\3\2\2\2\u036d\u036b\3\2\2\2\u036d\u036e\3\2\2\2\u036e\u0370\3\2"+
		"\2\2\u036f\u036d\3\2\2\2\u0370\u0374\7\u01b2\2\2\u0371\u0373\5\b\5\2\u0372"+
		"\u0371\3\2\2\2\u0373\u0376\3\2\2\2\u0374\u0372\3\2\2\2\u0374\u0375\3\2"+
		"\2\2\u0375\31\3\2\2\2\u0376\u0374\3\2\2\2\u0377\u0378\5(\25\2\u0378\u0382"+
		"\5\"\22\2\u0379\u037b\5\b\5\2\u037a\u0379\3\2\2\2\u037b\u037c\3\2\2\2"+
		"\u037c\u037a\3\2\2\2\u037c\u037d\3\2\2\2\u037d\u037e\3\2\2\2\u037e\u037f"+
		"\5\34\17\2\u037f\u0381\3\2\2\2\u0380\u037a\3\2\2\2\u0381\u0384\3\2\2\2"+
		"\u0382\u0380\3\2\2\2\u0382\u0383\3\2\2\2\u0383\33\3\2\2\2\u0384\u0382"+
		"\3\2\2\2\u0385\u0386\5\36\20\2\u0386\35\3\2\2\2\u0387\u038b\5*\26\2\u0388"+
		"\u038a\5\b\5\2\u0389\u0388\3\2\2\2\u038a\u038d\3\2\2\2\u038b\u0389\3\2"+
		"\2\2\u038b\u038c\3\2\2\2\u038c\u038e\3\2\2\2\u038d\u038b\3\2\2\2\u038e"+
		"\u0392\7\u01b2\2\2\u038f\u0391\5\b\5\2\u0390\u038f\3\2\2\2\u0391\u0394"+
		"\3\2\2\2\u0392\u0390\3\2\2\2\u0392\u0393\3\2\2\2\u0393\u039e\3\2\2\2\u0394"+
		"\u0392\3\2\2\2\u0395\u0399\5 \21\2\u0396\u0398\5\b\5\2\u0397\u0396\3\2"+
		"\2\2\u0398\u039b\3\2\2\2\u0399\u0397\3\2\2\2\u0399\u039a\3\2\2\2\u039a"+
		"\u039d\3\2\2\2\u039b\u0399\3\2\2\2\u039c\u0395\3\2\2\2\u039d\u03a0\3\2"+
		"\2\2\u039e\u039c\3\2\2\2\u039e\u039f\3\2\2\2\u039f\37\3\2\2\2\u03a0\u039e"+
		"\3\2\2\2\u03a1\u03a5\5\64\33\2\u03a2\u03a4\5\b\5\2\u03a3\u03a2\3\2\2\2"+
		"\u03a4\u03a7\3\2\2\2\u03a5\u03a3\3\2\2\2\u03a5\u03a6\3\2\2\2\u03a6\u03a9"+
		"\3\2\2\2\u03a7\u03a5\3\2\2\2\u03a8\u03a1\3\2\2\2\u03a9\u03aa\3\2\2\2\u03aa"+
		"\u03a8\3\2\2\2\u03aa\u03ab\3\2\2\2\u03ab\u03b9\3\2\2\2\u03ac\u03ae\5\b"+
		"\5\2\u03ad\u03ac\3\2\2\2\u03ae\u03b1\3\2\2\2\u03af\u03ad\3\2\2\2\u03af"+
		"\u03b0\3\2\2\2\u03b0\u03b2\3\2\2\2\u03b1\u03af\3\2\2\2\u03b2\u03b6\7\u01b2"+
		"\2\2\u03b3\u03b5\5\b\5\2\u03b4\u03b3\3\2\2\2\u03b5\u03b8\3\2\2\2\u03b6"+
		"\u03b4\3\2\2\2\u03b6\u03b7\3\2\2\2\u03b7\u03ba\3\2\2\2\u03b8\u03b6\3\2"+
		"\2\2\u03b9\u03af\3\2\2\2\u03b9\u03ba\3\2\2\2\u03ba!\3\2\2\2\u03bb\u03c3"+
		"\7\u0183\2\2\u03bc\u03be\5\b\5\2\u03bd\u03bc\3\2\2\2\u03be\u03bf\3\2\2"+
		"\2\u03bf\u03bd\3\2\2\2\u03bf\u03c0\3\2\2\2\u03c0\u03c1\3\2\2\2\u03c1\u03c2"+
		"\7\u00bc\2\2\u03c2\u03c4\3\2\2\2\u03c3\u03bd\3\2\2\2\u03c3\u03c4\3\2\2"+
		"\2\u03c4\u03c6\3\2\2\2\u03c5\u03c7\5\b\5\2\u03c6\u03c5\3\2\2\2\u03c7\u03c8"+
		"\3\2\2\2\u03c8\u03c6\3\2\2\2\u03c8\u03c9\3\2\2\2\u03c9\u040a\3\2\2\2\u03ca"+
		"\u03d2\7\n\2\2\u03cb\u03cd\5\b\5\2\u03cc\u03cb\3\2\2\2\u03cd\u03ce\3\2"+
		"\2\2\u03ce\u03cc\3\2\2\2\u03ce\u03cf\3\2\2\2\u03cf\u03d0\3\2\2\2\u03d0"+
		"\u03d1\7\u015a\2\2\u03d1\u03d3\3\2\2\2\u03d2\u03cc\3\2\2\2\u03d2\u03d3"+
		"\3\2\2\2\u03d3\u03d5\3\2\2\2\u03d4\u03d6\5\b\5\2\u03d5\u03d4\3\2\2\2\u03d6"+
		"\u03d7\3\2\2\2\u03d7\u03d5\3\2\2\2\u03d7\u03d8\3\2\2\2\u03d8\u03d9\3\2"+
		"\2\2\u03d9\u03db\t\3\2\2\u03da\u03dc\5\b\5\2\u03db\u03da\3\2\2\2\u03dc"+
		"\u03dd\3\2\2\2\u03dd\u03db\3\2\2\2\u03dd\u03de\3\2\2\2\u03de\u03df\3\2"+
		"\2\2\u03df\u03e7\7\u011c\2\2\u03e0\u03e2\5\b\5\2\u03e1\u03e0\3\2\2\2\u03e2"+
		"\u03e3\3\2\2\2\u03e3\u03e1\3\2\2\2\u03e3\u03e4\3\2\2\2\u03e4\u03e5\3\2"+
		"\2\2\u03e5\u03e6\7\u0102\2\2\u03e6\u03e8\3\2\2\2\u03e7\u03e1\3\2\2\2\u03e7"+
		"\u03e8\3\2\2\2\u03e8\u03ea\3\2\2\2\u03e9\u03eb\5\b\5\2\u03ea\u03e9\3\2"+
		"\2\2\u03eb\u03ec\3\2\2\2\u03ec\u03ea\3\2\2\2\u03ec\u03ed\3\2\2\2\u03ed"+
		"\u03ee\3\2\2\2\u03ee\u03f2\5&\24\2\u03ef\u03f1\5\b\5\2\u03f0\u03ef\3\2"+
		"\2\2\u03f1\u03f4\3\2\2\2\u03f2\u03f0\3\2\2\2\u03f2\u03f3\3\2\2\2\u03f3"+
		"\u03f5\3\2\2\2\u03f4\u03f2\3\2\2\2\u03f5\u03f9\7\u01b2\2\2\u03f6\u03f8"+
		"\5\b\5\2\u03f7\u03f6\3\2\2\2\u03f8\u03fb\3\2\2\2\u03f9\u03f7\3\2\2\2\u03f9"+
		"\u03fa\3\2\2\2\u03fa\u040b\3\2\2\2\u03fb\u03f9\3\2\2\2\u03fc\u03fe\7%"+
		"\2\2\u03fd\u03ff\5\b\5\2\u03fe\u03fd\3\2\2\2\u03ff\u0400\3\2\2\2\u0400"+
		"\u03fe\3\2\2\2\u0400\u0401\3\2\2\2\u0401\u0402\3\2\2\2\u0402\u0404\7\u0133"+
		"\2\2\u0403\u0405\5\b\5\2\u0404\u0403\3\2\2\2\u0405\u0406\3\2\2\2\u0406"+
		"\u0404\3\2\2\2\u0406\u0407\3\2\2\2\u0407\u0408\3\2\2\2\u0408\u0409\5$"+
		"\23\2\u0409\u040b\3\2\2\2\u040a\u03ca\3\2\2\2\u040a\u03fc\3\2\2\2\u040b"+
		"\u040f\3\2\2\2\u040c\u040e\5\b\5\2\u040d\u040c\3\2\2\2\u040e\u0411\3\2"+
		"\2\2\u040f\u040d\3\2\2\2\u040f\u0410\3\2\2\2\u0410\u0412\3\2\2\2\u0411"+
		"\u040f\3\2\2\2\u0412\u0416\7\u01b2\2\2\u0413\u0415\5\b\5\2\u0414\u0413"+
		"\3\2\2\2\u0415\u0418\3\2\2\2\u0416\u0414\3\2\2\2\u0416\u0417\3\2\2\2\u0417"+
		"#\3\2\2\2\u0418\u0416\3\2\2\2\u0419\u041a\5\u01ce\u00e8\2\u041a%\3\2\2"+
		"\2\u041b\u0425\5\u0238\u011d\2\u041c\u041e\5\b\5\2\u041d\u041c\3\2\2\2"+
		"\u041e\u041f\3\2\2\2\u041f\u041d\3\2\2\2\u041f\u0420\3\2\2\2\u0420\u0421"+
		"\3\2\2\2\u0421\u0422\5\u0238\u011d\2\u0422\u0424\3\2\2\2\u0423\u041d\3"+
		"\2\2\2\u0424\u0427\3\2\2\2\u0425\u0423\3\2\2\2\u0425\u0426\3\2\2\2\u0426"+
		"\u042d\3\2\2\2\u0427\u0425\3\2\2\2\u0428\u042d\7\u00d0\2\2\u0429\u042d"+
		"\7\u0108\2\2\u042a\u042d\7\u00d7\2\2\u042b\u042d\7\u00a4\2\2\u042c\u041b"+
		"\3\2\2\2\u042c\u0428\3\2\2\2\u042c\u0429\3\2\2\2\u042c\u042a\3\2\2\2\u042c"+
		"\u042b\3\2\2\2\u042d\'\3\2\2\2\u042e\u0430\5,\27\2\u042f\u0431\5\b\5\2"+
		"\u0430\u042f\3\2\2\2\u0431\u0432\3\2\2\2\u0432\u0430\3\2\2\2\u0432\u0433"+
		"\3\2\2\2\u0433\u0434\3\2\2\2\u0434\u043c\7\u0147\2\2\u0435\u0437\5\b\5"+
		"\2\u0436\u0435\3\2\2\2\u0437\u0438\3\2\2\2\u0438\u0436\3\2\2\2\u0438\u0439"+
		"\3\2\2\2\u0439\u043a\3\2\2\2\u043a\u043b\5\u01c8\u00e5\2\u043b\u043d\3"+
		"\2\2\2\u043c\u0436\3\2\2\2\u043c\u043d\3\2\2\2\u043d\u0441\3\2\2\2\u043e"+
		"\u0440\5\b\5\2\u043f\u043e\3\2\2\2\u0440\u0443\3\2\2\2\u0441\u043f\3\2"+
		"\2\2\u0441\u0442\3\2\2\2\u0442\u0444\3\2\2\2\u0443\u0441\3\2\2\2\u0444"+
		"\u0448\7\u01b2\2\2\u0445\u0447\5\b\5\2\u0446\u0445\3\2\2\2\u0447\u044a"+
		"\3\2\2\2\u0448\u0446\3\2\2\2\u0448\u0449\3\2\2\2\u0449)\3\2\2\2\u044a"+
		"\u0448\3\2\2\2\u044b\u044c\7\u01b8\2\2\u044c+\3\2\2\2\u044d\u044e\7\u01b8"+
		"\2\2\u044e-\3\2\2\2\u044f\u0451\7\u0184\2\2\u0450\u0452\5\b\5\2\u0451"+
		"\u0450\3\2\2\2\u0452\u0453\3\2\2\2\u0453\u0451\3\2\2\2\u0453\u0454\3\2"+
		"\2\2\u0454\u0455\3\2\2\2\u0455\u045f\5\u01ce\u00e8\2\u0456\u0458\5\b\5"+
		"\2\u0457\u0456\3\2\2\2\u0458\u0459\3\2\2\2\u0459\u0457\3\2\2\2\u0459\u045a"+
		"\3\2\2\2\u045a\u045b\3\2\2\2\u045b\u045c\5\u01ce\u00e8\2\u045c\u045e\3"+
		"\2\2\2\u045d\u0457\3\2\2\2\u045e\u0461\3\2\2\2\u045f\u045d\3\2\2\2\u045f"+
		"\u0460\3\2\2\2\u0460/\3\2\2\2\u0461\u045f\3\2\2\2\u0462\u0464\7\u00bb"+
		"\2\2\u0463\u0465\5\b\5\2\u0464\u0463\3\2\2\2\u0465\u0466\3\2\2\2\u0466"+
		"\u0464\3\2\2\2\u0466\u0467\3\2\2\2\u0467\u0468\3\2\2\2\u0468\u0469\5\u01ce"+
		"\u00e8\2\u0469\61\3\2\2\2\u046a\u046e\5\u025e\u0130\2\u046b\u046d\5\b"+
		"\5\2\u046c\u046b\3\2\2\2\u046d\u0470\3\2\2\2\u046e\u046c\3\2\2\2\u046e"+
		"\u046f\3\2\2\2\u046f\u0471\3\2\2\2\u0470\u046e\3\2\2\2\u0471\u0472\7\u01b2"+
		"\2\2\u0472\u047e\3\2\2\2\u0473\u0477\5\u0266\u0134\2\u0474\u0476\5\b\5"+
		"\2\u0475\u0474\3\2\2\2\u0476\u0479\3\2\2\2\u0477\u0475\3\2\2\2\u0477\u0478"+
		"\3\2\2\2\u0478\u047a\3\2\2\2\u0479\u0477\3\2\2\2\u047a\u047b\7\u01b2\2"+
		"\2\u047b\u047e\3\2\2\2\u047c\u047e\5\b\5\2\u047d\u046a\3\2\2\2\u047d\u0473"+
		"\3\2\2\2\u047d\u047c\3\2\2\2\u047e\63\3\2\2\2\u047f\u0493\5\u00a0Q\2\u0480"+
		"\u0493\5\u009aN\2\u0481\u0493\5\u0094K\2\u0482\u0493\5\u0086D\2\u0483"+
		"\u0493\5\u0084C\2\u0484\u0493\5\u0080A\2\u0485\u0493\5~@\2\u0486\u0493"+
		"\5|?\2\u0487\u0493\5z>\2\u0488\u0493\5^\60\2\u0489\u0493\5T+\2\u048a\u0493"+
		"\5N(\2\u048b\u0493\5J&\2\u048c\u0493\5F$\2\u048d\u0493\5H%\2\u048e\u0493"+
		"\5B\"\2\u048f\u0493\5@!\2\u0490\u0493\5> \2\u0491\u0493\5\66\34\2\u0492"+
		"\u047f\3\2\2\2\u0492\u0480\3\2\2\2\u0492\u0481\3\2\2\2\u0492\u0482\3\2"+
		"\2\2\u0492\u0483\3\2\2\2\u0492\u0484\3\2\2\2\u0492\u0485\3\2\2\2\u0492"+
		"\u0486\3\2\2\2\u0492\u0487\3\2\2\2\u0492\u0488\3\2\2\2\u0492\u0489\3\2"+
		"\2\2\u0492\u048a\3\2\2\2\u0492\u048b\3\2\2\2\u0492\u048c\3\2\2\2\u0492"+
		"\u048d\3\2\2\2\u0492\u048e\3\2\2\2\u0492\u048f\3\2\2\2\u0492\u0490\3\2"+
		"\2\2\u0492\u0491\3\2\2\2\u0493\65\3\2\2\2\u0494\u049c\7\u00ce\2\2\u0495"+
		"\u0497\5\b\5\2\u0496\u0495\3\2\2\2\u0497\u0498\3\2\2\2\u0498\u0496\3\2"+
		"\2\2\u0498\u0499\3\2\2\2\u0499\u049a\3\2\2\2\u049a\u049b\5<\37\2\u049b"+
		"\u049d\3\2\2\2\u049c\u0496\3\2\2\2\u049d\u049e\3\2\2\2\u049e\u049c\3\2"+
		"\2\2\u049e\u049f\3\2\2\2\u049f\u04a9\3\2\2\2\u04a0\u04a2\5\b\5\2\u04a1"+
		"\u04a0\3\2\2\2\u04a2\u04a3\3\2\2\2\u04a3\u04a1\3\2\2\2\u04a3\u04a4\3\2"+
		"\2\2\u04a4\u04a5\3\2\2\2\u04a5\u04a6\58\35\2\u04a6\u04a8\3\2\2\2\u04a7"+
		"\u04a1\3\2\2\2\u04a8\u04ab\3\2\2\2\u04a9\u04a7\3\2\2\2\u04a9\u04aa\3\2"+
		"\2\2\u04aa\67\3\2\2\2\u04ab\u04a9\3\2\2\2\u04ac\u04c8\7\u0131\2\2\u04ad"+
		"\u04af\5\b\5\2\u04ae\u04ad\3\2\2\2\u04af\u04b0\3\2\2\2\u04b0\u04ae\3\2"+
		"\2\2\u04b0\u04b1\3\2\2\2\u04b1\u04b2\3\2\2\2\u04b2\u04b4\t\4\2\2\u04b3"+
		"\u04b5\5\b\5\2\u04b4\u04b3\3\2\2\2\u04b5\u04b6\3\2\2\2\u04b6\u04b4\3\2"+
		"\2\2\u04b6\u04b7\3\2\2\2\u04b7\u04be\3\2\2\2\u04b8\u04ba\7e\2\2\u04b9"+
		"\u04bb\5\b\5\2\u04ba\u04b9\3\2\2\2\u04bb\u04bc\3\2\2\2\u04bc\u04ba\3\2"+
		"\2\2\u04bc\u04bd\3\2\2\2\u04bd\u04bf\3\2\2\2\u04be\u04b8\3\2\2\2\u04be"+
		"\u04bf\3\2\2\2\u04bf\u04c0\3\2\2\2\u04c0\u04c2\7\62\2\2\u04c1\u04c3\5"+
		"\b\5\2\u04c2\u04c1\3\2\2\2\u04c3\u04c4\3\2\2\2\u04c4\u04c2\3\2\2\2\u04c4"+
		"\u04c5\3\2\2\2\u04c5\u04c6\3\2\2\2\u04c6\u04c7\5:\36\2\u04c7\u04c9\3\2"+
		"\2\2\u04c8\u04ae\3\2\2\2\u04c9\u04ca\3\2\2\2\u04ca\u04c8\3\2\2\2\u04ca"+
		"\u04cb\3\2\2\2\u04cb9\3\2\2\2\u04cc\u04cf\5\u01ce\u00e8\2\u04cd\u04cf"+
		"\5\u0260\u0131\2\u04ce\u04cc\3\2\2\2\u04ce\u04cd\3\2\2\2\u04cf;\3\2\2"+
		"\2\u04d0\u04d1\5\u01ce\u00e8\2\u04d1=\3\2\2\2\u04d2\u04d4\7\u00f3\2\2"+
		"\u04d3\u04d5\5\b\5\2\u04d4\u04d3\3\2\2\2\u04d5\u04d6\3\2\2\2\u04d6\u04d4"+
		"\3\2\2\2\u04d6\u04d7\3\2\2\2\u04d7\u04de\3\2\2\2\u04d8\u04da\t\5\2\2\u04d9"+
		"\u04db\5\b\5\2\u04da\u04d9\3\2\2\2\u04db\u04dc\3\2\2\2\u04dc\u04da\3\2"+
		"\2\2\u04dc\u04dd\3\2\2\2\u04dd\u04df\3\2\2\2\u04de\u04d8\3\2\2\2\u04de"+
		"\u04df\3\2\2\2\u04df\u04e0\3\2\2\2\u04e0\u04e2\5h\65\2\u04e1\u04e3\5\b"+
		"\5\2\u04e2\u04e1\3\2\2\2\u04e3\u04e4\3\2\2\2\u04e4\u04e2\3\2\2\2\u04e4"+
		"\u04e5\3\2\2\2\u04e5\u04e6\3\2\2\2\u04e6\u04e8\7\u0175\2\2\u04e7\u04e9"+
		"\5\b\5\2\u04e8\u04e7\3\2\2\2\u04e9\u04ea\3\2\2\2\u04ea\u04e8\3\2\2\2\u04ea"+
		"\u04eb\3\2\2\2\u04eb\u04ec\3\2\2\2\u04ec\u04ed\5\u00d0i\2\u04ed?\3\2\2"+
		"\2\u04ee\u04f0\7\u00c8\2\2\u04ef\u04f1\5\b\5\2\u04f0\u04ef\3\2\2\2\u04f1"+
		"\u04f2\3\2\2\2\u04f2\u04f0\3\2\2\2\u04f2\u04f3\3\2\2\2\u04f3\u04f4\3\2"+
		"\2\2\u04f4\u04fc\5\u0266\u0134\2\u04f5\u04f7\5\b\5\2\u04f6\u04f5\3\2\2"+
		"\2\u04f7\u04f8\3\2\2\2\u04f8\u04f6\3\2\2\2\u04f8\u04f9\3\2\2\2\u04f9\u04fa"+
		"\3\2\2\2\u04fa\u04fb\7\u0196\2\2\u04fb\u04fd\3\2\2\2\u04fc\u04f6\3\2\2"+
		"\2\u04fc\u04fd\3\2\2\2\u04fd\u04ff\3\2\2\2\u04fe\u0500\5\b\5\2\u04ff\u04fe"+
		"\3\2\2\2\u0500\u0501\3\2\2\2\u0501\u04ff\3\2\2\2\u0501\u0502\3\2\2\2\u0502"+
		"\u050c\3\2\2\2\u0503\u050d\5 \21\2\u0504\u0506\7\u00f8\2\2\u0505\u0507"+
		"\5\b\5\2\u0506\u0505\3\2\2\2\u0507\u0508\3\2\2\2\u0508\u0506\3\2\2\2\u0508"+
		"\u0509\3\2\2\2\u0509\u050a\3\2\2\2\u050a\u050b\7\u0197\2\2\u050b\u050d"+
		"\3\2\2\2\u050c\u0503\3\2\2\2\u050c\u0504\3\2\2\2\u050d\u0524\3\2\2\2\u050e"+
		"\u0510\5\b\5\2\u050f\u050e\3\2\2\2\u0510\u0511\3\2\2\2\u0511\u050f\3\2"+
		"\2\2\u0511\u0512\3\2\2\2\u0512\u0513\3\2\2\2\u0513\u0515\7\u0198\2\2\u0514"+
		"\u0516\5\b\5\2\u0515\u0514\3\2\2\2\u0516\u0517\3\2\2\2\u0517\u0515\3\2"+
		"\2\2\u0517\u0518\3\2\2\2\u0518\u0522\3\2\2\2\u0519\u0523\5 \21\2\u051a"+
		"\u051c\7\u00f8\2\2\u051b\u051d\5\b\5\2\u051c\u051b\3\2\2\2\u051d\u051e"+
		"\3\2\2\2\u051e\u051c\3\2\2\2\u051e\u051f\3\2\2\2\u051f\u0520\3\2\2\2\u0520"+
		"\u0521\7\u0197\2\2\u0521\u0523\3\2\2\2\u0522\u0519\3\2\2\2\u0522\u051a"+
		"\3\2\2\2\u0523\u0525\3\2\2\2\u0524\u050f\3\2\2\2\u0524\u0525\3\2\2\2\u0525"+
		"\u052d\3\2\2\2\u0526\u0528\5\b\5\2\u0527\u0526\3\2\2\2\u0528\u0529\3\2"+
		"\2\2\u0529\u0527\3\2\2\2\u0529\u052a\3\2\2\2\u052a\u052b\3\2\2\2\u052b"+
		"\u052c\7\u008a\2\2\u052c\u052e\3\2\2\2\u052d\u0527\3\2\2\2\u052d\u052e"+
		"\3\2\2\2\u052eA\3\2\2\2\u052f\u0531\7\u00ba\2\2\u0530\u0532\5\b\5\2\u0531"+
		"\u0530\3\2\2\2\u0532\u0533\3\2\2\2\u0533\u0531\3\2\2\2\u0533\u0534\3\2"+
		"\2\2\u0534\u0535\3\2\2\2\u0535\u0536\5D#\2\u0536C\3\2\2\2\u0537\u0538"+
		"\5\u01ce\u00e8\2\u0538E\3\2\2\2\u0539\u053a\7\u00a3\2\2\u053aG\3\2\2\2"+
		"\u053b\u053d\7\u00a3\2\2\u053c\u053e\5\b\5\2\u053d\u053c\3\2\2\2\u053e"+
		"\u053f\3\2\2\2\u053f\u053d\3\2\2\2\u053f\u0540\3\2\2\2\u0540\u0541\3\2"+
		"\2\2\u0541\u0542\7\u011e\2\2\u0542I\3\2\2\2\u0543\u054b\7\u00bd\2\2\u0544"+
		"\u0546\5\b\5\2\u0545\u0544\3\2\2\2\u0546\u0547\3\2\2\2\u0547\u0545\3\2"+
		"\2\2\u0547\u0548\3\2\2\2\u0548\u0549\3\2\2\2\u0549\u054a\7\u0175\2\2\u054a"+
		"\u054c\3\2\2\2\u054b\u0545\3\2\2\2\u054b\u054c\3\2\2\2\u054c\u0554\3\2"+
		"\2\2\u054d\u054f\5\b\5\2\u054e\u054d\3\2\2\2\u054f\u0550\3\2\2\2\u0550"+
		"\u054e\3\2\2\2\u0550\u0551\3\2\2\2\u0551\u0552\3\2\2\2\u0552\u0553\5L"+
		"\'\2\u0553\u0555\3\2\2\2\u0554\u054e\3\2\2\2\u0554\u0555\3\2\2\2\u0555"+
		"\u057b\3\2\2\2\u0556\u055e\7\u00bd\2\2\u0557\u0559\5\b\5\2\u0558\u0557"+
		"\3\2\2\2\u0559\u055a\3\2\2\2\u055a\u0558\3\2\2\2\u055a\u055b\3\2\2\2\u055b"+
		"\u055c\3\2\2\2\u055c\u055d\7\u0175\2\2\u055d\u055f\3\2\2\2\u055e\u0558"+
		"\3\2\2\2\u055e\u055f\3\2\2\2\u055f\u0567\3\2\2\2\u0560\u0562\5\b\5\2\u0561"+
		"\u0560\3\2\2\2\u0562\u0563\3\2\2\2\u0563\u0561\3\2\2\2\u0563\u0564\3\2"+
		"\2\2\u0564\u0565\3\2\2\2\u0565\u0566\5L\'\2\u0566\u0568\3\2\2\2\u0567"+
		"\u0561\3\2\2\2\u0568\u0569\3\2\2\2\u0569\u0567\3\2\2\2\u0569\u056a\3\2"+
		"\2\2\u056a\u056b\3\2\2\2\u056b\u056d\7s\2\2\u056c\u056e\5\b\5\2\u056d"+
		"\u056c\3\2\2\2\u056e\u056f\3\2\2\2\u056f\u056d\3\2\2\2\u056f\u0570\3\2"+
		"\2\2\u0570\u0571\3\2\2\2\u0571\u0572\7\u0102\2\2\u0572\u0574\3\2\2\2\u0573"+
		"\u0575\5\b\5\2\u0574\u0573\3\2\2\2\u0575\u0576\3\2\2\2\u0576\u0574\3\2"+
		"\2\2\u0576\u0577\3\2\2\2\u0577\u0578\3\2\2\2\u0578\u0579\5\u01ce\u00e8"+
		"\2\u0579\u057b\3\2\2\2\u057a\u0543\3\2\2\2\u057a\u0556\3\2\2\2\u057bK"+
		"\3\2\2\2\u057c\u057d\7\u01b8\2\2\u057dM\3\2\2\2\u057e\u0580\7\u009f\2"+
		"\2\u057f\u0581\5\b\5\2\u0580\u057f\3\2\2\2\u0581\u0582\3\2\2\2\u0582\u0580"+
		"\3\2\2\2\u0582\u0583\3\2\2\2\u0583\u0584\3\2\2\2\u0584\u0597\5R*\2\u0585"+
		"\u0587\5\b\5\2\u0586\u0585\3\2\2\2\u0587\u0588\3\2\2\2\u0588\u0586\3\2"+
		"\2\2\u0588\u0589\3\2\2\2\u0589\u058a\3\2\2\2\u058a\u058b\7\21\2\2\u058b"+
		"\u058d\3\2\2\2\u058c\u0586\3\2\2\2\u058c\u058d\3\2\2\2\u058d\u058f\3\2"+
		"\2\2\u058e\u0590\5\b\5\2\u058f\u058e\3\2\2\2\u0590\u0591\3\2\2\2\u0591"+
		"\u058f\3\2\2\2\u0591\u0592\3\2\2\2\u0592\u0593\3\2\2\2\u0593\u0594\5R"+
		"*\2\u0594\u0596\3\2\2\2\u0595\u058c\3\2\2\2\u0596\u0599\3\2\2\2\u0597"+
		"\u0595\3\2\2\2\u0597\u0598\3\2\2\2\u0598\u05c2\3\2\2\2\u0599\u0597\3\2"+
		"\2\2\u059a\u059c\5\b\5\2\u059b\u059a\3\2\2\2\u059c\u059d\3\2\2\2\u059d"+
		"\u059b\3\2\2\2\u059d\u059e\3\2\2\2\u059e\u059f\3\2\2\2\u059f\u05a1\7\u0189"+
		"\2\2\u05a0\u05a2\5\b\5\2\u05a1\u05a0\3\2\2\2\u05a2\u05a3\3\2\2\2\u05a3"+
		"\u05a1\3\2\2\2\u05a3\u05a4\3\2\2\2\u05a4\u05a5\3\2\2\2\u05a5\u05b8\5P"+
		")\2\u05a6\u05a8\5\b\5\2\u05a7\u05a6\3\2\2\2\u05a8\u05a9\3\2\2\2\u05a9"+
		"\u05a7\3\2\2\2\u05a9\u05aa\3\2\2\2\u05aa\u05ab\3\2\2\2\u05ab\u05ac\7\21"+
		"\2\2\u05ac\u05ae\3\2\2\2\u05ad\u05a7\3\2\2\2\u05ad\u05ae\3\2\2\2\u05ae"+
		"\u05b0\3\2\2\2\u05af\u05b1\5\b\5\2\u05b0\u05af\3\2\2\2\u05b1\u05b2\3\2"+
		"\2\2\u05b2\u05b0\3\2\2\2\u05b2\u05b3\3\2\2\2\u05b3\u05b4\3\2\2\2\u05b4"+
		"\u05b5\5P)\2\u05b5\u05b7\3\2\2\2\u05b6\u05ad\3\2\2\2\u05b7\u05ba\3\2\2"+
		"\2\u05b8\u05b6\3\2\2\2\u05b8\u05b9\3\2\2\2\u05b9\u05bc\3\2\2\2\u05ba\u05b8"+
		"\3\2\2\2\u05bb\u05bd\5\b\5\2\u05bc\u05bb\3\2\2\2\u05bd\u05be\3\2\2\2\u05be"+
		"\u05bc\3\2\2\2\u05be\u05bf\3\2\2\2\u05bf\u05c0\3\2\2\2\u05c0\u05c1\5 "+
		"\21\2\u05c1\u05c3\3\2\2\2\u05c2\u059b\3\2\2\2\u05c3\u05c4\3\2\2\2\u05c4"+
		"\u05c2\3\2\2\2\u05c4\u05c5\3\2\2\2\u05c5\u05d9\3\2\2\2\u05c6\u05c8\5\b"+
		"\5\2\u05c7\u05c6\3\2\2\2\u05c8\u05c9\3\2\2\2\u05c9\u05c7\3\2\2\2\u05c9"+
		"\u05ca\3\2\2\2\u05ca\u05cb\3\2\2\2\u05cb\u05cd\7\u0189\2\2\u05cc\u05ce"+
		"\5\b\5\2\u05cd\u05cc\3\2\2\2\u05ce\u05cf\3\2\2\2\u05cf\u05cd\3\2\2\2\u05cf"+
		"\u05d0\3\2\2\2\u05d0\u05d1\3\2\2\2\u05d1\u05d3\7\u0194\2\2\u05d2\u05d4"+
		"\5\b\5\2\u05d3\u05d2\3\2\2\2\u05d4\u05d5\3\2\2\2\u05d5\u05d3\3\2\2\2\u05d5"+
		"\u05d6\3\2\2\2\u05d6\u05d7\3\2\2\2\u05d7\u05d8\5 \21\2\u05d8\u05da\3\2"+
		"\2\2\u05d9\u05c7\3\2\2\2\u05d9\u05da\3\2\2\2\u05da\u05e2\3\2\2\2\u05db"+
		"\u05dd\5\b\5\2\u05dc\u05db\3\2\2\2\u05dd\u05de\3\2\2\2\u05de\u05dc\3\2"+
		"\2\2\u05de\u05df\3\2\2\2\u05df\u05e0\3\2\2\2\u05e0\u05e1\7\u0089\2\2\u05e1"+
		"\u05e3\3\2\2\2\u05e2\u05dc\3\2\2\2\u05e2\u05e3\3\2\2\2\u05e3O\3\2\2\2"+
		"\u05e4\u0601\5\u0266\u0134\2\u05e5\u05e7\7\u00fa\2\2\u05e6\u05e8\5\b\5"+
		"\2\u05e7\u05e6\3\2\2\2\u05e8\u05e9\3\2\2\2\u05e9\u05e7\3\2\2\2\u05e9\u05ea"+
		"\3\2\2\2\u05ea\u05ec\3\2\2\2\u05eb\u05e5\3\2\2\2\u05eb\u05ec\3\2\2\2\u05ec"+
		"\u05ed\3\2\2\2\u05ed\u05fb\5\u025e\u0130\2\u05ee\u05f0\5\b\5\2\u05ef\u05ee"+
		"\3\2\2\2\u05f0\u05f1\3\2\2\2\u05f1\u05ef\3\2\2\2\u05f1\u05f2\3\2\2\2\u05f2"+
		"\u05f3\3\2\2\2\u05f3\u05f5\t\6\2\2\u05f4\u05f6\5\b\5\2\u05f5\u05f4\3\2"+
		"\2\2\u05f6\u05f7\3\2\2\2\u05f7\u05f5\3\2\2\2\u05f7\u05f8\3\2\2\2\u05f8"+
		"\u05f9\3\2\2\2\u05f9\u05fa\5\u025e\u0130\2\u05fa\u05fc\3\2\2\2\u05fb\u05ef"+
		"\3\2\2\2\u05fb\u05fc\3\2\2\2\u05fc\u0601\3\2\2\2\u05fd\u0601\7\u0195\2"+
		"\2\u05fe\u0601\7\u0178\2\2\u05ff\u0601\7\u00a8\2\2\u0600\u05e4\3\2\2\2"+
		"\u0600\u05eb\3\2\2\2\u0600\u05fd\3\2\2\2\u0600\u05fe\3\2\2\2\u0600\u05ff"+
		"\3\2\2\2\u0601Q\3\2\2\2\u0602\u0607\5\u025e\u0130\2\u0603\u0607\5\u0266"+
		"\u0134\2\u0604\u0607\7\u0178\2\2\u0605\u0607\7\u00a8\2\2\u0606\u0602\3"+
		"\2\2\2\u0606\u0603\3\2\2\2\u0606\u0604\3\2\2\2\u0606\u0605\3\2\2\2\u0607"+
		"S\3\2\2\2\u0608\u060b\5V,\2\u0609\u060b\5X-\2\u060a\u0608\3\2\2\2\u060a"+
		"\u0609\3\2\2\2\u060bU\3\2\2\2\u060c\u060e\7y\2\2\u060d\u060f\5\b\5\2\u060e"+
		"\u060d\3\2\2\2\u060f\u0610\3\2\2\2\u0610\u060e\3\2\2\2\u0610\u0611\3\2"+
		"\2\2\u0611\u0612\3\2\2\2\u0612\u0614\5\\/\2\u0613\u0615\5\b\5\2\u0614"+
		"\u0613\3\2\2\2\u0615\u0616\3\2\2\2\u0616\u0614\3\2\2\2\u0616\u0617\3\2"+
		"\2\2\u0617\u0618\3\2\2\2\u0618\u0626\t\7\2\2\u0619\u061b\5\b\5\2\u061a"+
		"\u0619\3\2\2\2\u061b\u061c\3\2\2\2\u061c\u061a\3\2\2\2\u061c\u061d\3\2"+
		"\2\2\u061d\u061e\3\2\2\2\u061e\u0620\5\\/\2\u061f\u0621\5\b\5\2\u0620"+
		"\u061f\3\2\2\2\u0621\u0622\3\2\2\2\u0622\u0620\3\2\2\2\u0622\u0623\3\2"+
		"\2\2\u0623\u0624\3\2\2\2\u0624\u0625\7\u00bb\2\2\u0625\u0627\3\2\2\2\u0626"+
		"\u061a\3\2\2\2\u0626\u0627\3\2\2\2\u0627\u0637\3\2\2\2\u0628\u062a\5\b"+
		"\5\2\u0629\u0628\3\2\2\2\u062a\u062b\3\2\2\2\u062b\u0629\3\2\2\2\u062b"+
		"\u062c\3\2\2\2\u062c\u062d\3\2\2\2\u062d\u0635\5\u0278\u013d\2\u062e\u0630"+
		"\5\b\5\2\u062f\u062e\3\2\2\2\u0630\u0631\3\2\2\2\u0631\u062f\3\2\2\2\u0631"+
		"\u0632\3\2\2\2\u0632\u0633\3\2\2\2\u0633\u0634\7\u0142\2\2\u0634\u0636"+
		"\3\2\2\2\u0635\u062f\3\2\2\2\u0635\u0636\3\2\2\2\u0636\u0638\3\2\2\2\u0637"+
		"\u0629\3\2\2\2\u0638\u0639\3\2\2\2\u0639\u0637\3\2\2\2\u0639\u063a\3\2"+
		"\2\2\u063a\u0642\3\2\2\2\u063b\u063d\5\b\5\2\u063c\u063b\3\2\2\2\u063d"+
		"\u063e\3\2\2\2\u063e\u063c\3\2\2\2\u063e\u063f\3\2\2\2\u063f\u0640\3\2"+
		"\2\2\u0640\u0641\5\u00a6T\2\u0641\u0643\3\2\2\2\u0642\u063c\3\2\2\2\u0642"+
		"\u0643\3\2\2\2\u0643\u064b\3\2\2\2\u0644\u0646\5\b\5\2\u0645\u0644\3\2"+
		"\2\2\u0646\u0647\3\2\2\2\u0647\u0645\3\2\2\2\u0647\u0648\3\2\2\2\u0648"+
		"\u0649\3\2\2\2\u0649\u064a\7\u0088\2\2\u064a\u064c\3\2\2\2\u064b\u0645"+
		"\3\2\2\2\u064b\u064c\3\2\2\2\u064cW\3\2\2\2\u064d\u064f\7y\2\2\u064e\u0650"+
		"\5\b\5\2\u064f\u064e\3\2\2\2\u0650\u0651\3\2\2\2\u0651\u064f\3\2\2\2\u0651"+
		"\u0652\3\2\2\2\u0652\u0653\3\2\2\2\u0653\u0655\5\\/\2\u0654\u0656\5\b"+
		"\5\2\u0655\u0654\3\2\2\2\u0656\u0657\3\2\2\2\u0657\u0655\3\2\2\2\u0657"+
		"\u0658\3\2\2\2\u0658\u0659\3\2\2\2\u0659\u0667\t\7\2\2\u065a\u065c\5\b"+
		"\5\2\u065b\u065a\3\2\2\2\u065c\u065d\3\2\2\2\u065d\u065b\3\2\2\2\u065d"+
		"\u065e\3\2\2\2\u065e\u065f\3\2\2\2\u065f\u0661\5\\/\2\u0660\u0662\5\b"+
		"\5\2\u0661\u0660\3\2\2\2\u0662\u0663\3\2\2\2\u0663\u0661\3\2\2\2\u0663"+
		"\u0664\3\2\2\2\u0664\u0665\3\2\2\2\u0665\u0666\7\u00bb\2\2\u0666\u0668"+
		"\3\2\2\2\u0667\u065b\3\2\2\2\u0667\u0668\3\2\2\2\u0668\u066a\3\2\2\2\u0669"+
		"\u066b\5\b\5\2\u066a\u0669\3\2\2\2\u066b\u066c\3\2\2\2\u066c\u066a\3\2"+
		"\2\2\u066c\u066d\3\2\2\2\u066d\u066e\3\2\2\2\u066e\u0676\5\u0278\u013d"+
		"\2\u066f\u0671\5\b\5\2\u0670\u066f\3\2\2\2\u0671\u0672\3\2\2\2\u0672\u0670"+
		"\3\2\2\2\u0672\u0673\3\2\2\2\u0673\u0674\3\2\2\2\u0674\u0675\7\u0142\2"+
		"\2\u0675\u0677\3\2\2\2\u0676\u0670\3\2\2\2\u0676\u0677\3\2\2\2\u0677\u0679"+
		"\3\2\2\2\u0678\u067a\5\b\5\2\u0679\u0678\3\2\2\2\u067a\u067b\3\2\2\2\u067b"+
		"\u0679\3\2\2\2\u067b\u067c\3\2\2\2\u067c\u067d\3\2\2\2\u067d\u067f\7\u012d"+
		"\2\2\u067e\u0680\5\b\5\2\u067f\u067e\3\2\2\2\u0680\u0681\3\2\2\2\u0681"+
		"\u067f\3\2\2\2\u0681\u0682\3\2\2\2\u0682\u0683\3\2\2\2\u0683\u068b\5Z"+
		".\2\u0684\u0686\5\b\5\2\u0685\u0684\3\2\2\2\u0686\u0687\3\2\2\2\u0687"+
		"\u0685\3\2\2\2\u0687\u0688\3\2\2\2\u0688\u0689\3\2\2\2\u0689\u068a\5\u00a6"+
		"T\2\u068a\u068c\3\2\2\2\u068b\u0685\3\2\2\2\u068b\u068c\3\2\2\2\u068c"+
		"\u0694\3\2\2\2\u068d\u068f\5\b\5\2\u068e\u068d\3\2\2\2\u068f\u0690\3\2"+
		"\2\2\u0690\u068e\3\2\2\2\u0690\u0691\3\2\2\2\u0691\u0692\3\2\2\2\u0692"+
		"\u0693\7\u0088\2\2\u0693\u0695\3\2\2\2\u0694\u068e\3\2\2\2\u0694\u0695"+
		"\3\2\2\2\u0695Y\3\2\2\2\u0696\u0697\5\u0278\u013d\2\u0697[\3\2\2\2\u0698"+
		"\u069b\5\u027a\u013e\2\u0699\u069b\7\u01b6\2\2\u069a\u0698\3\2\2\2\u069a"+
		"\u0699\3\2\2\2\u069b]\3\2\2\2\u069c\u06a1\5`\61\2\u069d\u06a1\5b\62\2"+
		"\u069e\u06a1\5d\63\2\u069f\u06a1\5f\64\2\u06a0\u069c\3\2\2\2\u06a0\u069d"+
		"\3\2\2\2\u06a0\u069e\3\2\2\2\u06a0\u069f\3\2\2\2\u06a1_\3\2\2\2\u06a2"+
		"\u06b5\7x\2\2\u06a3\u06a5\5\b\5\2\u06a4\u06a3\3\2\2\2\u06a5\u06a6\3\2"+
		"\2\2\u06a6\u06a4\3\2\2\2\u06a6\u06a7\3\2\2\2\u06a7\u06a8\3\2\2\2\u06a8"+
		"\u06b2\5h\65\2\u06a9\u06ab\5\b\5\2\u06aa\u06a9\3\2\2\2\u06ab\u06ac\3\2"+
		"\2\2\u06ac\u06aa\3\2\2\2\u06ac\u06ad\3\2\2\2\u06ad\u06ae\3\2\2\2\u06ae"+
		"\u06af\5p9\2\u06af\u06b1\3\2\2\2\u06b0\u06aa\3\2\2\2\u06b1\u06b4\3\2\2"+
		"\2\u06b2\u06b0\3\2\2\2\u06b2\u06b3\3\2\2\2\u06b3\u06b6\3\2\2\2\u06b4\u06b2"+
		"\3\2\2\2\u06b5\u06a4\3\2\2\2\u06b6\u06b7\3\2\2\2\u06b7\u06b5\3\2\2\2\u06b7"+
		"\u06b8\3\2\2\2\u06b8\u06c0\3\2\2\2\u06b9\u06bb\5\b\5\2\u06ba\u06b9\3\2"+
		"\2\2\u06bb\u06bc\3\2\2\2\u06bc\u06ba\3\2\2\2\u06bc\u06bd\3\2\2\2\u06bd"+
		"\u06be\3\2\2\2\u06be\u06bf\7\u0087\2\2\u06bf\u06c1\3\2\2\2\u06c0\u06ba"+
		"\3\2\2\2\u06c0\u06c1\3\2\2\2\u06c1a\3\2\2\2\u06c2\u06d5\7x\2\2\u06c3\u06c5"+
		"\5\b\5\2\u06c4\u06c3\3\2\2\2\u06c5\u06c6\3\2\2\2\u06c6\u06c4\3\2\2\2\u06c6"+
		"\u06c7\3\2\2\2\u06c7\u06c8\3\2\2\2\u06c8\u06d2\5h\65\2\u06c9\u06cb\5\b"+
		"\5\2\u06ca\u06c9\3\2\2\2\u06cb\u06cc\3\2\2\2\u06cc\u06ca\3\2\2\2\u06cc"+
		"\u06cd\3\2\2\2\u06cd\u06ce\3\2\2\2\u06ce\u06cf\5r:\2\u06cf\u06d1\3\2\2"+
		"\2\u06d0\u06ca\3\2\2\2\u06d1\u06d4\3\2\2\2\u06d2\u06d0\3\2\2\2\u06d2\u06d3"+
		"\3\2\2\2\u06d3\u06d6\3\2\2\2\u06d4\u06d2\3\2\2\2\u06d5\u06c4\3\2\2\2\u06d6"+
		"\u06d7\3\2\2\2\u06d7\u06d5\3\2\2\2\u06d7\u06d8\3\2\2\2\u06d8\u06e0\3\2"+
		"\2\2\u06d9\u06db\5\b\5\2\u06da\u06d9\3\2\2\2\u06db\u06dc\3\2\2\2\u06dc"+
		"\u06da\3\2\2\2\u06dc\u06dd\3\2\2\2\u06dd\u06de\3\2\2\2\u06de\u06df\7\u0087"+
		"\2\2\u06df\u06e1\3\2\2\2\u06e0\u06da\3\2\2\2\u06e0\u06e1\3\2\2\2\u06e1"+
		"c\3\2\2\2\u06e2\u06e4\7x\2\2\u06e3\u06e5\5\b\5\2\u06e4\u06e3\3\2\2\2\u06e5"+
		"\u06e6\3\2\2\2\u06e6\u06e4\3\2\2\2\u06e6\u06e7\3\2\2\2\u06e7\u06e8\3\2"+
		"\2\2\u06e8\u0703\5\u01ce\u00e8\2\u06e9\u06eb\5\b\5\2\u06ea\u06e9\3\2\2"+
		"\2\u06eb\u06ec\3\2\2\2\u06ec\u06ea\3\2\2\2\u06ec\u06ed\3\2\2\2\u06ed\u06f4"+
		"\3\2\2\2\u06ee\u06f0\7\37\2\2\u06ef\u06f1\5\b\5\2\u06f0\u06ef\3\2\2\2"+
		"\u06f1\u06f2\3\2\2\2\u06f2\u06f0\3\2\2\2\u06f2\u06f3\3\2\2\2\u06f3\u06f5"+
		"\3\2\2\2\u06f4\u06ee\3\2\2\2\u06f4\u06f5\3\2\2\2\u06f5\u0701\3\2\2\2\u06f6"+
		"\u06fe\5l\67\2\u06f7\u06f9\5\b\5\2\u06f8\u06f7\3\2\2\2\u06f9\u06fa\3\2"+
		"\2\2\u06fa\u06f8\3\2\2\2\u06fa\u06fb\3\2\2\2\u06fb\u06fc\3\2\2\2\u06fc"+
		"\u06fd\5n8\2\u06fd\u06ff\3\2\2\2\u06fe\u06f8\3\2\2\2\u06fe\u06ff\3\2\2"+
		"\2\u06ff\u0702\3\2\2\2\u0700\u0702\5n8\2\u0701\u06f6\3\2\2\2\u0701\u0700"+
		"\3\2\2\2\u0702\u0704\3\2\2\2\u0703\u06ea\3\2\2\2\u0703\u0704\3\2\2\2\u0704"+
		"\u070c\3\2\2\2\u0705\u0707\5\b\5\2\u0706\u0705\3\2\2\2\u0707\u0708\3\2"+
		"\2\2\u0708\u0706\3\2\2\2\u0708\u0709\3\2\2\2\u0709\u070a\3\2\2\2\u070a"+
		"\u070b\7\u0087\2\2\u070b\u070d\3\2\2\2\u070c\u0706\3\2\2\2\u070c\u070d"+
		"\3\2\2\2\u070de\3\2\2\2\u070e\u0710\7x\2\2\u070f\u0711\5\b\5\2\u0710\u070f"+
		"\3\2\2\2\u0711\u0712\3\2\2\2\u0712\u0710\3\2\2\2\u0712\u0713\3\2\2\2\u0713"+
		"\u0714\3\2\2\2\u0714\u0716\5h\65\2\u0715\u0717\5\b\5\2\u0716\u0715\3\2"+
		"\2\2\u0717\u0718\3\2\2\2\u0718\u0716\3\2\2\2\u0718\u0719\3\2\2\2\u0719"+
		"\u071a\3\2\2\2\u071a\u071c\7\u0181\2\2\u071b\u071d\5\b\5\2\u071c\u071b"+
		"\3\2\2\2\u071d\u071e\3\2\2\2\u071e\u071c\3\2\2\2\u071e\u071f\3\2\2\2\u071f"+
		"\u0720\3\2\2\2\u0720\u0728\5j\66\2\u0721\u0723\5\b\5\2\u0722\u0721\3\2"+
		"\2\2\u0723\u0724\3\2\2\2\u0724\u0722\3\2\2\2\u0724\u0725\3\2\2\2\u0725"+
		"\u0726\3\2\2\2\u0726\u0727\5\u00a2R\2\u0727\u0729\3\2\2\2\u0728\u0722"+
		"\3\2\2\2\u0728\u0729\3\2\2\2\u0729\u0731\3\2\2\2\u072a\u072c\5\b\5\2\u072b"+
		"\u072a\3\2\2\2\u072c\u072d\3\2\2\2\u072d\u072b\3\2\2\2\u072d\u072e\3\2"+
		"\2\2\u072e\u072f\3\2\2\2\u072f\u0730\7\u0087\2\2\u0730\u0732\3\2\2\2\u0731"+
		"\u072b\3\2\2\2\u0731\u0732\3\2\2\2\u0732g\3\2\2\2\u0733\u0736\5\u027a"+
		"\u013e\2\u0734\u0736\5\u0260\u0131\2\u0735\u0733\3\2\2\2\u0735\u0734\3"+
		"\2\2\2\u0736i\3\2\2\2\u0737\u0738\7\u01b8\2\2\u0738k\3\2\2\2\u0739\u073b"+
		"\7\u00e4\2\2\u073a\u073c\5\b\5\2\u073b\u073a\3\2\2\2\u073c\u073d\3\2\2"+
		"\2\u073d\u073b\3\2\2\2\u073d\u073e\3\2\2\2\u073e\u073f\3\2\2\2\u073f\u0740"+
		"\7\u00fb\2\2\u0740\u0742\3\2\2\2\u0741\u0743\5\b\5\2\u0742\u0741\3\2\2"+
		"\2\u0743\u0744\3\2\2\2\u0744\u0742\3\2\2\2\u0744\u0745\3\2\2\2\u0745\u0748"+
		"\3\2\2\2\u0746\u0749\5\u027a\u013e\2\u0747\u0749\7\u01b6\2\2\u0748\u0746"+
		"\3\2\2\2\u0748\u0747\3\2\2\2\u0749m\3\2\2\2\u074a\u074c\7A\2\2\u074b\u074d"+
		"\5\b\5\2\u074c\u074b\3\2\2\2\u074d\u074e\3\2\2\2\u074e\u074c\3\2\2\2\u074e"+
		"\u074f\3\2\2\2\u074f\u0750\3\2\2\2\u0750\u0751\7\u00fb\2\2\u0751\u0753"+
		"\3\2\2\2\u0752\u0754\5\b\5\2\u0753\u0752\3\2\2\2\u0754\u0755\3\2\2\2\u0755"+
		"\u0753\3\2\2\2\u0755\u0756\3\2\2\2\u0756\u0759\3\2\2\2\u0757\u075a\5\u027a"+
		"\u013e\2\u0758\u075a\7\u01b6\2\2\u0759\u0757\3\2\2\2\u0759\u0758\3\2\2"+
		"\2\u075ao\3\2\2\2\u075b\u075d\7\u018b\2\2\u075c\u075e\5\b\5\2\u075d\u075c"+
		"\3\2\2\2\u075e\u075f\3\2\2\2\u075f\u075d\3\2\2\2\u075f\u0760\3\2\2\2\u0760"+
		"\u0762\3\2\2\2\u0761\u075b\3\2\2\2\u0761\u0762\3\2\2\2\u0762\u0763\3\2"+
		"\2\2\u0763\u077f\7\\\2\2\u0764\u0766\7\u0181\2\2\u0765\u0767\5\b\5\2\u0766"+
		"\u0765\3\2\2\2\u0767\u0768\3\2\2\2\u0768\u0766\3\2\2\2\u0768\u0769\3\2"+
		"\2\2\u0769\u076a\3\2\2\2\u076a\u076b\5x=\2\u076b\u077f\3\2\2\2\u076c\u076e"+
		"\7\u018b\2\2\u076d\u076f\5\b\5\2\u076e\u076d\3\2\2\2\u076f\u0770\3\2\2"+
		"\2\u0770\u076e\3\2\2\2\u0770\u0771\3\2\2\2\u0771\u0773\3\2\2\2\u0772\u076c"+
		"\3\2\2\2\u0772\u0773\3\2\2\2\u0773\u0774\3\2\2\2\u0774\u077c\7\u00f9\2"+
		"\2\u0775\u0777\5\b\5\2\u0776\u0775\3\2\2\2\u0777\u0778\3\2\2\2\u0778\u0776"+
		"\3\2\2\2\u0778\u0779\3\2\2\2\u0779\u077a\3\2\2\2\u077a\u077b\7\t\2\2\u077b"+
		"\u077d\3\2\2\2\u077c\u0776\3\2\2\2\u077c\u077d\3\2\2\2\u077d\u077f\3\2"+
		"\2\2\u077e\u0761\3\2\2\2\u077e\u0764\3\2\2\2\u077e\u0772\3\2\2\2\u077f"+
		"q\3\2\2\2\u0780\u07d5\5p9\2\u0781\u07d5\5t;\2\u0782\u07d5\5v<\2\u0783"+
		"\u079b\7\u009d\2\2\u0784\u0786\5\b\5\2\u0785\u0784\3\2\2\2\u0786\u0787"+
		"\3\2\2\2\u0787\u0785\3\2\2\2\u0787\u0788\3\2\2\2\u0788\u078f\3\2\2\2\u0789"+
		"\u078b\7\u0175\2\2\u078a\u078c\5\b\5\2\u078b\u078a\3\2\2\2\u078c\u078d"+
		"\3\2\2\2\u078d\u078b\3\2\2\2\u078d\u078e\3\2\2\2\u078e\u0790\3\2\2\2\u078f"+
		"\u0789\3\2\2\2\u078f\u0790\3\2\2\2\u0790\u0791\3\2\2\2\u0791\u0799\7\u0081"+
		"\2\2\u0792\u0794\5\b\5\2\u0793\u0792\3\2\2\2\u0794\u0795\3\2\2\2\u0795"+
		"\u0793\3\2\2\2\u0795\u0796\3\2\2\2\u0796\u0797\3\2\2\2\u0797\u0798\7\u00ff"+
		"\2\2\u0798\u079a\3\2\2\2\u0799\u0793\3\2\2\2\u0799\u079a\3\2\2\2\u079a"+
		"\u079c\3\2\2\2\u079b\u0785\3\2\2\2\u079b\u079c\3\2\2\2\u079c\u079e\3\2"+
		"\2\2\u079d\u079f\5\b\5\2\u079e\u079d\3\2\2\2\u079f\u07a0\3\2\2\2\u07a0"+
		"\u079e\3\2\2\2\u07a0\u07a1\3\2\2\2\u07a1\u07a2\3\2\2\2\u07a2\u07a3\t\b"+
		"\2\2\u07a3\u07d5\3\2\2\2\u07a4\u07a6\7\u018b\2\2\u07a5\u07a7\5\b\5\2\u07a6"+
		"\u07a5\3\2\2\2\u07a7\u07a8\3\2\2\2\u07a8\u07a6\3\2\2\2\u07a8\u07a9\3\2"+
		"\2\2\u07a9\u07ab\3\2\2\2\u07aa\u07a4\3\2\2\2\u07aa\u07ab\3\2\2\2\u07ab"+
		"\u07ac\3\2\2\2\u07ac\u07d5\7&\2\2\u07ad\u07d5\7\u017b\2\2\u07ae\u07d5"+
		"\7\60\2\2\u07af\u07b1\7\u018b\2\2\u07b0\u07b2\5\b\5\2\u07b1\u07b0\3\2"+
		"\2\2\u07b2\u07b3\3\2\2\2\u07b3\u07b1\3\2\2\2\u07b3\u07b4\3\2\2\2\u07b4"+
		"\u07b6\3\2\2\2\u07b5\u07af\3\2\2\2\u07b5\u07b6\3\2\2\2\u07b6\u07b7\3\2"+
		"\2\2\u07b7\u07d5\7.\2\2\u07b8\u07d5\7\u013a\2\2\u07b9\u07bb\7\u018b\2"+
		"\2\u07ba\u07bc\5\b\5\2\u07bb\u07ba\3\2\2\2\u07bc\u07bd\3\2\2\2\u07bd\u07bb"+
		"\3\2\2\2\u07bd\u07be\3\2\2\2\u07be\u07c0\3\2\2\2\u07bf\u07b9\3\2\2\2\u07bf"+
		"\u07c0\3\2\2\2\u07c0\u07c1\3\2\2\2\u07c1\u07d5\7\\\2\2\u07c2\u07c4\7\u018b"+
		"\2\2\u07c3\u07c5\5\b\5\2\u07c4\u07c3\3\2\2\2\u07c5\u07c6\3\2\2\2\u07c6"+
		"\u07c4\3\2\2\2\u07c6\u07c7\3\2\2\2\u07c7\u07c9\3\2\2\2\u07c8\u07c2\3\2"+
		"\2\2\u07c8\u07c9\3\2\2\2\u07c9\u07ca\3\2\2\2\u07ca\u07d2\7\u00f9\2\2\u07cb"+
		"\u07cd\5\b\5\2\u07cc\u07cb\3\2\2\2\u07cd\u07ce\3\2\2\2\u07ce\u07cc\3\2"+
		"\2\2\u07ce\u07cf\3\2\2\2\u07cf\u07d0\3\2\2\2\u07d0\u07d1\7\t\2\2\u07d1"+
		"\u07d3\3\2\2\2\u07d2\u07cc\3\2\2\2\u07d2\u07d3\3\2\2\2\u07d3\u07d5\3\2"+
		"\2\2\u07d4\u0780\3\2\2\2\u07d4\u0781\3\2\2\2\u07d4\u0782\3\2\2\2\u07d4"+
		"\u0783\3\2\2\2\u07d4\u07aa\3\2\2\2\u07d4\u07ad\3\2\2\2\u07d4\u07ae\3\2"+
		"\2\2\u07d4\u07b5\3\2\2\2\u07d4\u07b8\3\2\2\2\u07d4\u07bf\3\2\2\2\u07d4"+
		"\u07c8\3\2\2\2\u07d5s\3\2\2\2\u07d6\u07d8\7\37\2\2\u07d7\u07d9\5\b\5\2"+
		"\u07d8\u07d7\3\2\2\2\u07d9\u07da\3\2\2\2\u07da\u07d8\3\2\2\2\u07da\u07db"+
		"\3\2\2\2\u07db\u07dd\3\2\2\2\u07dc\u07d6\3\2\2\2\u07dc\u07dd\3\2\2\2\u07dd"+
		"\u07de\3\2\2\2\u07de\u07e6\7\u00e4\2\2\u07df\u07e1\5\b\5\2\u07e0\u07df"+
		"\3\2\2\2\u07e1\u07e2\3\2\2\2\u07e2\u07e0\3\2\2\2\u07e2\u07e3\3\2\2\2\u07e3"+
		"\u07e4\3\2\2\2\u07e4\u07e5\7\u00fb\2\2\u07e5\u07e7\3\2\2\2\u07e6\u07e0"+
		"\3\2\2\2\u07e6\u07e7\3\2\2\2\u07e7\u07e9\3\2\2\2\u07e8\u07ea\5\b\5\2\u07e9"+
		"\u07e8\3\2\2\2\u07ea\u07eb\3\2\2\2\u07eb\u07e9\3\2\2\2\u07eb\u07ec\3\2"+
		"\2\2\u07ec\u07ed\3\2\2\2\u07ed\u07ee\5\u00ccg\2\u07eeu\3\2\2\2\u07ef\u07f1"+
		"\7\37\2\2\u07f0\u07f2\5\b\5\2\u07f1\u07f0\3\2\2\2\u07f2\u07f3\3\2\2\2"+
		"\u07f3\u07f1\3\2\2\2\u07f3\u07f4\3\2\2\2\u07f4\u07f6\3\2\2\2\u07f5\u07ef"+
		"\3\2\2\2\u07f5\u07f6\3\2\2\2\u07f6\u07f7\3\2\2\2\u07f7\u07ff\7A\2\2\u07f8"+
		"\u07fa\5\b\5\2\u07f9\u07f8\3\2\2\2\u07fa\u07fb\3\2\2\2\u07fb\u07f9\3\2"+
		"\2\2\u07fb\u07fc\3\2\2\2\u07fc\u07fd\3\2\2\2\u07fd\u07fe\7\u00fb\2\2\u07fe"+
		"\u0800\3\2\2\2\u07ff\u07f9\3\2\2\2\u07ff\u0800\3\2\2\2\u0800\u0802\3\2"+
		"\2\2\u0801\u0803\5\b\5\2\u0802\u0801\3\2\2\2\u0803\u0804\3\2\2\2\u0804"+
		"\u0802\3\2\2\2\u0804\u0805\3\2\2\2\u0805\u0806\3\2\2\2\u0806\u0807\5\u00cc"+
		"g\2\u0807w\3\2\2\2\u0808\u0809\7\u01b8\2\2\u0809y\3\2\2\2\u080a\u080c"+
		"\7q\2\2\u080b\u080d\5\b\5\2\u080c\u080b\3\2\2\2\u080d\u080e\3\2\2\2\u080e"+
		"\u080c\3\2\2\2\u080e\u080f\3\2\2\2\u080f\u0810\3\2\2\2\u0810\u0818\5\u0238"+
		"\u011d\2\u0811\u0813\5\b\5\2\u0812\u0811\3\2\2\2\u0813\u0814\3\2\2\2\u0814"+
		"\u0812\3\2\2\2\u0814\u0815\3\2\2\2\u0815\u0816\3\2\2\2\u0816\u0817\7\u0126"+
		"\2\2\u0817\u0819\3\2\2\2\u0818\u0812\3\2\2\2\u0818\u0819\3\2\2\2\u0819"+
		"\u0821\3\2\2\2\u081a\u081c\5\b\5\2\u081b\u081a\3\2\2\2\u081c\u081d\3\2"+
		"\2\2\u081d\u081b\3\2\2\2\u081d\u081e\3\2\2\2\u081e\u081f\3\2\2\2\u081f"+
		"\u0820\5\u00a8U\2\u0820\u0822\3\2\2\2\u0821\u081b\3\2\2\2\u0821\u0822"+
		"\3\2\2\2\u0822\u082a\3\2\2\2\u0823\u0825\5\b\5\2\u0824\u0823\3\2\2\2\u0825"+
		"\u0826\3\2\2\2\u0826\u0824\3\2\2\2\u0826\u0827\3\2\2\2\u0827\u0828\3\2"+
		"\2\2\u0828\u0829\7\u0086\2\2\u0829\u082b\3\2\2\2\u082a\u0824\3\2\2\2\u082a"+
		"\u082b\3\2\2\2\u082b{\3\2\2\2\u082c\u082d\7Y\2\2\u082d}\3\2\2\2\u082e"+
		"\u083e\7L\2\2\u082f\u0831\5\b\5\2\u0830\u082f\3\2\2\2\u0831\u0832\3\2"+
		"\2\2\u0832\u0830\3\2\2\2\u0832\u0833\3\2\2\2\u0833\u0834\3\2\2\2\u0834"+
		"\u083c\5\u0278\u013d\2\u0835\u0837\5\b\5\2\u0836\u0835\3\2\2\2\u0837\u0838"+
		"\3\2\2\2\u0838\u0836\3\2\2\2\u0838\u0839\3\2\2\2\u0839\u083a\3\2\2\2\u083a"+
		"\u083b\7\u0142\2\2\u083b\u083d\3\2\2\2\u083c\u0836\3\2\2\2\u083c\u083d"+
		"\3\2\2\2\u083d\u083f\3\2\2\2\u083e\u0830\3\2\2\2\u083f\u0840\3\2\2\2\u0840"+
		"\u083e\3\2\2\2\u0840\u0841\3\2\2\2\u0841\u085a\3\2\2\2\u0842\u0844\5\b"+
		"\5\2\u0843\u0842\3\2\2\2\u0844\u0845\3\2\2\2\u0845\u0843\3\2\2\2\u0845"+
		"\u0846\3\2\2\2\u0846\u0847\3\2\2\2\u0847\u0849\7\u009c\2\2\u0848\u084a"+
		"\5\b\5\2\u0849\u0848\3\2\2\2\u084a\u084b\3\2\2\2\u084b\u0849\3\2\2\2\u084b"+
		"\u084c\3\2\2\2\u084c\u085b\3\2\2\2\u084d\u084f\5\b\5\2\u084e\u084d\3\2"+
		"\2\2\u084f\u0852\3\2\2\2\u0850\u084e\3\2\2\2\u0850\u0851\3\2\2\2\u0851"+
		"\u0853\3\2\2\2\u0852\u0850\3\2\2\2\u0853\u0857\7\u01a7\2\2\u0854\u0856"+
		"\5\b\5\2\u0855\u0854\3\2\2\2\u0856\u0859\3\2\2\2\u0857\u0855\3\2\2\2\u0857"+
		"\u0858\3\2\2\2\u0858\u085b\3\2\2\2\u0859\u0857\3\2\2\2\u085a\u0843\3\2"+
		"\2\2\u085a\u0850\3\2\2\2\u085b\u085c\3\2\2\2\u085c\u0864\5\u025e\u0130"+
		"\2\u085d\u085f\5\b\5\2\u085e\u085d\3\2\2\2\u085f\u0860\3\2\2\2\u0860\u085e"+
		"\3\2\2\2\u0860\u0861\3\2\2\2\u0861\u0862\3\2\2\2\u0862\u0863\5\u00a6T"+
		"\2\u0863\u0865\3\2\2\2\u0864\u085e\3\2\2\2\u0864\u0865\3\2\2\2\u0865\u086d"+
		"\3\2\2\2\u0866\u0868\5\b\5\2\u0867\u0866\3\2\2\2\u0868\u0869\3\2\2\2\u0869"+
		"\u0867\3\2\2\2\u0869\u086a\3\2\2\2\u086a\u086b\3\2\2\2\u086b\u086c\7\u0085"+
		"\2\2\u086c\u086e\3\2\2\2\u086d\u0867\3\2\2\2\u086d\u086e\3\2\2\2\u086e"+
		"\177\3\2\2\2\u086f\u087f\7=\2\2\u0870\u0872\5\b\5\2\u0871\u0870\3\2\2"+
		"\2\u0872\u0873\3\2\2\2\u0873\u0871\3\2\2\2\u0873\u0874\3\2\2\2\u0874\u0875"+
		"\3\2\2\2\u0875\u087d\5\u0238\u011d\2\u0876\u0878\5\b\5\2\u0877\u0876\3"+
		"\2\2\2\u0878\u0879\3\2\2\2\u0879\u0877\3\2\2\2\u0879\u087a\3\2\2\2\u087a"+
		"\u087b\3\2\2\2\u087b\u087c\5\u0082B\2\u087c\u087e\3\2\2\2\u087d\u0877"+
		"\3\2\2\2\u087d\u087e\3\2\2\2\u087e\u0880\3\2\2\2\u087f\u0871\3\2\2\2\u0880"+
		"\u0881\3\2\2\2\u0881\u087f\3\2\2\2\u0881\u0882\3\2\2\2\u0882\u0081\3\2"+
		"\2\2\u0883\u08a4\t\t\2\2\u0884\u0886\5\b\5\2\u0885\u0884\3\2\2\2\u0886"+
		"\u0887\3\2\2\2\u0887\u0885\3\2\2\2\u0887\u0888\3\2\2\2\u0888\u08a2\3\2"+
		"\2\2\u0889\u088b\7\u00b5\2\2\u088a\u088c\5\b\5\2\u088b\u088a\3\2\2\2\u088c"+
		"\u088d\3\2\2\2\u088d\u088b\3\2\2\2\u088d\u088e\3\2\2\2\u088e\u0890\3\2"+
		"\2\2\u088f\u0889\3\2\2\2\u088f\u0890\3\2\2\2\u0890\u0891\3\2\2\2\u0891"+
		"\u08a3\7\u012e\2\2\u0892\u0894\7\u018b\2\2\u0893\u0895\5\b\5\2\u0894\u0893"+
		"\3\2\2\2\u0895\u0896\3\2\2\2\u0896\u0894\3\2\2\2\u0896\u0897\3\2\2\2\u0897"+
		"\u0899\3\2\2\2\u0898\u0892\3\2\2\2\u0898\u0899\3\2\2\2\u0899\u089a\3\2"+
		"\2\2\u089a\u089c\7\u00f9\2\2\u089b\u089d\5\b\5\2\u089c\u089b\3\2\2\2\u089d"+
		"\u089e\3\2\2\2\u089e\u089c\3\2\2\2\u089e\u089f\3\2\2\2\u089f\u08a0\3\2"+
		"\2\2\u08a0\u08a1\7\u013c\2\2\u08a1\u08a3\3\2\2\2\u08a2\u088f\3\2\2\2\u08a2"+
		"\u0898\3\2\2\2\u08a3\u08a5\3\2\2\2\u08a4\u0885\3\2\2\2\u08a4\u08a5\3\2"+
		"\2\2\u08a5\u08ba\3\2\2\2\u08a6\u08a8\7\u018b\2\2\u08a7\u08a9\5\b\5\2\u08a8"+
		"\u08a7\3\2\2\2\u08a9\u08aa\3\2\2\2\u08aa\u08a8\3\2\2\2\u08aa\u08ab\3\2"+
		"\2\2\u08ab\u08ad\3\2\2\2\u08ac\u08a6\3\2\2\2\u08ac\u08ad\3\2\2\2\u08ad"+
		"\u08b7\3\2\2\2\u08ae\u08b0\7\u00f9\2\2\u08af\u08b1\5\b\5\2\u08b0\u08af"+
		"\3\2\2\2\u08b1\u08b2\3\2\2\2\u08b2\u08b0\3\2\2\2\u08b2\u08b3\3\2\2\2\u08b3"+
		"\u08b4\3\2\2\2\u08b4\u08b5\7\u013c\2\2\u08b5\u08b8\3\2\2\2\u08b6\u08b8"+
		"\7\u00e8\2\2\u08b7\u08ae\3\2\2\2\u08b7\u08b6\3\2\2\2\u08b8\u08ba\3\2\2"+
		"\2\u08b9\u0883\3\2\2\2\u08b9\u08ac\3\2\2\2\u08ba\u0083\3\2\2\2\u08bb\u08c3"+
		"\7\65\2\2\u08bc\u08be\5\b\5\2\u08bd\u08bc\3\2\2\2\u08be\u08bf\3\2\2\2"+
		"\u08bf\u08bd\3\2\2\2\u08bf\u08c0\3\2\2\2\u08c0\u08c1\3\2\2\2\u08c1\u08c2"+
		"\5\u0092J\2\u08c2\u08c4\3\2\2\2\u08c3\u08bd\3\2\2\2\u08c4\u08c5\3\2\2"+
		"\2\u08c5\u08c3\3\2\2\2\u08c5\u08c6\3\2\2\2\u08c6\u0085\3\2\2\2\u08c7\u08c9"+
		"\7\64\2\2\u08c8\u08ca\5\b\5\2\u08c9\u08c8\3\2\2\2\u08ca\u08cb\3\2\2\2"+
		"\u08cb\u08c9\3\2\2\2\u08cb\u08cc\3\2\2\2\u08cc\u08cd\3\2\2\2\u08cd\u08d5"+
		"\5\u0092J\2\u08ce\u08d0\5\b\5\2\u08cf\u08ce\3\2\2\2\u08d0\u08d1\3\2\2"+
		"\2\u08d1\u08cf\3\2\2\2\u08d1\u08d2\3\2\2\2\u08d2\u08d3\3\2\2\2\u08d3\u08d4"+
		"\5\u008aF\2\u08d4\u08d6\3\2\2\2\u08d5\u08cf\3\2\2\2\u08d5\u08d6\3\2\2"+
		"\2\u08d6\u08de\3\2\2\2\u08d7\u08d9\5\b\5\2\u08d8\u08d7\3\2\2\2\u08d9\u08da"+
		"\3\2\2\2\u08da\u08d8\3\2\2\2\u08da\u08db\3\2\2\2\u08db\u08dc\3\2\2\2\u08dc"+
		"\u08dd\5\u0088E\2\u08dd\u08df\3\2\2\2\u08de\u08d8\3\2\2\2\u08de\u08df"+
		"\3\2\2\2\u08df\u08e7\3\2\2\2\u08e0\u08e2\5\b\5\2\u08e1\u08e0\3\2\2\2\u08e2"+
		"\u08e3\3\2\2\2\u08e3\u08e1\3\2\2\2\u08e3\u08e4\3\2\2\2\u08e4\u08e5\3\2"+
		"\2\2\u08e5\u08e6\5\u00a2R\2\u08e6\u08e8\3\2\2\2\u08e7\u08e1\3\2\2\2\u08e7"+
		"\u08e8\3\2\2\2\u08e8\u08f0\3\2\2\2\u08e9\u08eb\5\b\5\2\u08ea\u08e9\3\2"+
		"\2\2\u08eb\u08ec\3\2\2\2\u08ec\u08ea\3\2\2\2\u08ec\u08ed\3\2\2\2\u08ed"+
		"\u08ee\3\2\2\2\u08ee\u08ef\7\u0084\2\2\u08ef\u08f1\3\2\2\2\u08f0\u08ea"+
		"\3\2\2\2\u08f0\u08f1\3\2\2\2\u08f1\u0087\3\2\2\2\u08f2\u08f4\7\u00bb\2"+
		"\2\u08f3\u08f5\5\b\5\2\u08f4\u08f3\3\2\2\2\u08f5\u08f6\3\2\2\2\u08f6\u08f4"+
		"\3\2\2\2\u08f6\u08f7\3\2\2\2\u08f7\u08f8\3\2\2\2\u08f8\u08f9\5\u0278\u013d"+
		"\2\u08f9\u0089\3\2\2\2\u08fa\u0902\7\u0184\2\2\u08fb\u08fd\5\b\5\2\u08fc"+
		"\u08fb\3\2\2\2\u08fd\u08fe\3\2\2\2\u08fe\u08fc\3\2\2\2\u08fe\u08ff\3\2"+
		"\2\2\u08ff\u0900\3\2\2\2\u0900\u0901\5\u008cG\2\u0901\u0903\3\2\2\2\u0902"+
		"\u08fc\3\2\2\2\u0903\u0904\3\2\2\2\u0904\u0902\3\2\2\2\u0904\u0905\3\2"+
		"\2\2\u0905\u008b\3\2\2\2\u0906\u091d\7\u0101\2\2\u0907\u0909\5\u008eH"+
		"\2\u0908\u090a\5\b\5\2\u0909\u0908\3\2\2\2\u090a\u090b\3\2\2\2\u090b\u0909"+
		"\3\2\2\2\u090b\u090c\3\2\2\2\u090c\u090e\3\2\2\2\u090d\u0907\3\2\2\2\u090d"+
		"\u090e\3\2\2\2\u090e\u090f\3\2\2\2\u090f\u0919\5\u0090I\2\u0910\u0912"+
		"\5\b\5\2\u0911\u0910\3\2\2\2\u0912\u0913\3\2\2\2\u0913\u0911\3\2\2\2\u0913"+
		"\u0914\3\2\2\2\u0914\u0915\3\2\2\2\u0915\u0916\5\u0090I\2\u0916\u0918"+
		"\3\2\2\2\u0917\u0911\3\2\2\2\u0918\u091b\3\2\2\2\u0919\u0917\3\2\2\2\u0919"+
		"\u091a\3\2\2\2\u091a\u091d\3\2\2\2\u091b\u0919\3\2\2\2\u091c\u0906\3\2"+
		"\2\2\u091c\u090d\3\2\2\2\u091d\u008d\3\2\2\2\u091e\u0920\7\62\2\2\u091f"+
		"\u0921\5\b\5\2\u0920\u091f\3\2\2\2\u0921\u0922\3\2\2\2\u0922\u0920\3\2"+
		"\2\2\u0922\u0923\3\2\2\2\u0923\u0925\3\2\2\2\u0924\u091e\3\2\2\2\u0924"+
		"\u0925\3\2\2\2\u0925\u0926\3\2\2\2\u0926\u0943\7\u012a\2\2\u0927\u0929"+
		"\7\62\2\2\u0928\u092a\5\b\5\2\u0929\u0928\3\2\2\2\u092a\u092b\3\2\2\2"+
		"\u092b\u0929\3\2\2\2\u092b\u092c\3\2\2\2\u092c\u092e\3\2\2\2\u092d\u0927"+
		"\3\2\2\2\u092d\u092e\3\2\2\2\u092e\u092f\3\2\2\2\u092f\u0943\7V\2\2\u0930"+
		"\u0932\7\62\2\2\u0931\u0933\5\b\5\2\u0932\u0931\3\2\2\2\u0933\u0934\3"+
		"\2\2\2\u0934\u0932\3\2\2\2\u0934\u0935\3\2\2\2\u0935\u0937\3\2\2\2\u0936"+
		"\u0930\3\2\2\2\u0936\u0937\3\2\2\2\u0937\u0938\3\2\2\2\u0938\u0943\7u"+
		"\2\2\u0939\u093b\7\62\2\2\u093a\u093c\5\b\5\2\u093b\u093a\3\2\2\2\u093c"+
		"\u093d\3\2\2\2\u093d\u093b\3\2\2\2\u093d\u093e\3\2\2\2\u093e\u0940\3\2"+
		"\2\2\u093f\u0939\3\2\2\2\u093f\u0940\3\2\2\2\u0940\u0941\3\2\2\2\u0941"+
		"\u0943\7\u0185\2\2\u0942\u0924\3\2\2\2\u0942\u092d\3\2\2\2\u0942\u0936"+
		"\3\2\2\2\u0942\u093f\3\2\2\2\u0943\u008f\3\2\2\2\u0944\u0948\5\u01ce\u00e8"+
		"\2\u0945\u0948\7\u01b6\2\2\u0946\u0948\7\u01b5\2\2\u0947\u0944\3\2\2\2"+
		"\u0947\u0945\3\2\2\2\u0947\u0946\3\2\2\2\u0948\u0091\3\2\2\2\u0949\u094a"+
		"\t\n\2\2\u094a\u0093\3\2\2\2\u094b\u096d\7\22\2\2\u094c\u094e\5\b\5\2"+
		"\u094d\u094c\3\2\2\2\u094e\u094f\3\2\2\2\u094f\u094d\3\2\2\2\u094f\u0950"+
		"\3\2\2\2\u0950\u0951\3\2\2\2\u0951\u0953\5\u0098M\2\u0952\u0954\5\b\5"+
		"\2\u0953\u0952\3\2\2\2\u0954\u0955\3\2\2\2\u0955\u0953\3\2\2\2\u0955\u0956"+
		"\3\2\2\2\u0956\u0957\3\2\2\2\u0957\u0959\7\u0175\2\2\u0958\u095a\5\b\5"+
		"\2\u0959\u0958\3\2\2\2\u095a\u095b\3\2\2\2\u095b\u0959\3\2\2\2\u095b\u095c"+
		"\3\2\2\2\u095c\u0969\3\2\2\2\u095d\u095f\7\u011d\2\2\u095e\u0960\5\b\5"+
		"\2\u095f\u095e\3\2\2\2\u0960\u0961\3\2\2\2\u0961\u095f\3\2\2\2\u0961\u0962"+
		"\3\2\2\2\u0962\u0963\3\2\2\2\u0963\u0965\7\u0175\2\2\u0964\u0966\5\b\5"+
		"\2\u0965\u0964\3\2\2\2\u0966\u0967\3\2\2\2\u0967\u0965\3\2\2\2\u0967\u0968"+
		"\3\2\2\2\u0968\u096a\3\2\2\2\u0969\u095d\3\2\2\2\u0969\u096a\3\2\2\2\u096a"+
		"\u096b\3\2\2\2\u096b\u096c\5\u0096L\2\u096c\u096e\3\2\2\2\u096d\u094d"+
		"\3\2\2\2\u096e\u096f\3\2\2\2\u096f\u096d\3\2\2\2\u096f\u0970\3\2\2\2\u0970"+
		"\u0095\3\2\2\2\u0971\u0972\7\u01b8\2\2\u0972\u0097\3\2\2\2\u0973\u0974"+
		"\7\u01b8\2\2\u0974\u0099\3\2\2\2\u0975\u097d\7\b\2\2\u0976\u0978\5\b\5"+
		"\2\u0977\u0976\3\2\2\2\u0978\u0979\3\2\2\2\u0979\u0977\3\2\2\2\u0979\u097a"+
		"\3\2\2\2\u097a\u097b\3\2\2\2\u097b\u097c\5\u009eP\2\u097c\u097e\3\2\2"+
		"\2\u097d\u0977\3\2\2\2\u097e\u097f\3\2\2\2\u097f\u097d\3\2\2\2\u097f\u0980"+
		"\3\2\2\2\u0980\u0982\3\2\2\2\u0981\u0983\5\b\5\2\u0982\u0981\3\2\2\2\u0983"+
		"\u0984\3\2\2\2\u0984\u0982\3\2\2\2\u0984\u0985\3\2\2\2\u0985\u0986\3\2"+
		"\2\2\u0986\u0996\7\u0175\2\2\u0987\u0989\5\b\5\2\u0988\u0987\3\2\2\2\u0989"+
		"\u098a\3\2\2\2\u098a\u0988\3\2\2\2\u098a\u098b\3\2\2\2\u098b\u098c\3\2"+
		"\2\2\u098c\u0994\5\u0278\u013d\2\u098d\u098f\5\b\5\2\u098e\u098d\3\2\2"+
		"\2\u098f\u0990\3\2\2\2\u0990\u098e\3\2\2\2\u0990\u0991\3\2\2\2\u0991\u0992"+
		"\3\2\2\2\u0992\u0993\7\u0142\2\2\u0993\u0995\3\2\2\2\u0994\u098e\3\2\2"+
		"\2\u0994\u0995\3\2\2\2\u0995\u0997\3\2\2\2\u0996\u0988\3\2\2\2\u0997\u0998"+
		"\3\2\2\2\u0998\u0996\3\2\2\2\u0998\u0999\3\2\2\2\u0999\u09f7\3\2\2\2\u099a"+
		"\u09a4\7\b\2\2\u099b\u099d\5\b\5\2\u099c\u099b\3\2\2\2\u099d\u099e\3\2"+
		"\2\2\u099e\u099c\3\2\2\2\u099e\u099f\3\2\2\2\u099f\u09a0\3\2\2\2\u09a0"+
		"\u09a1\5\u009eP\2\u09a1\u09a3\3\2\2\2\u09a2\u099c\3\2\2\2\u09a3\u09a6"+
		"\3\2\2\2\u09a4\u09a2\3\2\2\2\u09a4\u09a5\3\2\2\2\u09a5\u09ae\3\2\2\2\u09a6"+
		"\u09a4\3\2\2\2\u09a7\u09a9\5\b\5\2\u09a8\u09a7\3\2\2\2\u09a9\u09aa\3\2"+
		"\2\2\u09aa\u09a8\3\2\2\2\u09aa\u09ab\3\2\2\2\u09ab\u09ac\3\2\2\2\u09ac"+
		"\u09ad\7\u0175\2\2\u09ad\u09af\3\2\2\2\u09ae\u09a8\3\2\2\2\u09ae\u09af"+
		"\3\2\2\2\u09af\u09b7\3\2\2\2\u09b0\u09b2\5\b\5\2\u09b1\u09b0\3\2\2\2\u09b2"+
		"\u09b3\3\2\2\2\u09b3\u09b1\3\2\2\2\u09b3\u09b4\3\2\2\2\u09b4\u09b5\3\2"+
		"\2\2\u09b5\u09b6\5\u009eP\2\u09b6\u09b8\3\2\2\2\u09b7\u09b1\3\2\2\2\u09b8"+
		"\u09b9\3\2\2\2\u09b9\u09b7\3\2\2\2\u09b9\u09ba\3\2\2\2\u09ba\u09bc\3\2"+
		"\2\2\u09bb\u09bd\5\b\5\2\u09bc\u09bb\3\2\2\2\u09bd\u09be\3\2\2\2\u09be"+
		"\u09bc\3\2\2\2\u09be\u09bf\3\2\2\2\u09bf\u09c0\3\2\2\2\u09c0\u09d0\7\u00bb"+
		"\2\2\u09c1\u09c3\5\b\5\2\u09c2\u09c1\3\2\2\2\u09c3\u09c4\3\2\2\2\u09c4"+
		"\u09c2\3\2\2\2\u09c4\u09c5\3\2\2\2\u09c5\u09c6\3\2\2\2\u09c6\u09ce\5\u0278"+
		"\u013d\2\u09c7\u09c9\5\b\5\2\u09c8\u09c7\3\2\2\2\u09c9\u09ca\3\2\2\2\u09ca"+
		"\u09c8\3\2\2\2\u09ca\u09cb\3\2\2\2\u09cb\u09cc\3\2\2\2\u09cc\u09cd\7\u0142"+
		"\2\2\u09cd\u09cf\3\2\2\2\u09ce\u09c8\3\2\2\2\u09ce\u09cf\3\2\2\2\u09cf"+
		"\u09d1\3\2\2\2\u09d0\u09c2\3\2\2\2\u09d1\u09d2\3\2\2\2\u09d2\u09d0\3\2"+
		"\2\2\u09d2\u09d3\3\2\2\2\u09d3\u09f7\3\2\2\2\u09d4\u09d6\7\b\2\2\u09d5"+
		"\u09d7\5\b\5\2\u09d6\u09d5\3\2\2\2\u09d7\u09d8\3\2\2\2\u09d8\u09d6\3\2"+
		"\2\2\u09d8\u09d9\3\2\2\2\u09d9\u09da\3\2\2\2\u09da\u09dc\t\5\2\2\u09db"+
		"\u09dd\5\b\5\2\u09dc\u09db\3\2\2\2\u09dd\u09de\3\2\2\2\u09de\u09dc\3\2"+
		"\2\2\u09de\u09df\3\2\2\2\u09df\u09e0\3\2\2\2\u09e0\u09e2\5\u009cO\2\u09e1"+
		"\u09e3\5\b\5\2\u09e2\u09e1\3\2\2\2\u09e3\u09e4\3\2\2\2\u09e4\u09e2\3\2"+
		"\2\2\u09e4\u09e5\3\2\2\2\u09e5\u09e6\3\2\2\2\u09e6\u09e8\7\u0175\2\2\u09e7"+
		"\u09e9\5\b\5\2\u09e8\u09e7\3\2\2\2\u09e9\u09ea\3\2\2\2\u09ea\u09e8\3\2"+
		"\2\2\u09ea\u09eb\3\2\2\2\u09eb\u09ec\3\2\2\2\u09ec\u09f4\5\u009cO\2\u09ed"+
		"\u09ef\5\b\5\2\u09ee\u09ed\3\2\2\2\u09ef\u09f0\3\2\2\2\u09f0\u09ee\3\2"+
		"\2\2\u09f0\u09f1\3\2\2\2\u09f1\u09f2\3\2\2\2\u09f2\u09f3\7\u0142\2\2\u09f3"+
		"\u09f5\3\2\2\2\u09f4\u09ee\3\2\2\2\u09f4\u09f5\3\2\2\2\u09f5\u09f7\3\2"+
		"\2\2\u09f6\u0975\3\2\2\2\u09f6\u099a\3\2\2\2\u09f6\u09d4\3\2\2\2\u09f7"+
		"\u09ff\3\2\2\2\u09f8\u09fa\5\b\5\2\u09f9\u09f8\3\2\2\2\u09fa\u09fb\3\2"+
		"\2\2\u09fb\u09f9\3\2\2\2\u09fb\u09fc\3\2\2\2\u09fc\u09fd\3\2\2\2\u09fd"+
		"\u09fe\5\u00a6T\2\u09fe\u0a00\3\2\2\2\u09ff\u09f9\3\2\2\2\u09ff\u0a00"+
		"\3\2\2\2\u0a00\u0a08\3\2\2\2\u0a01\u0a03\5\b\5\2\u0a02\u0a01\3\2\2\2\u0a03"+
		"\u0a04\3\2\2\2\u0a04\u0a02\3\2\2\2\u0a04\u0a05\3\2\2\2\u0a05\u0a06\3\2"+
		"\2\2\u0a06\u0a07\7\u0083\2\2\u0a07\u0a09\3\2\2\2\u0a08\u0a02\3\2\2\2\u0a08"+
		"\u0a09\3\2\2\2\u0a09\u009b\3\2\2\2\u0a0a\u0a0b\5\u01ce\u00e8\2\u0a0b\u009d"+
		"\3\2\2\2\u0a0c\u0a0f\7\u01b6\2\2\u0a0d\u0a0f\5\u027a\u013e\2\u0a0e\u0a0c"+
		"\3\2\2\2\u0a0e\u0a0d\3\2\2\2\u0a0f\u009f\3\2\2\2\u0a10\u0a17\5\u00aeX"+
		"\2\u0a11\u0a17\5\u00b0Y\2\u0a12\u0a17\5\u00b2Z\2\u0a13\u0a17\5\u00b4["+
		"\2\u0a14\u0a17\5\u00b6\\\2\u0a15\u0a17\5\u00aaV\2\u0a16\u0a10\3\2\2\2"+
		"\u0a16\u0a11\3\2\2\2\u0a16\u0a12\3\2\2\2\u0a16\u0a13\3\2\2\2\u0a16\u0a14"+
		"\3\2\2\2\u0a16\u0a15\3\2\2\2\u0a17\u00a1\3\2\2\2\u0a18\u0a26\5\u00d6l"+
		"\2\u0a19\u0a1b\5\b\5\2\u0a1a\u0a19\3\2\2\2\u0a1b\u0a1c\3\2\2\2\u0a1c\u0a1a"+
		"\3\2\2\2\u0a1c\u0a1d\3\2\2\2\u0a1d\u0a1e\3\2\2\2\u0a1e\u0a20\7\u00fa\2"+
		"\2\u0a1f\u0a21\5\b\5\2\u0a20\u0a1f\3\2\2\2\u0a21\u0a22\3\2\2\2\u0a22\u0a20"+
		"\3\2\2\2\u0a22\u0a23\3\2\2\2\u0a23\u0a24\3\2\2\2\u0a24\u0a25\5\u00d6l"+
		"\2\u0a25\u0a27\3\2\2\2\u0a26\u0a1a\3\2\2\2\u0a26\u0a27\3\2\2\2\u0a27\u0a39"+
		"\3\2\2\2\u0a28\u0a2a\7\u00fa\2\2\u0a29\u0a2b\5\b\5\2\u0a2a\u0a29\3\2\2"+
		"\2\u0a2b\u0a2c\3\2\2\2\u0a2c\u0a2a\3\2\2\2\u0a2c\u0a2d\3\2\2\2\u0a2d\u0a2e"+
		"\3\2\2\2\u0a2e\u0a36\5\u00d6l\2\u0a2f\u0a31\5\b\5\2\u0a30\u0a2f\3\2\2"+
		"\2\u0a31\u0a32\3\2\2\2\u0a32\u0a30\3\2\2\2\u0a32\u0a33\3\2\2\2\u0a33\u0a34"+
		"\3\2\2\2\u0a34\u0a35\5\u00d6l\2\u0a35\u0a37\3\2\2\2\u0a36\u0a30\3\2\2"+
		"\2\u0a36\u0a37\3\2\2\2\u0a37\u0a39\3\2\2\2\u0a38\u0a18\3\2\2\2\u0a38\u0a28"+
		"\3\2\2\2\u0a39\u00a3\3\2\2\2\u0a3a\u0a48\5\u00d4k\2\u0a3b\u0a3d\5\b\5"+
		"\2\u0a3c\u0a3b\3\2\2\2\u0a3d\u0a3e\3\2\2\2\u0a3e\u0a3c\3\2\2\2\u0a3e\u0a3f"+
		"\3\2\2\2\u0a3f\u0a40\3\2\2\2\u0a40\u0a42\7\u00fa\2\2\u0a41\u0a43\5\b\5"+
		"\2\u0a42\u0a41\3\2\2\2\u0a43\u0a44\3\2\2\2\u0a44\u0a42\3\2\2\2\u0a44\u0a45"+
		"\3\2\2\2\u0a45\u0a46\3\2\2\2\u0a46\u0a47\5\u00d4k\2\u0a47\u0a49\3\2\2"+
		"\2\u0a48\u0a3c\3\2\2\2\u0a48\u0a49\3\2\2\2\u0a49\u0a5b\3\2\2\2\u0a4a\u0a4c"+
		"\7\u00fa\2\2\u0a4b\u0a4d\5\b\5\2\u0a4c\u0a4b\3\2\2\2\u0a4d\u0a4e\3\2\2"+
		"\2\u0a4e\u0a4c\3\2\2\2\u0a4e\u0a4f\3\2\2\2\u0a4f\u0a50\3\2\2\2\u0a50\u0a58"+
		"\5\u00d4k\2\u0a51\u0a53\5\b\5\2\u0a52\u0a51\3\2\2\2\u0a53\u0a54\3\2\2"+
		"\2\u0a54\u0a52\3\2\2\2\u0a54\u0a55\3\2\2\2\u0a55\u0a56\3\2\2\2\u0a56\u0a57"+
		"\5\u00d4k\2\u0a57\u0a59\3\2\2\2\u0a58\u0a52\3\2\2\2\u0a58\u0a59\3\2\2"+
		"\2\u0a59\u0a5b\3\2\2\2\u0a5a\u0a3a\3\2\2\2\u0a5a\u0a4a\3\2\2\2\u0a5b\u00a5"+
		"\3\2\2\2\u0a5c\u0a6a\5\u00d8m\2\u0a5d\u0a5f\5\b\5\2\u0a5e\u0a5d\3\2\2"+
		"\2\u0a5f\u0a60\3\2\2\2\u0a60\u0a5e\3\2\2\2\u0a60\u0a61\3\2\2\2\u0a61\u0a62"+
		"\3\2\2\2\u0a62\u0a64\7\u00fa\2\2\u0a63\u0a65\5\b\5\2\u0a64\u0a63\3\2\2"+
		"\2\u0a65\u0a66\3\2\2\2\u0a66\u0a64\3\2\2\2\u0a66\u0a67\3\2\2\2\u0a67\u0a68"+
		"\3\2\2\2\u0a68\u0a69\5\u00d8m\2\u0a69\u0a6b\3\2\2\2\u0a6a\u0a5e\3\2\2"+
		"\2\u0a6a\u0a6b\3\2\2\2\u0a6b\u0a7d\3\2\2\2\u0a6c\u0a6e\7\u00fa\2\2\u0a6d"+
		"\u0a6f\5\b\5\2\u0a6e\u0a6d\3\2\2\2\u0a6f\u0a70\3\2\2\2\u0a70\u0a6e\3\2"+
		"\2\2\u0a70\u0a71\3\2\2\2\u0a71\u0a72\3\2\2\2\u0a72\u0a7a\5\u00d8m\2\u0a73"+
		"\u0a75\5\b\5\2\u0a74\u0a73\3\2\2\2\u0a75\u0a76\3\2\2\2\u0a76\u0a74\3\2"+
		"\2\2\u0a76\u0a77\3\2\2\2\u0a77\u0a78\3\2\2\2\u0a78\u0a79\5\u00d8m\2\u0a79"+
		"\u0a7b\3\2\2\2\u0a7a\u0a74\3\2\2\2\u0a7a\u0a7b\3\2\2\2\u0a7b\u0a7d\3\2"+
		"\2\2\u0a7c\u0a5c\3\2\2\2\u0a7c\u0a6c\3\2\2\2\u0a7d\u00a7\3\2\2\2\u0a7e"+
		"\u0a8c\5\u00dan\2\u0a7f\u0a81\5\b\5\2\u0a80\u0a7f\3\2\2\2\u0a81\u0a82"+
		"\3\2\2\2\u0a82\u0a80\3\2\2\2\u0a82\u0a83\3\2\2\2\u0a83\u0a84\3\2\2\2\u0a84"+
		"\u0a86\7\u00fa\2\2\u0a85\u0a87\5\b\5\2\u0a86\u0a85\3\2\2\2\u0a87\u0a88"+
		"\3\2\2\2\u0a88\u0a86\3\2\2\2\u0a88\u0a89\3\2\2\2\u0a89\u0a8a\3\2\2\2\u0a8a"+
		"\u0a8b\5\u00dan\2\u0a8b\u0a8d\3\2\2\2\u0a8c\u0a80\3\2\2\2\u0a8c\u0a8d"+
		"\3\2\2\2\u0a8d\u0a9f\3\2\2\2\u0a8e\u0a90\7\u00fa\2\2\u0a8f\u0a91\5\b\5"+
		"\2\u0a90\u0a8f\3\2\2\2\u0a91\u0a92\3\2\2\2\u0a92\u0a90\3\2\2\2\u0a92\u0a93"+
		"\3\2\2\2\u0a93\u0a94\3\2\2\2\u0a94\u0a9c\5\u00dan\2\u0a95\u0a97\5\b\5"+
		"\2\u0a96\u0a95\3\2\2\2\u0a97\u0a98\3\2\2\2\u0a98\u0a96\3\2\2\2\u0a98\u0a99"+
		"\3\2\2\2\u0a99\u0a9a\3\2\2\2\u0a9a\u0a9b\5\u00dan\2\u0a9b\u0a9d\3\2\2"+
		"\2\u0a9c\u0a96\3\2\2\2\u0a9c\u0a9d\3\2\2\2\u0a9d\u0a9f\3\2\2\2\u0a9e\u0a7e"+
		"\3\2\2\2\u0a9e\u0a8e\3\2\2\2\u0a9f\u00a9\3\2\2\2\u0aa0\u0aa2\7\6\2\2\u0aa1"+
		"\u0aa3\5\b\5\2\u0aa2\u0aa1\3\2\2\2\u0aa3\u0aa4\3\2\2\2\u0aa4\u0aa2\3\2"+
		"\2\2\u0aa4\u0aa5\3\2\2\2\u0aa5\u0aa6\3\2\2\2\u0aa6\u0aa8\5\u00d0i\2\u0aa7"+
		"\u0aa9\5\b\5\2\u0aa8\u0aa7\3\2\2\2\u0aa9\u0aaa\3\2\2\2\u0aaa\u0aa8\3\2"+
		"\2\2\u0aaa\u0aab\3\2\2\2\u0aab\u0ab2\3\2\2\2\u0aac\u0aae\7\u00b7\2\2\u0aad"+
		"\u0aaf\5\b\5\2\u0aae\u0aad\3\2\2\2\u0aaf\u0ab0\3\2\2\2\u0ab0\u0aae\3\2"+
		"\2\2\u0ab0\u0ab1\3\2\2\2\u0ab1\u0ab3\3\2\2\2\u0ab2\u0aac\3\2\2\2\u0ab2"+
		"\u0ab3\3\2\2\2\u0ab3\u0ab4\3\2\2\2\u0ab4\u0abc\5\u00acW\2\u0ab5\u0ab7"+
		"\5\b\5\2\u0ab6\u0ab5\3\2\2\2\u0ab7\u0ab8\3\2\2\2\u0ab8\u0ab6\3\2\2\2\u0ab8"+
		"\u0ab9\3\2\2\2\u0ab9\u0aba\3\2\2\2\u0aba\u0abb\5\u00a2R\2\u0abb\u0abd"+
		"\3\2\2\2\u0abc\u0ab6\3\2\2\2\u0abc\u0abd\3\2\2\2\u0abd\u0ac5\3\2\2\2\u0abe"+
		"\u0ac0\5\b\5\2\u0abf\u0abe\3\2\2\2\u0ac0\u0ac1\3\2\2\2\u0ac1\u0abf\3\2"+
		"\2\2\u0ac1\u0ac2\3\2\2\2\u0ac2\u0ac3\3\2\2\2\u0ac3\u0ac4\7\u0082\2\2\u0ac4"+
		"\u0ac6\3\2\2\2\u0ac5\u0abf\3\2\2\2\u0ac5\u0ac6\3\2\2\2\u0ac6\u00ab\3\2"+
		"\2\2\u0ac7\u0ac8\7\u01b8\2\2\u0ac8\u00ad\3\2\2\2\u0ac9\u0acb\7\6\2\2\u0aca"+
		"\u0acc\5\b\5\2\u0acb\u0aca\3\2\2\2\u0acc\u0acd\3\2\2\2\u0acd\u0acb\3\2"+
		"\2\2\u0acd\u0ace\3\2\2\2\u0ace\u0acf\3\2\2\2\u0acf\u0add\5\u00d0i\2\u0ad0"+
		"\u0ad2\5\b\5\2\u0ad1\u0ad0\3\2\2\2\u0ad2\u0ad3\3\2\2\2\u0ad3\u0ad1\3\2"+
		"\2\2\u0ad3\u0ad4\3\2\2\2\u0ad4\u0ad5\3\2\2\2\u0ad5\u0ad7\7\u00b7\2\2\u0ad6"+
		"\u0ad8\5\b\5\2\u0ad7\u0ad6\3\2\2\2\u0ad8\u0ad9\3\2\2\2\u0ad9\u0ad7\3\2"+
		"\2\2\u0ad9\u0ada\3\2\2\2\u0ada\u0adb\3\2\2\2\u0adb\u0adc\5\u00d2j\2\u0adc"+
		"\u0ade\3\2\2\2\u0add\u0ad1\3\2\2\2\u0add\u0ade\3\2\2\2\u0ade\u0aec\3\2"+
		"\2\2\u0adf\u0ae1\5\b\5\2\u0ae0\u0adf\3\2\2\2\u0ae1\u0ae2\3\2\2\2\u0ae2"+
		"\u0ae0\3\2\2\2\u0ae2\u0ae3\3\2\2\2\u0ae3\u0ae4\3\2\2\2\u0ae4\u0ae6\7\u018b"+
		"\2\2\u0ae5\u0ae7\5\b\5\2\u0ae6\u0ae5\3\2\2\2\u0ae7\u0ae8\3\2\2\2\u0ae8"+
		"\u0ae6\3\2\2\2\u0ae8\u0ae9\3\2\2\2\u0ae9\u0aea\3\2\2\2\u0aea\u0aeb\7\\"+
		"\2\2\u0aeb\u0aed\3\2\2\2\u0aec\u0ae0\3\2\2\2\u0aec\u0aed\3\2\2\2\u0aed"+
		"\u0af5\3\2\2\2\u0aee\u0af0\5\b\5\2\u0aef\u0aee\3\2\2\2\u0af0\u0af1\3\2"+
		"\2\2\u0af1\u0aef\3\2\2\2\u0af1\u0af2\3\2\2\2\u0af2\u0af3\3\2\2\2\u0af3"+
		"\u0af4\5\u00a4S\2\u0af4\u0af6\3\2\2\2\u0af5\u0aef\3\2\2\2\u0af5\u0af6"+
		"\3\2\2\2\u0af6\u0afe\3\2\2\2\u0af7\u0af9\5\b\5\2\u0af8\u0af7\3\2\2\2\u0af9"+
		"\u0afa\3\2\2\2\u0afa\u0af8\3\2\2\2\u0afa\u0afb\3\2\2\2\u0afb\u0afc\3\2"+
		"\2\2\u0afc\u0afd\7\u0082\2\2\u0afd\u0aff\3\2\2\2\u0afe\u0af8\3\2\2\2\u0afe"+
		"\u0aff\3\2\2\2\u0aff\u00af\3\2\2\2\u0b00\u0b02\7\6\2\2\u0b01\u0b03\5\b"+
		"\5\2\u0b02\u0b01\3\2\2\2\u0b03\u0b04\3\2\2\2\u0b04\u0b02\3\2\2\2\u0b04"+
		"\u0b05\3\2\2\2\u0b05\u0b06\3\2\2\2\u0b06\u0b08\5\u00d0i\2\u0b07\u0b09"+
		"\5\b\5\2\u0b08\u0b07\3\2\2\2\u0b09\u0b0a\3\2\2\2\u0b0a\u0b08\3\2\2\2\u0b0a"+
		"\u0b0b\3\2\2\2\u0b0b\u0b0c\3\2\2\2\u0b0c\u0b0e\7\u00b7\2\2\u0b0d\u0b0f"+
		"\5\b\5\2\u0b0e\u0b0d\3\2\2\2\u0b0f\u0b10\3\2\2\2\u0b10\u0b0e\3\2\2\2\u0b10"+
		"\u0b11\3\2\2\2\u0b11\u0b12\3\2\2\2\u0b12\u0b13\5\u00ceh\2\u0b13\u00b1"+
		"\3\2\2\2\u0b14\u0b16\7\6\2\2\u0b15\u0b17\5\b\5\2\u0b16\u0b15\3\2\2\2\u0b17"+
		"\u0b18\3\2\2\2\u0b18\u0b16\3\2\2\2\u0b18\u0b19\3\2\2\2\u0b19\u0b1a\3\2"+
		"\2\2\u0b1a\u0b22\5\u00d0i\2\u0b1b\u0b1d\5\b\5\2\u0b1c\u0b1b\3\2\2\2\u0b1d"+
		"\u0b1e\3\2\2\2\u0b1e\u0b1c\3\2\2\2\u0b1e\u0b1f\3\2\2\2\u0b1f\u0b20\3\2"+
		"\2\2\u0b20\u0b21\5\u00c0a\2\u0b21\u0b23\3\2\2\2\u0b22\u0b1c\3\2\2\2\u0b23"+
		"\u0b24\3\2\2\2\u0b24\u0b22\3\2\2\2\u0b24\u0b25\3\2\2\2\u0b25\u0b2f\3\2"+
		"\2\2\u0b26\u0b28\5\b\5\2\u0b27\u0b26\3\2\2\2\u0b28\u0b29\3\2\2\2\u0b29"+
		"\u0b27\3\2\2\2\u0b29\u0b2a\3\2\2\2\u0b2a\u0b2d\3\2\2\2\u0b2b\u0b2e\5\u00a2"+
		"R\2\u0b2c\u0b2e\5\u00a4S\2\u0b2d\u0b2b\3\2\2\2\u0b2d\u0b2c\3\2\2\2\u0b2e"+
		"\u0b30\3\2\2\2\u0b2f\u0b27\3\2\2\2\u0b2f\u0b30\3\2\2\2\u0b30\u0b38\3\2"+
		"\2\2\u0b31\u0b33\5\b\5\2\u0b32\u0b31\3\2\2\2\u0b33\u0b34\3\2\2\2\u0b34"+
		"\u0b32\3\2\2\2\u0b34\u0b35\3\2\2\2\u0b35\u0b36\3\2\2\2\u0b36\u0b37\7\u0082"+
		"\2\2\u0b37\u0b39\3\2\2\2\u0b38\u0b32\3\2\2\2\u0b38\u0b39\3\2\2\2\u0b39"+
		"\u00b3\3\2\2\2\u0b3a\u0b3c\7\6\2\2\u0b3b\u0b3d\5\b\5\2\u0b3c\u0b3b\3\2"+
		"\2\2\u0b3d\u0b3e\3\2\2\2\u0b3e\u0b3c\3\2\2\2\u0b3e\u0b3f\3\2\2\2\u0b3f"+
		"\u0b46\3\2\2\2\u0b40\u0b42\7Z\2\2\u0b41\u0b43\5\b\5\2\u0b42\u0b41\3\2"+
		"\2\2\u0b43\u0b44\3\2\2\2\u0b44\u0b42\3\2\2\2\u0b44\u0b45\3\2\2\2\u0b45"+
		"\u0b47\3\2\2\2\u0b46\u0b40\3\2\2\2\u0b46\u0b47\3\2\2\2\u0b47\u0b48\3\2"+
		"\2\2\u0b48\u0b4a\7\u00db\2\2\u0b49\u0b4b\5\b\5\2\u0b4a\u0b49\3\2\2\2\u0b4b"+
		"\u0b4c\3\2\2\2\u0b4c\u0b4a\3\2\2\2\u0b4c\u0b4d\3\2\2\2\u0b4d\u0b54\3\2"+
		"\2\2\u0b4e\u0b50\7\u00c9\2\2\u0b4f\u0b51\5\b\5\2\u0b50\u0b4f\3\2\2\2\u0b51"+
		"\u0b52\3\2\2\2\u0b52\u0b50\3\2\2\2\u0b52\u0b53\3\2\2\2\u0b53\u0b55\3\2"+
		"\2\2\u0b54\u0b4e\3\2\2\2\u0b54\u0b55\3\2\2\2\u0b55\u0b56\3\2\2\2\u0b56"+
		"\u0b5e\5\u00c2b\2\u0b57\u0b59\5\b\5\2\u0b58\u0b57\3\2\2\2\u0b59\u0b5a"+
		"\3\2\2\2\u0b5a\u0b58\3\2\2\2\u0b5a\u0b5b\3\2\2\2\u0b5b\u0b5c\3\2\2\2\u0b5c"+
		"\u0b5d\5\u00be`\2\u0b5d\u0b5f\3\2\2\2\u0b5e\u0b58\3\2\2\2\u0b5f\u0b60"+
		"\3\2\2\2\u0b60\u0b5e\3\2\2\2\u0b60\u0b61\3\2\2\2\u0b61\u0b6b\3\2\2\2\u0b62"+
		"\u0b64\5\b\5\2\u0b63\u0b62\3\2\2\2\u0b64\u0b65\3\2\2\2\u0b65\u0b63\3\2"+
		"\2\2\u0b65\u0b66\3\2\2\2\u0b66\u0b69\3\2\2\2\u0b67\u0b6a\5\u00a2R\2\u0b68"+
		"\u0b6a\5\u00a4S\2\u0b69\u0b67\3\2\2\2\u0b69\u0b68\3\2\2\2\u0b6a\u0b6c"+
		"\3\2\2\2\u0b6b\u0b63\3\2\2\2\u0b6b\u0b6c\3\2\2\2\u0b6c\u0b74\3\2\2\2\u0b6d"+
		"\u0b6f\5\b\5\2\u0b6e\u0b6d\3\2\2\2\u0b6f\u0b70\3\2\2\2\u0b70\u0b6e\3\2"+
		"\2\2\u0b70\u0b71\3\2\2\2\u0b71\u0b72\3\2\2\2\u0b72\u0b73\7\u0082\2\2\u0b73"+
		"\u0b75\3\2\2\2\u0b74\u0b6e\3\2\2\2\u0b74\u0b75\3\2\2\2\u0b75\u00b5\3\2"+
		"\2\2\u0b76\u0b78\7\6\2\2\u0b77\u0b79\5\b\5\2\u0b78\u0b77\3\2\2\2\u0b79"+
		"\u0b7a\3\2\2\2\u0b7a\u0b78\3\2\2\2\u0b7a\u0b7b\3\2\2\2\u0b7b\u0b7c\3\2"+
		"\2\2\u0b7c\u0b84\5\u0180\u00c1\2\u0b7d\u0b7f\5\b\5\2\u0b7e\u0b7d\3\2\2"+
		"\2\u0b7f\u0b80\3\2\2\2\u0b80\u0b7e\3\2\2\2\u0b80\u0b81\3\2\2\2\u0b81\u0b82"+
		"\3\2\2\2\u0b82\u0b83\5\u00b8]\2\u0b83\u0b85\3\2\2\2\u0b84\u0b7e\3\2\2"+
		"\2\u0b84\u0b85\3\2\2\2\u0b85\u0b8d\3\2\2\2\u0b86\u0b88\5\b\5\2\u0b87\u0b86"+
		"\3\2\2\2\u0b88\u0b89\3\2\2\2\u0b89\u0b87\3\2\2\2\u0b89\u0b8a\3\2\2\2\u0b8a"+
		"\u0b8b\3\2\2\2\u0b8b\u0b8c\5\u00a2R\2\u0b8c\u0b8e\3\2\2\2\u0b8d\u0b87"+
		"\3\2\2\2\u0b8d\u0b8e\3\2\2\2\u0b8e\u0b96\3\2\2\2\u0b8f\u0b91\5\b\5\2\u0b90"+
		"\u0b8f\3\2\2\2\u0b91\u0b92\3\2\2\2\u0b92\u0b90\3\2\2\2\u0b92\u0b93\3\2"+
		"\2\2\u0b93\u0b94\3\2\2\2\u0b94\u0b95\7\u0082\2\2\u0b95\u0b97\3\2\2\2\u0b96"+
		"\u0b90\3\2\2\2\u0b96\u0b97\3\2\2\2\u0b97\u00b7\3\2\2\2\u0b98\u0b9a\7\37"+
		"\2\2\u0b99\u0b9b\5\b\5\2\u0b9a\u0b99\3\2\2\2\u0b9b\u0b9c\3\2\2\2\u0b9c"+
		"\u0b9a\3\2\2\2\u0b9c\u0b9d\3\2\2\2\u0b9d\u0b9f\3\2\2\2\u0b9e\u0b98\3\2"+
		"\2\2\u0b9e\u0b9f\3\2\2\2\u0b9f\u0bb4\3\2\2\2\u0ba0\u0ba8\5\u00ba^\2\u0ba1"+
		"\u0ba3\5\b\5\2\u0ba2\u0ba1\3\2\2\2\u0ba3\u0ba4\3\2\2\2\u0ba4\u0ba2\3\2"+
		"\2\2\u0ba4\u0ba5\3\2\2\2\u0ba5\u0ba6\3\2\2\2\u0ba6\u0ba7\5\u00bc_\2\u0ba7"+
		"\u0ba9\3\2\2\2\u0ba8\u0ba2\3\2\2\2\u0ba8\u0ba9\3\2\2\2\u0ba9\u0bb5\3\2"+
		"\2\2\u0baa\u0bb2\5\u00bc_\2\u0bab\u0bad\5\b\5\2\u0bac\u0bab\3\2\2\2\u0bad"+
		"\u0bae\3\2\2\2\u0bae\u0bac\3\2\2\2\u0bae\u0baf\3\2\2\2\u0baf\u0bb0\3\2"+
		"\2\2\u0bb0\u0bb1\5\u00ba^\2\u0bb1\u0bb3\3\2\2\2\u0bb2\u0bac\3\2\2\2\u0bb2"+
		"\u0bb3\3\2\2\2\u0bb3\u0bb5\3\2\2\2\u0bb4\u0ba0\3\2\2\2\u0bb4\u0baa\3\2"+
		"\2\2\u0bb5\u00b9\3\2\2\2\u0bb6\u0bb8\7\u00e4\2\2\u0bb7\u0bb9\5\b\5\2\u0bb8"+
		"\u0bb7\3\2\2\2\u0bb9\u0bba\3\2\2\2\u0bba\u0bb8\3\2\2\2\u0bba\u0bbb\3\2"+
		"\2\2\u0bbb\u0bc2\3\2\2\2\u0bbc\u0bbe\7\u00fb\2\2\u0bbd\u0bbf\5\b\5\2\u0bbe"+
		"\u0bbd\3\2\2\2\u0bbf\u0bc0\3\2\2\2\u0bc0\u0bbe\3\2\2\2\u0bc0\u0bc1\3\2"+
		"\2\2\u0bc1\u0bc3\3\2\2\2\u0bc2\u0bbc\3\2\2\2\u0bc2\u0bc3\3\2\2\2\u0bc3"+
		"\u0bc6\3\2\2\2\u0bc4\u0bc7\7\u01b6\2\2\u0bc5\u0bc7\5\u01ce\u00e8\2\u0bc6"+
		"\u0bc4\3\2\2\2\u0bc6\u0bc5\3\2\2\2\u0bc7\u00bb\3\2\2\2\u0bc8\u0bca\7A"+
		"\2\2\u0bc9\u0bcb\5\b\5\2\u0bca\u0bc9\3\2\2\2\u0bcb\u0bcc\3\2\2\2\u0bcc"+
		"\u0bca\3\2\2\2\u0bcc\u0bcd\3\2\2\2\u0bcd\u0bd4\3\2\2\2\u0bce\u0bd0\7\u00fb"+
		"\2\2\u0bcf\u0bd1\5\b\5\2\u0bd0\u0bcf\3\2\2\2\u0bd1\u0bd2\3\2\2\2\u0bd2"+
		"\u0bd0\3\2\2\2\u0bd2\u0bd3\3\2\2\2\u0bd3\u0bd5\3\2\2\2\u0bd4\u0bce\3\2"+
		"\2\2\u0bd4\u0bd5\3\2\2\2\u0bd5\u0bd8\3\2\2\2\u0bd6\u0bd9\7\u01b6\2\2\u0bd7"+
		"\u0bd9\5\u01ce\u00e8\2\u0bd8\u0bd6\3\2\2\2\u0bd8\u0bd7\3\2\2\2\u0bd9\u00bd"+
		"\3\2\2\2\u0bda\u0bdc\7\u00b7\2\2\u0bdb\u0bdd\5\b\5\2\u0bdc\u0bdb\3\2\2"+
		"\2\u0bdd\u0bde\3\2\2\2\u0bde\u0bdc\3\2\2\2\u0bde\u0bdf\3\2\2\2\u0bdf\u0be1"+
		"\3\2\2\2\u0be0\u0bda\3\2\2\2\u0be0\u0be1\3\2\2\2\u0be1\u0be2\3\2\2\2\u0be2"+
		"\u0bea\7\u00e4\2\2\u0be3\u0be5\5\b\5\2\u0be4\u0be3\3\2\2\2\u0be5\u0be6"+
		"\3\2\2\2\u0be6\u0be4\3\2\2\2\u0be6\u0be7\3\2\2\2\u0be7\u0be8\3\2\2\2\u0be8"+
		"\u0be9\7\u00fb\2\2\u0be9\u0beb\3\2\2\2\u0bea\u0be4\3\2\2\2\u0bea\u0beb"+
		"\3\2\2\2\u0beb\u0bed\3\2\2\2\u0bec\u0bee\5\b\5\2\u0bed\u0bec\3\2\2\2\u0bee"+
		"\u0bef\3\2\2\2\u0bef\u0bed\3\2\2\2\u0bef\u0bf0\3\2\2\2\u0bf0\u0bf1\3\2"+
		"\2\2\u0bf1\u0bf2\5\u00ccg\2\u0bf2\u0c37\3\2\2\2\u0bf3\u0bf5\7\u00b7\2"+
		"\2\u0bf4\u0bf6\5\b\5\2\u0bf5\u0bf4\3\2\2\2\u0bf6\u0bf7\3\2\2\2\u0bf7\u0bf5"+
		"\3\2\2\2\u0bf7\u0bf8\3\2\2\2\u0bf8\u0bfa\3\2\2\2\u0bf9\u0bf3\3\2\2\2\u0bf9"+
		"\u0bfa\3\2\2\2\u0bfa\u0bfb\3\2\2\2\u0bfb\u0c03\7A\2\2\u0bfc\u0bfe\5\b"+
		"\5\2\u0bfd\u0bfc\3\2\2\2\u0bfe\u0bff\3\2\2\2\u0bff\u0bfd\3\2\2\2\u0bff"+
		"\u0c00\3\2\2\2\u0c00\u0c01\3\2\2\2\u0c01\u0c02\7\u00fb\2\2\u0c02\u0c04"+
		"\3\2\2\2\u0c03\u0bfd\3\2\2\2\u0c03\u0c04\3\2\2\2\u0c04\u0c06\3\2\2\2\u0c05"+
		"\u0c07\5\b\5\2\u0c06\u0c05\3\2\2\2\u0c07\u0c08\3\2\2\2\u0c08\u0c06\3\2"+
		"\2\2\u0c08\u0c09\3\2\2\2\u0c09\u0c0a\3\2\2\2\u0c0a\u0c0b\5\u00ccg\2\u0c0b"+
		"\u0c37\3\2\2\2\u0c0c\u0c24\7\u009d\2\2\u0c0d\u0c0f\5\b\5\2\u0c0e\u0c0d"+
		"\3\2\2\2\u0c0f\u0c10\3\2\2\2\u0c10\u0c0e\3\2\2\2\u0c10\u0c11\3\2\2\2\u0c11"+
		"\u0c18\3\2\2\2\u0c12\u0c14\7\u0175\2\2\u0c13\u0c15\5\b\5\2\u0c14\u0c13"+
		"\3\2\2\2\u0c15\u0c16\3\2\2\2\u0c16\u0c14\3\2\2\2\u0c16\u0c17\3\2\2\2\u0c17"+
		"\u0c19\3\2\2\2\u0c18\u0c12\3\2\2\2\u0c18\u0c19\3\2\2\2\u0c19\u0c1a\3\2"+
		"\2\2\u0c1a\u0c22\7\u0081\2\2\u0c1b\u0c1d\5\b\5\2\u0c1c\u0c1b\3\2\2\2\u0c1d"+
		"\u0c1e\3\2\2\2\u0c1e\u0c1c\3\2\2\2\u0c1e\u0c1f\3\2\2\2\u0c1f\u0c20\3\2"+
		"\2\2\u0c20\u0c21\7\u00ff\2\2\u0c21\u0c23\3\2\2\2\u0c22\u0c1c\3\2\2\2\u0c22"+
		"\u0c23\3\2\2\2\u0c23\u0c25\3\2\2\2\u0c24\u0c0e\3\2\2\2\u0c24\u0c25\3\2"+
		"\2\2\u0c25\u0c27\3\2\2\2\u0c26\u0c28\5\b\5\2\u0c27\u0c26\3\2\2\2\u0c28"+
		"\u0c29\3\2\2\2\u0c29\u0c27\3\2\2\2\u0c29\u0c2a\3\2\2\2\u0c2a\u0c2b\3\2"+
		"\2\2\u0c2b\u0c2c\t\b\2\2\u0c2c\u0c37\3\2\2\2\u0c2d\u0c2f\7\u018b\2\2\u0c2e"+
		"\u0c30\5\b\5\2\u0c2f\u0c2e\3\2\2\2\u0c30\u0c31\3\2\2\2\u0c31\u0c2f\3\2"+
		"\2\2\u0c31\u0c32\3\2\2\2\u0c32\u0c34\3\2\2\2\u0c33\u0c2d\3\2\2\2\u0c33"+
		"\u0c34\3\2\2\2\u0c34\u0c35\3\2\2\2\u0c35\u0c37\7&\2\2\u0c36\u0be0\3\2"+
		"\2\2\u0c36\u0bf9\3\2\2\2\u0c36\u0c0c\3\2\2\2\u0c36\u0c33\3\2\2\2\u0c37"+
		"\u00bf\3\2\2\2\u0c38\u0c92\5\u00be`\2\u0c39\u0c92\7\u017b\2\2\u0c3a\u0c92"+
		"\7\60\2\2\u0c3b\u0c3d\7\u018b\2\2\u0c3c\u0c3e\5\b\5\2\u0c3d\u0c3c\3\2"+
		"\2\2\u0c3e\u0c3f\3\2\2\2\u0c3f\u0c3d\3\2\2\2\u0c3f\u0c40\3\2\2\2\u0c40"+
		"\u0c42\3\2\2\2\u0c41\u0c3b\3\2\2\2\u0c41\u0c42\3\2\2\2\u0c42\u0c43\3\2"+
		"\2\2\u0c43\u0c92\7.\2\2\u0c44\u0c4c\7\u0120\2\2\u0c45\u0c47\5\b\5\2\u0c46"+
		"\u0c45\3\2\2\2\u0c47\u0c48\3\2\2\2\u0c48\u0c46\3\2\2\2\u0c48\u0c49\3\2"+
		"\2\2\u0c49\u0c4a\3\2\2\2\u0c4a\u0c4b\5\u00c6d\2\u0c4b\u0c4d\3\2\2\2\u0c4c"+
		"\u0c46\3\2\2\2\u0c4c\u0c4d\3\2\2\2\u0c4d\u0c92\3\2\2\2\u0c4e\u0c50\7\u018b"+
		"\2\2\u0c4f\u0c51\5\b\5\2\u0c50\u0c4f\3\2\2\2\u0c51\u0c52\3\2\2\2\u0c52"+
		"\u0c50\3\2\2\2\u0c52\u0c53\3\2\2\2\u0c53\u0c55\3\2\2\2\u0c54\u0c4e\3\2"+
		"\2\2\u0c54\u0c55\3\2\2\2\u0c55\u0c56\3\2\2\2\u0c56\u0c92\7\\\2\2\u0c57"+
		"\u0c92\7\u013a\2\2\u0c58\u0c5a\7\u018b\2\2\u0c59\u0c5b\5\b\5\2\u0c5a\u0c59"+
		"\3\2\2\2\u0c5b\u0c5c\3\2\2\2\u0c5c\u0c5a\3\2\2\2\u0c5c\u0c5d\3\2\2\2\u0c5d"+
		"\u0c5f\3\2\2\2\u0c5e\u0c58\3\2\2\2\u0c5e\u0c5f\3\2\2\2\u0c5f\u0c60\3\2"+
		"\2\2\u0c60\u0c62\7\u00f9\2\2\u0c61\u0c63\5\b\5\2\u0c62\u0c61\3\2\2\2\u0c63"+
		"\u0c64\3\2\2\2\u0c64\u0c62\3\2\2\2\u0c64\u0c65\3\2\2\2\u0c65\u0c66\3\2"+
		"\2\2\u0c66\u0c67\7\177\2\2\u0c67\u0c92\3\2\2\2\u0c68\u0c6a\7o\2\2\u0c69"+
		"\u0c6b\5\b\5\2\u0c6a\u0c69\3\2\2\2\u0c6b\u0c6c\3\2\2\2\u0c6c\u0c6a\3\2"+
		"\2\2\u0c6c\u0c6d\3\2\2\2\u0c6d\u0c74\3\2\2\2\u0c6e\u0c70\7\u00d6\2\2\u0c6f"+
		"\u0c71\5\b\5\2\u0c70\u0c6f\3\2\2\2\u0c71\u0c72\3\2\2\2\u0c72\u0c70\3\2"+
		"\2\2\u0c72\u0c73\3\2\2\2\u0c73\u0c75\3\2\2\2\u0c74\u0c6e\3\2\2\2\u0c74"+
		"\u0c75\3\2\2\2\u0c75\u0c76\3\2\2\2\u0c76\u0c77\5\u00c4c\2\u0c77\u0c92"+
		"\3\2\2\2\u0c78\u0c7a\7Z\2\2\u0c79\u0c7b\5\b\5\2\u0c7a\u0c79\3\2\2\2\u0c7b"+
		"\u0c7c\3\2\2\2\u0c7c\u0c7a\3\2\2\2\u0c7c\u0c7d\3\2\2\2\u0c7d\u0c7f\3\2"+
		"\2\2\u0c7e\u0c78\3\2\2\2\u0c7e\u0c7f\3\2\2\2\u0c7f\u0c80\3\2\2\2\u0c80"+
		"\u0c88\7\u00db\2\2\u0c81\u0c83\5\b\5\2\u0c82\u0c81\3\2\2\2\u0c83\u0c84"+
		"\3\2\2\2\u0c84\u0c82\3\2\2\2\u0c84\u0c85\3\2\2\2\u0c85\u0c86\3\2\2\2\u0c86"+
		"\u0c87\7\u00c9\2\2\u0c87\u0c89\3\2\2\2\u0c88\u0c82\3\2\2\2\u0c88\u0c89"+
		"\3\2\2\2\u0c89\u0c8b\3\2\2\2\u0c8a\u0c8c\5\b\5\2\u0c8b\u0c8a\3\2\2\2\u0c8c"+
		"\u0c8d\3\2\2\2\u0c8d\u0c8b\3\2\2\2\u0c8d\u0c8e\3\2\2\2\u0c8e\u0c8f\3\2"+
		"\2\2\u0c8f\u0c90\5\u00c2b\2\u0c90\u0c92\3\2\2\2\u0c91\u0c38\3\2\2\2\u0c91"+
		"\u0c39\3\2\2\2\u0c91\u0c3a\3\2\2\2\u0c91\u0c41\3\2\2\2\u0c91\u0c44\3\2"+
		"\2\2\u0c91\u0c54\3\2\2\2\u0c91\u0c57\3\2\2\2\u0c91\u0c5e\3\2\2\2\u0c91"+
		"\u0c68\3\2\2\2\u0c91\u0c7e\3\2\2\2\u0c92\u00c1\3\2\2\2\u0c93\u0c94\5\u01ce"+
		"\u00e8\2\u0c94\u00c3\3\2\2\2\u0c95\u0ca3\5\6\4\2\u0c96\u0ca3\7\u01b5\2"+
		"\2\u0c97\u0ca3\5\u01ce\u00e8\2\u0c98\u0ca0\7c\2\2\u0c99\u0c9b\5\b\5\2"+
		"\u0c9a\u0c99\3\2\2\2\u0c9b\u0c9c\3\2\2\2\u0c9c\u0c9a\3\2\2\2\u0c9c\u0c9d"+
		"\3\2\2\2\u0c9d\u0c9e\3\2\2\2\u0c9e\u0c9f\7\u0185\2\2\u0c9f\u0ca1\3\2\2"+
		"\2\u0ca0\u0c9a\3\2\2\2\u0ca0\u0ca1\3\2\2\2\u0ca1\u0ca3\3\2\2\2\u0ca2\u0c95"+
		"\3\2\2\2\u0ca2\u0c96\3\2\2\2\u0ca2\u0c97\3\2\2\2\u0ca2\u0c98\3\2\2\2\u0ca3"+
		"\u00c5\3\2\2\2\u0ca4\u0ca6\7\u0152\2\2\u0ca5\u0ca7\5\b\5\2\u0ca6\u0ca5"+
		"\3\2\2\2\u0ca7\u0ca8\3\2\2\2\u0ca8\u0ca6\3\2\2\2\u0ca8\u0ca9\3\2\2\2\u0ca9"+
		"\u0caa\3\2\2\2\u0caa\u0cab\5\u00caf\2\u0cab\u0cdf\3\2\2\2\u0cac\u0cae"+
		"\7\u018b\2\2\u0cad\u0caf\5\b\5\2\u0cae\u0cad\3\2\2\2\u0caf\u0cb0\3\2\2"+
		"\2\u0cb0\u0cae\3\2\2\2\u0cb0\u0cb1\3\2\2\2\u0cb1\u0cb3\3\2\2\2\u0cb2\u0cac"+
		"\3\2\2\2\u0cb2\u0cb3\3\2\2\2\u0cb3\u0cb4\3\2\2\2\u0cb4\u0cdf\7#\2\2\u0cb5"+
		"\u0cb7\7\u018b\2\2\u0cb6\u0cb8\5\b\5\2\u0cb7\u0cb6\3\2\2\2\u0cb8\u0cb9"+
		"\3\2\2\2\u0cb9\u0cb7\3\2\2\2\u0cb9\u0cba\3\2\2\2\u0cba\u0cbc\3\2\2\2\u0cbb"+
		"\u0cb5\3\2\2\2\u0cbb\u0cbc\3\2\2\2\u0cbc\u0cbd\3\2\2\2\u0cbd\u0cbf\7\u00f9"+
		"\2\2\u0cbe\u0cc0\5\b\5\2\u0cbf\u0cbe\3\2\2\2\u0cc0\u0cc1\3\2\2\2\u0cc1"+
		"\u0cbf\3\2\2\2\u0cc1\u0cc2\3\2\2\2\u0cc2\u0cc3\3\2\2\2\u0cc3\u0cc4\7,"+
		"\2\2\u0cc4\u0cdf\3\2\2\2\u0cc5\u0cc7\7\u018b\2\2\u0cc6\u0cc8\5\b\5\2\u0cc7"+
		"\u0cc6\3\2\2\2\u0cc8\u0cc9\3\2\2\2\u0cc9\u0cc7\3\2\2\2\u0cc9\u0cca\3\2"+
		"\2\2\u0cca\u0ccc\3\2\2\2\u0ccb\u0cc5\3\2\2\2\u0ccb\u0ccc\3\2\2\2\u0ccc"+
		"\u0ccd\3\2\2\2\u0ccd\u0cdf\7\u0080\2\2\u0cce\u0cd0\7\u018b\2\2\u0ccf\u0cd1"+
		"\5\b\5\2\u0cd0\u0ccf\3\2\2\2\u0cd1\u0cd2\3\2\2\2\u0cd2\u0cd0\3\2\2\2\u0cd2"+
		"\u0cd3\3\2\2\2\u0cd3\u0cd5\3\2\2\2\u0cd4\u0cce\3\2\2\2\u0cd4\u0cd5\3\2"+
		"\2\2\u0cd5\u0cd6\3\2\2\2\u0cd6\u0cd8\7\u00ad\2\2\u0cd7\u0cd9\5\b\5\2\u0cd8"+
		"\u0cd7\3\2\2\2\u0cd9\u0cda\3\2\2\2\u0cda\u0cd8\3\2\2\2\u0cda\u0cdb\3\2"+
		"\2\2\u0cdb\u0cdc\3\2\2\2\u0cdc\u0cdd\5\u00c8e\2\u0cdd\u0cdf\3\2\2\2\u0cde"+
		"\u0ca4\3\2\2\2\u0cde\u0cb2\3\2\2\2\u0cde\u0cbb\3\2\2\2\u0cde\u0ccb\3\2"+
		"\2\2\u0cde\u0cd4\3\2\2\2\u0cdf\u00c7\3\2\2\2\u0ce0\u0ce1\7\u01b5\2\2\u0ce1"+
		"\u00c9\3\2\2\2\u0ce2\u0ce5\7\u01b6\2\2\u0ce3\u0ce5\5\u01ce\u00e8\2\u0ce4"+
		"\u0ce2\3\2\2\2\u0ce4\u0ce3\3\2\2\2\u0ce5\u00cb\3\2\2\2\u0ce6\u0d04\5\u013a"+
		"\u009e\2\u0ce7\u0cf7\5\u01ce\u00e8\2\u0ce8\u0cea\5\b\5\2\u0ce9\u0ce8\3"+
		"\2\2\2\u0cea\u0ceb\3\2\2\2\u0ceb\u0ce9\3\2\2\2\u0ceb\u0cec\3\2\2\2\u0cec"+
		"\u0ced\3\2\2\2\u0ced\u0cf5\7\u0114\2\2\u0cee\u0cf0\5\b\5\2\u0cef\u0cee"+
		"\3\2\2\2\u0cf0\u0cf1\3\2\2\2\u0cf1\u0cef\3\2\2\2\u0cf1\u0cf2\3\2\2\2\u0cf2"+
		"\u0cf3\3\2\2\2\u0cf3\u0cf4\5\u013a\u009e\2\u0cf4\u0cf6\3\2\2\2\u0cf5\u0cef"+
		"\3\2\2\2\u0cf5\u0cf6\3\2\2\2\u0cf6\u0cf8\3\2\2\2\u0cf7\u0ce9\3\2\2\2\u0cf7"+
		"\u0cf8\3\2\2\2\u0cf8\u0d04\3\2\2\2\u0cf9\u0d01\7\u0114\2\2\u0cfa\u0cfc"+
		"\5\b\5\2\u0cfb\u0cfa\3\2\2\2\u0cfc\u0cfd\3\2\2\2\u0cfd\u0cfb\3\2\2\2\u0cfd"+
		"\u0cfe\3\2\2\2\u0cfe\u0cff\3\2\2\2\u0cff\u0d00\5\u013a\u009e\2\u0d00\u0d02"+
		"\3\2\2\2\u0d01\u0cfb\3\2\2\2\u0d01\u0d02\3\2\2\2\u0d02\u0d04\3\2\2\2\u0d03"+
		"\u0ce6\3\2\2\2\u0d03\u0ce7\3\2\2\2\u0d03\u0cf9\3\2\2\2\u0d04\u00cd\3\2"+
		"\2\2\u0d05\u0d0d\7f\2\2\u0d06\u0d08\5\b\5\2\u0d07\u0d06\3\2\2\2\u0d08"+
		"\u0d09\3\2\2\2\u0d09\u0d07\3\2\2\2\u0d09\u0d0a\3\2\2\2\u0d0a\u0d0b\3\2"+
		"\2\2\u0d0b\u0d0c\7\u0190\2\2\u0d0c\u0d0e\3\2\2\2\u0d0d\u0d07\3\2\2\2\u0d0d"+
		"\u0d0e\3\2\2\2\u0d0e\u0d1c\3\2\2\2\u0d0f\u0d17\7i\2\2\u0d10\u0d12\5\b"+
		"\5\2\u0d11\u0d10\3\2\2\2\u0d12\u0d13\3\2\2\2\u0d13\u0d11\3\2\2\2\u0d13"+
		"\u0d14\3\2\2\2\u0d14\u0d15\3\2\2\2\u0d15\u0d16\7\u018f\2\2\u0d16\u0d18"+
		"\3\2\2\2\u0d17\u0d11\3\2\2\2\u0d17\u0d18\3\2\2\2\u0d18\u0d1c\3\2\2\2\u0d19"+
		"\u0d1c\7j\2\2\u0d1a\u0d1c\7\u0173\2\2\u0d1b\u0d05\3\2\2\2\u0d1b\u0d0f"+
		"\3\2\2\2\u0d1b\u0d19\3\2\2\2\u0d1b\u0d1a\3\2\2\2\u0d1c\u00cf\3\2\2\2\u0d1d"+
		"\u0d1e\5\u0278\u013d\2\u0d1e\u00d1\3\2\2\2\u0d1f\u0d20\7\u01b8\2\2\u0d20"+
		"\u00d3\3\2\2\2\u0d21\u0d23\7\37\2\2\u0d22\u0d24\5\b\5\2\u0d23\u0d22\3"+
		"\2\2\2\u0d24\u0d25\3\2\2\2\u0d25\u0d23\3\2\2\2\u0d25\u0d26\3\2\2\2\u0d26"+
		"\u0d28\3\2\2\2\u0d27\u0d21\3\2\2\2\u0d27\u0d28\3\2\2\2\u0d28\u0d29\3\2"+
		"\2\2\u0d29\u0d31\7\u0081\2\2\u0d2a\u0d2c\5\b\5\2\u0d2b\u0d2a\3\2\2\2\u0d2c"+
		"\u0d2d\3\2\2\2\u0d2d\u0d2b\3\2\2\2\u0d2d\u0d2e\3\2\2\2\u0d2e\u0d2f\3\2"+
		"\2\2\u0d2f\u0d30\5 \21\2\u0d30\u0d32\3\2\2\2\u0d31\u0d2b\3\2\2\2\u0d31"+
		"\u0d32\3\2\2\2\u0d32\u00d5\3\2\2\2\u0d33\u0d35\7\u0102\2\2\u0d34\u0d36"+
		"\5\b\5\2\u0d35\u0d34\3\2\2\2\u0d36\u0d37\3\2\2\2\u0d37\u0d35\3\2\2\2\u0d37"+
		"\u0d38\3\2\2\2\u0d38\u0d3a\3\2\2\2\u0d39\u0d33\3\2\2\2\u0d39\u0d3a\3\2"+
		"\2\2\u0d3a\u0d3b\3\2\2\2\u0d3b\u0d43\7\u00a1\2\2\u0d3c\u0d3e\5\b\5\2\u0d3d"+
		"\u0d3c\3\2\2\2\u0d3e\u0d3f\3\2\2\2\u0d3f\u0d3d\3\2\2\2\u0d3f\u0d40\3\2"+
		"\2\2\u0d40\u0d41\3\2\2\2\u0d41\u0d42\5 \21\2\u0d42\u0d44\3\2\2\2\u0d43"+
		"\u0d3d\3\2\2\2\u0d43\u0d44\3\2\2\2\u0d44\u00d7\3\2\2\2\u0d45\u0d47\7\u0102"+
		"\2\2\u0d46\u0d48\5\b\5\2\u0d47\u0d46\3\2\2\2\u0d48\u0d49\3\2\2\2\u0d49"+
		"\u0d47\3\2\2\2\u0d49\u0d4a\3\2\2\2\u0d4a\u0d4c\3\2\2\2\u0d4b\u0d45\3\2"+
		"\2\2\u0d4b\u0d4c\3\2\2\2\u0d4c\u0d4d\3\2\2\2\u0d4d\u0d4f\7\u0152\2\2\u0d4e"+
		"\u0d50\5\b\5\2\u0d4f\u0d4e\3\2\2\2\u0d50\u0d51\3\2\2\2\u0d51\u0d4f\3\2"+
		"\2\2\u0d51\u0d52\3\2\2\2\u0d52\u0d53\3\2\2\2\u0d53\u0d5b\7\u009e\2\2\u0d54"+
		"\u0d56\5\b\5\2\u0d55\u0d54\3\2\2\2\u0d56\u0d57\3\2\2\2\u0d57\u0d55\3\2"+
		"\2\2\u0d57\u0d58\3\2\2\2\u0d58\u0d59\3\2\2\2\u0d59\u0d5a\5 \21\2\u0d5a"+
		"\u0d5c\3\2\2\2\u0d5b\u0d55\3\2\2\2\u0d5b\u0d5c\3\2\2\2\u0d5c\u00d9\3\2"+
		"\2\2\u0d5d\u0d65\7\u00d5\2\2\u0d5e\u0d60\5\b\5\2\u0d5f\u0d5e\3\2\2\2\u0d60"+
		"\u0d61\3\2\2\2\u0d61\u0d5f\3\2\2\2\u0d61\u0d62\3\2\2\2\u0d62\u0d63\3\2"+
		"\2\2\u0d63\u0d64\7\u00db\2\2\u0d64\u0d66\3\2\2\2\u0d65\u0d5f\3\2\2\2\u0d65"+
		"\u0d66\3\2\2\2\u0d66\u0d6e\3\2\2\2\u0d67\u0d69\5\b\5\2\u0d68\u0d67\3\2"+
		"\2\2\u0d69\u0d6a\3\2\2\2\u0d6a\u0d68\3\2\2\2\u0d6a\u0d6b\3\2\2\2\u0d6b"+
		"\u0d6c\3\2\2\2\u0d6c\u0d6d\5 \21\2\u0d6d\u0d6f\3\2\2\2\u0d6e\u0d68\3\2"+
		"\2\2\u0d6e\u0d6f\3\2\2\2\u0d6f\u00db\3\2\2\2\u0d70\u0d72\7e\2\2\u0d71"+
		"\u0d73\5\b\5\2\u0d72\u0d71\3\2\2\2\u0d73\u0d74\3\2\2\2\u0d74\u0d72\3\2"+
		"\2\2\u0d74\u0d75\3\2\2\2\u0d75\u0d76\3\2\2\2\u0d76\u0d7a\7z\2\2\u0d77"+
		"\u0d79\5\b\5\2\u0d78\u0d77\3\2\2\2\u0d79\u0d7c\3\2\2\2\u0d7a\u0d78\3\2"+
		"\2\2\u0d7a\u0d7b\3\2\2\2\u0d7b\u0d7d\3\2\2\2\u0d7c\u0d7a\3\2\2\2\u0d7d"+
		"\u0d81\7\u01b2\2\2\u0d7e\u0d80\5\b\5\2\u0d7f\u0d7e\3\2\2\2\u0d80\u0d83"+
		"\3\2\2\2\u0d81\u0d7f\3\2\2\2\u0d81\u0d82\3\2\2\2\u0d82\u0d8b\3\2\2\2\u0d83"+
		"\u0d81\3\2\2\2\u0d84\u0d88\5\u00dep\2\u0d85\u0d87\5\b\5\2\u0d86\u0d85"+
		"\3\2\2\2\u0d87\u0d8a\3\2\2\2\u0d88\u0d86\3\2\2\2\u0d88\u0d89\3\2\2\2\u0d89"+
		"\u0d8c\3\2\2\2\u0d8a\u0d88\3\2\2\2\u0d8b\u0d84\3\2\2\2\u0d8b\u0d8c\3\2"+
		"\2\2\u0d8c\u0d94\3\2\2\2\u0d8d\u0d91\5\u00e0q\2\u0d8e\u0d90\5\b\5\2\u0d8f"+
		"\u0d8e\3\2\2\2\u0d90\u0d93\3\2\2\2\u0d91\u0d8f\3\2\2\2\u0d91\u0d92\3\2"+
		"\2\2\u0d92\u0d95\3\2\2\2\u0d93\u0d91\3\2\2\2\u0d94\u0d8d\3\2\2\2\u0d94"+
		"\u0d95\3\2\2\2\u0d95\u0d9d\3\2\2\2\u0d96\u0d9a\5\u00e2r\2\u0d97\u0d99"+
		"\5\b\5\2\u0d98\u0d97\3\2\2\2\u0d99\u0d9c\3\2\2\2\u0d9a\u0d98\3\2\2\2\u0d9a"+
		"\u0d9b\3\2\2\2\u0d9b\u0d9e\3\2\2\2\u0d9c\u0d9a\3\2\2\2\u0d9d\u0d96\3\2"+
		"\2\2\u0d9d\u0d9e\3\2\2\2\u0d9e\u0da6\3\2\2\2\u0d9f\u0da3\5\u00e4s\2\u0da0"+
		"\u0da2\5\b\5\2\u0da1\u0da0\3\2\2\2\u0da2\u0da5\3\2\2\2\u0da3\u0da1\3\2"+
		"\2\2\u0da3\u0da4\3\2\2\2\u0da4\u0da7\3\2\2\2\u0da5\u0da3\3\2\2\2\u0da6"+
		"\u0d9f\3\2\2\2\u0da6\u0da7\3\2\2\2\u0da7\u0daf\3\2\2\2\u0da8\u0dac\5\u00e6"+
		"t\2\u0da9\u0dab\5\b\5\2\u0daa\u0da9\3\2\2\2\u0dab\u0dae\3\2\2\2\u0dac"+
		"\u0daa\3\2\2\2\u0dac\u0dad\3\2\2\2\u0dad\u0db0\3\2\2\2\u0dae\u0dac\3\2"+
		"\2\2\u0daf\u0da8\3\2\2\2\u0daf\u0db0\3\2\2\2\u0db0\u00dd\3\2\2\2\u0db1"+
		"\u0db3\7\u00aa\2\2\u0db2\u0db4\5\b\5\2\u0db3\u0db2\3\2\2\2\u0db4\u0db5"+
		"\3\2\2\2\u0db5\u0db3\3\2\2\2\u0db5\u0db6\3\2\2\2\u0db6\u0db7\3\2\2\2\u0db7"+
		"\u0dbb\7\u0147\2\2\u0db8\u0dba\5\b\5\2\u0db9\u0db8\3\2\2\2\u0dba\u0dbd"+
		"\3\2\2\2\u0dbb\u0db9\3\2\2\2\u0dbb\u0dbc\3\2\2\2\u0dbc\u0dbe\3\2\2\2\u0dbd"+
		"\u0dbb\3\2\2\2\u0dbe\u0dc2\7\u01b2\2\2\u0dbf\u0dc1\5\b\5\2\u0dc0\u0dbf"+
		"\3\2\2\2\u0dc1\u0dc4\3\2\2\2\u0dc2\u0dc0\3\2\2\2\u0dc2\u0dc3\3\2\2\2\u0dc3"+
		"\u0dea\3\2\2\2\u0dc4\u0dc2\3\2\2\2\u0dc5\u0dcf\5\u00e8u\2\u0dc6\u0dc8"+
		"\5\b\5\2\u0dc7\u0dc6\3\2\2\2\u0dc8\u0dcb\3\2\2\2\u0dc9\u0dc7\3\2\2\2\u0dc9"+
		"\u0dca\3\2\2\2\u0dca\u0dcc\3\2\2\2\u0dcb\u0dc9\3\2\2\2\u0dcc\u0dce\5\u00f0"+
		"y\2\u0dcd\u0dc9\3\2\2\2\u0dce\u0dd1\3\2\2\2\u0dcf\u0dcd\3\2\2\2\u0dcf"+
		"\u0dd0\3\2\2\2\u0dd0\u0de1\3\2\2\2\u0dd1\u0dcf\3\2\2\2\u0dd2\u0de1\5\u00ec"+
		"w\2\u0dd3\u0ddd\5\u00eav\2\u0dd4\u0dd6\5\b\5\2\u0dd5\u0dd4\3\2\2\2\u0dd6"+
		"\u0dd9\3\2\2\2\u0dd7\u0dd5\3\2\2\2\u0dd7\u0dd8\3\2\2\2\u0dd8\u0dda\3\2"+
		"\2\2\u0dd9\u0dd7\3\2\2\2\u0dda\u0ddc\5\u00f0y\2\u0ddb\u0dd7\3\2\2\2\u0ddc"+
		"\u0ddf\3\2\2\2\u0ddd\u0ddb\3\2\2\2\u0ddd\u0dde\3\2\2\2\u0dde\u0de1\3\2"+
		"\2\2\u0ddf\u0ddd\3\2\2\2\u0de0\u0dc5\3\2\2\2\u0de0\u0dd2\3\2\2\2\u0de0"+
		"\u0dd3\3\2\2\2\u0de1\u0de5\3\2\2\2\u0de2\u0de4\5\b\5\2\u0de3\u0de2\3\2"+
		"\2\2\u0de4\u0de7\3\2\2\2\u0de5\u0de3\3\2\2\2\u0de5\u0de6\3\2\2\2\u0de6"+
		"\u0de9\3\2\2\2\u0de7\u0de5\3\2\2\2\u0de8\u0de0\3\2\2\2\u0de9\u0dec\3\2"+
		"\2\2\u0dea\u0de8\3\2\2\2\u0dea\u0deb\3\2\2\2\u0deb\u00df\3\2\2\2\u0dec"+
		"\u0dea\3\2\2\2\u0ded\u0def\7\u018d\2\2\u0dee\u0df0\5\b\5\2\u0def\u0dee"+
		"\3\2\2\2\u0df0\u0df1\3\2\2\2\u0df1\u0def\3\2\2\2\u0df1\u0df2\3\2\2\2\u0df2"+
		"\u0df3\3\2\2\2\u0df3\u0df7\7\u0147\2\2\u0df4\u0df6\5\b\5\2\u0df5\u0df4"+
		"\3\2\2\2\u0df6\u0df9\3\2\2\2\u0df7\u0df5\3\2\2\2\u0df7\u0df8\3\2\2\2\u0df8"+
		"\u0dfa\3\2\2\2\u0df9\u0df7\3\2\2\2\u0dfa\u0dfe\7\u01b2\2\2\u0dfb\u0dfd"+
		"\5\b\5\2\u0dfc\u0dfb\3\2\2\2\u0dfd\u0e00\3\2\2\2\u0dfe\u0dfc\3\2\2\2\u0dfe"+
		"\u0dff\3\2\2\2\u0dff\u0e0a\3\2\2\2\u0e00\u0dfe\3\2\2\2\u0e01\u0e05\5\u00f0"+
		"y\2\u0e02\u0e04\5\b\5\2\u0e03\u0e02\3\2\2\2\u0e04\u0e07\3\2\2\2\u0e05"+
		"\u0e03\3\2\2\2\u0e05\u0e06\3\2\2\2\u0e06\u0e09\3\2\2\2\u0e07\u0e05\3\2"+
		"\2\2\u0e08\u0e01\3\2\2\2\u0e09\u0e0c\3\2\2\2\u0e0a\u0e08\3\2\2\2\u0e0a"+
		"\u0e0b\3\2\2\2\u0e0b\u00e1\3\2\2\2\u0e0c\u0e0a\3\2\2\2\u0e0d\u0e0f\7\u00e7"+
		"\2\2\u0e0e\u0e10\5\b\5\2\u0e0f\u0e0e\3\2\2\2\u0e10\u0e11\3\2\2\2\u0e11"+
		"\u0e0f\3\2\2\2\u0e11\u0e12\3\2\2\2\u0e12\u0e13\3\2\2\2\u0e13\u0e17\7\u0147"+
		"\2\2\u0e14\u0e16\5\b\5\2\u0e15\u0e14\3\2\2\2\u0e16\u0e19\3\2\2\2\u0e17"+
		"\u0e15\3\2\2\2\u0e17\u0e18\3\2\2\2\u0e18\u0e1a\3\2\2\2\u0e19\u0e17\3\2"+
		"\2\2\u0e1a\u0e1e\7\u01b2\2\2\u0e1b\u0e1d\5\b\5\2\u0e1c\u0e1b\3\2\2\2\u0e1d"+
		"\u0e20\3\2\2\2\u0e1e\u0e1c\3\2\2\2\u0e1e\u0e1f\3\2\2\2\u0e1f\u0e2a\3\2"+
		"\2\2\u0e20\u0e1e\3\2\2\2\u0e21\u0e25\5\u00f0y\2\u0e22\u0e24\5\b\5\2\u0e23"+
		"\u0e22\3\2\2\2\u0e24\u0e27\3\2\2\2\u0e25\u0e23\3\2\2\2\u0e25\u0e26\3\2"+
		"\2\2\u0e26\u0e29\3\2\2\2\u0e27\u0e25\3\2\2\2\u0e28\u0e21\3\2\2\2\u0e29"+
		"\u0e2c\3\2\2\2\u0e2a\u0e28\3\2\2\2\u0e2a\u0e2b\3\2\2\2\u0e2b\u00e3\3\2"+
		"\2\2\u0e2c\u0e2a\3\2\2\2\u0e2d\u0e2f\7\u0132\2\2\u0e2e\u0e30\5\b\5\2\u0e2f"+
		"\u0e2e\3\2\2\2\u0e30\u0e31\3\2\2\2\u0e31\u0e2f\3\2\2\2\u0e31\u0e32\3\2"+
		"\2\2\u0e32\u0e33\3\2\2\2\u0e33\u0e37\7\u0147\2\2\u0e34\u0e36\5\b\5\2\u0e35"+
		"\u0e34\3\2\2\2\u0e36\u0e39\3\2\2\2\u0e37\u0e35\3\2\2\2\u0e37\u0e38\3\2"+
		"\2\2\u0e38\u0e3a\3\2\2\2\u0e39\u0e37\3\2\2\2\u0e3a\u0e3e\7\u01b2\2\2\u0e3b"+
		"\u0e3d\5\b\5\2\u0e3c\u0e3b\3\2\2\2\u0e3d\u0e40\3\2\2\2\u0e3e\u0e3c\3\2"+
		"\2\2\u0e3e\u0e3f\3\2\2\2\u0e3f\u0e56\3\2\2\2\u0e40\u0e3e\3\2\2\2\u0e41"+
		"\u0e4b\5\u00ecw\2\u0e42\u0e44\5\b\5\2\u0e43\u0e42\3\2\2\2\u0e44\u0e47"+
		"\3\2\2\2\u0e45\u0e43\3\2\2\2\u0e45\u0e46\3\2\2\2\u0e46\u0e48\3\2\2\2\u0e47"+
		"\u0e45\3\2\2\2\u0e48\u0e4a\5\u011e\u0090\2\u0e49\u0e45\3\2\2\2\u0e4a\u0e4d"+
		"\3\2\2\2\u0e4b\u0e49\3\2\2\2\u0e4b\u0e4c\3\2\2\2\u0e4c\u0e51\3\2\2\2\u0e4d"+
		"\u0e4b\3\2\2\2\u0e4e\u0e50\5\b\5\2\u0e4f\u0e4e\3\2\2\2\u0e50\u0e53\3\2"+
		"\2\2\u0e51\u0e4f\3\2\2\2\u0e51\u0e52\3\2\2\2\u0e52\u0e55\3\2\2\2\u0e53"+
		"\u0e51\3\2\2\2\u0e54\u0e41\3\2\2\2\u0e55\u0e58\3\2\2\2\u0e56\u0e54\3\2"+
		"\2\2\u0e56\u0e57\3\2\2\2\u0e57\u00e5\3\2\2\2\u0e58\u0e56\3\2\2\2\u0e59"+
		"\u0e5b\7\u0144\2\2\u0e5a\u0e5c\5\b\5\2\u0e5b\u0e5a\3\2\2\2\u0e5c\u0e5d"+
		"\3\2\2\2\u0e5d\u0e5b\3\2\2\2\u0e5d\u0e5e\3\2\2\2\u0e5e\u0e5f\3\2\2\2\u0e5f"+
		"\u0e63\7\u0147\2\2\u0e60\u0e62\5\b\5\2\u0e61\u0e60\3\2\2\2\u0e62\u0e65"+
		"\3\2\2\2\u0e63\u0e61\3\2\2\2\u0e63\u0e64\3\2\2\2\u0e64\u0e66\3\2\2\2\u0e65"+
		"\u0e63\3\2\2\2\u0e66\u0e6a\7\u01b2\2\2\u0e67\u0e69\5\b\5\2\u0e68\u0e67"+
		"\3\2\2\2\u0e69\u0e6c\3\2\2\2\u0e6a\u0e68\3\2\2\2\u0e6a\u0e6b\3\2\2\2\u0e6b"+
		"\u0e76\3\2\2\2\u0e6c\u0e6a\3\2\2\2\u0e6d\u0e71\5\u017e\u00c0\2\u0e6e\u0e70"+
		"\5\b\5\2\u0e6f\u0e6e\3\2\2\2\u0e70\u0e73\3\2\2\2\u0e71\u0e6f\3\2\2\2\u0e71"+
		"\u0e72\3\2\2\2\u0e72\u0e75\3\2\2\2\u0e73\u0e71\3\2\2\2\u0e74\u0e6d\3\2"+
		"\2\2\u0e75\u0e78\3\2\2\2\u0e76\u0e74\3\2\2\2\u0e76\u0e77\3\2\2\2\u0e77"+
		"\u00e7\3\2\2\2\u0e78\u0e76\3\2\2\2\u0e79\u0e7b\7\u00a9\2\2\u0e7a\u0e7c"+
		"\5\b\5\2\u0e7b\u0e7a\3\2\2\2\u0e7c\u0e7d\3\2\2\2\u0e7d\u0e7b\3\2\2\2\u0e7d"+
		"\u0e7e\3\2\2\2\u0e7e\u0e7f\3\2\2\2\u0e7f\u0e83\5\u0238\u011d\2\u0e80\u0e82"+
		"\5\b\5\2\u0e81\u0e80\3\2\2\2\u0e82\u0e85\3\2\2\2\u0e83\u0e81\3\2\2\2\u0e83"+
		"\u0e84\3\2\2\2\u0e84\u0e8f\3\2\2\2\u0e85\u0e83\3\2\2\2\u0e86\u0e8a\5\u00ee"+
		"x";
	private static final String _serializedATNSegment2 =
		"\2\u0e87\u0e89\5\b\5\2\u0e88\u0e87\3\2\2\2\u0e89\u0e8c\3\2\2\2\u0e8a\u0e88"+
		"\3\2\2\2\u0e8a\u0e8b\3\2\2\2\u0e8b\u0e8e\3\2\2\2\u0e8c\u0e8a\3\2\2\2\u0e8d"+
		"\u0e86\3\2\2\2\u0e8e\u0e91\3\2\2\2\u0e8f\u0e8d\3\2\2\2\u0e8f\u0e90\3\2"+
		"\2\2\u0e90\u0e92\3\2\2\2\u0e91\u0e8f\3\2\2\2\u0e92\u0e93\7\u01b2\2\2\u0e93"+
		"\u00e9\3\2\2\2\u0e94\u0e96\7\u0145\2\2\u0e95\u0e97\5\b\5\2\u0e96\u0e95"+
		"\3\2\2\2\u0e97\u0e98\3\2\2\2\u0e98\u0e96\3\2\2\2\u0e98\u0e99\3\2\2\2\u0e99"+
		"\u0e9a\3\2\2\2\u0e9a\u0e9e\5\u0238\u011d\2\u0e9b\u0e9d\5\b\5\2\u0e9c\u0e9b"+
		"\3\2\2\2\u0e9d\u0ea0\3\2\2\2\u0e9e\u0e9c\3\2\2\2\u0e9e\u0e9f\3\2\2\2\u0e9f"+
		"\u0eaa\3\2\2\2\u0ea0\u0e9e\3\2\2\2\u0ea1\u0ea5\5\u015a\u00ae\2\u0ea2\u0ea4"+
		"\5\b\5\2\u0ea3\u0ea2\3\2\2\2\u0ea4\u0ea7\3\2\2\2\u0ea5\u0ea3\3\2\2\2\u0ea5"+
		"\u0ea6\3\2\2\2\u0ea6\u0ea9\3\2\2\2\u0ea7\u0ea5\3\2\2\2\u0ea8\u0ea1\3\2"+
		"\2\2\u0ea9\u0eac\3\2\2\2\u0eaa\u0ea8\3\2\2\2\u0eaa\u0eab\3\2\2\2\u0eab"+
		"\u0ead\3\2\2\2\u0eac\u0eaa\3\2\2\2\u0ead\u0eae\7\u01b2\2\2\u0eae\u00eb"+
		"\3\2\2\2\u0eaf\u0eb1\7\u0124\2\2\u0eb0\u0eb2\5\b\5\2\u0eb1\u0eb0\3\2\2"+
		"\2\u0eb2\u0eb3\3\2\2\2\u0eb3\u0eb1\3\2\2\2\u0eb3\u0eb4\3\2\2\2\u0eb4\u0eb5"+
		"\3\2\2\2\u0eb5\u0eb9\5\u015e\u00b0\2\u0eb6\u0eb8\5\b\5\2\u0eb7\u0eb6\3"+
		"\2\2\2\u0eb8\u0ebb\3\2\2\2\u0eb9\u0eb7\3\2\2\2\u0eb9\u0eba\3\2\2\2\u0eba"+
		"\u0ec5\3\2\2\2\u0ebb\u0eb9\3\2\2\2\u0ebc\u0ec0\5\u013c\u009f\2\u0ebd\u0ebf"+
		"\5\b\5\2\u0ebe\u0ebd\3\2\2\2\u0ebf\u0ec2\3\2\2\2\u0ec0\u0ebe\3\2\2\2\u0ec0"+
		"\u0ec1\3\2\2\2\u0ec1\u0ec4\3\2\2\2\u0ec2\u0ec0\3\2\2\2\u0ec3\u0ebc\3\2"+
		"\2\2\u0ec4\u0ec7\3\2\2\2\u0ec5\u0ec3\3\2\2\2\u0ec5\u0ec6\3\2\2\2\u0ec6"+
		"\u0ec8\3\2\2\2\u0ec7\u0ec5\3\2\2\2\u0ec8\u0ec9\7\u01b2\2\2\u0ec9\u00ed"+
		"\3\2\2\2\u0eca\u0ecc\7\u00d6\2\2\u0ecb\u0ecd\5\b\5\2\u0ecc\u0ecb\3\2\2"+
		"\2\u0ecd\u0ece\3\2\2\2\u0ece\u0ecc\3\2\2\2\u0ece\u0ecf\3\2\2\2\u0ecf\u0ed1"+
		"\3\2\2\2\u0ed0\u0eca\3\2\2\2\u0ed0\u0ed1\3\2\2\2\u0ed1\u0ed2\3\2\2\2\u0ed2"+
		"\u0ee8\7\u00a6\2\2\u0ed3\u0ed5\7\u00d6\2\2\u0ed4\u0ed6\5\b\5\2\u0ed5\u0ed4"+
		"\3\2\2\2\u0ed6\u0ed7\3\2\2\2\u0ed7\u0ed5\3\2\2\2\u0ed7\u0ed8\3\2\2\2\u0ed8"+
		"\u0eda\3\2\2\2\u0ed9\u0ed3\3\2\2\2\u0ed9\u0eda\3\2\2\2\u0eda\u0edb\3\2"+
		"\2\2\u0edb\u0ee8\7\u00bc\2\2\u0edc\u0ee8\5\u022c\u0117\2\u0edd\u0ee8\5"+
		"\u0174\u00bb\2\u0ede\u0ee8\5\u0172\u00ba\2\u0edf\u0ee8\5\u016e\u00b8\2"+
		"\u0ee0\u0ee8\5\u016a\u00b6\2\u0ee1\u0ee8\5\u0160\u00b1\2\u0ee2\u0ee8\5"+
		"\u015c\u00af\2\u0ee3\u0ee8\5\u022a\u0116\2\u0ee4\u0ee8\5\u0218\u010d\2"+
		"\u0ee5\u0ee8\5\u0214\u010b\2\u0ee6\u0ee8\5\u0210\u0109\2\u0ee7\u0ed0\3"+
		"\2\2\2\u0ee7\u0ed9\3\2\2\2\u0ee7\u0edc\3\2\2\2\u0ee7\u0edd\3\2\2\2\u0ee7"+
		"\u0ede\3\2\2\2\u0ee7\u0edf\3\2\2\2\u0ee7\u0ee0\3\2\2\2\u0ee7\u0ee1\3\2"+
		"\2\2\u0ee7\u0ee2\3\2\2\2\u0ee7\u0ee3\3\2\2\2\u0ee7\u0ee4\3\2\2\2\u0ee7"+
		"\u0ee5\3\2\2\2\u0ee7\u0ee6\3\2\2\2\u0ee8\u00ef\3\2\2\2\u0ee9\u0ef3\5\u00f2"+
		"z\2\u0eea\u0eec\5\b\5\2\u0eeb\u0eea\3\2\2\2\u0eec\u0eef\3\2\2\2\u0eed"+
		"\u0eeb\3\2\2\2\u0eed\u0eee\3\2\2\2\u0eee\u0ef0\3\2\2\2\u0eef\u0eed\3\2"+
		"\2\2\u0ef0\u0ef2\5\u00f2z\2\u0ef1\u0eed\3\2\2\2\u0ef2\u0ef5\3\2\2\2\u0ef3"+
		"\u0ef1\3\2\2\2\u0ef3\u0ef4\3\2\2\2\u0ef4\u00f1\3\2\2\2\u0ef5\u0ef3\3\2"+
		"\2\2\u0ef6\u0f00\5\u00f4{\2\u0ef7\u0ef9\5\b\5\2\u0ef8\u0ef7\3\2\2\2\u0ef9"+
		"\u0efa\3\2\2\2\u0efa\u0ef8\3\2\2\2\u0efa\u0efb\3\2\2\2\u0efb\u0efe\3\2"+
		"\2\2\u0efc\u0eff\5\u0158\u00ad\2\u0efd\u0eff\7\u00ad\2\2\u0efe\u0efc\3"+
		"\2\2\2\u0efe\u0efd\3\2\2\2\u0eff\u0f01\3\2\2\2\u0f00\u0ef8\3\2\2\2\u0f00"+
		"\u0f01\3\2\2\2\u0f01\u0f0f\3\2\2\2\u0f02\u0f04\5\b\5\2\u0f03\u0f02\3\2"+
		"\2\2\u0f04\u0f05\3\2\2\2\u0f05\u0f03\3\2\2\2\u0f05\u0f06\3\2\2\2\u0f06"+
		"\u0f07\3\2\2\2\u0f07\u0f09\7\u0128\2\2\u0f08\u0f0a\5\b\5\2\u0f09\u0f08"+
		"\3\2\2\2\u0f0a\u0f0b\3\2\2\2\u0f0b\u0f09\3\2\2\2\u0f0b\u0f0c\3\2\2\2\u0f0c"+
		"\u0f0d\3\2\2\2\u0f0d\u0f0e\5\u0156\u00ac\2\u0f0e\u0f10\3\2\2\2\u0f0f\u0f03"+
		"\3\2\2\2\u0f0f\u0f10\3\2\2\2\u0f10\u0f1a\3\2\2\2\u0f11\u0f13\5\b\5\2\u0f12"+
		"\u0f11\3\2\2\2\u0f13\u0f14\3\2\2\2\u0f14\u0f12\3\2\2\2\u0f14\u0f15\3\2"+
		"\2\2\u0f15\u0f16\3\2\2\2\u0f16\u0f17\5\u00f6|\2\u0f17\u0f19\3\2\2\2\u0f18"+
		"\u0f12\3\2\2\2\u0f19\u0f1c\3\2\2\2\u0f1a\u0f18\3\2\2\2\u0f1a\u0f1b\3\2"+
		"\2\2\u0f1b\u0f1d\3\2\2\2\u0f1c\u0f1a\3\2\2\2\u0f1d\u0f1e\7\u01b2\2\2\u0f1e"+
		"\u00f3\3\2\2\2\u0f1f\u0f20\7\u01b6\2\2\u0f20\u00f5\3\2\2\2\u0f21\u0f23"+
		"\7\u00d6\2\2\u0f22\u0f24\5\b\5\2\u0f23\u0f22\3\2\2\2\u0f24\u0f25\3\2\2"+
		"\2\u0f25\u0f23\3\2\2\2\u0f25\u0f26\3\2\2\2\u0f26\u0f28\3\2\2\2\u0f27\u0f21"+
		"\3\2\2\2\u0f27\u0f28\3\2\2\2\u0f28\u0f29\3\2\2\2\u0f29\u0f5e\7\u00a6\2"+
		"\2\u0f2a\u0f2c\7\u00d6\2\2\u0f2b\u0f2d\5\b\5\2\u0f2c\u0f2b\3\2\2\2\u0f2d"+
		"\u0f2e\3\2\2\2\u0f2e\u0f2c\3\2\2\2\u0f2e\u0f2f\3\2\2\2\u0f2f\u0f31\3\2"+
		"\2\2\u0f30\u0f2a\3\2\2\2\u0f30\u0f31\3\2\2\2\u0f31\u0f32\3\2\2\2\u0f32"+
		"\u0f5e\7\u00bc\2\2\u0f33\u0f5e\5\u0150\u00a9\2\u0f34\u0f5e\5\u014c\u00a7"+
		"\2\u0f35\u0f5e\5\u0124\u0093\2\u0f36\u0f5e\5\u010c\u0087\2\u0f37\u0f3f"+
		"\t\13\2\2\u0f38\u0f3a\5\b\5\2\u0f39\u0f38\3\2\2\2\u0f3a\u0f3b\3\2\2\2"+
		"\u0f3b\u0f39\3\2\2\2\u0f3b\u0f3c\3\2\2\2\u0f3c\u0f3d\3\2\2\2\u0f3d\u0f3e"+
		"\t\f\2\2\u0f3e\u0f40\3\2\2\2\u0f3f\u0f39\3\2\2\2\u0f3f\u0f40\3\2\2\2\u0f40"+
		"\u0f5e\3\2\2\2\u0f41\u0f49\t\r\2\2\u0f42\u0f44\5\b\5\2\u0f43\u0f42\3\2"+
		"\2\2\u0f44\u0f45\3\2\2\2\u0f45\u0f43\3\2\2\2\u0f45\u0f46\3\2\2\2\u0f46"+
		"\u0f47\3\2\2\2\u0f47\u0f48\7\u0140\2\2\u0f48\u0f4a\3\2\2\2\u0f49\u0f43"+
		"\3\2\2\2\u0f49\u0f4a\3\2\2\2\u0f4a\u0f5e\3\2\2\2\u0f4b\u0f4d\7,\2\2\u0f4c"+
		"\u0f4e\5\b\5\2\u0f4d\u0f4c\3\2\2\2\u0f4e\u0f4f\3\2\2\2\u0f4f\u0f4d\3\2"+
		"\2\2\u0f4f\u0f50\3\2\2\2\u0f50\u0f57\3\2\2\2\u0f51\u0f53\7\u0189\2\2\u0f52"+
		"\u0f54\5\b\5\2\u0f53\u0f52\3\2\2\2\u0f54\u0f55\3\2\2\2\u0f55\u0f53\3\2"+
		"\2\2\u0f55\u0f56\3\2\2\2\u0f56\u0f58\3\2\2\2\u0f57\u0f51\3\2\2\2\u0f57"+
		"\u0f58\3\2\2\2\u0f58\u0f59\3\2\2\2\u0f59\u0f5a\7\u0191\2\2\u0f5a\u0f5e"+
		"\3\2\2\2\u0f5b\u0f5e\5\u00fe\u0080\2\u0f5c\u0f5e\5\u00f8}\2\u0f5d\u0f27"+
		"\3\2\2\2\u0f5d\u0f30\3\2\2\2\u0f5d\u0f33\3\2\2\2\u0f5d\u0f34\3\2\2\2\u0f5d"+
		"\u0f35\3\2\2\2\u0f5d\u0f36\3\2\2\2\u0f5d\u0f37\3\2\2\2\u0f5d\u0f41\3\2"+
		"\2\2\u0f5d\u0f4b\3\2\2\2\u0f5d\u0f5b\3\2\2\2\u0f5d\u0f5c\3\2\2\2\u0f5e"+
		"\u00f7\3\2\2\2\u0f5f\u0f61\7\u012f\2\2\u0f60\u0f62\5\b\5\2\u0f61\u0f60"+
		"\3\2\2\2\u0f62\u0f63\3\2\2\2\u0f63\u0f61\3\2\2\2\u0f63\u0f64\3\2\2\2\u0f64"+
		"\u0f65\3\2\2\2\u0f65\u0f73\5\u00fa~\2\u0f66\u0f68\5\b\5\2\u0f67\u0f66"+
		"\3\2\2\2\u0f68\u0f69\3\2\2\2\u0f69\u0f67\3\2\2\2\u0f69\u0f6a\3\2\2\2\u0f6a"+
		"\u0f6b\3\2\2\2\u0f6b\u0f6d\t\6\2\2\u0f6c\u0f6e\5\b\5\2\u0f6d\u0f6c\3\2"+
		"\2\2\u0f6e\u0f6f\3\2\2\2\u0f6f\u0f6d\3\2\2\2\u0f6f\u0f70\3\2\2\2\u0f70"+
		"\u0f71\3\2\2\2\u0f71\u0f72\5\u00fc\177\2\u0f72\u0f74\3\2\2\2\u0f73\u0f67"+
		"\3\2\2\2\u0f73\u0f74\3\2\2\2\u0f74\u00f9\3\2\2\2\u0f75\u0f76\5\u01ce\u00e8"+
		"\2\u0f76\u00fb\3\2\2\2\u0f77\u0f78\5\u01ce\u00e8\2\u0f78\u00fd\3\2\2\2"+
		"\u0f79\u0f81\7\u0185\2\2\u0f7a\u0f7c\5\b\5\2\u0f7b\u0f7a\3\2\2\2\u0f7c"+
		"\u0f7d\3\2\2\2\u0f7d\u0f7b\3\2\2\2\u0f7d\u0f7e\3\2\2\2\u0f7e\u0f7f\3\2"+
		"\2\2\u0f7f\u0f80\7\u00d6\2\2\u0f80\u0f82\3\2\2\2\u0f81\u0f7b\3\2\2\2\u0f81"+
		"\u0f82\3\2\2\2\u0f82\u0f8e\3\2\2\2\u0f83\u0f8b\7\u0186\2\2\u0f84\u0f86"+
		"\5\b\5\2\u0f85\u0f84\3\2\2\2\u0f86\u0f87\3\2\2\2\u0f87\u0f85\3\2\2\2\u0f87"+
		"\u0f88\3\2\2\2\u0f88\u0f89\3\2\2\2\u0f89\u0f8a\7\26\2\2\u0f8a\u0f8c\3"+
		"\2\2\2\u0f8b\u0f85\3\2\2\2\u0f8b\u0f8c\3\2\2\2\u0f8c\u0f8e\3\2\2\2\u0f8d"+
		"\u0f79\3\2\2\2\u0f8d\u0f83\3\2\2\2\u0f8e\u0f90\3\2\2\2\u0f8f\u0f91\5\b"+
		"\5\2\u0f90\u0f8f\3\2\2\2\u0f91\u0f92\3\2\2\2\u0f92\u0f90\3\2\2\2\u0f92"+
		"\u0f93\3\2\2\2\u0f93\u0f94\3\2\2\2\u0f94\u0f9e\5\u0100\u0081\2\u0f95\u0f97"+
		"\5\b\5\2\u0f96\u0f95\3\2\2\2\u0f97\u0f98\3\2\2\2\u0f98\u0f96\3\2\2\2\u0f98"+
		"\u0f99\3\2\2\2\u0f99\u0f9a\3\2\2\2\u0f9a\u0f9b\5\u0100\u0081\2\u0f9b\u0f9d"+
		"\3\2\2\2\u0f9c\u0f96\3\2\2\2\u0f9d\u0fa0\3\2\2\2\u0f9e\u0f9c\3\2\2\2\u0f9e"+
		"\u0f9f\3\2\2\2\u0f9f\u00ff\3\2\2\2\u0fa0\u0f9e\3\2\2\2\u0fa1\u0fa9\5\u0102"+
		"\u0082\2\u0fa2\u0fa4\5\b\5\2\u0fa3\u0fa2\3\2\2\2\u0fa4\u0fa5\3\2\2\2\u0fa5"+
		"\u0fa3\3\2\2\2\u0fa5\u0fa6\3\2\2\2\u0fa6\u0fa7\3\2\2\2\u0fa7\u0fa8\5\u0104"+
		"\u0083\2\u0fa8\u0faa\3\2\2\2\u0fa9\u0fa3\3\2\2\2\u0fa9\u0faa\3\2\2\2\u0faa"+
		"\u0101\3\2\2\2\u0fab\u0fbd\5\u010a\u0086\2\u0fac\u0fae\7\u012a\2\2\u0fad"+
		"\u0faf\5\b\5\2\u0fae\u0fad\3\2\2\2\u0faf\u0fb0\3\2\2\2\u0fb0\u0fae\3\2"+
		"\2\2\u0fb0\u0fb1\3\2\2\2\u0fb1\u0fb2\3\2\2\2\u0fb2\u0fb3\5\u0108\u0085"+
		"\2\u0fb3\u0fbd\3\2\2\2\u0fb4\u0fb6\7\u00a6\2\2\u0fb5\u0fb7\5\b\5\2\u0fb6"+
		"\u0fb5\3\2\2\2\u0fb7\u0fb8\3\2\2\2\u0fb8\u0fb6\3\2\2\2\u0fb8\u0fb9\3\2"+
		"\2\2\u0fb9\u0fba\3\2\2\2\u0fba\u0fbb\5\u0106\u0084\2\u0fbb\u0fbd\3\2\2"+
		"\2\u0fbc\u0fab\3\2\2\2\u0fbc\u0fac\3\2\2\2\u0fbc\u0fb4\3\2\2\2\u0fbd\u0103"+
		"\3\2\2\2\u0fbe\u0fc0\t\6\2\2\u0fbf\u0fc1\5\b\5\2\u0fc0\u0fbf\3\2\2\2\u0fc1"+
		"\u0fc2\3\2\2\2\u0fc2\u0fc0\3\2\2\2\u0fc2\u0fc3\3\2\2\2\u0fc3\u0fc4\3\2"+
		"\2\2\u0fc4\u0fc5\5\u0102\u0082\2\u0fc5\u0105\3\2\2\2\u0fc6\u0fc7\7\u01b8"+
		"\2\2\u0fc7\u0107\3\2\2\2\u0fc8\u0fc9\5\u01ce\u00e8\2\u0fc9\u0109\3\2\2"+
		"\2\u0fca\u0fcb\t\16\2\2\u0fcb\u010b\3\2\2\2\u0fcc\u0fce\7\u00fe\2\2\u0fcd"+
		"\u0fcf\5\b\5\2\u0fce\u0fcd\3\2\2\2\u0fcf\u0fd0\3\2\2\2\u0fd0\u0fce\3\2"+
		"\2\2\u0fd0\u0fd1\3\2\2\2\u0fd1\u0fd2\3\2\2\2\u0fd2\u0fdc\5\u0116\u008c"+
		"\2\u0fd3\u0fd5\5\b\5\2\u0fd4\u0fd3\3\2\2\2\u0fd5\u0fd6\3\2\2\2\u0fd6\u0fd4"+
		"\3\2\2\2\u0fd6\u0fd7\3\2\2\2\u0fd7\u0fd8\3\2\2\2\u0fd8\u0fd9\5\u0112\u008a"+
		"\2\u0fd9\u0fdb\3\2\2\2\u0fda\u0fd4\3\2\2\2\u0fdb\u0fde\3\2\2\2\u0fdc\u0fda"+
		"\3\2\2\2\u0fdc\u0fdd\3\2\2\2\u0fdd\u0fe6\3\2\2\2\u0fde\u0fdc\3\2\2\2\u0fdf"+
		"\u0fe1\5\b\5\2\u0fe0\u0fdf\3\2\2\2\u0fe1\u0fe2\3\2\2\2\u0fe2\u0fe0\3\2"+
		"\2\2\u0fe2\u0fe3\3\2\2\2\u0fe3\u0fe4\3\2\2\2\u0fe4\u0fe5\5\u010e\u0088"+
		"\2\u0fe5\u0fe7\3\2\2\2\u0fe6\u0fe0\3\2\2\2\u0fe6\u0fe7\3\2\2\2\u0fe7\u010d"+
		"\3\2\2\2\u0fe8\u0fea\7\u00cb\2\2\u0fe9\u0feb\5\b\5\2\u0fea\u0fe9\3\2\2"+
		"\2\u0feb\u0fec\3\2\2\2\u0fec\u0fea\3\2\2\2\u0fec\u0fed\3\2\2\2\u0fed\u0ff4"+
		"\3\2\2\2\u0fee\u0ff0\7\62\2\2\u0fef\u0ff1\5\b\5\2\u0ff0\u0fef\3\2\2\2"+
		"\u0ff1\u0ff2\3\2\2\2\u0ff2\u0ff0\3\2\2\2\u0ff2\u0ff3\3\2\2\2\u0ff3\u0ff5"+
		"\3\2\2\2\u0ff4\u0fee\3\2\2\2\u0ff4\u0ff5\3\2\2\2\u0ff5\u0ff6\3\2\2\2\u0ff6"+
		"\u1000\5\u0110\u0089\2\u0ff7\u0ff9\5\b\5\2\u0ff8\u0ff7\3\2\2\2\u0ff9\u0ffa"+
		"\3\2\2\2\u0ffa\u0ff8\3\2\2\2\u0ffa\u0ffb\3\2\2\2\u0ffb\u0ffc\3\2\2\2\u0ffc"+
		"\u0ffd\5\u0110\u0089\2\u0ffd\u0fff\3\2\2\2\u0ffe\u0ff8\3\2\2\2\u0fff\u1002"+
		"\3\2\2\2\u1000\u0ffe\3\2\2\2\u1000\u1001\3\2\2\2\u1001\u010f\3\2\2\2\u1002"+
		"\u1000\3\2\2\2\u1003\u1004\7\u01b8\2\2\u1004\u0111\3\2\2\2\u1005\u1007"+
		"\t\17\2\2\u1006\u1008\5\b\5\2\u1007\u1006\3\2\2\2\u1008\u1009\3\2\2\2"+
		"\u1009\u1007\3\2\2\2\u1009\u100a\3\2\2\2\u100a\u1011\3\2\2\2\u100b\u100d"+
		"\7\u00db\2\2\u100c\u100e\5\b\5\2\u100d\u100c\3\2\2\2\u100e\u100f\3\2\2"+
		"\2\u100f\u100d\3\2\2\2\u100f\u1010\3\2\2\2\u1010\u1012\3\2\2\2\u1011\u100b"+
		"\3\2\2\2\u1011\u1012\3\2\2\2\u1012\u1019\3\2\2\2\u1013\u1015\7\u00d6\2"+
		"\2\u1014\u1016\5\b\5\2\u1015\u1014\3\2\2\2\u1016\u1017\3\2\2\2\u1017\u1015"+
		"\3\2\2\2\u1017\u1018\3\2\2\2\u1018\u101a\3\2\2\2\u1019\u1013\3\2\2\2\u1019"+
		"\u101a\3\2\2\2\u101a\u101b\3\2\2\2\u101b\u1025\5\u0114\u008b\2\u101c\u101e"+
		"\5\b\5\2\u101d\u101c\3\2\2\2\u101e\u101f\3\2\2\2\u101f\u101d\3\2\2\2\u101f"+
		"\u1020\3\2\2\2\u1020\u1021\3\2\2\2\u1021\u1022\5\u0114\u008b\2\u1022\u1024"+
		"\3\2\2\2\u1023\u101d\3\2\2\2\u1024\u1027\3\2\2\2\u1025\u1023\3\2\2\2\u1025"+
		"\u1026\3\2\2\2\u1026\u0113\3\2\2\2\u1027\u1025\3\2\2\2\u1028\u1029\5\u01ce"+
		"\u00e8\2\u1029\u0115\3\2\2\2\u102a\u102c\5\u0118\u008d\2\u102b\u102d\5"+
		"\b\5\2\u102c\u102b\3\2\2\2\u102d\u102e\3\2\2\2\u102e\u102c\3\2\2\2\u102e"+
		"\u102f\3\2\2\2\u102f\u1030\3\2\2\2\u1030\u1031\7\u0174\2\2\u1031\u105b"+
		"\3\2\2\2\u1032\u1034\5\u011a\u008e\2\u1033\u1035\5\b\5\2\u1034\u1033\3"+
		"\2\2\2\u1035\u1036\3\2\2\2\u1036\u1034\3\2\2\2\u1036\u1037\3\2\2\2\u1037"+
		"\u1038\3\2\2\2\u1038\u103a\7\u0175\2\2\u1039\u103b\5\b\5\2\u103a\u1039"+
		"\3\2\2\2\u103b\u103c\3\2\2\2\u103c\u103a\3\2\2\2\u103c\u103d\3\2\2\2\u103d"+
		"\u103e\3\2\2\2\u103e\u1040\5\u011c\u008f\2\u103f\u1041\5\b\5\2\u1040\u103f"+
		"\3\2\2\2\u1041\u1042\3\2\2\2\u1042\u1040\3\2\2\2\u1042\u1043\3\2\2\2\u1043"+
		"\u1044\3\2\2\2\u1044\u1046\7\u0174\2\2\u1045\u1047\5\b\5\2\u1046\u1045"+
		"\3\2\2\2\u1047\u1048\3\2\2\2\u1048\u1046\3\2\2\2\u1048\u1049\3\2\2\2\u1049"+
		"\u104a\3\2\2\2\u104a\u104c\7s\2\2\u104b\u104d\5\b\5\2\u104c\u104b\3\2"+
		"\2\2\u104d\u104e\3\2\2\2\u104e\u104c\3\2\2\2\u104e\u104f\3\2\2\2\u104f"+
		"\u1056\3\2\2\2\u1050\u1052\7\u0102\2\2\u1051\u1053\5\b\5\2\u1052\u1051"+
		"\3\2\2\2\u1053\u1054\3\2\2\2\u1054\u1052\3\2\2\2\u1054\u1055\3\2\2\2\u1055"+
		"\u1057\3\2\2\2\u1056\u1050\3\2\2\2\u1056\u1057\3\2\2\2\u1057\u1058\3\2"+
		"\2\2\u1058\u1059\5\u0178\u00bd\2\u1059\u105b\3\2\2\2\u105a\u102a\3\2\2"+
		"\2\u105a\u1032\3\2\2\2\u105b\u0117\3\2\2\2\u105c\u105d\7\u01b6\2\2\u105d"+
		"\u0119\3\2\2\2\u105e\u105f\7\u01b6\2\2\u105f\u011b\3\2\2\2\u1060\u1061"+
		"\7\u01b6\2\2\u1061\u011d\3\2\2\2\u1062\u106c\5\u0120\u0091\2\u1063\u1065"+
		"\5\b\5\2\u1064\u1063\3\2\2\2\u1065\u1068\3\2\2\2\u1066\u1064\3\2\2\2\u1066"+
		"\u1067\3\2\2\2\u1067\u1069\3\2\2\2\u1068\u1066\3\2\2\2\u1069\u106b\5\u0120"+
		"\u0091\2\u106a\u1066\3\2\2\2\u106b\u106e\3\2\2\2\u106c\u106a\3\2\2\2\u106c"+
		"\u106d\3\2\2\2\u106d\u011f\3\2\2\2\u106e\u106c\3\2\2\2\u106f\u1077\5\u00f4"+
		"{\2\u1070\u1072\5\b\5\2\u1071\u1070\3\2\2\2\u1072\u1073\3\2\2\2\u1073"+
		"\u1071\3\2\2\2\u1073\u1074\3\2\2\2\u1074\u1075\3\2\2\2\u1075\u1076\5\u0158"+
		"\u00ad\2\u1076\u1078\3\2\2\2\u1077\u1071\3\2\2\2\u1077\u1078\3\2\2\2\u1078"+
		"\u1082\3\2\2\2\u1079\u107b\5\b\5\2\u107a\u1079\3\2\2\2\u107b\u107c\3\2"+
		"\2\2\u107c\u107a\3\2\2\2\u107c\u107d\3\2\2\2\u107d\u107e\3\2\2\2\u107e"+
		"\u107f\5\u0122\u0092\2\u107f\u1081\3\2\2\2\u1080\u107a\3\2\2\2\u1081\u1084"+
		"\3\2\2\2\u1082\u1080\3\2\2\2\u1082\u1083\3\2\2\2\u1083\u1085\3\2\2\2\u1084"+
		"\u1082\3\2\2\2\u1085\u1086\7\u01b2\2\2\u1086\u0121\3\2\2\2\u1087\u1089"+
		"\7\u00e4\2\2\u1088\u108a\5\b\5\2\u1089\u1088\3\2\2\2\u108a\u108b\3\2\2"+
		"\2\u108b\u1089\3\2\2\2\u108b\u108c\3\2\2\2\u108c\u1093\3\2\2\2\u108d\u108f"+
		"\7\u00fb\2\2\u108e\u1090\5\b\5\2\u108f\u108e\3\2\2\2\u1090\u1091\3\2\2"+
		"\2\u1091\u108f\3\2\2\2\u1091\u1092\3\2\2\2\u1092\u1094\3\2\2\2\u1093\u108d"+
		"\3\2\2\2\u1093\u1094\3\2\2\2\u1094\u109b\3\2\2\2\u1095\u1097\7\u00d6\2"+
		"\2\u1096\u1098\5\b\5\2\u1097\u1096\3\2\2\2\u1098\u1099\3\2\2\2\u1099\u1097"+
		"\3\2\2\2\u1099\u109a\3\2\2\2\u109a\u109c\3\2\2\2\u109b\u1095\3\2\2\2\u109b"+
		"\u109c\3\2\2\2\u109c\u109d\3\2\2\2\u109d\u109e\5\u0138\u009d\2\u109e\u1136"+
		"\3\2\2\2\u109f\u10a1\7\u00f8\2\2\u10a0\u10a2\5\b\5\2\u10a1\u10a0\3\2\2"+
		"\2\u10a2\u10a3\3\2\2\2\u10a3\u10a1\3\2\2\2\u10a3\u10a4\3\2\2\2\u10a4\u10a5"+
		"\3\2\2\2\u10a5\u10a7\7\u00bf\2\2\u10a6\u10a8\5\b\5\2\u10a7\u10a6\3\2\2"+
		"\2\u10a8\u10a9\3\2\2\2\u10a9\u10a7\3\2\2\2\u10a9\u10aa\3\2\2\2\u10aa\u10b1"+
		"\3\2\2\2\u10ab\u10ad\7\u00d6\2\2\u10ac\u10ae\5\b\5\2\u10ad\u10ac\3\2\2"+
		"\2\u10ae\u10af\3\2\2\2\u10af\u10ad\3\2\2\2\u10af\u10b0\3\2\2\2\u10b0\u10b2"+
		"\3\2\2\2\u10b1\u10ab\3\2\2\2\u10b1\u10b2\3\2\2\2\u10b2\u10b3\3\2\2\2\u10b3"+
		"\u10b4\5\u0136\u009c\2\u10b4\u1136\3\2\2\2\u10b5\u10b7\7\u0179\2\2\u10b6"+
		"\u10b8\5\b\5\2\u10b7\u10b6\3\2\2\2\u10b8\u10b9\3\2\2\2\u10b9\u10b7\3\2"+
		"\2\2\u10b9\u10ba\3\2\2\2\u10ba\u10c1\3\2\2\2\u10bb\u10bd\7\u00d6\2\2\u10bc"+
		"\u10be\5\b\5\2\u10bd\u10bc\3\2\2\2\u10be\u10bf\3\2\2\2\u10bf\u10bd\3\2"+
		"\2\2\u10bf\u10c0\3\2\2\2\u10c0\u10c2\3\2\2\2\u10c1\u10bb\3\2\2\2\u10c1"+
		"\u10c2\3\2\2\2\u10c2\u10c3\3\2\2\2\u10c3\u10c4\5\u0132\u009a\2\u10c4\u1136"+
		"\3\2\2\2\u10c5\u10c7\7\u0182\2\2\u10c6\u10c8\5\b\5\2\u10c7\u10c6\3\2\2"+
		"\2\u10c8\u10c9\3\2\2\2\u10c9\u10c7\3\2\2\2\u10c9\u10ca\3\2\2\2\u10ca\u10d1"+
		"\3\2\2\2\u10cb\u10cd\7\u00d6\2\2\u10cc\u10ce\5\b\5\2\u10cd\u10cc\3\2\2"+
		"\2\u10ce\u10cf\3\2\2\2\u10cf\u10cd\3\2\2\2\u10cf\u10d0\3\2\2\2\u10d0\u10d2"+
		"\3\2\2\2\u10d1\u10cb\3\2\2\2\u10d1\u10d2\3\2\2\2\u10d2\u10d4\3\2\2\2\u10d3"+
		"\u10c5\3\2\2\2\u10d3\u10d4\3\2\2\2\u10d4\u10d5\3\2\2\2\u10d5\u1136\7x"+
		"\2\2\u10d6\u10d8\7,\2\2\u10d7\u10d9\5\b\5\2\u10d8\u10d7\3\2\2\2\u10d9"+
		"\u10da\3\2\2\2\u10da\u10d8\3\2\2\2\u10da\u10db\3\2\2\2\u10db\u10e2\3\2"+
		"\2\2\u10dc\u10de\7\u0189\2\2\u10dd\u10df\5\b\5\2\u10de\u10dd\3\2\2\2\u10df"+
		"\u10e0\3\2\2\2\u10e0\u10de\3\2\2\2\u10e0\u10e1\3\2\2\2\u10e1\u10e3\3\2"+
		"\2\2\u10e2\u10dc\3\2\2\2\u10e2\u10e3\3\2\2\2\u10e3\u10e4\3\2\2\2\u10e4"+
		"\u10e5\7\u0191\2\2\u10e5\u1136\3\2\2\2\u10e6\u10e8\7A\2\2\u10e7\u10e9"+
		"\5\b\5\2\u10e8\u10e7\3\2\2\2\u10e9\u10ea\3\2\2\2\u10ea\u10e8\3\2\2\2\u10ea"+
		"\u10eb\3\2\2\2\u10eb\u10f2\3\2\2\2\u10ec\u10ee\7\u00fb\2\2\u10ed\u10ef"+
		"\5\b\5\2\u10ee\u10ed\3\2\2\2\u10ef\u10f0\3\2\2\2\u10f0\u10ee\3\2\2\2\u10f0"+
		"\u10f1\3\2\2\2\u10f1\u10f3\3\2\2\2\u10f2\u10ec\3\2\2\2\u10f2\u10f3\3\2"+
		"\2\2\u10f3\u10fa\3\2\2\2\u10f4\u10f6\7\u00d6\2\2\u10f5\u10f7\5\b\5\2\u10f6"+
		"\u10f5\3\2\2\2\u10f7\u10f8\3\2\2\2\u10f8\u10f6\3\2\2\2\u10f8\u10f9\3\2"+
		"\2\2\u10f9\u10fb\3\2\2\2\u10fa\u10f4\3\2\2\2\u10fa\u10fb\3\2\2\2\u10fb"+
		"\u10fc\3\2\2\2\u10fc\u10fd\5\u0130\u0099\2\u10fd\u1136\3\2\2\2\u10fe\u1106"+
		"\7\u00bf\2\2\u10ff\u1101\5\b\5\2\u1100\u10ff\3\2\2\2\u1101\u1102\3\2\2"+
		"\2\u1102\u1100\3\2\2\2\u1102\u1103\3\2\2\2\u1103\u1104\3\2\2\2\u1104\u1105"+
		"\7\u00cc\2\2\u1105\u1107\3\2\2\2\u1106\u1100\3\2\2\2\u1106\u1107\3\2\2"+
		"\2\u1107\u1136\3\2\2\2\u1108\u1110\t\r\2\2\u1109\u110b\5\b\5\2\u110a\u1109"+
		"\3\2\2\2\u110b\u110c\3\2\2\2\u110c\u110a\3\2\2\2\u110c\u110d\3\2\2\2\u110d"+
		"\u110e\3\2\2\2\u110e\u110f\7\u0140\2\2\u110f\u1111\3\2\2\2\u1110\u110a"+
		"\3\2\2\2\u1110\u1111\3\2\2\2\u1111\u1136\3\2\2\2\u1112\u1136\5\u0150\u00a9"+
		"\2\u1113\u1136\5\u0124\u0093\2\u1114\u1116\7\u0155\2\2\u1115\u1117\5\b"+
		"\5\2\u1116\u1115\3\2\2\2\u1117\u1118\3\2\2\2\u1118\u1116\3\2\2\2\u1118"+
		"\u1119\3\2\2\2\u1119\u1120\3\2\2\2\u111a\u111c\7\u00d6\2\2\u111b\u111d"+
		"\5\b\5\2\u111c\u111b\3\2\2\2\u111d\u111e\3\2\2\2\u111e\u111c\3\2\2\2\u111e"+
		"\u111f\3\2\2\2\u111f\u1121\3\2\2\2\u1120\u111a\3\2\2\2\u1120\u1121\3\2"+
		"\2\2\u1121\u1122\3\2\2\2\u1122\u1123\5\u012e\u0098\2\u1123\u1136\3\2\2"+
		"\2\u1124\u1126\7\u0185\2\2\u1125\u1127\5\b\5\2\u1126\u1125\3\2\2\2\u1127"+
		"\u1128\3\2\2\2\u1128\u1126\3\2\2\2\u1128\u1129\3\2\2\2\u1129\u1130\3\2"+
		"\2\2\u112a\u112c\7\u00d6\2\2\u112b\u112d\5\b\5\2\u112c\u112b\3\2\2\2\u112d"+
		"\u112e\3\2\2\2\u112e\u112c\3\2\2\2\u112e\u112f\3\2\2\2\u112f\u1131\3\2"+
		"\2\2\u1130\u112a\3\2\2\2\u1130\u1131\3\2\2\2\u1131\u1132\3\2\2\2\u1132"+
		"\u1133\5\u010a\u0086\2\u1133\u1136\3\2\2\2\u1134\u1136\5\u0126\u0094\2"+
		"\u1135\u1087\3\2\2\2\u1135\u109f\3\2\2\2\u1135\u10b5\3\2\2\2\u1135\u10d3"+
		"\3\2\2\2\u1135\u10d6\3\2\2\2\u1135\u10e6\3\2\2\2\u1135\u10fe\3\2\2\2\u1135"+
		"\u1108\3\2\2\2\u1135\u1112\3\2\2\2\u1135\u1113\3\2\2\2\u1135\u1114\3\2"+
		"\2\2\u1135\u1124\3\2\2\2\u1135\u1134\3\2\2\2\u1136\u0123\3\2\2\2\u1137"+
		"\u113f\7\u0150\2\2\u1138\u113a\5\b\5\2\u1139\u1138\3\2\2\2\u113a\u113b"+
		"\3\2\2\2\u113b\u1139\3\2\2\2\u113b\u113c\3\2\2\2\u113c\u113d\3\2\2\2\u113d"+
		"\u113e\7\u00d6\2\2\u113e\u1140\3\2\2\2\u113f\u1139\3\2\2\2\u113f\u1140"+
		"\3\2\2\2\u1140\u1142\3\2\2\2\u1141\u1143\5\b\5\2\u1142\u1141\3\2\2\2\u1143"+
		"\u1144\3\2\2\2\u1144\u1142\3\2\2\2\u1144\u1145\3\2\2\2\u1145\u1147\3\2"+
		"\2\2\u1146\u1137\3\2\2\2\u1146\u1147\3\2\2\2\u1147\u1148\3\2\2\2\u1148"+
		"\u1158\t\20\2\2\u1149\u114b\5\b\5\2\u114a\u1149\3\2\2\2\u114b\u114c\3"+
		"\2\2\2\u114c\u114a\3\2\2\2\u114c\u114d\3\2\2\2\u114d\u114e\3\2\2\2\u114e"+
		"\u1156\7\u014c\2\2\u114f\u1151\5\b\5\2\u1150\u114f\3\2\2\2\u1151\u1152"+
		"\3\2\2\2\u1152\u1150\3\2\2\2\u1152\u1153\3\2\2\2\u1153\u1154\3\2\2\2\u1154"+
		"\u1155\79\2\2\u1155\u1157\3\2\2\2\u1156\u1150\3\2\2\2\u1156\u1157\3\2"+
		"\2\2\u1157\u1159\3\2\2\2\u1158\u114a\3\2\2\2\u1158\u1159\3\2\2\2\u1159"+
		"\u0125\3\2\2\2\u115a\u115c\7\u0163\2\2\u115b\u115d\5\b\5\2\u115c\u115b"+
		"\3\2\2\2\u115d\u115e\3\2\2\2\u115e\u115c\3\2\2\2\u115e\u115f\3\2\2\2\u115f"+
		"\u1160\3\2\2\2\u1160\u116a\5\u012c\u0097\2\u1161\u1163\5\b\5\2\u1162\u1161"+
		"\3\2\2\2\u1163\u1164\3\2\2\2\u1164\u1162\3\2\2\2\u1164\u1165\3\2\2\2\u1165"+
		"\u1166\3\2\2\2\u1166\u1167\5\u012c\u0097\2\u1167\u1169\3\2\2\2\u1168\u1162"+
		"\3\2\2\2\u1169\u116c\3\2\2\2\u116a\u1168\3\2\2\2\u116a\u116b\3\2\2\2\u116b"+
		"\u1174\3\2\2\2\u116c\u116a\3\2\2\2\u116d\u116f\5\b\5\2\u116e\u116d\3\2"+
		"\2\2\u116f\u1170\3\2\2\2\u1170\u116e\3\2\2\2\u1170\u1171\3\2\2\2\u1171"+
		"\u1172\3\2\2\2\u1172\u1173\7\u0181\2\2\u1173\u1175\3\2\2\2\u1174\u116e"+
		"\3\2\2\2\u1174\u1175\3\2\2\2\u1175\u117f\3\2\2\2\u1176\u1178\5\b\5\2\u1177"+
		"\u1176\3\2\2\2\u1178\u1179\3\2\2\2\u1179\u1177\3\2\2\2\u1179\u117a\3\2"+
		"\2\2\u117a\u117b\3\2\2\2\u117b\u117c\5\u012a\u0096\2\u117c\u117e\3\2\2"+
		"\2\u117d\u1177\3\2\2\2\u117e\u1181\3\2\2\2\u117f\u117d\3\2\2\2\u117f\u1180"+
		"\3\2\2\2\u1180\u1183\3\2\2\2\u1181\u117f\3\2\2\2\u1182\u115a\3\2\2\2\u1183"+
		"\u1184\3\2\2\2\u1184\u1182\3\2\2\2\u1184\u1185\3\2\2\2\u1185\u119c\3\2"+
		"\2\2\u1186\u1188\5\b\5\2\u1187\u1186\3\2\2\2\u1188\u118b\3\2\2\2\u1189"+
		"\u1187\3\2\2\2\u1189\u118a\3\2\2\2\u118a\u118c\3\2\2\2\u118b\u1189\3\2"+
		"\2\2\u118c\u118e\7\u0138\2\2\u118d\u118f\5\b\5\2\u118e\u118d\3\2\2\2\u118f"+
		"\u1190\3\2\2\2\u1190\u118e\3\2\2\2\u1190\u1191\3\2\2\2\u1191\u1198\3\2"+
		"\2\2\u1192\u1194\7\u0102\2\2\u1193\u1195\5\b\5\2\u1194\u1193\3\2\2\2\u1195"+
		"\u1196\3\2\2\2\u1196\u1194\3\2\2\2\u1196\u1197\3\2\2\2\u1197\u1199\3\2"+
		"\2\2\u1198\u1192\3\2\2\2\u1198\u1199\3\2\2\2\u1199\u119a\3\2\2\2\u119a"+
		"\u119b\5\u0128\u0095\2\u119b\u119d\3\2\2\2\u119c\u1189\3\2\2\2\u119c\u119d"+
		"\3\2\2\2\u119d\u0127\3\2\2\2\u119e\u119f\t\21\2\2\u119f\u0129\3\2\2\2"+
		"\u11a0\u11a1\7\u01b8\2\2\u11a1\u012b\3\2\2\2\u11a2\u11a3\7\u01b8\2\2\u11a3"+
		"\u012d\3\2\2\2\u11a4\u11a5\5\u01ce\u00e8\2\u11a5\u012f\3\2\2\2\u11a6\u11a7"+
		"\7\u01b6\2\2\u11a7\u0131\3\2\2\2\u11a8\u11aa\7\u0132\2\2\u11a9\u11ab\5"+
		"\b\5\2\u11aa\u11a9\3\2\2\2\u11ab\u11ac\3\2\2\2\u11ac\u11aa\3\2\2\2\u11ac"+
		"\u11ad\3\2\2\2\u11ad\u11ae\3\2\2\2\u11ae\u11af\7\u00c0\2\2\u11af\u11f3"+
		"\3\2\2\2\u11b0\u11f3\7\u013f\2\2\u11b1\u11b3\7\u010c\2\2\u11b2\u11b4\5"+
		"\b\5\2\u11b3\u11b2\3\2\2\2\u11b4\u11b5\3\2\2\2\u11b5\u11b3\3\2\2\2\u11b5"+
		"\u11b6\3\2\2\2\u11b6\u11b7\3\2\2\2\u11b7\u11b8\7\u00c0\2\2\u11b8\u11f3"+
		"\3\2\2\2\u11b9\u11f3\7\u0111\2\2\u11ba\u11bc\7Z\2\2\u11bb\u11bd\5\b\5"+
		"\2\u11bc\u11bb\3\2\2\2\u11bd\u11be\3\2\2\2\u11be\u11bc\3\2\2\2\u11be\u11bf"+
		"\3\2\2\2\u11bf\u11c0\3\2\2\2\u11c0\u11c1\7\u00c0\2\2\u11c1\u11c4\3\2\2"+
		"\2\u11c2\u11c4\78\2\2\u11c3\u11ba\3\2\2\2\u11c3\u11c2\3\2\2\2\u11c4\u11c6"+
		"\3\2\2\2\u11c5\u11c7\5\b\5\2\u11c6\u11c5\3\2\2\2\u11c7\u11c8\3\2\2\2\u11c8"+
		"\u11c6\3\2\2\2\u11c8\u11c9\3\2\2\2\u11c9\u11ca\3\2\2\2\u11ca\u11cb\5\u0134"+
		"\u009b\2\u11cb\u11f3\3\2\2\2\u11cc\u11f3\7v\2\2\u11cd\u11f3\7k\2\2\u11ce"+
		"\u11d0\7Z\2\2\u11cf\u11d1\5\b\5\2\u11d0\u11cf\3\2\2\2\u11d1\u11d2\3\2"+
		"\2\2\u11d2\u11d0\3\2\2\2\u11d2\u11d3\3\2\2\2\u11d3\u11d4\3\2\2\2\u11d4"+
		"\u11d5\7\u00b4\2\2\u11d5\u11d8\3\2\2\2\u11d6\u11d8\7\67\2\2\u11d7\u11ce"+
		"\3\2\2\2\u11d7\u11d6\3\2\2\2\u11d8\u11da\3\2\2\2\u11d9\u11db\5\b\5\2\u11da"+
		"\u11d9\3\2\2\2\u11db\u11dc\3\2\2\2\u11dc\u11da\3\2\2\2\u11dc\u11dd\3\2"+
		"\2\2\u11dd\u11de\3\2\2\2\u11de\u11df\5\u0134\u009b\2\u11df\u11f3\3\2\2"+
		"\2\u11e0\u11e2\7\u010c\2\2\u11e1\u11e3\5\b\5\2\u11e2\u11e1\3\2\2\2\u11e3"+
		"\u11e4\3\2\2\2\u11e4\u11e2\3\2\2\2\u11e4\u11e5\3\2\2\2\u11e5\u11e6\3\2"+
		"\2\2\u11e6\u11e7\7\u00b4\2\2\u11e7\u11f3\3\2\2\2\u11e8\u11f3\7\u0110\2"+
		"\2\u11e9\u11eb\7\u0132\2\2\u11ea\u11ec\5\b\5\2\u11eb\u11ea\3\2\2\2\u11ec"+
		"\u11ed\3\2\2\2\u11ed\u11eb\3\2\2\2\u11ed\u11ee\3\2\2\2\u11ee\u11ef\3\2"+
		"\2\2\u11ef\u11f0\7\u00b4\2\2\u11f0\u11f3\3\2\2\2\u11f1\u11f3\7\u013e\2"+
		"\2\u11f2\u11a8\3\2\2\2\u11f2\u11b0\3\2\2\2\u11f2\u11b1\3\2\2\2\u11f2\u11b9"+
		"\3\2\2\2\u11f2\u11c3\3\2\2\2\u11f2\u11cc\3\2\2\2\u11f2\u11cd\3\2\2\2\u11f2"+
		"\u11d7\3\2\2\2\u11f2\u11e0\3\2\2\2\u11f2\u11e8\3\2\2\2\u11f2\u11e9\3\2"+
		"\2\2\u11f2\u11f1\3\2\2\2\u11f3\u0133\3\2\2\2\u11f4\u11f5\t\21\2\2\u11f5"+
		"\u0135\3\2\2\2\u11f6\u1208\5\u013a\u009e\2\u11f7\u11f9\7\u0114\2\2\u11f8"+
		"\u11fa\5\b\5\2\u11f9\u11f8\3\2\2\2\u11fa\u11fb\3\2\2\2\u11fb\u11f9\3\2"+
		"\2\2\u11fb\u11fc\3\2\2\2\u11fc\u11fd\3\2\2\2\u11fd\u11fe\5\u013a\u009e"+
		"\2\u11fe\u1208\3\2\2\2\u11ff\u1201\7\u00f8\2\2\u1200\u1202\5\b\5\2\u1201"+
		"\u1200\3\2\2\2\u1202\u1203\3\2\2\2\u1203\u1201\3\2\2\2\u1203\u1204\3\2"+
		"\2\2\u1204\u1205\3\2\2\2\u1205\u1206\7\u010c\2\2\u1206\u1208\3\2\2\2\u1207"+
		"\u11f6\3\2\2\2\u1207\u11f7\3\2\2\2\u1207\u11ff\3\2\2\2\u1208\u0137\3\2"+
		"\2\2\u1209\u121f\5\u013a\u009e\2\u120a\u120c\5\b\5\2\u120b\u120a\3\2\2"+
		"\2\u120c\u120d\3\2\2\2\u120d\u120b\3\2\2\2\u120d\u120e\3\2\2\2\u120e\u1215"+
		"\3\2\2\2\u120f\u1211\7\u0102\2\2\u1210\u1212\5\b\5\2\u1211\u1210\3\2\2"+
		"\2\u1212\u1213\3\2\2\2\u1213\u1211\3\2\2\2\u1213\u1214\3\2\2\2\u1214\u1216"+
		"\3\2\2\2\u1215\u120f\3\2\2\2\u1215\u1216\3\2\2\2\u1216\u1217\3\2\2\2\u1217"+
		"\u1219\7\u00f8\2\2\u1218\u121a\5\b\5\2\u1219\u1218\3\2\2\2\u121a\u121b"+
		"\3\2\2\2\u121b\u1219\3\2\2\2\u121b\u121c\3\2\2\2\u121c\u121d\3\2\2\2\u121d"+
		"\u121e\7\u010c\2\2\u121e\u1220\3\2\2\2\u121f\u120b\3\2\2\2\u121f\u1220"+
		"\3\2\2\2\u1220\u122a\3\2\2\2\u1221\u1223\7\u0114\2\2\u1222\u1224\5\b\5"+
		"\2\u1223\u1222\3\2\2\2\u1224\u1225\3\2\2\2\u1225\u1223\3\2\2\2\u1225\u1226"+
		"\3\2\2\2\u1226\u1227\3\2\2\2\u1227\u1228\5\u013a\u009e\2\u1228\u122a\3"+
		"\2\2\2\u1229\u1209\3\2\2\2\u1229\u1221\3\2\2\2\u122a\u0139\3\2\2\2\u122b"+
		"\u122c\7\u01b6\2\2\u122c\u013b\3\2\2\2\u122d\u122f\7\u00d6\2\2\u122e\u1230"+
		"\5\b\5\2\u122f\u122e\3\2\2\2\u1230\u1231\3\2\2\2\u1231\u122f\3\2\2\2\u1231"+
		"\u1232\3\2\2\2\u1232\u1234\3\2\2\2\u1233\u122d\3\2\2\2\u1233\u1234\3\2"+
		"\2\2\u1234\u1235\3\2\2\2\u1235\u12ec\7\u00bc\2\2\u1236\u1238\7>\2\2\u1237"+
		"\u1239\5\b\5\2\u1238\u1237\3\2\2\2\u1239\u123a\3\2\2\2\u123a\u1238\3\2"+
		"\2\2\u123a\u123b\3\2\2\2\u123b\u123c\3\2\2\2\u123c\u123d\5\u014a\u00a6"+
		"\2\u123d\u12ec\3\2\2\2\u123e\u1246\7Z\2\2\u123f\u1241\5\b\5\2\u1240\u123f"+
		"\3\2\2\2\u1241\u1242\3\2\2\2\u1242\u1240\3\2\2\2\u1242\u1243\3\2\2\2\u1243"+
		"\u1244\3\2\2\2\u1244\u1245\7\u00d6\2\2\u1245\u1247\3\2\2\2\u1246\u1240"+
		"\3\2\2\2\u1246\u1247\3\2\2\2\u1247\u1253\3\2\2\2\u1248\u1250\7[\2\2\u1249"+
		"\u124b\5\b\5\2\u124a\u1249\3\2\2\2\u124b\u124c\3\2\2\2\u124c\u124a\3\2"+
		"\2\2\u124c\u124d\3\2\2\2\u124d\u124e\3\2\2\2\u124e\u124f\7\26\2\2\u124f"+
		"\u1251\3\2\2\2\u1250\u124a\3\2\2\2\u1250\u1251\3\2\2\2\u1251\u1253\3\2"+
		"\2\2\u1252\u123e\3\2\2\2\u1252\u1248\3\2\2\2\u1253\u1255\3\2\2\2\u1254"+
		"\u1256\5\b\5\2\u1255\u1254\3\2\2\2\u1256\u1257\3\2\2\2\u1257\u1255\3\2"+
		"\2\2\u1257\u1258\3\2\2\2\u1258\u1273\3\2\2\2\u1259\u1263\5\u0148\u00a5"+
		"\2\u125a\u125c\5\b\5\2\u125b\u125a\3\2\2\2\u125c\u125f\3\2\2\2\u125d\u125b"+
		"\3\2\2\2\u125d\u125e\3\2\2\2\u125e\u1260\3\2\2\2\u125f\u125d\3\2\2\2\u1260"+
		"\u1262\5\u0148\u00a5\2\u1261\u125d\3\2\2\2\u1262\u1265\3\2\2\2\u1263\u1261"+
		"\3\2\2\2\u1263\u1264\3\2\2\2\u1264\u1274\3\2\2\2\u1265\u1263\3\2\2\2\u1266"+
		"\u1270\7\u00af\2\2\u1267\u1269\5\b\5\2\u1268\u1267\3\2\2\2\u1269\u126c"+
		"\3\2\2\2\u126a\u1268\3\2\2\2\u126a\u126b\3\2\2\2\u126b\u126d\3\2\2\2\u126c"+
		"\u126a\3\2\2\2\u126d\u126f\5\u0148\u00a5\2\u126e\u126a\3\2\2\2\u126f\u1272"+
		"\3\2\2\2\u1270\u126e\3\2\2\2\u1270\u1271\3\2\2\2\u1271\u1274\3\2\2\2\u1272"+
		"\u1270\3\2\2\2\u1273\u1259\3\2\2\2\u1273\u1266\3\2\2\2\u1274\u12ec\3\2"+
		"\2\2\u1275\u1277\7\u010c\2\2\u1276\u1278\5\b\5\2\u1277\u1276\3\2\2\2\u1278"+
		"\u1279\3\2\2\2\u1279\u1277\3\2\2\2\u1279\u127a\3\2\2\2\u127a\u1297\3\2"+
		"\2\2\u127b\u127d\7\u00e1\2\2\u127c\u127e\5\b\5\2\u127d\u127c\3\2\2\2\u127e"+
		"\u127f\3\2\2\2\u127f\u127d\3\2\2\2\u127f\u1280\3\2\2\2\u1280\u1287\3\2"+
		"\2\2\u1281\u1283\7\u00d6\2\2\u1282\u1284\5\b\5\2\u1283\u1282\3\2\2\2\u1284"+
		"\u1285\3\2\2\2\u1285\u1283\3\2\2\2\u1285\u1286\3\2\2\2\u1286\u1288\3\2"+
		"\2\2\u1287\u1281\3\2\2\2\u1287\u1288\3\2\2\2\u1288\u1298\3\2\2\2\u1289"+
		"\u128b\7\u00e2\2\2\u128a\u128c\5\b\5\2\u128b\u128a\3\2\2\2\u128c\u128d"+
		"\3\2\2\2\u128d\u128b\3\2\2\2\u128d\u128e\3\2\2\2\u128e\u1295\3\2\2\2\u128f"+
		"\u1291\7\26\2\2\u1290\u1292\5\b\5\2\u1291\u1290\3\2\2\2\u1292\u1293\3"+
		"\2\2\2\u1293\u1291\3\2\2\2\u1293\u1294\3\2\2\2\u1294\u1296\3\2\2\2\u1295"+
		"\u128f\3\2\2\2\u1295\u1296\3\2\2\2\u1296\u1298\3\2\2\2\u1297\u127b\3\2"+
		"\2\2\u1297\u1289\3\2\2\2\u1297\u1298\3\2\2\2\u1298\u1299\3\2\2\2\u1299"+
		"\u12a1\5\u0146\u00a4\2\u129a\u129c\5\b\5\2\u129b\u129a\3\2\2\2\u129c\u129d"+
		"\3\2\2\2\u129d\u129b\3\2\2\2\u129d\u129e\3\2\2\2\u129e\u129f\3\2\2\2\u129f"+
		"\u12a0\t\22\2\2\u12a0\u12a2\3\2\2\2\u12a1\u129b\3\2\2\2\u12a1\u12a2\3"+
		"\2\2\2\u12a2\u12b0\3\2\2\2\u12a3\u12a5\5\b\5\2\u12a4\u12a3\3\2\2\2\u12a5"+
		"\u12a6\3\2\2\2\u12a6\u12a4\3\2\2\2\u12a6\u12a7\3\2\2\2\u12a7\u12a8\3\2"+
		"\2\2\u12a8\u12aa\7\u00c0\2\2\u12a9\u12ab\5\b\5\2\u12aa\u12a9\3\2\2\2\u12ab"+
		"\u12ac\3\2\2\2\u12ac\u12aa\3\2\2\2\u12ac\u12ad\3\2\2\2\u12ad\u12ae\3\2"+
		"\2\2\u12ae\u12af\5\u0144\u00a3\2\u12af\u12b1\3\2\2\2\u12b0\u12a4\3\2\2"+
		"\2\u12b0\u12b1\3\2\2\2\u12b1\u12c5\3\2\2\2\u12b2\u12b4\5\b\5\2\u12b3\u12b2"+
		"\3\2\2\2\u12b4\u12b5\3\2\2\2\u12b5\u12b3\3\2\2\2\u12b5\u12b6\3\2\2\2\u12b6"+
		"\u12b7\3\2\2\2\u12b7\u12b9\7\u00b0\2\2\u12b8\u12ba\5\b\5\2\u12b9\u12b8"+
		"\3\2\2\2\u12ba\u12bb\3\2\2\2\u12bb\u12b9\3\2\2\2\u12bb\u12bc\3\2\2\2\u12bc"+
		"\u12bd\3\2\2\2\u12bd\u12bf\7v\2\2\u12be\u12c0\5\b\5\2\u12bf\u12be\3\2"+
		"\2\2\u12c0\u12c1\3\2\2\2\u12c1\u12bf\3\2\2\2\u12c1\u12c2\3\2\2\2\u12c2"+
		"\u12c3\3\2\2\2\u12c3\u12c4\5\u0142\u00a2\2\u12c4\u12c6\3\2\2\2\u12c5\u12b3"+
		"\3\2\2\2\u12c5\u12c6\3\2\2\2\u12c6\u12da\3\2\2\2\u12c7\u12c9\5\b\5\2\u12c8"+
		"\u12c7\3\2\2\2\u12c9\u12ca\3\2\2\2\u12ca\u12c8\3\2\2\2\u12ca\u12cb\3\2"+
		"\2\2\u12cb\u12cc\3\2\2\2\u12cc\u12ce\7\u00dd\2\2\u12cd\u12cf\5\b\5\2\u12ce"+
		"\u12cd\3\2\2\2\u12cf\u12d0\3\2\2\2\u12d0\u12ce\3\2\2\2\u12d0\u12d1\3\2"+
		"\2\2\u12d1\u12d2\3\2\2\2\u12d2\u12d4\7v\2\2\u12d3\u12d5\5\b\5\2\u12d4"+
		"\u12d3\3\2\2\2\u12d5\u12d6\3\2\2\2\u12d6\u12d4\3\2\2\2\u12d6\u12d7\3\2"+
		"\2\2\u12d7\u12d8\3\2\2\2\u12d8\u12d9\5\u0140\u00a1\2\u12d9\u12db\3\2\2"+
		"\2\u12da\u12c8\3\2\2\2\u12da\u12db\3\2\2\2\u12db\u12e9\3\2\2\2\u12dc\u12de"+
		"\5\b\5\2\u12dd\u12dc\3\2\2\2\u12de\u12df\3\2\2\2\u12df\u12dd\3\2\2\2\u12df"+
		"\u12e0\3\2\2\2\u12e0\u12e1\3\2\2\2\u12e1\u12e3\7\u00b4\2\2\u12e2\u12e4"+
		"\5\b\5\2\u12e3\u12e2\3\2\2\2\u12e4\u12e5\3\2\2\2\u12e5\u12e3\3\2\2\2\u12e5"+
		"\u12e6\3\2\2\2\u12e6\u12e7\3\2\2\2\u12e7\u12e8\5\u013e\u00a0\2\u12e8\u12ea"+
		"\3\2\2\2\u12e9\u12dd\3\2\2\2\u12e9\u12ea\3\2\2\2\u12ea\u12ec\3\2\2\2\u12eb"+
		"\u1233\3\2\2\2\u12eb\u1236\3\2\2\2\u12eb\u1252\3\2\2\2\u12eb\u1275\3\2"+
		"\2\2\u12ec\u013d\3\2\2\2\u12ed\u12ee\7\u01b6\2\2\u12ee\u013f\3\2\2\2\u12ef"+
		"\u12f0\7\u01b6\2\2\u12f0\u0141\3\2\2\2\u12f1\u12f2\7\u01b6\2\2\u12f2\u0143"+
		"\3\2\2\2\u12f3\u12f4\7\u01b6\2\2\u12f4\u0145\3\2\2\2\u12f5\u12f6\7\u01b6"+
		"\2\2\u12f6\u0147\3\2\2\2\u12f7\u12f8\5\u01ce\u00e8\2\u12f8\u0149\3\2\2"+
		"\2\u12f9\u12fa\7\u01b5\2\2\u12fa\u014b\3\2\2\2\u12fb\u1303\7\u0182\2\2"+
		"\u12fc\u12fe\5\b\5\2\u12fd\u12fc\3\2\2\2\u12fe\u12ff\3\2\2\2\u12ff\u12fd"+
		"\3\2\2\2\u12ff\u1300\3\2\2\2\u1300\u1301\3\2\2\2\u1301\u1302\7\u00d6\2"+
		"\2\u1302\u1304\3\2\2\2\u1303\u12fd\3\2\2\2\u1303\u1304\3\2\2\2\u1304\u1306"+
		"\3\2\2\2\u1305\u1307\5\b\5\2\u1306\u1305\3\2\2\2\u1307\u1308\3\2\2\2\u1308"+
		"\u1306\3\2\2\2\u1308\u1309\3\2\2\2\u1309\u130b\3\2\2\2\u130a\u12fb\3\2"+
		"\2\2\u130a\u130b\3\2\2\2\u130b\u130c\3\2\2\2\u130c\u130d\5\u014e\u00a8"+
		"\2\u130d\u014d\3\2\2\2\u130e\u134e\7\'\2\2\u130f\u1317\7(\2\2\u1310\u1312"+
		"\5\b\5\2\u1311\u1310\3\2\2\2\u1312\u1313\3\2\2\2\u1313\u1311\3\2\2\2\u1313"+
		"\u1314\3\2\2\2\u1314\u1315\3\2\2\2\u1315\u1316\t\23\2\2\u1316\u1318\3"+
		"\2\2\2\u1317\u1311\3\2\2\2\u1317\u1318\3\2\2\2\u1318\u134e\3\2\2\2\u1319"+
		"\u1321\7+\2\2\u131a\u131c\5\b\5\2\u131b\u131a\3\2\2\2\u131c\u131d\3\2"+
		"\2\2\u131d\u131b\3\2\2\2\u131d\u131e\3\2\2\2\u131e\u131f\3\2\2\2\u131f"+
		"\u1320\t\23\2\2\u1320\u1322\3\2\2\2\u1321\u131b\3\2\2\2\u1321\u1322\3"+
		"\2\2\2\u1322\u134e\3\2\2\2\u1323\u132b\7*\2\2\u1324\u1326\5\b\5\2\u1325"+
		"\u1324\3\2\2\2\u1326\u1327\3\2\2\2\u1327\u1325\3\2\2\2\u1327\u1328\3\2"+
		"\2\2\u1328\u1329\3\2\2\2\u1329\u132a\t\23\2\2\u132a\u132c\3\2\2\2\u132b"+
		"\u1325\3\2\2\2\u132b\u132c\3\2\2\2\u132c\u134e\3\2\2\2\u132d\u1335\7)"+
		"\2\2\u132e\u1330\5\b\5\2\u132f\u132e\3\2\2\2\u1330\u1331\3\2\2\2\u1331"+
		"\u132f\3\2\2\2\u1331\u1332\3\2\2\2\u1332\u1333\3\2\2\2\u1333\u1334\t\23"+
		"\2\2\u1334\u1336\3\2\2\2\u1335\u132f\3\2\2\2\u1335\u1336\3\2\2\2\u1336"+
		"\u134e\3\2\2\2\u1337\u134e\7E\2\2\u1338\u134e\7F\2\2\u1339\u134e\7G\2"+
		"\2\u133a\u134e\7H\2\2\u133b\u134e\7I\2\2\u133c\u134e\7J\2\2\u133d\u134e"+
		"\7K\2\2\u133e\u134e\7D\2\2\u133f\u134e\7M\2\2\u1340\u134e\7N\2\2\u1341"+
		"\u134e\7O\2\2\u1342\u134e\7P\2\2\u1343\u134e\7Q\2\2\u1344\u134e\7R\2\2"+
		"\u1345\u134e\7x\2\2\u1346\u134e\7\u00b3\2\2\u1347\u134e\7\u00b2\2\2\u1348"+
		"\u134e\7\u00b1\2\2\u1349\u134e\7\u00ca\2\2\u134a\u134e\7\u010a\2\2\u134b"+
		"\u134e\7\u0115\2\2\u134c\u134e\7\u0116\2\2\u134d\u130e\3\2\2\2\u134d\u130f"+
		"\3\2\2\2\u134d\u1319\3\2\2\2\u134d\u1323\3\2\2\2\u134d\u132d\3\2\2\2\u134d"+
		"\u1337\3\2\2\2\u134d\u1338\3\2\2\2\u134d\u1339\3\2\2\2\u134d\u133a\3\2"+
		"\2\2\u134d\u133b\3\2\2\2\u134d\u133c\3\2\2\2\u134d\u133d\3\2\2\2\u134d"+
		"\u133e\3\2\2\2\u134d\u133f\3\2\2\2\u134d\u1340\3\2\2\2\u134d\u1341\3\2"+
		"\2\2\u134d\u1342\3\2\2\2\u134d\u1343\3\2\2\2\u134d\u1344\3\2\2\2\u134d"+
		"\u1345\3\2\2\2\u134d\u1346\3\2\2\2\u134d\u1347\3\2\2\2\u134d\u1348\3\2"+
		"\2\2\u134d\u1349\3\2\2\2\u134d\u134a\3\2\2\2\u134d\u134b\3\2\2\2\u134d"+
		"\u134c\3\2\2\2\u134e\u014f\3\2\2\2\u134f\u1351\t\24\2\2\u1350\u1352\5"+
		"\b\5\2\u1351\u1350\3\2\2\2\u1352\u1353\3\2\2\2\u1353\u1351\3\2\2\2\u1353"+
		"\u1354\3\2\2\2\u1354\u135b\3\2\2\2\u1355\u1357\7\u00d6\2\2\u1356\u1358"+
		"\5\b\5\2\u1357\u1356\3\2\2\2\u1358\u1359\3\2\2\2\u1359\u1357\3\2\2\2\u1359"+
		"\u135a\3\2\2\2\u135a\u135c\3\2\2\2\u135b\u1355\3\2\2\2\u135b\u135c\3\2"+
		"\2\2\u135c\u135d\3\2\2\2\u135d\u135e\5\u0152\u00aa\2\u135e\u0151\3\2\2"+
		"\2\u135f\u1361\5\u0154\u00ab\2\u1360\u135f\3\2\2\2\u1361\u1362\3\2\2\2"+
		"\u1362\u1360\3\2\2\2\u1362\u1363\3\2\2\2\u1363\u0153\3\2\2\2\u1364\u1365"+
		"\t\25\2\2\u1365\u0155\3\2\2\2\u1366\u1367\7\u01b8\2\2\u1367\u0157\3\2"+
		"\2\2\u1368\u1369\7\u01b8\2\2\u1369\u0159\3\2\2\2\u136a\u136d\5\u0174\u00bb"+
		"\2\u136b\u136d\5\u016a\u00b6\2\u136c\u136a\3\2\2\2\u136c\u136b\3\2\2\2"+
		"\u136d\u015b\3\2\2\2\u136e\u1376\7\u0132\2\2\u136f\u1371\5\b\5\2\u1370"+
		"\u136f\3\2\2\2\u1371\u1372\3\2\2\2\u1372\u1370\3\2\2\2\u1372\u1373\3\2"+
		"\2\2\u1373\u1374\3\2\2\2\u1374\u1375\7\u00d6\2\2\u1375\u1377\3\2\2\2\u1376"+
		"\u1370\3\2\2\2\u1376\u1377\3\2\2\2\u1377\u1383\3\2\2\2\u1378\u1380\7\u0134"+
		"\2\2\u1379\u137b\5\b\5\2\u137a\u1379\3\2\2\2\u137b\u137c\3\2\2\2\u137c"+
		"\u137a\3\2\2\2\u137c\u137d\3\2\2\2\u137d\u137e\3\2\2\2\u137e\u137f\7\26"+
		"\2\2\u137f\u1381\3\2\2\2\u1380\u137a\3\2\2\2\u1380\u1381\3\2\2\2\u1381"+
		"\u1383\3\2\2\2\u1382\u136e\3\2\2\2\u1382\u1378\3\2\2\2\u1383\u1385\3\2"+
		"\2\2\u1384\u1386\5\b\5\2\u1385\u1384\3\2\2\2\u1386\u1387\3\2\2\2\u1387"+
		"\u1385\3\2\2\2\u1387\u1388\3\2\2\2\u1388\u1389\3\2\2\2\u1389\u1393\5\u015e"+
		"\u00b0\2\u138a\u138c\5\b\5\2\u138b\u138a\3\2\2\2\u138c\u138f\3\2\2\2\u138d"+
		"\u138b\3\2\2\2\u138d\u138e\3\2\2\2\u138e\u1390\3\2\2\2\u138f\u138d\3\2"+
		"\2\2\u1390\u1392\5\u015e\u00b0\2\u1391\u138d\3\2\2\2\u1392\u1395\3\2\2"+
		"\2\u1393\u1391\3\2\2\2\u1393\u1394\3\2\2\2\u1394\u015d\3\2\2\2\u1395\u1393"+
		"\3\2\2\2\u1396\u1397\7\u01b8\2\2\u1397\u015f\3\2\2\2\u1398\u139a\7\u00e3"+
		"\2\2\u1399\u139b\5\b\5\2\u139a\u1399\3\2\2\2\u139b\u139c\3\2\2\2\u139c"+
		"\u139a\3\2\2\2\u139c\u139d\3\2\2\2\u139d\u13a4\3\2\2\2\u139e\u13a0\7\u00d6"+
		"\2\2\u139f\u13a1\5\b\5\2\u13a0\u139f\3\2\2\2\u13a1\u13a2\3\2\2\2\u13a2"+
		"\u13a0\3\2\2\2\u13a2\u13a3\3\2\2\2\u13a3\u13a5\3\2\2\2\u13a4\u139e\3\2"+
		"\2\2\u13a4\u13a5\3\2\2\2\u13a5\u13a6\3\2\2\2\u13a6\u13ae\5\u0168\u00b5"+
		"\2\u13a7\u13a9\5\b\5\2\u13a8\u13a7\3\2\2\2\u13a9\u13aa\3\2\2\2\u13aa\u13a8"+
		"\3\2\2\2\u13aa\u13ab\3\2\2\2\u13ab\u13ac\3\2\2\2\u13ac\u13ad\7\u00e5\2"+
		"\2\u13ad\u13af\3\2\2\2\u13ae\u13a8\3\2\2\2\u13ae\u13af\3\2\2\2\u13af\u13cd"+
		"\3\2\2\2\u13b0\u13b2\5\b\5\2\u13b1\u13b0\3\2\2\2\u13b2\u13b3\3\2\2\2\u13b3"+
		"\u13b1\3\2\2\2\u13b3\u13b4\3\2\2\2\u13b4\u13bb\3\2\2\2\u13b5\u13b7\7\u018b"+
		"\2\2\u13b6\u13b8\5\b\5\2\u13b7\u13b6\3\2\2\2\u13b8\u13b9\3\2\2\2\u13b9"+
		"\u13b7\3\2\2\2\u13b9\u13ba\3\2\2\2\u13ba\u13bc\3\2\2\2\u13bb\u13b5\3\2"+
		"\2\2\u13bb\u13bc\3\2\2\2\u13bc\u13bd\3\2\2\2\u13bd\u13bf\7\u00b4\2\2\u13be"+
		"\u13c0\5\b\5\2\u13bf\u13be\3\2\2\2\u13c0\u13c1\3\2\2\2\u13c1\u13bf\3\2"+
		"\2\2\u13c1\u13c2\3\2\2\2\u13c2\u13c9\3\2\2\2\u13c3\u13c5\7\37\2\2\u13c4"+
		"\u13c6\5\b\5\2\u13c5\u13c4\3\2\2\2\u13c6\u13c7\3\2\2\2\u13c7\u13c5\3\2"+
		"\2\2\u13c7\u13c8\3\2\2\2\u13c8\u13ca\3\2\2\2\u13c9\u13c3\3\2\2\2\u13c9"+
		"\u13ca\3\2\2\2\u13ca\u13cb\3\2\2\2\u13cb\u13cc\5\u0166\u00b4\2\u13cc\u13ce"+
		"\3\2\2\2\u13cd\u13b1\3\2\2\2\u13cd\u13ce\3\2\2\2\u13ce\u13ec\3\2\2\2\u13cf"+
		"\u13d1\5\b\5\2\u13d0\u13cf\3\2\2\2\u13d1\u13d2\3\2\2\2\u13d2\u13d0\3\2"+
		"\2\2\u13d2\u13d3\3\2\2\2\u13d3\u13da\3\2\2\2\u13d4\u13d6\7\u00e5\2\2\u13d5"+
		"\u13d7\5\b\5\2\u13d6\u13d5\3\2\2\2\u13d7\u13d8\3\2\2\2\u13d8\u13d6\3\2"+
		"\2\2\u13d8\u13d9\3\2\2\2\u13d9\u13db\3\2\2\2\u13da\u13d4\3\2\2\2\u13da"+
		"\u13db\3\2\2\2\u13db\u13e2\3\2\2\2\u13dc\u13de\7\37\2\2\u13dd\u13df\5"+
		"\b\5\2\u13de\u13dd\3\2\2\2\u13df\u13e0\3\2\2\2\u13e0\u13de\3\2\2\2\u13e0"+
		"\u13e1\3\2\2\2\u13e1\u13e3\3\2\2\2\u13e2\u13dc\3\2\2\2\u13e2\u13e3\3\2"+
		"\2\2\u13e3\u13e4\3\2\2\2\u13e4\u13e6\7\u0176\2\2\u13e5\u13e7\5\b\5\2\u13e6"+
		"\u13e5\3\2\2\2\u13e7\u13e8\3\2\2\2\u13e8\u13e6\3\2\2\2\u13e8\u13e9\3\2"+
		"\2\2\u13e9\u13ea\3\2\2\2\u13ea\u13eb\5\u0164\u00b3\2\u13eb\u13ed\3\2\2"+
		"\2\u13ec\u13d0\3\2\2\2\u13ec\u13ed\3\2\2\2\u13ed\u140b\3\2\2\2\u13ee\u13f0"+
		"\5\b\5\2\u13ef\u13ee\3\2\2\2\u13f0\u13f1\3\2\2\2\u13f1\u13ef\3\2\2\2\u13f1"+
		"\u13f2\3\2\2\2\u13f2\u13f9\3\2\2\2\u13f3\u13f5\7\u00e5\2\2\u13f4\u13f6"+
		"\5\b\5\2\u13f5\u13f4\3\2\2\2\u13f6\u13f7\3\2\2\2\u13f7\u13f5\3\2\2\2\u13f7"+
		"\u13f8\3\2\2\2\u13f8\u13fa\3\2\2\2\u13f9\u13f3\3\2\2\2\u13f9\u13fa\3\2"+
		"\2\2\u13fa\u1401\3\2\2\2\u13fb\u13fd\7\37\2\2\u13fc\u13fe\5\b\5\2\u13fd"+
		"\u13fc\3\2\2\2\u13fe\u13ff\3\2\2\2\u13ff\u13fd\3\2\2\2\u13ff\u1400\3\2"+
		"\2\2\u1400\u1402\3\2\2\2\u1401\u13fb\3\2\2\2\u1401\u1402\3\2\2\2\u1402"+
		"\u1403\3\2\2\2\u1403\u1405\7\61\2\2\u1404\u1406\5\b\5\2\u1405\u1404\3"+
		"\2\2\2\u1406\u1407\3\2\2\2\u1407\u1405\3\2\2\2\u1407\u1408\3\2\2\2\u1408"+
		"\u1409\3\2\2\2\u1409\u140a\5\u0162\u00b2\2\u140a\u140c\3\2\2\2\u140b\u13ef"+
		"\3\2\2\2\u140b\u140c\3\2\2\2\u140c\u0161\3\2\2\2\u140d\u1410\7\u01b6\2"+
		"\2\u140e\u1410\5\u01ce\u00e8\2\u140f\u140d\3\2\2\2\u140f\u140e\3\2\2\2"+
		"\u1410\u0163\3\2\2\2\u1411\u1414\7\u01b6\2\2\u1412\u1414\5\u01ce\u00e8"+
		"\2\u1413\u1411\3\2\2\2\u1413\u1412\3\2\2\2\u1414\u0165\3\2\2\2\u1415\u1418"+
		"\7\u01b6\2\2\u1416\u1418\5\u01ce\u00e8\2\u1417\u1415\3\2\2\2\u1417\u1416"+
		"\3\2\2\2\u1418\u0167\3\2\2\2\u1419\u141c\7\u01b6\2\2\u141a\u141c\5\u01ce"+
		"\u00e8\2\u141b\u1419\3\2\2\2\u141b\u141a\3\2\2\2\u141c\u0169\3\2\2\2\u141d"+
		"\u141f\7e\2\2\u141e\u1420\5\b\5\2\u141f\u141e\3\2\2\2\u1420\u1421\3\2"+
		"\2\2\u1421\u141f\3\2\2\2\u1421\u1422\3\2\2\2\u1422\u1437\3\2\2\2\u1423"+
		"\u142b\7\u0127\2\2\u1424\u1426\5\b\5\2\u1425\u1424\3\2\2\2\u1426\u1427"+
		"\3\2\2\2\u1427\u1425\3\2\2\2\u1427\u1428\3\2\2\2\u1428\u1429\3\2\2\2\u1429"+
		"\u142a\7\26\2\2\u142a\u142c\3\2\2\2\u142b\u1425\3\2\2\2\u142b\u142c\3"+
		"\2\2\2\u142c\u1438\3\2\2\2\u142d\u1435\7\u0126\2\2\u142e\u1430\5\b\5\2"+
		"\u142f\u142e\3\2\2\2\u1430\u1431\3\2\2\2\u1431\u142f\3\2\2\2\u1431\u1432"+
		"\3\2\2\2\u1432\u1433\3\2\2\2\u1433\u1434\7\u00d6\2\2\u1434\u1436\3\2\2"+
		"\2\u1435\u142f\3\2\2\2\u1435\u1436\3\2\2\2\u1436\u1438\3\2\2\2\u1437\u1423"+
		"\3\2\2\2\u1437\u142d\3\2\2\2\u1438\u1439\3\2\2\2\u1439\u1443\5\u016c\u00b7"+
		"\2\u143a\u143c\5\b\5\2\u143b\u143a\3\2\2\2\u143c\u143d\3\2\2\2\u143d\u143b"+
		"\3\2\2\2\u143d\u143e\3\2\2\2\u143e\u143f\3\2\2\2\u143f\u1440\5\u016c\u00b7"+
		"\2\u1440\u1442\3\2\2\2\u1441\u143b\3\2\2\2\u1442\u1445\3\2\2\2\u1443\u1441"+
		"\3\2\2\2\u1443\u1444\3\2\2\2\u1444\u016b\3\2\2\2\u1445\u1443\3\2\2\2\u1446"+
		"\u1447\7\u01b8\2\2\u1447\u016d\3\2\2\2\u1448\u144a\7\u0185\2\2\u1449\u144b"+
		"\5\b\5\2\u144a\u1449\3\2\2\2\u144b\u144c\3\2\2\2\u144c\u144a\3\2\2\2\u144c"+
		"\u144d\3\2\2\2\u144d\u144e\3\2\2\2\u144e\u1450\7\u00ff\2\2\u144f\u1451"+
		"\5\b\5\2\u1450\u144f\3\2\2\2\u1451\u1452\3\2\2\2\u1452\u1450\3\2\2\2\u1452"+
		"\u1453\3\2\2\2\u1453\u1454\3\2\2\2\u1454\u1456\t\26\2\2\u1455\u1457\5"+
		"\b\5\2\u1456\u1455\3\2\2\2\u1457\u1458\3\2\2\2\u1458\u1456\3\2\2\2\u1458"+
		"\u1459\3\2\2\2\u1459\u1460\3\2\2\2\u145a\u145c\7\u00d6\2\2\u145b\u145d"+
		"\5\b\5\2\u145c\u145b\3\2\2\2\u145d\u145e\3\2\2\2\u145e\u145c\3\2\2\2\u145e"+
		"\u145f\3\2\2\2\u145f\u1461\3\2\2\2\u1460\u145a\3\2\2\2\u1460\u1461\3\2"+
		"\2\2\u1461\u1462\3\2\2\2\u1462\u1463\5\u0170\u00b9\2\u1463\u016f\3\2\2"+
		"\2\u1464\u1467\7\u01b5\2\2\u1465\u1467\5\u01ce\u00e8\2\u1466\u1464\3\2"+
		"\2\2\u1466\u1465\3\2\2\2\u1467\u0171\3\2\2\2\u1468\u146a\7\u00dc\2\2\u1469"+
		"\u146b\5\b\5\2\u146a\u1469\3\2\2\2\u146b\u146c\3\2\2\2\u146c\u146a\3\2"+
		"\2\2\u146c\u146d\3\2\2\2\u146d\u1482\3\2\2\2\u146e\u1476\7\u0127\2\2\u146f"+
		"\u1471\5\b\5\2\u1470\u146f\3\2\2\2\u1471\u1472\3\2\2\2\u1472\u1470\3\2"+
		"\2\2\u1472\u1473\3\2\2\2\u1473\u1474\3\2\2\2\u1474\u1475\7\26\2\2\u1475"+
		"\u1477\3\2\2\2\u1476\u1470\3\2\2\2\u1476\u1477\3\2\2\2\u1477\u1483\3\2"+
		"\2\2\u1478\u1480\7\u0126\2\2\u1479\u147b\5\b\5\2\u147a\u1479\3\2\2\2\u147b"+
		"\u147c\3\2\2\2\u147c\u147a\3\2\2\2\u147c\u147d\3\2\2\2\u147d\u147e\3\2"+
		"\2\2\u147e\u147f\7\u00d6\2\2\u147f\u1481\3\2\2\2\u1480\u147a\3\2\2\2\u1480"+
		"\u1481\3\2\2\2\u1481\u1483\3\2\2\2\u1482\u146e\3\2\2\2\u1482\u1478\3\2"+
		"\2\2\u1483\u1485\3\2\2\2\u1484\u1486\5\b\5\2\u1485\u1484\3\2\2\2\u1486"+
		"\u1487\3\2\2\2\u1487\u1485\3\2\2\2\u1487\u1488\3\2\2\2\u1488\u1489\3\2"+
		"\2\2\u1489\u148a\t\27\2\2\u148a\u0173\3\2\2\2\u148b\u148d\7\u0126\2\2"+
		"\u148c\u148e\5\b\5\2\u148d\u148c\3\2\2\2\u148e\u148f\3\2\2\2\u148f\u148d"+
		"\3\2\2\2\u148f\u1490\3\2\2\2\u1490\u1491\3\2\2\2\u1491\u1492\5\u0176\u00bc"+
		"\2\u1492\u0175\3\2\2\2\u1493\u1495\7U\2\2\u1494\u1496\5\b\5\2\u1495\u1494"+
		"\3\2\2\2\u1496\u1497\3\2\2\2\u1497\u1495\3\2\2\2\u1497\u1498\3\2\2\2\u1498"+
		"\u149a\3\2\2\2\u1499\u1493\3\2\2\2\u1499\u149a\3\2\2\2\u149a\u14a7\3\2"+
		"\2\2\u149b\u149d\5\u017a\u00be\2\u149c\u149e\5\b\5\2\u149d\u149c\3\2\2"+
		"\2\u149e\u149f\3\2\2\2\u149f\u149d\3\2\2\2\u149f\u14a0\3\2\2\2\u14a0\u14a1"+
		"\3\2\2\2\u14a1\u14a3\7\u0175\2\2\u14a2\u14a4\5\b\5\2\u14a3\u14a2\3\2\2"+
		"\2\u14a4\u14a5\3\2\2\2\u14a5\u14a3\3\2\2\2\u14a5\u14a6\3\2\2\2\u14a6\u14a8"+
		"\3\2\2\2\u14a7\u149b\3\2\2\2\u14a7\u14a8\3\2\2\2\u14a8\u14a9\3\2\2\2\u14a9"+
		"\u14ad\5\u017c\u00bf\2\u14aa\u14ac\5\b\5\2\u14ab\u14aa\3\2\2\2\u14ac\u14af"+
		"\3\2\2\2\u14ad\u14ab\3\2\2\2\u14ad\u14ae\3\2\2\2\u14ae\u14b7\3\2\2\2\u14af"+
		"\u14ad\3\2\2\2\u14b0\u14b4\7:\2\2\u14b1\u14b3\5\b\5\2\u14b2\u14b1\3\2"+
		"\2\2\u14b3\u14b6\3\2\2\2\u14b4\u14b2\3\2\2\2\u14b4\u14b5\3\2\2\2\u14b5"+
		"\u14b8\3\2\2\2\u14b6\u14b4\3\2\2\2\u14b7\u14b0\3\2\2\2\u14b7\u14b8\3\2"+
		"\2\2\u14b8\u150f\3\2\2\2\u14b9\u14bb\7\u00d6\2\2\u14ba\u14bc\5\b\5\2\u14bb"+
		"\u14ba\3\2\2\2\u14bc\u14bd\3\2\2\2\u14bd\u14bb\3\2\2\2\u14bd\u14be\3\2"+
		"\2\2\u14be\u14c0\3\2\2\2\u14bf\u14b9\3\2\2\2\u14bf\u14c0\3\2\2\2\u14c0"+
		"\u14c1\3\2\2\2\u14c1\u14c3\7\u0187\2\2\u14c2\u14c4\5\b\5\2\u14c3\u14c2"+
		"\3\2\2\2\u14c4\u14c5\3\2\2\2\u14c5\u14c3\3\2\2\2\u14c5\u14c6\3\2\2\2\u14c6"+
		"\u14cd\3\2\2\2\u14c7\u14c9\7\u00c9\2\2\u14c8\u14ca\5\b\5\2\u14c9\u14c8"+
		"\3\2\2\2\u14ca\u14cb\3\2\2\2\u14cb\u14c9\3\2\2\2\u14cb\u14cc\3\2\2\2\u14cc"+
		"\u14ce\3\2\2\2\u14cd\u14c7\3\2\2\2\u14cd\u14ce\3\2\2\2\u14ce\u14d6\3\2"+
		"\2\2\u14cf\u14d3\7\u0152\2\2\u14d0\u14d2\5\b\5\2\u14d1\u14d0\3\2\2\2\u14d2"+
		"\u14d5\3\2\2\2\u14d3\u14d1\3\2\2\2\u14d3\u14d4\3\2\2\2\u14d4\u14d7\3\2"+
		"\2\2\u14d5\u14d3\3\2\2\2\u14d6\u14cf\3\2\2\2\u14d6\u14d7\3\2\2\2\u14d7"+
		"\u14e1\3\2\2\2\u14d8\u14da\7\u00b7\2\2\u14d9\u14db\5\b\5\2\u14da\u14d9"+
		"\3\2\2\2\u14db\u14dc\3\2\2\2\u14dc\u14da\3\2\2\2\u14dc\u14dd\3\2\2\2\u14dd"+
		"\u14df\3\2\2\2\u14de\u14d8\3\2\2\2\u14de\u14df\3\2\2\2\u14df\u14e0\3\2"+
		"\2\2\u14e0\u14e2\5\u017a\u00be\2\u14e1\u14de\3\2\2\2\u14e1\u14e2\3\2\2"+
		"\2\u14e2\u14eb\3\2\2\2\u14e3\u14e5\7\u0175\2\2\u14e4\u14e6\5\b\5\2\u14e5"+
		"\u14e4\3\2\2\2\u14e6\u14e7\3\2\2\2\u14e7\u14e5\3\2\2\2\u14e7\u14e8\3\2"+
		"\2\2\u14e8\u14e9\3\2\2\2\u14e9\u14ea\5\u017c\u00bf\2\u14ea\u14ec\3\2\2"+
		"\2\u14eb\u14e3\3\2\2\2\u14eb\u14ec\3\2\2\2\u14ec\u14fa\3\2\2\2\u14ed\u14ef"+
		"\5\b\5\2\u14ee\u14ed\3\2\2\2\u14ef\u14f2\3\2\2\2\u14f0\u14ee\3\2\2\2\u14f0"+
		"\u14f1\3\2\2\2\u14f1\u14f3\3\2\2\2\u14f2\u14f0\3\2\2\2\u14f3\u14f7\7:"+
		"\2\2\u14f4\u14f6\5\b\5\2\u14f5\u14f4\3\2\2\2\u14f6\u14f9\3\2\2\2\u14f7"+
		"\u14f5\3\2\2\2\u14f7\u14f8\3\2\2\2\u14f8\u14fb\3\2\2\2\u14f9\u14f7\3\2"+
		"\2\2\u14fa\u14f0\3\2\2\2\u14fa\u14fb\3\2\2\2\u14fb\u150c\3\2\2\2\u14fc"+
		"\u14fe\7s\2\2\u14fd\u14ff\5\b\5\2\u14fe\u14fd\3\2\2\2\u14ff\u1500\3\2"+
		"\2\2\u1500\u14fe\3\2\2\2\u1500\u1501\3\2\2\2\u1501\u1508\3\2\2\2\u1502"+
		"\u1504\7\u0102\2\2\u1503\u1505\5\b\5\2\u1504\u1503\3\2\2\2\u1505\u1506"+
		"\3\2\2\2\u1506\u1504\3\2\2\2\u1506\u1507\3\2\2\2\u1507\u1509\3\2\2\2\u1508"+
		"\u1502\3\2\2\2\u1508\u1509\3\2\2\2\u1509\u150a\3\2\2\2\u150a\u150b\5\u0178"+
		"\u00bd\2\u150b\u150d\3\2\2\2\u150c\u14fc\3\2\2\2\u150c\u150d\3\2\2\2\u150d"+
		"\u150f\3\2\2\2\u150e\u1499\3\2\2\2\u150e\u14bf\3\2\2\2\u150f\u0177\3\2"+
		"\2\2\u1510\u1511\5\u01ce\u00e8\2\u1511\u0179\3\2\2\2\u1512\u1513\7\u01b6"+
		"\2\2\u1513\u017b\3\2\2\2\u1514\u1515\7\u01b6\2\2\u1515\u017d\3\2\2\2\u1516"+
		"\u1520\5\u00f4{\2\u1517\u1519\5\b\5\2\u1518\u1517\3\2\2\2\u1519\u151a"+
		"\3\2\2\2\u151a\u1518\3\2\2\2\u151a\u151b\3\2\2\2\u151b\u151e\3\2\2\2\u151c"+
		"\u151f\5\u0180\u00c1\2\u151d\u151f\7\u00ad\2\2\u151e\u151c\3\2\2\2\u151e"+
		"\u151d\3\2\2\2\u151f\u1521\3\2\2\2\u1520\u1518\3\2\2\2\u1520\u1521\3\2"+
		"\2\2\u1521\u152b\3\2\2\2\u1522\u1524\5\b\5\2\u1523\u1522\3\2\2\2\u1524"+
		"\u1525\3\2\2\2\u1525\u1523\3\2\2\2\u1525\u1526\3\2\2\2\u1526\u1527\3\2"+
		"\2\2\u1527\u1528\5\u0182\u00c2\2\u1528\u152a\3\2\2\2\u1529\u1523\3\2\2"+
		"\2\u152a\u152d\3\2\2\2\u152b\u1529\3\2\2\2\u152b\u152c\3\2\2\2\u152c\u152e"+
		"\3\2\2\2\u152d\u152b\3\2\2\2\u152e\u152f\7\u01b2\2\2\u152f\u017f\3\2\2"+
		"\2\u1530\u1531\7\u01b8\2\2\u1531\u0181\3\2\2\2\u1532\u1534\7,\2\2\u1533"+
		"\u1535\5\b\5\2\u1534\u1533\3\2\2\2\u1535\u1536\3\2\2\2\u1536\u1534\3\2"+
		"\2\2\u1536\u1537\3\2\2\2\u1537\u1538\3\2\2\2\u1538\u1539\t\b\2\2\u1539"+
		"\u15fd\3\2\2\2\u153a\u153c\7\u00b6\2\2\u153b\u153d\5\b\5\2\u153c\u153b"+
		"\3\2\2\2\u153d\u153e\3\2\2\2\u153e\u153c\3\2\2\2\u153e\u153f\3\2\2\2\u153f"+
		"\u1546\3\2\2\2\u1540\u1542\7\u00d6\2\2\u1541\u1543\5\b\5\2\u1542\u1541"+
		"\3\2\2\2\u1543\u1544\3\2\2\2\u1544\u1542\3\2\2\2\u1544\u1545\3\2\2\2\u1545"+
		"\u1547\3\2\2\2\u1546\u1540\3\2\2\2\u1546\u1547\3\2\2\2\u1547\u1548\3\2"+
		"\2\2\u1548\u1549\5\u018e\u00c8\2\u1549\u15fd\3\2\2\2\u154a\u154c\7$\2"+
		"\2\u154b\u154d\5\b\5\2\u154c\u154b\3\2\2\2\u154d\u154e\3\2\2\2\u154e\u154c"+
		"\3\2\2\2\u154e\u154f\3\2\2\2\u154f\u1556\3\2\2\2\u1550\u1552\7\u00d6\2"+
		"\2\u1551\u1553\5\b\5\2\u1552\u1551\3\2\2\2\u1553\u1554\3\2\2\2\u1554\u1552"+
		"\3\2\2\2\u1554\u1555\3\2\2\2\u1555\u1557\3\2\2\2\u1556\u1550\3\2\2\2\u1556"+
		"\u1557\3\2\2\2\u1557\u1558\3\2\2\2\u1558\u1559\5\u018e\u00c8\2\u1559\u15fd"+
		"\3\2\2\2\u155a\u15fd\7!\2\2\u155b\u15fd\7\u0148\2\2\u155c\u15fd\7\u0135"+
		"\2\2\u155d\u155f\7\u0182\2\2\u155e\u1560\5\b\5\2\u155f\u155e\3\2\2\2\u1560"+
		"\u1561\3\2\2\2\u1561\u155f\3\2\2\2\u1561\u1562\3\2\2\2\u1562\u1569\3\2"+
		"\2\2\u1563\u1565\7\u00d6\2\2\u1564\u1566\5\b\5\2\u1565\u1564\3\2\2\2\u1566"+
		"\u1567\3\2\2\2\u1567\u1565\3\2\2\2\u1567\u1568\3\2\2\2\u1568\u156a\3\2"+
		"\2\2\u1569\u1563\3\2\2\2\u1569\u156a\3\2\2\2\u156a\u156c\3\2\2\2\u156b"+
		"\u155d\3\2\2\2\u156b\u156c\3\2\2\2\u156c\u156d\3\2\2\2\u156d\u15fd\7x"+
		"\2\2\u156e\u15fd\5\u0124\u0093\2\u156f\u15fd\7\u00b8\2\2\u1570\u15fd\7"+
		"&\2\2\u1571\u15fd\7-\2\2\u1572\u1574\7\u009d\2\2\u1573\u1575\5\b\5\2\u1574"+
		"\u1573\3\2\2\2\u1575\u1576\3\2\2\2\u1576\u1574\3\2\2\2\u1576\u1577\3\2"+
		"\2\2\u1577\u1578\3\2\2\2\u1578\u1579\t\30\2\2\u1579\u15fd\3\2\2\2\u157a"+
		"\u15fd\7\u00c1\2\2\u157b\u15fd\7\u00ea\2\2\u157c\u15fd\7\u013b\2\2\u157d"+
		"\u15fd\7\u017a\2\2\u157e\u1580\7\u00e4\2\2\u157f\u1581\5\b\5\2\u1580\u157f"+
		"\3\2\2\2\u1581\u1582\3\2\2\2\u1582\u1580\3\2\2\2\u1582\u1583\3\2\2\2\u1583"+
		"\u158a\3\2\2\2\u1584\u1586\7\u00fb\2\2\u1585\u1587\5\b\5\2\u1586\u1585"+
		"\3\2\2\2\u1587\u1588\3\2\2\2\u1588\u1586\3\2\2\2\u1588\u1589\3\2\2\2\u1589"+
		"\u158b\3\2\2\2\u158a\u1584\3\2\2\2\u158a\u158b\3\2\2\2\u158b\u1592\3\2"+
		"\2\2\u158c\u158e\7\u00d6\2\2\u158d\u158f\5\b\5\2\u158e\u158d\3\2\2\2\u158f"+
		"\u1590\3\2\2\2\u1590\u158e\3\2\2\2\u1590\u1591\3\2\2\2\u1591\u1593\3\2"+
		"\2\2\u1592\u158c\3\2\2\2\u1592\u1593\3\2\2\2\u1593\u159a\3\2\2\2\u1594"+
		"\u1596\7\u0114\2\2\u1595\u1597\5\b\5\2\u1596\u1595\3\2\2\2\u1597\u1598"+
		"\3\2\2\2\u1598\u1596\3\2\2\2\u1598\u1599\3\2\2\2\u1599\u159b\3\2\2\2\u159a"+
		"\u1594\3\2\2\2\u159a\u159b\3\2\2\2\u159b\u159c\3\2\2\2\u159c\u159d\5\u018c"+
		"\u00c7\2\u159d\u15fd\3\2\2\2\u159e\u15a0\7A\2\2\u159f\u15a1\5\b\5\2\u15a0"+
		"\u159f\3\2\2\2\u15a1\u15a2\3\2\2\2\u15a2\u15a0\3\2\2\2\u15a2\u15a3\3\2"+
		"\2\2\u15a3\u15aa\3\2\2\2\u15a4\u15a6\7\u00fb\2\2\u15a5\u15a7\5\b\5\2\u15a6"+
		"\u15a5\3\2\2\2\u15a7\u15a8\3\2\2\2\u15a8\u15a6\3\2\2\2\u15a8\u15a9\3\2"+
		"\2\2\u15a9\u15ab\3\2\2\2\u15aa\u15a4\3\2\2\2\u15aa\u15ab\3\2\2\2\u15ab"+
		"\u15b2\3\2\2\2\u15ac\u15ae\7\u00d6\2\2\u15ad\u15af\5\b\5\2\u15ae\u15ad"+
		"\3\2\2\2\u15af\u15b0\3\2\2\2\u15b0\u15ae\3\2\2\2\u15b0\u15b1\3\2\2\2\u15b1"+
		"\u15b3\3\2\2\2\u15b2\u15ac\3\2\2\2\u15b2\u15b3\3\2\2\2\u15b3\u15ba\3\2"+
		"\2\2\u15b4\u15b6\7\u0114\2\2\u15b5\u15b7\5\b\5\2\u15b6\u15b5\3\2\2\2\u15b7"+
		"\u15b8\3\2\2\2\u15b8\u15b6\3\2\2\2\u15b8\u15b9\3\2\2\2\u15b9\u15bb\3\2"+
		"\2\2\u15ba\u15b4\3\2\2\2\u15ba\u15bb\3\2\2\2\u15bb\u15bc\3\2\2\2\u15bc"+
		"\u15bd\5\u018c\u00c7\2\u15bd\u15fd\3\2\2\2\u15be\u15c0\7\u0185\2\2\u15bf"+
		"\u15c1\5\b\5\2\u15c0\u15bf\3\2\2\2\u15c1\u15c2\3\2\2\2\u15c2\u15c0\3\2"+
		"\2\2\u15c2\u15c3\3\2\2\2\u15c3\u15ca\3\2\2\2\u15c4\u15c6\7\u00d6\2\2\u15c5"+
		"\u15c7\5\b\5\2\u15c6\u15c5\3\2\2\2\u15c7\u15c8\3\2\2\2\u15c8\u15c6\3\2"+
		"\2\2\u15c8\u15c9\3\2\2\2\u15c9\u15cb\3\2\2\2\u15ca\u15c4\3\2\2\2\u15ca"+
		"\u15cb\3\2\2\2\u15cb\u15cc\3\2\2\2\u15cc\u15cd\5\u018a\u00c6\2\u15cd\u15fd"+
		"\3\2\2\2\u15ce\u15d0\7,\2\2\u15cf\u15d1\5\b\5\2\u15d0\u15cf\3\2\2\2\u15d1"+
		"\u15d2\3\2\2\2\u15d2\u15d0\3\2\2\2\u15d2\u15d3\3\2\2\2\u15d3\u15da\3\2"+
		"\2\2\u15d4\u15d6\7\u0189\2\2\u15d5\u15d7\5\b\5\2\u15d6\u15d5\3\2\2\2\u15d7"+
		"\u15d8\3\2\2\2\u15d8\u15d6\3\2\2\2\u15d8\u15d9\3\2\2\2\u15d9\u15db\3\2"+
		"\2\2\u15da\u15d4\3\2\2\2\u15da\u15db\3\2\2\2\u15db\u15dc\3\2\2\2\u15dc"+
		"\u15dd\7\u0191\2\2\u15dd\u15fd\3\2\2\2\u15de\u15e6\t\r\2\2\u15df\u15e1"+
		"\5\b\5\2\u15e0\u15df\3\2\2\2\u15e1\u15e2\3\2\2\2\u15e2\u15e0\3\2\2\2\u15e2"+
		"\u15e3\3\2\2\2\u15e3\u15e4\3\2\2\2\u15e4\u15e5\7\u0140\2\2\u15e5\u15e7"+
		"\3\2\2\2\u15e6\u15e0\3\2\2\2\u15e6\u15e7\3\2\2\2\u15e7\u15fd\3\2\2\2\u15e8"+
		"\u15ea\5\u0150\u00a9\2\u15e9\u15eb\5\b\5\2\u15ea\u15e9\3\2\2\2\u15eb\u15ec"+
		"\3\2\2\2\u15ec\u15ea\3\2\2\2\u15ec\u15ed\3\2\2\2\u15ed\u15fa\3\2\2\2\u15ee"+
		"\u15fb\5\u0184\u00c3\2\u15ef\u15f7\5\u0186\u00c4\2\u15f0\u15f2\5\b\5\2"+
		"\u15f1\u15f0\3\2\2\2\u15f2\u15f3\3\2\2\2\u15f3\u15f1\3\2\2\2\u15f3\u15f4"+
		"\3\2\2\2\u15f4\u15f5\3\2\2\2\u15f5\u15f6\5\u0188\u00c5\2\u15f6\u15f8\3"+
		"\2\2\2\u15f7\u15f1\3\2\2\2\u15f7\u15f8\3\2\2\2\u15f8\u15fb\3\2\2\2\u15f9"+
		"\u15fb\5\u0188\u00c5\2\u15fa\u15ee\3\2\2\2\u15fa\u15ef\3\2\2\2\u15fa\u15f9"+
		"\3\2\2\2\u15fb\u15fd\3\2\2\2\u15fc\u1532\3\2\2\2\u15fc\u153a\3\2\2\2\u15fc"+
		"\u154a\3\2\2\2\u15fc\u155a\3\2\2\2\u15fc\u155b\3\2\2\2\u15fc\u155c\3\2"+
		"\2\2\u15fc\u156b\3\2\2\2\u15fc\u156e\3\2\2\2\u15fc\u156f\3\2\2\2\u15fc"+
		"\u1570\3\2\2\2\u15fc\u1571\3\2\2\2\u15fc\u1572\3\2\2\2\u15fc\u157a\3\2"+
		"\2\2\u15fc\u157b\3\2\2\2\u15fc\u157c\3\2\2\2\u15fc\u157d\3\2\2\2\u15fc"+
		"\u157e\3\2\2\2\u15fc\u159e\3\2\2\2\u15fc\u15be\3\2\2\2\u15fc\u15ce\3\2"+
		"\2\2\u15fc\u15de\3\2\2\2\u15fc\u15e8\3\2\2\2\u15fd\u0183\3\2\2\2\u15fe"+
		"\u1600\7\u0184\2\2\u15ff\u1601\5\b\5\2\u1600\u15ff\3\2\2\2\u1601\u1602"+
		"\3\2\2\2\u1602\u1600\3\2\2\2\u1602\u1603\3\2\2\2\u1603\u1604\3\2\2\2\u1604"+
		"\u1605\5\u01ce\u00e8\2\u1605\u0185\3\2\2\2\u1606\u1608\7\u00b7\2\2\u1607"+
		"\u1609\5\b\5\2\u1608\u1607\3\2\2\2\u1609\u160a\3\2\2\2\u160a\u1608\3\2"+
		"\2\2\u160a\u160b\3\2\2\2\u160b\u160e\3\2\2\2\u160c\u160f\5\u01ce\u00e8"+
		"\2\u160d\u160f\5\u018a\u00c6\2\u160e\u160c\3\2\2\2\u160e\u160d\3\2\2\2"+
		"\u160f\u0187\3\2\2\2\u1610\u1612\7\u0175\2\2\u1611\u1613\5\b\5\2\u1612"+
		"\u1611\3\2\2\2\u1613\u1614\3\2\2\2\u1614\u1612\3\2\2\2\u1614\u1615\3\2"+
		"\2\2\u1615\u1616\3\2\2\2\u1616\u1617\5\u01ce\u00e8\2\u1617\u0189\3\2\2"+
		"\2\u1618\u1619\7\u01b5\2\2\u1619\u018b\3\2\2\2\u161a\u161d\5\u01ce\u00e8"+
		"\2\u161b\u161d\7\u01b6\2\2\u161c\u161a\3\2\2\2\u161c\u161b\3\2\2\2\u161d"+
		"\u018d\3\2\2\2\u161e\u161f\7\u01b6\2\2\u161f\u018f\3\2\2\2\u1620\u1622"+
		"\7\5\2\2\u1621\u1623\5\b\5\2\u1622\u1621\3\2\2\2\u1623\u1624\3\2\2\2\u1624"+
		"\u1622\3\2\2\2\u1624\u1625\3\2\2\2\u1625\u1626\3\2\2\2\u1626\u162a\7z"+
		"\2\2\u1627\u1629\5\b\5\2\u1628\u1627\3\2\2\2\u1629\u162c\3\2\2\2\u162a"+
		"\u1628\3\2\2\2\u162a\u162b\3\2\2\2\u162b\u162d\3\2\2\2\u162c\u162a\3\2"+
		"\2\2\u162d\u1631\7\u01b2\2\2\u162e\u1630\5\b\5\2\u162f\u162e\3\2\2\2\u1630"+
		"\u1633\3\2\2\2\u1631\u162f\3\2\2\2\u1631\u1632\3\2\2\2\u1632\u1637\3\2"+
		"\2\2\u1633\u1631\3\2\2\2\u1634\u1636\5\u0192\u00ca\2\u1635\u1634\3\2\2"+
		"\2\u1636\u1639\3\2\2\2\u1637\u1635\3\2\2\2\u1637\u1638\3\2\2\2\u1638\u0191"+
		"\3\2\2\2\u1639\u1637\3\2\2\2\u163a\u1643\5\u0194\u00cb\2\u163b\u1643\5"+
		"\u01a0\u00d1\2\u163c\u1643\5\u01a2\u00d2\2\u163d\u1643\5\u01a4\u00d3\2"+
		"\u163e\u1643\5\u01a6\u00d4\2\u163f\u1643\5\u01a8\u00d5\2\u1640\u1643\5"+
		"\u01aa\u00d6\2\u1641\u1643\5\b\5\2\u1642\u163a\3\2\2\2\u1642\u163b\3\2"+
		"\2\2\u1642\u163c\3\2\2\2\u1642\u163d\3\2\2\2\u1642\u163e\3\2\2\2\u1642"+
		"\u163f\3\2\2\2\u1642\u1640\3\2\2\2\u1642\u1641\3\2\2\2\u1643\u0193\3\2"+
		"\2\2\u1644\u1648\7\u011f\2\2\u1645\u1647\5\b\5\2\u1646\u1645\3\2\2\2\u1647"+
		"\u164a\3\2\2\2\u1648\u1646\3\2\2\2\u1648\u1649\3\2\2\2\u1649\u164b\3\2"+
		"\2\2\u164a\u1648\3\2\2\2\u164b\u164f\7\u01b2\2\2\u164c\u164e\5\b\5\2\u164d"+
		"\u164c\3\2\2\2\u164e\u1651\3\2\2\2\u164f\u164d\3\2\2\2\u164f\u1650\3\2"+
		"\2\2\u1650\u1652\3\2\2\2\u1651\u164f\3\2\2\2\u1652\u1656\5\u0196\u00cc"+
		"\2\u1653\u1655\5\b\5\2\u1654\u1653\3\2\2\2\u1655\u1658\3\2\2\2\u1656\u1654"+
		"\3\2\2\2\u1656\u1657\3\2\2\2\u1657\u165a\3\2\2\2\u1658\u1656\3\2\2\2\u1659"+
		"\u165b\5\u0198\u00cd\2\u165a\u1659\3\2\2\2\u165a\u165b\3\2\2\2\u165b\u165f"+
		"\3\2\2\2\u165c\u165e\5\b\5\2\u165d\u165c\3\2\2\2\u165e\u1661\3\2\2\2\u165f"+
		"\u165d\3\2\2\2\u165f\u1660\3\2\2\2\u1660\u1663\3\2\2\2\u1661\u165f\3\2"+
		"\2\2\u1662\u1664\5\u019a\u00ce\2\u1663\u1662\3\2\2\2\u1663\u1664\3\2\2"+
		"\2\u1664\u1668\3\2\2\2\u1665\u1667\5\b\5\2\u1666\u1665\3\2\2\2\u1667\u166a"+
		"\3\2\2\2\u1668\u1666\3\2\2\2\u1668\u1669\3\2\2\2\u1669\u166b\3\2\2\2\u166a"+
		"\u1668\3\2\2\2\u166b\u166c\7\u01b2\2\2\u166c\u0195\3\2\2\2\u166d\u166e"+
		"\7\u01b8\2\2\u166e\u0197\3\2\2\2\u166f\u1671\7\u00d6\2\2\u1670\u1672\5"+
		"\b\5\2\u1671\u1670\3\2\2\2\u1672\u1673\3\2\2\2\u1673\u1671\3\2\2\2\u1673"+
		"\u1674\3\2\2\2\u1674\u1676\3\2\2\2\u1675\u166f\3\2\2\2\u1675\u1676\3\2"+
		"\2\2\u1676\u1677\3\2\2\2\u1677\u167f\t\31\2\2\u1678\u167a\5\b\5\2\u1679"+
		"\u1678\3\2\2\2\u167a\u167b\3\2\2\2\u167b\u1679\3\2\2\2\u167b\u167c\3\2"+
		"\2\2\u167c\u167d\3\2\2\2\u167d\u167e\7\u011e\2\2\u167e\u1680\3\2\2\2\u167f"+
		"\u1679\3\2\2\2\u167f\u1680\3\2\2\2\u1680\u0199\3\2\2\2\u1681\u1683\7\u018b"+
		"\2\2\u1682\u1684\5\b\5\2\u1683\u1682\3\2\2\2\u1684\u1685\3\2\2\2\u1685"+
		"\u1683\3\2\2\2\u1685\u1686\3\2\2\2\u1686\u1688\3\2\2\2\u1687\u1681\3\2"+
		"\2\2\u1687\u1688\3\2\2\2\u1688\u1689\3\2\2\2\u1689\u168b\7\u00c6\2\2\u168a"+
		"\u168c\5\b\5\2\u168b\u168a\3\2\2\2\u168c\u168d\3\2\2\2\u168d\u168b\3\2"+
		"\2\2\u168d\u168e\3\2\2\2\u168e\u168f\3\2\2\2\u168f\u1690\5\u019c\u00cf"+
		"\2\u1690\u019b\3\2\2\2\u1691\u1692\7\u01b5\2\2\u1692\u019d\3\2\2\2\u1693"+
		"\u1697\7\u01b9\2\2\u1694\u1696\n\2\2\2\u1695\u1694\3\2\2\2\u1696\u1699"+
		"\3\2\2\2\u1697\u1695\3\2\2\2\u1697\u1698\3\2\2\2\u1698\u169a\3\2\2\2\u1699"+
		"\u1697\3\2\2\2\u169a\u169d\7\u01bb\2\2\u169b\u169d\5\f\7\2\u169c\u1693"+
		"\3\2\2\2\u169c\u169b\3\2\2\2\u169d\u019f\3\2\2\2\u169e\u16a2\7 \2\2\u169f"+
		"\u16a1\5\b\5\2\u16a0\u169f\3\2\2\2\u16a1\u16a4\3\2\2\2\u16a2\u16a0\3\2"+
		"\2\2\u16a2\u16a3\3\2\2\2\u16a3\u16a5\3\2\2\2\u16a4\u16a2\3\2\2\2\u16a5"+
		"\u16a9\7\u01b2\2\2\u16a6\u16a8\n\2\2\2\u16a7\u16a6\3\2\2\2\u16a8\u16ab"+
		"\3\2\2\2\u16a9\u16a7\3\2\2\2\u16a9\u16aa\3\2\2\2\u16aa\u16ac\3\2\2\2\u16ab"+
		"\u16a9\3\2\2\2\u16ac\u16b0\7\u01bb\2\2\u16ad\u16af\5\u019e\u00d0\2\u16ae"+
		"\u16ad\3\2\2\2\u16af\u16b2\3\2\2\2\u16b0\u16ae\3\2\2\2\u16b0\u16b1\3\2"+
		"\2\2\u16b1\u01a1\3\2\2\2\u16b2\u16b0\3\2\2\2\u16b3\u16b7\7\u00d3\2\2\u16b4"+
		"\u16b6\5\b\5\2\u16b5\u16b4\3\2\2\2\u16b6\u16b9\3\2\2\2\u16b7\u16b5\3\2"+
		"\2\2\u16b7\u16b8\3\2\2\2\u16b8\u16ba\3\2\2\2\u16b9\u16b7\3\2\2\2\u16ba"+
		"\u16be\7\u01b2\2\2\u16bb\u16bd\n\2\2\2\u16bc\u16bb\3\2\2\2\u16bd\u16c0"+
		"\3\2\2\2\u16be\u16bc\3\2\2\2\u16be\u16bf\3\2\2\2\u16bf\u16c1\3\2\2\2\u16c0"+
		"\u16be\3\2\2\2\u16c1\u16c5\7\u01bb\2\2\u16c2\u16c4\5\u019e\u00d0\2\u16c3"+
		"\u16c2\3\2\2\2\u16c4\u16c7\3\2\2\2\u16c5\u16c3\3\2\2\2\u16c5\u16c6\3\2"+
		"\2\2\u16c6\u01a3\3\2\2\2\u16c7\u16c5\3\2\2\2\u16c8\u16cc\7h\2\2\u16c9"+
		"\u16cb\5\b\5\2\u16ca\u16c9\3\2\2\2\u16cb\u16ce\3\2\2\2\u16cc\u16ca\3\2"+
		"\2\2\u16cc\u16cd\3\2\2\2\u16cd\u16cf\3\2\2\2\u16ce\u16cc\3\2\2\2\u16cf"+
		"\u16d3\7\u01b2\2\2\u16d0\u16d2\n\2\2\2\u16d1\u16d0\3\2\2\2\u16d2\u16d5"+
		"\3\2\2\2\u16d3\u16d1\3\2\2\2\u16d3\u16d4\3\2\2\2\u16d4\u16d6\3\2\2\2\u16d5"+
		"\u16d3\3\2\2\2\u16d6\u16da\7\u01bb\2\2\u16d7\u16d9\5\u019e\u00d0\2\u16d8"+
		"\u16d7\3\2\2\2\u16d9\u16dc\3\2\2\2\u16da\u16d8\3\2\2\2\u16da\u16db\3\2"+
		"\2\2\u16db\u01a5\3\2\2\2\u16dc\u16da\3\2\2\2\u16dd\u16e1\7g\2\2\u16de"+
		"\u16e0\5\b\5\2\u16df\u16de\3\2\2\2\u16e0\u16e3\3\2\2\2\u16e1\u16df\3\2"+
		"\2\2\u16e1\u16e2\3\2\2\2\u16e2\u16e4\3\2\2\2\u16e3\u16e1\3\2\2\2\u16e4"+
		"\u16e8\7\u01b2\2\2\u16e5\u16e7\n\2\2\2\u16e6\u16e5\3\2\2\2\u16e7\u16ea"+
		"\3\2\2\2\u16e8\u16e6\3\2\2\2\u16e8\u16e9\3\2\2\2\u16e9\u16eb\3\2\2\2\u16ea"+
		"\u16e8\3\2\2\2\u16eb\u16ef\7\u01bb\2\2\u16ec\u16ee\5\u019e\u00d0\2\u16ed"+
		"\u16ec\3\2\2\2\u16ee\u16f1\3\2\2\2\u16ef\u16ed\3\2\2\2\u16ef\u16f0\3\2"+
		"\2\2\u16f0\u01a7\3\2\2\2\u16f1\u16ef\3\2\2\2\u16f2\u16f6\7\u0149\2\2\u16f3"+
		"\u16f5\5\b\5\2\u16f4\u16f3\3\2\2\2\u16f5\u16f8\3\2\2\2\u16f6\u16f4\3\2"+
		"\2\2\u16f6\u16f7\3\2\2\2\u16f7\u16f9\3\2\2\2\u16f8\u16f6\3\2\2\2\u16f9"+
		"\u16fd\7\u01b2\2\2\u16fa\u16fc\n\2\2\2\u16fb\u16fa\3\2\2\2\u16fc\u16ff"+
		"\3\2\2\2\u16fd\u16fb\3\2\2\2\u16fd\u16fe\3\2\2\2\u16fe\u1700\3\2\2\2\u16ff"+
		"\u16fd\3\2\2\2\u1700\u1704\7\u01bb\2\2\u1701\u1703\5\u019e\u00d0\2\u1702"+
		"\u1701\3\2\2\2\u1703\u1706\3\2\2\2\u1704\u1702\3\2\2\2\u1704\u1705\3\2"+
		"\2\2\u1705\u01a9\3\2\2\2\u1706\u1704\3\2\2\2\u1707\u170b\7\u0105\2\2\u1708"+
		"\u170a\5\b\5\2\u1709\u1708\3\2\2\2\u170a\u170d\3\2\2\2\u170b\u1709\3\2"+
		"\2\2\u170b\u170c\3\2\2\2\u170c\u170e\3\2\2\2\u170d\u170b\3\2\2\2\u170e"+
		"\u1712\7\u01b2\2\2\u170f\u1711\5\b\5\2\u1710\u170f\3\2\2\2\u1711\u1714"+
		"\3\2\2\2\u1712\u1710\3\2\2\2\u1712\u1713\3\2\2\2\u1713\u1716\3\2\2\2\u1714"+
		"\u1712\3\2\2\2\u1715\u1717\5\u01ac\u00d7\2\u1716\u1715\3\2\2\2\u1716\u1717"+
		"\3\2\2\2\u1717\u171b\3\2\2\2\u1718\u171a\5\b\5\2\u1719\u1718\3\2\2\2\u171a"+
		"\u171d\3\2\2\2\u171b\u1719\3\2\2\2\u171b\u171c\3\2\2\2\u171c\u171f\3\2"+
		"\2\2\u171d\u171b\3\2\2\2\u171e\u1720\7\u01b2\2\2\u171f\u171e\3\2\2\2\u171f"+
		"\u1720\3\2\2\2\u1720\u01ab\3\2\2\2\u1721\u1723\7\33\2\2\u1722\u1724\5"+
		"\b\5\2\u1723\u1722\3\2\2\2\u1724\u1725\3\2\2\2\u1725\u1723\3\2\2\2\u1725"+
		"\u1726\3\2\2\2\u1726\u172d\3\2\2\2\u1727\u1729\7\u00d6\2\2\u1728\u172a"+
		"\5\b\5\2\u1729\u1728\3\2\2\2\u172a\u172b\3\2\2\2\u172b\u1729\3\2\2\2\u172b"+
		"\u172c\3\2\2\2\u172c\u172e\3\2\2\2\u172d\u1727\3\2\2\2\u172d\u172e\3\2"+
		"\2\2\u172e\u172f\3\2\2\2\u172f\u1733\t\32\2\2\u1730\u1732\5\b\5\2\u1731"+
		"\u1730\3\2\2\2\u1732\u1735\3\2\2\2\u1733\u1731\3\2\2\2\u1733\u1734\3\2"+
		"\2\2\u1734\u1736\3\2\2\2\u1735\u1733\3\2\2\2\u1736\u1737\7\u01b2\2\2\u1737"+
		"\u01ad\3\2\2\2\u1738\u173a\7\u0097\2\2\u1739\u173b\5\b\5\2\u173a\u1739"+
		"\3\2\2\2\u173b\u173c\3\2\2\2\u173c\u173a\3\2\2\2\u173c\u173d\3\2\2\2\u173d"+
		"\u173e\3\2\2\2\u173e\u1742\7z\2\2\u173f\u1741\5\b\5\2\u1740\u173f\3\2"+
		"\2\2\u1741\u1744\3\2\2\2\u1742\u1740\3\2\2\2\u1742\u1743\3\2\2\2\u1743"+
		"\u1745\3\2\2\2\u1744\u1742\3\2\2\2\u1745\u1749\7\u01b2\2\2\u1746\u1748"+
		"\5\b\5\2\u1747\u1746\3\2\2\2\u1748\u174b\3\2\2\2\u1749\u1747\3\2\2\2\u1749"+
		"\u174a\3\2\2\2\u174a\u174d\3\2\2\2\u174b\u1749\3\2\2\2\u174c\u174e\5\u01b0"+
		"\u00d9\2\u174d\u174c\3\2\2\2\u174d\u174e\3\2\2\2\u174e\u1750\3\2\2\2\u174f"+
		"\u1751\5\u01b2\u00da\2\u1750\u174f\3\2\2\2\u1750\u1751\3\2\2\2\u1751\u01af"+
		"\3\2\2\2\u1752\u1754\7S\2\2\u1753\u1755\5\b\5\2\u1754\u1753\3\2\2\2\u1755"+
		"\u1756\3\2\2\2\u1756\u1754\3\2\2\2\u1756\u1757\3\2\2\2\u1757\u1758\3\2"+
		"\2\2\u1758\u175c\7\u0147\2\2\u1759\u175b\5\b\5\2\u175a\u1759\3\2\2\2\u175b"+
		"\u175e\3\2\2\2\u175c\u175a\3\2\2\2\u175c\u175d\3\2\2\2\u175d\u175f\3\2"+
		"\2\2\u175e\u175c\3\2\2\2\u175f\u1763\7\u01b2\2\2\u1760\u1762\5\b\5\2\u1761"+
		"\u1760\3\2\2\2\u1762\u1765\3\2\2\2\u1763\u1761\3\2\2\2\u1763\u1764\3\2"+
		"\2\2\u1764\u1767\3\2\2\2\u1765\u1763\3\2\2\2\u1766\u1768\5\u01b4\u00db"+
		"\2\u1767\u1766\3\2\2\2\u1767\u1768\3\2\2\2\u1768\u176c\3\2\2\2\u1769\u176b"+
		"\5\b\5\2\u176a\u1769\3\2\2\2\u176b\u176e\3\2\2\2\u176c\u176a\3\2\2\2\u176c"+
		"\u176d\3\2\2\2\u176d\u1770\3\2\2\2\u176e\u176c\3\2\2\2\u176f\u1771\5\u01ba"+
		"\u00de\2\u1770\u176f\3\2\2\2\u1770\u1771\3\2\2\2\u1771\u1775\3\2\2\2\u1772"+
		"\u1774\5\b\5\2\u1773\u1772\3\2\2\2\u1774\u1777\3\2\2\2\u1775\u1773\3\2"+
		"\2\2\u1775\u1776\3\2\2\2\u1776\u1779\3\2\2\2\u1777\u1775\3\2\2\2\u1778"+
		"\u177a\5\u01ca\u00e6\2\u1779\u1778\3\2\2\2\u1779\u177a\3\2\2\2\u177a\u177e"+
		"\3\2\2\2\u177b\u177d\5\b\5\2\u177c\u177b\3\2\2\2\u177d\u1780\3\2\2\2\u177e"+
		"\u177c\3\2\2\2\u177e\u177f\3\2\2\2\u177f\u01b1\3\2\2\2\u1780\u177e\3\2"+
		"\2\2\u1781\u1783\7\u00d1\2\2\u1782\u1784\5\b\5\2\u1783\u1782\3\2\2\2\u1784"+
		"\u1785\3\2\2\2\u1785\u1783\3\2\2\2\u1785\u1786\3\2\2\2\u1786\u1787\3\2"+
		"\2\2\u1787\u178b\7\u0147\2\2\u1788\u178a\5\b\5\2\u1789\u1788\3\2\2\2\u178a"+
		"\u178d\3\2\2\2\u178b\u1789\3\2\2\2\u178b\u178c\3\2\2\2\u178c\u178e\3\2"+
		"\2\2\u178d\u178b\3\2\2\2\u178e\u1792\7\u01b2\2\2\u178f\u1791\5\b\5\2\u1790"+
		"\u178f\3\2\2\2\u1791\u1794\3\2\2\2\u1792\u1790\3\2\2\2\u1792\u1793\3\2"+
		"\2\2\u1793\u1796\3\2\2\2\u1794\u1792\3\2\2\2\u1795\u1797\5\u020c\u0107"+
		"\2\u1796\u1795\3\2\2\2\u1796\u1797\3\2\2\2\u1797\u1799\3\2\2\2\u1798\u179a"+
		"\5\u023a\u011e\2\u1799\u1798\3\2\2\2\u1799\u179a\3\2\2\2\u179a\u01b3\3"+
		"\2\2\2\u179b\u179f\7\u0156\2\2\u179c\u179e\5\b\5\2\u179d\u179c\3\2\2\2"+
		"\u179e\u17a1\3\2\2\2\u179f\u179d\3\2\2\2\u179f\u17a0\3\2\2\2\u17a0\u17a2"+
		"\3\2\2\2\u17a1\u179f\3\2\2\2\u17a2\u17a6\7\u01b2\2\2\u17a3\u17a5\5\b\5"+
		"\2\u17a4\u17a3\3\2\2\2\u17a5\u17a8\3\2\2\2\u17a6\u17a4\3\2\2\2\u17a6\u17a7"+
		"\3\2\2\2\u17a7\u17bb\3\2\2\2\u17a8\u17a6\3\2\2\2\u17a9\u17b1\5\u01b6\u00dc"+
		"\2\u17aa\u17ac\5\b\5\2\u17ab\u17aa\3\2\2\2\u17ac\u17ad\3\2\2\2\u17ad\u17ab"+
		"\3\2\2\2\u17ad\u17ae\3\2\2\2\u17ae\u17af\3\2\2\2\u17af\u17b0\5\u01b8\u00dd"+
		"\2\u17b0\u17b2\3\2\2\2\u17b1\u17ab\3\2\2\2\u17b1\u17b2\3\2\2\2\u17b2\u17b6"+
		"\3\2\2\2\u17b3\u17b5\5\b\5\2\u17b4\u17b3\3\2\2\2\u17b5\u17b8\3\2\2\2\u17b6"+
		"\u17b4\3\2\2\2\u17b6\u17b7\3\2\2\2\u17b7\u17b9\3\2\2\2\u17b8\u17b6\3\2"+
		"\2\2\u17b9\u17ba\7\u01b2\2\2\u17ba\u17bc\3\2\2\2\u17bb\u17a9\3\2\2\2\u17bb"+
		"\u17bc\3\2\2\2\u17bc\u01b5\3\2\2\2\u17bd\u17be\t\33\2\2\u17be\u01b7\3"+
		"\2\2\2\u17bf\u17c1\7\u018b\2\2\u17c0\u17c2\5\b\5\2\u17c1\u17c0\3\2\2\2"+
		"\u17c2\u17c3\3\2\2\2\u17c3\u17c1\3\2\2\2\u17c3\u17c4\3\2\2\2\u17c4\u17c6"+
		"\3\2\2\2\u17c5\u17bf\3\2\2\2\u17c5\u17c6\3\2\2\2\u17c6\u17c7\3\2\2\2\u17c7"+
		"\u17c9\7l\2\2\u17c8\u17ca\5\b\5\2\u17c9\u17c8\3\2\2\2\u17ca\u17cb\3\2"+
		"\2\2\u17cb\u17c9\3\2\2\2\u17cb\u17cc\3\2\2\2\u17cc\u17cd\3\2\2\2\u17cd"+
		"\u17ce\7\u00f1\2\2\u17ce\u01b9\3\2\2\2\u17cf\u17d3\7\u00fd\2\2\u17d0\u17d2"+
		"\5\b\5\2\u17d1\u17d0\3\2\2\2\u17d2\u17d5\3\2\2\2\u17d3\u17d1\3\2\2\2\u17d3"+
		"\u17d4\3\2\2\2\u17d4\u17d6\3\2\2\2\u17d5\u17d3\3\2\2\2\u17d6\u17da\7\u01b2"+
		"\2\2\u17d7\u17d9\5\b\5\2\u17d8\u17d7\3\2\2\2\u17d9\u17dc\3\2\2\2\u17da"+
		"\u17d8\3\2\2\2\u17da\u17db\3\2\2\2\u17db\u1801\3\2\2\2\u17dc\u17da\3\2"+
		"\2\2\u17dd\u17e5\5\u01b6\u00dc\2\u17de\u17e0\5\b\5\2\u17df\u17de\3\2\2"+
		"\2\u17e0\u17e1\3\2\2\2\u17e1\u17df\3\2\2\2\u17e1\u17e2\3\2\2\2\u17e2\u17e3"+
		"\3\2\2\2\u17e3\u17e4\5\u01bc\u00df\2\u17e4\u17e6\3\2\2\2\u17e5\u17df\3"+
		"\2\2\2\u17e5\u17e6\3\2\2\2\u17e6\u17ee\3\2\2\2\u17e7\u17e9\5\b\5\2\u17e8"+
		"\u17e7\3\2\2\2\u17e9\u17ea\3\2\2\2\u17ea\u17e8\3\2\2\2\u17ea\u17eb\3\2"+
		"\2\2\u17eb\u17ec\3\2\2\2\u17ec\u17ed\5\u01c2\u00e2\2\u17ed\u17ef\3\2\2"+
		"\2\u17ee\u17e8\3\2\2\2\u17ee\u17ef\3\2\2\2\u17ef\u17f7\3\2\2\2\u17f0\u17f2"+
		"\5\b\5\2\u17f1\u17f0\3\2\2\2\u17f2\u17f3\3\2\2\2\u17f3\u17f1\3\2\2\2\u17f3"+
		"\u17f4\3\2\2\2\u17f4\u17f5\3\2\2\2\u17f5\u17f6\5\u01c6\u00e4\2\u17f6\u17f8"+
		"\3\2\2\2\u17f7\u17f1\3\2\2\2\u17f7\u17f8\3\2\2\2\u17f8\u17fc\3\2\2\2\u17f9"+
		"\u17fb\5\b\5\2\u17fa\u17f9\3\2\2\2\u17fb\u17fe\3\2\2\2\u17fc\u17fa\3\2"+
		"\2\2\u17fc\u17fd\3\2\2\2\u17fd\u17ff\3\2\2\2\u17fe\u17fc\3\2\2\2\u17ff"+
		"\u1800\7\u01b2\2\2\u1800\u1802\3\2\2\2\u1801\u17dd\3\2\2\2\u1801\u1802"+
		"\3\2\2\2\u1802\u01bb\3\2\2\2\u1803\u180b\7\u00ef\2\2\u1804\u1806\5\b\5"+
		"\2\u1805\u1804\3\2\2\2\u1806\u1807\3\2\2\2\u1807\u1805\3\2\2\2\u1807\u1808"+
		"\3\2\2\2\u1808\u1809\3\2\2\2\u1809\u180a\7\u0152\2\2\u180a\u180c\3\2\2"+
		"\2\u180b\u1805\3\2\2\2\u180b\u180c\3\2\2\2\u180c\u180e\3\2\2\2\u180d\u180f"+
		"\5\b\5\2\u180e\u180d\3\2\2\2\u180f\u1810\3\2\2\2\u1810\u180e\3\2\2\2\u1810"+
		"\u1811\3\2\2\2\u1811\u1812\3\2\2\2\u1812\u1814\5\u01be\u00e0\2\u1813\u1815"+
		"\5\b\5\2\u1814\u1813\3\2\2\2\u1815\u1816\3\2\2\2\u1816\u1814\3\2\2\2\u1816"+
		"\u1817\3\2\2\2\u1817\u1818\3\2\2\2\u1818\u1819\5\u01c0\u00e1\2\u1819\u01bd"+
		"\3\2\2\2\u181a\u181b\7\u01b6\2\2\u181b\u01bf\3\2\2\2\u181c\u181d\t\34"+
		"\2\2\u181d\u01c1\3\2\2\2\u181e\u1820\7\u011e\2\2\u181f\u1821\5\b\5\2\u1820"+
		"\u181f\3\2\2\2\u1821\u1822\3\2\2\2\u1822\u1820\3\2\2\2\u1822\u1823\3\2"+
		"\2\2\u1823\u1825\3\2\2\2\u1824\u181e\3\2\2\2\u1824\u1825\3\2\2\2\u1825"+
		"\u182c\3\2\2\2\u1826\u1828\7@\2\2\u1827\u1829\5\b\5\2\u1828\u1827\3\2"+
		"\2\2\u1829\u182a\3\2\2\2\u182a\u1828\3\2\2\2\u182a\u182b\3\2\2\2\u182b"+
		"\u182d\3\2\2\2\u182c\u1826\3\2\2\2\u182c\u182d\3\2\2\2\u182d\u182e\3\2"+
		"\2\2\u182e\u1836\7\u014d\2\2\u182f\u1831\5\b\5\2\u1830\u182f\3\2\2\2\u1831"+
		"\u1832\3\2\2\2\u1832\u1830\3\2\2\2\u1832\u1833\3\2\2\2\u1833\u1834\3\2"+
		"\2\2\u1834\u1835\7\u00d6\2\2\u1835\u1837\3\2\2\2\u1836\u1830\3\2\2\2\u1836"+
		"\u1837\3\2\2\2\u1837\u1839\3\2\2\2\u1838\u183a\5\b\5\2\u1839\u1838\3\2"+
		"\2\2\u183a\u183b\3\2\2\2\u183b\u1839\3\2\2\2\u183b\u183c\3\2\2\2\u183c"+
		"\u183d\3\2\2\2\u183d\u183e\5\u01c4\u00e3\2\u183e\u01c3\3\2\2\2\u183f\u1840"+
		"\7\u01b8\2\2\u1840\u01c5\3\2\2\2\u1841\u1849\7\u014a\2\2\u1842\u1844\5"+
		"\b\5\2\u1843\u1842\3\2\2\2\u1844\u1845\3\2\2\2\u1845\u1843\3\2\2\2\u1845"+
		"\u1846\3\2\2\2\u1846\u1847\3\2\2\2\u1847\u1848\7\u00d6\2\2\u1848\u184a"+
		"\3\2\2\2\u1849\u1843\3\2\2\2\u1849\u184a\3\2\2\2\u184a\u184b\3\2\2\2\u184b"+
		"\u184c\5\u01c8\u00e5\2\u184c\u01c7\3\2\2\2\u184d\u184e\7\u01b6\2\2\u184e"+
		"\u01c9\3\2\2\2\u184f\u1853\7\u0159\2\2\u1850\u1852\5\b\5\2\u1851\u1850"+
		"\3\2\2\2\u1852\u1855\3\2\2\2\u1853\u1851\3\2\2\2\u1853\u1854\3\2\2\2\u1854"+
		"\u1856\3\2\2\2\u1855\u1853\3\2\2\2\u1856\u185a\7\u01b2\2\2\u1857\u1859"+
		"\5\b\5\2\u1858\u1857\3\2\2\2\u1859\u185c\3\2\2\2\u185a\u1858\3\2\2\2\u185a"+
		"\u185b\3\2\2\2\u185b\u186a\3\2\2\2\u185c\u185a\3\2\2\2\u185d\u1861\5\u01cc"+
		"\u00e7\2\u185e\u1860\5\b\5\2\u185f\u185e\3\2\2\2\u1860\u1863\3\2\2\2\u1861"+
		"\u185f\3\2\2\2\u1861\u1862\3\2\2\2\u1862\u1865\3\2\2\2\u1863\u1861\3\2"+
		"\2\2\u1864\u185d\3\2\2\2\u1865\u1866\3\2\2\2\u1866\u1864\3\2\2\2\u1866"+
		"\u1867\3\2\2\2\u1867\u1868\3\2\2\2\u1868\u1869\7\u01b2\2\2\u1869\u186b"+
		"\3\2\2\2\u186a\u1864\3\2\2\2\u186a\u186b\3\2\2\2\u186b\u01cb\3\2\2\2\u186c"+
		"\u186e\5\u0204\u0103\2\u186d\u186f\5\b\5\2\u186e\u186d\3\2\2\2\u186f\u1870"+
		"\3\2\2\2\u1870\u186e\3\2\2\2\u1870\u1871\3\2\2\2\u1871\u1878\3\2\2\2\u1872"+
		"\u1874\7\u00d6\2\2\u1873\u1875\5\b\5\2\u1874\u1873\3\2\2\2\u1875\u1876"+
		"\3\2\2\2\u1876\u1874\3\2\2\2\u1876\u1877\3\2\2\2\u1877\u1879\3\2\2\2\u1878"+
		"\u1872\3\2\2\2\u1878\u1879\3\2\2\2\u1879\u187a\3\2\2\2\u187a\u187b\5\u0206"+
		"\u0104\2\u187b\u18d8\3\2\2\2\u187c\u187e\5\u0208\u0105\2\u187d\u187f\5"+
		"\b\5\2\u187e\u187d\3\2\2\2\u187f\u1880\3\2\2\2\u1880\u187e\3\2\2\2\u1880"+
		"\u1881\3\2\2\2\u1881\u1888\3\2\2\2\u1882\u1884\7\u00d6\2\2\u1883\u1885"+
		"\5\b\5\2\u1884\u1883\3\2\2\2\u1885\u1886\3\2\2\2\u1886\u1884\3\2\2\2\u1886"+
		"\u1887\3\2\2\2\u1887\u1889\3\2\2\2\u1888\u1882\3\2\2\2\u1888\u1889\3\2"+
		"\2\2\u1889\u188a\3\2\2\2\u188a\u188b\5\u020a\u0106\2\u188b\u18d8\3\2\2"+
		"\2\u188c\u188e\7\63\2\2\u188d\u188f\5\b\5\2\u188e\u188d\3\2\2\2\u188f"+
		"\u1890\3\2\2\2\u1890\u188e\3\2\2\2\u1890\u1891\3\2\2\2\u1891\u1898\3\2"+
		"\2\2\u1892\u1894\7\u00d6\2\2\u1893\u1895\5\b\5\2\u1894\u1893\3\2\2\2\u1895"+
		"\u1896\3\2\2\2\u1896\u1894\3\2\2\2\u1896\u1897\3\2\2\2\u1897\u1899\3\2"+
		"\2\2\u1898\u1892\3\2\2\2\u1898\u1899\3\2\2\2\u1899\u189a\3\2\2\2\u189a"+
		"\u189b\5\u0202\u0102\2\u189b\u18d8\3\2\2\2\u189c\u18d8\5\u01f6\u00fc\2"+
		"\u189d\u18d8\5\u01ea\u00f6\2\u189e\u18d8\5\u01de\u00f0\2\u189f\u18d8\5"+
		"\u01d8\u00ed\2\u18a0\u18d8\5\u01d0\u00e9\2\u18a1\u18a3\7m\2\2\u18a2\u18a4"+
		"\5\b\5\2\u18a3\u18a2\3\2\2\2\u18a4\u18a5\3\2\2\2\u18a5\u18a3\3\2\2\2\u18a5"+
		"\u18a6\3\2\2\2\u18a6\u18ad\3\2\2\2\u18a7\u18a9\7\u00d6\2\2\u18a8\u18aa"+
		"\5\b\5\2\u18a9\u18a8\3\2\2\2\u18aa\u18ab\3\2\2\2\u18ab\u18a9\3\2\2\2\u18ab"+
		"\u18ac\3\2\2\2\u18ac\u18ae\3\2\2\2\u18ad\u18a7\3\2\2\2\u18ad\u18ae\3\2"+
		"\2\2\u18ae\u18af\3\2\2\2\u18af\u18b0\7B\2\2\u18b0\u18d8\3\2\2\2\u18b1"+
		"\u18b3\7d\2\2\u18b2\u18b4\5\b\5\2\u18b3\u18b2\3\2\2\2\u18b4\u18b5\3\2"+
		"\2\2\u18b5\u18b3\3\2\2\2\u18b5\u18b6\3\2\2\2\u18b6\u18bd\3\2\2\2\u18b7"+
		"\u18b9\7\u00d6\2\2\u18b8\u18ba\5\b\5\2\u18b9\u18b8\3\2\2\2\u18ba\u18bb"+
		"\3\2\2\2\u18bb\u18b9\3\2\2\2\u18bb\u18bc\3\2\2\2\u18bc\u18be\3\2\2\2\u18bd"+
		"\u18b7\3\2\2\2\u18bd\u18be\3\2\2\2\u18be\u18bf\3\2\2\2\u18bf\u18c0\5\u01ce"+
		"\u00e8\2\u18c0\u18d8\3\2\2\2\u18c1\u18c3\7a\2\2\u18c2\u18c4\5\b\5\2\u18c3"+
		"\u18c2\3\2\2\2\u18c4\u18c5\3\2\2\2\u18c5\u18c3\3\2\2\2\u18c5\u18c6\3\2"+
		"\2\2\u18c6\u18c7\3\2\2\2\u18c7\u18c9\7\u015e\2\2\u18c8\u18ca\5\b\5\2\u18c9"+
		"\u18c8\3\2\2\2\u18ca\u18cb\3\2\2\2\u18cb\u18c9\3\2\2\2\u18cb\u18cc\3\2"+
		"\2\2\u18cc\u18d3\3\2\2\2\u18cd\u18cf\7\u00d6\2\2\u18ce\u18d0\5\b\5\2\u18cf"+
		"\u18ce\3\2\2\2\u18d0\u18d1\3\2\2\2\u18d1\u18cf\3\2\2\2\u18d1\u18d2\3\2"+
		"\2\2\u18d2\u18d4\3\2\2\2\u18d3\u18cd\3\2\2\2\u18d3\u18d4\3\2\2\2\u18d4"+
		"\u18d5\3\2\2\2\u18d5\u18d6\5\u01ce\u00e8\2\u18d6\u18d8\3\2\2\2\u18d7\u186c"+
		"\3\2\2\2\u18d7\u187c\3\2\2\2\u18d7\u188c\3\2\2\2\u18d7\u189c\3\2\2\2\u18d7"+
		"\u189d\3\2\2\2\u18d7\u189e\3\2\2\2\u18d7\u189f\3\2\2\2\u18d7\u18a0\3\2"+
		"\2\2\u18d7\u18a1\3\2\2\2\u18d7\u18b1\3\2\2\2\u18d7\u18c1\3\2\2\2\u18d8"+
		"\u01cd\3\2\2\2\u18d9\u18e9\7\u01b8\2\2\u18da\u18dc\5\b\5\2\u18db\u18da"+
		"\3\2\2\2\u18dc\u18dd\3\2\2\2\u18dd\u18db\3\2\2\2\u18dd\u18de\3\2\2\2\u18de"+
		"\u18df\3\2\2\2\u18df\u18e1\t\35\2\2\u18e0\u18e2\5\b\5\2\u18e1\u18e0\3"+
		"\2\2\2\u18e2\u18e3\3\2\2\2\u18e3\u18e1\3\2\2\2\u18e3\u18e4\3\2\2\2\u18e4"+
		"\u18e5\3\2\2\2\u18e5\u18e6\7\u01b8\2\2\u18e6\u18e8\3\2\2\2\u18e7\u18db"+
		"\3\2\2\2\u18e8\u18eb\3\2\2\2\u18e9\u18e7\3\2\2\2\u18e9\u18ea\3\2\2\2\u18ea"+
		"\u01cf\3\2\2\2\u18eb\u18e9\3\2\2\2\u18ec\u18ee\7b\2\2\u18ed\u18ef\5\b"+
		"\5\2\u18ee\u18ed\3\2\2\2\u18ef\u18f0\3\2\2\2\u18f0\u18ee\3\2\2\2\u18f0"+
		"\u18f1\3\2\2\2\u18f1\u18f8\3\2\2\2\u18f2\u18f4\7\u0150\2\2\u18f3\u18f5"+
		"\5\b\5\2\u18f4\u18f3\3\2\2\2\u18f5\u18f6\3\2\2\2\u18f6\u18f4\3\2\2\2\u18f6"+
		"\u18f7\3\2\2\2\u18f7\u18f9\3\2\2\2\u18f8\u18f2\3\2\2\2\u18f8\u18f9\3\2"+
		"\2\2\u18f9\u1900\3\2\2\2\u18fa\u18fc\7\u00d6\2\2\u18fb\u18fd\5\b\5\2\u18fc"+
		"\u18fb\3\2\2\2\u18fd\u18fe\3\2\2\2\u18fe\u18fc\3\2\2\2\u18fe\u18ff\3\2"+
		"\2\2\u18ff\u1901\3\2\2\2\u1900\u18fa\3\2\2\2\u1900\u1901\3\2\2\2\u1901"+
		"\u1902\3\2\2\2\u1902\u1903\5\u01d2\u00ea\2\u1903\u01d1\3\2\2\2\u1904\u190b"+
		"\5\u01d4\u00eb\2\u1905\u1907\7\u018b\2\2\u1906\u1908\5\b\5\2\u1907\u1906"+
		"\3\2\2\2\u1908\u1909\3\2\2\2\u1909\u1907\3\2\2\2\u1909\u190a\3\2\2\2\u190a"+
		"\u190c\3\2\2\2\u190b\u1905\3\2\2\2\u190b\u190c\3\2\2\2\u190c\u190d\3\2"+
		"\2\2\u190d\u190f\7\u0113\2\2\u190e\u1910\5\b\5\2\u190f\u190e\3\2\2\2\u1910"+
		"\u1911\3\2\2\2\u1911\u190f\3\2\2\2\u1911\u1912\3\2\2\2\u1912\u1913\3\2"+
		"\2\2\u1913\u1915\7\u0166\2\2\u1914\u1916\5\b\5\2\u1915\u1914\3\2\2\2\u1916"+
		"\u1917\3\2\2\2\u1917\u1915\3\2\2\2\u1917\u1918\3\2\2\2\u1918\u1919\3\2"+
		"\2\2\u1919\u191a\5\u01d6\u00ec\2\u191a\u191d\3\2\2\2\u191b\u191d\7\u01b5"+
		"\2\2\u191c\u1904\3\2\2\2\u191c\u191b\3\2\2\2\u191d\u01d3\3\2\2\2\u191e"+
		"\u191f\7\u01b5\2\2\u191f\u01d5\3\2\2\2\u1920\u1921\7\u01b5\2\2\u1921\u01d7"+
		"\3\2\2\2\u1922\u1924\7;\2\2\u1923\u1925\5\b\5\2\u1924\u1923\3\2\2\2\u1925"+
		"\u1926\3\2\2\2\u1926\u1924\3\2\2\2\u1926\u1927\3\2\2\2\u1927\u1928\3\2"+
		"\2\2\u1928\u192a\5\u01da\u00ee\2\u1929\u192b\5\b\5\2\u192a\u1929\3\2\2"+
		"\2\u192b\u192c\3\2\2\2\u192c\u192a\3\2\2\2\u192c\u192d\3\2\2\2\u192d\u1934"+
		"\3\2\2\2\u192e\u1930\7\u00d6\2\2\u192f\u1931\5\b\5\2\u1930\u192f\3\2\2"+
		"\2\u1931\u1932\3\2\2\2\u1932\u1930\3\2\2\2\u1932\u1933\3\2\2\2\u1933\u1935"+
		"\3\2\2\2\u1934\u192e\3\2\2\2\u1934\u1935\3\2\2\2\u1935\u193d\3\2\2\2\u1936"+
		"\u193a\5\u01dc\u00ef\2\u1937\u1939\5\b\5\2\u1938\u1937\3\2\2\2\u1939\u193c"+
		"\3\2\2\2\u193a\u1938\3\2\2\2\u193a\u193b\3\2\2\2\u193b\u193e\3\2\2\2\u193c"+
		"\u193a\3\2\2\2\u193d\u1936\3\2\2\2\u193e\u193f\3\2\2\2\u193f\u193d\3\2"+
		"\2\2\u193f\u1940\3\2\2\2\u1940\u01d9\3\2\2\2\u1941\u1942\7\u01b8\2\2\u1942"+
		"\u01db\3\2\2\2\u1943\u1951\5\u01f0\u00f9\2\u1944\u1946\5\b\5\2\u1945\u1944"+
		"\3\2\2\2\u1946\u1947\3\2\2\2\u1947\u1945\3\2\2\2\u1947\u1948\3\2\2\2\u1948"+
		"\u1949\3\2\2\2\u1949\u194b\t\6\2\2\u194a\u194c\5\b\5\2\u194b\u194a\3\2"+
		"\2\2\u194c\u194d\3\2\2\2\u194d\u194b\3\2\2\2\u194d\u194e\3\2\2\2\u194e"+
		"\u194f\3\2\2\2\u194f\u1950\5\u01f2\u00fa\2\u1950\u1952\3\2\2\2\u1951\u1945"+
		"\3\2\2\2\u1951\u1952\3\2\2\2\u1952\u01dd\3\2\2\2\u1953\u1955\7\u0167\2"+
		"\2\u1954\u1956\5\b\5\2\u1955\u1954\3\2\2\2\u1956\u1957\3\2\2\2\u1957\u1955"+
		"\3\2\2\2\u1957\u1958\3\2\2\2\u1958\u195f\3\2\2\2\u1959\u195b\7:\2\2\u195a"+
		"\u195c\5\b\5\2\u195b\u195a\3\2\2\2\u195c\u195d\3\2\2\2\u195d\u195b\3\2"+
		"\2\2\u195d\u195e\3\2\2\2\u195e\u1960\3\2\2\2\u195f\u1959\3\2\2\2\u195f"+
		"\u1960\3\2\2\2\u1960\u1962\3\2\2\2\u1961\u1963\5\u01e0\u00f1\2\u1962\u1961"+
		"\3\2\2\2\u1963\u1964\3\2\2\2\u1964\u1962\3\2\2\2\u1964\u1965\3\2\2\2\u1965"+
		"\u01df\3\2\2\2\u1966\u1968\5\u01e2\u00f2\2\u1967\u1966\3\2\2\2\u1968\u1969"+
		"\3\2\2\2\u1969\u1967\3\2\2\2\u1969\u196a\3\2\2\2\u196a\u196c\3\2\2\2\u196b"+
		"\u196d\5\u01e4\u00f3\2\u196c\u196b\3\2\2\2\u196c\u196d\3\2\2\2\u196d\u01e1"+
		"\3\2\2\2\u196e\u1970\5\u01e6\u00f4\2\u196f\u1971\5\b\5\2\u1970\u196f\3"+
		"\2\2\2\u1971\u1972\3\2\2\2\u1972\u1970\3\2\2\2\u1972\u1973\3\2\2\2\u1973"+
		"\u1975\3\2\2\2\u1974\u196e\3\2\2\2\u1975\u1976\3\2\2\2\u1976\u1974\3\2"+
		"\2\2\u1976\u1977\3\2\2\2\u1977\u197e\3\2\2\2\u1978\u197a\t\36\2\2\u1979"+
		"\u197b\5\b\5\2\u197a\u1979\3\2\2\2\u197b\u197c\3\2\2\2\u197c\u197a\3\2"+
		"\2\2\u197c\u197d\3\2\2\2\u197d\u197f\3\2\2\2\u197e\u1978\3\2\2\2\u197e"+
		"\u197f\3\2\2\2\u197f\u1986\3\2\2\2\u1980\u1982\5\u01e8\u00f5\2\u1981\u1983"+
		"\5\b\5\2\u1982\u1981\3\2\2\2\u1983\u1984\3\2\2\2\u1984\u1982\3\2\2\2\u1984"+
		"\u1985\3\2\2\2\u1985\u1987\3\2\2\2\u1986\u1980\3\2\2\2\u1987\u1988\3\2"+
		"\2\2\u1988\u1986\3\2\2\2\u1988\u1989\3\2\2\2\u1989\u01e3\3\2\2\2\u198a"+
		"\u198c\7\u00c9\2\2\u198b\u198d\5\b\5\2\u198c\u198b\3\2\2\2\u198d\u198e"+
		"\3\2\2\2\u198e\u198c\3\2\2\2\u198e\u198f\3\2\2\2\u198f\u1990\3\2\2\2\u1990"+
		"\u1994\5\u01c4\u00e3\2\u1991\u1993\5\b\5\2\u1992\u1991\3\2\2\2\u1993\u1996"+
		"\3\2\2\2\u1994\u1992\3\2\2\2\u1994\u1995\3\2\2\2\u1995\u01e5\3\2\2\2\u1996"+
		"\u1994\3\2\2\2\u1997\u1998\7\u01b8\2\2\u1998\u01e7\3\2\2\2\u1999\u199a"+
		"\7\u01b6\2\2\u199a\u01e9\3\2\2\2\u199b\u199d\7\r\2\2\u199c\u199e\5\b\5"+
		"\2\u199d\u199c\3\2\2\2\u199e\u199f\3\2\2\2\u199f\u199d\3\2\2\2\u199f\u19a0"+
		"\3\2\2\2\u19a0\u19a1\3\2\2\2\u19a1\u19a3\5\u01c4\u00e3\2\u19a2\u19a4\5"+
		"\b\5\2\u19a3\u19a2\3\2\2\2\u19a4\u19a5\3\2\2\2\u19a5\u19a3\3\2\2\2\u19a5"+
		"\u19a6\3\2\2\2\u19a6\u19ad\3\2\2\2\u19a7\u19a9\7\u00d6\2\2\u19a8\u19aa"+
		"\5\b\5\2\u19a9\u19a8\3\2\2\2\u19aa\u19ab\3\2\2\2\u19ab\u19a9\3\2\2\2\u19ab"+
		"\u19ac\3\2\2\2\u19ac\u19ae\3\2\2\2\u19ad\u19a7\3\2\2\2\u19ad\u19ae\3\2"+
		"\2\2\u19ae\u19af\3\2\2\2\u19af\u19b0\5\u01ec\u00f7\2\u19b0\u01eb\3\2\2"+
		"\2\u19b1\u19c2\7\35\2\2\u19b2\u19c2\7\u015b\2\2\u19b3\u19c2\7\u015c\2"+
		"\2\u19b4\u19c2\7\u00f6\2\2\u19b5\u19c2\7~\2\2\u19b6\u19ba\5\u01ee\u00f8"+
		"\2\u19b7\u19b9\5\b\5\2\u19b8\u19b7\3\2\2\2\u19b9\u19bc\3\2\2\2\u19ba\u19b8"+
		"\3\2\2\2\u19ba\u19bb\3\2\2\2\u19bb\u19be\3\2\2\2\u19bc\u19ba\3\2\2\2\u19bd"+
		"\u19b6\3\2\2\2\u19be\u19bf\3\2\2\2\u19bf\u19bd\3\2\2\2\u19bf\u19c0\3\2"+
		"\2\2\u19c0\u19c2\3\2\2\2\u19c1\u19b1\3\2\2\2\u19c1\u19b2\3\2\2\2\u19c1"+
		"\u19b3\3\2\2\2\u19c1\u19b4\3\2\2\2\u19c1\u19b5\3\2\2\2\u19c1\u19bd\3\2"+
		"\2\2\u19c2\u01ed\3\2\2\2\u19c3\u19d1\5\u01f0\u00f9\2\u19c4\u19c6\5\b\5"+
		"\2\u19c5\u19c4\3\2\2\2\u19c6\u19c7\3\2\2\2\u19c7\u19c5\3\2\2\2\u19c7\u19c8"+
		"\3\2\2\2\u19c8\u19c9\3\2\2\2\u19c9\u19cb\t\6\2\2\u19ca\u19cc\5\b\5\2\u19cb"+
		"\u19ca\3\2\2\2\u19cc\u19cd\3\2\2\2\u19cd\u19cb\3\2\2\2\u19cd\u19ce\3\2"+
		"\2\2\u19ce\u19cf\3\2\2\2\u19cf\u19d0\5\u01f2\u00fa\2\u19d0\u19d2\3\2\2"+
		"\2\u19d1\u19c5\3\2\2\2\u19d1\u19d2\3\2\2\2\u19d2\u19e6\3\2\2\2\u19d3\u19e1"+
		"\5\u01f0\u00f9\2\u19d4\u19d6\5\b\5\2\u19d5\u19d4\3\2\2\2\u19d6\u19d7\3"+
		"\2\2\2\u19d7\u19d5\3\2\2\2\u19d7\u19d8\3\2\2\2\u19d8\u19d9\3\2\2\2\u19d9"+
		"\u19db\7\21\2\2\u19da\u19dc\5\b\5\2\u19db\u19da\3\2\2\2\u19dc\u19dd\3"+
		"\2\2\2\u19dd\u19db\3\2\2\2\u19dd\u19de\3\2\2\2\u19de\u19df\3\2\2\2\u19df"+
		"\u19e0\5\u01f4\u00fb\2\u19e0\u19e2\3\2\2\2\u19e1\u19d5\3\2\2\2\u19e2\u19e3"+
		"\3\2\2\2\u19e3\u19e1\3\2\2\2\u19e3\u19e4\3\2\2\2\u19e4\u19e6\3\2\2\2\u19e5"+
		"\u19c3\3\2\2\2\u19e5\u19d3\3\2\2\2\u19e6\u01ef\3\2\2\2\u19e7\u19e8\t\16"+
		"\2\2\u19e8\u01f1\3\2\2\2\u19e9\u19ea\t\16\2\2\u19ea\u01f3\3\2\2\2\u19eb"+
		"\u19ec\t\16\2\2\u19ec\u01f5\3\2\2\2\u19ed\u19ef\7\u0165\2\2\u19ee\u19f0"+
		"\5\b\5\2\u19ef\u19ee\3\2\2\2\u19f0\u19f1\3\2\2\2\u19f1\u19ef\3\2\2\2\u19f1"+
		"\u19f2\3\2\2\2\u19f2\u19f3\3\2\2\2\u19f3\u19f7\5\u0200\u0101\2\u19f4\u19f6"+
		"\5\b\5\2\u19f5\u19f4\3\2\2\2\u19f6\u19f9\3\2\2\2\u19f7\u19f5\3\2\2\2\u19f7"+
		"\u19f8\3\2\2\2\u19f8\u1a08\3\2\2\2\u19f9\u19f7\3\2\2\2\u19fa\u19fc\7\u00d6"+
		"\2\2\u19fb\u19fd\5\b\5\2\u19fc\u19fb\3\2\2\2\u19fd\u19fe\3\2\2\2\u19fe"+
		"\u19fc\3\2\2\2\u19fe\u19ff\3\2\2\2\u19ff\u1a01\3\2\2\2\u1a00\u19fa\3\2"+
		"\2\2\u1a00\u1a01\3\2\2\2\u1a01\u1a02\3\2\2\2\u1a02\u1a04\5\u01fe\u0100"+
		"\2\u1a03\u1a05\5\b\5\2\u1a04\u1a03\3\2\2\2\u1a05\u1a06\3\2\2\2\u1a06\u1a04"+
		"\3\2\2\2\u1a06\u1a07\3\2\2\2\u1a07\u1a09\3\2\2\2\u1a08\u1a00\3\2\2\2\u1a08"+
		"\u1a09\3\2\2\2\u1a09\u1a1e\3\2\2\2\u1a0a\u1a12\5\u01f8\u00fd\2\u1a0b\u1a0d"+
		"\5\b\5\2\u1a0c\u1a0b\3\2\2\2\u1a0d\u1a0e\3\2\2\2\u1a0e\u1a0c\3\2\2\2\u1a0e"+
		"\u1a0f\3\2\2\2\u1a0f\u1a10\3\2\2\2\u1a10\u1a11\5\u01fa\u00fe\2\u1a11\u1a13"+
		"\3\2\2\2\u1a12\u1a0c\3\2\2\2\u1a12\u1a13\3\2\2\2\u1a13\u1a1f\3\2\2\2\u1a14"+
		"\u1a1c\5\u01fa\u00fe\2\u1a15\u1a17\5\b\5\2\u1a16\u1a15\3\2\2\2\u1a17\u1a18"+
		"\3\2\2\2\u1a18\u1a16\3\2\2\2\u1a18\u1a19\3\2\2\2\u1a19\u1a1a\3\2\2\2\u1a1a"+
		"\u1a1b\5\u01f8\u00fd\2\u1a1b\u1a1d\3\2\2\2\u1a1c\u1a16\3\2\2\2\u1a1c\u1a1d"+
		"\3\2\2\2\u1a1d\u1a1f\3\2\2\2\u1a1e\u1a0a\3\2\2\2\u1a1e\u1a14\3\2\2\2\u1a1e"+
		"\u1a1f\3\2\2\2\u1a1f\u1a23\3\2\2\2\u1a20\u1a22\5\b\5\2\u1a21\u1a20\3\2"+
		"\2\2\u1a22\u1a25\3\2\2\2\u1a23\u1a21\3\2\2\2\u1a23\u1a24\3\2\2\2\u1a24"+
		"\u01f7\3\2\2\2\u1a25\u1a23\3\2\2\2\u1a26\u1a28\7\u0102\2\2\u1a27\u1a29"+
		"\5\b\5\2\u1a28\u1a27\3\2\2\2\u1a29\u1a2a\3\2\2\2\u1a2a\u1a28\3\2\2\2\u1a2a"+
		"\u1a2b\3\2\2\2\u1a2b\u1a32\3\2\2\2\u1a2c\u1a2e\7\u015e\2\2\u1a2d\u1a2f"+
		"\5\b\5\2\u1a2e\u1a2d\3\2\2\2\u1a2f\u1a30\3\2\2\2\u1a30\u1a2e\3\2\2\2\u1a30"+
		"\u1a31\3\2";
	private static final String _serializedATNSegment3 =
		"\2\2\u1a31\u1a33\3\2\2\2\u1a32\u1a2c\3\2\2\2\u1a32\u1a33\3\2\2\2\u1a33"+
		"\u1a3a\3\2\2\2\u1a34\u1a36\7\u00d6\2\2\u1a35\u1a37\5\b\5\2\u1a36\u1a35"+
		"\3\2\2\2\u1a37\u1a38\3\2\2\2\u1a38\u1a36\3\2\2\2\u1a38\u1a39\3\2\2\2\u1a39"+
		"\u1a3b\3\2\2\2\u1a3a\u1a34\3\2\2\2\u1a3a\u1a3b\3\2\2\2\u1a3b\u1a3c\3\2"+
		"\2\2\u1a3c\u1a3d\5\u01fc\u00ff\2\u1a3d\u01f9\3\2\2\2\u1a3e\u1a40\7\u0100"+
		"\2\2\u1a3f\u1a41\5\b\5\2\u1a40\u1a3f\3\2\2\2\u1a41\u1a42\3\2\2\2\u1a42"+
		"\u1a40\3\2\2\2\u1a42\u1a43\3\2\2\2\u1a43\u1a4a\3\2\2\2\u1a44\u1a46\7\u015e"+
		"\2\2\u1a45\u1a47\5\b\5\2\u1a46\u1a45\3\2\2\2\u1a47\u1a48\3\2\2\2\u1a48"+
		"\u1a46\3\2\2\2\u1a48\u1a49\3\2\2\2\u1a49\u1a4b\3\2\2\2\u1a4a\u1a44\3\2"+
		"\2\2\u1a4a\u1a4b\3\2\2\2\u1a4b\u1a52\3\2\2\2\u1a4c\u1a4e\7\u00d6\2\2\u1a4d"+
		"\u1a4f\5\b\5\2\u1a4e\u1a4d\3\2\2\2\u1a4f\u1a50\3\2\2\2\u1a50\u1a4e\3\2"+
		"\2\2\u1a50\u1a51\3\2\2\2\u1a51\u1a53\3\2\2\2\u1a52\u1a4c\3\2\2\2\u1a52"+
		"\u1a53\3\2\2\2\u1a53\u1a54\3\2\2\2\u1a54\u1a55\5\u01fc\u00ff\2\u1a55\u01fb"+
		"\3\2\2\2\u1a56\u1a57\7\u01b8\2\2\u1a57\u01fd\3\2\2\2\u1a58\u1a59\7\u01b8"+
		"\2\2\u1a59\u01ff\3\2\2\2\u1a5a\u1a5b\7\u01b6\2\2\u1a5b\u0201\3\2\2\2\u1a5c"+
		"\u1a5d\7\u01b8\2\2\u1a5d\u0203\3\2\2\2\u1a5e\u1a5f\t\37\2\2\u1a5f\u0205"+
		"\3\2\2\2\u1a60\u1a61\7\u01b8\2\2\u1a61\u0207\3\2\2\2\u1a62\u1a63\t \2"+
		"\2\u1a63\u0209\3\2\2\2\u1a64\u1a65\7\u01b8\2\2\u1a65\u020b\3\2\2\2\u1a66"+
		"\u1a6a\7\u00ab\2\2\u1a67\u1a69\5\b\5\2\u1a68\u1a67\3\2\2\2\u1a69\u1a6c"+
		"\3\2\2\2\u1a6a\u1a68\3\2\2\2\u1a6a\u1a6b\3\2\2\2\u1a6b\u1a6d\3\2\2\2\u1a6c"+
		"\u1a6a\3\2\2\2\u1a6d\u1a71\7\u01b2\2\2\u1a6e\u1a70\5\b\5\2\u1a6f\u1a6e"+
		"\3\2\2\2\u1a70\u1a73\3\2\2\2\u1a71\u1a6f\3\2\2\2\u1a71\u1a72\3\2\2\2\u1a72"+
		"\u1a7d\3\2\2\2\u1a73\u1a71\3\2\2\2\u1a74\u1a78\5\u020e\u0108\2\u1a75\u1a77"+
		"\5\b\5\2\u1a76\u1a75\3\2\2\2\u1a77\u1a7a\3\2\2\2\u1a78\u1a76\3\2\2\2\u1a78"+
		"\u1a79\3\2\2\2\u1a79\u1a7c\3\2\2\2\u1a7a\u1a78\3\2\2\2\u1a7b\u1a74\3\2"+
		"\2\2\u1a7c\u1a7f\3\2\2\2\u1a7d\u1a7b\3\2\2\2\u1a7d\u1a7e\3\2\2\2\u1a7e"+
		"\u020d\3\2\2\2\u1a7f\u1a7d\3\2\2\2\u1a80\u1a82\7\u014b\2\2\u1a81\u1a83"+
		"\5\b\5\2\u1a82\u1a81\3\2\2\2\u1a83\u1a84\3\2\2\2\u1a84\u1a82\3\2\2\2\u1a84"+
		"\u1a85\3\2\2\2\u1a85\u1a8c\3\2\2\2\u1a86\u1a88\7\u0104\2\2\u1a87\u1a89"+
		"\5\b\5\2\u1a88\u1a87\3\2\2\2\u1a89\u1a8a\3\2\2\2\u1a8a\u1a88\3\2\2\2\u1a8a"+
		"\u1a8b\3\2\2\2\u1a8b\u1a8d\3\2\2\2\u1a8c\u1a86\3\2\2\2\u1a8c\u1a8d\3\2"+
		"\2\2\u1a8d\u1a8e\3\2\2\2\u1a8e\u1a92\5\u0238\u011d\2\u1a8f\u1a91\5\b\5"+
		"\2\u1a90\u1a8f\3\2\2\2\u1a91\u1a94\3\2\2\2\u1a92\u1a90\3\2\2\2\u1a92\u1a93"+
		"\3\2\2\2\u1a93\u1a95\3\2\2\2\u1a94\u1a92\3\2\2\2\u1a95\u1a99\5\u0232\u011a"+
		"\2\u1a96\u1a98\5\b\5\2\u1a97\u1a96\3\2\2\2\u1a98\u1a9b\3\2\2\2\u1a99\u1a97"+
		"\3\2\2\2\u1a99\u1a9a\3\2\2\2\u1a9a\u1aa3\3\2\2\2\u1a9b\u1a99\3\2\2\2\u1a9c"+
		"\u1aa0\5\u021a\u010e\2\u1a9d\u1a9f\5\b\5\2\u1a9e\u1a9d\3\2\2\2\u1a9f\u1aa2"+
		"\3\2\2\2\u1aa0\u1a9e\3\2\2\2\u1aa0\u1aa1\3\2\2\2\u1aa1\u1aa4\3\2\2\2\u1aa2"+
		"\u1aa0\3\2\2\2\u1aa3\u1a9c\3\2\2\2\u1aa3\u1aa4\3\2\2\2\u1aa4\u1aac\3\2"+
		"\2\2\u1aa5\u1aa9\5\u0224\u0113\2\u1aa6\u1aa8\5\b\5\2\u1aa7\u1aa6\3\2\2"+
		"\2\u1aa8\u1aab\3\2\2\2\u1aa9\u1aa7\3\2\2\2\u1aa9\u1aaa\3\2\2\2\u1aaa\u1aad"+
		"\3\2\2\2\u1aab\u1aa9\3\2\2\2\u1aac\u1aa5\3\2\2\2\u1aac\u1aad\3\2\2\2\u1aad"+
		"\u1ab5\3\2\2\2\u1aae\u1ab2\5\u022c\u0117\2\u1aaf\u1ab1\5\b\5\2\u1ab0\u1aaf"+
		"\3\2\2\2\u1ab1\u1ab4\3\2\2\2\u1ab2\u1ab0\3\2\2\2\u1ab2\u1ab3\3\2\2\2\u1ab3"+
		"\u1ab6\3\2\2\2\u1ab4\u1ab2\3\2\2\2\u1ab5\u1aae\3\2\2\2\u1ab5\u1ab6\3\2"+
		"\2\2\u1ab6\u1abe\3\2\2\2\u1ab7\u1abb\5\u022a\u0116\2\u1ab8\u1aba\5\b\5"+
		"\2\u1ab9\u1ab8\3\2\2\2\u1aba\u1abd\3\2\2\2\u1abb\u1ab9\3\2\2\2\u1abb\u1abc"+
		"\3\2\2\2\u1abc\u1abf\3\2\2\2\u1abd\u1abb\3\2\2\2\u1abe\u1ab7\3\2\2\2\u1abe"+
		"\u1abf\3\2\2\2\u1abf\u1ac7\3\2\2\2\u1ac0\u1ac4\5\u0220\u0111\2\u1ac1\u1ac3"+
		"\5\b\5\2\u1ac2\u1ac1\3\2\2\2\u1ac3\u1ac6\3\2\2\2\u1ac4\u1ac2\3\2\2\2\u1ac4"+
		"\u1ac5\3\2\2\2\u1ac5\u1ac8\3\2\2\2\u1ac6\u1ac4\3\2\2\2\u1ac7\u1ac0\3\2"+
		"\2\2\u1ac7\u1ac8\3\2\2\2\u1ac8\u1ad0\3\2\2\2\u1ac9\u1acd\5\u021e\u0110"+
		"\2\u1aca\u1acc\5\b\5\2\u1acb\u1aca\3\2\2\2\u1acc\u1acf\3\2\2\2\u1acd\u1acb"+
		"\3\2\2\2\u1acd\u1ace\3\2\2\2\u1ace\u1ad1\3\2\2\2\u1acf\u1acd\3\2\2\2\u1ad0"+
		"\u1ac9\3\2\2\2\u1ad0\u1ad1\3\2\2\2\u1ad1\u1ad9\3\2\2\2\u1ad2\u1ad6\5\u0218"+
		"\u010d\2\u1ad3\u1ad5\5\b\5\2\u1ad4\u1ad3\3\2\2\2\u1ad5\u1ad8\3\2\2\2\u1ad6"+
		"\u1ad4\3\2\2\2\u1ad6\u1ad7\3\2\2\2\u1ad7\u1ada\3\2\2\2\u1ad8\u1ad6\3\2"+
		"\2\2\u1ad9\u1ad2\3\2\2\2\u1ad9\u1ada\3\2\2\2\u1ada\u1ae4\3\2\2\2\u1adb"+
		"\u1adf\5\u0214\u010b\2\u1adc\u1ade\5\b\5\2\u1add\u1adc\3\2\2\2\u1ade\u1ae1"+
		"\3\2\2\2\u1adf\u1add\3\2\2\2\u1adf\u1ae0\3\2\2\2\u1ae0\u1ae3\3\2\2\2\u1ae1"+
		"\u1adf\3\2\2\2\u1ae2\u1adb\3\2\2\2\u1ae3\u1ae6\3\2\2\2\u1ae4\u1ae2\3\2"+
		"\2\2\u1ae4\u1ae5\3\2\2\2\u1ae5\u1aee\3\2\2\2\u1ae6\u1ae4\3\2\2\2\u1ae7"+
		"\u1aeb\5\u0226\u0114\2\u1ae8\u1aea\5\b\5\2\u1ae9\u1ae8\3\2\2\2\u1aea\u1aed"+
		"\3\2\2\2\u1aeb\u1ae9\3\2\2\2\u1aeb\u1aec\3\2\2\2\u1aec\u1aef\3\2\2\2\u1aed"+
		"\u1aeb\3\2\2\2\u1aee\u1ae7\3\2\2\2\u1aee\u1aef\3\2\2\2\u1aef\u1af7\3\2"+
		"\2\2\u1af0\u1af4\5\u0210\u0109\2\u1af1\u1af3\5\b\5\2\u1af2\u1af1\3\2\2"+
		"\2\u1af3\u1af6\3\2\2\2\u1af4\u1af2\3\2\2\2\u1af4\u1af5\3\2\2\2\u1af5\u1af8"+
		"\3\2\2\2\u1af6\u1af4\3\2\2\2\u1af7\u1af0\3\2\2\2\u1af7\u1af8\3\2\2\2\u1af8"+
		"\u1af9\3\2\2\2\u1af9\u1afa\7\u01b2\2\2\u1afa\u020f\3\2\2\2\u1afb\u1afd"+
		"\7\u00aa\2\2\u1afc\u1afe\5\b\5\2\u1afd\u1afc\3\2\2\2\u1afe\u1aff\3\2\2"+
		"\2\u1aff\u1afd\3\2\2\2\u1aff\u1b00\3\2\2\2\u1b00\u1b02\3\2\2\2\u1b01\u1afb"+
		"\3\2\2\2\u1b01\u1b02\3\2\2\2\u1b02\u1b03\3\2\2\2\u1b03\u1b05\7\u015e\2"+
		"\2\u1b04\u1b06\5\b\5\2\u1b05\u1b04\3\2\2\2\u1b06\u1b07\3\2\2\2\u1b07\u1b05"+
		"\3\2\2\2\u1b07\u1b08\3\2\2\2\u1b08\u1b0f\3\2\2\2\u1b09\u1b0b\7\u00d6\2"+
		"\2\u1b0a\u1b0c\5\b\5\2\u1b0b\u1b0a\3\2\2\2\u1b0c\u1b0d\3\2\2\2\u1b0d\u1b0b"+
		"\3\2\2\2\u1b0d\u1b0e\3\2\2\2\u1b0e\u1b10\3\2\2\2\u1b0f\u1b09\3\2\2\2\u1b0f"+
		"\u1b10\3\2\2\2\u1b10\u1b11\3\2\2\2\u1b11\u1b12\5\u0212\u010a\2\u1b12\u0211"+
		"\3\2\2\2\u1b13\u1b14\5\u01ce\u00e8\2\u1b14\u0213\3\2\2\2\u1b15\u1b17\7"+
		"\23\2\2\u1b16\u1b18\5\b\5\2\u1b17\u1b16\3\2\2\2\u1b18\u1b19\3\2\2\2\u1b19"+
		"\u1b17\3\2\2\2\u1b19\u1b1a\3\2\2\2\u1b1a\u1b1c\3\2\2\2\u1b1b\u1b15\3\2"+
		"\2\2\u1b1b\u1b1c\3\2\2\2\u1b1c\u1b1d\3\2\2\2\u1b1d\u1b1f\7\u0126\2\2\u1b1e"+
		"\u1b20\5\b\5\2\u1b1f\u1b1e\3\2\2\2\u1b20\u1b21\3\2\2\2\u1b21\u1b1f\3\2"+
		"\2\2\u1b21\u1b22\3\2\2\2\u1b22\u1b29\3\2\2\2\u1b23\u1b25\7\u00db\2\2\u1b24"+
		"\u1b26\5\b\5\2\u1b25\u1b24\3\2\2\2\u1b26\u1b27\3\2\2\2\u1b27\u1b25\3\2"+
		"\2\2\u1b27\u1b28\3\2\2\2\u1b28\u1b2a\3\2\2\2\u1b29\u1b23\3\2\2\2\u1b29"+
		"\u1b2a\3\2\2\2\u1b2a\u1b31\3\2\2\2\u1b2b\u1b2d\7\u00d6\2\2\u1b2c\u1b2e"+
		"\5\b\5\2\u1b2d\u1b2c\3\2\2\2\u1b2e\u1b2f\3\2\2\2\u1b2f\u1b2d\3\2\2\2\u1b2f"+
		"\u1b30\3\2\2\2\u1b30\u1b32\3\2\2\2\u1b31\u1b2b\3\2\2\2\u1b31\u1b32\3\2"+
		"\2\2\u1b32\u1b33\3\2\2\2\u1b33\u1b43\5\u0216\u010c\2\u1b34\u1b36\5\b\5"+
		"\2\u1b35\u1b34\3\2\2\2\u1b36\u1b37\3\2\2\2\u1b37\u1b35\3\2\2\2\u1b37\u1b38"+
		"\3\2\2\2\u1b38\u1b3f\3\2\2\2\u1b39\u1b3b\7\u018b\2\2\u1b3a\u1b3c\5\b\5"+
		"\2\u1b3b\u1b3a\3\2\2\2\u1b3c\u1b3d\3\2\2\2\u1b3d\u1b3b\3\2\2\2\u1b3d\u1b3e"+
		"\3\2\2\2\u1b3e\u1b40\3\2\2\2\u1b3f\u1b39\3\2\2\2\u1b3f\u1b40\3\2\2\2\u1b40"+
		"\u1b41\3\2\2\2\u1b41\u1b42\7|\2\2\u1b42\u1b44\3\2\2\2\u1b43\u1b35\3\2"+
		"\2\2\u1b43\u1b44\3\2\2\2\u1b44\u1b4c\3\2\2\2\u1b45\u1b47\5\b\5\2\u1b46"+
		"\u1b45\3\2\2\2\u1b47\u1b48\3\2\2\2\u1b48\u1b46\3\2\2\2\u1b48\u1b49\3\2"+
		"\2\2\u1b49\u1b4a\3\2\2\2\u1b4a\u1b4b\t\17\2\2\u1b4b\u1b4d\3\2\2\2\u1b4c"+
		"\u1b46\3\2\2\2\u1b4c\u1b4d\3\2\2\2\u1b4d\u0215\3\2\2\2\u1b4e\u1b6b\5\u01ce"+
		"\u00e8\2\u1b4f\u1b53\7\u01b8\2\2\u1b50\u1b52\5\b\5\2\u1b51\u1b50\3\2\2"+
		"\2\u1b52\u1b55\3\2\2\2\u1b53\u1b51\3\2\2\2\u1b53\u1b54\3\2\2\2\u1b54\u1b56"+
		"\3\2\2\2\u1b55\u1b53\3\2\2\2\u1b56\u1b5a\7\u01a7\2\2\u1b57\u1b59\5\b\5"+
		"\2\u1b58\u1b57\3\2\2\2\u1b59\u1b5c\3\2\2\2\u1b5a\u1b58\3\2\2\2\u1b5a\u1b5b"+
		"\3\2\2\2\u1b5b\u1b5d\3\2\2\2\u1b5c\u1b5a\3\2\2\2\u1b5d\u1b67\5\u01ce\u00e8"+
		"\2\u1b5e\u1b60\5\b\5\2\u1b5f\u1b5e\3\2\2\2\u1b60\u1b63\3\2\2\2\u1b61\u1b5f"+
		"\3\2\2\2\u1b61\u1b62\3\2\2\2\u1b62\u1b64\3\2\2\2\u1b63\u1b61\3\2\2\2\u1b64"+
		"\u1b66\5\u01ce\u00e8\2\u1b65\u1b61\3\2\2\2\u1b66\u1b69\3\2\2\2\u1b67\u1b65"+
		"\3\2\2\2\u1b67\u1b68\3\2\2\2\u1b68\u1b6b\3\2\2\2\u1b69\u1b67\3\2\2\2\u1b6a"+
		"\u1b4e\3\2\2\2\u1b6a\u1b4f\3\2\2\2\u1b6b\u0217\3\2\2\2\u1b6c\u1b6e\7\7"+
		"\2\2\u1b6d\u1b6f\5\b\5\2\u1b6e\u1b6d\3\2\2\2\u1b6f\u1b70\3\2\2\2\u1b70"+
		"\u1b6e\3\2\2\2\u1b70\u1b71\3\2\2\2\u1b71\u1b78\3\2\2\2\u1b72\u1b74\7\u00f1"+
		"\2\2\u1b73\u1b75\5\b\5\2\u1b74\u1b73\3\2\2\2\u1b75\u1b76\3\2\2\2\u1b76"+
		"\u1b74\3\2\2\2\u1b76\u1b77\3\2\2\2\u1b77\u1b79\3\2\2\2\u1b78\u1b72\3\2"+
		"\2\2\u1b78\u1b79\3\2\2\2\u1b79\u1b80\3\2\2\2\u1b7a\u1b7c\7\u00d6\2\2\u1b7b"+
		"\u1b7d\5\b\5\2\u1b7c\u1b7b\3\2\2\2\u1b7d\u1b7e\3\2\2\2\u1b7e\u1b7c\3\2"+
		"\2\2\u1b7e\u1b7f\3\2\2\2\u1b7f\u1b81\3\2\2\2\u1b80\u1b7a\3\2\2\2\u1b80"+
		"\u1b81\3\2\2\2\u1b81\u1b83\3\2\2\2\u1b82\u1b6c\3\2\2\2\u1b82\u1b83\3\2"+
		"\2\2\u1b83\u1b84\3\2\2\2\u1b84\u1ba2\t!\2\2\u1b85\u1b87\5\b\5\2\u1b86"+
		"\u1b85\3\2\2\2\u1b87\u1b88\3\2\2\2\u1b88\u1b86\3\2\2\2\u1b88\u1b89\3\2"+
		"\2\2\u1b89\u1b8a\3\2\2\2\u1b8a\u1b8c\7\u012b\2\2\u1b8b\u1b8d\5\b\5\2\u1b8c"+
		"\u1b8b\3\2\2\2\u1b8d\u1b8e\3\2\2\2\u1b8e\u1b8c\3\2\2\2\u1b8e\u1b8f\3\2"+
		"\2\2\u1b8f\u1b96\3\2\2\2\u1b90\u1b92\7\u00db\2\2\u1b91\u1b93\5\b\5\2\u1b92"+
		"\u1b91\3\2\2\2\u1b93\u1b94\3\2\2\2\u1b94\u1b92\3\2\2\2\u1b94\u1b95\3\2"+
		"\2\2\u1b95\u1b97\3\2\2\2\u1b96\u1b90\3\2\2\2\u1b96\u1b97\3\2\2\2\u1b97"+
		"\u1b9e\3\2\2\2\u1b98\u1b9a\7\u00d6\2\2\u1b99\u1b9b\5\b\5\2\u1b9a\u1b99"+
		"\3\2\2\2\u1b9b\u1b9c\3\2\2\2\u1b9c\u1b9a\3\2\2\2\u1b9c\u1b9d\3\2\2\2\u1b9d"+
		"\u1b9f\3\2\2\2\u1b9e\u1b98\3\2\2\2\u1b9e\u1b9f\3\2\2\2\u1b9f\u1ba0\3\2"+
		"\2\2\u1ba0\u1ba1\5\u01ce\u00e8\2\u1ba1\u1ba3\3\2\2\2\u1ba2\u1b86\3\2\2"+
		"\2\u1ba2\u1ba3\3\2\2\2\u1ba3\u0219\3\2\2\2\u1ba4\u1ba6\7\u0137\2\2\u1ba5"+
		"\u1ba7\5\b\5\2\u1ba6\u1ba5\3\2\2\2\u1ba7\u1ba8\3\2\2\2\u1ba8\u1ba6\3\2"+
		"\2\2\u1ba8\u1ba9\3\2\2\2\u1ba9\u1baa\3\2\2\2\u1baa\u1bb2\5\u021c\u010f"+
		"\2\u1bab\u1bad\5\b\5\2\u1bac\u1bab\3\2\2\2\u1bad\u1bae\3\2\2\2\u1bae\u1bac"+
		"\3\2\2\2\u1bae\u1baf\3\2\2\2\u1baf\u1bb0\3\2\2\2\u1bb0\u1bb1\t\"\2\2\u1bb1"+
		"\u1bb3\3\2\2\2\u1bb2\u1bac\3\2\2\2\u1bb2\u1bb3\3\2\2\2\u1bb3\u021b\3\2"+
		"\2\2\u1bb4\u1bb5\7\u01b6\2\2\u1bb5\u021d\3\2\2\2\u1bb6\u1bb8\7\u0126\2"+
		"\2\u1bb7\u1bb9\5\b\5\2\u1bb8\u1bb7\3\2\2\2\u1bb9\u1bba\3\2\2\2\u1bba\u1bb8"+
		"\3\2\2\2\u1bba\u1bbb\3\2\2\2\u1bbb\u1bbc\3\2\2\2\u1bbc\u1bbe\7r\2\2\u1bbd"+
		"\u1bbf\5\b\5\2\u1bbe\u1bbd\3\2\2\2\u1bbf\u1bc0\3\2\2\2\u1bc0\u1bbe\3\2"+
		"\2\2\u1bc0\u1bc1\3\2\2\2\u1bc1\u1bc8\3\2\2\2\u1bc2\u1bc4\7\u00d6\2\2\u1bc3"+
		"\u1bc5\5\b\5\2\u1bc4\u1bc3\3\2\2\2\u1bc5\u1bc6\3\2\2\2\u1bc6\u1bc4\3\2"+
		"\2\2\u1bc6\u1bc7\3\2\2\2\u1bc7\u1bc9\3\2\2\2\u1bc8\u1bc2\3\2\2\2\u1bc8"+
		"\u1bc9\3\2\2\2\u1bc9\u1bca\3\2\2\2\u1bca\u1bcb\7\u015b\2\2\u1bcb\u021f"+
		"\3\2\2\2\u1bcc\u1bce\7\u010b\2\2\u1bcd\u1bcf\5\b\5\2\u1bce\u1bcd\3\2\2"+
		"\2\u1bcf\u1bd0\3\2\2\2\u1bd0\u1bce\3\2\2\2\u1bd0\u1bd1\3\2\2\2\u1bd1\u1bd8"+
		"\3\2\2\2\u1bd2\u1bd4\79\2\2\u1bd3\u1bd5\5\b\5\2\u1bd4\u1bd3\3\2\2\2\u1bd5"+
		"\u1bd6\3\2\2\2\u1bd6\u1bd4\3\2\2\2\u1bd6\u1bd7\3\2\2\2\u1bd7\u1bd9\3\2"+
		"\2\2\u1bd8\u1bd2\3\2\2\2\u1bd8\u1bd9\3\2\2\2\u1bd9\u1be0\3\2\2\2\u1bda"+
		"\u1bdc\7\u00d6\2\2\u1bdb\u1bdd\5\b\5\2\u1bdc\u1bdb\3\2\2\2\u1bdd\u1bde"+
		"\3\2\2\2\u1bde\u1bdc\3\2\2\2\u1bde\u1bdf\3\2\2\2\u1bdf\u1be1\3\2\2\2\u1be0"+
		"\u1bda\3\2\2\2\u1be0\u1be1\3\2\2\2\u1be1\u1be2\3\2\2\2\u1be2\u1be3\5\u0222"+
		"\u0112\2\u1be3\u0221\3\2\2\2\u1be4\u1be5\7\u01b5\2\2\u1be5\u0223\3\2\2"+
		"\2\u1be6\u1be8\7\u0107\2\2\u1be7\u1be9\5\b\5\2\u1be8\u1be7\3\2\2\2\u1be9"+
		"\u1bea\3\2\2\2\u1bea\u1be8\3\2\2\2\u1bea\u1beb\3\2\2\2\u1beb\u1bf2\3\2"+
		"\2\2\u1bec\u1bee\7\u00d6\2\2\u1bed\u1bef\5\b\5\2\u1bee\u1bed\3\2\2\2\u1bef"+
		"\u1bf0\3\2\2\2\u1bf0\u1bee\3\2\2\2\u1bf0\u1bf1\3\2\2\2\u1bf1\u1bf3\3\2"+
		"\2\2\u1bf2\u1bec\3\2\2\2\u1bf2\u1bf3\3\2\2\2\u1bf3\u1bf5\3\2\2\2\u1bf4"+
		"\u1be6\3\2\2\2\u1bf4\u1bf5\3\2\2\2\u1bf5\u1c01\3\2\2\2\u1bf6\u1c02\7\u014e"+
		"\2\2\u1bf7\u1bf9\7\u00e4\2\2\u1bf8\u1bfa\5\b\5\2\u1bf9\u1bf8\3\2\2\2\u1bfa"+
		"\u1bfb\3\2\2\2\u1bfb\u1bf9\3\2\2\2\u1bfb\u1bfc\3\2\2\2\u1bfc\u1bfd\3\2"+
		"\2\2\u1bfd\u1bfe\7\u014e\2\2\u1bfe\u1c02\3\2\2\2\u1bff\u1c02\7\u012b\2"+
		"\2\u1c00\u1c02\7\u00cb\2\2\u1c01\u1bf6\3\2\2\2\u1c01\u1bf7\3\2\2\2\u1c01"+
		"\u1bff\3\2\2\2\u1c01\u1c00\3\2\2\2\u1c02\u0225\3\2\2\2\u1c03\u1c05\7\u00e8"+
		"\2\2\u1c04\u1c06\5\b\5\2\u1c05\u1c04\3\2\2\2\u1c06\u1c07\3\2\2\2\u1c07"+
		"\u1c05\3\2\2\2\u1c07\u1c08\3\2\2\2\u1c08\u1c0f\3\2\2\2\u1c09\u1c0b\7\u00f1"+
		"\2\2\u1c0a\u1c0c\5\b\5\2\u1c0b\u1c0a\3\2\2\2\u1c0c\u1c0d\3\2\2\2\u1c0d"+
		"\u1c0b\3\2\2\2\u1c0d\u1c0e\3\2\2\2\u1c0e\u1c10\3\2\2\2\u1c0f\u1c09\3\2"+
		"\2\2\u1c0f\u1c10\3\2\2\2\u1c10\u1c17\3\2\2\2\u1c11\u1c13\7\u00d6\2\2\u1c12"+
		"\u1c14\5\b\5\2\u1c13\u1c12\3\2\2\2\u1c14\u1c15\3\2\2\2\u1c15\u1c13\3\2"+
		"\2\2\u1c15\u1c16\3\2\2\2\u1c16\u1c18\3\2\2\2\u1c17\u1c11\3\2\2\2\u1c17"+
		"\u1c18\3\2\2\2\u1c18\u1c19\3\2\2\2\u1c19\u1c1a\5\u0228\u0115\2\u1c1a\u0227"+
		"\3\2\2\2\u1c1b\u1c1d\7\u00ed\2\2\u1c1c\u1c1e\5\b\5\2\u1c1d\u1c1c\3\2\2"+
		"\2\u1c1e\u1c1f\3\2\2\2\u1c1f\u1c1d\3\2\2\2\u1c1f\u1c20\3\2\2\2\u1c20\u1c27"+
		"\3\2\2\2\u1c21\u1c23\7\u018b\2\2\u1c22\u1c24\5\b\5\2\u1c23\u1c22\3\2\2"+
		"\2\u1c24\u1c25\3\2\2\2\u1c25\u1c23\3\2\2\2\u1c25\u1c26\3\2\2\2\u1c26\u1c28"+
		"\3\2\2\2\u1c27\u1c21\3\2\2\2\u1c27\u1c28\3\2\2\2\u1c28\u1c29\3\2\2\2\u1c29"+
		"\u1c2b\7\u00e8\2\2\u1c2a\u1c2c\5\b\5\2\u1c2b\u1c2a\3\2\2\2\u1c2c\u1c2d"+
		"\3\2\2\2\u1c2d\u1c2b\3\2\2\2\u1c2d\u1c2e\3\2\2\2\u1c2e\u1c2f\3\2\2\2\u1c2f"+
		"\u1c31\7\u0102\2\2\u1c30\u1c32\5\b\5\2\u1c31\u1c30\3\2\2\2\u1c32\u1c33"+
		"\3\2\2\2\u1c33\u1c31\3\2\2\2\u1c33\u1c34\3\2\2\2\u1c34\u1c35\3\2\2\2\u1c35"+
		"\u1c37\7\u00f4\2\2\u1c36\u1c38\5\b\5\2\u1c37\u1c36\3\2\2\2\u1c38\u1c39"+
		"\3\2\2\2\u1c39\u1c37\3\2\2\2\u1c39\u1c3a\3\2\2\2\u1c3a\u1c3b\3\2\2\2\u1c3b"+
		"\u1c3c\7\u0127\2\2\u1c3c\u1c60\3\2\2\2\u1c3d\u1c5c\7\"\2\2\u1c3e\u1c40"+
		"\5\b\5\2\u1c3f\u1c3e\3\2\2\2\u1c40\u1c41\3\2\2\2\u1c41\u1c3f\3\2\2\2\u1c41"+
		"\u1c42\3\2\2\2\u1c42\u1c49\3\2\2\2\u1c43\u1c45\7\u018b\2\2\u1c44\u1c46"+
		"\5\b\5\2\u1c45\u1c44\3\2\2\2\u1c46\u1c47\3\2\2\2\u1c47\u1c45\3\2\2\2\u1c47"+
		"\u1c48\3\2\2\2\u1c48\u1c4a\3\2\2\2\u1c49\u1c43\3\2\2\2\u1c49\u1c4a\3\2"+
		"\2\2\u1c4a\u1c5a\3\2\2\2\u1c4b\u1c4d\7\u00e8\2\2\u1c4c\u1c4e\5\b\5\2\u1c4d"+
		"\u1c4c\3\2\2\2\u1c4e\u1c4f\3\2\2\2\u1c4f\u1c4d\3\2\2\2\u1c4f\u1c50\3\2"+
		"\2\2\u1c50\u1c51\3\2\2\2\u1c51\u1c53\7\u0102\2\2\u1c52\u1c54\5\b\5\2\u1c53"+
		"\u1c52\3\2\2\2\u1c54\u1c55\3\2\2\2\u1c55\u1c53\3\2\2\2\u1c55\u1c56\3\2"+
		"\2\2\u1c56\u1c57\3\2\2\2\u1c57\u1c58\7\u0126\2\2\u1c58\u1c5b\3\2\2\2\u1c59"+
		"\u1c5b\7\u0141\2\2\u1c5a\u1c4b\3\2\2\2\u1c5a\u1c59\3\2\2\2\u1c5b\u1c5d"+
		"\3\2\2\2\u1c5c\u1c3f\3\2\2\2\u1c5c\u1c5d\3\2\2\2\u1c5d\u1c60\3\2\2\2\u1c5e"+
		"\u1c60\7\u00a2\2\2\u1c5f\u1c1b\3\2\2\2\u1c5f\u1c3d\3\2\2\2\u1c5f\u1c5e"+
		"\3\2\2\2\u1c60\u0229\3\2\2\2\u1c61\u1c63\7?\2\2\u1c62\u1c64\5\b\5\2\u1c63"+
		"\u1c62\3\2\2\2\u1c64\u1c65\3\2\2\2\u1c65\u1c63\3\2\2\2\u1c65\u1c66\3\2"+
		"\2\2\u1c66\u1c6d\3\2\2\2\u1c67\u1c69\7\u00d6\2\2\u1c68\u1c6a\5\b\5\2\u1c69"+
		"\u1c68\3\2\2\2\u1c6a\u1c6b\3\2\2\2\u1c6b\u1c69\3\2\2\2\u1c6b\u1c6c\3\2"+
		"\2\2\u1c6c\u1c6e\3\2\2\2\u1c6d\u1c67\3\2\2\2\u1c6d\u1c6e\3\2\2\2\u1c6e"+
		"\u1c6f\3\2\2\2\u1c6f\u1c70\5\u01c4\u00e3\2\u1c70\u022b\3\2\2\2\u1c71\u1c73"+
		"\7/\2\2\u1c72\u1c74\5\b\5\2\u1c73\u1c72\3\2\2\2\u1c74\u1c75\3\2\2\2\u1c75"+
		"\u1c73\3\2\2\2\u1c75\u1c76\3\2\2\2\u1c76\u1c7d\3\2\2\2\u1c77\u1c79\7U"+
		"\2\2\u1c78\u1c7a\5\b\5\2\u1c79\u1c78\3\2\2\2\u1c7a\u1c7b\3\2\2\2\u1c7b"+
		"\u1c79\3\2\2\2\u1c7b\u1c7c\3\2\2\2\u1c7c\u1c7e\3\2\2\2\u1c7d\u1c77\3\2"+
		"\2\2\u1c7d\u1c7e\3\2\2\2\u1c7e\u1c8b\3\2\2\2\u1c7f\u1c81\5\u022e\u0118"+
		"\2\u1c80\u1c82\5\b\5\2\u1c81\u1c80\3\2\2\2\u1c82\u1c83\3\2\2\2\u1c83\u1c81"+
		"\3\2\2\2\u1c83\u1c84\3\2\2\2\u1c84\u1c85\3\2\2\2\u1c85\u1c87\7\u0175\2"+
		"\2\u1c86\u1c88\5\b\5\2\u1c87\u1c86\3\2\2\2\u1c88\u1c89\3\2\2\2\u1c89\u1c87"+
		"\3\2\2\2\u1c89\u1c8a\3\2\2\2\u1c8a\u1c8c\3\2\2\2\u1c8b\u1c7f\3\2\2\2\u1c8b"+
		"\u1c8c\3\2\2\2\u1c8c\u1c8d\3\2\2\2\u1c8d\u1c8f\5\u0230\u0119\2\u1c8e\u1c90"+
		"\5\b\5\2\u1c8f\u1c8e\3\2\2\2\u1c90\u1c91\3\2\2\2\u1c91\u1c8f\3\2\2\2\u1c91"+
		"\u1c92\3\2\2\2\u1c92\u1c93\3\2\2\2\u1c93\u1c94\t#\2\2\u1c94\u022d\3\2"+
		"\2\2\u1c95\u1c96\7\u01b6\2\2\u1c96\u022f\3\2\2\2\u1c97\u1c98\7\u01b6\2"+
		"\2\u1c98\u0231\3\2\2\2\u1c99\u1c9b\7\36\2\2\u1c9a\u1c9c\5\b\5\2\u1c9b"+
		"\u1c9a\3\2\2\2\u1c9c\u1c9d\3\2\2\2\u1c9d\u1c9b\3\2\2\2\u1c9d\u1c9e\3\2"+
		"\2\2\u1c9e\u1ca5\3\2\2\2\u1c9f\u1ca1\7\u0175\2\2\u1ca0\u1ca2\5\b\5\2\u1ca1"+
		"\u1ca0\3\2\2\2\u1ca2\u1ca3\3\2\2\2\u1ca3\u1ca1\3\2\2\2\u1ca3\u1ca4\3\2"+
		"\2\2\u1ca4\u1ca6\3\2\2\2\u1ca5\u1c9f\3\2\2\2\u1ca5\u1ca6\3\2\2\2\u1ca6"+
		"\u1ca7\3\2\2\2\u1ca7\u1ca8\5\u0234\u011b\2\u1ca8\u0233\3\2\2\2\u1ca9\u1cab"+
		"\t$\2\2\u1caa\u1cac\5\b\5\2\u1cab\u1caa\3\2\2\2\u1cac\u1cad\3\2\2\2\u1cad"+
		"\u1cab\3\2\2\2\u1cad\u1cae\3\2\2\2\u1cae\u1cb0\3\2\2\2\u1caf\u1ca9\3\2"+
		"\2\2\u1caf\u1cb0\3\2\2\2\u1cb0\u1cb1\3\2\2\2\u1cb1\u1cc5\5\u0236\u011c"+
		"\2\u1cb2\u1cb4\7\u00f4\2\2\u1cb3\u1cb5\5\b\5\2\u1cb4\u1cb3\3\2\2\2\u1cb5"+
		"\u1cb6\3\2\2\2\u1cb6\u1cb4\3\2\2\2\u1cb6\u1cb7\3\2\2\2\u1cb7\u1cb9\3\2"+
		"\2\2\u1cb8\u1cb2\3\2\2\2\u1cb8\u1cb9\3\2\2\2\u1cb9\u1cba\3\2\2\2\u1cba"+
		"\u1cc2\t\t\2\2\u1cbb\u1cbd\5\b\5\2\u1cbc\u1cbb\3\2\2\2\u1cbd\u1cbe\3\2"+
		"\2\2\u1cbe\u1cbc\3\2\2\2\u1cbe\u1cbf\3\2\2\2\u1cbf\u1cc0\3\2\2\2\u1cc0"+
		"\u1cc1\7\u00aa\2\2\u1cc1\u1cc3\3\2\2\2\u1cc2\u1cbc\3\2\2\2\u1cc2\u1cc3"+
		"\3\2\2\2\u1cc3\u1cc5\3\2\2\2\u1cc4\u1caf\3\2\2\2\u1cc4\u1cb8\3\2\2\2\u1cc5"+
		"\u0235\3\2\2\2\u1cc6\u1ccb\7\u01b5\2\2\u1cc7\u1ccb\5\u01ce\u00e8\2\u1cc8"+
		"\u1ccb\7w\2\2\u1cc9\u1ccb\7\u011a\2\2\u1cca\u1cc6\3\2\2\2\u1cca\u1cc7"+
		"\3\2\2\2\u1cca\u1cc8\3\2\2\2\u1cca\u1cc9\3\2\2\2\u1ccb\u0237\3\2\2\2\u1ccc"+
		"\u1ccd\7\u01b8\2\2\u1ccd\u0239\3\2\2\2\u1cce\u1cd2\7\u00d8\2\2\u1ccf\u1cd1"+
		"\5\b\5\2\u1cd0\u1ccf\3\2\2\2\u1cd1\u1cd4\3\2\2\2\u1cd2\u1cd0\3\2\2\2\u1cd2"+
		"\u1cd3\3\2\2\2\u1cd3\u1cd5\3\2\2\2\u1cd4\u1cd2\3\2\2\2\u1cd5\u1cd9\7\u01b2"+
		"\2\2\u1cd6\u1cd8\5\b\5\2\u1cd7\u1cd6\3\2\2\2\u1cd8\u1cdb\3\2\2\2\u1cd9"+
		"\u1cd7\3\2\2\2\u1cd9\u1cda\3\2\2\2\u1cda\u1d13\3\2\2\2\u1cdb\u1cd9\3\2"+
		"\2\2\u1cdc\u1ce0\5\u0254\u012b\2\u1cdd\u1cdf\5\b\5\2\u1cde\u1cdd\3\2\2"+
		"\2\u1cdf\u1ce2\3\2\2\2\u1ce0\u1cde\3\2\2\2\u1ce0\u1ce1\3\2\2\2\u1ce1\u1ce4"+
		"\3\2\2\2\u1ce2\u1ce0\3\2\2\2\u1ce3\u1cdc\3\2\2\2\u1ce4\u1ce7\3\2\2\2\u1ce5"+
		"\u1ce3\3\2\2\2\u1ce5\u1ce6\3\2\2\2\u1ce6\u1cf1\3\2\2\2\u1ce7\u1ce5\3\2"+
		"\2\2\u1ce8\u1cec\5\u0250\u0129\2\u1ce9\u1ceb\5\b\5\2\u1cea\u1ce9\3\2\2"+
		"\2\u1ceb\u1cee\3\2\2\2\u1cec\u1cea\3\2\2\2\u1cec\u1ced\3\2\2\2\u1ced\u1cf0"+
		"\3\2\2\2\u1cee\u1cec\3\2\2\2\u1cef\u1ce8\3\2\2\2\u1cf0\u1cf3\3\2\2\2\u1cf1"+
		"\u1cef\3\2\2\2\u1cf1\u1cf2\3\2\2\2\u1cf2\u1cfd\3\2\2\2\u1cf3\u1cf1\3\2"+
		"\2\2\u1cf4\u1cf8\5\u0244\u0123\2\u1cf5\u1cf7\5\b\5\2\u1cf6\u1cf5\3\2\2"+
		"\2\u1cf7\u1cfa\3\2\2\2\u1cf8\u1cf6\3\2\2\2\u1cf8\u1cf9\3\2\2\2\u1cf9\u1cfc"+
		"\3\2\2\2\u1cfa\u1cf8\3\2\2\2\u1cfb\u1cf4\3\2\2\2\u1cfc\u1cff\3\2\2\2\u1cfd"+
		"\u1cfb\3\2\2\2\u1cfd\u1cfe\3\2\2\2\u1cfe\u1d09\3\2\2\2\u1cff\u1cfd\3\2"+
		"\2\2\u1d00\u1d04\5\u023c\u011f\2\u1d01\u1d03\5\b\5\2\u1d02\u1d01\3\2\2"+
		"\2\u1d03\u1d06\3\2\2\2\u1d04\u1d02\3\2\2\2\u1d04\u1d05\3\2\2\2\u1d05\u1d08"+
		"\3\2\2\2\u1d06\u1d04\3\2\2\2\u1d07\u1d00\3\2\2\2\u1d08\u1d0b\3\2\2\2\u1d09"+
		"\u1d07\3\2\2\2\u1d09\u1d0a\3\2\2\2\u1d0a\u1d0c\3\2\2\2\u1d0b\u1d09\3\2"+
		"\2\2\u1d0c\u1d10\7\u01b2\2\2\u1d0d\u1d0f\5\b\5\2\u1d0e\u1d0d\3\2\2\2\u1d0f"+
		"\u1d12\3\2\2\2\u1d10\u1d0e\3\2\2\2\u1d10\u1d11\3\2\2\2\u1d11\u1d14\3\2"+
		"\2\2\u1d12\u1d10\3\2\2\2\u1d13\u1ce5\3\2\2\2\u1d13\u1d14\3\2\2\2\u1d14"+
		"\u023b\3\2\2\2\u1d15\u1d17\7\u00f4\2\2\u1d16\u1d18\5\b\5\2\u1d17\u1d16"+
		"\3\2\2\2\u1d18\u1d19\3\2\2\2\u1d19\u1d17\3\2\2\2\u1d19\u1d1a\3\2\2\2\u1d1a"+
		"\u1d1b\3\2\2\2\u1d1b\u1d1d\7\u00aa\2\2\u1d1c\u1d1e\5\b\5\2\u1d1d\u1d1c"+
		"\3\2\2\2\u1d1e\u1d1f\3\2\2\2\u1d1f\u1d1d\3\2\2\2\u1d1f\u1d20\3\2\2\2\u1d20"+
		"\u1d27\3\2\2\2\u1d21\u1d23\7\u016e\2\2\u1d22\u1d24\5\b\5\2\u1d23\u1d22"+
		"\3\2\2\2\u1d24\u1d25\3\2\2\2\u1d25\u1d23\3\2\2\2\u1d25\u1d26\3\2\2\2\u1d26"+
		"\u1d28\3\2\2\2\u1d27\u1d21\3\2\2\2\u1d27\u1d28\3\2\2\2\u1d28\u1d2f\3\2"+
		"\2\2\u1d29\u1d2b\7U\2\2\u1d2a\u1d2c\5\b\5\2\u1d2b\u1d2a\3\2\2\2\u1d2c"+
		"\u1d2d\3\2\2\2\u1d2d\u1d2b\3\2\2\2\u1d2d\u1d2e\3\2\2\2\u1d2e\u1d30\3\2"+
		"\2\2\u1d2f\u1d29\3\2\2\2\u1d2f\u1d30\3\2\2\2\u1d30\u1d38\3\2\2\2\u1d31"+
		"\u1d35\5\u023e\u0120\2\u1d32\u1d34\5\b\5\2\u1d33\u1d32\3\2\2\2\u1d34\u1d37"+
		"\3\2\2\2\u1d35\u1d33\3\2\2\2\u1d35\u1d36\3\2\2\2\u1d36\u1d39\3\2\2\2\u1d37"+
		"\u1d35\3\2\2\2\u1d38\u1d31\3\2\2\2\u1d39\u1d3a\3\2\2\2\u1d3a\u1d38\3\2"+
		"\2\2\u1d3a\u1d3b\3\2\2\2\u1d3b\u023d\3\2\2\2\u1d3c\u1d4a\5\u0240\u0121"+
		"\2\u1d3d\u1d3f\5\b\5\2\u1d3e\u1d3d\3\2\2\2\u1d3f\u1d40\3\2\2\2\u1d40\u1d3e"+
		"\3\2\2\2\u1d40\u1d41\3\2\2\2\u1d41\u1d42\3\2\2\2\u1d42\u1d44\7\u0117\2"+
		"\2\u1d43\u1d45\5\b\5\2\u1d44\u1d43\3\2\2\2\u1d45\u1d46\3\2\2\2\u1d46\u1d44"+
		"\3\2\2\2\u1d46\u1d47\3\2\2\2\u1d47\u1d48\3\2\2\2\u1d48\u1d49\5\u0242\u0122"+
		"\2\u1d49\u1d4b\3\2\2\2\u1d4a\u1d3e\3\2\2\2\u1d4a\u1d4b\3\2\2\2\u1d4b\u023f"+
		"\3\2\2\2\u1d4c\u1d4d\7\u01b8\2\2\u1d4d\u0241\3\2\2\2\u1d4e\u1d4f\7\u01b6"+
		"\2\2\u1d4f\u0243\3\2\2\2\u1d50\u1d52\7\u0136\2\2\u1d51\u1d53\5\b\5\2\u1d52"+
		"\u1d51\3\2\2\2\u1d53\u1d54\3\2\2\2\u1d54\u1d52\3\2\2\2\u1d54\u1d55\3\2"+
		"\2\2\u1d55\u1d62\3\2\2\2\u1d56\u1d58\7\u0102\2\2\u1d57\u1d59\5\b\5\2\u1d58"+
		"\u1d57\3\2\2\2\u1d59\u1d5a\3\2\2\2\u1d5a\u1d58\3\2\2\2\u1d5a\u1d5b\3\2"+
		"\2\2\u1d5b\u1d5c\3\2\2\2\u1d5c\u1d5e\5\u0238\u011d\2\u1d5d\u1d5f\5\b\5"+
		"\2\u1d5e\u1d5d\3\2\2\2\u1d5f\u1d60\3\2\2\2\u1d60\u1d5e\3\2\2\2\u1d60\u1d61"+
		"\3\2\2\2\u1d61\u1d63\3\2\2\2\u1d62\u1d56\3\2\2\2\u1d62\u1d63\3\2\2\2\u1d63"+
		"\u1d6a\3\2\2\2\u1d64\u1d66\7\u00a0\2\2\u1d65\u1d67\5\b\5\2\u1d66\u1d65"+
		"\3\2\2\2\u1d67\u1d68\3\2\2\2\u1d68\u1d66\3\2\2\2\u1d68\u1d69\3\2\2\2\u1d69"+
		"\u1d6b\3\2\2\2\u1d6a\u1d64\3\2\2\2\u1d6a\u1d6b\3\2\2\2\u1d6b\u1d6c\3\2"+
		"\2\2\u1d6c\u1d6d\5\u0246\u0124\2\u1d6d\u0245\3\2\2\2\u1d6e\u1d70\5\u024c"+
		"\u0127\2\u1d6f\u1d71\5\b\5\2\u1d70\u1d6f\3\2\2\2\u1d71\u1d72\3\2\2\2\u1d72"+
		"\u1d70\3\2\2\2\u1d72\u1d73\3\2\2\2\u1d73\u1d7a\3\2\2\2\u1d74\u1d76\7\u00ff"+
		"\2\2\u1d75\u1d77\5\b\5\2\u1d76\u1d75\3\2\2\2\u1d77\u1d78\3\2\2\2\u1d78"+
		"\u1d76\3\2\2\2\u1d78\u1d79\3\2\2\2\u1d79\u1d7b\3\2\2\2\u1d7a\u1d74\3\2"+
		"\2\2\u1d7a\u1d7b\3\2\2\2\u1d7b\u1d7c\3\2\2\2\u1d7c\u1d7d\5\u0238\u011d"+
		"\2\u1d7d\u1d88\3\2\2\2\u1d7e\u1d80\5\u0248\u0125\2\u1d7f\u1d81\5\b\5\2"+
		"\u1d80\u1d7f\3\2\2\2\u1d81\u1d82\3\2\2\2\u1d82\u1d80\3\2\2\2\u1d82\u1d83"+
		"\3\2\2\2\u1d83\u1d84\3\2\2\2\u1d84\u1d85\7<\2\2\u1d85\u1d88\3\2\2\2\u1d86"+
		"\u1d88\5\u024a\u0126\2\u1d87\u1d6e\3\2\2\2\u1d87\u1d7e\3\2\2\2\u1d87\u1d86"+
		"\3\2\2\2\u1d88\u0247\3\2\2\2\u1d89\u1d8a\7\u01b6\2\2\u1d8a\u0249\3\2\2"+
		"\2\u1d8b\u1d8c\7\u01b8\2\2\u1d8c\u024b\3\2\2\2\u1d8d\u1d8f\7\u0081\2\2"+
		"\u1d8e\u1d90\5\b\5\2\u1d8f\u1d8e\3\2\2\2\u1d90\u1d91\3\2\2\2\u1d91\u1d8f"+
		"\3\2\2\2\u1d91\u1d92\3\2\2\2\u1d92\u1d99\3\2\2\2\u1d93\u1d95\7\u00ff\2"+
		"\2\u1d94\u1d96\5\b\5\2\u1d95\u1d94\3\2\2\2\u1d96\u1d97\3\2\2\2\u1d97\u1d95"+
		"\3\2\2\2\u1d97\u1d98\3\2\2\2\u1d98\u1d9a\3\2\2\2\u1d99\u1d93\3\2\2\2\u1d99"+
		"\u1d9a\3\2\2\2\u1d9a\u1d9c\3\2\2\2\u1d9b\u1d8d\3\2\2\2\u1d9b\u1d9c\3\2"+
		"\2\2\u1d9c\u1d9d\3\2\2\2\u1d9d\u1da7\t\t\2\2\u1d9e\u1da0\5\u024e\u0128"+
		"\2\u1d9f\u1da1\5\b\5\2\u1da0\u1d9f\3\2\2\2\u1da1\u1da2\3\2\2\2\u1da2\u1da0"+
		"\3\2\2\2\u1da2\u1da3\3\2\2\2\u1da3\u1da4\3\2\2\2\u1da4\u1da5\7\u0127\2"+
		"\2\u1da5\u1da7\3\2\2\2\u1da6\u1d9b\3\2\2\2\u1da6\u1d9e\3\2\2\2\u1da7\u024d"+
		"\3\2\2\2\u1da8\u1da9\7\u01b6\2\2\u1da9\u024f\3\2\2\2\u1daa\u1dac\7\u0143"+
		"\2\2\u1dab\u1dad\5\b\5\2\u1dac\u1dab\3\2\2\2\u1dad\u1dae\3\2\2\2\u1dae"+
		"\u1dac\3\2\2\2\u1dae\u1daf\3\2\2\2\u1daf\u1db6\3\2\2\2\u1db0\u1db2\t%"+
		"\2\2\u1db1\u1db3\5\b\5\2\u1db2\u1db1\3\2\2\2\u1db3\u1db4\3\2\2\2\u1db4"+
		"\u1db2\3\2\2\2\u1db4\u1db5\3\2\2\2\u1db5\u1db7\3\2\2\2\u1db6\u1db0\3\2"+
		"\2\2\u1db6\u1db7\3\2\2\2\u1db7\u1dbe\3\2\2\2\u1db8\u1dba\7\27\2\2\u1db9"+
		"\u1dbb\5\b\5\2\u1dba\u1db9\3\2\2\2\u1dbb\u1dbc\3\2\2\2\u1dbc\u1dba\3\2"+
		"\2\2\u1dbc\u1dbd\3\2\2\2\u1dbd\u1dbf\3\2\2\2\u1dbe\u1db8\3\2\2\2\u1dbe"+
		"\u1dbf\3\2\2\2\u1dbf\u1dc6\3\2\2\2\u1dc0\u1dc2\7\u00b5\2\2\u1dc1\u1dc3"+
		"\5\b\5\2\u1dc2\u1dc1\3\2\2\2\u1dc3\u1dc4\3\2\2\2\u1dc4\u1dc2\3\2\2\2\u1dc4"+
		"\u1dc5\3\2\2\2\u1dc5\u1dc7\3\2\2\2\u1dc6\u1dc0\3\2\2\2\u1dc6\u1dc7\3\2"+
		"\2\2\u1dc7\u1dc8\3\2\2\2\u1dc8\u1dd0\5\u0252\u012a\2\u1dc9\u1dcb\5\b\5"+
		"\2\u1dca\u1dc9\3\2\2\2\u1dcb\u1dcc\3\2\2\2\u1dcc\u1dca\3\2\2\2\u1dcc\u1dcd"+
		"\3\2\2\2\u1dcd\u1dce\3\2\2\2\u1dce\u1dcf\5\u0252\u012a\2\u1dcf\u1dd1\3"+
		"\2\2\2\u1dd0\u1dca\3\2\2\2\u1dd1\u1dd2\3\2\2\2\u1dd2\u1dd0\3\2\2\2\u1dd2"+
		"\u1dd3\3\2\2\2\u1dd3\u0251\3\2\2\2\u1dd4\u1dd5\7\u01b8\2\2\u1dd5\u0253"+
		"\3\2\2\2\u1dd6\u1dd8\7\25\2\2\u1dd7\u1dd9\5\b\5\2\u1dd8\u1dd7\3\2\2\2"+
		"\u1dd9\u1dda\3\2\2\2\u1dda\u1dd8\3\2\2\2\u1dda\u1ddb\3\2\2\2\u1ddb\u1de2"+
		"\3\2\2\2\u1ddc\u1dde\5\u0256\u012c\2\u1ddd\u1ddf\5\b\5\2\u1dde\u1ddd\3"+
		"\2\2\2\u1ddf\u1de0\3\2\2\2\u1de0\u1dde\3\2\2\2\u1de0\u1de1\3\2\2\2\u1de1"+
		"\u1de3\3\2\2\2\u1de2\u1ddc\3\2\2\2\u1de3\u1de4\3\2\2\2\u1de4\u1de2\3\2"+
		"\2\2\u1de4\u1de5\3\2\2\2\u1de5\u1de6\3\2\2\2\u1de6\u1de8\7\u0102\2\2\u1de7"+
		"\u1de9\5\b\5\2\u1de8\u1de7\3\2\2\2\u1de9\u1dea\3\2\2\2\u1dea\u1de8\3\2"+
		"\2\2\u1dea\u1deb\3\2\2\2\u1deb\u1df3\3\2\2\2\u1dec\u1df0\5\u0238\u011d"+
		"\2\u1ded\u1def\5\b\5\2\u1dee\u1ded\3\2\2\2\u1def\u1df2\3\2\2\2\u1df0\u1dee"+
		"\3\2\2\2\u1df0\u1df1\3\2\2\2\u1df1\u1df4\3\2\2\2\u1df2\u1df0\3\2\2\2\u1df3"+
		"\u1dec\3\2\2\2\u1df4\u1df5\3\2\2\2\u1df5\u1df3\3\2\2\2\u1df5\u1df6\3\2"+
		"\2\2\u1df6\u0255\3\2\2\2\u1df7\u1e1d\7p\2\2\u1df8\u1dfa\7\u00a5\2\2\u1df9"+
		"\u1dfb\5\b\5\2\u1dfa\u1df9\3\2\2\2\u1dfb\u1dfc\3\2\2\2\u1dfc\u1dfa\3\2"+
		"\2\2\u1dfc\u1dfd\3\2\2\2\u1dfd\u1dfe\3\2\2\2\u1dfe\u1dff\5\u025c\u012f"+
		"\2\u1dff\u1e1d\3\2\2\2\u1e00\u1e1d\7\u00ae\2\2\u1e01\u1e1d\7\u00e9\2\2"+
		"\u1e02\u1e1d\7\u00ee\2\2\u1e03\u1e05\t&\2\2\u1e04\u1e06\5\b\5\2\u1e05"+
		"\u1e04\3\2\2\2\u1e06\u1e07\3\2\2\2\u1e07\u1e05\3\2\2\2\u1e07\u1e08\3\2"+
		"\2\2\u1e08\u1e0a\3\2\2\2\u1e09\u1e03\3\2\2\2\u1e09\u1e0a\3\2\2\2\u1e0a"+
		"\u1e0b\3\2\2\2\u1e0b\u1e0d\7\u0119\2\2\u1e0c\u1e0e\5\b\5\2\u1e0d\u1e0c"+
		"\3\2\2\2\u1e0e\u1e0f\3\2\2\2\u1e0f\u1e0d\3\2\2\2\u1e0f\u1e10\3\2\2\2\u1e10"+
		"\u1e11\3\2\2\2\u1e11\u1e12\5\u025a\u012e\2\u1e12\u1e1d\3\2\2\2\u1e13\u1e1d"+
		"\7\u011b\2\2\u1e14\u1e16\7\u018a\2\2\u1e15\u1e17\5\b\5\2\u1e16\u1e15\3"+
		"\2\2\2\u1e17\u1e18\3\2\2\2\u1e18\u1e16\3\2\2\2\u1e18\u1e19\3\2\2\2\u1e19"+
		"\u1e1a\3\2\2\2\u1e1a\u1e1b\5\u0258\u012d\2\u1e1b\u1e1d\3\2\2\2\u1e1c\u1df7"+
		"\3\2\2\2\u1e1c\u1df8\3\2\2\2\u1e1c\u1e00\3\2\2\2\u1e1c\u1e01\3\2\2\2\u1e1c"+
		"\u1e02\3\2\2\2\u1e1c\u1e09\3\2\2\2\u1e1c\u1e13\3\2\2\2\u1e1c\u1e14\3\2"+
		"\2\2\u1e1d\u0257\3\2\2\2\u1e1e\u1e1f\7\u01b6\2\2\u1e1f\u0259\3\2\2\2\u1e20"+
		"\u1e21\7\u01b6\2\2\u1e21\u025b\3\2\2\2\u1e22\u1e23\7\u01b6\2\2\u1e23\u025d"+
		"\3\2\2\2\u1e24\u1e25\b\u0130\1\2\u1e25\u1e29\7\u01ac\2\2\u1e26\u1e28\5"+
		"\n\6\2\u1e27\u1e26\3\2\2\2\u1e28\u1e2b\3\2\2\2\u1e29\u1e27\3\2\2\2\u1e29"+
		"\u1e2a\3\2\2\2\u1e2a\u1e2c\3\2\2\2\u1e2b\u1e29\3\2\2\2\u1e2c\u1e30\5\u025e"+
		"\u0130\2\u1e2d\u1e2f\5\n\6\2\u1e2e\u1e2d\3\2\2\2\u1e2f\u1e32\3\2\2\2\u1e30"+
		"\u1e2e\3\2\2\2\u1e30\u1e31\3\2\2\2\u1e31\u1e33\3\2\2\2\u1e32\u1e30\3\2"+
		"\2\2\u1e33\u1e34\7\u01ad\2\2\u1e34\u1e41\3\2\2\2\u1e35\u1e39\5\u0264\u0133"+
		"\2\u1e36\u1e38\5\n\6\2\u1e37\u1e36\3\2\2\2\u1e38\u1e3b\3\2\2\2\u1e39\u1e37"+
		"\3\2\2\2\u1e39\u1e3a\3\2\2\2\u1e3a\u1e3c\3\2\2\2\u1e3b\u1e39\3\2\2\2\u1e3c"+
		"\u1e3d\5\u025e\u0130\5\u1e3d\u1e41\3\2\2\2\u1e3e\u1e41\5\u027a\u013e\2"+
		"\u1e3f\u1e41\5\u0260\u0131\2\u1e40\u1e24\3\2\2\2\u1e40\u1e35\3\2\2\2\u1e40"+
		"\u1e3e\3\2\2\2\u1e40\u1e3f\3\2\2\2\u1e41\u1e54\3\2\2\2\u1e42\u1e46\f\6"+
		"\2\2\u1e43\u1e45\5\n\6\2\u1e44\u1e43\3\2\2\2\u1e45\u1e48\3\2\2\2\u1e46"+
		"\u1e44\3\2\2\2\u1e46\u1e47\3\2\2\2\u1e47\u1e49\3\2\2\2\u1e48\u1e46\3\2"+
		"\2\2\u1e49\u1e4d\5\u0262\u0132\2\u1e4a\u1e4c\5\n\6\2\u1e4b\u1e4a\3\2\2"+
		"\2\u1e4c\u1e4f\3\2\2\2\u1e4d\u1e4b\3\2\2\2\u1e4d\u1e4e\3\2\2\2\u1e4e\u1e50"+
		"\3\2\2\2\u1e4f\u1e4d\3\2\2\2\u1e50\u1e51\5\u025e\u0130\7\u1e51\u1e53\3"+
		"\2\2\2\u1e52\u1e42\3\2\2\2\u1e53\u1e56\3\2\2\2\u1e54\u1e52\3\2\2\2\u1e54"+
		"\u1e55\3\2\2\2\u1e55\u025f\3\2\2\2\u1e56\u1e54\3\2\2\2\u1e57\u1e5b\7\u01b6"+
		"\2\2\u1e58\u1e5b\7\u01b5\2\2\u1e59\u1e5b\5\6\4\2\u1e5a\u1e57\3\2\2\2\u1e5a"+
		"\u1e58\3\2\2\2\u1e5a\u1e59\3\2\2\2\u1e5b\u0261\3\2\2\2\u1e5c\u1e63\7\u01a0"+
		"\2\2\u1e5d\u1e63\7\u01a1\2\2\u1e5e\u1e63\7\u01a2\2\2\u1e5f\u1e63\7\u01a3"+
		"\2\2\u1e60\u1e61\7\u01a2\2\2\u1e61\u1e63\7\u01a2\2\2\u1e62\u1e5c\3\2\2"+
		"\2\u1e62\u1e5d\3\2\2\2\u1e62\u1e5e\3\2\2\2\u1e62\u1e5f\3\2\2\2\u1e62\u1e60"+
		"\3\2\2\2\u1e63\u0263\3\2\2\2\u1e64\u1e65\t\'\2\2\u1e65\u0265\3\2\2\2\u1e66"+
		"\u1e67\b\u0134\1\2\u1e67\u1e6b\7\u01ac\2\2\u1e68\u1e6a\5\n\6\2\u1e69\u1e68"+
		"\3\2\2\2\u1e6a\u1e6d\3\2\2\2\u1e6b\u1e69\3\2\2\2\u1e6b\u1e6c\3\2\2\2\u1e6c"+
		"\u1e6e\3\2\2\2\u1e6d\u1e6b\3\2\2\2\u1e6e\u1e72\5\u0266\u0134\2\u1e6f\u1e71"+
		"\5\n\6\2\u1e70\u1e6f\3\2\2\2\u1e71\u1e74\3\2\2\2\u1e72\u1e70\3\2\2\2\u1e72"+
		"\u1e73\3\2\2\2\u1e73\u1e75\3\2\2\2\u1e74\u1e72\3\2\2\2\u1e75\u1e76\7\u01ad"+
		"\2\2\u1e76\u1e84\3\2\2\2\u1e77\u1e7b\7\u00fa\2\2\u1e78\u1e7a\5\n\6\2\u1e79"+
		"\u1e78\3\2\2\2\u1e7a\u1e7d\3\2\2\2\u1e7b\u1e79\3\2\2\2\u1e7b\u1e7c\3\2"+
		"\2\2\u1e7c\u1e7e\3\2\2\2\u1e7d\u1e7b\3\2\2\2\u1e7e\u1e84\5\u0266\u0134"+
		"\7\u1e7f\u1e84\5\u0272\u013a\2\u1e80\u1e84\5\u026a\u0136\2\u1e81\u1e84"+
		"\5\u026e\u0138\2\u1e82\u1e84\5\u0268\u0135\2\u1e83\u1e66\3\2\2\2\u1e83"+
		"\u1e77\3\2\2\2\u1e83\u1e7f\3\2\2\2\u1e83\u1e80\3\2\2\2\u1e83\u1e81\3\2"+
		"\2\2\u1e83\u1e82\3\2\2\2\u1e84\u1e97\3\2\2\2\u1e85\u1e89\f\b\2\2\u1e86"+
		"\u1e88\5\n\6\2\u1e87\u1e86\3\2\2\2\u1e88\u1e8b\3\2\2\2\u1e89\u1e87\3\2"+
		"\2\2\u1e89\u1e8a\3\2\2\2\u1e8a\u1e8c\3\2\2\2\u1e8b\u1e89\3\2\2\2\u1e8c"+
		"\u1e90\5\u026c\u0137\2\u1e8d\u1e8f\5\n\6\2\u1e8e\u1e8d\3\2\2\2\u1e8f\u1e92"+
		"\3\2\2\2\u1e90\u1e8e\3\2\2\2\u1e90\u1e91\3\2\2\2\u1e91\u1e93\3\2\2\2\u1e92"+
		"\u1e90\3\2\2\2\u1e93\u1e94\5\u0266\u0134\t\u1e94\u1e96\3\2\2\2\u1e95\u1e85"+
		"\3\2\2\2\u1e96\u1e99\3\2\2\2\u1e97\u1e95\3\2\2\2\u1e97\u1e98\3\2\2\2\u1e98"+
		"\u0267\3\2\2\2\u1e99\u1e97\3\2\2\2\u1e9a\u1ea2\5\u01ce\u00e8\2\u1e9b\u1e9d"+
		"\5\n\6\2\u1e9c\u1e9b\3\2\2\2\u1e9d\u1e9e\3\2\2\2\u1e9e\u1e9c\3\2\2\2\u1e9e"+
		"\u1e9f\3\2\2\2\u1e9f\u1ea0\3\2\2\2\u1ea0\u1ea1\7\u00d6\2\2\u1ea1\u1ea3"+
		"\3\2\2\2\u1ea2\u1e9c\3\2\2\2\u1ea2\u1ea3\3\2\2\2\u1ea3\u1ea5\3\2\2\2\u1ea4"+
		"\u1ea6\5\n\6\2\u1ea5\u1ea4\3\2\2\2\u1ea6\u1ea7\3\2\2\2\u1ea7\u1ea5\3\2"+
		"\2\2\u1ea7\u1ea8\3\2\2\2\u1ea8\u1ea9\3\2\2\2\u1ea9\u1eaa\t(\2\2\u1eaa"+
		"\u0269\3\2\2\2\u1eab\u1eac\b\u0136\1\2\u1eac\u1eb0\5\u025e\u0130\2\u1ead"+
		"\u1eaf\5\n\6\2\u1eae\u1ead\3\2\2\2\u1eaf\u1eb2\3\2\2\2\u1eb0\u1eae\3\2"+
		"\2\2\u1eb0\u1eb1\3\2\2\2\u1eb1\u1eb3\3\2\2\2\u1eb2\u1eb0\3\2\2\2\u1eb3"+
		"\u1eb7\5\u0276\u013c\2\u1eb4\u1eb6\5\n\6\2\u1eb5\u1eb4\3\2\2\2\u1eb6\u1eb9"+
		"\3\2\2\2\u1eb7\u1eb5\3\2\2\2\u1eb7\u1eb8\3\2\2\2\u1eb8\u1eba\3\2\2\2\u1eb9"+
		"\u1eb7\3\2\2\2\u1eba\u1ebb\5\u025e\u0130\2\u1ebb\u1ebf\3\2\2\2\u1ebc\u1ebf"+
		"\5\u0272\u013a\2\u1ebd\u1ebf\5\u01ce\u00e8\2\u1ebe\u1eab\3\2\2\2\u1ebe"+
		"\u1ebc\3\2\2\2\u1ebe\u1ebd\3\2\2\2\u1ebf\u1ed8\3\2\2\2\u1ec0\u1ec2\f\3"+
		"\2\2\u1ec1\u1ec3\5\n\6\2\u1ec2\u1ec1\3\2\2\2\u1ec3\u1ec4\3\2\2\2\u1ec4"+
		"\u1ec2\3\2\2\2\u1ec4\u1ec5\3\2\2\2\u1ec5\u1ec6\3\2\2\2\u1ec6\u1eca\5\u026c"+
		"\u0137\2\u1ec7\u1ec9\5\n\6\2\u1ec8\u1ec7\3\2\2\2\u1ec9\u1ecc\3\2\2\2\u1eca"+
		"\u1ec8\3\2\2\2\u1eca\u1ecb\3\2\2\2\u1ecb\u1ecd\3\2\2\2\u1ecc\u1eca\3\2"+
		"\2\2\u1ecd\u1ed1\5\u0276\u013c\2\u1ece\u1ed0\5\n\6\2\u1ecf\u1ece\3\2\2"+
		"\2\u1ed0\u1ed3\3\2\2\2\u1ed1\u1ecf\3\2\2\2\u1ed1\u1ed2\3\2\2\2\u1ed2\u1ed4"+
		"\3\2\2\2\u1ed3\u1ed1\3\2\2\2\u1ed4\u1ed5\5\u025e\u0130\2\u1ed5\u1ed7\3"+
		"\2\2\2\u1ed6\u1ec0\3\2\2\2\u1ed7\u1eda\3\2\2\2\u1ed8\u1ed6\3\2\2\2\u1ed8"+
		"\u1ed9\3\2\2\2\u1ed9\u026b\3\2\2\2\u1eda\u1ed8\3\2\2\2\u1edb\u1edc\t)"+
		"\2\2\u1edc\u026d\3\2\2\2\u1edd\u1ee5\5\u025e\u0130\2\u1ede\u1ee0\5\n\6"+
		"\2\u1edf\u1ede\3\2\2\2\u1ee0\u1ee1\3\2\2\2\u1ee1\u1edf\3\2\2\2\u1ee1\u1ee2"+
		"\3\2\2\2\u1ee2\u1ee3\3\2\2\2\u1ee3\u1ee4\7\u00d6\2\2\u1ee4\u1ee6\3\2\2"+
		"\2\u1ee5\u1edf\3\2\2\2\u1ee5\u1ee6\3\2\2\2\u1ee6\u1eee\3\2\2\2\u1ee7\u1ee9"+
		"\5\n\6\2\u1ee8\u1ee7\3\2\2\2\u1ee9\u1eea\3\2\2\2\u1eea\u1ee8\3\2\2\2\u1eea"+
		"\u1eeb\3\2\2\2\u1eeb\u1eec\3\2\2\2\u1eec\u1eed\7\u00fa\2\2\u1eed\u1eef"+
		"\3\2\2\2\u1eee\u1ee8\3\2\2\2\u1eee\u1eef\3\2\2\2\u1eef\u1ef1\3\2\2\2\u1ef0"+
		"\u1ef2\5\n\6\2\u1ef1\u1ef0\3\2\2\2\u1ef2\u1ef3\3\2\2\2\u1ef3\u1ef1\3\2"+
		"\2\2\u1ef3\u1ef4\3\2\2\2\u1ef4\u1ef5\3\2\2\2\u1ef5\u1ef6\5\u0270\u0139"+
		"\2\u1ef6\u026f\3\2\2\2\u1ef7\u1ef8\t*\2\2\u1ef8\u0271\3\2\2\2\u1ef9\u1f01"+
		"\5\u027a\u013e\2\u1efa\u1efc\5\n\6\2\u1efb\u1efa\3\2\2\2\u1efc\u1efd\3"+
		"\2\2\2\u1efd\u1efb\3\2\2\2\u1efd\u1efe\3\2\2\2\u1efe\u1eff\3\2\2\2\u1eff"+
		"\u1f00\7\u00d6\2\2\u1f00\u1f02\3\2\2\2\u1f01\u1efb\3\2\2\2\u1f01\u1f02"+
		"\3\2\2\2\u1f02\u1f0a\3\2\2\2\u1f03\u1f05\5\n\6\2\u1f04\u1f03\3\2\2\2\u1f05"+
		"\u1f06\3\2\2\2\u1f06\u1f04\3\2\2\2\u1f06\u1f07\3\2\2\2\u1f07\u1f08\3\2"+
		"\2\2\u1f08\u1f09\7\u00fa\2\2\u1f09\u1f0b\3\2\2\2\u1f0a\u1f04\3\2\2\2\u1f0a"+
		"\u1f0b\3\2\2\2\u1f0b\u1f0d\3\2\2\2\u1f0c\u1f0e\5\n\6\2\u1f0d\u1f0c\3\2"+
		"\2\2\u1f0e\u1f0f\3\2\2\2\u1f0f\u1f0d\3\2\2\2\u1f0f\u1f10\3\2\2\2\u1f10"+
		"\u1f11\3\2\2\2\u1f11\u1f12\5\u0274\u013b\2\u1f12\u0273\3\2\2\2\u1f13\u1f14"+
		"\t+\2\2\u1f14\u0275\3\2\2\2\u1f15\u1f19\7\u00d6\2\2\u1f16\u1f18\5\n\6"+
		"\2\u1f17\u1f16\3\2\2\2\u1f18\u1f1b\3\2\2\2\u1f19\u1f17\3\2\2\2\u1f19\u1f1a"+
		"\3\2\2\2\u1f1a\u1f1d\3\2\2\2\u1f1b\u1f19\3\2\2\2\u1f1c\u1f15\3\2\2\2\u1f1c"+
		"\u1f1d\3\2\2\2\u1f1d\u1fa5\3\2\2\2\u1f1e\u1f22\7\u00fa\2\2\u1f1f\u1f21"+
		"\5\n\6\2\u1f20\u1f1f\3\2\2\2\u1f21\u1f24\3\2\2\2\u1f22\u1f20\3\2\2\2\u1f22"+
		"\u1f23\3\2\2\2\u1f23\u1f26\3\2\2\2\u1f24\u1f22\3\2\2\2\u1f25\u1f1e\3\2"+
		"\2\2\u1f25\u1f26\3\2\2\2\u1f26\u1f63\3\2\2\2\u1f27\u1f2f\7\u00be\2\2\u1f28"+
		"\u1f2a\5\n\6\2\u1f29\u1f28\3\2\2\2\u1f2a\u1f2b\3\2\2\2\u1f2b\u1f29\3\2"+
		"\2\2\u1f2b\u1f2c\3\2\2\2\u1f2c\u1f2d\3\2\2\2\u1f2d\u1f2e\7\u0170\2\2\u1f2e"+
		"\u1f30\3\2\2\2\u1f2f\u1f29\3\2\2\2\u1f2f\u1f30\3\2\2\2\u1f30\u1f64\3\2"+
		"\2\2\u1f31\u1f39\7\u01ab\2\2\u1f32\u1f34\5\n\6\2\u1f33\u1f32\3\2\2\2\u1f34"+
		"\u1f35\3\2\2\2\u1f35\u1f33\3\2\2\2\u1f35\u1f36\3\2\2\2\u1f36\u1f37\3\2"+
		"\2\2\u1f37\u1f38\7\u0170\2\2\u1f38\u1f3a\3\2\2\2\u1f39\u1f33\3\2\2\2\u1f39"+
		"\u1f3a\3\2\2\2\u1f3a\u1f64\3\2\2\2\u1f3b\u1f43\7\u00e0\2\2\u1f3c\u1f3e"+
		"\5\n\6\2\u1f3d\u1f3c\3\2\2\2\u1f3e\u1f3f\3\2\2\2\u1f3f\u1f3d\3\2\2\2\u1f3f"+
		"\u1f40\3\2\2\2\u1f40\u1f41\3\2\2\2\u1f41\u1f42\7\u0170\2\2\u1f42\u1f44"+
		"\3\2\2\2\u1f43\u1f3d\3\2\2\2\u1f43\u1f44\3\2\2\2\u1f44\u1f64\3\2\2\2\u1f45"+
		"\u1f4d\7\u01a8\2\2\u1f46\u1f48\5\n\6\2\u1f47\u1f46\3\2\2\2\u1f48\u1f49"+
		"\3\2\2\2\u1f49\u1f47\3\2\2\2\u1f49\u1f4a\3\2\2\2\u1f4a\u1f4b\3\2\2\2\u1f4b"+
		"\u1f4c\7\u0170\2\2\u1f4c\u1f4e\3\2\2\2\u1f4d\u1f47\3\2\2\2\u1f4d\u1f4e"+
		"\3\2\2\2\u1f4e\u1f64\3\2\2\2\u1f4f\u1f57\7\u009c\2\2\u1f50\u1f52\5\n\6"+
		"\2\u1f51\u1f50\3\2\2\2\u1f52\u1f53\3\2\2\2\u1f53\u1f51\3\2\2\2\u1f53\u1f54"+
		"\3\2\2\2\u1f54\u1f55\3\2\2\2\u1f55\u1f56\7\u0175\2\2\u1f56\u1f58\3\2\2"+
		"\2\u1f57\u1f51\3\2\2\2\u1f57\u1f58\3\2\2\2\u1f58\u1f64\3\2\2\2\u1f59\u1f61"+
		"\7\u01a7\2\2\u1f5a\u1f5c\5\n\6\2\u1f5b\u1f5a\3\2\2\2\u1f5c\u1f5d\3\2\2"+
		"\2\u1f5d\u1f5b\3\2\2\2\u1f5d\u1f5e\3\2\2\2\u1f5e\u1f5f\3\2\2\2\u1f5f\u1f60"+
		"\7\u0175\2\2\u1f60\u1f62\3\2\2\2\u1f61\u1f5b\3\2\2\2\u1f61\u1f62\3\2\2"+
		"\2\u1f62\u1f64\3\2\2\2\u1f63\u1f27\3\2\2\2\u1f63\u1f31\3\2\2\2\u1f63\u1f3b"+
		"\3\2\2\2\u1f63\u1f45\3\2\2\2\u1f63\u1f4f\3\2\2\2\u1f63\u1f59\3\2\2\2\u1f64"+
		"\u1fa6\3\2\2\2\u1f65\u1f6d\7\u00be\2\2\u1f66\u1f68\5\n\6\2\u1f67\u1f66"+
		"\3\2\2\2\u1f68\u1f69\3\2\2\2\u1f69\u1f67\3\2\2\2\u1f69\u1f6a\3\2\2\2\u1f6a"+
		"\u1f6b\3\2\2\2\u1f6b\u1f6c\7\u0170\2\2\u1f6c\u1f6e\3\2\2\2\u1f6d\u1f67"+
		"\3\2\2\2\u1f6d\u1f6e\3\2\2\2\u1f6e\u1f70\3\2\2\2\u1f6f\u1f71\5\n\6\2\u1f70"+
		"\u1f6f\3\2\2\2\u1f71\u1f72\3\2\2\2\u1f72\u1f70\3\2\2\2\u1f72\u1f73\3\2"+
		"\2\2\u1f73\u1f74\3\2\2\2\u1f74\u1f76\7\u0106\2\2\u1f75\u1f77\5\n\6\2\u1f76"+
		"\u1f75\3\2\2\2\u1f77\u1f78\3\2\2\2\u1f78\u1f76\3\2\2\2\u1f78\u1f79\3\2"+
		"\2\2\u1f79\u1f7a\3\2\2\2\u1f7a\u1f82\7\u009c\2\2\u1f7b\u1f7d\5\n\6\2\u1f7c"+
		"\u1f7b\3\2\2\2\u1f7d\u1f7e\3\2\2\2\u1f7e\u1f7c\3\2\2\2\u1f7e\u1f7f\3\2"+
		"\2\2\u1f7f\u1f80\3\2\2\2\u1f80\u1f81\7\u0175\2\2\u1f81\u1f83\3\2\2\2\u1f82"+
		"\u1f7c\3\2\2\2\u1f82\u1f83\3\2\2\2\u1f83\u1fa6\3\2\2\2\u1f84\u1fa6\7\u01aa"+
		"\2\2\u1f85\u1f8d\7\u00e0\2\2\u1f86\u1f88\5\n\6\2\u1f87\u1f86\3\2\2\2\u1f88"+
		"\u1f89\3\2\2\2\u1f89\u1f87\3\2\2\2\u1f89\u1f8a\3\2\2\2\u1f8a\u1f8b\3\2"+
		"\2\2\u1f8b\u1f8c\7\u0170\2\2\u1f8c\u1f8e\3\2\2\2\u1f8d\u1f87\3\2\2\2\u1f8d"+
		"\u1f8e\3\2\2\2\u1f8e\u1f90\3\2\2\2\u1f8f\u1f91\5\n\6\2\u1f90\u1f8f\3\2"+
		"\2\2\u1f91\u1f92\3\2\2\2\u1f92\u1f90\3\2\2\2\u1f92\u1f93\3\2\2\2\u1f93"+
		"\u1f94\3\2\2\2\u1f94\u1f96\7\u0106\2\2\u1f95\u1f97\5\n\6\2\u1f96\u1f95"+
		"\3\2\2\2\u1f97\u1f98\3\2\2\2\u1f98\u1f96\3\2\2\2\u1f98\u1f99\3\2\2\2\u1f99"+
		"\u1f9a\3\2\2\2\u1f9a\u1fa2\7\u009c\2\2\u1f9b\u1f9d\5\n\6\2\u1f9c\u1f9b"+
		"\3\2\2\2\u1f9d\u1f9e\3\2\2\2\u1f9e\u1f9c\3\2\2\2\u1f9e\u1f9f\3\2\2\2\u1f9f"+
		"\u1fa0\3\2\2\2\u1fa0\u1fa1\7\u0175\2\2\u1fa1\u1fa3\3\2\2\2\u1fa2\u1f9c"+
		"\3\2\2\2\u1fa2\u1fa3\3\2\2\2\u1fa3\u1fa6\3\2\2\2\u1fa4\u1fa6\7\u01a9\2"+
		"\2\u1fa5\u1f25\3\2\2\2\u1fa5\u1f65\3\2\2\2\u1fa5\u1f84\3\2\2\2\u1fa5\u1f85"+
		"\3\2\2\2\u1fa5\u1fa4\3\2\2\2\u1fa6\u0277\3\2\2\2\u1fa7\u1faf\5\u01ce\u00e8"+
		"\2\u1fa8\u1faa\5\n\6\2\u1fa9\u1fa8\3\2\2\2\u1faa\u1fad\3\2\2\2\u1fab\u1fa9"+
		"\3\2\2\2\u1fab\u1fac\3\2\2\2\u1fac\u1fae\3\2\2\2\u1fad\u1fab\3\2\2\2\u1fae"+
		"\u1fb0\5\u027e\u0140\2\u1faf\u1fab\3\2\2\2\u1faf\u1fb0\3\2\2\2\u1fb0\u1fb8"+
		"\3\2\2\2\u1fb1\u1fb3\5\n\6\2\u1fb2\u1fb1\3\2\2\2\u1fb3\u1fb6\3\2\2\2\u1fb4"+
		"\u1fb2\3\2\2\2\u1fb4\u1fb5\3\2\2\2\u1fb5\u1fb7\3\2\2\2\u1fb6\u1fb4\3\2"+
		"\2\2\u1fb7\u1fb9\5\u0280\u0141\2\u1fb8\u1fb4\3\2\2\2\u1fb8\u1fb9\3\2\2"+
		"\2\u1fb9\u0279\3\2\2\2\u1fba\u1fd6\5\u0278\u013d\2\u1fbb\u1fbf\7\u00b9"+
		"\2\2\u1fbc\u1fbe\5\n\6\2\u1fbd\u1fbc\3\2\2\2\u1fbe\u1fc1\3\2\2\2\u1fbf"+
		"\u1fbd\3\2\2\2\u1fbf\u1fc0\3\2\2\2\u1fc0\u1fc2\3\2\2\2\u1fc1\u1fbf\3\2"+
		"\2\2\u1fc2\u1fca\5\u0286\u0144\2\u1fc3\u1fc5\5\n\6\2\u1fc4\u1fc3\3\2\2"+
		"\2\u1fc5\u1fc8\3\2\2\2\u1fc6\u1fc4\3\2\2\2\u1fc6\u1fc7\3\2\2\2\u1fc7\u1fc9"+
		"\3\2\2\2\u1fc8\u1fc6\3\2\2\2\u1fc9\u1fcb\5\u027c\u013f\2\u1fca\u1fc6\3"+
		"\2\2\2\u1fca\u1fcb\3\2\2\2\u1fcb\u1fd3\3\2\2\2\u1fcc\u1fce\5\n\6\2\u1fcd"+
		"\u1fcc\3\2\2\2\u1fce\u1fd1\3\2\2\2\u1fcf\u1fcd\3\2\2\2\u1fcf\u1fd0\3\2"+
		"\2\2\u1fd0\u1fd2\3\2\2\2\u1fd1\u1fcf\3\2\2\2\u1fd2\u1fd4\5\u0280\u0141"+
		"\2\u1fd3\u1fcf\3\2\2\2\u1fd3\u1fd4\3\2\2\2\u1fd4\u1fd6\3\2\2\2\u1fd5\u1fba"+
		"\3\2\2\2\u1fd5\u1fbb\3\2\2\2\u1fd6\u027b\3\2\2\2\u1fd7\u1fd8\5\u027e\u0140"+
		"\2\u1fd8\u027d\3\2\2\2\u1fd9\u1fdd\7\u01ac\2\2\u1fda\u1fdc\5\n\6\2\u1fdb"+
		"\u1fda\3\2\2\2\u1fdc\u1fdf\3\2\2\2\u1fdd\u1fdb\3\2\2\2\u1fdd\u1fde\3\2"+
		"\2\2\u1fde\u1fe2\3\2\2\2\u1fdf\u1fdd\3\2\2\2\u1fe0\u1fe3\5\u025e\u0130"+
		"\2\u1fe1\u1fe3\7\13\2\2\u1fe2\u1fe0\3\2\2\2\u1fe2\u1fe1\3\2\2\2\u1fe3"+
		"\u1ff0\3\2\2\2\u1fe4\u1fe6\5\b\5\2\u1fe5\u1fe4\3\2\2\2\u1fe6\u1fe9\3\2"+
		"\2\2\u1fe7\u1fe5\3\2\2\2\u1fe7\u1fe8\3\2\2\2\u1fe8\u1fec\3\2\2\2\u1fe9"+
		"\u1fe7\3\2\2\2\u1fea\u1fed\5\u025e\u0130\2\u1feb\u1fed\7\13\2\2\u1fec"+
		"\u1fea\3\2\2\2\u1fec\u1feb\3\2\2\2\u1fed\u1fef\3\2\2\2\u1fee\u1fe7\3\2"+
		"\2\2\u1fef\u1ff2\3\2\2\2\u1ff0\u1fee\3\2\2\2\u1ff0\u1ff1\3\2\2\2\u1ff1"+
		"\u1ff6\3\2\2\2\u1ff2\u1ff0\3\2\2\2\u1ff3\u1ff5\5\n\6\2\u1ff4\u1ff3\3\2"+
		"\2\2\u1ff5\u1ff8\3\2\2\2\u1ff6\u1ff4\3\2\2\2\u1ff6\u1ff7\3\2\2\2\u1ff7"+
		"\u1ff9\3\2\2\2\u1ff8\u1ff6\3\2\2\2\u1ff9\u1ffa\7\u01ad\2\2\u1ffa\u027f"+
		"\3\2\2\2\u1ffb\u1fff\7\u01ac\2\2\u1ffc\u1ffe\5\n\6\2\u1ffd\u1ffc\3\2\2"+
		"\2\u1ffe\u2001\3\2\2\2\u1fff\u1ffd\3\2\2\2\u1fff\u2000\3\2\2\2\u2000\u2002"+
		"\3\2\2\2\u2001\u1fff\3\2\2\2\u2002\u2006\5\u0282\u0142\2\u2003\u2005\5"+
		"\n\6\2\u2004\u2003\3\2\2\2\u2005\u2008\3\2\2\2\u2006\u2004\3\2\2\2\u2006"+
		"\u2007\3\2\2\2\u2007\u2009\3\2\2\2\u2008\u2006\3\2\2\2\u2009\u2011\7\u01a6"+
		"\2\2\u200a\u200c\5\n\6\2\u200b\u200a\3\2\2\2\u200c\u200f\3\2\2\2\u200d"+
		"\u200b\3\2\2\2\u200d\u200e\3\2\2\2\u200e\u2010\3\2\2\2\u200f\u200d\3\2"+
		"\2\2\u2010\u2012\5\u0284\u0143\2\u2011\u200d\3\2\2\2\u2011\u2012\3\2\2"+
		"\2\u2012\u2016\3\2\2\2\u2013\u2015\5\n\6\2\u2014\u2013\3\2\2\2\u2015\u2018"+
		"\3\2\2\2\u2016\u2014\3\2\2\2\u2016\u2017\3\2\2\2\u2017\u2019\3\2\2\2\u2018"+
		"\u2016\3\2\2\2\u2019\u201a\7\u01ad\2\2\u201a\u0281\3\2\2\2\u201b\u201c"+
		"\5\u025e\u0130\2\u201c\u0283\3\2\2\2\u201d\u201e\5\u025e\u0130\2\u201e"+
		"\u0285\3\2\2\2\u201f\u2020\7\u01b8\2\2\u2020\u0287\3\2\2\2\u057f\u028a"+
		"\u028c\u029c\u02a0\u02a8\u02ae\u02b4\u02bc\u02c0\u02c4\u02c7\u02ca\u02ce"+
		"\u02d4\u02d9\u02e0\u02e5\u02e8\u02ed\u02f1\u02f6\u02fd\u0302\u0309\u030f"+
		"\u0313\u0318\u031f\u0326\u032c\u0330\u0335\u0339\u033e\u0345\u034e\u0355"+
		"\u035c\u0361\u0367\u036d\u0374\u037c\u0382\u038b\u0392\u0399\u039e\u03a5"+
		"\u03aa\u03af\u03b6\u03b9\u03bf\u03c3\u03c8\u03ce\u03d2\u03d7\u03dd\u03e3"+
		"\u03e7\u03ec\u03f2\u03f9\u0400\u0406\u040a\u040f\u0416\u041f\u0425\u042c"+
		"\u0432\u0438\u043c\u0441\u0448\u0453\u0459\u045f\u0466\u046e\u0477\u047d"+
		"\u0492\u0498\u049e\u04a3\u04a9\u04b0\u04b6\u04bc\u04be\u04c4\u04ca\u04ce"+
		"\u04d6\u04dc\u04de\u04e4\u04ea\u04f2\u04f8\u04fc\u0501\u0508\u050c\u0511"+
		"\u0517\u051e\u0522\u0524\u0529\u052d\u0533\u053f\u0547\u054b\u0550\u0554"+
		"\u055a\u055e\u0563\u0569\u056f\u0576\u057a\u0582\u0588\u058c\u0591\u0597"+
		"\u059d\u05a3\u05a9\u05ad\u05b2\u05b8\u05be\u05c4\u05c9\u05cf\u05d5\u05d9"+
		"\u05de\u05e2\u05e9\u05eb\u05f1\u05f7\u05fb\u0600\u0606\u060a\u0610\u0616"+
		"\u061c\u0622\u0626\u062b\u0631\u0635\u0639\u063e\u0642\u0647\u064b\u0651"+
		"\u0657\u065d\u0663\u0667\u066c\u0672\u0676\u067b\u0681\u0687\u068b\u0690"+
		"\u0694\u069a\u06a0\u06a6\u06ac\u06b2\u06b7\u06bc\u06c0\u06c6\u06cc\u06d2"+
		"\u06d7\u06dc\u06e0\u06e6\u06ec\u06f2\u06f4\u06fa\u06fe\u0701\u0703\u0708"+
		"\u070c\u0712\u0718\u071e\u0724\u0728\u072d\u0731\u0735\u073d\u0744\u0748"+
		"\u074e\u0755\u0759\u075f\u0761\u0768\u0770\u0772\u0778\u077c\u077e\u0787"+
		"\u078d\u078f\u0795\u0799\u079b\u07a0\u07a8\u07aa\u07b3\u07b5\u07bd\u07bf"+
		"\u07c6\u07c8\u07ce\u07d2\u07d4\u07da\u07dc\u07e2\u07e6\u07eb\u07f3\u07f5"+
		"\u07fb\u07ff\u0804\u080e\u0814\u0818\u081d\u0821\u0826\u082a\u0832\u0838"+
		"\u083c\u0840\u0845\u084b\u0850\u0857\u085a\u0860\u0864\u0869\u086d\u0873"+
		"\u0879\u087d\u0881\u0887\u088d\u088f\u0896\u0898\u089e\u08a2\u08a4\u08aa"+
		"\u08ac\u08b2\u08b7\u08b9\u08bf\u08c5\u08cb\u08d1\u08d5\u08da\u08de\u08e3"+
		"\u08e7\u08ec\u08f0\u08f6\u08fe\u0904\u090b\u090d\u0913\u0919\u091c\u0922"+
		"\u0924\u092b\u092d\u0934\u0936\u093d\u093f\u0942\u0947\u094f\u0955\u095b"+
		"\u0961\u0967\u0969\u096f\u0979\u097f\u0984\u098a\u0990\u0994\u0998\u099e"+
		"\u09a4\u09aa\u09ae\u09b3\u09b9\u09be\u09c4\u09ca\u09ce\u09d2\u09d8\u09de"+
		"\u09e4\u09ea\u09f0\u09f4\u09f6\u09fb\u09ff\u0a04\u0a08\u0a0e\u0a16\u0a1c"+
		"\u0a22\u0a26\u0a2c\u0a32\u0a36\u0a38\u0a3e\u0a44\u0a48\u0a4e\u0a54\u0a58"+
		"\u0a5a\u0a60\u0a66\u0a6a\u0a70\u0a76\u0a7a\u0a7c\u0a82\u0a88\u0a8c\u0a92"+
		"\u0a98\u0a9c\u0a9e\u0aa4\u0aaa\u0ab0\u0ab2\u0ab8\u0abc\u0ac1\u0ac5\u0acd"+
		"\u0ad3\u0ad9\u0add\u0ae2\u0ae8\u0aec\u0af1\u0af5\u0afa\u0afe\u0b04\u0b0a"+
		"\u0b10\u0b18\u0b1e\u0b24\u0b29\u0b2d\u0b2f\u0b34\u0b38\u0b3e\u0b44\u0b46"+
		"\u0b4c\u0b52\u0b54\u0b5a\u0b60\u0b65\u0b69\u0b6b\u0b70\u0b74\u0b7a\u0b80"+
		"\u0b84\u0b89\u0b8d\u0b92\u0b96\u0b9c\u0b9e\u0ba4\u0ba8\u0bae\u0bb2\u0bb4"+
		"\u0bba\u0bc0\u0bc2\u0bc6\u0bcc\u0bd2\u0bd4\u0bd8\u0bde\u0be0\u0be6\u0bea"+
		"\u0bef\u0bf7\u0bf9\u0bff\u0c03\u0c08\u0c10\u0c16\u0c18\u0c1e\u0c22\u0c24"+
		"\u0c29\u0c31\u0c33\u0c36\u0c3f\u0c41\u0c48\u0c4c\u0c52\u0c54\u0c5c\u0c5e"+
		"\u0c64\u0c6c\u0c72\u0c74\u0c7c\u0c7e\u0c84\u0c88\u0c8d\u0c91\u0c9c\u0ca0"+
		"\u0ca2\u0ca8\u0cb0\u0cb2\u0cb9\u0cbb\u0cc1\u0cc9\u0ccb\u0cd2\u0cd4\u0cda"+
		"\u0cde\u0ce4\u0ceb\u0cf1\u0cf5\u0cf7\u0cfd\u0d01\u0d03\u0d09\u0d0d\u0d13"+
		"\u0d17\u0d1b\u0d25\u0d27\u0d2d\u0d31\u0d37\u0d39\u0d3f\u0d43\u0d49\u0d4b"+
		"\u0d51\u0d57\u0d5b\u0d61\u0d65\u0d6a\u0d6e\u0d74\u0d7a\u0d81\u0d88\u0d8b"+
		"\u0d91\u0d94\u0d9a\u0d9d\u0da3\u0da6\u0dac\u0daf\u0db5\u0dbb\u0dc2\u0dc9"+
		"\u0dcf\u0dd7\u0ddd\u0de0\u0de5\u0dea\u0df1\u0df7\u0dfe\u0e05\u0e0a\u0e11"+
		"\u0e17\u0e1e\u0e25\u0e2a\u0e31\u0e37\u0e3e\u0e45\u0e4b\u0e51\u0e56\u0e5d"+
		"\u0e63\u0e6a\u0e71\u0e76\u0e7d\u0e83\u0e8a\u0e8f\u0e98\u0e9e\u0ea5\u0eaa"+
		"\u0eb3\u0eb9\u0ec0\u0ec5\u0ece\u0ed0\u0ed7\u0ed9\u0ee7\u0eed\u0ef3\u0efa"+
		"\u0efe\u0f00\u0f05\u0f0b\u0f0f\u0f14\u0f1a\u0f25\u0f27\u0f2e\u0f30\u0f3b"+
		"\u0f3f\u0f45\u0f49\u0f4f\u0f55\u0f57\u0f5d\u0f63\u0f69\u0f6f\u0f73\u0f7d"+
		"\u0f81\u0f87\u0f8b\u0f8d\u0f92\u0f98\u0f9e\u0fa5\u0fa9\u0fb0\u0fb8\u0fbc"+
		"\u0fc2\u0fd0\u0fd6\u0fdc\u0fe2\u0fe6\u0fec\u0ff2\u0ff4\u0ffa\u1000\u1009"+
		"\u100f\u1011\u1017\u1019\u101f\u1025\u102e\u1036\u103c\u1042\u1048\u104e"+
		"\u1054\u1056\u105a\u1066\u106c\u1073\u1077\u107c\u1082\u108b\u1091\u1093"+
		"\u1099\u109b\u10a3\u10a9\u10af\u10b1\u10b9\u10bf\u10c1\u10c9\u10cf\u10d1"+
		"\u10d3\u10da\u10e0\u10e2\u10ea\u10f0\u10f2\u10f8\u10fa\u1102\u1106\u110c"+
		"\u1110\u1118\u111e\u1120\u1128\u112e\u1130\u1135\u113b\u113f\u1144\u1146"+
		"\u114c\u1152\u1156\u1158\u115e\u1164\u116a\u1170\u1174\u1179\u117f\u1184"+
		"\u1189\u1190\u1196\u1198\u119c\u11ac\u11b5\u11be\u11c3\u11c8\u11d2\u11d7"+
		"\u11dc\u11e4\u11ed\u11f2\u11fb\u1203\u1207\u120d\u1213\u1215\u121b\u121f"+
		"\u1225\u1229\u1231\u1233\u123a\u1242\u1246\u124c\u1250\u1252\u1257\u125d"+
		"\u1263\u126a\u1270\u1273\u1279\u127f\u1285\u1287\u128d\u1293\u1295\u1297"+
		"\u129d\u12a1\u12a6\u12ac\u12b0\u12b5\u12bb\u12c1\u12c5\u12ca\u12d0\u12d6"+
		"\u12da\u12df\u12e5\u12e9\u12eb\u12ff\u1303\u1308\u130a\u1313\u1317\u131d"+
		"\u1321\u1327\u132b\u1331\u1335\u134d\u1353\u1359\u135b\u1362\u136c\u1372"+
		"\u1376\u137c\u1380\u1382\u1387\u138d\u1393\u139c\u13a2\u13a4\u13aa\u13ae"+
		"\u13b3\u13b9\u13bb\u13c1\u13c7\u13c9\u13cd\u13d2\u13d8\u13da\u13e0\u13e2"+
		"\u13e8\u13ec\u13f1\u13f7\u13f9\u13ff\u1401\u1407\u140b\u140f\u1413\u1417"+
		"\u141b\u1421\u1427\u142b\u1431\u1435\u1437\u143d\u1443\u144c\u1452\u1458"+
		"\u145e\u1460\u1466\u146c\u1472\u1476\u147c\u1480\u1482\u1487\u148f\u1497"+
		"\u1499\u149f\u14a5\u14a7\u14ad\u14b4\u14b7\u14bd\u14bf\u14c5\u14cb\u14cd"+
		"\u14d3\u14d6\u14dc\u14de\u14e1\u14e7\u14eb\u14f0\u14f7\u14fa\u1500\u1506"+
		"\u1508\u150c\u150e\u151a\u151e\u1520\u1525\u152b\u1536\u153e\u1544\u1546"+
		"\u154e\u1554\u1556\u1561\u1567\u1569\u156b\u1576\u1582\u1588\u158a\u1590"+
		"\u1592\u1598\u159a\u15a2\u15a8\u15aa\u15b0\u15b2\u15b8\u15ba\u15c2\u15c8"+
		"\u15ca\u15d2\u15d8\u15da\u15e2\u15e6\u15ec\u15f3\u15f7\u15fa\u15fc\u1602"+
		"\u160a\u160e\u1614\u161c\u1624\u162a\u1631\u1637\u1642\u1648\u164f\u1656"+
		"\u165a\u165f\u1663\u1668\u1673\u1675\u167b\u167f\u1685\u1687\u168d\u1697"+
		"\u169c\u16a2\u16a9\u16b0\u16b7\u16be\u16c5\u16cc\u16d3\u16da\u16e1\u16e8"+
		"\u16ef\u16f6\u16fd\u1704\u170b\u1712\u1716\u171b\u171f\u1725\u172b\u172d"+
		"\u1733\u173c\u1742\u1749\u174d\u1750\u1756\u175c\u1763\u1767\u176c\u1770"+
		"\u1775\u1779\u177e\u1785\u178b\u1792\u1796\u1799\u179f\u17a6\u17ad\u17b1"+
		"\u17b6\u17bb\u17c3\u17c5\u17cb\u17d3\u17da\u17e1\u17e5\u17ea\u17ee\u17f3"+
		"\u17f7\u17fc\u1801\u1807\u180b\u1810\u1816\u1822\u1824\u182a\u182c\u1832"+
		"\u1836\u183b\u1845\u1849\u1853\u185a\u1861\u1866\u186a\u1870\u1876\u1878"+
		"\u1880\u1886\u1888\u1890\u1896\u1898\u18a5\u18ab\u18ad\u18b5\u18bb\u18bd"+
		"\u18c5\u18cb\u18d1\u18d3\u18d7\u18dd\u18e3\u18e9\u18f0\u18f6\u18f8\u18fe"+
		"\u1900\u1909\u190b\u1911\u1917\u191c\u1926\u192c\u1932\u1934\u193a\u193f"+
		"\u1947\u194d\u1951\u1957\u195d\u195f\u1964\u1969\u196c\u1972\u1976\u197c"+
		"\u197e\u1984\u1988\u198e\u1994\u199f\u19a5\u19ab\u19ad\u19ba\u19bf\u19c1"+
		"\u19c7\u19cd\u19d1\u19d7\u19dd\u19e3\u19e5\u19f1\u19f7\u19fe\u1a00\u1a06"+
		"\u1a08\u1a0e\u1a12\u1a18\u1a1c\u1a1e\u1a23\u1a2a\u1a30\u1a32\u1a38\u1a3a"+
		"\u1a42\u1a48\u1a4a\u1a50\u1a52\u1a6a\u1a71\u1a78\u1a7d\u1a84\u1a8a\u1a8c"+
		"\u1a92\u1a99\u1aa0\u1aa3\u1aa9\u1aac\u1ab2\u1ab5\u1abb\u1abe\u1ac4\u1ac7"+
		"\u1acd\u1ad0\u1ad6\u1ad9\u1adf\u1ae4\u1aeb\u1aee\u1af4\u1af7\u1aff\u1b01"+
		"\u1b07\u1b0d\u1b0f\u1b19\u1b1b\u1b21\u1b27\u1b29\u1b2f\u1b31\u1b37\u1b3d"+
		"\u1b3f\u1b43\u1b48\u1b4c\u1b53\u1b5a\u1b61\u1b67\u1b6a\u1b70\u1b76\u1b78"+
		"\u1b7e\u1b80\u1b82\u1b88\u1b8e\u1b94\u1b96\u1b9c\u1b9e\u1ba2\u1ba8\u1bae"+
		"\u1bb2\u1bba\u1bc0\u1bc6\u1bc8\u1bd0\u1bd6\u1bd8\u1bde\u1be0\u1bea\u1bf0"+
		"\u1bf2\u1bf4\u1bfb\u1c01\u1c07\u1c0d\u1c0f\u1c15\u1c17\u1c1f\u1c25\u1c27"+
		"\u1c2d\u1c33\u1c39\u1c41\u1c47\u1c49\u1c4f\u1c55\u1c5a\u1c5c\u1c5f\u1c65"+
		"\u1c6b\u1c6d\u1c75\u1c7b\u1c7d\u1c83\u1c89\u1c8b\u1c91\u1c9d\u1ca3\u1ca5"+
		"\u1cad\u1caf\u1cb6\u1cb8\u1cbe\u1cc2\u1cc4\u1cca\u1cd2\u1cd9\u1ce0\u1ce5"+
		"\u1cec\u1cf1\u1cf8\u1cfd\u1d04\u1d09\u1d10\u1d13\u1d19\u1d1f\u1d25\u1d27"+
		"\u1d2d\u1d2f\u1d35\u1d3a\u1d40\u1d46\u1d4a\u1d54\u1d5a\u1d60\u1d62\u1d68"+
		"\u1d6a\u1d72\u1d78\u1d7a\u1d82\u1d87\u1d91\u1d97\u1d99\u1d9b\u1da2\u1da6"+
		"\u1dae\u1db4\u1db6\u1dbc\u1dbe\u1dc4\u1dc6\u1dcc\u1dd2\u1dda\u1de0\u1de4"+
		"\u1dea\u1df0\u1df5\u1dfc\u1e07\u1e09\u1e0f\u1e18\u1e1c\u1e29\u1e30\u1e39"+
		"\u1e40\u1e46\u1e4d\u1e54\u1e5a\u1e62\u1e6b\u1e72\u1e7b\u1e83\u1e89\u1e90"+
		"\u1e97\u1e9e\u1ea2\u1ea7\u1eb0\u1eb7\u1ebe\u1ec4\u1eca\u1ed1\u1ed8\u1ee1"+
		"\u1ee5\u1eea\u1eee\u1ef3\u1efd\u1f01\u1f06\u1f0a\u1f0f\u1f19\u1f1c\u1f22"+
		"\u1f25\u1f2b\u1f2f\u1f35\u1f39\u1f3f\u1f43\u1f49\u1f4d\u1f53\u1f57\u1f5d"+
		"\u1f61\u1f63\u1f69\u1f6d\u1f72\u1f78\u1f7e\u1f82\u1f89\u1f8d\u1f92\u1f98"+
		"\u1f9e\u1fa2\u1fa5\u1fab\u1faf\u1fb4\u1fb8\u1fbf\u1fc6\u1fca\u1fcf\u1fd3"+
		"\u1fd5\u1fdd\u1fe2\u1fe7\u1fec\u1ff0\u1ff6\u1fff\u2006\u200d\u2011\u2016";
	public static final String _serializedATN = Utils.join(
		new String[] {
			_serializedATNSegment0,
			_serializedATNSegment1,
			_serializedATNSegment2,
			_serializedATNSegment3
		},
		""
	);
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}