// Generated from d:\vmssoftware.work\vms-ide\src\vms_cobol\parser\cobol.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.misc.*;
import org.antlr.v4.runtime.tree.*;
import java.util.List;
import java.util.Iterator;
import java.util.ArrayList;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class cobolParser extends Parser {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		DECLARATIVES_IN_A_AREA=1, END_IN_A_AREA=2, IDENTIFICATION_IN_A_AREA=3, 
		ACCEPT=4, ACCESS=5, ADD=6, ADVANCING=7, AFTER=8, ALL=9, ALPHA=10, ALPHABET=11, 
		ALPHABETIC=12, ALPHABETIC_LOWER=13, ALPHABETIC_UPPER=14, ALSO=15, ALTER=16, 
		ALTERNATE=17, AND=18, APPLY=19, ARE=20, AREA=21, AREAS=22, ARGUMENT_NUMBER=23, 
		ARGUMENT_VALUE=24, ARITHMETIC=25, ASCENDING=26, ASCII=27, ASSIGN=28, AT=29, 
		AUTHOR=30, AUTO=31, AUTOMATIC=32, AUTOTERMINATE=33, BACKGROUND_COLOR=34, 
		BEFORE=35, BELL=36, BINARY=37, BINARY_CHAR=38, BINARY_DOUBLE=39, BINARY_LONG=40, 
		BINARY_SHORT=41, BLANK=42, BLINK=43, BLINKING=44, BLOCK=45, BOLD=46, BOTTOM=47, 
		BY=48, C01=49, CALL=50, CANCEL=51, CARD_READER=52, CF=53, CH=54, CHARACTER=55, 
		CHARACTERS=56, CLASS=57, CLOCK_UNITS=58, CLOSE=59, CODE=60, CODE_SET=61, 
		COLLATING=62, COLUMN=63, COMMA=64, COMMON=65, COMP=66, COMPUTATIONAL=67, 
		COMPUTATIONAL_1=68, COMPUTATIONAL_2=69, COMPUTATIONAL_3=70, COMPUTATIONAL_4=71, 
		COMPUTATIONAL_5=72, COMPUTATIONAL_X=73, COMPUTE=74, COMP_1=75, COMP_2=76, 
		COMP_3=77, COMP_4=78, COMP_5=79, COMP_X=80, CONFIGURATION=81, CONSOLE=82, 
		CONTAINS=83, CONTENT=84, CONTIGUOUS=85, CONTIGUOUS_BEST_TRY=86, CONTINUE=87, 
		CONTROL=88, CONTROLS=89, CONVERSION=90, CONVERTING=91, COPY=92, CORR=93, 
		CORRESPONDING=94, CRT=95, CURRENCY=96, CURRENT=97, CURSOR=98, DATA=99, 
		DATE=100, DATE_COMPILED=101, DATE_WRITTEN=102, DAY=103, DAY_OF_WEEK=104, 
		DE=105, DEBUGGING=106, DECIMAL_POINT=107, DECLARATIVES=108, DEFAULT=109, 
		DEFERRED_WRITE=110, DELETE=111, DELIMITER=112, DEPENDING=113, DESCENDING=114, 
		DESCRIPTOR=115, DETAIL=116, DISK=117, DISPLAY=118, DIVIDE=119, DIVISION=120, 
		DOWN=121, DUPLICATES=122, DYNAMIC=123, EBCDIC=124, ECHO=125, EDITING=126, 
		END=127, END_ACCEPT=128, END_ADD=129, END_CALL=130, END_COMPUTE=131, END_DELETE=132, 
		END_DISPLAY=133, END_DIVIDE=134, END_EVALUATE=135, END_IF=136, END_MULTIPLY=137, 
		END_OF_PAGE=138, END_PERFORM=139, END_READ=140, END_RETURN=141, END_REWRITE=142, 
		END_SEARCH=143, END_START=144, END_STRING=145, END_SUBTRACT=146, END_UNSTRING=147, 
		END_WRITE=148, ENVIRONMENT=149, ENVIRONMENT_NAME=150, ENVIRONMENT_VALUE=151, 
		EOL=152, EOS=153, EQUAL=154, ERASE=155, ERROR=156, EVALUATE=157, EVERY=158, 
		EXCEPTION=159, EXCLUSIVE=160, EXIT=161, EXTEND=162, EXTENSION=163, EXTERNAL=164, 
		FAILURE=165, FALSE=166, FD=167, FILE=168, FILE_CONTROL=169, FILE_ID=170, 
		FILLER=171, FILL_SIZE=172, FINAL=173, FIRST=174, FLOAT_EXTENDED=175, FLOAT_LONG=176, 
		FLOAT_SHORT=177, FOOTING=178, FOR=179, FOREGROUND_COLOR=180, FROM=181, 
		FULL=182, FUNCTION=183, GENERATE=184, GIVING=185, GLOBAL=186, GO=187, 
		GREATER=188, GROUP=189, HEADING=190, HIGHLIGHT=191, HIGH_VALUE=192, HIGH_VALUES=193, 
		I64=194, ID=195, IDENT=196, IDENTIFICATION=197, IF=198, IN=199, INDEX=200, 
		INDEXED=201, INDICATE=202, INITIAL=203, INITIALIZE=204, INITIATE=205, 
		INPUT=206, INPUT_OUTPUT=207, INSPECT=208, INSTALLATION=209, INTO=210, 
		INVALID=211, IS=212, I_O=213, I_O_CONTROL=214, JUST=215, JUSTIFIED=216, 
		KEY=217, LABEL=218, LAST=219, LEADING=220, LEFT=221, LESS=222, LIMIT=223, 
		LIMITS=224, LINAGE=225, LINE=226, LINES=227, LINE_PRINTER=228, LINKAGE=229, 
		LOCK=230, LOCK_HOLDING=231, LOWLIGHT=232, LOW_VALUE=233, LOW_VALUES=234, 
		MANUAL=235, MASS_INSERT=236, MEMORY=237, MERGE=238, MODE=239, MODULES=240, 
		MOVE=241, MULTIPLE=242, MULTIPLY=243, NATIVE=244, NEGATIVE=245, NEXT=246, 
		NO=247, NOT=248, NUMBER=249, NUMERIC=250, OBJECT_COMPUTER=251, OCCURS=252, 
		OF=253, OFF=254, OMITTED=255, ON=256, OPEN=257, OPTIONAL=258, OPTIONS=259, 
		OR=260, ORGANIZATION=261, OUTPUT=262, OVERFLOW=263, PACKED_DECIMAL=264, 
		PADDING=265, PAGE=266, PAPER_TAPE_PUNCH=267, PAPER_TAPE_READER=268, PERFORM=269, 
		PF=270, PH=271, PIC=272, PICTURE=273, PLUS=274, POINTER=275, POINTER_64=276, 
		POSITION=277, POSITIVE=278, PREALLOCATION=279, PRINTER=280, PRINT_CONTROL=281, 
		PROCEDURE=282, PROCEED=283, PROGRAM=284, PROGRAM_ID=285, PROTECTED=286, 
		QUOTE=287, QUOTES=288, RANDOM=289, RD=290, READ=291, RECORD=292, RECORDS=293, 
		REDEFINES=294, REEL=295, REFERENCE=296, RELATIVE=297, RELEASE=298, REMAINDER=299, 
		REMOVAL=300, RENAMES=301, REPLACE=302, REPLACING=303, REPORT=304, REPORTING=305, 
		REPORTS=306, REQUIRED=307, RERUN=308, RESERVE=309, RESET=310, RETURN=311, 
		REVERSED=312, REVERSE_VIDEO=313, REWIND=314, REWRITE=315, RF=316, RH=317, 
		RIGHT=318, ROLLBACK=319, ROUNDED=320, SAME=321, SCREEN=322, SD=323, SEARCH=324, 
		SECTION=325, SECURE=326, SECURITY=327, SEGMENT_LIMIT=328, SELECT=329, 
		SEPARATE=330, SEQUENCE=331, SEQUENTIAL=332, SET=333, SIGN=334, SIGNED=335, 
		SIZE=336, SORT=337, SORT_MERGE=338, SOURCE=339, SOURCE_COMPUTER=340, SPACE=341, 
		SPACES=342, SPECIAL_NAMES=343, STANDARD=344, STANDARD_1=345, STANDARD_2=346, 
		START=347, STATUS=348, STOP=349, STRING=350, SUBTRACT=351, SUCCESS=352, 
		SUM=353, SUPPRESS=354, SWITCH=355, SYMBOL=356, SYMBOLIC=357, SYNC=358, 
		SYNCHRONIZED=359, SYSERR=360, SYSIN=361, SYSOUT=362, TALLYING=363, TAPE=364, 
		TERMINATE=365, THAN=366, THROUGH=367, THRU=368, TIME=369, TIMES=370, TO=371, 
		TOP=372, TRAILING=373, TRUE=374, TYPE=375, UNDERLINE=376, UNDERLINED=377, 
		UNIT=378, UNLOCK=379, UNSIGNED=380, UNSTRING=381, UP=382, UPON=383, USAGE=384, 
		USE=385, USING=386, VALUE=387, VALUES=388, VARYING=389, VAX=390, WHEN=391, 
		WINDOW=392, WITH=393, WORDS=394, WORKING_STORAGE=395, WRITE=396, YYYYDDD=397, 
		YYYYMMDD=398, ZERO=399, ZEROES=400, ZEROS=401, OTHER=402, ANY=403, THEN=404, 
		SENTENCE=405, ELSE=406, ALPHANUMERIC=407, NUMERIC_EDITED=408, ALPHANUMERIC_EDITED=409, 
		ALLOWING=410, OTHERS=411, READERS=412, WRITERS=413, UPDATERS=414, UNTIL=415, 
		TEST=416, PREVIOUS=417, PRIOR=418, REGARDLESS=419, DEPENDENCY=420, DICTIONARY=421, 
		START_SLASH_=422, START_STAR_=423, EXCLAM_=424, UNDER_=425, PLUS_=426, 
		MINUS_=427, STAR_=428, SLASH_=429, COMMA_=430, SEMI_=431, COLON_=432, 
		EQUAL_=433, LT_=434, LE_=435, GE_=436, GT_=437, LPAREN_=438, RPAREN_=439, 
		LBRACK_=440, RBRACK_=441, POINTER_=442, ATP_=443, DOT_=444, LCURLY_=445, 
		RCURLY_=446, STRING_LITERAL=447, NUMERIC_LITERAL=448, HEX_LITERAL=449, 
		USER_DEFINED_WORD=450, START_FOUR_SPACES=451, WHITESPACE=452, NEWLINE=453;
	public static final int
		RULE_cobol_source = 0, RULE_figurative_constant_witout_all_zero = 1, RULE_figurative_constant_witout_all = 2, 
		RULE_figurative_constant_witout_zero = 3, RULE_figurative_constant = 4, 
		RULE_separator = 5, RULE_arithmetic_separator = 6, RULE_line_comment = 7, 
		RULE_program = 8, RULE_procedure_division = 9, RULE_end_program = 10, 
		RULE_procedure_division_header = 11, RULE_section = 12, RULE_declaratives = 13, 
		RULE_declaratives_section = 14, RULE_declarative_paragraph = 15, RULE_paragraph = 16, 
		RULE_sentense = 17, RULE_use_statement = 18, RULE_group_data_name = 19, 
		RULE_use_on = 20, RULE_section_header = 21, RULE_paragraph_name = 22, 
		RULE_section_name = 23, RULE_using = 24, RULE_giving = 25, RULE_procedure_test_line = 26, 
		RULE_statement = 27, RULE_rewrite_statement = 28, RULE_rewrite_rec_name = 29, 
		RULE_return_statement = 30, RULE_smrg_file = 31, RULE_release_statement = 32, 
		RULE_release_src_area = 33, RULE_release_rec = 34, RULE_record_statement = 35, 
		RULE_relation_type = 36, RULE_path_name = 37, RULE_read_statement = 38, 
		RULE_read_options = 39, RULE_perform_statement = 40, RULE_perform_times = 41, 
		RULE_with_test = 42, RULE_perform_until = 43, RULE_perform_varying = 44, 
		RULE_perform_range = 45, RULE_perform_increm = 46, RULE_perform_init = 47, 
		RULE_perform_var = 48, RULE_open_statement = 49, RULE_open_definition = 50, 
		RULE_open_file_attributes = 51, RULE_multiply_statement = 52, RULE_mult_num = 53, 
		RULE_merge_statement = 54, RULE_output_proc = 55, RULE_first_proc = 56, 
		RULE_end_proc = 57, RULE_giving_file = 58, RULE_infile = 59, RULE_merge_on = 60, 
		RULE_mergefile = 61, RULE_mergekey = 62, RULE_inspect_statement = 63, 
		RULE_inspect_converting = 64, RULE_convert_chars = 65, RULE_compare_chars = 66, 
		RULE_inspect_replacing = 67, RULE_replacing_all = 68, RULE_replace_val = 69, 
		RULE_replacing_characters = 70, RULE_replace_char = 71, RULE_inspect_tallying = 72, 
		RULE_tallying_for = 73, RULE_tallying_for_characters = 74, RULE_delim_definition = 75, 
		RULE_tallying_for_all = 76, RULE_compare_val = 77, RULE_delim_val = 78, 
		RULE_tally_ctr = 79, RULE_src_string = 80, RULE_initiate_statement = 81, 
		RULE_initialize_statement = 82, RULE_replacing = 83, RULE_init_value = 84, 
		RULE_fld_name = 85, RULE_move_statement = 86, RULE_if_statement = 87, 
		RULE_generate_statement = 88, RULE_report_item = 89, RULE_exit_statement = 90, 
		RULE_exit_program_statement = 91, RULE_go_to_statement = 92, RULE_proc_name = 93, 
		RULE_evaluate_statement = 94, RULE_when_condition = 95, RULE_subj_item = 96, 
		RULE_divide_statement = 97, RULE_divide_statement_form1 = 98, RULE_divide_statement_form2 = 99, 
		RULE_remaind = 100, RULE_divide_num = 101, RULE_display_statement = 102, 
		RULE_display_statement_form1 = 103, RULE_display_statement_form2 = 104, 
		RULE_display_statement_form3 = 105, RULE_display_statement_form4 = 106, 
		RULE_src_item = 107, RULE_display_upon = 108, RULE_disp_f3_line = 109, 
		RULE_disp_f3_column = 110, RULE_display_form1_clause = 111, RULE_display_form2_clause = 112, 
		RULE_at_line_number = 113, RULE_at_column_number = 114, RULE_out_dest = 115, 
		RULE_delete_statement = 116, RULE_continue_statement = 117, RULE_compute_statement = 118, 
		RULE_close_statement = 119, RULE_close_params = 120, RULE_cancel_statement = 121, 
		RULE_call_statement = 122, RULE_call_giving = 123, RULE_call_using = 124, 
		RULE_using_arg = 125, RULE_using_prefix = 126, RULE_argument = 127, RULE_prog_name = 128, 
		RULE_alter_statement = 129, RULE_alter_new_proc = 130, RULE_alter_proc = 131, 
		RULE_add_statement = 132, RULE_add_grp = 133, RULE_add_num = 134, RULE_accept_statement = 135, 
		RULE_on_exception_variants = 136, RULE_at_end_variants = 137, RULE_on_size_variants = 138, 
		RULE_invalid_key_variants = 139, RULE_accept_form6 = 140, RULE_accept6_item = 141, 
		RULE_accept_form1 = 142, RULE_accept_form2 = 143, RULE_accept_form3 = 144, 
		RULE_accept_form4 = 145, RULE_accept_form5 = 146, RULE_accept_at = 147, 
		RULE_accept_at_line = 148, RULE_accept_at_column = 149, RULE_accept_form4_clause = 150, 
		RULE_accept_form3_clause = 151, RULE_key_dest_item = 152, RULE_def_value = 153, 
		RULE_protected_value = 154, RULE_prot_fill_lit = 155, RULE_prot_size_value = 156, 
		RULE_number_value = 157, RULE_date_time = 158, RULE_dest_item = 159, RULE_input_source = 160, 
		RULE_at_end = 161, RULE_on_exception = 162, RULE_on_size = 163, RULE_invalid_key = 164, 
		RULE_data_division = 165, RULE_file_section = 166, RULE_working_storage_section = 167, 
		RULE_linkage_section = 168, RULE_report_section = 169, RULE_screen_section = 170, 
		RULE_file_description_entry = 171, RULE_sort_merge_file_description_entry = 172, 
		RULE_report_description_entry = 173, RULE_fd_clause = 174, RULE_record_description_entry = 175, 
		RULE_data_description_entry = 176, RULE_level_number = 177, RULE_data_description_clause = 178, 
		RULE_renames = 179, RULE_rename_start = 180, RULE_rename_end = 181, RULE_value_is = 182, 
		RULE_value_is_definition = 183, RULE_value_is_definition_part = 184, RULE_value_is_definition_thru = 185, 
		RULE_external_name = 186, RULE_ref_data_name = 187, RULE_value_is_literal = 188, 
		RULE_occurs = 189, RULE_indexed_by = 190, RULE_ind_name = 191, RULE_key_is = 192, 
		RULE_key_name = 193, RULE_times_definition = 194, RULE_table_size = 195, 
		RULE_min_times = 196, RULE_max_times = 197, RULE_report_group_description_entry = 198, 
		RULE_report_group_data_description = 199, RULE_report_group_data_description_clause = 200, 
		RULE_sign_is = 201, RULE_sum = 202, RULE_control_foot_name = 203, RULE_detail_report_group_name = 204, 
		RULE_sum_name = 205, RULE_source_name = 206, RULE_column_number = 207, 
		RULE_type_is_definition = 208, RULE_type_control_name = 209, RULE_next_group_definition = 210, 
		RULE_line_num_definition = 211, RULE_line_num = 212, RULE_rd_clause = 213, 
		RULE_footing_line_rd = 214, RULE_last_detail_line = 215, RULE_first_detail_line = 216, 
		RULE_heading_line = 217, RULE_page_size_rd = 218, RULE_control_name = 219, 
		RULE_report_code = 220, RULE_usage = 221, RULE_usage_definition = 222, 
		RULE_picture = 223, RULE_character_string = 224, RULE_char_str_part = 225, 
		RULE_other_data_item = 226, RULE_data_name = 227, RULE_sd_clause = 228, 
		RULE_report_is = 229, RULE_report_name = 230, RULE_linage = 231, RULE_bottom_lines = 232, 
		RULE_top_lines = 233, RULE_footing_line = 234, RULE_page_size = 235, RULE_data_rec = 236, 
		RULE_rec_name = 237, RULE_value_of_id = 238, RULE_value_of_id_definition = 239, 
		RULE_label = 240, RULE_record = 241, RULE_record_definition = 242, RULE_depending_item = 243, 
		RULE_shortest_rec = 244, RULE_longest_rec = 245, RULE_screen_description_entry = 246, 
		RULE_screen_name = 247, RULE_screen_description_clause = 248, RULE_scr_pic_using = 249, 
		RULE_scr_pic_from = 250, RULE_scr_pic_to = 251, RULE_nonnumeric_literal = 252, 
		RULE_src_number = 253, RULE_color_num = 254, RULE_identification_division = 255, 
		RULE_identification_division_paragraph = 256, RULE_program_id = 257, RULE_program_name = 258, 
		RULE_is_program = 259, RULE_with_ident = 260, RULE_ident_string = 261, 
		RULE_comment_entry = 262, RULE_author = 263, RULE_installation = 264, 
		RULE_date_written = 265, RULE_date_compiled = 266, RULE_security = 267, 
		RULE_options_ = 268, RULE_arithmetic = 269, RULE_environment_division = 270, 
		RULE_configuration_section = 271, RULE_input_output_section = 272, RULE_source_computer = 273, 
		RULE_computer_type = 274, RULE_with_debugging = 275, RULE_object_computer = 276, 
		RULE_memory_size = 277, RULE_memory_size_amount = 278, RULE_memory_size_unit = 279, 
		RULE_program_collating = 280, RULE_alpha_name = 281, RULE_segment_limit = 282, 
		RULE_segment_number = 283, RULE_special_names = 284, RULE_special_names_content = 285, 
		RULE_qualified_data_item = 286, RULE_currency = 287, RULE_currency_definition = 288, 
		RULE_literal_7 = 289, RULE_literal_8 = 290, RULE_class_ = 291, RULE_class_name = 292, 
		RULE_user_class = 293, RULE_symbolic_chars = 294, RULE_symb_ch_definition = 295, 
		RULE_symb_ch_def_clause = 296, RULE_symb_ch_def_in_alphabet = 297, RULE_symbol_char = 298, 
		RULE_char_val = 299, RULE_alphabet = 300, RULE_alpha_value = 301, RULE_user_alpha = 302, 
		RULE_first_literal = 303, RULE_last_literal = 304, RULE_same_literal = 305, 
		RULE_switch_ = 306, RULE_switch_clause_on = 307, RULE_switch_clause_off = 308, 
		RULE_cond_name = 309, RULE_switch_name = 310, RULE_switch_num = 311, RULE_top_of_page_name = 312, 
		RULE_predefined_device = 313, RULE_device_name = 314, RULE_arg_env = 315, 
		RULE_arg_env_name = 316, RULE_file_control = 317, RULE_select = 318, RULE_file_status = 319, 
		RULE_file_stat = 320, RULE_record_key = 321, RULE_record_key_definition = 322, 
		RULE_access_mode = 323, RULE_reserve = 324, RULE_reserve_num = 325, RULE_record_delimiter = 326, 
		RULE_padding = 327, RULE_pad_char = 328, RULE_organization = 329, RULE_lock_mode = 330, 
		RULE_lock_mode_definition = 331, RULE_code_set = 332, RULE_block_contains = 333, 
		RULE_smallest_block = 334, RULE_blocksize = 335, RULE_assign_to = 336, 
		RULE_assign_to_definition = 337, RULE_file_spec = 338, RULE_file_name = 339, 
		RULE_i_o_control = 340, RULE_multiple_file = 341, RULE_multiple_file_definition = 342, 
		RULE_multiple_file_name = 343, RULE_pos_integer = 344, RULE_rerun = 345, 
		RULE_rerun_definition = 346, RULE_clock_count = 347, RULE_condition_name = 348, 
		RULE_rerun_def_file = 349, RULE_rec_count = 350, RULE_same = 351, RULE_same_area_file = 352, 
		RULE_apply = 353, RULE_apply_definition = 354, RULE_window_ptrs = 355, 
		RULE_preall_amt = 356, RULE_extend_amt = 357, RULE_arithmetic_expression = 358, 
		RULE_constant = 359, RULE_binary_arithmetic_operator = 360, RULE_unary_arithmetic_operator = 361, 
		RULE_logic_expression = 362, RULE_success_failure_condition = 363, RULE_logic_condition = 364, 
		RULE_logic_operation = 365, RULE_sign_condition = 366, RULE_sign_condition_name = 367, 
		RULE_class_condition = 368, RULE_class_condition_name = 369, RULE_condition_operator = 370, 
		RULE_identifier_result = 371, RULE_identifier = 372, RULE_arguments = 373, 
		RULE_subscripting = 374, RULE_reference_modification = 375, RULE_leftmost_character_position = 376, 
		RULE_length = 377, RULE_function_name = 378;
	public static final String[] ruleNames = {
		"cobol_source", "figurative_constant_witout_all_zero", "figurative_constant_witout_all", 
		"figurative_constant_witout_zero", "figurative_constant", "separator", 
		"arithmetic_separator", "line_comment", "program", "procedure_division", 
		"end_program", "procedure_division_header", "section", "declaratives", 
		"declaratives_section", "declarative_paragraph", "paragraph", "sentense", 
		"use_statement", "group_data_name", "use_on", "section_header", "paragraph_name", 
		"section_name", "using", "giving", "procedure_test_line", "statement", 
		"rewrite_statement", "rewrite_rec_name", "return_statement", "smrg_file", 
		"release_statement", "release_src_area", "release_rec", "record_statement", 
		"relation_type", "path_name", "read_statement", "read_options", "perform_statement", 
		"perform_times", "with_test", "perform_until", "perform_varying", "perform_range", 
		"perform_increm", "perform_init", "perform_var", "open_statement", "open_definition", 
		"open_file_attributes", "multiply_statement", "mult_num", "merge_statement", 
		"output_proc", "first_proc", "end_proc", "giving_file", "infile", "merge_on", 
		"mergefile", "mergekey", "inspect_statement", "inspect_converting", "convert_chars", 
		"compare_chars", "inspect_replacing", "replacing_all", "replace_val", 
		"replacing_characters", "replace_char", "inspect_tallying", "tallying_for", 
		"tallying_for_characters", "delim_definition", "tallying_for_all", "compare_val", 
		"delim_val", "tally_ctr", "src_string", "initiate_statement", "initialize_statement", 
		"replacing", "init_value", "fld_name", "move_statement", "if_statement", 
		"generate_statement", "report_item", "exit_statement", "exit_program_statement", 
		"go_to_statement", "proc_name", "evaluate_statement", "when_condition", 
		"subj_item", "divide_statement", "divide_statement_form1", "divide_statement_form2", 
		"remaind", "divide_num", "display_statement", "display_statement_form1", 
		"display_statement_form2", "display_statement_form3", "display_statement_form4", 
		"src_item", "display_upon", "disp_f3_line", "disp_f3_column", "display_form1_clause", 
		"display_form2_clause", "at_line_number", "at_column_number", "out_dest", 
		"delete_statement", "continue_statement", "compute_statement", "close_statement", 
		"close_params", "cancel_statement", "call_statement", "call_giving", "call_using", 
		"using_arg", "using_prefix", "argument", "prog_name", "alter_statement", 
		"alter_new_proc", "alter_proc", "add_statement", "add_grp", "add_num", 
		"accept_statement", "on_exception_variants", "at_end_variants", "on_size_variants", 
		"invalid_key_variants", "accept_form6", "accept6_item", "accept_form1", 
		"accept_form2", "accept_form3", "accept_form4", "accept_form5", "accept_at", 
		"accept_at_line", "accept_at_column", "accept_form4_clause", "accept_form3_clause", 
		"key_dest_item", "def_value", "protected_value", "prot_fill_lit", "prot_size_value", 
		"number_value", "date_time", "dest_item", "input_source", "at_end", "on_exception", 
		"on_size", "invalid_key", "data_division", "file_section", "working_storage_section", 
		"linkage_section", "report_section", "screen_section", "file_description_entry", 
		"sort_merge_file_description_entry", "report_description_entry", "fd_clause", 
		"record_description_entry", "data_description_entry", "level_number", 
		"data_description_clause", "renames", "rename_start", "rename_end", "value_is", 
		"value_is_definition", "value_is_definition_part", "value_is_definition_thru", 
		"external_name", "ref_data_name", "value_is_literal", "occurs", "indexed_by", 
		"ind_name", "key_is", "key_name", "times_definition", "table_size", "min_times", 
		"max_times", "report_group_description_entry", "report_group_data_description", 
		"report_group_data_description_clause", "sign_is", "sum", "control_foot_name", 
		"detail_report_group_name", "sum_name", "source_name", "column_number", 
		"type_is_definition", "type_control_name", "next_group_definition", "line_num_definition", 
		"line_num", "rd_clause", "footing_line_rd", "last_detail_line", "first_detail_line", 
		"heading_line", "page_size_rd", "control_name", "report_code", "usage", 
		"usage_definition", "picture", "character_string", "char_str_part", "other_data_item", 
		"data_name", "sd_clause", "report_is", "report_name", "linage", "bottom_lines", 
		"top_lines", "footing_line", "page_size", "data_rec", "rec_name", "value_of_id", 
		"value_of_id_definition", "label", "record", "record_definition", "depending_item", 
		"shortest_rec", "longest_rec", "screen_description_entry", "screen_name", 
		"screen_description_clause", "scr_pic_using", "scr_pic_from", "scr_pic_to", 
		"nonnumeric_literal", "src_number", "color_num", "identification_division", 
		"identification_division_paragraph", "program_id", "program_name", "is_program", 
		"with_ident", "ident_string", "comment_entry", "author", "installation", 
		"date_written", "date_compiled", "security", "options_", "arithmetic", 
		"environment_division", "configuration_section", "input_output_section", 
		"source_computer", "computer_type", "with_debugging", "object_computer", 
		"memory_size", "memory_size_amount", "memory_size_unit", "program_collating", 
		"alpha_name", "segment_limit", "segment_number", "special_names", "special_names_content", 
		"qualified_data_item", "currency", "currency_definition", "literal_7", 
		"literal_8", "class_", "class_name", "user_class", "symbolic_chars", "symb_ch_definition", 
		"symb_ch_def_clause", "symb_ch_def_in_alphabet", "symbol_char", "char_val", 
		"alphabet", "alpha_value", "user_alpha", "first_literal", "last_literal", 
		"same_literal", "switch_", "switch_clause_on", "switch_clause_off", "cond_name", 
		"switch_name", "switch_num", "top_of_page_name", "predefined_device", 
		"device_name", "arg_env", "arg_env_name", "file_control", "select", "file_status", 
		"file_stat", "record_key", "record_key_definition", "access_mode", "reserve", 
		"reserve_num", "record_delimiter", "padding", "pad_char", "organization", 
		"lock_mode", "lock_mode_definition", "code_set", "block_contains", "smallest_block", 
		"blocksize", "assign_to", "assign_to_definition", "file_spec", "file_name", 
		"i_o_control", "multiple_file", "multiple_file_definition", "multiple_file_name", 
		"pos_integer", "rerun", "rerun_definition", "clock_count", "condition_name", 
		"rerun_def_file", "rec_count", "same", "same_area_file", "apply", "apply_definition", 
		"window_ptrs", "preall_amt", "extend_amt", "arithmetic_expression", "constant", 
		"binary_arithmetic_operator", "unary_arithmetic_operator", "logic_expression", 
		"success_failure_condition", "logic_condition", "logic_operation", "sign_condition", 
		"sign_condition_name", "class_condition", "class_condition_name", "condition_operator", 
		"identifier_result", "identifier", "arguments", "subscripting", "reference_modification", 
		"leftmost_character_position", "length", "function_name"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, "'!'", "'_'", "'+'", "'-'", null, null, "','", 
		"';'", "':'", "'='", "'<'", "'<='", "'>='", "'>'", "'('", "')'", "'['", 
		"']'", "'^'", "'@'", "'.'", "'{'", "'}'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "DECLARATIVES_IN_A_AREA", "END_IN_A_AREA", "IDENTIFICATION_IN_A_AREA", 
		"ACCEPT", "ACCESS", "ADD", "ADVANCING", "AFTER", "ALL", "ALPHA", "ALPHABET", 
		"ALPHABETIC", "ALPHABETIC_LOWER", "ALPHABETIC_UPPER", "ALSO", "ALTER", 
		"ALTERNATE", "AND", "APPLY", "ARE", "AREA", "AREAS", "ARGUMENT_NUMBER", 
		"ARGUMENT_VALUE", "ARITHMETIC", "ASCENDING", "ASCII", "ASSIGN", "AT", 
		"AUTHOR", "AUTO", "AUTOMATIC", "AUTOTERMINATE", "BACKGROUND_COLOR", "BEFORE", 
		"BELL", "BINARY", "BINARY_CHAR", "BINARY_DOUBLE", "BINARY_LONG", "BINARY_SHORT", 
		"BLANK", "BLINK", "BLINKING", "BLOCK", "BOLD", "BOTTOM", "BY", "C01", 
		"CALL", "CANCEL", "CARD_READER", "CF", "CH", "CHARACTER", "CHARACTERS", 
		"CLASS", "CLOCK_UNITS", "CLOSE", "CODE", "CODE_SET", "COLLATING", "COLUMN", 
		"COMMA", "COMMON", "COMP", "COMPUTATIONAL", "COMPUTATIONAL_1", "COMPUTATIONAL_2", 
		"COMPUTATIONAL_3", "COMPUTATIONAL_4", "COMPUTATIONAL_5", "COMPUTATIONAL_X", 
		"COMPUTE", "COMP_1", "COMP_2", "COMP_3", "COMP_4", "COMP_5", "COMP_X", 
		"CONFIGURATION", "CONSOLE", "CONTAINS", "CONTENT", "CONTIGUOUS", "CONTIGUOUS_BEST_TRY", 
		"CONTINUE", "CONTROL", "CONTROLS", "CONVERSION", "CONVERTING", "COPY", 
		"CORR", "CORRESPONDING", "CRT", "CURRENCY", "CURRENT", "CURSOR", "DATA", 
		"DATE", "DATE_COMPILED", "DATE_WRITTEN", "DAY", "DAY_OF_WEEK", "DE", "DEBUGGING", 
		"DECIMAL_POINT", "DECLARATIVES", "DEFAULT", "DEFERRED_WRITE", "DELETE", 
		"DELIMITER", "DEPENDING", "DESCENDING", "DESCRIPTOR", "DETAIL", "DISK", 
		"DISPLAY", "DIVIDE", "DIVISION", "DOWN", "DUPLICATES", "DYNAMIC", "EBCDIC", 
		"ECHO", "EDITING", "END", "END_ACCEPT", "END_ADD", "END_CALL", "END_COMPUTE", 
		"END_DELETE", "END_DISPLAY", "END_DIVIDE", "END_EVALUATE", "END_IF", "END_MULTIPLY", 
		"END_OF_PAGE", "END_PERFORM", "END_READ", "END_RETURN", "END_REWRITE", 
		"END_SEARCH", "END_START", "END_STRING", "END_SUBTRACT", "END_UNSTRING", 
		"END_WRITE", "ENVIRONMENT", "ENVIRONMENT_NAME", "ENVIRONMENT_VALUE", "EOL", 
		"EOS", "EQUAL", "ERASE", "ERROR", "EVALUATE", "EVERY", "EXCEPTION", "EXCLUSIVE", 
		"EXIT", "EXTEND", "EXTENSION", "EXTERNAL", "FAILURE", "FALSE", "FD", "FILE", 
		"FILE_CONTROL", "FILE_ID", "FILLER", "FILL_SIZE", "FINAL", "FIRST", "FLOAT_EXTENDED", 
		"FLOAT_LONG", "FLOAT_SHORT", "FOOTING", "FOR", "FOREGROUND_COLOR", "FROM", 
		"FULL", "FUNCTION", "GENERATE", "GIVING", "GLOBAL", "GO", "GREATER", "GROUP", 
		"HEADING", "HIGHLIGHT", "HIGH_VALUE", "HIGH_VALUES", "I64", "ID", "IDENT", 
		"IDENTIFICATION", "IF", "IN", "INDEX", "INDEXED", "INDICATE", "INITIAL", 
		"INITIALIZE", "INITIATE", "INPUT", "INPUT_OUTPUT", "INSPECT", "INSTALLATION", 
		"INTO", "INVALID", "IS", "I_O", "I_O_CONTROL", "JUST", "JUSTIFIED", "KEY", 
		"LABEL", "LAST", "LEADING", "LEFT", "LESS", "LIMIT", "LIMITS", "LINAGE", 
		"LINE", "LINES", "LINE_PRINTER", "LINKAGE", "LOCK", "LOCK_HOLDING", "LOWLIGHT", 
		"LOW_VALUE", "LOW_VALUES", "MANUAL", "MASS_INSERT", "MEMORY", "MERGE", 
		"MODE", "MODULES", "MOVE", "MULTIPLE", "MULTIPLY", "NATIVE", "NEGATIVE", 
		"NEXT", "NO", "NOT", "NUMBER", "NUMERIC", "OBJECT_COMPUTER", "OCCURS", 
		"OF", "OFF", "OMITTED", "ON", "OPEN", "OPTIONAL", "OPTIONS", "OR", "ORGANIZATION", 
		"OUTPUT", "OVERFLOW", "PACKED_DECIMAL", "PADDING", "PAGE", "PAPER_TAPE_PUNCH", 
		"PAPER_TAPE_READER", "PERFORM", "PF", "PH", "PIC", "PICTURE", "PLUS", 
		"POINTER", "POINTER_64", "POSITION", "POSITIVE", "PREALLOCATION", "PRINTER", 
		"PRINT_CONTROL", "PROCEDURE", "PROCEED", "PROGRAM", "PROGRAM_ID", "PROTECTED", 
		"QUOTE", "QUOTES", "RANDOM", "RD", "READ", "RECORD", "RECORDS", "REDEFINES", 
		"REEL", "REFERENCE", "RELATIVE", "RELEASE", "REMAINDER", "REMOVAL", "RENAMES", 
		"REPLACE", "REPLACING", "REPORT", "REPORTING", "REPORTS", "REQUIRED", 
		"RERUN", "RESERVE", "RESET", "RETURN", "REVERSED", "REVERSE_VIDEO", "REWIND", 
		"REWRITE", "RF", "RH", "RIGHT", "ROLLBACK", "ROUNDED", "SAME", "SCREEN", 
		"SD", "SEARCH", "SECTION", "SECURE", "SECURITY", "SEGMENT_LIMIT", "SELECT", 
		"SEPARATE", "SEQUENCE", "SEQUENTIAL", "SET", "SIGN", "SIGNED", "SIZE", 
		"SORT", "SORT_MERGE", "SOURCE", "SOURCE_COMPUTER", "SPACE", "SPACES", 
		"SPECIAL_NAMES", "STANDARD", "STANDARD_1", "STANDARD_2", "START", "STATUS", 
		"STOP", "STRING", "SUBTRACT", "SUCCESS", "SUM", "SUPPRESS", "SWITCH", 
		"SYMBOL", "SYMBOLIC", "SYNC", "SYNCHRONIZED", "SYSERR", "SYSIN", "SYSOUT", 
		"TALLYING", "TAPE", "TERMINATE", "THAN", "THROUGH", "THRU", "TIME", "TIMES", 
		"TO", "TOP", "TRAILING", "TRUE", "TYPE", "UNDERLINE", "UNDERLINED", "UNIT", 
		"UNLOCK", "UNSIGNED", "UNSTRING", "UP", "UPON", "USAGE", "USE", "USING", 
		"VALUE", "VALUES", "VARYING", "VAX", "WHEN", "WINDOW", "WITH", "WORDS", 
		"WORKING_STORAGE", "WRITE", "YYYYDDD", "YYYYMMDD", "ZERO", "ZEROES", "ZEROS", 
		"OTHER", "ANY", "THEN", "SENTENCE", "ELSE", "ALPHANUMERIC", "NUMERIC_EDITED", 
		"ALPHANUMERIC_EDITED", "ALLOWING", "OTHERS", "READERS", "WRITERS", "UPDATERS", 
		"UNTIL", "TEST", "PREVIOUS", "PRIOR", "REGARDLESS", "DEPENDENCY", "DICTIONARY", 
		"START_SLASH_", "START_STAR_", "EXCLAM_", "UNDER_", "PLUS_", "MINUS_", 
		"STAR_", "SLASH_", "COMMA_", "SEMI_", "COLON_", "EQUAL_", "LT_", "LE_", 
		"GE_", "GT_", "LPAREN_", "RPAREN_", "LBRACK_", "RBRACK_", "POINTER_", 
		"ATP_", "DOT_", "LCURLY_", "RCURLY_", "STRING_LITERAL", "NUMERIC_LITERAL", 
		"HEX_LITERAL", "USER_DEFINED_WORD", "START_FOUR_SPACES", "WHITESPACE", 
		"NEWLINE"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	@Override
	public String getGrammarFileName() { return "cobol.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public ATN getATN() { return _ATN; }

	public cobolParser(TokenStream input) {
		super(input);
		_interp = new ParserATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}
	public static class Cobol_sourceContext extends ParserRuleContext {
		public TerminalNode EOF() { return getToken(cobolParser.EOF, 0); }
		public List<ProgramContext> program() {
			return getRuleContexts(ProgramContext.class);
		}
		public ProgramContext program(int i) {
			return getRuleContext(ProgramContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Cobol_sourceContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_cobol_source; }
	}

	public final Cobol_sourceContext cobol_source() throws RecognitionException {
		Cobol_sourceContext _localctx = new Cobol_sourceContext(_ctx, getState());
		enterRule(_localctx, 0, RULE_cobol_source);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(762);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==IDENTIFICATION_IN_A_AREA || ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				setState(760);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case IDENTIFICATION_IN_A_AREA:
					{
					setState(758);
					program();
					}
					break;
				case START_SLASH_:
				case START_STAR_:
				case COMMA_:
				case SEMI_:
				case START_FOUR_SPACES:
				case WHITESPACE:
				case NEWLINE:
					{
					setState(759);
					separator();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				setState(764);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(765);
			match(EOF);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Figurative_constant_witout_all_zeroContext extends ParserRuleContext {
		public TerminalNode SPACE() { return getToken(cobolParser.SPACE, 0); }
		public TerminalNode SPACES() { return getToken(cobolParser.SPACES, 0); }
		public TerminalNode HIGH_VALUE() { return getToken(cobolParser.HIGH_VALUE, 0); }
		public TerminalNode HIGH_VALUES() { return getToken(cobolParser.HIGH_VALUES, 0); }
		public TerminalNode LOW_VALUE() { return getToken(cobolParser.LOW_VALUE, 0); }
		public TerminalNode LOW_VALUES() { return getToken(cobolParser.LOW_VALUES, 0); }
		public TerminalNode QUOTE() { return getToken(cobolParser.QUOTE, 0); }
		public TerminalNode QUOTES() { return getToken(cobolParser.QUOTES, 0); }
		public Figurative_constant_witout_all_zeroContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_figurative_constant_witout_all_zero; }
	}

	public final Figurative_constant_witout_all_zeroContext figurative_constant_witout_all_zero() throws RecognitionException {
		Figurative_constant_witout_all_zeroContext _localctx = new Figurative_constant_witout_all_zeroContext(_ctx, getState());
		enterRule(_localctx, 2, RULE_figurative_constant_witout_all_zero);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(767);
			_la = _input.LA(1);
			if ( !(((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)))) != 0) || ((((_la - 287)) & ~0x3f) == 0 && ((1L << (_la - 287)) & ((1L << (QUOTE - 287)) | (1L << (QUOTES - 287)) | (1L << (SPACE - 287)) | (1L << (SPACES - 287)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Figurative_constant_witout_allContext extends ParserRuleContext {
		public Figurative_constant_witout_all_zeroContext figurative_constant_witout_all_zero() {
			return getRuleContext(Figurative_constant_witout_all_zeroContext.class,0);
		}
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public Figurative_constant_witout_allContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_figurative_constant_witout_all; }
	}

	public final Figurative_constant_witout_allContext figurative_constant_witout_all() throws RecognitionException {
		Figurative_constant_witout_allContext _localctx = new Figurative_constant_witout_allContext(_ctx, getState());
		enterRule(_localctx, 4, RULE_figurative_constant_witout_all);
		try {
			setState(771);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
				enterOuterAlt(_localctx, 1);
				{
				setState(769);
				figurative_constant_witout_all_zero();
				}
				break;
			case ZERO:
				enterOuterAlt(_localctx, 2);
				{
				setState(770);
				match(ZERO);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Figurative_constant_witout_zeroContext extends ParserRuleContext {
		public Figurative_constant_witout_all_zeroContext figurative_constant_witout_all_zero() {
			return getRuleContext(Figurative_constant_witout_all_zeroContext.class,0);
		}
		public TerminalNode ALL() { return getToken(cobolParser.ALL, 0); }
		public TerminalNode WHITESPACE() { return getToken(cobolParser.WHITESPACE, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Figurative_constant_witout_zeroContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_figurative_constant_witout_zero; }
	}

	public final Figurative_constant_witout_zeroContext figurative_constant_witout_zero() throws RecognitionException {
		Figurative_constant_witout_zeroContext _localctx = new Figurative_constant_witout_zeroContext(_ctx, getState());
		enterRule(_localctx, 6, RULE_figurative_constant_witout_zero);
		try {
			setState(777);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
				enterOuterAlt(_localctx, 1);
				{
				setState(773);
				figurative_constant_witout_all_zero();
				}
				break;
			case ALL:
				enterOuterAlt(_localctx, 2);
				{
				setState(774);
				match(ALL);
				setState(775);
				match(WHITESPACE);
				setState(776);
				match(STRING_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Figurative_constantContext extends ParserRuleContext {
		public Figurative_constant_witout_zeroContext figurative_constant_witout_zero() {
			return getRuleContext(Figurative_constant_witout_zeroContext.class,0);
		}
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public Figurative_constantContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_figurative_constant; }
	}

	public final Figurative_constantContext figurative_constant() throws RecognitionException {
		Figurative_constantContext _localctx = new Figurative_constantContext(_ctx, getState());
		enterRule(_localctx, 8, RULE_figurative_constant);
		try {
			setState(781);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
				enterOuterAlt(_localctx, 1);
				{
				setState(779);
				figurative_constant_witout_zero();
				}
				break;
			case ZERO:
				enterOuterAlt(_localctx, 2);
				{
				setState(780);
				match(ZERO);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SeparatorContext extends ParserRuleContext {
		public TerminalNode WHITESPACE() { return getToken(cobolParser.WHITESPACE, 0); }
		public TerminalNode NEWLINE() { return getToken(cobolParser.NEWLINE, 0); }
		public TerminalNode START_FOUR_SPACES() { return getToken(cobolParser.START_FOUR_SPACES, 0); }
		public TerminalNode COMMA_() { return getToken(cobolParser.COMMA_, 0); }
		public TerminalNode SEMI_() { return getToken(cobolParser.SEMI_, 0); }
		public Line_commentContext line_comment() {
			return getRuleContext(Line_commentContext.class,0);
		}
		public SeparatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_separator; }
	}

	public final SeparatorContext separator() throws RecognitionException {
		SeparatorContext _localctx = new SeparatorContext(_ctx, getState());
		enterRule(_localctx, 10, RULE_separator);
		try {
			setState(789);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case WHITESPACE:
				enterOuterAlt(_localctx, 1);
				{
				setState(783);
				match(WHITESPACE);
				}
				break;
			case NEWLINE:
				enterOuterAlt(_localctx, 2);
				{
				setState(784);
				match(NEWLINE);
				}
				break;
			case START_FOUR_SPACES:
				enterOuterAlt(_localctx, 3);
				{
				setState(785);
				match(START_FOUR_SPACES);
				}
				break;
			case COMMA_:
				enterOuterAlt(_localctx, 4);
				{
				setState(786);
				match(COMMA_);
				}
				break;
			case SEMI_:
				enterOuterAlt(_localctx, 5);
				{
				setState(787);
				match(SEMI_);
				}
				break;
			case START_SLASH_:
			case START_STAR_:
				enterOuterAlt(_localctx, 6);
				{
				setState(788);
				line_comment();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arithmetic_separatorContext extends ParserRuleContext {
		public TerminalNode WHITESPACE() { return getToken(cobolParser.WHITESPACE, 0); }
		public TerminalNode NEWLINE() { return getToken(cobolParser.NEWLINE, 0); }
		public TerminalNode START_FOUR_SPACES() { return getToken(cobolParser.START_FOUR_SPACES, 0); }
		public Line_commentContext line_comment() {
			return getRuleContext(Line_commentContext.class,0);
		}
		public Arithmetic_separatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arithmetic_separator; }
	}

	public final Arithmetic_separatorContext arithmetic_separator() throws RecognitionException {
		Arithmetic_separatorContext _localctx = new Arithmetic_separatorContext(_ctx, getState());
		enterRule(_localctx, 12, RULE_arithmetic_separator);
		try {
			setState(795);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case WHITESPACE:
				enterOuterAlt(_localctx, 1);
				{
				setState(791);
				match(WHITESPACE);
				}
				break;
			case NEWLINE:
				enterOuterAlt(_localctx, 2);
				{
				setState(792);
				match(NEWLINE);
				}
				break;
			case START_FOUR_SPACES:
				enterOuterAlt(_localctx, 3);
				{
				setState(793);
				match(START_FOUR_SPACES);
				}
				break;
			case START_SLASH_:
			case START_STAR_:
				enterOuterAlt(_localctx, 4);
				{
				setState(794);
				line_comment();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Line_commentContext extends ParserRuleContext {
		public TerminalNode START_SLASH_() { return getToken(cobolParser.START_SLASH_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public TerminalNode START_STAR_() { return getToken(cobolParser.START_STAR_, 0); }
		public Line_commentContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_line_comment; }
	}

	public final Line_commentContext line_comment() throws RecognitionException {
		Line_commentContext _localctx = new Line_commentContext(_ctx, getState());
		enterRule(_localctx, 14, RULE_line_comment);
		int _la;
		try {
			setState(813);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case START_SLASH_:
				enterOuterAlt(_localctx, 1);
				{
				setState(797);
				match(START_SLASH_);
				setState(801);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (ALLOWING - 384)) | (1L << (OTHERS - 384)) | (1L << (READERS - 384)) | (1L << (WRITERS - 384)) | (1L << (UPDATERS - 384)) | (1L << (UNTIL - 384)) | (1L << (TEST - 384)) | (1L << (PREVIOUS - 384)) | (1L << (PRIOR - 384)) | (1L << (REGARDLESS - 384)) | (1L << (DEPENDENCY - 384)) | (1L << (DICTIONARY - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)))) != 0) || ((((_la - 448)) & ~0x3f) == 0 && ((1L << (_la - 448)) & ((1L << (NUMERIC_LITERAL - 448)) | (1L << (HEX_LITERAL - 448)) | (1L << (USER_DEFINED_WORD - 448)) | (1L << (START_FOUR_SPACES - 448)) | (1L << (WHITESPACE - 448)))) != 0)) {
					{
					{
					setState(798);
					_la = _input.LA(1);
					if ( _la <= 0 || (_la==NEWLINE) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					}
					setState(803);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(804);
				match(NEWLINE);
				}
				break;
			case START_STAR_:
				enterOuterAlt(_localctx, 2);
				{
				setState(805);
				match(START_STAR_);
				setState(809);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (ALLOWING - 384)) | (1L << (OTHERS - 384)) | (1L << (READERS - 384)) | (1L << (WRITERS - 384)) | (1L << (UPDATERS - 384)) | (1L << (UNTIL - 384)) | (1L << (TEST - 384)) | (1L << (PREVIOUS - 384)) | (1L << (PRIOR - 384)) | (1L << (REGARDLESS - 384)) | (1L << (DEPENDENCY - 384)) | (1L << (DICTIONARY - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)))) != 0) || ((((_la - 448)) & ~0x3f) == 0 && ((1L << (_la - 448)) & ((1L << (NUMERIC_LITERAL - 448)) | (1L << (HEX_LITERAL - 448)) | (1L << (USER_DEFINED_WORD - 448)) | (1L << (START_FOUR_SPACES - 448)) | (1L << (WHITESPACE - 448)))) != 0)) {
					{
					{
					setState(806);
					_la = _input.LA(1);
					if ( _la <= 0 || (_la==NEWLINE) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					}
					setState(811);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(812);
				match(NEWLINE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ProgramContext extends ParserRuleContext {
		public Identification_divisionContext identification_division() {
			return getRuleContext(Identification_divisionContext.class,0);
		}
		public Environment_divisionContext environment_division() {
			return getRuleContext(Environment_divisionContext.class,0);
		}
		public Data_divisionContext data_division() {
			return getRuleContext(Data_divisionContext.class,0);
		}
		public Procedure_divisionContext procedure_division() {
			return getRuleContext(Procedure_divisionContext.class,0);
		}
		public ProgramContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program; }
	}

	public final ProgramContext program() throws RecognitionException {
		ProgramContext _localctx = new ProgramContext(_ctx, getState());
		enterRule(_localctx, 16, RULE_program);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(815);
			identification_division();
			setState(817);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ENVIRONMENT) {
				{
				setState(816);
				environment_division();
				}
			}

			setState(820);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==DATA) {
				{
				setState(819);
				data_division();
				}
			}

			setState(823);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==PROCEDURE) {
				{
				setState(822);
				procedure_division();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Procedure_divisionContext extends ParserRuleContext {
		public Procedure_division_headerContext procedure_division_header() {
			return getRuleContext(Procedure_division_headerContext.class,0);
		}
		public DeclarativesContext declaratives() {
			return getRuleContext(DeclarativesContext.class,0);
		}
		public End_programContext end_program() {
			return getRuleContext(End_programContext.class,0);
		}
		public List<Procedure_test_lineContext> procedure_test_line() {
			return getRuleContexts(Procedure_test_lineContext.class);
		}
		public Procedure_test_lineContext procedure_test_line(int i) {
			return getRuleContext(Procedure_test_lineContext.class,i);
		}
		public List<SectionContext> section() {
			return getRuleContexts(SectionContext.class);
		}
		public SectionContext section(int i) {
			return getRuleContext(SectionContext.class,i);
		}
		public List<ParagraphContext> paragraph() {
			return getRuleContexts(ParagraphContext.class);
		}
		public ParagraphContext paragraph(int i) {
			return getRuleContext(ParagraphContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Procedure_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_procedure_division; }
	}

	public final Procedure_divisionContext procedure_division() throws RecognitionException {
		Procedure_divisionContext _localctx = new Procedure_divisionContext(_ctx, getState());
		enterRule(_localctx, 18, RULE_procedure_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(825);
			procedure_division_header();
			setState(827);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==DECLARATIVES_IN_A_AREA) {
				{
				setState(826);
				declaratives();
				}
			}

			setState(853);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,18,_ctx) ) {
			case 1:
				{
				setState(838);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,15,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(829);
						section();
						setState(833);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,14,_ctx);
						while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
							if ( _alt==1 ) {
								{
								{
								setState(830);
								separator();
								}
								} 
							}
							setState(835);
							_errHandler.sync(this);
							_alt = getInterpreter().adaptivePredict(_input,14,_ctx);
						}
						}
						} 
					}
					setState(840);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,15,_ctx);
				}
				}
				break;
			case 2:
				{
				setState(850);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,17,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(841);
						paragraph();
						setState(845);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,16,_ctx);
						while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
							if ( _alt==1 ) {
								{
								{
								setState(842);
								separator();
								}
								} 
							}
							setState(847);
							_errHandler.sync(this);
							_alt = getInterpreter().adaptivePredict(_input,16,_ctx);
						}
						}
						} 
					}
					setState(852);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,17,_ctx);
				}
				}
				break;
			}
			setState(862);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,20,_ctx) ) {
			case 1:
				{
				setState(858);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(855);
					separator();
					}
					}
					setState(860);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(861);
				end_program();
				}
				break;
			}
			setState(879);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,23,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(867);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,21,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(864);
							separator();
							}
							} 
						}
						setState(869);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,21,_ctx);
					}
					setState(870);
					procedure_test_line();
					setState(874);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,22,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(871);
							separator();
							}
							} 
						}
						setState(876);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,22,_ctx);
					}
					}
					} 
				}
				setState(881);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,23,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class End_programContext extends ParserRuleContext {
		public TerminalNode END_IN_A_AREA() { return getToken(cobolParser.END_IN_A_AREA, 0); }
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Program_nameContext program_name() {
			return getRuleContext(Program_nameContext.class,0);
		}
		public End_programContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_end_program; }
	}

	public final End_programContext end_program() throws RecognitionException {
		End_programContext _localctx = new End_programContext(_ctx, getState());
		enterRule(_localctx, 20, RULE_end_program);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(882);
			match(END_IN_A_AREA);
			setState(884); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(883);
				separator();
				}
				}
				setState(886); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(888);
			match(PROGRAM);
			setState(896);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,26,_ctx) ) {
			case 1:
				{
				setState(890); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(889);
					separator();
					}
					}
					setState(892); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(894);
				program_name();
				}
				break;
			}
			setState(901);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(898);
				separator();
				}
				}
				setState(903);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(904);
			match(DOT_);
			setState(908);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,28,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(905);
					separator();
					}
					} 
				}
				setState(910);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,28,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Procedure_division_headerContext extends ParserRuleContext {
		public TerminalNode PROCEDURE() { return getToken(cobolParser.PROCEDURE, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public UsingContext using() {
			return getRuleContext(UsingContext.class,0);
		}
		public GivingContext giving() {
			return getRuleContext(GivingContext.class,0);
		}
		public Procedure_division_headerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_procedure_division_header; }
	}

	public final Procedure_division_headerContext procedure_division_header() throws RecognitionException {
		Procedure_division_headerContext _localctx = new Procedure_division_headerContext(_ctx, getState());
		enterRule(_localctx, 22, RULE_procedure_division_header);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(911);
			match(PROCEDURE);
			setState(913); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(912);
				separator();
				}
				}
				setState(915); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(917);
			match(DIVISION);
			setState(925);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,31,_ctx) ) {
			case 1:
				{
				setState(919); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(918);
					separator();
					}
					}
					setState(921); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(923);
				using();
				}
				break;
			}
			setState(934);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,33,_ctx) ) {
			case 1:
				{
				setState(928); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(927);
					separator();
					}
					}
					setState(930); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(932);
				giving();
				}
				break;
			}
			setState(939);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(936);
				separator();
				}
				}
				setState(941);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(942);
			match(DOT_);
			setState(946);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,35,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(943);
					separator();
					}
					} 
				}
				setState(948);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,35,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SectionContext extends ParserRuleContext {
		public Section_headerContext section_header() {
			return getRuleContext(Section_headerContext.class,0);
		}
		public SectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_section; }
	}

	public final SectionContext section() throws RecognitionException {
		SectionContext _localctx = new SectionContext(_ctx, getState());
		enterRule(_localctx, 24, RULE_section);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(949);
			section_header();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class DeclarativesContext extends ParserRuleContext {
		public TerminalNode DECLARATIVES_IN_A_AREA() { return getToken(cobolParser.DECLARATIVES_IN_A_AREA, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public TerminalNode END_IN_A_AREA() { return getToken(cobolParser.END_IN_A_AREA, 0); }
		public TerminalNode DECLARATIVES() { return getToken(cobolParser.DECLARATIVES, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Declaratives_sectionContext> declaratives_section() {
			return getRuleContexts(Declaratives_sectionContext.class);
		}
		public Declaratives_sectionContext declaratives_section(int i) {
			return getRuleContext(Declaratives_sectionContext.class,i);
		}
		public DeclarativesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_declaratives; }
	}

	public final DeclarativesContext declaratives() throws RecognitionException {
		DeclarativesContext _localctx = new DeclarativesContext(_ctx, getState());
		enterRule(_localctx, 26, RULE_declaratives);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(951);
			match(DECLARATIVES_IN_A_AREA);
			setState(955);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(952);
				separator();
				}
				}
				setState(957);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(958);
			match(DOT_);
			setState(962);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(959);
				separator();
				}
				}
				setState(964);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(972); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(965);
				declaratives_section();
				setState(969);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(966);
					separator();
					}
					}
					setState(971);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(974); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			setState(976);
			match(END_IN_A_AREA);
			setState(978); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(977);
				separator();
				}
				}
				setState(980); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(982);
			match(DECLARATIVES);
			setState(986);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(983);
				separator();
				}
				}
				setState(988);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(989);
			match(DOT_);
			setState(993);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,42,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(990);
					separator();
					}
					} 
				}
				setState(995);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,42,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Declaratives_sectionContext extends ParserRuleContext {
		public Section_headerContext section_header() {
			return getRuleContext(Section_headerContext.class,0);
		}
		public Use_statementContext use_statement() {
			return getRuleContext(Use_statementContext.class,0);
		}
		public List<Declarative_paragraphContext> declarative_paragraph() {
			return getRuleContexts(Declarative_paragraphContext.class);
		}
		public Declarative_paragraphContext declarative_paragraph(int i) {
			return getRuleContext(Declarative_paragraphContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Declaratives_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_declaratives_section; }
	}

	public final Declaratives_sectionContext declaratives_section() throws RecognitionException {
		Declaratives_sectionContext _localctx = new Declaratives_sectionContext(_ctx, getState());
		enterRule(_localctx, 28, RULE_declaratives_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(996);
			section_header();
			setState(997);
			use_statement();
			setState(1007);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,44,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(999); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(998);
						separator();
						}
						}
						setState(1001); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1003);
					declarative_paragraph();
					}
					} 
				}
				setState(1009);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,44,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Declarative_paragraphContext extends ParserRuleContext {
		public ParagraphContext paragraph() {
			return getRuleContext(ParagraphContext.class,0);
		}
		public Declarative_paragraphContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_declarative_paragraph; }
	}

	public final Declarative_paragraphContext declarative_paragraph() throws RecognitionException {
		Declarative_paragraphContext _localctx = new Declarative_paragraphContext(_ctx, getState());
		enterRule(_localctx, 30, RULE_declarative_paragraph);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1010);
			paragraph();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ParagraphContext extends ParserRuleContext {
		public Paragraph_nameContext paragraph_name() {
			return getRuleContext(Paragraph_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<SentenseContext> sentense() {
			return getRuleContexts(SentenseContext.class);
		}
		public SentenseContext sentense(int i) {
			return getRuleContext(SentenseContext.class,i);
		}
		public ParagraphContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_paragraph; }
	}

	public final ParagraphContext paragraph() throws RecognitionException {
		ParagraphContext _localctx = new ParagraphContext(_ctx, getState());
		enterRule(_localctx, 32, RULE_paragraph);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1012);
			paragraph_name();
			setState(1016);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(1013);
				separator();
				}
				}
				setState(1018);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1019);
			match(DOT_);
			setState(1023);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,46,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1020);
					separator();
					}
					} 
				}
				setState(1025);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,46,_ctx);
			}
			setState(1035);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCEPT) | (1L << ADD) | (1L << ALTER) | (1L << CALL) | (1L << CANCEL) | (1L << CLOSE))) != 0) || ((((_la - 74)) & ~0x3f) == 0 && ((1L << (_la - 74)) & ((1L << (COMPUTE - 74)) | (1L << (CONTINUE - 74)) | (1L << (DELETE - 74)) | (1L << (DISPLAY - 74)) | (1L << (DIVIDE - 74)))) != 0) || ((((_la - 157)) & ~0x3f) == 0 && ((1L << (_la - 157)) & ((1L << (EVALUATE - 157)) | (1L << (EXIT - 157)) | (1L << (GENERATE - 157)) | (1L << (GO - 157)) | (1L << (IF - 157)) | (1L << (INITIALIZE - 157)) | (1L << (INITIATE - 157)) | (1L << (INSPECT - 157)))) != 0) || ((((_la - 238)) & ~0x3f) == 0 && ((1L << (_la - 238)) & ((1L << (MERGE - 238)) | (1L << (MOVE - 238)) | (1L << (MULTIPLY - 238)) | (1L << (OPEN - 238)) | (1L << (PERFORM - 238)) | (1L << (READ - 238)) | (1L << (RECORD - 238)) | (1L << (RELEASE - 238)))) != 0) || _la==RETURN || _la==REWRITE) {
				{
				{
				setState(1026);
				sentense();
				setState(1030);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,47,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1027);
						separator();
						}
						} 
					}
					setState(1032);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,47,_ctx);
				}
				}
				}
				setState(1037);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SentenseContext extends ParserRuleContext {
		public List<StatementContext> statement() {
			return getRuleContexts(StatementContext.class);
		}
		public StatementContext statement(int i) {
			return getRuleContext(StatementContext.class,i);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public SentenseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sentense; }
	}

	public final SentenseContext sentense() throws RecognitionException {
		SentenseContext _localctx = new SentenseContext(_ctx, getState());
		enterRule(_localctx, 34, RULE_sentense);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1045); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1038);
					statement();
					setState(1042);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,49,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(1039);
							separator();
							}
							} 
						}
						setState(1044);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,49,_ctx);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1047); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,50,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(1062);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,53,_ctx) ) {
			case 1:
				{
				setState(1052);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(1049);
					separator();
					}
					}
					setState(1054);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(1055);
				match(DOT_);
				setState(1059);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,52,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1056);
						separator();
						}
						} 
					}
					setState(1061);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,52,_ctx);
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Use_statementContext extends ParserRuleContext {
		public TerminalNode USE() { return getToken(cobolParser.USE, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public TerminalNode AFTER() { return getToken(cobolParser.AFTER, 0); }
		public TerminalNode PROCEDURE() { return getToken(cobolParser.PROCEDURE, 0); }
		public Use_onContext use_on() {
			return getRuleContext(Use_onContext.class,0);
		}
		public TerminalNode BEFORE() { return getToken(cobolParser.BEFORE, 0); }
		public TerminalNode REPORTING() { return getToken(cobolParser.REPORTING, 0); }
		public Group_data_nameContext group_data_name() {
			return getRuleContext(Group_data_nameContext.class,0);
		}
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode EXCEPTION() { return getToken(cobolParser.EXCEPTION, 0); }
		public TerminalNode ERROR() { return getToken(cobolParser.ERROR, 0); }
		public TerminalNode STANDARD() { return getToken(cobolParser.STANDARD, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Use_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_use_statement; }
	}

	public final Use_statementContext use_statement() throws RecognitionException {
		Use_statementContext _localctx = new Use_statementContext(_ctx, getState());
		enterRule(_localctx, 36, RULE_use_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1064);
			match(USE);
			setState(1072);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,55,_ctx) ) {
			case 1:
				{
				setState(1066); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1065);
					separator();
					}
					}
					setState(1068); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1070);
				match(GLOBAL);
				}
				break;
			}
			setState(1075); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1074);
				separator();
				}
				}
				setState(1077); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1143);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case AFTER:
				{
				setState(1079);
				match(AFTER);
				setState(1087);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,58,_ctx) ) {
				case 1:
					{
					setState(1081); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1080);
						separator();
						}
						}
						setState(1083); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1085);
					match(STANDARD);
					}
					break;
				}
				setState(1090); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1089);
					separator();
					}
					}
					setState(1092); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1094);
				_la = _input.LA(1);
				if ( !(_la==ERROR || _la==EXCEPTION) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(1096); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1095);
					separator();
					}
					}
					setState(1098); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1100);
				match(PROCEDURE);
				setState(1108);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,62,_ctx) ) {
				case 1:
					{
					setState(1102); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1101);
						separator();
						}
						}
						setState(1104); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1106);
					match(ON);
					}
					break;
				}
				setState(1111); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1110);
					separator();
					}
					}
					setState(1113); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1115);
				use_on();
				setState(1119);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(1116);
					separator();
					}
					}
					setState(1121);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(1122);
				match(DOT_);
				setState(1126);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,65,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1123);
						separator();
						}
						} 
					}
					setState(1128);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,65,_ctx);
				}
				}
				break;
			case BEFORE:
				{
				setState(1129);
				match(BEFORE);
				setState(1131); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1130);
					separator();
					}
					}
					setState(1133); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1135);
				match(REPORTING);
				setState(1137); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1136);
					separator();
					}
					}
					setState(1139); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1141);
				group_data_name();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(1148);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(1145);
				separator();
				}
				}
				setState(1150);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1151);
			match(DOT_);
			setState(1155);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,70,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1152);
					separator();
					}
					} 
				}
				setState(1157);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,70,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Group_data_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Group_data_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_group_data_name; }
	}

	public final Group_data_nameContext group_data_name() throws RecognitionException {
		Group_data_nameContext _localctx = new Group_data_nameContext(_ctx, getState());
		enterRule(_localctx, 38, RULE_group_data_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1158);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Use_onContext extends ParserRuleContext {
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode INPUT() { return getToken(cobolParser.INPUT, 0); }
		public TerminalNode OUTPUT() { return getToken(cobolParser.OUTPUT, 0); }
		public TerminalNode I_O() { return getToken(cobolParser.I_O, 0); }
		public TerminalNode EXTEND() { return getToken(cobolParser.EXTEND, 0); }
		public Use_onContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_use_on; }
	}

	public final Use_onContext use_on() throws RecognitionException {
		Use_onContext _localctx = new Use_onContext(_ctx, getState());
		enterRule(_localctx, 40, RULE_use_on);
		int _la;
		try {
			int _alt;
			setState(1177);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(1160);
				file_name();
				setState(1170);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,72,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1162); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1161);
							separator();
							}
							}
							setState(1164); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(1166);
						file_name();
						}
						} 
					}
					setState(1172);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,72,_ctx);
				}
				}
				break;
			case INPUT:
				enterOuterAlt(_localctx, 2);
				{
				setState(1173);
				match(INPUT);
				}
				break;
			case OUTPUT:
				enterOuterAlt(_localctx, 3);
				{
				setState(1174);
				match(OUTPUT);
				}
				break;
			case I_O:
				enterOuterAlt(_localctx, 4);
				{
				setState(1175);
				match(I_O);
				}
				break;
			case EXTEND:
				enterOuterAlt(_localctx, 5);
				{
				setState(1176);
				match(EXTEND);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Section_headerContext extends ParserRuleContext {
		public Section_nameContext section_name() {
			return getRuleContext(Section_nameContext.class,0);
		}
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Segment_numberContext segment_number() {
			return getRuleContext(Segment_numberContext.class,0);
		}
		public Section_headerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_section_header; }
	}

	public final Section_headerContext section_header() throws RecognitionException {
		Section_headerContext _localctx = new Section_headerContext(_ctx, getState());
		enterRule(_localctx, 42, RULE_section_header);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1179);
			section_name();
			setState(1181); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1180);
				separator();
				}
				}
				setState(1183); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1185);
			match(SECTION);
			setState(1193);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,76,_ctx) ) {
			case 1:
				{
				setState(1187); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1186);
					separator();
					}
					}
					setState(1189); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1191);
				segment_number();
				}
				break;
			}
			setState(1198);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(1195);
				separator();
				}
				}
				setState(1200);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1201);
			match(DOT_);
			setState(1205);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,78,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1202);
					separator();
					}
					} 
				}
				setState(1207);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,78,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Paragraph_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Paragraph_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_paragraph_name; }
	}

	public final Paragraph_nameContext paragraph_name() throws RecognitionException {
		Paragraph_nameContext _localctx = new Paragraph_nameContext(_ctx, getState());
		enterRule(_localctx, 44, RULE_paragraph_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1208);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Section_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Section_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_section_name; }
	}

	public final Section_nameContext section_name() throws RecognitionException {
		Section_nameContext _localctx = new Section_nameContext(_ctx, getState());
		enterRule(_localctx, 46, RULE_section_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1210);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class UsingContext extends ParserRuleContext {
		public TerminalNode USING() { return getToken(cobolParser.USING, 0); }
		public List<Qualified_data_itemContext> qualified_data_item() {
			return getRuleContexts(Qualified_data_itemContext.class);
		}
		public Qualified_data_itemContext qualified_data_item(int i) {
			return getRuleContext(Qualified_data_itemContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public UsingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_using; }
	}

	public final UsingContext using() throws RecognitionException {
		UsingContext _localctx = new UsingContext(_ctx, getState());
		enterRule(_localctx, 48, RULE_using);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1212);
			match(USING);
			setState(1214); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1213);
				separator();
				}
				}
				setState(1216); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1218);
			qualified_data_item();
			setState(1228);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,81,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1220); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1219);
						separator();
						}
						}
						setState(1222); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1224);
					qualified_data_item();
					}
					} 
				}
				setState(1230);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,81,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class GivingContext extends ParserRuleContext {
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public GivingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_giving; }
	}

	public final GivingContext giving() throws RecognitionException {
		GivingContext _localctx = new GivingContext(_ctx, getState());
		enterRule(_localctx, 50, RULE_giving);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1231);
			match(GIVING);
			setState(1233); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1232);
				separator();
				}
				}
				setState(1235); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1237);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Procedure_test_lineContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Logic_expressionContext logic_expression() {
			return getRuleContext(Logic_expressionContext.class,0);
		}
		public Procedure_test_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_procedure_test_line; }
	}

	public final Procedure_test_lineContext procedure_test_line() throws RecognitionException {
		Procedure_test_lineContext _localctx = new Procedure_test_lineContext(_ctx, getState());
		enterRule(_localctx, 52, RULE_procedure_test_line);
		int _la;
		try {
			setState(1258);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,85,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1239);
				arithmetic_expression(0);
				setState(1243);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(1240);
					separator();
					}
					}
					setState(1245);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(1246);
				match(DOT_);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1248);
				logic_expression(0);
				setState(1252);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(1249);
					separator();
					}
					}
					setState(1254);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(1255);
				match(DOT_);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1257);
				separator();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class StatementContext extends ParserRuleContext {
		public Accept_statementContext accept_statement() {
			return getRuleContext(Accept_statementContext.class,0);
		}
		public Add_statementContext add_statement() {
			return getRuleContext(Add_statementContext.class,0);
		}
		public Alter_statementContext alter_statement() {
			return getRuleContext(Alter_statementContext.class,0);
		}
		public Call_statementContext call_statement() {
			return getRuleContext(Call_statementContext.class,0);
		}
		public Cancel_statementContext cancel_statement() {
			return getRuleContext(Cancel_statementContext.class,0);
		}
		public Close_statementContext close_statement() {
			return getRuleContext(Close_statementContext.class,0);
		}
		public Compute_statementContext compute_statement() {
			return getRuleContext(Compute_statementContext.class,0);
		}
		public Continue_statementContext continue_statement() {
			return getRuleContext(Continue_statementContext.class,0);
		}
		public Delete_statementContext delete_statement() {
			return getRuleContext(Delete_statementContext.class,0);
		}
		public Display_statementContext display_statement() {
			return getRuleContext(Display_statementContext.class,0);
		}
		public Divide_statementContext divide_statement() {
			return getRuleContext(Divide_statementContext.class,0);
		}
		public Evaluate_statementContext evaluate_statement() {
			return getRuleContext(Evaluate_statementContext.class,0);
		}
		public Exit_statementContext exit_statement() {
			return getRuleContext(Exit_statementContext.class,0);
		}
		public Exit_program_statementContext exit_program_statement() {
			return getRuleContext(Exit_program_statementContext.class,0);
		}
		public Generate_statementContext generate_statement() {
			return getRuleContext(Generate_statementContext.class,0);
		}
		public Go_to_statementContext go_to_statement() {
			return getRuleContext(Go_to_statementContext.class,0);
		}
		public If_statementContext if_statement() {
			return getRuleContext(If_statementContext.class,0);
		}
		public Initialize_statementContext initialize_statement() {
			return getRuleContext(Initialize_statementContext.class,0);
		}
		public Initiate_statementContext initiate_statement() {
			return getRuleContext(Initiate_statementContext.class,0);
		}
		public Inspect_statementContext inspect_statement() {
			return getRuleContext(Inspect_statementContext.class,0);
		}
		public Merge_statementContext merge_statement() {
			return getRuleContext(Merge_statementContext.class,0);
		}
		public Move_statementContext move_statement() {
			return getRuleContext(Move_statementContext.class,0);
		}
		public Multiply_statementContext multiply_statement() {
			return getRuleContext(Multiply_statementContext.class,0);
		}
		public Open_statementContext open_statement() {
			return getRuleContext(Open_statementContext.class,0);
		}
		public Perform_statementContext perform_statement() {
			return getRuleContext(Perform_statementContext.class,0);
		}
		public Read_statementContext read_statement() {
			return getRuleContext(Read_statementContext.class,0);
		}
		public Record_statementContext record_statement() {
			return getRuleContext(Record_statementContext.class,0);
		}
		public Release_statementContext release_statement() {
			return getRuleContext(Release_statementContext.class,0);
		}
		public Return_statementContext return_statement() {
			return getRuleContext(Return_statementContext.class,0);
		}
		public Rewrite_statementContext rewrite_statement() {
			return getRuleContext(Rewrite_statementContext.class,0);
		}
		public StatementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_statement; }
	}

	public final StatementContext statement() throws RecognitionException {
		StatementContext _localctx = new StatementContext(_ctx, getState());
		enterRule(_localctx, 54, RULE_statement);
		try {
			setState(1290);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,86,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1260);
				accept_statement();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1261);
				add_statement();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1262);
				alter_statement();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(1263);
				call_statement();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(1264);
				cancel_statement();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(1265);
				close_statement();
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(1266);
				compute_statement();
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(1267);
				continue_statement();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(1268);
				delete_statement();
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(1269);
				display_statement();
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(1270);
				divide_statement();
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(1271);
				evaluate_statement();
				}
				break;
			case 13:
				enterOuterAlt(_localctx, 13);
				{
				setState(1272);
				exit_statement();
				}
				break;
			case 14:
				enterOuterAlt(_localctx, 14);
				{
				setState(1273);
				exit_program_statement();
				}
				break;
			case 15:
				enterOuterAlt(_localctx, 15);
				{
				setState(1274);
				generate_statement();
				}
				break;
			case 16:
				enterOuterAlt(_localctx, 16);
				{
				setState(1275);
				go_to_statement();
				}
				break;
			case 17:
				enterOuterAlt(_localctx, 17);
				{
				setState(1276);
				if_statement();
				}
				break;
			case 18:
				enterOuterAlt(_localctx, 18);
				{
				setState(1277);
				initialize_statement();
				}
				break;
			case 19:
				enterOuterAlt(_localctx, 19);
				{
				setState(1278);
				initiate_statement();
				}
				break;
			case 20:
				enterOuterAlt(_localctx, 20);
				{
				setState(1279);
				inspect_statement();
				}
				break;
			case 21:
				enterOuterAlt(_localctx, 21);
				{
				setState(1280);
				merge_statement();
				}
				break;
			case 22:
				enterOuterAlt(_localctx, 22);
				{
				setState(1281);
				move_statement();
				}
				break;
			case 23:
				enterOuterAlt(_localctx, 23);
				{
				setState(1282);
				multiply_statement();
				}
				break;
			case 24:
				enterOuterAlt(_localctx, 24);
				{
				setState(1283);
				open_statement();
				}
				break;
			case 25:
				enterOuterAlt(_localctx, 25);
				{
				setState(1284);
				perform_statement();
				}
				break;
			case 26:
				enterOuterAlt(_localctx, 26);
				{
				setState(1285);
				read_statement();
				}
				break;
			case 27:
				enterOuterAlt(_localctx, 27);
				{
				setState(1286);
				record_statement();
				}
				break;
			case 28:
				enterOuterAlt(_localctx, 28);
				{
				setState(1287);
				release_statement();
				}
				break;
			case 29:
				enterOuterAlt(_localctx, 29);
				{
				setState(1288);
				return_statement();
				}
				break;
			case 30:
				enterOuterAlt(_localctx, 30);
				{
				setState(1289);
				rewrite_statement();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rewrite_statementContext extends ParserRuleContext {
		public TerminalNode REWRITE() { return getToken(cobolParser.REWRITE, 0); }
		public Rewrite_rec_nameContext rewrite_rec_name() {
			return getRuleContext(Rewrite_rec_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Src_itemContext src_item() {
			return getRuleContext(Src_itemContext.class,0);
		}
		public TerminalNode ALLOWING() { return getToken(cobolParser.ALLOWING, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public Invalid_key_variantsContext invalid_key_variants() {
			return getRuleContext(Invalid_key_variantsContext.class,0);
		}
		public TerminalNode END_REWRITE() { return getToken(cobolParser.END_REWRITE, 0); }
		public TerminalNode OTHERS() { return getToken(cobolParser.OTHERS, 0); }
		public Rewrite_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rewrite_statement; }
	}

	public final Rewrite_statementContext rewrite_statement() throws RecognitionException {
		Rewrite_statementContext _localctx = new Rewrite_statementContext(_ctx, getState());
		enterRule(_localctx, 56, RULE_rewrite_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1292);
			match(REWRITE);
			setState(1294); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1293);
				separator();
				}
				}
				setState(1296); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1298);
			rewrite_rec_name();
			setState(1312);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,90,_ctx) ) {
			case 1:
				{
				setState(1300); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1299);
					separator();
					}
					}
					setState(1302); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1304);
				match(FROM);
				setState(1306); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1305);
					separator();
					}
					}
					setState(1308); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1310);
				src_item();
				}
				break;
			}
			setState(1335);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,95,_ctx) ) {
			case 1:
				{
				setState(1315); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1314);
					separator();
					}
					}
					setState(1317); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1319);
				match(ALLOWING);
				setState(1321); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1320);
					separator();
					}
					}
					setState(1323); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1325);
				match(NO);
				setState(1333);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,94,_ctx) ) {
				case 1:
					{
					setState(1327); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1326);
						separator();
						}
						}
						setState(1329); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1331);
					match(OTHERS);
					}
					break;
				}
				}
				break;
			}
			setState(1344);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,97,_ctx) ) {
			case 1:
				{
				setState(1338); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1337);
					separator();
					}
					}
					setState(1340); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1342);
				invalid_key_variants();
				}
				break;
			}
			setState(1353);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,99,_ctx) ) {
			case 1:
				{
				setState(1347); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1346);
					separator();
					}
					}
					setState(1349); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1351);
				match(END_REWRITE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rewrite_rec_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Rewrite_rec_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rewrite_rec_name; }
	}

	public final Rewrite_rec_nameContext rewrite_rec_name() throws RecognitionException {
		Rewrite_rec_nameContext _localctx = new Rewrite_rec_nameContext(_ctx, getState());
		enterRule(_localctx, 58, RULE_rewrite_rec_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1355);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Return_statementContext extends ParserRuleContext {
		public TerminalNode RETURN() { return getToken(cobolParser.RETURN, 0); }
		public Smrg_fileContext smrg_file() {
			return getRuleContext(Smrg_fileContext.class,0);
		}
		public List<At_endContext> at_end() {
			return getRuleContexts(At_endContext.class);
		}
		public At_endContext at_end(int i) {
			return getRuleContext(At_endContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode INTO() { return getToken(cobolParser.INTO, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public TerminalNode END_RETURN() { return getToken(cobolParser.END_RETURN, 0); }
		public Return_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_return_statement; }
	}

	public final Return_statementContext return_statement() throws RecognitionException {
		Return_statementContext _localctx = new Return_statementContext(_ctx, getState());
		enterRule(_localctx, 60, RULE_return_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1357);
			match(RETURN);
			setState(1359); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1358);
				separator();
				}
				}
				setState(1361); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1363);
			smrg_file();
			setState(1371);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,102,_ctx) ) {
			case 1:
				{
				setState(1365); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1364);
					separator();
					}
					}
					setState(1367); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1369);
				match(RECORD);
				}
				break;
			}
			setState(1386);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,105,_ctx) ) {
			case 1:
				{
				setState(1374); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1373);
					separator();
					}
					}
					setState(1376); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1378);
				match(INTO);
				setState(1380); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1379);
					separator();
					}
					}
					setState(1382); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1384);
				dest_item();
				}
				break;
			}
			setState(1389); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1388);
				separator();
				}
				}
				setState(1391); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1393);
			at_end();
			setState(1407);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,109,_ctx) ) {
			case 1:
				{
				setState(1395); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1394);
					separator();
					}
					}
					setState(1397); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1399);
				match(NOT);
				setState(1401); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1400);
					separator();
					}
					}
					setState(1403); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1405);
				at_end();
				}
				break;
			}
			setState(1416);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,111,_ctx) ) {
			case 1:
				{
				setState(1410); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1409);
					separator();
					}
					}
					setState(1412); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1414);
				match(END_RETURN);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Smrg_fileContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Smrg_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_smrg_file; }
	}

	public final Smrg_fileContext smrg_file() throws RecognitionException {
		Smrg_fileContext _localctx = new Smrg_fileContext(_ctx, getState());
		enterRule(_localctx, 62, RULE_smrg_file);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1418);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Release_statementContext extends ParserRuleContext {
		public TerminalNode RELEASE() { return getToken(cobolParser.RELEASE, 0); }
		public Release_recContext release_rec() {
			return getRuleContext(Release_recContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Release_src_areaContext release_src_area() {
			return getRuleContext(Release_src_areaContext.class,0);
		}
		public Release_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_release_statement; }
	}

	public final Release_statementContext release_statement() throws RecognitionException {
		Release_statementContext _localctx = new Release_statementContext(_ctx, getState());
		enterRule(_localctx, 64, RULE_release_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1420);
			match(RELEASE);
			setState(1422); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1421);
				separator();
				}
				}
				setState(1424); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1426);
			release_rec();
			setState(1440);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,115,_ctx) ) {
			case 1:
				{
				setState(1428); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1427);
					separator();
					}
					}
					setState(1430); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1432);
				match(FROM);
				setState(1434); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1433);
					separator();
					}
					}
					setState(1436); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1438);
				release_src_area();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Release_src_areaContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public Release_src_areaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_release_src_area; }
	}

	public final Release_src_areaContext release_src_area() throws RecognitionException {
		Release_src_areaContext _localctx = new Release_src_areaContext(_ctx, getState());
		enterRule(_localctx, 66, RULE_release_src_area);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1442);
			identifier();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Release_recContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Release_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_release_rec; }
	}

	public final Release_recContext release_rec() throws RecognitionException {
		Release_recContext _localctx = new Release_recContext(_ctx, getState());
		enterRule(_localctx, 68, RULE_release_rec);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1444);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_statementContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode DEPENDENCY() { return getToken(cobolParser.DEPENDENCY, 0); }
		public Path_nameContext path_name() {
			return getRuleContext(Path_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode TYPE() { return getToken(cobolParser.TYPE, 0); }
		public Relation_typeContext relation_type() {
			return getRuleContext(Relation_typeContext.class,0);
		}
		public TerminalNode DICTIONARY() { return getToken(cobolParser.DICTIONARY, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public Record_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_statement; }
	}

	public final Record_statementContext record_statement() throws RecognitionException {
		Record_statementContext _localctx = new Record_statementContext(_ctx, getState());
		enterRule(_localctx, 70, RULE_record_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1446);
			match(RECORD);
			setState(1448); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1447);
				separator();
				}
				}
				setState(1450); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1452);
			match(DEPENDENCY);
			setState(1454); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1453);
				separator();
				}
				}
				setState(1456); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1458);
			path_name();
			setState(1481);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,122,_ctx) ) {
			case 1:
				{
				setState(1460); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1459);
					separator();
					}
					}
					setState(1462); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1464);
				match(TYPE);
				setState(1472);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,120,_ctx) ) {
				case 1:
					{
					setState(1466); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1465);
						separator();
						}
						}
						setState(1468); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1470);
					match(IS);
					}
					break;
				}
				setState(1475); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1474);
					separator();
					}
					}
					setState(1477); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1479);
				relation_type();
				}
				break;
			}
			setState(1498);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,126,_ctx) ) {
			case 1:
				{
				setState(1484); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1483);
					separator();
					}
					}
					setState(1486); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1494);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IN) {
					{
					setState(1488);
					match(IN);
					setState(1490); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1489);
						separator();
						}
						}
						setState(1492); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(1496);
				match(DICTIONARY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Relation_typeContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Relation_typeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_relation_type; }
	}

	public final Relation_typeContext relation_type() throws RecognitionException {
		Relation_typeContext _localctx = new Relation_typeContext(_ctx, getState());
		enterRule(_localctx, 72, RULE_relation_type);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1500);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Path_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Path_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_path_name; }
	}

	public final Path_nameContext path_name() throws RecognitionException {
		Path_nameContext _localctx = new Path_nameContext(_ctx, getState());
		enterRule(_localctx, 74, RULE_path_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1502);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Read_statementContext extends ParserRuleContext {
		public TerminalNode READ() { return getToken(cobolParser.READ, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode INTO() { return getToken(cobolParser.INTO, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public Read_optionsContext read_options() {
			return getRuleContext(Read_optionsContext.class,0);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Key_nameContext key_name() {
			return getRuleContext(Key_nameContext.class,0);
		}
		public TerminalNode END_READ() { return getToken(cobolParser.END_READ, 0); }
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode PREVIOUS() { return getToken(cobolParser.PREVIOUS, 0); }
		public TerminalNode PRIOR() { return getToken(cobolParser.PRIOR, 0); }
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public Invalid_key_variantsContext invalid_key_variants() {
			return getRuleContext(Invalid_key_variantsContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Read_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_read_statement; }
	}

	public final Read_statementContext read_statement() throws RecognitionException {
		Read_statementContext _localctx = new Read_statementContext(_ctx, getState());
		enterRule(_localctx, 76, RULE_read_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1504);
			match(READ);
			setState(1506); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1505);
				separator();
				}
				}
				setState(1508); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1510);
			file_name();
			setState(1518);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,129,_ctx) ) {
			case 1:
				{
				setState(1512); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1511);
					separator();
					}
					}
					setState(1514); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1516);
				_la = _input.LA(1);
				if ( !(_la==NEXT || _la==PREVIOUS || _la==PRIOR) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			}
			setState(1527);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,131,_ctx) ) {
			case 1:
				{
				setState(1521); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1520);
					separator();
					}
					}
					setState(1523); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1525);
				match(RECORD);
				}
				break;
			}
			setState(1542);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,134,_ctx) ) {
			case 1:
				{
				setState(1530); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1529);
					separator();
					}
					}
					setState(1532); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1534);
				match(INTO);
				setState(1536); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1535);
					separator();
					}
					}
					setState(1538); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1540);
				dest_item();
				}
				break;
			}
			setState(1604);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,147,_ctx) ) {
			case 1:
				{
				setState(1545); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1544);
					separator();
					}
					}
					setState(1547); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1549);
				read_options();
				setState(1572);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,140,_ctx) ) {
				case 1:
					{
					setState(1551); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1550);
						separator();
						}
						}
						setState(1553); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1555);
					match(KEY);
					setState(1563);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,138,_ctx) ) {
					case 1:
						{
						setState(1557); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1556);
							separator();
							}
							}
							setState(1559); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(1561);
						match(IS);
						}
						break;
					}
					setState(1566); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1565);
						separator();
						}
						}
						setState(1568); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1570);
					key_name();
					}
					break;
				}
				}
				break;
			case 2:
				{
				setState(1575); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1574);
					separator();
					}
					}
					setState(1577); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1579);
				match(KEY);
				setState(1587);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,143,_ctx) ) {
				case 1:
					{
					setState(1581); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1580);
						separator();
						}
						}
						setState(1583); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1585);
					match(IS);
					}
					break;
				}
				setState(1590); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1589);
					separator();
					}
					}
					setState(1592); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1594);
				key_name();
				setState(1602);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,146,_ctx) ) {
				case 1:
					{
					setState(1596); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1595);
						separator();
						}
						}
						setState(1598); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1600);
					read_options();
					}
					break;
				}
				}
				break;
			}
			setState(1615);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,150,_ctx) ) {
			case 1:
				{
				setState(1607); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1606);
					separator();
					}
					}
					setState(1609); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1613);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,149,_ctx) ) {
				case 1:
					{
					setState(1611);
					at_end_variants();
					}
					break;
				case 2:
					{
					setState(1612);
					invalid_key_variants();
					}
					break;
				}
				}
				break;
			}
			setState(1624);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,152,_ctx) ) {
			case 1:
				{
				setState(1618); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1617);
					separator();
					}
					}
					setState(1620); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1622);
				match(END_READ);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Read_optionsContext extends ParserRuleContext {
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode REGARDLESS() { return getToken(cobolParser.REGARDLESS, 0); }
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public TerminalNode ALLOWING() { return getToken(cobolParser.ALLOWING, 0); }
		public TerminalNode UPDATERS() { return getToken(cobolParser.UPDATERS, 0); }
		public TerminalNode READERS() { return getToken(cobolParser.READERS, 0); }
		public TerminalNode OTHERS() { return getToken(cobolParser.OTHERS, 0); }
		public Read_optionsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_read_options; }
	}

	public final Read_optionsContext read_options() throws RecognitionException {
		Read_optionsContext _localctx = new Read_optionsContext(_ctx, getState());
		enterRule(_localctx, 78, RULE_read_options);
		int _la;
		try {
			setState(1682);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LOCK:
			case NO:
			case WITH:
				enterOuterAlt(_localctx, 1);
				{
				setState(1632);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1626);
					match(WITH);
					setState(1628); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1627);
						separator();
						}
						}
						setState(1630); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(1640);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NO) {
					{
					setState(1634);
					match(NO);
					setState(1636); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1635);
						separator();
						}
						}
						setState(1638); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(1642);
				match(LOCK);
				}
				break;
			case REGARDLESS:
				enterOuterAlt(_localctx, 2);
				{
				setState(1643);
				match(REGARDLESS);
				setState(1651);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,158,_ctx) ) {
				case 1:
					{
					setState(1645); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1644);
						separator();
						}
						}
						setState(1647); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1649);
					match(OF);
					}
					break;
				}
				setState(1660);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,160,_ctx) ) {
				case 1:
					{
					setState(1654); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1653);
						separator();
						}
						}
						setState(1656); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1658);
					match(LOCK);
					}
					break;
				}
				}
				break;
			case ALLOWING:
				enterOuterAlt(_localctx, 3);
				{
				setState(1662);
				match(ALLOWING);
				setState(1664); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1663);
					separator();
					}
					}
					setState(1666); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1680);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case UPDATERS:
					{
					setState(1668);
					match(UPDATERS);
					}
					break;
				case READERS:
					{
					setState(1669);
					match(READERS);
					}
					break;
				case NO:
					{
					setState(1670);
					match(NO);
					setState(1678);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,163,_ctx) ) {
					case 1:
						{
						setState(1672); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1671);
							separator();
							}
							}
							setState(1674); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(1676);
						match(OTHERS);
						}
						break;
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Perform_statementContext extends ParserRuleContext {
		public TerminalNode PERFORM() { return getToken(cobolParser.PERFORM, 0); }
		public First_procContext first_proc() {
			return getRuleContext(First_procContext.class,0);
		}
		public TerminalNode END_PERFORM() { return getToken(cobolParser.END_PERFORM, 0); }
		public Perform_timesContext perform_times() {
			return getRuleContext(Perform_timesContext.class,0);
		}
		public Perform_untilContext perform_until() {
			return getRuleContext(Perform_untilContext.class,0);
		}
		public Perform_varyingContext perform_varying() {
			return getRuleContext(Perform_varyingContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public End_procContext end_proc() {
			return getRuleContext(End_procContext.class,0);
		}
		public List<StatementContext> statement() {
			return getRuleContexts(StatementContext.class);
		}
		public StatementContext statement(int i) {
			return getRuleContext(StatementContext.class,i);
		}
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public Perform_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_perform_statement; }
	}

	public final Perform_statementContext perform_statement() throws RecognitionException {
		Perform_statementContext _localctx = new Perform_statementContext(_ctx, getState());
		enterRule(_localctx, 80, RULE_perform_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1684);
			match(PERFORM);
			setState(1706);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,170,_ctx) ) {
			case 1:
				{
				setState(1686); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1685);
					separator();
					}
					}
					setState(1688); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1690);
				first_proc();
				setState(1704);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,169,_ctx) ) {
				case 1:
					{
					setState(1692); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1691);
						separator();
						}
						}
						setState(1694); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1696);
					_la = _input.LA(1);
					if ( !(_la==THROUGH || _la==THRU) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(1698); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1697);
						separator();
						}
						}
						setState(1700); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1702);
					end_proc();
					}
					break;
				}
				}
				break;
			}
			setState(1718);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,173,_ctx) ) {
			case 1:
				{
				setState(1709); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1708);
					separator();
					}
					}
					setState(1711); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1716);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,172,_ctx) ) {
				case 1:
					{
					setState(1713);
					perform_times();
					}
					break;
				case 2:
					{
					setState(1714);
					perform_until();
					}
					break;
				case 3:
					{
					setState(1715);
					perform_varying();
					}
					break;
				}
				}
				break;
			}
			setState(1738);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,177,_ctx) ) {
			case 1:
				{
				setState(1727); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(1721); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1720);
							separator();
							}
							}
							setState(1723); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(1725);
						statement();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(1729); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,175,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				setState(1732); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1731);
					separator();
					}
					}
					setState(1734); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(1736);
				match(END_PERFORM);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Perform_timesContext extends ParserRuleContext {
		public TerminalNode TIMES() { return getToken(cobolParser.TIMES, 0); }
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Perform_timesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_perform_times; }
	}

	public final Perform_timesContext perform_times() throws RecognitionException {
		Perform_timesContext _localctx = new Perform_timesContext(_ctx, getState());
		enterRule(_localctx, 82, RULE_perform_times);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1742);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				{
				setState(1740);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				{
				setState(1741);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(1745); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1744);
				separator();
				}
				}
				setState(1747); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1749);
			match(TIMES);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class With_testContext extends ParserRuleContext {
		public TerminalNode TEST() { return getToken(cobolParser.TEST, 0); }
		public TerminalNode BEFORE() { return getToken(cobolParser.BEFORE, 0); }
		public TerminalNode AFTER() { return getToken(cobolParser.AFTER, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public With_testContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_with_test; }
	}

	public final With_testContext with_test() throws RecognitionException {
		With_testContext _localctx = new With_testContext(_ctx, getState());
		enterRule(_localctx, 84, RULE_with_test);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1757);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WITH) {
				{
				setState(1751);
				match(WITH);
				setState(1753); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1752);
					separator();
					}
					}
					setState(1755); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(1759);
			match(TEST);
			setState(1761); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1760);
				separator();
				}
				}
				setState(1763); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1765);
			_la = _input.LA(1);
			if ( !(_la==AFTER || _la==BEFORE) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Perform_untilContext extends ParserRuleContext {
		public TerminalNode UNTIL() { return getToken(cobolParser.UNTIL, 0); }
		public Logic_expressionContext logic_expression() {
			return getRuleContext(Logic_expressionContext.class,0);
		}
		public With_testContext with_test() {
			return getRuleContext(With_testContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Perform_untilContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_perform_until; }
	}

	public final Perform_untilContext perform_until() throws RecognitionException {
		Perform_untilContext _localctx = new Perform_untilContext(_ctx, getState());
		enterRule(_localctx, 86, RULE_perform_until);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1773);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WITH || _la==TEST) {
				{
				setState(1767);
				with_test();
				setState(1769); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1768);
					separator();
					}
					}
					setState(1771); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(1775);
			match(UNTIL);
			setState(1777); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1776);
				separator();
				}
				}
				setState(1779); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1781);
			logic_expression(0);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Perform_varyingContext extends ParserRuleContext {
		public TerminalNode VARYING() { return getToken(cobolParser.VARYING, 0); }
		public List<Perform_rangeContext> perform_range() {
			return getRuleContexts(Perform_rangeContext.class);
		}
		public Perform_rangeContext perform_range(int i) {
			return getRuleContext(Perform_rangeContext.class,i);
		}
		public List<TerminalNode> UNTIL() { return getTokens(cobolParser.UNTIL); }
		public TerminalNode UNTIL(int i) {
			return getToken(cobolParser.UNTIL, i);
		}
		public List<Logic_expressionContext> logic_expression() {
			return getRuleContexts(Logic_expressionContext.class);
		}
		public Logic_expressionContext logic_expression(int i) {
			return getRuleContext(Logic_expressionContext.class,i);
		}
		public With_testContext with_test() {
			return getRuleContext(With_testContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> AFTER() { return getTokens(cobolParser.AFTER); }
		public TerminalNode AFTER(int i) {
			return getToken(cobolParser.AFTER, i);
		}
		public Perform_varyingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_perform_varying; }
	}

	public final Perform_varyingContext perform_varying() throws RecognitionException {
		Perform_varyingContext _localctx = new Perform_varyingContext(_ctx, getState());
		enterRule(_localctx, 88, RULE_perform_varying);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1789);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WITH || _la==TEST) {
				{
				setState(1783);
				with_test();
				setState(1785); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1784);
					separator();
					}
					}
					setState(1787); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(1791);
			match(VARYING);
			setState(1793); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1792);
				separator();
				}
				}
				setState(1795); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1797);
			perform_range();
			setState(1799); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1798);
				separator();
				}
				}
				setState(1801); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1803);
			match(UNTIL);
			setState(1805); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1804);
				separator();
				}
				}
				setState(1807); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1809);
			logic_expression(0);
			setState(1837);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,195,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1811); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1810);
						separator();
						}
						}
						setState(1813); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1815);
					match(AFTER);
					setState(1817); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1816);
						separator();
						}
						}
						setState(1819); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1821);
					perform_range();
					setState(1823); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1822);
						separator();
						}
						}
						setState(1825); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1827);
					match(UNTIL);
					setState(1829); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1828);
						separator();
						}
						}
						setState(1831); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1833);
					logic_expression(0);
					}
					} 
				}
				setState(1839);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,195,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Perform_rangeContext extends ParserRuleContext {
		public Perform_varContext perform_var() {
			return getRuleContext(Perform_varContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Perform_initContext perform_init() {
			return getRuleContext(Perform_initContext.class,0);
		}
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public Perform_incremContext perform_increm() {
			return getRuleContext(Perform_incremContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Perform_rangeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_perform_range; }
	}

	public final Perform_rangeContext perform_range() throws RecognitionException {
		Perform_rangeContext _localctx = new Perform_rangeContext(_ctx, getState());
		enterRule(_localctx, 90, RULE_perform_range);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1840);
			perform_var();
			setState(1842); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1841);
				separator();
				}
				}
				setState(1844); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1846);
			match(FROM);
			setState(1848); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1847);
				separator();
				}
				}
				setState(1850); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1852);
			perform_init();
			setState(1854); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1853);
				separator();
				}
				}
				setState(1856); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1858);
			match(BY);
			setState(1860); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1859);
				separator();
				}
				}
				setState(1862); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(1864);
			perform_increm();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Perform_incremContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Perform_incremContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_perform_increm; }
	}

	public final Perform_incremContext perform_increm() throws RecognitionException {
		Perform_incremContext _localctx = new Perform_incremContext(_ctx, getState());
		enterRule(_localctx, 92, RULE_perform_increm);
		try {
			setState(1868);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(1866);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(1867);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Perform_initContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Perform_initContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_perform_init; }
	}

	public final Perform_initContext perform_init() throws RecognitionException {
		Perform_initContext _localctx = new Perform_initContext(_ctx, getState());
		enterRule(_localctx, 94, RULE_perform_init);
		try {
			setState(1872);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(1870);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(1871);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Perform_varContext extends ParserRuleContext {
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public Perform_varContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_perform_var; }
	}

	public final Perform_varContext perform_var() throws RecognitionException {
		Perform_varContext _localctx = new Perform_varContext(_ctx, getState());
		enterRule(_localctx, 96, RULE_perform_var);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1874);
			identifier_result();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Open_statementContext extends ParserRuleContext {
		public TerminalNode OPEN() { return getToken(cobolParser.OPEN, 0); }
		public List<Open_definitionContext> open_definition() {
			return getRuleContexts(Open_definitionContext.class);
		}
		public Open_definitionContext open_definition(int i) {
			return getRuleContext(Open_definitionContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> OUTPUT() { return getTokens(cobolParser.OUTPUT); }
		public TerminalNode OUTPUT(int i) {
			return getToken(cobolParser.OUTPUT, i);
		}
		public List<TerminalNode> EXTEND() { return getTokens(cobolParser.EXTEND); }
		public TerminalNode EXTEND(int i) {
			return getToken(cobolParser.EXTEND, i);
		}
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public List<TerminalNode> NO() { return getTokens(cobolParser.NO); }
		public TerminalNode NO(int i) {
			return getToken(cobolParser.NO, i);
		}
		public List<TerminalNode> REWIND() { return getTokens(cobolParser.REWIND); }
		public TerminalNode REWIND(int i) {
			return getToken(cobolParser.REWIND, i);
		}
		public List<TerminalNode> WITH() { return getTokens(cobolParser.WITH); }
		public TerminalNode WITH(int i) {
			return getToken(cobolParser.WITH, i);
		}
		public Open_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_open_statement; }
	}

	public final Open_statementContext open_statement() throws RecognitionException {
		Open_statementContext _localctx = new Open_statementContext(_ctx, getState());
		enterRule(_localctx, 98, RULE_open_statement);
		int _la;
		try {
			int _alt;
			setState(1932);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,213,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1876);
				match(OPEN);
				setState(1884); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(1878); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1877);
							separator();
							}
							}
							setState(1880); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(1882);
						open_definition();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(1886); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,203,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1888);
				match(OPEN);
				setState(1928); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(1890); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1889);
							separator();
							}
							}
							setState(1892); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(1894);
						_la = _input.LA(1);
						if ( !(_la==EXTEND || _la==OUTPUT) ) {
						_errHandler.recoverInline(this);
						}
						else {
							if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
							_errHandler.reportMatch(this);
							consume();
						}
						setState(1924); 
						_errHandler.sync(this);
						_alt = 1;
						do {
							switch (_alt) {
							case 1:
								{
								{
								setState(1896); 
								_errHandler.sync(this);
								_la = _input.LA(1);
								do {
									{
									{
									setState(1895);
									separator();
									}
									}
									setState(1898); 
									_errHandler.sync(this);
									_la = _input.LA(1);
								} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
								setState(1900);
								file_name();
								setState(1922);
								_errHandler.sync(this);
								switch ( getInterpreter().adaptivePredict(_input,210,_ctx) ) {
								case 1:
									{
									setState(1902); 
									_errHandler.sync(this);
									_la = _input.LA(1);
									do {
										{
										{
										setState(1901);
										separator();
										}
										}
										setState(1904); 
										_errHandler.sync(this);
										_la = _input.LA(1);
									} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
									setState(1912);
									_errHandler.sync(this);
									_la = _input.LA(1);
									if (_la==WITH) {
										{
										setState(1906);
										match(WITH);
										setState(1908); 
										_errHandler.sync(this);
										_la = _input.LA(1);
										do {
											{
											{
											setState(1907);
											separator();
											}
											}
											setState(1910); 
											_errHandler.sync(this);
											_la = _input.LA(1);
										} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
										}
									}

									setState(1914);
									match(NO);
									setState(1916); 
									_errHandler.sync(this);
									_la = _input.LA(1);
									do {
										{
										{
										setState(1915);
										separator();
										}
										}
										setState(1918); 
										_errHandler.sync(this);
										_la = _input.LA(1);
									} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
									setState(1920);
									match(REWIND);
									}
									break;
								}
								}
								}
								break;
							default:
								throw new NoViableAltException(this);
							}
							setState(1926); 
							_errHandler.sync(this);
							_alt = getInterpreter().adaptivePredict(_input,211,_ctx);
						} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(1930); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,212,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Open_definitionContext extends ParserRuleContext {
		public TerminalNode INPUT() { return getToken(cobolParser.INPUT, 0); }
		public TerminalNode OUTPUT() { return getToken(cobolParser.OUTPUT, 0); }
		public TerminalNode EXTEND() { return getToken(cobolParser.EXTEND, 0); }
		public TerminalNode I_O() { return getToken(cobolParser.I_O, 0); }
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> NO() { return getTokens(cobolParser.NO); }
		public TerminalNode NO(int i) {
			return getToken(cobolParser.NO, i);
		}
		public List<TerminalNode> REWIND() { return getTokens(cobolParser.REWIND); }
		public TerminalNode REWIND(int i) {
			return getToken(cobolParser.REWIND, i);
		}
		public List<Open_file_attributesContext> open_file_attributes() {
			return getRuleContexts(Open_file_attributesContext.class);
		}
		public Open_file_attributesContext open_file_attributes(int i) {
			return getRuleContext(Open_file_attributesContext.class,i);
		}
		public List<TerminalNode> WITH() { return getTokens(cobolParser.WITH); }
		public TerminalNode WITH(int i) {
			return getToken(cobolParser.WITH, i);
		}
		public Open_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_open_definition; }
	}

	public final Open_definitionContext open_definition() throws RecognitionException {
		Open_definitionContext _localctx = new Open_definitionContext(_ctx, getState());
		enterRule(_localctx, 100, RULE_open_definition);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1934);
			_la = _input.LA(1);
			if ( !(((((_la - 162)) & ~0x3f) == 0 && ((1L << (_la - 162)) & ((1L << (EXTEND - 162)) | (1L << (INPUT - 162)) | (1L << (I_O - 162)))) != 0) || _la==OUTPUT) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(1973); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1936); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1935);
						separator();
						}
						}
						setState(1938); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(1940);
					file_name();
					setState(1962);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,219,_ctx) ) {
					case 1:
						{
						setState(1942); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1941);
							separator();
							}
							}
							setState(1944); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(1952);
						_errHandler.sync(this);
						_la = _input.LA(1);
						if (_la==WITH) {
							{
							setState(1946);
							match(WITH);
							setState(1948); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(1947);
								separator();
								}
								}
								setState(1950); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							}
						}

						setState(1954);
						match(NO);
						setState(1956); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1955);
							separator();
							}
							}
							setState(1958); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(1960);
						match(REWIND);
						}
						break;
					}
					setState(1971);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,221,_ctx) ) {
					case 1:
						{
						setState(1965); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1964);
							separator();
							}
							}
							setState(1967); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(1969);
						open_file_attributes();
						}
						break;
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1975); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,222,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Open_file_attributesContext extends ParserRuleContext {
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ALLOWING() { return getToken(cobolParser.ALLOWING, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode ALL() { return getToken(cobolParser.ALL, 0); }
		public TerminalNode READERS() { return getToken(cobolParser.READERS, 0); }
		public TerminalNode UPDATERS() { return getToken(cobolParser.UPDATERS, 0); }
		public TerminalNode WRITERS() { return getToken(cobolParser.WRITERS, 0); }
		public TerminalNode OTHERS() { return getToken(cobolParser.OTHERS, 0); }
		public Open_file_attributesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_open_file_attributes; }
	}

	public final Open_file_attributesContext open_file_attributes() throws RecognitionException {
		Open_file_attributesContext _localctx = new Open_file_attributesContext(_ctx, getState());
		enterRule(_localctx, 102, RULE_open_file_attributes);
		int _la;
		try {
			setState(2106);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LOCK:
			case WITH:
				enterOuterAlt(_localctx, 1);
				{
				setState(1983);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1977);
					match(WITH);
					setState(1979); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1978);
						separator();
						}
						}
						setState(1981); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(1985);
				match(LOCK);
				}
				break;
			case ALLOWING:
				enterOuterAlt(_localctx, 2);
				{
				setState(1986);
				match(ALLOWING);
				setState(1988); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1987);
					separator();
					}
					}
					setState(1990); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2104);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case NO:
					{
					setState(1992);
					match(NO);
					setState(2000);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,227,_ctx) ) {
					case 1:
						{
						setState(1994); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1993);
							separator();
							}
							}
							setState(1996); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(1998);
						match(OTHERS);
						}
						break;
					}
					}
					break;
				case ALL:
					{
					setState(2002);
					match(ALL);
					}
					break;
				case READERS:
				case WRITERS:
				case UPDATERS:
					{
					setState(2102);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,246,_ctx) ) {
					case 1:
						{
						setState(2003);
						match(READERS);
						setState(2011);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,229,_ctx) ) {
						case 1:
							{
							setState(2005); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2004);
								separator();
								}
								}
								setState(2007); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(2009);
							match(WRITERS);
							}
							break;
						}
						setState(2020);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,231,_ctx) ) {
						case 1:
							{
							setState(2014); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2013);
								separator();
								}
								}
								setState(2016); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(2018);
							match(UPDATERS);
							}
							break;
						}
						}
						break;
					case 2:
						{
						setState(2022);
						match(READERS);
						setState(2024); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2023);
							separator();
							}
							}
							setState(2026); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(2028);
						match(UPDATERS);
						setState(2030); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2029);
							separator();
							}
							}
							setState(2032); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(2034);
						match(WRITERS);
						}
						break;
					case 3:
						{
						setState(2036);
						match(WRITERS);
						setState(2044);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,235,_ctx) ) {
						case 1:
							{
							setState(2038); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2037);
								separator();
								}
								}
								setState(2040); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(2042);
							match(READERS);
							}
							break;
						}
						setState(2053);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,237,_ctx) ) {
						case 1:
							{
							setState(2047); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2046);
								separator();
								}
								}
								setState(2049); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(2051);
							match(UPDATERS);
							}
							break;
						}
						}
						break;
					case 4:
						{
						setState(2055);
						match(WRITERS);
						setState(2057); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2056);
							separator();
							}
							}
							setState(2059); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(2061);
						match(UPDATERS);
						setState(2063); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2062);
							separator();
							}
							}
							setState(2065); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(2067);
						match(READERS);
						}
						break;
					case 5:
						{
						setState(2069);
						match(UPDATERS);
						setState(2077);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,241,_ctx) ) {
						case 1:
							{
							setState(2071); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2070);
								separator();
								}
								}
								setState(2073); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(2075);
							match(READERS);
							}
							break;
						}
						setState(2086);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,243,_ctx) ) {
						case 1:
							{
							setState(2080); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2079);
								separator();
								}
								}
								setState(2082); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(2084);
							match(WRITERS);
							}
							break;
						}
						}
						break;
					case 6:
						{
						setState(2088);
						match(UPDATERS);
						setState(2090); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2089);
							separator();
							}
							}
							setState(2092); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(2094);
						match(WRITERS);
						setState(2096); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2095);
							separator();
							}
							}
							setState(2098); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(2100);
						match(READERS);
						}
						break;
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiply_statementContext extends ParserRuleContext {
		public TerminalNode MULTIPLY() { return getToken(cobolParser.MULTIPLY, 0); }
		public List<Mult_numContext> mult_num() {
			return getRuleContexts(Mult_numContext.class);
		}
		public Mult_numContext mult_num(int i) {
			return getRuleContext(Mult_numContext.class,i);
		}
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public List<Identifier_resultContext> identifier_result() {
			return getRuleContexts(Identifier_resultContext.class);
		}
		public Identifier_resultContext identifier_result(int i) {
			return getRuleContext(Identifier_resultContext.class,i);
		}
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_MULTIPLY() { return getToken(cobolParser.END_MULTIPLY, 0); }
		public List<TerminalNode> ROUNDED() { return getTokens(cobolParser.ROUNDED); }
		public TerminalNode ROUNDED(int i) {
			return getToken(cobolParser.ROUNDED, i);
		}
		public Multiply_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiply_statement; }
	}

	public final Multiply_statementContext multiply_statement() throws RecognitionException {
		Multiply_statementContext _localctx = new Multiply_statementContext(_ctx, getState());
		enterRule(_localctx, 104, RULE_multiply_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2108);
			match(MULTIPLY);
			setState(2110); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2109);
				separator();
				}
				}
				setState(2112); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2114);
			mult_num();
			setState(2116); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2115);
				separator();
				}
				}
				setState(2118); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2120);
			match(BY);
			setState(2134);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,253,_ctx) ) {
			case 1:
				{
				setState(2122); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2121);
					separator();
					}
					}
					setState(2124); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2126);
				mult_num();
				setState(2128); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2127);
					separator();
					}
					}
					setState(2130); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2132);
				match(GIVING);
				}
				break;
			}
			setState(2151); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2137); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2136);
						separator();
						}
						}
						setState(2139); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2141);
					identifier_result();
					setState(2149);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,256,_ctx) ) {
					case 1:
						{
						setState(2143); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2142);
							separator();
							}
							}
							setState(2145); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(2147);
						match(ROUNDED);
						}
						break;
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2153); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,257,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(2162);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,259,_ctx) ) {
			case 1:
				{
				setState(2156); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2155);
					separator();
					}
					}
					setState(2158); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2160);
				on_size_variants();
				}
				break;
			}
			setState(2171);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,261,_ctx) ) {
			case 1:
				{
				setState(2165); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2164);
					separator();
					}
					}
					setState(2167); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2169);
				match(END_MULTIPLY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Mult_numContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Mult_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_mult_num; }
	}

	public final Mult_numContext mult_num() throws RecognitionException {
		Mult_numContext _localctx = new Mult_numContext(_ctx, getState());
		enterRule(_localctx, 106, RULE_mult_num);
		try {
			setState(2175);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(2173);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(2174);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Merge_statementContext extends ParserRuleContext {
		public TerminalNode MERGE() { return getToken(cobolParser.MERGE, 0); }
		public MergefileContext mergefile() {
			return getRuleContext(MergefileContext.class,0);
		}
		public TerminalNode USING() { return getToken(cobolParser.USING, 0); }
		public Output_procContext output_proc() {
			return getRuleContext(Output_procContext.class,0);
		}
		public Giving_fileContext giving_file() {
			return getRuleContext(Giving_fileContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Merge_onContext> merge_on() {
			return getRuleContexts(Merge_onContext.class);
		}
		public Merge_onContext merge_on(int i) {
			return getRuleContext(Merge_onContext.class,i);
		}
		public TerminalNode SEQUENCE() { return getToken(cobolParser.SEQUENCE, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public List<InfileContext> infile() {
			return getRuleContexts(InfileContext.class);
		}
		public InfileContext infile(int i) {
			return getRuleContext(InfileContext.class,i);
		}
		public TerminalNode COLLATING() { return getToken(cobolParser.COLLATING, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Merge_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_merge_statement; }
	}

	public final Merge_statementContext merge_statement() throws RecognitionException {
		Merge_statementContext _localctx = new Merge_statementContext(_ctx, getState());
		enterRule(_localctx, 108, RULE_merge_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2177);
			match(MERGE);
			setState(2179); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2178);
				separator();
				}
				}
				setState(2181); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2183);
			mergefile();
			setState(2191); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2185); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2184);
						separator();
						}
						}
						setState(2187); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2189);
					merge_on();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2193); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,265,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(2224);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,272,_ctx) ) {
			case 1:
				{
				setState(2196); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2195);
					separator();
					}
					}
					setState(2198); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2206);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==COLLATING) {
					{
					setState(2200);
					match(COLLATING);
					setState(2202); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2201);
						separator();
						}
						}
						setState(2204); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(2208);
				match(SEQUENCE);
				setState(2210); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2209);
					separator();
					}
					}
					setState(2212); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2220);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2214);
					match(IS);
					setState(2216); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2215);
						separator();
						}
						}
						setState(2218); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(2222);
				alpha_name();
				}
				break;
			}
			setState(2227); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2226);
				separator();
				}
				}
				setState(2229); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2231);
			match(USING);
			setState(2239); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2233); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2232);
						separator();
						}
						}
						setState(2235); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2237);
					infile();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2241); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,275,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(2244); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2243);
				separator();
				}
				}
				setState(2246); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2250);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case OUTPUT:
				{
				setState(2248);
				output_proc();
				}
				break;
			case GIVING:
				{
				setState(2249);
				giving_file();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Output_procContext extends ParserRuleContext {
		public TerminalNode OUTPUT() { return getToken(cobolParser.OUTPUT, 0); }
		public TerminalNode PROCEDURE() { return getToken(cobolParser.PROCEDURE, 0); }
		public First_procContext first_proc() {
			return getRuleContext(First_procContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public End_procContext end_proc() {
			return getRuleContext(End_procContext.class,0);
		}
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public Output_procContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_output_proc; }
	}

	public final Output_procContext output_proc() throws RecognitionException {
		Output_procContext _localctx = new Output_procContext(_ctx, getState());
		enterRule(_localctx, 110, RULE_output_proc);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2252);
			match(OUTPUT);
			setState(2254); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2253);
				separator();
				}
				}
				setState(2256); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2258);
			match(PROCEDURE);
			setState(2260); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2259);
				separator();
				}
				}
				setState(2262); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2270);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(2264);
				match(IS);
				setState(2266); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2265);
					separator();
					}
					}
					setState(2268); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(2272);
			first_proc();
			setState(2286);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,284,_ctx) ) {
			case 1:
				{
				setState(2274); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2273);
					separator();
					}
					}
					setState(2276); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2278);
				_la = _input.LA(1);
				if ( !(_la==THROUGH || _la==THRU) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(2280); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2279);
					separator();
					}
					}
					setState(2282); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2284);
				end_proc();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class First_procContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public First_procContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_first_proc; }
	}

	public final First_procContext first_proc() throws RecognitionException {
		First_procContext _localctx = new First_procContext(_ctx, getState());
		enterRule(_localctx, 112, RULE_first_proc);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2288);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class End_procContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public End_procContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_end_proc; }
	}

	public final End_procContext end_proc() throws RecognitionException {
		End_procContext _localctx = new End_procContext(_ctx, getState());
		enterRule(_localctx, 114, RULE_end_proc);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2290);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Giving_fileContext extends ParserRuleContext {
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public Giving_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_giving_file; }
	}

	public final Giving_fileContext giving_file() throws RecognitionException {
		Giving_fileContext _localctx = new Giving_fileContext(_ctx, getState());
		enterRule(_localctx, 116, RULE_giving_file);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2292);
			match(GIVING);
			setState(2293);
			file_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class InfileContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public InfileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_infile; }
	}

	public final InfileContext infile() throws RecognitionException {
		InfileContext _localctx = new InfileContext(_ctx, getState());
		enterRule(_localctx, 118, RULE_infile);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2295);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Merge_onContext extends ParserRuleContext {
		public TerminalNode DESCENDING() { return getToken(cobolParser.DESCENDING, 0); }
		public TerminalNode ASCENDING() { return getToken(cobolParser.ASCENDING, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public List<MergekeyContext> mergekey() {
			return getRuleContexts(MergekeyContext.class);
		}
		public MergekeyContext mergekey(int i) {
			return getRuleContext(MergekeyContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Merge_onContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_merge_on; }
	}

	public final Merge_onContext merge_on() throws RecognitionException {
		Merge_onContext _localctx = new Merge_onContext(_ctx, getState());
		enterRule(_localctx, 120, RULE_merge_on);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2303);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ON) {
				{
				setState(2297);
				match(ON);
				setState(2299); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2298);
					separator();
					}
					}
					setState(2301); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(2305);
			_la = _input.LA(1);
			if ( !(_la==ASCENDING || _la==DESCENDING) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(2313);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,288,_ctx) ) {
			case 1:
				{
				setState(2307); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2306);
					separator();
					}
					}
					setState(2309); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2311);
				match(KEY);
				}
				break;
			}
			setState(2322); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2316); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2315);
						separator();
						}
						}
						setState(2318); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2320);
					mergekey();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2324); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,290,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class MergefileContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public MergefileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_mergefile; }
	}

	public final MergefileContext mergefile() throws RecognitionException {
		MergefileContext _localctx = new MergefileContext(_ctx, getState());
		enterRule(_localctx, 122, RULE_mergefile);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2326);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class MergekeyContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public MergekeyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_mergekey; }
	}

	public final MergekeyContext mergekey() throws RecognitionException {
		MergekeyContext _localctx = new MergekeyContext(_ctx, getState());
		enterRule(_localctx, 124, RULE_mergekey);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2328);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Inspect_statementContext extends ParserRuleContext {
		public TerminalNode INSPECT() { return getToken(cobolParser.INSPECT, 0); }
		public Src_stringContext src_string() {
			return getRuleContext(Src_stringContext.class,0);
		}
		public Inspect_tallyingContext inspect_tallying() {
			return getRuleContext(Inspect_tallyingContext.class,0);
		}
		public Inspect_replacingContext inspect_replacing() {
			return getRuleContext(Inspect_replacingContext.class,0);
		}
		public Inspect_convertingContext inspect_converting() {
			return getRuleContext(Inspect_convertingContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Inspect_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_inspect_statement; }
	}

	public final Inspect_statementContext inspect_statement() throws RecognitionException {
		Inspect_statementContext _localctx = new Inspect_statementContext(_ctx, getState());
		enterRule(_localctx, 126, RULE_inspect_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2330);
			match(INSPECT);
			setState(2332); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2331);
				separator();
				}
				}
				setState(2334); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2336);
			src_string();
			setState(2338); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2337);
				separator();
				}
				}
				setState(2340); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2354);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case TALLYING:
				{
				setState(2342);
				inspect_tallying();
				setState(2350);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,294,_ctx) ) {
				case 1:
					{
					setState(2344); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2343);
						separator();
						}
						}
						setState(2346); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2348);
					inspect_replacing();
					}
					break;
				}
				}
				break;
			case REPLACING:
				{
				setState(2352);
				inspect_replacing();
				}
				break;
			case CONVERTING:
				{
				setState(2353);
				inspect_converting();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Inspect_convertingContext extends ParserRuleContext {
		public TerminalNode CONVERTING() { return getToken(cobolParser.CONVERTING, 0); }
		public Compare_charsContext compare_chars() {
			return getRuleContext(Compare_charsContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Convert_charsContext convert_chars() {
			return getRuleContext(Convert_charsContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Delim_definitionContext> delim_definition() {
			return getRuleContexts(Delim_definitionContext.class);
		}
		public Delim_definitionContext delim_definition(int i) {
			return getRuleContext(Delim_definitionContext.class,i);
		}
		public Inspect_convertingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_inspect_converting; }
	}

	public final Inspect_convertingContext inspect_converting() throws RecognitionException {
		Inspect_convertingContext _localctx = new Inspect_convertingContext(_ctx, getState());
		enterRule(_localctx, 128, RULE_inspect_converting);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2356);
			match(CONVERTING);
			setState(2358); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2357);
				separator();
				}
				}
				setState(2360); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2362);
			compare_chars();
			setState(2364); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2363);
				separator();
				}
				}
				setState(2366); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2368);
			match(TO);
			setState(2370); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2369);
				separator();
				}
				}
				setState(2372); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2374);
			convert_chars();
			setState(2384);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,300,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(2376); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2375);
						separator();
						}
						}
						setState(2378); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2380);
					delim_definition();
					}
					} 
				}
				setState(2386);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,300,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Convert_charsContext extends ParserRuleContext {
		public Compare_valContext compare_val() {
			return getRuleContext(Compare_valContext.class,0);
		}
		public Convert_charsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_convert_chars; }
	}

	public final Convert_charsContext convert_chars() throws RecognitionException {
		Convert_charsContext _localctx = new Convert_charsContext(_ctx, getState());
		enterRule(_localctx, 130, RULE_convert_chars);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2387);
			compare_val();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Compare_charsContext extends ParserRuleContext {
		public Compare_valContext compare_val() {
			return getRuleContext(Compare_valContext.class,0);
		}
		public Compare_charsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_compare_chars; }
	}

	public final Compare_charsContext compare_chars() throws RecognitionException {
		Compare_charsContext _localctx = new Compare_charsContext(_ctx, getState());
		enterRule(_localctx, 132, RULE_compare_chars);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2389);
			compare_val();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Inspect_replacingContext extends ParserRuleContext {
		public TerminalNode REPLACING() { return getToken(cobolParser.REPLACING, 0); }
		public List<Replacing_charactersContext> replacing_characters() {
			return getRuleContexts(Replacing_charactersContext.class);
		}
		public Replacing_charactersContext replacing_characters(int i) {
			return getRuleContext(Replacing_charactersContext.class,i);
		}
		public List<Replacing_allContext> replacing_all() {
			return getRuleContexts(Replacing_allContext.class);
		}
		public Replacing_allContext replacing_all(int i) {
			return getRuleContext(Replacing_allContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Inspect_replacingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_inspect_replacing; }
	}

	public final Inspect_replacingContext inspect_replacing() throws RecognitionException {
		Inspect_replacingContext _localctx = new Inspect_replacingContext(_ctx, getState());
		enterRule(_localctx, 134, RULE_inspect_replacing);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2391);
			match(REPLACING);
			setState(2401); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2393); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2392);
						separator();
						}
						}
						setState(2395); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2399);
					_errHandler.sync(this);
					switch (_input.LA(1)) {
					case CHARACTERS:
						{
						setState(2397);
						replacing_characters();
						}
						break;
					case ALL:
					case FIRST:
					case LEADING:
						{
						setState(2398);
						replacing_all();
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2403); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,303,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Replacing_allContext extends ParserRuleContext {
		public TerminalNode ALL() { return getToken(cobolParser.ALL, 0); }
		public TerminalNode LEADING() { return getToken(cobolParser.LEADING, 0); }
		public TerminalNode FIRST() { return getToken(cobolParser.FIRST, 0); }
		public List<Compare_valContext> compare_val() {
			return getRuleContexts(Compare_valContext.class);
		}
		public Compare_valContext compare_val(int i) {
			return getRuleContext(Compare_valContext.class,i);
		}
		public List<TerminalNode> BY() { return getTokens(cobolParser.BY); }
		public TerminalNode BY(int i) {
			return getToken(cobolParser.BY, i);
		}
		public List<Replace_valContext> replace_val() {
			return getRuleContexts(Replace_valContext.class);
		}
		public Replace_valContext replace_val(int i) {
			return getRuleContext(Replace_valContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Delim_definitionContext> delim_definition() {
			return getRuleContexts(Delim_definitionContext.class);
		}
		public Delim_definitionContext delim_definition(int i) {
			return getRuleContext(Delim_definitionContext.class,i);
		}
		public Replacing_allContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_replacing_all; }
	}

	public final Replacing_allContext replacing_all() throws RecognitionException {
		Replacing_allContext _localctx = new Replacing_allContext(_ctx, getState());
		enterRule(_localctx, 136, RULE_replacing_all);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2405);
			_la = _input.LA(1);
			if ( !(_la==ALL || _la==FIRST || _la==LEADING) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(2436); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2407); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2406);
						separator();
						}
						}
						setState(2409); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2411);
					compare_val();
					setState(2413); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2412);
						separator();
						}
						}
						setState(2415); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2417);
					match(BY);
					setState(2419); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2418);
						separator();
						}
						}
						setState(2421); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2423);
					replace_val();
					setState(2433);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,308,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(2425); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2424);
								separator();
								}
								}
								setState(2427); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(2429);
							delim_definition();
							}
							} 
						}
						setState(2435);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,308,_ctx);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2438); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,309,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Replace_valContext extends ParserRuleContext {
		public Compare_valContext compare_val() {
			return getRuleContext(Compare_valContext.class,0);
		}
		public Replace_valContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_replace_val; }
	}

	public final Replace_valContext replace_val() throws RecognitionException {
		Replace_valContext _localctx = new Replace_valContext(_ctx, getState());
		enterRule(_localctx, 138, RULE_replace_val);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2440);
			compare_val();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Replacing_charactersContext extends ParserRuleContext {
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public Replace_charContext replace_char() {
			return getRuleContext(Replace_charContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Delim_definitionContext> delim_definition() {
			return getRuleContexts(Delim_definitionContext.class);
		}
		public Delim_definitionContext delim_definition(int i) {
			return getRuleContext(Delim_definitionContext.class,i);
		}
		public Replacing_charactersContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_replacing_characters; }
	}

	public final Replacing_charactersContext replacing_characters() throws RecognitionException {
		Replacing_charactersContext _localctx = new Replacing_charactersContext(_ctx, getState());
		enterRule(_localctx, 140, RULE_replacing_characters);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2442);
			match(CHARACTERS);
			setState(2444); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2443);
				separator();
				}
				}
				setState(2446); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2448);
			match(BY);
			setState(2450); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2449);
				separator();
				}
				}
				setState(2452); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2454);
			replace_char();
			setState(2464);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,313,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(2456); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2455);
						separator();
						}
						}
						setState(2458); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2460);
					delim_definition();
					}
					} 
				}
				setState(2466);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,313,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Replace_charContext extends ParserRuleContext {
		public Compare_valContext compare_val() {
			return getRuleContext(Compare_valContext.class,0);
		}
		public Replace_charContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_replace_char; }
	}

	public final Replace_charContext replace_char() throws RecognitionException {
		Replace_charContext _localctx = new Replace_charContext(_ctx, getState());
		enterRule(_localctx, 142, RULE_replace_char);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2467);
			compare_val();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Inspect_tallyingContext extends ParserRuleContext {
		public TerminalNode TALLYING() { return getToken(cobolParser.TALLYING, 0); }
		public List<Tallying_forContext> tallying_for() {
			return getRuleContexts(Tallying_forContext.class);
		}
		public Tallying_forContext tallying_for(int i) {
			return getRuleContext(Tallying_forContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Inspect_tallyingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_inspect_tallying; }
	}

	public final Inspect_tallyingContext inspect_tallying() throws RecognitionException {
		Inspect_tallyingContext _localctx = new Inspect_tallyingContext(_ctx, getState());
		enterRule(_localctx, 144, RULE_inspect_tallying);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2469);
			match(TALLYING);
			setState(2477); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2471); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2470);
						separator();
						}
						}
						setState(2473); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2475);
					tallying_for();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2479); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,315,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Tallying_forContext extends ParserRuleContext {
		public Tally_ctrContext tally_ctr() {
			return getRuleContext(Tally_ctrContext.class,0);
		}
		public TerminalNode FOR() { return getToken(cobolParser.FOR, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Tallying_for_charactersContext> tallying_for_characters() {
			return getRuleContexts(Tallying_for_charactersContext.class);
		}
		public Tallying_for_charactersContext tallying_for_characters(int i) {
			return getRuleContext(Tallying_for_charactersContext.class,i);
		}
		public List<Tallying_for_allContext> tallying_for_all() {
			return getRuleContexts(Tallying_for_allContext.class);
		}
		public Tallying_for_allContext tallying_for_all(int i) {
			return getRuleContext(Tallying_for_allContext.class,i);
		}
		public Tallying_forContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_tallying_for; }
	}

	public final Tallying_forContext tallying_for() throws RecognitionException {
		Tallying_forContext _localctx = new Tallying_forContext(_ctx, getState());
		enterRule(_localctx, 146, RULE_tallying_for);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2481);
			tally_ctr();
			setState(2483); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2482);
				separator();
				}
				}
				setState(2485); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2487);
			match(FOR);
			setState(2497); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2489); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2488);
						separator();
						}
						}
						setState(2491); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2495);
					_errHandler.sync(this);
					switch (_input.LA(1)) {
					case CHARACTERS:
						{
						setState(2493);
						tallying_for_characters();
						}
						break;
					case ALL:
					case LEADING:
						{
						setState(2494);
						tallying_for_all();
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2499); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,319,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Tallying_for_charactersContext extends ParserRuleContext {
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public List<Delim_definitionContext> delim_definition() {
			return getRuleContexts(Delim_definitionContext.class);
		}
		public Delim_definitionContext delim_definition(int i) {
			return getRuleContext(Delim_definitionContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Tallying_for_charactersContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_tallying_for_characters; }
	}

	public final Tallying_for_charactersContext tallying_for_characters() throws RecognitionException {
		Tallying_for_charactersContext _localctx = new Tallying_for_charactersContext(_ctx, getState());
		enterRule(_localctx, 148, RULE_tallying_for_characters);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2501);
			match(CHARACTERS);
			setState(2511);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,321,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(2503); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2502);
						separator();
						}
						}
						setState(2505); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2507);
					delim_definition();
					}
					} 
				}
				setState(2513);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,321,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Delim_definitionContext extends ParserRuleContext {
		public Delim_valContext delim_val() {
			return getRuleContext(Delim_valContext.class,0);
		}
		public TerminalNode BEFORE() { return getToken(cobolParser.BEFORE, 0); }
		public TerminalNode AFTER() { return getToken(cobolParser.AFTER, 0); }
		public TerminalNode INITIAL() { return getToken(cobolParser.INITIAL, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Delim_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_delim_definition; }
	}

	public final Delim_definitionContext delim_definition() throws RecognitionException {
		Delim_definitionContext _localctx = new Delim_definitionContext(_ctx, getState());
		enterRule(_localctx, 150, RULE_delim_definition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2514);
			_la = _input.LA(1);
			if ( !(_la==AFTER || _la==BEFORE) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(2522);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,323,_ctx) ) {
			case 1:
				{
				setState(2516); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2515);
					separator();
					}
					}
					setState(2518); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2520);
				match(INITIAL);
				}
				break;
			}
			setState(2525); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2524);
				separator();
				}
				}
				setState(2527); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2529);
			delim_val();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Tallying_for_allContext extends ParserRuleContext {
		public TerminalNode ALL() { return getToken(cobolParser.ALL, 0); }
		public TerminalNode LEADING() { return getToken(cobolParser.LEADING, 0); }
		public List<Compare_valContext> compare_val() {
			return getRuleContexts(Compare_valContext.class);
		}
		public Compare_valContext compare_val(int i) {
			return getRuleContext(Compare_valContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Delim_definitionContext> delim_definition() {
			return getRuleContexts(Delim_definitionContext.class);
		}
		public Delim_definitionContext delim_definition(int i) {
			return getRuleContext(Delim_definitionContext.class,i);
		}
		public Tallying_for_allContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_tallying_for_all; }
	}

	public final Tallying_for_allContext tallying_for_all() throws RecognitionException {
		Tallying_for_allContext _localctx = new Tallying_for_allContext(_ctx, getState());
		enterRule(_localctx, 152, RULE_tallying_for_all);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2531);
			_la = _input.LA(1);
			if ( !(_la==ALL || _la==LEADING) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(2550); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2533); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2532);
						separator();
						}
						}
						setState(2535); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2537);
					compare_val();
					setState(2547);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,327,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(2539); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2538);
								separator();
								}
								}
								setState(2541); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(2543);
							delim_definition();
							}
							} 
						}
						setState(2549);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,327,_ctx);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2552); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,328,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Compare_valContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Figurative_constant_witout_allContext figurative_constant_witout_all() {
			return getRuleContext(Figurative_constant_witout_allContext.class,0);
		}
		public Compare_valContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_compare_val; }
	}

	public final Compare_valContext compare_val() throws RecognitionException {
		Compare_valContext _localctx = new Compare_valContext(_ctx, getState());
		enterRule(_localctx, 154, RULE_compare_val);
		try {
			setState(2557);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(2554);
				qualified_data_item();
				}
				break;
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(2555);
				match(STRING_LITERAL);
				}
				break;
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
				enterOuterAlt(_localctx, 3);
				{
				setState(2556);
				figurative_constant_witout_all();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Delim_valContext extends ParserRuleContext {
		public Compare_valContext compare_val() {
			return getRuleContext(Compare_valContext.class,0);
		}
		public Delim_valContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_delim_val; }
	}

	public final Delim_valContext delim_val() throws RecognitionException {
		Delim_valContext _localctx = new Delim_valContext(_ctx, getState());
		enterRule(_localctx, 156, RULE_delim_val);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2559);
			compare_val();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Tally_ctrContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Tally_ctrContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_tally_ctr; }
	}

	public final Tally_ctrContext tally_ctr() throws RecognitionException {
		Tally_ctrContext _localctx = new Tally_ctrContext(_ctx, getState());
		enterRule(_localctx, 158, RULE_tally_ctr);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2561);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Src_stringContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Src_stringContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_src_string; }
	}

	public final Src_stringContext src_string() throws RecognitionException {
		Src_stringContext _localctx = new Src_stringContext(_ctx, getState());
		enterRule(_localctx, 160, RULE_src_string);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2563);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Initiate_statementContext extends ParserRuleContext {
		public TerminalNode INITIATE() { return getToken(cobolParser.INITIATE, 0); }
		public List<Report_nameContext> report_name() {
			return getRuleContexts(Report_nameContext.class);
		}
		public Report_nameContext report_name(int i) {
			return getRuleContext(Report_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Initiate_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_initiate_statement; }
	}

	public final Initiate_statementContext initiate_statement() throws RecognitionException {
		Initiate_statementContext _localctx = new Initiate_statementContext(_ctx, getState());
		enterRule(_localctx, 162, RULE_initiate_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2565);
			match(INITIATE);
			setState(2573); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2567); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2566);
						separator();
						}
						}
						setState(2569); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2571);
					report_name();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2575); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,331,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Initialize_statementContext extends ParserRuleContext {
		public TerminalNode INITIALIZE() { return getToken(cobolParser.INITIALIZE, 0); }
		public List<Fld_nameContext> fld_name() {
			return getRuleContexts(Fld_nameContext.class);
		}
		public Fld_nameContext fld_name(int i) {
			return getRuleContext(Fld_nameContext.class,i);
		}
		public List<ReplacingContext> replacing() {
			return getRuleContexts(ReplacingContext.class);
		}
		public ReplacingContext replacing(int i) {
			return getRuleContext(ReplacingContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Initialize_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_initialize_statement; }
	}

	public final Initialize_statementContext initialize_statement() throws RecognitionException {
		Initialize_statementContext _localctx = new Initialize_statementContext(_ctx, getState());
		enterRule(_localctx, 164, RULE_initialize_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2577);
			match(INITIALIZE);
			setState(2585); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2579); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2578);
						separator();
						}
						}
						setState(2581); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2583);
					fld_name();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2587); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,333,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(2598);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,335,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(2590); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2589);
						separator();
						}
						}
						setState(2592); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2594);
					replacing();
					}
					} 
				}
				setState(2600);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,335,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ReplacingContext extends ParserRuleContext {
		public TerminalNode REPLACING() { return getToken(cobolParser.REPLACING, 0); }
		public List<TerminalNode> BY() { return getTokens(cobolParser.BY); }
		public TerminalNode BY(int i) {
			return getToken(cobolParser.BY, i);
		}
		public List<Init_valueContext> init_value() {
			return getRuleContexts(Init_valueContext.class);
		}
		public Init_valueContext init_value(int i) {
			return getRuleContext(Init_valueContext.class,i);
		}
		public List<TerminalNode> ALPHABETIC() { return getTokens(cobolParser.ALPHABETIC); }
		public TerminalNode ALPHABETIC(int i) {
			return getToken(cobolParser.ALPHABETIC, i);
		}
		public List<TerminalNode> ALPHANUMERIC() { return getTokens(cobolParser.ALPHANUMERIC); }
		public TerminalNode ALPHANUMERIC(int i) {
			return getToken(cobolParser.ALPHANUMERIC, i);
		}
		public List<TerminalNode> NUMERIC() { return getTokens(cobolParser.NUMERIC); }
		public TerminalNode NUMERIC(int i) {
			return getToken(cobolParser.NUMERIC, i);
		}
		public List<TerminalNode> ALPHANUMERIC_EDITED() { return getTokens(cobolParser.ALPHANUMERIC_EDITED); }
		public TerminalNode ALPHANUMERIC_EDITED(int i) {
			return getToken(cobolParser.ALPHANUMERIC_EDITED, i);
		}
		public List<TerminalNode> NUMERIC_EDITED() { return getTokens(cobolParser.NUMERIC_EDITED); }
		public TerminalNode NUMERIC_EDITED(int i) {
			return getToken(cobolParser.NUMERIC_EDITED, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> DATA() { return getTokens(cobolParser.DATA); }
		public TerminalNode DATA(int i) {
			return getToken(cobolParser.DATA, i);
		}
		public ReplacingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_replacing; }
	}

	public final ReplacingContext replacing() throws RecognitionException {
		ReplacingContext _localctx = new ReplacingContext(_ctx, getState());
		enterRule(_localctx, 166, RULE_replacing);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2601);
			match(REPLACING);
			setState(2629); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2603); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2602);
						separator();
						}
						}
						setState(2605); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2607);
					_la = _input.LA(1);
					if ( !(_la==ALPHABETIC || _la==NUMERIC || ((((_la - 407)) & ~0x3f) == 0 && ((1L << (_la - 407)) & ((1L << (ALPHANUMERIC - 407)) | (1L << (NUMERIC_EDITED - 407)) | (1L << (ALPHANUMERIC_EDITED - 407)))) != 0)) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(2609); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2608);
						separator();
						}
						}
						setState(2611); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2619);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==DATA) {
						{
						setState(2613);
						match(DATA);
						setState(2615); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2614);
							separator();
							}
							}
							setState(2617); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					setState(2621);
					match(BY);
					setState(2623); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2622);
						separator();
						}
						}
						setState(2625); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2627);
					init_value();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2631); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,341,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Init_valueContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public ConstantContext constant() {
			return getRuleContext(ConstantContext.class,0);
		}
		public Init_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_init_value; }
	}

	public final Init_valueContext init_value() throws RecognitionException {
		Init_valueContext _localctx = new Init_valueContext(_ctx, getState());
		enterRule(_localctx, 168, RULE_init_value);
		try {
			setState(2635);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(2633);
				qualified_data_item();
				}
				break;
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(2634);
				constant();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Fld_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Fld_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_fld_name; }
	}

	public final Fld_nameContext fld_name() throws RecognitionException {
		Fld_nameContext _localctx = new Fld_nameContext(_ctx, getState());
		enterRule(_localctx, 170, RULE_fld_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2637);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Move_statementContext extends ParserRuleContext {
		public TerminalNode MOVE() { return getToken(cobolParser.MOVE, 0); }
		public Src_itemContext src_item() {
			return getRuleContext(Src_itemContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CORRESPONDING() { return getToken(cobolParser.CORRESPONDING, 0); }
		public TerminalNode CORR() { return getToken(cobolParser.CORR, 0); }
		public Move_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_move_statement; }
	}

	public final Move_statementContext move_statement() throws RecognitionException {
		Move_statementContext _localctx = new Move_statementContext(_ctx, getState());
		enterRule(_localctx, 172, RULE_move_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2639);
			match(MOVE);
			setState(2641); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2640);
				separator();
				}
				}
				setState(2643); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2651);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CORR || _la==CORRESPONDING) {
				{
				setState(2645);
				_la = _input.LA(1);
				if ( !(_la==CORR || _la==CORRESPONDING) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(2647); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2646);
					separator();
					}
					}
					setState(2649); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(2653);
			src_item();
			setState(2655); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2654);
				separator();
				}
				}
				setState(2657); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2659);
			match(TO);
			setState(2661); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2660);
				separator();
				}
				}
				setState(2663); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2665);
			dest_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class If_statementContext extends ParserRuleContext {
		public TerminalNode IF() { return getToken(cobolParser.IF, 0); }
		public Logic_expressionContext logic_expression() {
			return getRuleContext(Logic_expressionContext.class,0);
		}
		public List<SentenseContext> sentense() {
			return getRuleContexts(SentenseContext.class);
		}
		public SentenseContext sentense(int i) {
			return getRuleContext(SentenseContext.class,i);
		}
		public List<TerminalNode> NEXT() { return getTokens(cobolParser.NEXT); }
		public TerminalNode NEXT(int i) {
			return getToken(cobolParser.NEXT, i);
		}
		public List<TerminalNode> SENTENCE() { return getTokens(cobolParser.SENTENCE); }
		public TerminalNode SENTENCE(int i) {
			return getToken(cobolParser.SENTENCE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode THEN() { return getToken(cobolParser.THEN, 0); }
		public TerminalNode ELSE() { return getToken(cobolParser.ELSE, 0); }
		public TerminalNode END_IF() { return getToken(cobolParser.END_IF, 0); }
		public If_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_if_statement; }
	}

	public final If_statementContext if_statement() throws RecognitionException {
		If_statementContext _localctx = new If_statementContext(_ctx, getState());
		enterRule(_localctx, 174, RULE_if_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2667);
			match(IF);
			setState(2669); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2668);
				separator();
				}
				}
				setState(2671); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2673);
			logic_expression(0);
			setState(2681);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,350,_ctx) ) {
			case 1:
				{
				setState(2675); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2674);
					separator();
					}
					}
					setState(2677); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2679);
				match(THEN);
				}
				break;
			}
			setState(2684); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2683);
				separator();
				}
				}
				setState(2686); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2697);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ACCEPT:
			case ADD:
			case ALTER:
			case CALL:
			case CANCEL:
			case CLOSE:
			case COMPUTE:
			case CONTINUE:
			case DELETE:
			case DISPLAY:
			case DIVIDE:
			case EVALUATE:
			case EXIT:
			case GENERATE:
			case GO:
			case IF:
			case INITIALIZE:
			case INITIATE:
			case INSPECT:
			case MERGE:
			case MOVE:
			case MULTIPLY:
			case OPEN:
			case PERFORM:
			case READ:
			case RECORD:
			case RELEASE:
			case RETURN:
			case REWRITE:
				{
				setState(2688);
				sentense();
				}
				break;
			case NEXT:
				{
				setState(2689);
				match(NEXT);
				setState(2691); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2690);
					separator();
					}
					}
					setState(2693); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2695);
				match(SENTENCE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(2721);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,358,_ctx) ) {
			case 1:
				{
				setState(2700); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2699);
					separator();
					}
					}
					setState(2702); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2704);
				match(ELSE);
				setState(2706); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2705);
					separator();
					}
					}
					setState(2708); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2719);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case ACCEPT:
				case ADD:
				case ALTER:
				case CALL:
				case CANCEL:
				case CLOSE:
				case COMPUTE:
				case CONTINUE:
				case DELETE:
				case DISPLAY:
				case DIVIDE:
				case EVALUATE:
				case EXIT:
				case GENERATE:
				case GO:
				case IF:
				case INITIALIZE:
				case INITIATE:
				case INSPECT:
				case MERGE:
				case MOVE:
				case MULTIPLY:
				case OPEN:
				case PERFORM:
				case READ:
				case RECORD:
				case RELEASE:
				case RETURN:
				case REWRITE:
					{
					setState(2710);
					sentense();
					}
					break;
				case NEXT:
					{
					setState(2711);
					match(NEXT);
					setState(2713); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2712);
						separator();
						}
						}
						setState(2715); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2717);
					match(SENTENCE);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(2730);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,360,_ctx) ) {
			case 1:
				{
				setState(2724); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2723);
					separator();
					}
					}
					setState(2726); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2728);
				match(END_IF);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Generate_statementContext extends ParserRuleContext {
		public TerminalNode GENERATE() { return getToken(cobolParser.GENERATE, 0); }
		public Report_itemContext report_item() {
			return getRuleContext(Report_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Generate_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_generate_statement; }
	}

	public final Generate_statementContext generate_statement() throws RecognitionException {
		Generate_statementContext _localctx = new Generate_statementContext(_ctx, getState());
		enterRule(_localctx, 176, RULE_generate_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2732);
			match(GENERATE);
			setState(2734); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2733);
				separator();
				}
				}
				setState(2736); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2738);
			report_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_itemContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Report_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_item; }
	}

	public final Report_itemContext report_item() throws RecognitionException {
		Report_itemContext _localctx = new Report_itemContext(_ctx, getState());
		enterRule(_localctx, 178, RULE_report_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2740);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Exit_statementContext extends ParserRuleContext {
		public TerminalNode EXIT() { return getToken(cobolParser.EXIT, 0); }
		public Exit_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_exit_statement; }
	}

	public final Exit_statementContext exit_statement() throws RecognitionException {
		Exit_statementContext _localctx = new Exit_statementContext(_ctx, getState());
		enterRule(_localctx, 180, RULE_exit_statement);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2742);
			match(EXIT);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Exit_program_statementContext extends ParserRuleContext {
		public TerminalNode EXIT() { return getToken(cobolParser.EXIT, 0); }
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Exit_program_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_exit_program_statement; }
	}

	public final Exit_program_statementContext exit_program_statement() throws RecognitionException {
		Exit_program_statementContext _localctx = new Exit_program_statementContext(_ctx, getState());
		enterRule(_localctx, 182, RULE_exit_program_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2744);
			match(EXIT);
			setState(2746); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2745);
				separator();
				}
				}
				setState(2748); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2750);
			match(PROGRAM);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Go_to_statementContext extends ParserRuleContext {
		public TerminalNode GO() { return getToken(cobolParser.GO, 0); }
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public List<Proc_nameContext> proc_name() {
			return getRuleContexts(Proc_nameContext.class);
		}
		public Proc_nameContext proc_name(int i) {
			return getRuleContext(Proc_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode DEPENDING() { return getToken(cobolParser.DEPENDING, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Go_to_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_go_to_statement; }
	}

	public final Go_to_statementContext go_to_statement() throws RecognitionException {
		Go_to_statementContext _localctx = new Go_to_statementContext(_ctx, getState());
		enterRule(_localctx, 184, RULE_go_to_statement);
		int _la;
		try {
			setState(2809);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,374,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2752);
				match(GO);
				setState(2760);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,364,_ctx) ) {
				case 1:
					{
					setState(2754); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2753);
						separator();
						}
						}
						setState(2756); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2758);
					match(TO);
					}
					break;
				}
				setState(2769);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,366,_ctx) ) {
				case 1:
					{
					setState(2763); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2762);
						separator();
						}
						}
						setState(2765); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2767);
					proc_name();
					}
					break;
				}
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2771);
				match(GO);
				setState(2779);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,368,_ctx) ) {
				case 1:
					{
					setState(2773); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2772);
						separator();
						}
						}
						setState(2775); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2777);
					match(TO);
					}
					break;
				}
				setState(2788); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2782); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2781);
						separator();
						}
						}
						setState(2784); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2786);
					proc_name();
					}
					}
					setState(2790); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2792);
				match(DEPENDING);
				setState(2800);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,372,_ctx) ) {
				case 1:
					{
					setState(2794); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2793);
						separator();
						}
						}
						setState(2796); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2798);
					match(ON);
					}
					break;
				}
				setState(2803); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2802);
					separator();
					}
					}
					setState(2805); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2807);
				qualified_data_item();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Proc_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Proc_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_proc_name; }
	}

	public final Proc_nameContext proc_name() throws RecognitionException {
		Proc_nameContext _localctx = new Proc_nameContext(_ctx, getState());
		enterRule(_localctx, 186, RULE_proc_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2811);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Evaluate_statementContext extends ParserRuleContext {
		public TerminalNode EVALUATE() { return getToken(cobolParser.EVALUATE, 0); }
		public List<Subj_itemContext> subj_item() {
			return getRuleContexts(Subj_itemContext.class);
		}
		public Subj_itemContext subj_item(int i) {
			return getRuleContext(Subj_itemContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> WHEN() { return getTokens(cobolParser.WHEN); }
		public TerminalNode WHEN(int i) {
			return getToken(cobolParser.WHEN, i);
		}
		public List<When_conditionContext> when_condition() {
			return getRuleContexts(When_conditionContext.class);
		}
		public When_conditionContext when_condition(int i) {
			return getRuleContext(When_conditionContext.class,i);
		}
		public List<SentenseContext> sentense() {
			return getRuleContexts(SentenseContext.class);
		}
		public SentenseContext sentense(int i) {
			return getRuleContext(SentenseContext.class,i);
		}
		public TerminalNode OTHER() { return getToken(cobolParser.OTHER, 0); }
		public TerminalNode END_EVALUATE() { return getToken(cobolParser.END_EVALUATE, 0); }
		public List<TerminalNode> ALSO() { return getTokens(cobolParser.ALSO); }
		public TerminalNode ALSO(int i) {
			return getToken(cobolParser.ALSO, i);
		}
		public Evaluate_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_evaluate_statement; }
	}

	public final Evaluate_statementContext evaluate_statement() throws RecognitionException {
		Evaluate_statementContext _localctx = new Evaluate_statementContext(_ctx, getState());
		enterRule(_localctx, 188, RULE_evaluate_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2813);
			match(EVALUATE);
			setState(2815); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2814);
				separator();
				}
				}
				setState(2817); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2819);
			subj_item();
			setState(2838);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,379,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(2827);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,377,_ctx) ) {
					case 1:
						{
						setState(2821); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2820);
							separator();
							}
							}
							setState(2823); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(2825);
						match(ALSO);
						}
						break;
					}
					setState(2830); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2829);
						separator();
						}
						}
						setState(2832); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2834);
					subj_item();
					}
					} 
				}
				setState(2840);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,379,_ctx);
			}
			setState(2881); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2842); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2841);
						separator();
						}
						}
						setState(2844); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2846);
					match(WHEN);
					setState(2848); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2847);
						separator();
						}
						}
						setState(2850); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2852);
					when_condition();
					setState(2871);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,385,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(2860);
							_errHandler.sync(this);
							switch ( getInterpreter().adaptivePredict(_input,383,_ctx) ) {
							case 1:
								{
								setState(2854); 
								_errHandler.sync(this);
								_la = _input.LA(1);
								do {
									{
									{
									setState(2853);
									separator();
									}
									}
									setState(2856); 
									_errHandler.sync(this);
									_la = _input.LA(1);
								} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
								setState(2858);
								match(ALSO);
								}
								break;
							}
							setState(2863); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(2862);
								separator();
								}
								}
								setState(2865); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(2867);
							when_condition();
							}
							} 
						}
						setState(2873);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,385,_ctx);
					}
					setState(2875); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2874);
						separator();
						}
						}
						setState(2877); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2879);
					sentense();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2883); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,387,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(2904);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,391,_ctx) ) {
			case 1:
				{
				setState(2886); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2885);
					separator();
					}
					}
					setState(2888); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2890);
				match(WHEN);
				setState(2892); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2891);
					separator();
					}
					}
					setState(2894); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2896);
				match(OTHER);
				setState(2898); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2897);
					separator();
					}
					}
					setState(2900); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2902);
				sentense();
				}
				break;
			}
			setState(2913);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,393,_ctx) ) {
			case 1:
				{
				setState(2907); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2906);
					separator();
					}
					}
					setState(2909); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2911);
				match(END_EVALUATE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class When_conditionContext extends ParserRuleContext {
		public Logic_expressionContext logic_expression() {
			return getRuleContext(Logic_expressionContext.class,0);
		}
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ANY() { return getToken(cobolParser.ANY, 0); }
		public TerminalNode TRUE() { return getToken(cobolParser.TRUE, 0); }
		public TerminalNode FALSE() { return getToken(cobolParser.FALSE, 0); }
		public When_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_when_condition; }
	}

	public final When_conditionContext when_condition() throws RecognitionException {
		When_conditionContext _localctx = new When_conditionContext(_ctx, getState());
		enterRule(_localctx, 190, RULE_when_condition);
		int _la;
		try {
			setState(2943);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,399,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2915);
				logic_expression(0);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2922);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NOT) {
					{
					setState(2916);
					match(NOT);
					setState(2918); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2917);
						separator();
						}
						}
						setState(2920); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(2924);
				arithmetic_expression(0);
				setState(2938);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,398,_ctx) ) {
				case 1:
					{
					setState(2926); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2925);
						separator();
						}
						}
						setState(2928); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2930);
					_la = _input.LA(1);
					if ( !(_la==THROUGH || _la==THRU) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(2932); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2931);
						separator();
						}
						}
						setState(2934); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2936);
					arithmetic_expression(0);
					}
					break;
				}
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(2940);
				match(ANY);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(2941);
				match(TRUE);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(2942);
				match(FALSE);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Subj_itemContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public Logic_expressionContext logic_expression() {
			return getRuleContext(Logic_expressionContext.class,0);
		}
		public TerminalNode TRUE() { return getToken(cobolParser.TRUE, 0); }
		public TerminalNode FALSE() { return getToken(cobolParser.FALSE, 0); }
		public Subj_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_subj_item; }
	}

	public final Subj_itemContext subj_item() throws RecognitionException {
		Subj_itemContext _localctx = new Subj_itemContext(_ctx, getState());
		enterRule(_localctx, 192, RULE_subj_item);
		try {
			setState(2949);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,400,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2945);
				arithmetic_expression(0);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2946);
				logic_expression(0);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(2947);
				match(TRUE);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(2948);
				match(FALSE);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Divide_statementContext extends ParserRuleContext {
		public Divide_statement_form1Context divide_statement_form1() {
			return getRuleContext(Divide_statement_form1Context.class,0);
		}
		public Divide_statement_form2Context divide_statement_form2() {
			return getRuleContext(Divide_statement_form2Context.class,0);
		}
		public Divide_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_divide_statement; }
	}

	public final Divide_statementContext divide_statement() throws RecognitionException {
		Divide_statementContext _localctx = new Divide_statementContext(_ctx, getState());
		enterRule(_localctx, 194, RULE_divide_statement);
		try {
			setState(2953);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,401,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2951);
				divide_statement_form1();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2952);
				divide_statement_form2();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Divide_statement_form1Context extends ParserRuleContext {
		public TerminalNode DIVIDE() { return getToken(cobolParser.DIVIDE, 0); }
		public List<Divide_numContext> divide_num() {
			return getRuleContexts(Divide_numContext.class);
		}
		public Divide_numContext divide_num(int i) {
			return getRuleContext(Divide_numContext.class,i);
		}
		public TerminalNode INTO() { return getToken(cobolParser.INTO, 0); }
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public List<Identifier_resultContext> identifier_result() {
			return getRuleContexts(Identifier_resultContext.class);
		}
		public Identifier_resultContext identifier_result(int i) {
			return getRuleContext(Identifier_resultContext.class,i);
		}
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_DIVIDE() { return getToken(cobolParser.END_DIVIDE, 0); }
		public List<TerminalNode> ROUNDED() { return getTokens(cobolParser.ROUNDED); }
		public TerminalNode ROUNDED(int i) {
			return getToken(cobolParser.ROUNDED, i);
		}
		public Divide_statement_form1Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_divide_statement_form1; }
	}

	public final Divide_statement_form1Context divide_statement_form1() throws RecognitionException {
		Divide_statement_form1Context _localctx = new Divide_statement_form1Context(_ctx, getState());
		enterRule(_localctx, 196, RULE_divide_statement_form1);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2955);
			match(DIVIDE);
			setState(2957); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2956);
				separator();
				}
				}
				setState(2959); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2961);
			divide_num();
			setState(2963); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2962);
				separator();
				}
				}
				setState(2965); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(2967);
			_la = _input.LA(1);
			if ( !(_la==BY || _la==INTO) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(2981);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,406,_ctx) ) {
			case 1:
				{
				setState(2969); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2968);
					separator();
					}
					}
					setState(2971); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2973);
				divide_num();
				setState(2975); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2974);
					separator();
					}
					}
					setState(2977); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(2979);
				match(GIVING);
				}
				break;
			}
			setState(2998); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(2984); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2983);
						separator();
						}
						}
						setState(2986); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(2988);
					identifier_result();
					setState(2996);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,409,_ctx) ) {
					case 1:
						{
						setState(2990); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2989);
							separator();
							}
							}
							setState(2992); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(2994);
						match(ROUNDED);
						}
						break;
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(3000); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,410,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(3009);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,412,_ctx) ) {
			case 1:
				{
				setState(3003); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3002);
					separator();
					}
					}
					setState(3005); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3007);
				on_size_variants();
				}
				break;
			}
			setState(3018);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,414,_ctx) ) {
			case 1:
				{
				setState(3012); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3011);
					separator();
					}
					}
					setState(3014); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3016);
				match(END_DIVIDE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Divide_statement_form2Context extends ParserRuleContext {
		public TerminalNode DIVIDE() { return getToken(cobolParser.DIVIDE, 0); }
		public List<Divide_numContext> divide_num() {
			return getRuleContexts(Divide_numContext.class);
		}
		public Divide_numContext divide_num(int i) {
			return getRuleContext(Divide_numContext.class,i);
		}
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public TerminalNode REMAINDER() { return getToken(cobolParser.REMAINDER, 0); }
		public RemaindContext remaind() {
			return getRuleContext(RemaindContext.class,0);
		}
		public TerminalNode INTO() { return getToken(cobolParser.INTO, 0); }
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public TerminalNode ROUNDED() { return getToken(cobolParser.ROUNDED, 0); }
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_DIVIDE() { return getToken(cobolParser.END_DIVIDE, 0); }
		public Divide_statement_form2Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_divide_statement_form2; }
	}

	public final Divide_statement_form2Context divide_statement_form2() throws RecognitionException {
		Divide_statement_form2Context _localctx = new Divide_statement_form2Context(_ctx, getState());
		enterRule(_localctx, 198, RULE_divide_statement_form2);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3020);
			match(DIVIDE);
			setState(3022); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3021);
				separator();
				}
				}
				setState(3024); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3026);
			divide_num();
			setState(3028); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3027);
				separator();
				}
				}
				setState(3030); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3032);
			_la = _input.LA(1);
			if ( !(_la==BY || _la==INTO) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(3046);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,419,_ctx) ) {
			case 1:
				{
				setState(3034); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3033);
					separator();
					}
					}
					setState(3036); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3038);
				divide_num();
				setState(3040); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3039);
					separator();
					}
					}
					setState(3042); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3044);
				match(GIVING);
				}
				break;
			}
			setState(3049); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3048);
				separator();
				}
				}
				setState(3051); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3053);
			identifier_result();
			setState(3061);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,422,_ctx) ) {
			case 1:
				{
				setState(3055); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3054);
					separator();
					}
					}
					setState(3057); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3059);
				match(ROUNDED);
				}
				break;
			}
			setState(3064); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3063);
				separator();
				}
				}
				setState(3066); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3068);
			match(REMAINDER);
			setState(3070); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3069);
				separator();
				}
				}
				setState(3072); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3074);
			remaind();
			setState(3082);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,426,_ctx) ) {
			case 1:
				{
				setState(3076); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3075);
					separator();
					}
					}
					setState(3078); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3080);
				on_size_variants();
				}
				break;
			}
			setState(3091);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,428,_ctx) ) {
			case 1:
				{
				setState(3085); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3084);
					separator();
					}
					}
					setState(3087); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3089);
				match(END_DIVIDE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RemaindContext extends ParserRuleContext {
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public RemaindContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_remaind; }
	}

	public final RemaindContext remaind() throws RecognitionException {
		RemaindContext _localctx = new RemaindContext(_ctx, getState());
		enterRule(_localctx, 200, RULE_remaind);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3093);
			identifier_result();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Divide_numContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Divide_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_divide_num; }
	}

	public final Divide_numContext divide_num() throws RecognitionException {
		Divide_numContext _localctx = new Divide_numContext(_ctx, getState());
		enterRule(_localctx, 202, RULE_divide_num);
		try {
			setState(3097);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(3095);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(3096);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statementContext extends ParserRuleContext {
		public Display_statement_form1Context display_statement_form1() {
			return getRuleContext(Display_statement_form1Context.class,0);
		}
		public Display_statement_form2Context display_statement_form2() {
			return getRuleContext(Display_statement_form2Context.class,0);
		}
		public Display_statement_form3Context display_statement_form3() {
			return getRuleContext(Display_statement_form3Context.class,0);
		}
		public Display_statement_form4Context display_statement_form4() {
			return getRuleContext(Display_statement_form4Context.class,0);
		}
		public Display_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement; }
	}

	public final Display_statementContext display_statement() throws RecognitionException {
		Display_statementContext _localctx = new Display_statementContext(_ctx, getState());
		enterRule(_localctx, 204, RULE_display_statement);
		try {
			setState(3103);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,430,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3099);
				display_statement_form1();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3100);
				display_statement_form2();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3101);
				display_statement_form3();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(3102);
				display_statement_form4();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statement_form1Context extends ParserRuleContext {
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public List<Src_itemContext> src_item() {
			return getRuleContexts(Src_itemContext.class);
		}
		public Src_itemContext src_item(int i) {
			return getRuleContext(Src_itemContext.class,i);
		}
		public TerminalNode END_DISPLAY() { return getToken(cobolParser.END_DISPLAY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Display_form1_clauseContext> display_form1_clause() {
			return getRuleContexts(Display_form1_clauseContext.class);
		}
		public Display_form1_clauseContext display_form1_clause(int i) {
			return getRuleContext(Display_form1_clauseContext.class,i);
		}
		public Display_statement_form1Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement_form1; }
	}

	public final Display_statement_form1Context display_statement_form1() throws RecognitionException {
		Display_statement_form1Context _localctx = new Display_statement_form1Context(_ctx, getState());
		enterRule(_localctx, 206, RULE_display_statement_form1);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3105);
			match(DISPLAY);
			setState(3124); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(3107); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3106);
						separator();
						}
						}
						setState(3109); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3111);
					src_item();
					setState(3121);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,433,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(3113); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(3112);
								separator();
								}
								}
								setState(3115); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(3117);
							display_form1_clause();
							}
							} 
						}
						setState(3123);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,433,_ctx);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(3126); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,434,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(3135);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,436,_ctx) ) {
			case 1:
				{
				setState(3129); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3128);
					separator();
					}
					}
					setState(3131); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3133);
				match(END_DISPLAY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statement_form2Context extends ParserRuleContext {
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public List<Src_itemContext> src_item() {
			return getRuleContexts(Src_itemContext.class);
		}
		public Src_itemContext src_item(int i) {
			return getRuleContext(Src_itemContext.class,i);
		}
		public TerminalNode END_DISPLAY() { return getToken(cobolParser.END_DISPLAY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Display_form2_clauseContext> display_form2_clause() {
			return getRuleContexts(Display_form2_clauseContext.class);
		}
		public Display_form2_clauseContext display_form2_clause(int i) {
			return getRuleContext(Display_form2_clauseContext.class,i);
		}
		public Display_statement_form2Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement_form2; }
	}

	public final Display_statement_form2Context display_statement_form2() throws RecognitionException {
		Display_statement_form2Context _localctx = new Display_statement_form2Context(_ctx, getState());
		enterRule(_localctx, 208, RULE_display_statement_form2);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3137);
			match(DISPLAY);
			setState(3156); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(3139); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3138);
						separator();
						}
						}
						setState(3141); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3143);
					src_item();
					setState(3153);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,439,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(3145); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(3144);
								separator();
								}
								}
								setState(3147); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(3149);
							display_form2_clause();
							}
							} 
						}
						setState(3155);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,439,_ctx);
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(3158); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,440,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(3167);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,442,_ctx) ) {
			case 1:
				{
				setState(3161); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3160);
					separator();
					}
					}
					setState(3163); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3165);
				match(END_DISPLAY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statement_form3Context extends ParserRuleContext {
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode END_DISPLAY() { return getToken(cobolParser.END_DISPLAY, 0); }
		public Disp_f3_lineContext disp_f3_line() {
			return getRuleContext(Disp_f3_lineContext.class,0);
		}
		public Disp_f3_columnContext disp_f3_column() {
			return getRuleContext(Disp_f3_columnContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public Display_statement_form3Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement_form3; }
	}

	public final Display_statement_form3Context display_statement_form3() throws RecognitionException {
		Display_statement_form3Context _localctx = new Display_statement_form3Context(_ctx, getState());
		enterRule(_localctx, 210, RULE_display_statement_form3);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3169);
			match(DISPLAY);
			setState(3171); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3170);
				separator();
				}
				}
				setState(3173); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3175);
			qualified_data_item();
			setState(3211);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,452,_ctx) ) {
			case 1:
				{
				setState(3177); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3176);
					separator();
					}
					}
					setState(3179); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3187);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(3181);
					match(AT);
					setState(3183); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3182);
						separator();
						}
						}
						setState(3185); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3209);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case LINE:
					{
					setState(3189);
					disp_f3_line();
					setState(3197);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,448,_ctx) ) {
					case 1:
						{
						setState(3191); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3190);
							separator();
							}
							}
							setState(3193); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3195);
						disp_f3_column();
						}
						break;
					}
					}
					break;
				case COLUMN:
					{
					setState(3199);
					disp_f3_column();
					setState(3207);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,450,_ctx) ) {
					case 1:
						{
						setState(3201); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3200);
							separator();
							}
							}
							setState(3203); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3205);
						disp_f3_line();
						}
						break;
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(3220);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,454,_ctx) ) {
			case 1:
				{
				setState(3214); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3213);
					separator();
					}
					}
					setState(3216); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3218);
				match(END_DISPLAY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_statement_form4Context extends ParserRuleContext {
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public Src_itemContext src_item() {
			return getRuleContext(Src_itemContext.class,0);
		}
		public TerminalNode UPON() { return getToken(cobolParser.UPON, 0); }
		public Display_uponContext display_upon() {
			return getRuleContext(Display_uponContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_DISPLAY() { return getToken(cobolParser.END_DISPLAY, 0); }
		public Display_statement_form4Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_statement_form4; }
	}

	public final Display_statement_form4Context display_statement_form4() throws RecognitionException {
		Display_statement_form4Context _localctx = new Display_statement_form4Context(_ctx, getState());
		enterRule(_localctx, 212, RULE_display_statement_form4);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3222);
			match(DISPLAY);
			setState(3224); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3223);
				separator();
				}
				}
				setState(3226); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3228);
			src_item();
			setState(3230); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3229);
				separator();
				}
				}
				setState(3232); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3234);
			match(UPON);
			setState(3236); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3235);
				separator();
				}
				}
				setState(3238); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3240);
			display_upon();
			setState(3248);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,459,_ctx) ) {
			case 1:
				{
				setState(3242); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3241);
					separator();
					}
					}
					setState(3244); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3246);
				on_exception_variants();
				}
				break;
			}
			setState(3257);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,461,_ctx) ) {
			case 1:
				{
				setState(3251); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3250);
					separator();
					}
					}
					setState(3253); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3255);
				match(END_DISPLAY);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Src_itemContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public ConstantContext constant() {
			return getRuleContext(ConstantContext.class,0);
		}
		public Src_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_src_item; }
	}

	public final Src_itemContext src_item() throws RecognitionException {
		Src_itemContext _localctx = new Src_itemContext(_ctx, getState());
		enterRule(_localctx, 214, RULE_src_item);
		try {
			setState(3261);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(3259);
				identifier();
				}
				break;
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(3260);
				constant();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_uponContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Display_uponContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_upon; }
	}

	public final Display_uponContext display_upon() throws RecognitionException {
		Display_uponContext _localctx = new Display_uponContext(_ctx, getState());
		enterRule(_localctx, 216, RULE_display_upon);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3263);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Disp_f3_lineContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Disp_f3_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_disp_f3_line; }
	}

	public final Disp_f3_lineContext disp_f3_line() throws RecognitionException {
		Disp_f3_lineContext _localctx = new Disp_f3_lineContext(_ctx, getState());
		enterRule(_localctx, 218, RULE_disp_f3_line);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3265);
			match(LINE);
			setState(3273);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,464,_ctx) ) {
			case 1:
				{
				setState(3267); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3266);
					separator();
					}
					}
					setState(3269); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3271);
				match(NUMBER);
				}
				break;
			}
			setState(3276); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3275);
				separator();
				}
				}
				setState(3278); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3282);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				{
				setState(3280);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				{
				setState(3281);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Disp_f3_columnContext extends ParserRuleContext {
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Disp_f3_columnContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_disp_f3_column; }
	}

	public final Disp_f3_columnContext disp_f3_column() throws RecognitionException {
		Disp_f3_columnContext _localctx = new Disp_f3_columnContext(_ctx, getState());
		enterRule(_localctx, 220, RULE_disp_f3_column);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3284);
			match(COLUMN);
			setState(3292);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,468,_ctx) ) {
			case 1:
				{
				setState(3286); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3285);
					separator();
					}
					}
					setState(3288); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3290);
				match(NUMBER);
				}
				break;
			}
			setState(3295); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3294);
				separator();
				}
				}
				setState(3297); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3301);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case USER_DEFINED_WORD:
				{
				setState(3299);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				{
				setState(3300);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_form1_clauseContext extends ParserRuleContext {
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode UPON() { return getToken(cobolParser.UPON, 0); }
		public Out_destContext out_dest() {
			return getRuleContext(Out_destContext.class,0);
		}
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode ADVANCING() { return getToken(cobolParser.ADVANCING, 0); }
		public Display_form1_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_form1_clause; }
	}

	public final Display_form1_clauseContext display_form1_clause() throws RecognitionException {
		Display_form1_clauseContext _localctx = new Display_form1_clauseContext(_ctx, getState());
		enterRule(_localctx, 222, RULE_display_form1_clause);
		int _la;
		try {
			setState(3338);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,478,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3309);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3303);
					match(WITH);
					setState(3305); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3304);
						separator();
						}
						}
						setState(3307); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3311);
				match(CONVERSION);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3312);
				match(UPON);
				setState(3314); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3313);
					separator();
					}
					}
					setState(3316); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3318);
				out_dest();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3326);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3320);
					match(WITH);
					setState(3322); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3321);
						separator();
						}
						}
						setState(3324); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3328);
				match(NO);
				setState(3336);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,477,_ctx) ) {
				case 1:
					{
					setState(3330); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3329);
						separator();
						}
						}
						setState(3332); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3334);
					match(ADVANCING);
					}
					break;
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Display_form2_clauseContext extends ParserRuleContext {
		public Display_form1_clauseContext display_form1_clause() {
			return getRuleContext(Display_form1_clauseContext.class,0);
		}
		public At_line_numberContext at_line_number() {
			return getRuleContext(At_line_numberContext.class,0);
		}
		public At_column_numberContext at_column_number() {
			return getRuleContext(At_column_numberContext.class,0);
		}
		public TerminalNode ERASE() { return getToken(cobolParser.ERASE, 0); }
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public TerminalNode BELL() { return getToken(cobolParser.BELL, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode UNDERLINED() { return getToken(cobolParser.UNDERLINED, 0); }
		public TerminalNode BOLD() { return getToken(cobolParser.BOLD, 0); }
		public TerminalNode BLINKING() { return getToken(cobolParser.BLINKING, 0); }
		public TerminalNode REVERSED() { return getToken(cobolParser.REVERSED, 0); }
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode ADVANCING() { return getToken(cobolParser.ADVANCING, 0); }
		public Display_form2_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_display_form2_clause; }
	}

	public final Display_form2_clauseContext display_form2_clause() throws RecognitionException {
		Display_form2_clauseContext _localctx = new Display_form2_clauseContext(_ctx, getState());
		enterRule(_localctx, 224, RULE_display_form2_clause);
		int _la;
		try {
			setState(3424);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,496,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3340);
				display_form1_clause();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3341);
				at_line_number();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3342);
				at_column_number();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(3343);
				match(ERASE);
				setState(3367);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,484,_ctx) ) {
				case 1:
					{
					setState(3345); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3344);
						separator();
						}
						}
						setState(3347); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3355);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==TO) {
						{
						setState(3349);
						match(TO);
						setState(3351); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3350);
							separator();
							}
							}
							setState(3353); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					setState(3357);
					match(END);
					setState(3365);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,483,_ctx) ) {
					case 1:
						{
						setState(3359); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3358);
							separator();
							}
							}
							setState(3361); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3363);
						match(OF);
						}
						break;
					}
					}
					break;
				}
				setState(3370); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3369);
					separator();
					}
					}
					setState(3372); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3374);
				_la = _input.LA(1);
				if ( !(_la==LINE || _la==SCREEN) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(3382);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3376);
					match(WITH);
					setState(3378); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3377);
						separator();
						}
						}
						setState(3380); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3384);
				match(BELL);
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(3385);
				match(UNDERLINED);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(3386);
				match(BOLD);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(3393);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3387);
					match(WITH);
					setState(3389); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3388);
						separator();
						}
						}
						setState(3391); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3395);
				match(BLINKING);
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(3396);
				match(REVERSED);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(3403);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3397);
					match(WITH);
					setState(3399); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3398);
						separator();
						}
						}
						setState(3401); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3405);
				match(CONVERSION);
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(3412);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3406);
					match(WITH);
					setState(3408); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3407);
						separator();
						}
						}
						setState(3410); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3414);
				match(NO);
				setState(3422);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,495,_ctx) ) {
				case 1:
					{
					setState(3416); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3415);
						separator();
						}
						}
						setState(3418); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3420);
					match(ADVANCING);
					}
					break;
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_line_numberContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public Number_valueContext number_value() {
			return getRuleContext(Number_valueContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_line_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_line_number; }
	}

	public final At_line_numberContext at_line_number() throws RecognitionException {
		At_line_numberContext _localctx = new At_line_numberContext(_ctx, getState());
		enterRule(_localctx, 226, RULE_at_line_number);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3432);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(3426);
				match(AT);
				setState(3428); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3427);
					separator();
					}
					}
					setState(3430); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(3434);
			match(LINE);
			setState(3442);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,500,_ctx) ) {
			case 1:
				{
				setState(3436); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3435);
					separator();
					}
					}
					setState(3438); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3440);
				match(NUMBER);
				}
				break;
			}
			setState(3445); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3444);
				separator();
				}
				}
				setState(3447); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3449);
			number_value();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_column_numberContext extends ParserRuleContext {
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public Number_valueContext number_value() {
			return getRuleContext(Number_valueContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_column_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_column_number; }
	}

	public final At_column_numberContext at_column_number() throws RecognitionException {
		At_column_numberContext _localctx = new At_column_numberContext(_ctx, getState());
		enterRule(_localctx, 228, RULE_at_column_number);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3457);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(3451);
				match(AT);
				setState(3453); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3452);
					separator();
					}
					}
					setState(3455); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(3459);
			match(COLUMN);
			setState(3467);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,505,_ctx) ) {
			case 1:
				{
				setState(3461); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3460);
					separator();
					}
					}
					setState(3463); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3465);
				match(NUMBER);
				}
				break;
			}
			setState(3470); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3469);
				separator();
				}
				}
				setState(3472); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3474);
			number_value();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Out_destContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Out_destContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_out_dest; }
	}

	public final Out_destContext out_dest() throws RecognitionException {
		Out_destContext _localctx = new Out_destContext(_ctx, getState());
		enterRule(_localctx, 230, RULE_out_dest);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3476);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Delete_statementContext extends ParserRuleContext {
		public TerminalNode DELETE() { return getToken(cobolParser.DELETE, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public Invalid_key_variantsContext invalid_key_variants() {
			return getRuleContext(Invalid_key_variantsContext.class,0);
		}
		public TerminalNode END_DELETE() { return getToken(cobolParser.END_DELETE, 0); }
		public Delete_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_delete_statement; }
	}

	public final Delete_statementContext delete_statement() throws RecognitionException {
		Delete_statementContext _localctx = new Delete_statementContext(_ctx, getState());
		enterRule(_localctx, 232, RULE_delete_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3478);
			match(DELETE);
			setState(3480); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3479);
				separator();
				}
				}
				setState(3482); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3484);
			file_name();
			setState(3492);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,509,_ctx) ) {
			case 1:
				{
				setState(3486); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3485);
					separator();
					}
					}
					setState(3488); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3490);
				match(RECORD);
				}
				break;
			}
			setState(3501);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,511,_ctx) ) {
			case 1:
				{
				setState(3495); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3494);
					separator();
					}
					}
					setState(3497); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3499);
				invalid_key_variants();
				}
				break;
			}
			setState(3510);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,513,_ctx) ) {
			case 1:
				{
				setState(3504); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3503);
					separator();
					}
					}
					setState(3506); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3508);
				match(END_DELETE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Continue_statementContext extends ParserRuleContext {
		public TerminalNode CONTINUE() { return getToken(cobolParser.CONTINUE, 0); }
		public Continue_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_continue_statement; }
	}

	public final Continue_statementContext continue_statement() throws RecognitionException {
		Continue_statementContext _localctx = new Continue_statementContext(_ctx, getState());
		enterRule(_localctx, 234, RULE_continue_statement);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3512);
			match(CONTINUE);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Compute_statementContext extends ParserRuleContext {
		public TerminalNode COMPUTE() { return getToken(cobolParser.COMPUTE, 0); }
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public TerminalNode EQUAL() { return getToken(cobolParser.EQUAL, 0); }
		public TerminalNode EQUAL_() { return getToken(cobolParser.EQUAL_, 0); }
		public List<Identifier_resultContext> identifier_result() {
			return getRuleContexts(Identifier_resultContext.class);
		}
		public Identifier_resultContext identifier_result(int i) {
			return getRuleContext(Identifier_resultContext.class,i);
		}
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_COMPUTE() { return getToken(cobolParser.END_COMPUTE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> ROUNDED() { return getTokens(cobolParser.ROUNDED); }
		public TerminalNode ROUNDED(int i) {
			return getToken(cobolParser.ROUNDED, i);
		}
		public Compute_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_compute_statement; }
	}

	public final Compute_statementContext compute_statement() throws RecognitionException {
		Compute_statementContext _localctx = new Compute_statementContext(_ctx, getState());
		enterRule(_localctx, 236, RULE_compute_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3514);
			match(COMPUTE);
			setState(3530); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(3516); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3515);
						separator();
						}
						}
						setState(3518); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3520);
					identifier_result();
					setState(3528);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,516,_ctx) ) {
					case 1:
						{
						setState(3522); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3521);
							separator();
							}
							}
							setState(3524); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3526);
						match(ROUNDED);
						}
						break;
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(3532); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,517,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(3558);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,522,_ctx) ) {
			case 1:
				{
				setState(3535); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3534);
					separator();
					}
					}
					setState(3537); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3539);
				match(EQUAL);
				setState(3541); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3540);
					separator();
					}
					}
					setState(3543); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
				break;
			case 2:
				{
				setState(3548);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(3545);
					separator();
					}
					}
					setState(3550);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(3551);
				match(EQUAL_);
				setState(3555);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(3552);
					separator();
					}
					}
					setState(3557);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				break;
			}
			setState(3560);
			arithmetic_expression(0);
			setState(3568);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,524,_ctx) ) {
			case 1:
				{
				setState(3562); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3561);
					separator();
					}
					}
					setState(3564); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3566);
				on_size_variants();
				}
				break;
			}
			setState(3577);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,526,_ctx) ) {
			case 1:
				{
				setState(3571); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3570);
					separator();
					}
					}
					setState(3573); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3575);
				match(END_COMPUTE);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Close_statementContext extends ParserRuleContext {
		public TerminalNode CLOSE() { return getToken(cobolParser.CLOSE, 0); }
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Close_paramsContext> close_params() {
			return getRuleContexts(Close_paramsContext.class);
		}
		public Close_paramsContext close_params(int i) {
			return getRuleContext(Close_paramsContext.class,i);
		}
		public Close_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_close_statement; }
	}

	public final Close_statementContext close_statement() throws RecognitionException {
		Close_statementContext _localctx = new Close_statementContext(_ctx, getState());
		enterRule(_localctx, 238, RULE_close_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3579);
			match(CLOSE);
			setState(3595); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(3581); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3580);
						separator();
						}
						}
						setState(3583); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3585);
					file_name();
					setState(3593);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,529,_ctx) ) {
					case 1:
						{
						setState(3587); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3586);
							separator();
							}
							}
							setState(3589); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3591);
						close_params();
						}
						break;
					}
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(3597); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,530,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Close_paramsContext extends ParserRuleContext {
		public TerminalNode REEL() { return getToken(cobolParser.REEL, 0); }
		public TerminalNode UNIT() { return getToken(cobolParser.UNIT, 0); }
		public TerminalNode REMOVAL() { return getToken(cobolParser.REMOVAL, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode REWIND() { return getToken(cobolParser.REWIND, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FOR() { return getToken(cobolParser.FOR, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public Close_paramsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_close_params; }
	}

	public final Close_paramsContext close_params() throws RecognitionException {
		Close_paramsContext _localctx = new Close_paramsContext(_ctx, getState());
		enterRule(_localctx, 240, RULE_close_params);
		int _la;
		try {
			setState(3653);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case REEL:
			case UNIT:
				enterOuterAlt(_localctx, 1);
				{
				setState(3599);
				_la = _input.LA(1);
				if ( !(_la==REEL || _la==UNIT) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(3632);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,538,_ctx) ) {
				case 1:
					{
					setState(3601); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3600);
						separator();
						}
						}
						setState(3603); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3630);
					_errHandler.sync(this);
					switch (_input.LA(1)) {
					case FOR:
					case REMOVAL:
						{
						setState(3611);
						_errHandler.sync(this);
						_la = _input.LA(1);
						if (_la==FOR) {
							{
							setState(3605);
							match(FOR);
							setState(3607); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(3606);
								separator();
								}
								}
								setState(3609); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							}
						}

						setState(3613);
						match(REMOVAL);
						}
						break;
					case NO:
					case WITH:
						{
						setState(3620);
						_errHandler.sync(this);
						_la = _input.LA(1);
						if (_la==WITH) {
							{
							setState(3614);
							match(WITH);
							setState(3616); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(3615);
								separator();
								}
								}
								setState(3618); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							}
						}

						setState(3622);
						match(NO);
						setState(3624); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3623);
							separator();
							}
							}
							setState(3626); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3628);
						match(REWIND);
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					}
					break;
				}
				}
				break;
			case LOCK:
			case NO:
			case WITH:
				enterOuterAlt(_localctx, 2);
				{
				setState(3640);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3634);
					match(WITH);
					setState(3636); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3635);
						separator();
						}
						}
						setState(3638); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3651);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case NO:
					{
					setState(3642);
					match(NO);
					setState(3644); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3643);
						separator();
						}
						}
						setState(3646); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3648);
					match(REWIND);
					}
					break;
				case LOCK:
					{
					setState(3650);
					match(LOCK);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Cancel_statementContext extends ParserRuleContext {
		public TerminalNode CANCEL() { return getToken(cobolParser.CANCEL, 0); }
		public List<Prog_nameContext> prog_name() {
			return getRuleContexts(Prog_nameContext.class);
		}
		public Prog_nameContext prog_name(int i) {
			return getRuleContext(Prog_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Cancel_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_cancel_statement; }
	}

	public final Cancel_statementContext cancel_statement() throws RecognitionException {
		Cancel_statementContext _localctx = new Cancel_statementContext(_ctx, getState());
		enterRule(_localctx, 242, RULE_cancel_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3655);
			match(CANCEL);
			setState(3663); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(3657); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3656);
						separator();
						}
						}
						setState(3659); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3661);
					prog_name();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(3665); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,545,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Call_statementContext extends ParserRuleContext {
		public TerminalNode CALL() { return getToken(cobolParser.CALL, 0); }
		public Prog_nameContext prog_name() {
			return getRuleContext(Prog_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Call_usingContext call_using() {
			return getRuleContext(Call_usingContext.class,0);
		}
		public Call_givingContext call_giving() {
			return getRuleContext(Call_givingContext.class,0);
		}
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_CALL() { return getToken(cobolParser.END_CALL, 0); }
		public Call_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_call_statement; }
	}

	public final Call_statementContext call_statement() throws RecognitionException {
		Call_statementContext _localctx = new Call_statementContext(_ctx, getState());
		enterRule(_localctx, 244, RULE_call_statement);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3667);
			match(CALL);
			setState(3669); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3668);
				separator();
				}
				}
				setState(3671); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3673);
			prog_name();
			setState(3681);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,548,_ctx) ) {
			case 1:
				{
				setState(3675); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3674);
					separator();
					}
					}
					setState(3677); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3679);
				call_using();
				}
				break;
			}
			setState(3690);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,550,_ctx) ) {
			case 1:
				{
				setState(3684); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3683);
					separator();
					}
					}
					setState(3686); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3688);
				call_giving();
				}
				break;
			}
			setState(3699);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,552,_ctx) ) {
			case 1:
				{
				setState(3693); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3692);
					separator();
					}
					}
					setState(3695); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3697);
				on_exception_variants();
				}
				break;
			}
			setState(3708);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,554,_ctx) ) {
			case 1:
				{
				setState(3702); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3701);
					separator();
					}
					}
					setState(3704); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3706);
				match(END_CALL);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Call_givingContext extends ParserRuleContext {
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Call_givingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_call_giving; }
	}

	public final Call_givingContext call_giving() throws RecognitionException {
		Call_givingContext _localctx = new Call_givingContext(_ctx, getState());
		enterRule(_localctx, 246, RULE_call_giving);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3710);
			match(GIVING);
			setState(3712); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3711);
				separator();
				}
				}
				setState(3714); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(3716);
			identifier_result();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Call_usingContext extends ParserRuleContext {
		public TerminalNode USING() { return getToken(cobolParser.USING, 0); }
		public List<Using_argContext> using_arg() {
			return getRuleContexts(Using_argContext.class);
		}
		public Using_argContext using_arg(int i) {
			return getRuleContext(Using_argContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Call_usingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_call_using; }
	}

	public final Call_usingContext call_using() throws RecognitionException {
		Call_usingContext _localctx = new Call_usingContext(_ctx, getState());
		enterRule(_localctx, 248, RULE_call_using);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3718);
			match(USING);
			setState(3726); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(3720); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3719);
						separator();
						}
						}
						setState(3722); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3724);
					using_arg();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(3728); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,557,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Using_argContext extends ParserRuleContext {
		public TerminalNode OMITTED() { return getToken(cobolParser.OMITTED, 0); }
		public List<ArgumentContext> argument() {
			return getRuleContexts(ArgumentContext.class);
		}
		public ArgumentContext argument(int i) {
			return getRuleContext(ArgumentContext.class,i);
		}
		public Using_prefixContext using_prefix() {
			return getRuleContext(Using_prefixContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Using_argContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_using_arg; }
	}

	public final Using_argContext using_arg() throws RecognitionException {
		Using_argContext _localctx = new Using_argContext(_ctx, getState());
		enterRule(_localctx, 250, RULE_using_arg);
		int _la;
		try {
			int _alt;
			setState(3752);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case OMITTED:
				enterOuterAlt(_localctx, 1);
				{
				setState(3730);
				match(OMITTED);
				}
				break;
			case BY:
			case CONTENT:
			case DESCRIPTOR:
			case REFERENCE:
			case VALUE:
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(3737);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY || _la==CONTENT || _la==DESCRIPTOR || _la==REFERENCE || _la==VALUE) {
					{
					setState(3731);
					using_prefix();
					setState(3733); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3732);
						separator();
						}
						}
						setState(3735); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3739);
				argument();
				setState(3749);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,561,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3741); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3740);
							separator();
							}
							}
							setState(3743); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3745);
						argument();
						}
						} 
					}
					setState(3751);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,561,_ctx);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Using_prefixContext extends ParserRuleContext {
		public TerminalNode REFERENCE() { return getToken(cobolParser.REFERENCE, 0); }
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CONTENT() { return getToken(cobolParser.CONTENT, 0); }
		public TerminalNode DESCRIPTOR() { return getToken(cobolParser.DESCRIPTOR, 0); }
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public Using_prefixContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_using_prefix; }
	}

	public final Using_prefixContext using_prefix() throws RecognitionException {
		Using_prefixContext _localctx = new Using_prefixContext(_ctx, getState());
		enterRule(_localctx, 252, RULE_using_prefix);
		int _la;
		try {
			setState(3790);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,571,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3760);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY) {
					{
					setState(3754);
					match(BY);
					setState(3756); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3755);
						separator();
						}
						}
						setState(3758); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3762);
				match(REFERENCE);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3769);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY) {
					{
					setState(3763);
					match(BY);
					setState(3765); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3764);
						separator();
						}
						}
						setState(3767); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3771);
				match(CONTENT);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3778);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY) {
					{
					setState(3772);
					match(BY);
					setState(3774); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3773);
						separator();
						}
						}
						setState(3776); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3780);
				match(DESCRIPTOR);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(3787);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==BY) {
					{
					setState(3781);
					match(BY);
					setState(3783); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3782);
						separator();
						}
						}
						setState(3785); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(3789);
				match(VALUE);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArgumentContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public ArgumentContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_argument; }
	}

	public final ArgumentContext argument() throws RecognitionException {
		ArgumentContext _localctx = new ArgumentContext(_ctx, getState());
		enterRule(_localctx, 254, RULE_argument);
		try {
			setState(3795);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(3792);
				qualified_data_item();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(3793);
				match(NUMERIC_LITERAL);
				}
				break;
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 3);
				{
				setState(3794);
				match(STRING_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Prog_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Prog_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prog_name; }
	}

	public final Prog_nameContext prog_name() throws RecognitionException {
		Prog_nameContext _localctx = new Prog_nameContext(_ctx, getState());
		enterRule(_localctx, 256, RULE_prog_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3797);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alter_statementContext extends ParserRuleContext {
		public TerminalNode ALTER() { return getToken(cobolParser.ALTER, 0); }
		public List<Alter_procContext> alter_proc() {
			return getRuleContexts(Alter_procContext.class);
		}
		public Alter_procContext alter_proc(int i) {
			return getRuleContext(Alter_procContext.class,i);
		}
		public List<TerminalNode> TO() { return getTokens(cobolParser.TO); }
		public TerminalNode TO(int i) {
			return getToken(cobolParser.TO, i);
		}
		public List<Alter_new_procContext> alter_new_proc() {
			return getRuleContexts(Alter_new_procContext.class);
		}
		public Alter_new_procContext alter_new_proc(int i) {
			return getRuleContext(Alter_new_procContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> PROCEED() { return getTokens(cobolParser.PROCEED); }
		public TerminalNode PROCEED(int i) {
			return getToken(cobolParser.PROCEED, i);
		}
		public Alter_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alter_statement; }
	}

	public final Alter_statementContext alter_statement() throws RecognitionException {
		Alter_statementContext _localctx = new Alter_statementContext(_ctx, getState());
		enterRule(_localctx, 258, RULE_alter_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3799);
			match(ALTER);
			setState(3833); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(3801); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3800);
						separator();
						}
						}
						setState(3803); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3805);
					alter_proc();
					setState(3807); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3806);
						separator();
						}
						}
						setState(3809); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3811);
					match(TO);
					setState(3813); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3812);
						separator();
						}
						}
						setState(3815); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3829);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==PROCEED) {
						{
						setState(3817);
						match(PROCEED);
						setState(3819); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3818);
							separator();
							}
							}
							setState(3821); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3823);
						match(TO);
						setState(3825); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3824);
							separator();
							}
							}
							setState(3827); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					setState(3831);
					alter_new_proc();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(3835); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,579,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alter_new_procContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Alter_new_procContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alter_new_proc; }
	}

	public final Alter_new_procContext alter_new_proc() throws RecognitionException {
		Alter_new_procContext _localctx = new Alter_new_procContext(_ctx, getState());
		enterRule(_localctx, 260, RULE_alter_new_proc);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3837);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alter_procContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Alter_procContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alter_proc; }
	}

	public final Alter_procContext alter_proc() throws RecognitionException {
		Alter_procContext _localctx = new Alter_procContext(_ctx, getState());
		enterRule(_localctx, 262, RULE_alter_proc);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3839);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Add_statementContext extends ParserRuleContext {
		public TerminalNode ADD() { return getToken(cobolParser.ADD, 0); }
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public List<Add_grpContext> add_grp() {
			return getRuleContexts(Add_grpContext.class);
		}
		public Add_grpContext add_grp(int i) {
			return getRuleContext(Add_grpContext.class,i);
		}
		public TerminalNode CORR() { return getToken(cobolParser.CORR, 0); }
		public TerminalNode CORRESPONDING() { return getToken(cobolParser.CORRESPONDING, 0); }
		public On_size_variantsContext on_size_variants() {
			return getRuleContext(On_size_variantsContext.class,0);
		}
		public TerminalNode END_ADD() { return getToken(cobolParser.END_ADD, 0); }
		public List<Add_numContext> add_num() {
			return getRuleContexts(Add_numContext.class);
		}
		public Add_numContext add_num(int i) {
			return getRuleContext(Add_numContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Identifier_resultContext> identifier_result() {
			return getRuleContexts(Identifier_resultContext.class);
		}
		public Identifier_resultContext identifier_result(int i) {
			return getRuleContext(Identifier_resultContext.class,i);
		}
		public List<TerminalNode> ROUNDED() { return getTokens(cobolParser.ROUNDED); }
		public TerminalNode ROUNDED(int i) {
			return getToken(cobolParser.ROUNDED, i);
		}
		public Add_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_add_statement; }
	}

	public final Add_statementContext add_statement() throws RecognitionException {
		Add_statementContext _localctx = new Add_statementContext(_ctx, getState());
		enterRule(_localctx, 264, RULE_add_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3970);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,604,_ctx) ) {
			case 1:
				{
				setState(3841);
				match(ADD);
				setState(3849); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(3843); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3842);
							separator();
							}
							}
							setState(3845); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3847);
						add_num();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(3851); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,581,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				setState(3854); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3853);
					separator();
					}
					}
					setState(3856); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3858);
				match(TO);
				setState(3874); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(3860); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3859);
							separator();
							}
							}
							setState(3862); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3864);
						identifier_result();
						setState(3872);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,585,_ctx) ) {
						case 1:
							{
							setState(3866); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(3865);
								separator();
								}
								}
								setState(3868); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(3870);
							match(ROUNDED);
							}
							break;
						}
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(3876); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,586,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				break;
			case 2:
				{
				setState(3878);
				match(ADD);
				setState(3888);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,588,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3880); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3879);
							separator();
							}
							}
							setState(3882); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3884);
						add_num();
						}
						} 
					}
					setState(3890);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,588,_ctx);
				}
				setState(3898);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,590,_ctx) ) {
				case 1:
					{
					setState(3892); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3891);
						separator();
						}
						}
						setState(3894); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3896);
					match(TO);
					}
					break;
				}
				setState(3907); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(3901); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3900);
							separator();
							}
							}
							setState(3903); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3905);
						add_num();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(3909); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,592,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				setState(3912); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3911);
					separator();
					}
					}
					setState(3914); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3916);
				match(GIVING);
				setState(3932); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(3918); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3917);
							separator();
							}
							}
							setState(3920); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(3922);
						identifier_result();
						setState(3930);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,596,_ctx) ) {
						case 1:
							{
							setState(3924); 
							_errHandler.sync(this);
							_la = _input.LA(1);
							do {
								{
								{
								setState(3923);
								separator();
								}
								}
								setState(3926); 
								_errHandler.sync(this);
								_la = _input.LA(1);
							} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
							setState(3928);
							match(ROUNDED);
							}
							break;
						}
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(3934); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,597,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				break;
			case 3:
				{
				setState(3936);
				match(ADD);
				setState(3938); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3937);
					separator();
					}
					}
					setState(3940); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3942);
				_la = _input.LA(1);
				if ( !(_la==CORR || _la==CORRESPONDING) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(3944); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3943);
					separator();
					}
					}
					setState(3946); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3948);
				add_grp();
				setState(3950); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3949);
					separator();
					}
					}
					setState(3952); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3954);
				match(TO);
				setState(3956); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3955);
					separator();
					}
					}
					setState(3958); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3960);
				add_grp();
				setState(3968);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,603,_ctx) ) {
				case 1:
					{
					setState(3962); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3961);
						separator();
						}
						}
						setState(3964); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(3966);
					match(ROUNDED);
					}
					break;
				}
				}
				break;
			}
			setState(3979);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,606,_ctx) ) {
			case 1:
				{
				setState(3973); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3972);
					separator();
					}
					}
					setState(3975); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3977);
				on_size_variants();
				}
				break;
			}
			setState(3988);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,608,_ctx) ) {
			case 1:
				{
				setState(3982); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3981);
					separator();
					}
					}
					setState(3984); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(3986);
				match(END_ADD);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Add_grpContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Add_grpContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_add_grp; }
	}

	public final Add_grpContext add_grp() throws RecognitionException {
		Add_grpContext _localctx = new Add_grpContext(_ctx, getState());
		enterRule(_localctx, 266, RULE_add_grp);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3990);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Add_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public Add_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_add_num; }
	}

	public final Add_numContext add_num() throws RecognitionException {
		Add_numContext _localctx = new Add_numContext(_ctx, getState());
		enterRule(_localctx, 268, RULE_add_num);
		try {
			setState(3994);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(3992);
				match(NUMERIC_LITERAL);
				}
				break;
			case FUNCTION:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(3993);
				identifier();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_statementContext extends ParserRuleContext {
		public Accept_form1Context accept_form1() {
			return getRuleContext(Accept_form1Context.class,0);
		}
		public Accept_form2Context accept_form2() {
			return getRuleContext(Accept_form2Context.class,0);
		}
		public Accept_form3Context accept_form3() {
			return getRuleContext(Accept_form3Context.class,0);
		}
		public Accept_form4Context accept_form4() {
			return getRuleContext(Accept_form4Context.class,0);
		}
		public Accept_form5Context accept_form5() {
			return getRuleContext(Accept_form5Context.class,0);
		}
		public Accept_form6Context accept_form6() {
			return getRuleContext(Accept_form6Context.class,0);
		}
		public Accept_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_statement; }
	}

	public final Accept_statementContext accept_statement() throws RecognitionException {
		Accept_statementContext _localctx = new Accept_statementContext(_ctx, getState());
		enterRule(_localctx, 270, RULE_accept_statement);
		try {
			setState(4002);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,610,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3996);
				accept_form1();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3997);
				accept_form2();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3998);
				accept_form3();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(3999);
				accept_form4();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(4000);
				accept_form5();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(4001);
				accept_form6();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_exception_variantsContext extends ParserRuleContext {
		public List<On_exceptionContext> on_exception() {
			return getRuleContexts(On_exceptionContext.class);
		}
		public On_exceptionContext on_exception(int i) {
			return getRuleContext(On_exceptionContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_exception_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_exception_variants; }
	}

	public final On_exception_variantsContext on_exception_variants() throws RecognitionException {
		On_exception_variantsContext _localctx = new On_exception_variantsContext(_ctx, getState());
		enterRule(_localctx, 272, RULE_on_exception_variants);
		int _la;
		try {
			setState(4036);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case EXCEPTION:
			case ON:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(4004);
				on_exception();
				setState(4018);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,613,_ctx) ) {
				case 1:
					{
					setState(4006); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4005);
						separator();
						}
						}
						setState(4008); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4010);
					match(NOT);
					setState(4012); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4011);
						separator();
						}
						}
						setState(4014); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4016);
					on_exception();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(4020);
				match(NOT);
				setState(4022); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4021);
					separator();
					}
					}
					setState(4024); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4026);
				on_exception();
				setState(4034);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,616,_ctx) ) {
				case 1:
					{
					setState(4028); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4027);
						separator();
						}
						}
						setState(4030); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4032);
					on_exception();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_end_variantsContext extends ParserRuleContext {
		public List<At_endContext> at_end() {
			return getRuleContexts(At_endContext.class);
		}
		public At_endContext at_end(int i) {
			return getRuleContext(At_endContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_end_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_end_variants; }
	}

	public final At_end_variantsContext at_end_variants() throws RecognitionException {
		At_end_variantsContext _localctx = new At_end_variantsContext(_ctx, getState());
		enterRule(_localctx, 274, RULE_at_end_variants);
		int _la;
		try {
			setState(4070);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case AT:
			case END:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(4038);
				at_end();
				setState(4052);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,620,_ctx) ) {
				case 1:
					{
					setState(4040); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4039);
						separator();
						}
						}
						setState(4042); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4044);
					match(NOT);
					setState(4046); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4045);
						separator();
						}
						}
						setState(4048); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4050);
					at_end();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(4054);
				match(NOT);
				setState(4056); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4055);
					separator();
					}
					}
					setState(4058); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4060);
				at_end();
				setState(4068);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,623,_ctx) ) {
				case 1:
					{
					setState(4062); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4061);
						separator();
						}
						}
						setState(4064); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4066);
					at_end();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_size_variantsContext extends ParserRuleContext {
		public List<On_sizeContext> on_size() {
			return getRuleContexts(On_sizeContext.class);
		}
		public On_sizeContext on_size(int i) {
			return getRuleContext(On_sizeContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_size_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_size_variants; }
	}

	public final On_size_variantsContext on_size_variants() throws RecognitionException {
		On_size_variantsContext _localctx = new On_size_variantsContext(_ctx, getState());
		enterRule(_localctx, 276, RULE_on_size_variants);
		int _la;
		try {
			setState(4104);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ON:
			case SIZE:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(4072);
				on_size();
				setState(4086);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,627,_ctx) ) {
				case 1:
					{
					setState(4074); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4073);
						separator();
						}
						}
						setState(4076); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4078);
					match(NOT);
					setState(4080); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4079);
						separator();
						}
						}
						setState(4082); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4084);
					on_size();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(4088);
				match(NOT);
				setState(4090); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4089);
					separator();
					}
					}
					setState(4092); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4094);
				on_size();
				setState(4102);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,630,_ctx) ) {
				case 1:
					{
					setState(4096); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4095);
						separator();
						}
						}
						setState(4098); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4100);
					on_size();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Invalid_key_variantsContext extends ParserRuleContext {
		public List<Invalid_keyContext> invalid_key() {
			return getRuleContexts(Invalid_keyContext.class);
		}
		public Invalid_keyContext invalid_key(int i) {
			return getRuleContext(Invalid_keyContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Invalid_key_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_invalid_key_variants; }
	}

	public final Invalid_key_variantsContext invalid_key_variants() throws RecognitionException {
		Invalid_key_variantsContext _localctx = new Invalid_key_variantsContext(_ctx, getState());
		enterRule(_localctx, 278, RULE_invalid_key_variants);
		int _la;
		try {
			setState(4138);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case INVALID:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(4106);
				invalid_key();
				setState(4120);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,634,_ctx) ) {
				case 1:
					{
					setState(4108); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4107);
						separator();
						}
						}
						setState(4110); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4112);
					match(NOT);
					setState(4114); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4113);
						separator();
						}
						}
						setState(4116); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4118);
					invalid_key();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(4122);
				match(NOT);
				setState(4124); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4123);
					separator();
					}
					}
					setState(4126); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4128);
				invalid_key();
				setState(4136);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,637,_ctx) ) {
				case 1:
					{
					setState(4130); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4129);
						separator();
						}
						}
						setState(4132); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4134);
					invalid_key();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form6Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public Accept6_itemContext accept6_item() {
			return getRuleContext(Accept6_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public Accept_form6Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form6; }
	}

	public final Accept_form6Context accept_form6() throws RecognitionException {
		Accept_form6Context _localctx = new Accept_form6Context(_ctx, getState());
		enterRule(_localctx, 280, RULE_accept_form6);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4140);
			match(ACCEPT);
			setState(4142); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4141);
				separator();
				}
				}
				setState(4144); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4146);
			dest_item();
			setState(4148); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4147);
				separator();
				}
				}
				setState(4150); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4158);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FROM) {
				{
				setState(4152);
				match(FROM);
				setState(4154); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4153);
					separator();
					}
					}
					setState(4156); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(4160);
			accept6_item();
			setState(4168);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,644,_ctx) ) {
			case 1:
				{
				setState(4162); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4161);
					separator();
					}
					}
					setState(4164); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4166);
				on_exception_variants();
				}
				break;
			}
			setState(4177);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,646,_ctx) ) {
			case 1:
				{
				setState(4171); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4170);
					separator();
					}
					}
					setState(4173); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4175);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept6_itemContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Accept6_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept6_item; }
	}

	public final Accept6_itemContext accept6_item() throws RecognitionException {
		Accept6_itemContext _localctx = new Accept6_itemContext(_ctx, getState());
		enterRule(_localctx, 282, RULE_accept6_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4179);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form1Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Input_sourceContext input_source() {
			return getRuleContext(Input_sourceContext.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public Accept_form1Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form1; }
	}

	public final Accept_form1Context accept_form1() throws RecognitionException {
		Accept_form1Context _localctx = new Accept_form1Context(_ctx, getState());
		enterRule(_localctx, 284, RULE_accept_form1);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4181);
			match(ACCEPT);
			setState(4183); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4182);
				separator();
				}
				}
				setState(4185); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4187);
			dest_item();
			setState(4201);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,650,_ctx) ) {
			case 1:
				{
				setState(4189); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4188);
					separator();
					}
					}
					setState(4191); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4193);
				match(FROM);
				setState(4195); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4194);
					separator();
					}
					}
					setState(4197); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4199);
				input_source();
				}
				break;
			}
			setState(4216);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,653,_ctx) ) {
			case 1:
				{
				setState(4204); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4203);
					separator();
					}
					}
					setState(4206); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4208);
				match(WITH);
				setState(4210); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4209);
					separator();
					}
					}
					setState(4212); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4214);
				match(CONVERSION);
				}
				break;
			}
			setState(4225);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,655,_ctx) ) {
			case 1:
				{
				setState(4219); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4218);
					separator();
					}
					}
					setState(4221); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4223);
				at_end_variants();
				}
				break;
			}
			setState(4234);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,657,_ctx) ) {
			case 1:
				{
				setState(4228); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4227);
					separator();
					}
					}
					setState(4230); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4232);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form2Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Date_timeContext date_time() {
			return getRuleContext(Date_timeContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Accept_form2Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form2; }
	}

	public final Accept_form2Context accept_form2() throws RecognitionException {
		Accept_form2Context _localctx = new Accept_form2Context(_ctx, getState());
		enterRule(_localctx, 286, RULE_accept_form2);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4236);
			match(ACCEPT);
			setState(4238); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4237);
				separator();
				}
				}
				setState(4240); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4242);
			dest_item();
			setState(4244); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4243);
				separator();
				}
				}
				setState(4246); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4248);
			match(FROM);
			setState(4250); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4249);
				separator();
				}
				}
				setState(4252); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4254);
			date_time();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form3Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Accept_form3_clauseContext> accept_form3_clause() {
			return getRuleContexts(Accept_form3_clauseContext.class);
		}
		public Accept_form3_clauseContext accept_form3_clause(int i) {
			return getRuleContext(Accept_form3_clauseContext.class,i);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public Accept_form3Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form3; }
	}

	public final Accept_form3Context accept_form3() throws RecognitionException {
		Accept_form3Context _localctx = new Accept_form3Context(_ctx, getState());
		enterRule(_localctx, 288, RULE_accept_form3);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4256);
			match(ACCEPT);
			setState(4258); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4257);
				separator();
				}
				}
				setState(4260); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4262);
			dest_item();
			setState(4270); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(4264); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4263);
						separator();
						}
						}
						setState(4266); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4268);
					accept_form3_clause();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4272); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,663,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(4283);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,666,_ctx) ) {
			case 1:
				{
				setState(4275); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4274);
					separator();
					}
					}
					setState(4277); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4281);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,665,_ctx) ) {
				case 1:
					{
					setState(4279);
					on_exception_variants();
					}
					break;
				case 2:
					{
					setState(4280);
					at_end_variants();
					}
					break;
				}
				}
				break;
			}
			setState(4292);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,668,_ctx) ) {
			case 1:
				{
				setState(4286); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4285);
					separator();
					}
					}
					setState(4288); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4290);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form4Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Key_dest_itemContext key_dest_item() {
			return getRuleContext(Key_dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public List<Accept_form4_clauseContext> accept_form4_clause() {
			return getRuleContexts(Accept_form4_clauseContext.class);
		}
		public Accept_form4_clauseContext accept_form4_clause(int i) {
			return getRuleContext(Accept_form4_clauseContext.class,i);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public Accept_form4Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form4; }
	}

	public final Accept_form4Context accept_form4() throws RecognitionException {
		Accept_form4Context _localctx = new Accept_form4Context(_ctx, getState());
		enterRule(_localctx, 290, RULE_accept_form4);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4294);
			match(ACCEPT);
			setState(4296); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4295);
				separator();
				}
				}
				setState(4298); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4306);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONTROL) {
				{
				setState(4300);
				match(CONTROL);
				setState(4302); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4301);
					separator();
					}
					}
					setState(4304); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(4308);
			match(KEY);
			setState(4310); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4309);
				separator();
				}
				}
				setState(4312); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4320);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IN) {
				{
				setState(4314);
				match(IN);
				setState(4316); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4315);
					separator();
					}
					}
					setState(4318); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(4322);
			key_dest_item();
			setState(4330); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(4324); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4323);
						separator();
						}
						}
						setState(4326); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4328);
					accept_form4_clause();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4332); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,676,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(4343);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,679,_ctx) ) {
			case 1:
				{
				setState(4335); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4334);
					separator();
					}
					}
					setState(4337); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4341);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,678,_ctx) ) {
				case 1:
					{
					setState(4339);
					on_exception_variants();
					}
					break;
				case 2:
					{
					setState(4340);
					at_end_variants();
					}
					break;
				}
				}
				break;
			}
			setState(4352);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,681,_ctx) ) {
			case 1:
				{
				setState(4346); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4345);
					separator();
					}
					}
					setState(4348); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4350);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form5Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Screen_nameContext screen_name() {
			return getRuleContext(Screen_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Accept_atContext accept_at() {
			return getRuleContext(Accept_atContext.class,0);
		}
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public Accept_form5Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form5; }
	}

	public final Accept_form5Context accept_form5() throws RecognitionException {
		Accept_form5Context _localctx = new Accept_form5Context(_ctx, getState());
		enterRule(_localctx, 292, RULE_accept_form5);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4354);
			match(ACCEPT);
			setState(4356); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4355);
				separator();
				}
				}
				setState(4358); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4360);
			screen_name();
			setState(4368);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,684,_ctx) ) {
			case 1:
				{
				setState(4362); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4361);
					separator();
					}
					}
					setState(4364); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4366);
				accept_at();
				}
				break;
			}
			setState(4377);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,686,_ctx) ) {
			case 1:
				{
				setState(4371); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4370);
					separator();
					}
					}
					setState(4373); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4375);
				on_exception_variants();
				}
				break;
			}
			setState(4386);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,688,_ctx) ) {
			case 1:
				{
				setState(4380); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4379);
					separator();
					}
					}
					setState(4382); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4384);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_atContext extends ParserRuleContext {
		public Accept_at_lineContext accept_at_line() {
			return getRuleContext(Accept_at_lineContext.class,0);
		}
		public Accept_at_columnContext accept_at_column() {
			return getRuleContext(Accept_at_columnContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Accept_atContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_at; }
	}

	public final Accept_atContext accept_at() throws RecognitionException {
		Accept_atContext _localctx = new Accept_atContext(_ctx, getState());
		enterRule(_localctx, 294, RULE_accept_at);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4394);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(4388);
				match(AT);
				setState(4390); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4389);
					separator();
					}
					}
					setState(4392); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(4416);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LINE:
				{
				setState(4396);
				accept_at_line();
				setState(4404);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,692,_ctx) ) {
				case 1:
					{
					setState(4398); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4397);
						separator();
						}
						}
						setState(4400); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4402);
					accept_at_column();
					}
					break;
				}
				}
				break;
			case COLUMN:
				{
				setState(4406);
				accept_at_column();
				setState(4414);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,694,_ctx) ) {
				case 1:
					{
					setState(4408); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4407);
						separator();
						}
						}
						setState(4410); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4412);
					accept_at_line();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_at_lineContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public Accept_at_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_at_line; }
	}

	public final Accept_at_lineContext accept_at_line() throws RecognitionException {
		Accept_at_lineContext _localctx = new Accept_at_lineContext(_ctx, getState());
		enterRule(_localctx, 296, RULE_accept_at_line);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4418);
			match(LINE);
			setState(4420); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4419);
				separator();
				}
				}
				setState(4422); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4430);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==NUMBER) {
				{
				setState(4424);
				match(NUMBER);
				setState(4426); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4425);
					separator();
					}
					}
					setState(4428); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(4434);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				{
				setState(4432);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				{
				setState(4433);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_at_columnContext extends ParserRuleContext {
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public Accept_at_columnContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_at_column; }
	}

	public final Accept_at_columnContext accept_at_column() throws RecognitionException {
		Accept_at_columnContext _localctx = new Accept_at_columnContext(_ctx, getState());
		enterRule(_localctx, 298, RULE_accept_at_column);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4436);
			match(COLUMN);
			setState(4438); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4437);
				separator();
				}
				}
				setState(4440); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4448);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==NUMBER) {
				{
				setState(4442);
				match(NUMBER);
				setState(4444); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4443);
					separator();
					}
					}
					setState(4446); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(4452);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				{
				setState(4450);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				{
				setState(4451);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form4_clauseContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public Number_valueContext number_value() {
			return getRuleContext(Number_valueContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode ERASE() { return getToken(cobolParser.ERASE, 0); }
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public TerminalNode BELL() { return getToken(cobolParser.BELL, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public Accept_form4_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form4_clause; }
	}

	public final Accept_form4_clauseContext accept_form4_clause() throws RecognitionException {
		Accept_form4_clauseContext _localctx = new Accept_form4_clauseContext(_ctx, getState());
		enterRule(_localctx, 300, RULE_accept_form4_clause);
		int _la;
		try {
			setState(4546);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,723,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(4460);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==FROM) {
					{
					setState(4454);
					match(FROM);
					setState(4456); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4455);
						separator();
						}
						}
						setState(4458); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(4462);
				match(LINE);
				setState(4470);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,707,_ctx) ) {
				case 1:
					{
					setState(4464); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4463);
						separator();
						}
						}
						setState(4466); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4468);
					match(NUMBER);
					}
					break;
				}
				setState(4473); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4472);
					separator();
					}
					}
					setState(4475); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4477);
				number_value();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(4485);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==FROM) {
					{
					setState(4479);
					match(FROM);
					setState(4481); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4480);
						separator();
						}
						}
						setState(4483); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(4487);
				match(COLUMN);
				setState(4495);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,712,_ctx) ) {
				case 1:
					{
					setState(4489); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4488);
						separator();
						}
						}
						setState(4491); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4493);
					match(NUMBER);
					}
					break;
				}
				setState(4498); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4497);
					separator();
					}
					}
					setState(4500); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4502);
				number_value();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(4504);
				match(ERASE);
				setState(4528);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,719,_ctx) ) {
				case 1:
					{
					setState(4506); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4505);
						separator();
						}
						}
						setState(4508); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4516);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==TO) {
						{
						setState(4510);
						match(TO);
						setState(4512); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4511);
							separator();
							}
							}
							setState(4514); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					setState(4518);
					match(END);
					setState(4526);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,718,_ctx) ) {
					case 1:
						{
						setState(4520); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4519);
							separator();
							}
							}
							setState(4522); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(4524);
						match(OF);
						}
						break;
					}
					}
					break;
				}
				setState(4531); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4530);
					separator();
					}
					}
					setState(4533); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4535);
				_la = _input.LA(1);
				if ( !(_la==LINE || _la==SCREEN) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(4543);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(4537);
					match(WITH);
					setState(4539); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4538);
						separator();
						}
						}
						setState(4541); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(4545);
				match(BELL);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form3_clauseContext extends ParserRuleContext {
		public Accept_form4_clauseContext accept_form4_clause() {
			return getRuleContext(Accept_form4_clauseContext.class,0);
		}
		public TerminalNode UNDERLINED() { return getToken(cobolParser.UNDERLINED, 0); }
		public TerminalNode BOLD() { return getToken(cobolParser.BOLD, 0); }
		public TerminalNode BLINKING() { return getToken(cobolParser.BLINKING, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode PROTECTED() { return getToken(cobolParser.PROTECTED, 0); }
		public Protected_valueContext protected_value() {
			return getRuleContext(Protected_valueContext.class,0);
		}
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public TerminalNode REVERSED() { return getToken(cobolParser.REVERSED, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode ECHO() { return getToken(cobolParser.ECHO, 0); }
		public TerminalNode DEFAULT() { return getToken(cobolParser.DEFAULT, 0); }
		public Def_valueContext def_value() {
			return getRuleContext(Def_valueContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Key_dest_itemContext key_dest_item() {
			return getRuleContext(Key_dest_itemContext.class,0);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public Accept_form3_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form3_clause; }
	}

	public final Accept_form3_clauseContext accept_form3_clause() throws RecognitionException {
		Accept_form3_clauseContext _localctx = new Accept_form3_clauseContext(_ctx, getState());
		enterRule(_localctx, 302, RULE_accept_form3_clause);
		int _la;
		try {
			setState(4637);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,741,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(4548);
				accept_form4_clause();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(4549);
				match(UNDERLINED);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(4550);
				match(BOLD);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(4557);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(4551);
					match(WITH);
					setState(4553); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4552);
						separator();
						}
						}
						setState(4555); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(4559);
				match(BLINKING);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(4560);
				match(PROTECTED);
				setState(4568);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,727,_ctx) ) {
				case 1:
					{
					setState(4562); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4561);
						separator();
						}
						}
						setState(4564); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4566);
					protected_value();
					}
					break;
				}
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(4576);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(4570);
					match(WITH);
					setState(4572); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4571);
						separator();
						}
						}
						setState(4574); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(4578);
				match(CONVERSION);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(4579);
				match(REVERSED);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(4586);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(4580);
					match(WITH);
					setState(4582); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4581);
						separator();
						}
						}
						setState(4584); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(4588);
				match(NO);
				setState(4590); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4589);
					separator();
					}
					}
					setState(4592); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4594);
				match(ECHO);
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(4596);
				match(DEFAULT);
				setState(4598); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4597);
					separator();
					}
					}
					setState(4600); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4608);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4602);
					match(IS);
					setState(4604); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4603);
						separator();
						}
						}
						setState(4606); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(4610);
				def_value();
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(4618);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CONTROL) {
					{
					setState(4612);
					match(CONTROL);
					setState(4614); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4613);
						separator();
						}
						}
						setState(4616); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(4620);
				match(KEY);
				setState(4628);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,739,_ctx) ) {
				case 1:
					{
					setState(4622); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4621);
						separator();
						}
						}
						setState(4624); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4626);
					match(IN);
					}
					break;
				}
				setState(4631); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4630);
					separator();
					}
					}
					setState(4633); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4635);
				key_dest_item();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Key_dest_itemContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Key_dest_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_key_dest_item; }
	}

	public final Key_dest_itemContext key_dest_item() throws RecognitionException {
		Key_dest_itemContext _localctx = new Key_dest_itemContext(_ctx, getState());
		enterRule(_localctx, 304, RULE_key_dest_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4639);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Def_valueContext extends ParserRuleContext {
		public Figurative_constantContext figurative_constant() {
			return getRuleContext(Figurative_constantContext.class,0);
		}
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode CURRENT() { return getToken(cobolParser.CURRENT, 0); }
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Def_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_def_value; }
	}

	public final Def_valueContext def_value() throws RecognitionException {
		Def_valueContext _localctx = new Def_valueContext(_ctx, getState());
		enterRule(_localctx, 306, RULE_def_value);
		int _la;
		try {
			setState(4654);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
				enterOuterAlt(_localctx, 1);
				{
				setState(4641);
				figurative_constant();
				}
				break;
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(4642);
				match(STRING_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 3);
				{
				setState(4643);
				qualified_data_item();
				}
				break;
			case CURRENT:
				enterOuterAlt(_localctx, 4);
				{
				setState(4644);
				match(CURRENT);
				setState(4652);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,743,_ctx) ) {
				case 1:
					{
					setState(4646); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4645);
						separator();
						}
						}
						setState(4648); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4650);
					match(VALUE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Protected_valueContext extends ParserRuleContext {
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public Prot_size_valueContext prot_size_value() {
			return getRuleContext(Prot_size_valueContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode AUTOTERMINATE() { return getToken(cobolParser.AUTOTERMINATE, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode EDITING() { return getToken(cobolParser.EDITING, 0); }
		public TerminalNode FILLER() { return getToken(cobolParser.FILLER, 0); }
		public Prot_fill_litContext prot_fill_lit() {
			return getRuleContext(Prot_fill_litContext.class,0);
		}
		public Protected_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_protected_value; }
	}

	public final Protected_valueContext protected_value() throws RecognitionException {
		Protected_valueContext _localctx = new Protected_valueContext(_ctx, getState());
		enterRule(_localctx, 308, RULE_protected_value);
		int _la;
		try {
			setState(4714);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,756,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(4656);
				match(SIZE);
				setState(4658); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4657);
					separator();
					}
					}
					setState(4660); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4662);
				prot_size_value();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(4670);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(4664);
					match(WITH);
					setState(4666); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4665);
						separator();
						}
						}
						setState(4668); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(4672);
				match(AUTOTERMINATE);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(4679);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(4673);
					match(WITH);
					setState(4675); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4674);
						separator();
						}
						}
						setState(4677); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(4681);
				match(NO);
				setState(4683); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4682);
					separator();
					}
					}
					setState(4685); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4687);
				match(BLANK);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(4695);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(4689);
					match(WITH);
					setState(4691); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4690);
						separator();
						}
						}
						setState(4693); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(4697);
				match(EDITING);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(4704);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(4698);
					match(WITH);
					setState(4700); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4699);
						separator();
						}
						}
						setState(4702); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(4706);
				match(FILLER);
				setState(4708); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4707);
					separator();
					}
					}
					setState(4710); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4712);
				prot_fill_lit();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Prot_fill_litContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Prot_fill_litContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prot_fill_lit; }
	}

	public final Prot_fill_litContext prot_fill_lit() throws RecognitionException {
		Prot_fill_litContext _localctx = new Prot_fill_litContext(_ctx, getState());
		enterRule(_localctx, 310, RULE_prot_fill_lit);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4716);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Prot_size_valueContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Prot_size_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prot_size_value; }
	}

	public final Prot_size_valueContext prot_size_value() throws RecognitionException {
		Prot_size_valueContext _localctx = new Prot_size_valueContext(_ctx, getState());
		enterRule(_localctx, 312, RULE_prot_size_value);
		try {
			setState(4720);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4718);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(4719);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Number_valueContext extends ParserRuleContext {
		public Line_numContext line_num() {
			return getRuleContext(Line_numContext.class,0);
		}
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Number_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_number_value; }
	}

	public final Number_valueContext number_value() throws RecognitionException {
		Number_valueContext _localctx = new Number_valueContext(_ctx, getState());
		enterRule(_localctx, 314, RULE_number_value);
		int _la;
		try {
			setState(4751);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(4722);
				line_num();
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(4723);
				qualified_data_item();
				setState(4739);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,761,_ctx) ) {
				case 1:
					{
					setState(4725); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4724);
						separator();
						}
						}
						setState(4727); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4729);
					match(PLUS);
					setState(4737);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,760,_ctx) ) {
					case 1:
						{
						setState(4731); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4730);
							separator();
							}
							}
							setState(4733); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(4735);
						line_num();
						}
						break;
					}
					}
					break;
				}
				}
				break;
			case PLUS:
				enterOuterAlt(_localctx, 3);
				{
				setState(4741);
				match(PLUS);
				setState(4749);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,763,_ctx) ) {
				case 1:
					{
					setState(4743); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4742);
						separator();
						}
						}
						setState(4745); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4747);
					line_num();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Date_timeContext extends ParserRuleContext {
		public TerminalNode DATE() { return getToken(cobolParser.DATE, 0); }
		public TerminalNode YYYYMMDD() { return getToken(cobolParser.YYYYMMDD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode DAY() { return getToken(cobolParser.DAY, 0); }
		public TerminalNode YYYYDDD() { return getToken(cobolParser.YYYYDDD, 0); }
		public TerminalNode DAY_OF_WEEK() { return getToken(cobolParser.DAY_OF_WEEK, 0); }
		public TerminalNode TIME() { return getToken(cobolParser.TIME, 0); }
		public Date_timeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_date_time; }
	}

	public final Date_timeContext date_time() throws RecognitionException {
		Date_timeContext _localctx = new Date_timeContext(_ctx, getState());
		enterRule(_localctx, 316, RULE_date_time);
		int _la;
		try {
			setState(4775);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DATE:
				enterOuterAlt(_localctx, 1);
				{
				setState(4753);
				match(DATE);
				setState(4761);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,766,_ctx) ) {
				case 1:
					{
					setState(4755); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4754);
						separator();
						}
						}
						setState(4757); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4759);
					match(YYYYMMDD);
					}
					break;
				}
				}
				break;
			case DAY:
				enterOuterAlt(_localctx, 2);
				{
				setState(4763);
				match(DAY);
				setState(4771);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,768,_ctx) ) {
				case 1:
					{
					setState(4765); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4764);
						separator();
						}
						}
						setState(4767); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(4769);
					match(YYYYDDD);
					}
					break;
				}
				}
				break;
			case DAY_OF_WEEK:
				enterOuterAlt(_localctx, 3);
				{
				setState(4773);
				match(DAY_OF_WEEK);
				}
				break;
			case TIME:
				enterOuterAlt(_localctx, 4);
				{
				setState(4774);
				match(TIME);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Dest_itemContext extends ParserRuleContext {
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public Dest_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_dest_item; }
	}

	public final Dest_itemContext dest_item() throws RecognitionException {
		Dest_itemContext _localctx = new Dest_itemContext(_ctx, getState());
		enterRule(_localctx, 318, RULE_dest_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4777);
			identifier_result();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Input_sourceContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Input_sourceContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_input_source; }
	}

	public final Input_sourceContext input_source() throws RecognitionException {
		Input_sourceContext _localctx = new Input_sourceContext(_ctx, getState());
		enterRule(_localctx, 320, RULE_input_source);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4779);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_endContext extends ParserRuleContext {
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public SentenseContext sentense() {
			return getRuleContext(SentenseContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_endContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_end; }
	}

	public final At_endContext at_end() throws RecognitionException {
		At_endContext _localctx = new At_endContext(_ctx, getState());
		enterRule(_localctx, 322, RULE_at_end);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4787);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(4781);
				match(AT);
				setState(4783); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4782);
					separator();
					}
					}
					setState(4785); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(4789);
			match(END);
			setState(4797);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,773,_ctx) ) {
			case 1:
				{
				setState(4791); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4790);
					separator();
					}
					}
					setState(4793); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4795);
				sentense();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_exceptionContext extends ParserRuleContext {
		public TerminalNode EXCEPTION() { return getToken(cobolParser.EXCEPTION, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public SentenseContext sentense() {
			return getRuleContext(SentenseContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_exceptionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_exception; }
	}

	public final On_exceptionContext on_exception() throws RecognitionException {
		On_exceptionContext _localctx = new On_exceptionContext(_ctx, getState());
		enterRule(_localctx, 324, RULE_on_exception);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4805);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ON) {
				{
				setState(4799);
				match(ON);
				setState(4801); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4800);
					separator();
					}
					}
					setState(4803); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(4807);
			match(EXCEPTION);
			setState(4815);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,777,_ctx) ) {
			case 1:
				{
				setState(4809); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4808);
					separator();
					}
					}
					setState(4811); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4813);
				sentense();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_sizeContext extends ParserRuleContext {
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public TerminalNode ERROR() { return getToken(cobolParser.ERROR, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public SentenseContext sentense() {
			return getRuleContext(SentenseContext.class,0);
		}
		public On_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_size; }
	}

	public final On_sizeContext on_size() throws RecognitionException {
		On_sizeContext _localctx = new On_sizeContext(_ctx, getState());
		enterRule(_localctx, 326, RULE_on_size);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4823);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ON) {
				{
				setState(4817);
				match(ON);
				setState(4819); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4818);
					separator();
					}
					}
					setState(4821); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(4825);
			match(SIZE);
			setState(4827); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4826);
				separator();
				}
				}
				setState(4829); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4831);
			match(ERROR);
			setState(4839);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,782,_ctx) ) {
			case 1:
				{
				setState(4833); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4832);
					separator();
					}
					}
					setState(4835); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4837);
				sentense();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Invalid_keyContext extends ParserRuleContext {
		public TerminalNode INVALID() { return getToken(cobolParser.INVALID, 0); }
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public SentenseContext sentense() {
			return getRuleContext(SentenseContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Invalid_keyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_invalid_key; }
	}

	public final Invalid_keyContext invalid_key() throws RecognitionException {
		Invalid_keyContext _localctx = new Invalid_keyContext(_ctx, getState());
		enterRule(_localctx, 328, RULE_invalid_key);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4841);
			match(INVALID);
			setState(4849);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,784,_ctx) ) {
			case 1:
				{
				setState(4843); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4842);
					separator();
					}
					}
					setState(4845); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4847);
				match(KEY);
				}
				break;
			}
			setState(4858);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,786,_ctx) ) {
			case 1:
				{
				setState(4852); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4851);
					separator();
					}
					}
					setState(4854); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(4856);
				sentense();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_divisionContext extends ParserRuleContext {
		public TerminalNode DATA() { return getToken(cobolParser.DATA, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public File_sectionContext file_section() {
			return getRuleContext(File_sectionContext.class,0);
		}
		public Working_storage_sectionContext working_storage_section() {
			return getRuleContext(Working_storage_sectionContext.class,0);
		}
		public Linkage_sectionContext linkage_section() {
			return getRuleContext(Linkage_sectionContext.class,0);
		}
		public Report_sectionContext report_section() {
			return getRuleContext(Report_sectionContext.class,0);
		}
		public Screen_sectionContext screen_section() {
			return getRuleContext(Screen_sectionContext.class,0);
		}
		public Data_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_division; }
	}

	public final Data_divisionContext data_division() throws RecognitionException {
		Data_divisionContext _localctx = new Data_divisionContext(_ctx, getState());
		enterRule(_localctx, 330, RULE_data_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4860);
			match(DATA);
			setState(4862); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4861);
				separator();
				}
				}
				setState(4864); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4866);
			match(DIVISION);
			setState(4870);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(4867);
				separator();
				}
				}
				setState(4872);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4873);
			match(DOT_);
			setState(4877);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,789,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4874);
					separator();
					}
					} 
				}
				setState(4879);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,789,_ctx);
			}
			setState(4887);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE) {
				{
				setState(4880);
				file_section();
				setState(4884);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,790,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(4881);
						separator();
						}
						} 
					}
					setState(4886);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,790,_ctx);
				}
				}
			}

			setState(4896);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WORKING_STORAGE) {
				{
				setState(4889);
				working_storage_section();
				setState(4893);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,792,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(4890);
						separator();
						}
						} 
					}
					setState(4895);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,792,_ctx);
				}
				}
			}

			setState(4905);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==LINKAGE) {
				{
				setState(4898);
				linkage_section();
				setState(4902);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,794,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(4899);
						separator();
						}
						} 
					}
					setState(4904);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,794,_ctx);
				}
				}
			}

			setState(4914);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==REPORT) {
				{
				setState(4907);
				report_section();
				setState(4911);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,796,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(4908);
						separator();
						}
						} 
					}
					setState(4913);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,796,_ctx);
				}
				}
			}

			setState(4923);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SCREEN) {
				{
				setState(4916);
				screen_section();
				setState(4920);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,798,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(4917);
						separator();
						}
						} 
					}
					setState(4922);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,798,_ctx);
				}
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_sectionContext extends ParserRuleContext {
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<File_description_entryContext> file_description_entry() {
			return getRuleContexts(File_description_entryContext.class);
		}
		public File_description_entryContext file_description_entry(int i) {
			return getRuleContext(File_description_entryContext.class,i);
		}
		public List<Report_description_entryContext> report_description_entry() {
			return getRuleContexts(Report_description_entryContext.class);
		}
		public Report_description_entryContext report_description_entry(int i) {
			return getRuleContext(Report_description_entryContext.class,i);
		}
		public List<Sort_merge_file_description_entryContext> sort_merge_file_description_entry() {
			return getRuleContexts(Sort_merge_file_description_entryContext.class);
		}
		public Sort_merge_file_description_entryContext sort_merge_file_description_entry(int i) {
			return getRuleContext(Sort_merge_file_description_entryContext.class,i);
		}
		public List<Record_description_entryContext> record_description_entry() {
			return getRuleContexts(Record_description_entryContext.class);
		}
		public Record_description_entryContext record_description_entry(int i) {
			return getRuleContext(Record_description_entryContext.class,i);
		}
		public File_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_section; }
	}

	public final File_sectionContext file_section() throws RecognitionException {
		File_sectionContext _localctx = new File_sectionContext(_ctx, getState());
		enterRule(_localctx, 332, RULE_file_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4925);
			match(FILE);
			setState(4927); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4926);
				separator();
				}
				}
				setState(4929); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4931);
			match(SECTION);
			setState(4935);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(4932);
				separator();
				}
				}
				setState(4937);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4938);
			match(DOT_);
			setState(4942);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,802,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4939);
					separator();
					}
					} 
				}
				setState(4944);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,802,_ctx);
			}
			setState(4982);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==FD || _la==RD || _la==SD) {
				{
				{
				setState(4972);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case FD:
					{
					setState(4945);
					file_description_entry();
					setState(4955);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,804,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(4949);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
								{
								{
								setState(4946);
								separator();
								}
								}
								setState(4951);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(4952);
							record_description_entry();
							}
							} 
						}
						setState(4957);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,804,_ctx);
					}
					}
					break;
				case RD:
					{
					setState(4958);
					report_description_entry();
					}
					break;
				case SD:
					{
					setState(4959);
					sort_merge_file_description_entry();
					setState(4969);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,806,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(4963);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
								{
								{
								setState(4960);
								separator();
								}
								}
								setState(4965);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(4966);
							record_description_entry();
							}
							} 
						}
						setState(4971);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,806,_ctx);
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4977);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,808,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(4974);
						separator();
						}
						} 
					}
					setState(4979);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,808,_ctx);
				}
				}
				}
				setState(4984);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Working_storage_sectionContext extends ParserRuleContext {
		public TerminalNode WORKING_STORAGE() { return getToken(cobolParser.WORKING_STORAGE, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Record_description_entryContext> record_description_entry() {
			return getRuleContexts(Record_description_entryContext.class);
		}
		public Record_description_entryContext record_description_entry(int i) {
			return getRuleContext(Record_description_entryContext.class,i);
		}
		public Working_storage_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_working_storage_section; }
	}

	public final Working_storage_sectionContext working_storage_section() throws RecognitionException {
		Working_storage_sectionContext _localctx = new Working_storage_sectionContext(_ctx, getState());
		enterRule(_localctx, 334, RULE_working_storage_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4985);
			match(WORKING_STORAGE);
			setState(4987); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4986);
				separator();
				}
				}
				setState(4989); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(4991);
			match(SECTION);
			setState(4995);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(4992);
				separator();
				}
				}
				setState(4997);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4998);
			match(DOT_);
			setState(5002);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,812,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4999);
					separator();
					}
					} 
				}
				setState(5004);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,812,_ctx);
			}
			setState(5014);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==NUMERIC_LITERAL) {
				{
				{
				setState(5005);
				record_description_entry();
				setState(5009);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,813,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5006);
						separator();
						}
						} 
					}
					setState(5011);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,813,_ctx);
				}
				}
				}
				setState(5016);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Linkage_sectionContext extends ParserRuleContext {
		public TerminalNode LINKAGE() { return getToken(cobolParser.LINKAGE, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Record_description_entryContext> record_description_entry() {
			return getRuleContexts(Record_description_entryContext.class);
		}
		public Record_description_entryContext record_description_entry(int i) {
			return getRuleContext(Record_description_entryContext.class,i);
		}
		public Linkage_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_linkage_section; }
	}

	public final Linkage_sectionContext linkage_section() throws RecognitionException {
		Linkage_sectionContext _localctx = new Linkage_sectionContext(_ctx, getState());
		enterRule(_localctx, 336, RULE_linkage_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5017);
			match(LINKAGE);
			setState(5019); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5018);
				separator();
				}
				}
				setState(5021); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(5023);
			match(SECTION);
			setState(5027);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(5024);
				separator();
				}
				}
				setState(5029);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5030);
			match(DOT_);
			setState(5034);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,817,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5031);
					separator();
					}
					} 
				}
				setState(5036);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,817,_ctx);
			}
			setState(5046);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==NUMERIC_LITERAL) {
				{
				{
				setState(5037);
				record_description_entry();
				setState(5041);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,818,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5038);
						separator();
						}
						} 
					}
					setState(5043);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,818,_ctx);
				}
				}
				}
				setState(5048);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_sectionContext extends ParserRuleContext {
		public TerminalNode REPORT() { return getToken(cobolParser.REPORT, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Report_description_entryContext> report_description_entry() {
			return getRuleContexts(Report_description_entryContext.class);
		}
		public Report_description_entryContext report_description_entry(int i) {
			return getRuleContext(Report_description_entryContext.class,i);
		}
		public List<Report_group_description_entryContext> report_group_description_entry() {
			return getRuleContexts(Report_group_description_entryContext.class);
		}
		public Report_group_description_entryContext report_group_description_entry(int i) {
			return getRuleContext(Report_group_description_entryContext.class,i);
		}
		public Report_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_section; }
	}

	public final Report_sectionContext report_section() throws RecognitionException {
		Report_sectionContext _localctx = new Report_sectionContext(_ctx, getState());
		enterRule(_localctx, 338, RULE_report_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5049);
			match(REPORT);
			setState(5051); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5050);
				separator();
				}
				}
				setState(5053); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(5055);
			match(SECTION);
			setState(5059);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(5056);
				separator();
				}
				}
				setState(5061);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5062);
			match(DOT_);
			setState(5066);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,822,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5063);
					separator();
					}
					} 
				}
				setState(5068);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,822,_ctx);
			}
			setState(5090);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==RD) {
				{
				{
				setState(5069);
				report_description_entry();
				setState(5079);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,824,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5073);
						_errHandler.sync(this);
						_la = _input.LA(1);
						while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
							{
							{
							setState(5070);
							separator();
							}
							}
							setState(5075);
							_errHandler.sync(this);
							_la = _input.LA(1);
						}
						setState(5076);
						report_group_description_entry();
						}
						} 
					}
					setState(5081);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,824,_ctx);
				}
				setState(5085);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,825,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5082);
						separator();
						}
						} 
					}
					setState(5087);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,825,_ctx);
				}
				}
				}
				setState(5092);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_sectionContext extends ParserRuleContext {
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Screen_description_entryContext> screen_description_entry() {
			return getRuleContexts(Screen_description_entryContext.class);
		}
		public Screen_description_entryContext screen_description_entry(int i) {
			return getRuleContext(Screen_description_entryContext.class,i);
		}
		public Screen_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_section; }
	}

	public final Screen_sectionContext screen_section() throws RecognitionException {
		Screen_sectionContext _localctx = new Screen_sectionContext(_ctx, getState());
		enterRule(_localctx, 340, RULE_screen_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5093);
			match(SCREEN);
			setState(5095); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5094);
				separator();
				}
				}
				setState(5097); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(5099);
			match(SECTION);
			setState(5103);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(5100);
				separator();
				}
				}
				setState(5105);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5106);
			match(DOT_);
			setState(5110);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,829,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5107);
					separator();
					}
					} 
				}
				setState(5112);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,829,_ctx);
			}
			setState(5122);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==NUMERIC_LITERAL) {
				{
				{
				setState(5113);
				screen_description_entry();
				setState(5117);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,830,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5114);
						separator();
						}
						} 
					}
					setState(5119);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,830,_ctx);
				}
				}
				}
				setState(5124);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_description_entryContext extends ParserRuleContext {
		public TerminalNode FD() { return getToken(cobolParser.FD, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Fd_clauseContext> fd_clause() {
			return getRuleContexts(Fd_clauseContext.class);
		}
		public Fd_clauseContext fd_clause(int i) {
			return getRuleContext(Fd_clauseContext.class,i);
		}
		public File_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_description_entry; }
	}

	public final File_description_entryContext file_description_entry() throws RecognitionException {
		File_description_entryContext _localctx = new File_description_entryContext(_ctx, getState());
		enterRule(_localctx, 342, RULE_file_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5125);
			match(FD);
			setState(5127); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5126);
				separator();
				}
				}
				setState(5129); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(5131);
			file_name();
			setState(5135);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(5132);
				separator();
				}
				}
				setState(5137);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5147);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCESS) | (1L << ALTERNATE) | (1L << BLOCK) | (1L << CODE_SET))) != 0) || _la==DATA || _la==DYNAMIC || ((((_la - 164)) & ~0x3f) == 0 && ((1L << (_la - 164)) & ((1L << (EXTERNAL - 164)) | (1L << (FILE - 164)) | (1L << (GLOBAL - 164)) | (1L << (IS - 164)) | (1L << (LABEL - 164)) | (1L << (LINAGE - 164)))) != 0) || ((((_la - 289)) & ~0x3f) == 0 && ((1L << (_la - 289)) & ((1L << (RANDOM - 289)) | (1L << (RECORD - 289)) | (1L << (REPORT - 289)) | (1L << (REPORTS - 289)) | (1L << (SEQUENTIAL - 289)) | (1L << (STATUS - 289)))) != 0) || _la==VALUE) {
				{
				{
				setState(5138);
				fd_clause();
				setState(5142);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(5139);
					separator();
					}
					}
					setState(5144);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(5149);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5150);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sort_merge_file_description_entryContext extends ParserRuleContext {
		public TerminalNode SD() { return getToken(cobolParser.SD, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Sd_clauseContext> sd_clause() {
			return getRuleContexts(Sd_clauseContext.class);
		}
		public Sd_clauseContext sd_clause(int i) {
			return getRuleContext(Sd_clauseContext.class,i);
		}
		public Sort_merge_file_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sort_merge_file_description_entry; }
	}

	public final Sort_merge_file_description_entryContext sort_merge_file_description_entry() throws RecognitionException {
		Sort_merge_file_description_entryContext _localctx = new Sort_merge_file_description_entryContext(_ctx, getState());
		enterRule(_localctx, 344, RULE_sort_merge_file_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5152);
			match(SD);
			setState(5154); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5153);
				separator();
				}
				}
				setState(5156); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(5158);
			file_name();
			setState(5162);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(5159);
				separator();
				}
				}
				setState(5164);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5174);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==DATA || _la==RECORD) {
				{
				{
				setState(5165);
				sd_clause();
				setState(5169);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(5166);
					separator();
					}
					}
					setState(5171);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(5176);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5177);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_description_entryContext extends ParserRuleContext {
		public TerminalNode RD() { return getToken(cobolParser.RD, 0); }
		public Report_nameContext report_name() {
			return getRuleContext(Report_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Rd_clauseContext> rd_clause() {
			return getRuleContexts(Rd_clauseContext.class);
		}
		public Rd_clauseContext rd_clause(int i) {
			return getRuleContext(Rd_clauseContext.class,i);
		}
		public Report_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_description_entry; }
	}

	public final Report_description_entryContext report_description_entry() throws RecognitionException {
		Report_description_entryContext _localctx = new Report_description_entryContext(_ctx, getState());
		enterRule(_localctx, 346, RULE_report_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5179);
			match(RD);
			setState(5181); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5180);
				separator();
				}
				}
				setState(5183); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(5185);
			report_name();
			setState(5189);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(5186);
				separator();
				}
				}
				setState(5191);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5201);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 60)) & ~0x3f) == 0 && ((1L << (_la - 60)) & ((1L << (CODE - 60)) | (1L << (CONTROL - 60)) | (1L << (CONTROLS - 60)))) != 0) || _la==GLOBAL || _la==IS || _la==PAGE) {
				{
				{
				setState(5192);
				rd_clause();
				setState(5196);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(5193);
					separator();
					}
					}
					setState(5198);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(5203);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5204);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Fd_clauseContext extends ParserRuleContext {
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public Block_containsContext block_contains() {
			return getRuleContext(Block_containsContext.class,0);
		}
		public RecordContext record() {
			return getRuleContext(RecordContext.class,0);
		}
		public LabelContext label() {
			return getRuleContext(LabelContext.class,0);
		}
		public Value_of_idContext value_of_id() {
			return getRuleContext(Value_of_idContext.class,0);
		}
		public Data_recContext data_rec() {
			return getRuleContext(Data_recContext.class,0);
		}
		public LinageContext linage() {
			return getRuleContext(LinageContext.class,0);
		}
		public Report_isContext report_is() {
			return getRuleContext(Report_isContext.class,0);
		}
		public Code_setContext code_set() {
			return getRuleContext(Code_setContext.class,0);
		}
		public Access_modeContext access_mode() {
			return getRuleContext(Access_modeContext.class,0);
		}
		public Record_keyContext record_key() {
			return getRuleContext(Record_keyContext.class,0);
		}
		public File_statusContext file_status() {
			return getRuleContext(File_statusContext.class,0);
		}
		public Fd_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_fd_clause; }
	}

	public final Fd_clauseContext fd_clause() throws RecognitionException {
		Fd_clauseContext _localctx = new Fd_clauseContext(_ctx, getState());
		enterRule(_localctx, 348, RULE_fd_clause);
		int _la;
		try {
			setState(5235);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,848,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(5212);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5206);
					match(IS);
					setState(5208); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5207);
						separator();
						}
						}
						setState(5210); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5214);
				match(EXTERNAL);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(5221);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5215);
					match(IS);
					setState(5217); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5216);
						separator();
						}
						}
						setState(5219); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5223);
				match(GLOBAL);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(5224);
				block_contains();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(5225);
				record();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(5226);
				label();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(5227);
				value_of_id();
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(5228);
				data_rec();
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(5229);
				linage();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(5230);
				report_is();
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(5231);
				code_set();
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(5232);
				access_mode();
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(5233);
				record_key();
				}
				break;
			case 13:
				enterOuterAlt(_localctx, 13);
				{
				setState(5234);
				file_status();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_description_entryContext extends ParserRuleContext {
		public List<Data_description_entryContext> data_description_entry() {
			return getRuleContexts(Data_description_entryContext.class);
		}
		public Data_description_entryContext data_description_entry(int i) {
			return getRuleContext(Data_description_entryContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Record_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_description_entry; }
	}

	public final Record_description_entryContext record_description_entry() throws RecognitionException {
		Record_description_entryContext _localctx = new Record_description_entryContext(_ctx, getState());
		enterRule(_localctx, 350, RULE_record_description_entry);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5237);
			data_description_entry();
			setState(5247);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,850,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5241);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(5238);
						separator();
						}
						}
						setState(5243);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(5244);
					data_description_entry();
					}
					} 
				}
				setState(5249);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,850,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_description_entryContext extends ParserRuleContext {
		public Level_numberContext level_number() {
			return getRuleContext(Level_numberContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode REDEFINES() { return getToken(cobolParser.REDEFINES, 0); }
		public Other_data_itemContext other_data_item() {
			return getRuleContext(Other_data_itemContext.class,0);
		}
		public List<Data_description_clauseContext> data_description_clause() {
			return getRuleContexts(Data_description_clauseContext.class);
		}
		public Data_description_clauseContext data_description_clause(int i) {
			return getRuleContext(Data_description_clauseContext.class,i);
		}
		public Data_nameContext data_name() {
			return getRuleContext(Data_nameContext.class,0);
		}
		public TerminalNode FILLER() { return getToken(cobolParser.FILLER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Data_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_description_entry; }
	}

	public final Data_description_entryContext data_description_entry() throws RecognitionException {
		Data_description_entryContext _localctx = new Data_description_entryContext(_ctx, getState());
		enterRule(_localctx, 352, RULE_data_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5250);
			level_number();
			setState(5260);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,853,_ctx) ) {
			case 1:
				{
				setState(5252); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5251);
					separator();
					}
					}
					setState(5254); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5258);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USER_DEFINED_WORD:
					{
					setState(5256);
					data_name();
					}
					break;
				case FILLER:
					{
					setState(5257);
					match(FILLER);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(5275);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,856,_ctx) ) {
			case 1:
				{
				setState(5263); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5262);
					separator();
					}
					}
					setState(5265); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5267);
				match(REDEFINES);
				setState(5269); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5268);
					separator();
					}
					}
					setState(5271); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5273);
				other_data_item();
				}
				break;
			}
			setState(5286);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(5278); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5277);
					separator();
					}
					}
					setState(5280); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5282);
				data_description_clause();
				}
				}
				setState(5288);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5289);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Level_numberContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Level_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_level_number; }
	}

	public final Level_numberContext level_number() throws RecognitionException {
		Level_numberContext _localctx = new Level_numberContext(_ctx, getState());
		enterRule(_localctx, 354, RULE_level_number);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5291);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_description_clauseContext extends ParserRuleContext {
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public PictureContext picture() {
			return getRuleContext(PictureContext.class,0);
		}
		public UsageContext usage() {
			return getRuleContext(UsageContext.class,0);
		}
		public Sign_isContext sign_is() {
			return getRuleContext(Sign_isContext.class,0);
		}
		public OccursContext occurs() {
			return getRuleContext(OccursContext.class,0);
		}
		public TerminalNode SYNCHRONIZED() { return getToken(cobolParser.SYNCHRONIZED, 0); }
		public TerminalNode SYNC() { return getToken(cobolParser.SYNC, 0); }
		public TerminalNode LEFT() { return getToken(cobolParser.LEFT, 0); }
		public TerminalNode RIGHT() { return getToken(cobolParser.RIGHT, 0); }
		public TerminalNode JUSTIFIED() { return getToken(cobolParser.JUSTIFIED, 0); }
		public TerminalNode JUST() { return getToken(cobolParser.JUST, 0); }
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode WHEN() { return getToken(cobolParser.WHEN, 0); }
		public Value_isContext value_is() {
			return getRuleContext(Value_isContext.class,0);
		}
		public RenamesContext renames() {
			return getRuleContext(RenamesContext.class,0);
		}
		public Data_description_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_description_clause; }
	}

	public final Data_description_clauseContext data_description_clause() throws RecognitionException {
		Data_description_clauseContext _localctx = new Data_description_clauseContext(_ctx, getState());
		enterRule(_localctx, 356, RULE_data_description_clause);
		int _la;
		try {
			setState(5353);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,870,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(5299);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5293);
					match(IS);
					setState(5295); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5294);
						separator();
						}
						}
						setState(5297); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5301);
				match(EXTERNAL);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(5308);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5302);
					match(IS);
					setState(5304); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5303);
						separator();
						}
						}
						setState(5306); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5310);
				match(GLOBAL);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(5311);
				picture();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(5312);
				usage();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(5313);
				sign_is();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(5314);
				occurs();
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(5315);
				_la = _input.LA(1);
				if ( !(_la==SYNC || _la==SYNCHRONIZED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(5323);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,864,_ctx) ) {
				case 1:
					{
					setState(5317); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5316);
						separator();
						}
						}
						setState(5319); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5321);
					_la = _input.LA(1);
					if ( !(_la==LEFT || _la==RIGHT) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(5325);
				_la = _input.LA(1);
				if ( !(_la==JUST || _la==JUSTIFIED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(5333);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,866,_ctx) ) {
				case 1:
					{
					setState(5327); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5326);
						separator();
						}
						}
						setState(5329); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5331);
					match(RIGHT);
					}
					break;
				}
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(5335);
				match(BLANK);
				setState(5337); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5336);
					separator();
					}
					}
					setState(5339); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5347);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WHEN) {
					{
					setState(5341);
					match(WHEN);
					setState(5343); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5342);
						separator();
						}
						}
						setState(5345); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5349);
				match(ZERO);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(5351);
				value_is();
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(5352);
				renames();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RenamesContext extends ParserRuleContext {
		public TerminalNode RENAMES() { return getToken(cobolParser.RENAMES, 0); }
		public Rename_startContext rename_start() {
			return getRuleContext(Rename_startContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Rename_endContext rename_end() {
			return getRuleContext(Rename_endContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public RenamesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_renames; }
	}

	public final RenamesContext renames() throws RecognitionException {
		RenamesContext _localctx = new RenamesContext(_ctx, getState());
		enterRule(_localctx, 358, RULE_renames);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5355);
			match(RENAMES);
			setState(5357); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5356);
				separator();
				}
				}
				setState(5359); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(5361);
			rename_start();
			setState(5375);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,874,_ctx) ) {
			case 1:
				{
				setState(5363); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5362);
					separator();
					}
					}
					setState(5365); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5367);
				_la = _input.LA(1);
				if ( !(_la==THROUGH || _la==THRU) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(5369); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5368);
					separator();
					}
					}
					setState(5371); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5373);
				rename_end();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rename_startContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Rename_startContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rename_start; }
	}

	public final Rename_startContext rename_start() throws RecognitionException {
		Rename_startContext _localctx = new Rename_startContext(_ctx, getState());
		enterRule(_localctx, 360, RULE_rename_start);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5377);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rename_endContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Rename_endContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rename_end; }
	}

	public final Rename_endContext rename_end() throws RecognitionException {
		Rename_endContext _localctx = new Rename_endContext(_ctx, getState());
		enterRule(_localctx, 362, RULE_rename_end);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5379);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_isContext extends ParserRuleContext {
		public List<Value_is_definitionContext> value_is_definition() {
			return getRuleContexts(Value_is_definitionContext.class);
		}
		public Value_is_definitionContext value_is_definition(int i) {
			return getRuleContext(Value_is_definitionContext.class,i);
		}
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public TerminalNode VALUES() { return getToken(cobolParser.VALUES, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public Value_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is; }
	}

	public final Value_isContext value_is() throws RecognitionException {
		Value_isContext _localctx = new Value_isContext(_ctx, getState());
		enterRule(_localctx, 364, RULE_value_is);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5401);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case VALUE:
				{
				setState(5381);
				match(VALUE);
				setState(5389);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,876,_ctx) ) {
				case 1:
					{
					setState(5383); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5382);
						separator();
						}
						}
						setState(5385); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5387);
					match(IS);
					}
					break;
				}
				}
				break;
			case VALUES:
				{
				setState(5391);
				match(VALUES);
				setState(5399);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,878,_ctx) ) {
				case 1:
					{
					setState(5393); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5392);
						separator();
						}
						}
						setState(5395); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5397);
					match(ARE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(5404); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5403);
				separator();
				}
				}
				setState(5406); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(5408);
			value_is_definition();
			setState(5418);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,882,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5410); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5409);
						separator();
						}
						}
						setState(5412); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5414);
					value_is_definition();
					}
					} 
				}
				setState(5420);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,882,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_definitionContext extends ParserRuleContext {
		public Value_is_definition_partContext value_is_definition_part() {
			return getRuleContext(Value_is_definition_partContext.class,0);
		}
		public Value_is_definition_thruContext value_is_definition_thru() {
			return getRuleContext(Value_is_definition_thruContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Value_is_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_definition; }
	}

	public final Value_is_definitionContext value_is_definition() throws RecognitionException {
		Value_is_definitionContext _localctx = new Value_is_definitionContext(_ctx, getState());
		enterRule(_localctx, 366, RULE_value_is_definition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5421);
			value_is_definition_part();
			setState(5429);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,884,_ctx) ) {
			case 1:
				{
				setState(5423); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5422);
					separator();
					}
					}
					setState(5425); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5427);
				value_is_definition_thru();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_definition_partContext extends ParserRuleContext {
		public Value_is_literalContext value_is_literal() {
			return getRuleContext(Value_is_literalContext.class,0);
		}
		public TerminalNode REFERENCE() { return getToken(cobolParser.REFERENCE, 0); }
		public Ref_data_nameContext ref_data_name() {
			return getRuleContext(Ref_data_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public External_nameContext external_name() {
			return getRuleContext(External_nameContext.class,0);
		}
		public Value_is_definition_partContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_definition_part; }
	}

	public final Value_is_definition_partContext value_is_definition_part() throws RecognitionException {
		Value_is_definition_partContext _localctx = new Value_is_definition_partContext(_ctx, getState());
		enterRule(_localctx, 368, RULE_value_is_definition_part);
		int _la;
		try {
			setState(5448);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(5431);
				value_is_literal();
				}
				break;
			case REFERENCE:
				enterOuterAlt(_localctx, 2);
				{
				setState(5432);
				match(REFERENCE);
				setState(5434); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5433);
					separator();
					}
					}
					setState(5436); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5438);
				ref_data_name();
				}
				break;
			case EXTERNAL:
				enterOuterAlt(_localctx, 3);
				{
				setState(5440);
				match(EXTERNAL);
				setState(5442); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5441);
					separator();
					}
					}
					setState(5444); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5446);
				external_name();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_definition_thruContext extends ParserRuleContext {
		public Value_is_definition_partContext value_is_definition_part() {
			return getRuleContext(Value_is_definition_partContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Value_is_definition_thruContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_definition_thru; }
	}

	public final Value_is_definition_thruContext value_is_definition_thru() throws RecognitionException {
		Value_is_definition_thruContext _localctx = new Value_is_definition_thruContext(_ctx, getState());
		enterRule(_localctx, 370, RULE_value_is_definition_thru);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5450);
			_la = _input.LA(1);
			if ( !(_la==THROUGH || _la==THRU) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(5452); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5451);
				separator();
				}
				}
				setState(5454); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(5456);
			value_is_definition_part();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class External_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public External_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_external_name; }
	}

	public final External_nameContext external_name() throws RecognitionException {
		External_nameContext _localctx = new External_nameContext(_ctx, getState());
		enterRule(_localctx, 372, RULE_external_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5458);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Ref_data_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Ref_data_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_ref_data_name; }
	}

	public final Ref_data_nameContext ref_data_name() throws RecognitionException {
		Ref_data_nameContext _localctx = new Ref_data_nameContext(_ctx, getState());
		enterRule(_localctx, 374, RULE_ref_data_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5460);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Value_is_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_literal; }
	}

	public final Value_is_literalContext value_is_literal() throws RecognitionException {
		Value_is_literalContext _localctx = new Value_is_literalContext(_ctx, getState());
		enterRule(_localctx, 376, RULE_value_is_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5462);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class OccursContext extends ParserRuleContext {
		public TerminalNode OCCURS() { return getToken(cobolParser.OCCURS, 0); }
		public Times_definitionContext times_definition() {
			return getRuleContext(Times_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Key_isContext> key_is() {
			return getRuleContexts(Key_isContext.class);
		}
		public Key_isContext key_is(int i) {
			return getRuleContext(Key_isContext.class,i);
		}
		public Indexed_byContext indexed_by() {
			return getRuleContext(Indexed_byContext.class,0);
		}
		public OccursContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_occurs; }
	}

	public final OccursContext occurs() throws RecognitionException {
		OccursContext _localctx = new OccursContext(_ctx, getState());
		enterRule(_localctx, 378, RULE_occurs);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5464);
			match(OCCURS);
			setState(5466); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5465);
				separator();
				}
				}
				setState(5468); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(5470);
			times_definition();
			setState(5480);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,891,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5472); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5471);
						separator();
						}
						}
						setState(5474); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5476);
					key_is();
					}
					} 
				}
				setState(5482);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,891,_ctx);
			}
			setState(5490);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,893,_ctx) ) {
			case 1:
				{
				setState(5484); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5483);
					separator();
					}
					}
					setState(5486); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5488);
				indexed_by();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Indexed_byContext extends ParserRuleContext {
		public TerminalNode INDEXED() { return getToken(cobolParser.INDEXED, 0); }
		public List<Ind_nameContext> ind_name() {
			return getRuleContexts(Ind_nameContext.class);
		}
		public Ind_nameContext ind_name(int i) {
			return getRuleContext(Ind_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public Indexed_byContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_indexed_by; }
	}

	public final Indexed_byContext indexed_by() throws RecognitionException {
		Indexed_byContext _localctx = new Indexed_byContext(_ctx, getState());
		enterRule(_localctx, 380, RULE_indexed_by);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5492);
			match(INDEXED);
			setState(5494); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5493);
				separator();
				}
				}
				setState(5496); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(5504);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==BY) {
				{
				setState(5498);
				match(BY);
				setState(5500); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5499);
					separator();
					}
					}
					setState(5502); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(5506);
			ind_name();
			setState(5516);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,898,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5508); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5507);
						separator();
						}
						}
						setState(5510); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5512);
					ind_name();
					}
					} 
				}
				setState(5518);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,898,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Ind_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Ind_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_ind_name; }
	}

	public final Ind_nameContext ind_name() throws RecognitionException {
		Ind_nameContext _localctx = new Ind_nameContext(_ctx, getState());
		enterRule(_localctx, 382, RULE_ind_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5519);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Key_isContext extends ParserRuleContext {
		public List<Key_nameContext> key_name() {
			return getRuleContexts(Key_nameContext.class);
		}
		public Key_nameContext key_name(int i) {
			return getRuleContext(Key_nameContext.class,i);
		}
		public TerminalNode ASCENDING() { return getToken(cobolParser.ASCENDING, 0); }
		public TerminalNode DESCENDING() { return getToken(cobolParser.DESCENDING, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Key_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_key_is; }
	}

	public final Key_isContext key_is() throws RecognitionException {
		Key_isContext _localctx = new Key_isContext(_ctx, getState());
		enterRule(_localctx, 384, RULE_key_is);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5521);
			_la = _input.LA(1);
			if ( !(_la==ASCENDING || _la==DESCENDING) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(5523); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5522);
				separator();
				}
				}
				setState(5525); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(5533);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==KEY) {
				{
				setState(5527);
				match(KEY);
				setState(5529); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5528);
					separator();
					}
					}
					setState(5531); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(5541);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5535);
				match(IS);
				setState(5537); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5536);
					separator();
					}
					}
					setState(5539); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(5543);
			key_name();
			setState(5553);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,905,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5545); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5544);
						separator();
						}
						}
						setState(5547); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5549);
					key_name();
					}
					} 
				}
				setState(5555);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,905,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Key_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Key_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_key_name; }
	}

	public final Key_nameContext key_name() throws RecognitionException {
		Key_nameContext _localctx = new Key_nameContext(_ctx, getState());
		enterRule(_localctx, 386, RULE_key_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5556);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Times_definitionContext extends ParserRuleContext {
		public Table_sizeContext table_size() {
			return getRuleContext(Table_sizeContext.class,0);
		}
		public TerminalNode TIMES() { return getToken(cobolParser.TIMES, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Min_timesContext min_times() {
			return getRuleContext(Min_timesContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Max_timesContext max_times() {
			return getRuleContext(Max_timesContext.class,0);
		}
		public TerminalNode DEPENDING() { return getToken(cobolParser.DEPENDING, 0); }
		public Depending_itemContext depending_item() {
			return getRuleContext(Depending_itemContext.class,0);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Times_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_times_definition; }
	}

	public final Times_definitionContext times_definition() throws RecognitionException {
		Times_definitionContext _localctx = new Times_definitionContext(_ctx, getState());
		enterRule(_localctx, 388, RULE_times_definition);
		int _la;
		try {
			setState(5606);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,914,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(5558);
				table_size();
				setState(5560); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5559);
					separator();
					}
					}
					setState(5562); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5564);
				match(TIMES);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(5566);
				min_times();
				setState(5568); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5567);
					separator();
					}
					}
					setState(5570); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5572);
				match(TO);
				setState(5574); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5573);
					separator();
					}
					}
					setState(5576); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5578);
				max_times();
				setState(5580); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5579);
					separator();
					}
					}
					setState(5582); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5584);
				match(TIMES);
				setState(5586); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5585);
					separator();
					}
					}
					setState(5588); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5590);
				match(DEPENDING);
				setState(5592); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5591);
					separator();
					}
					}
					setState(5594); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5602);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==ON) {
					{
					setState(5596);
					match(ON);
					setState(5598); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5597);
						separator();
						}
						}
						setState(5600); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5604);
				depending_item();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Table_sizeContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Table_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_table_size; }
	}

	public final Table_sizeContext table_size() throws RecognitionException {
		Table_sizeContext _localctx = new Table_sizeContext(_ctx, getState());
		enterRule(_localctx, 390, RULE_table_size);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5608);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Min_timesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Min_timesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_min_times; }
	}

	public final Min_timesContext min_times() throws RecognitionException {
		Min_timesContext _localctx = new Min_timesContext(_ctx, getState());
		enterRule(_localctx, 392, RULE_min_times);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5610);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Max_timesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Max_timesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_max_times; }
	}

	public final Max_timesContext max_times() throws RecognitionException {
		Max_timesContext _localctx = new Max_timesContext(_ctx, getState());
		enterRule(_localctx, 394, RULE_max_times);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5612);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_group_description_entryContext extends ParserRuleContext {
		public List<Report_group_data_descriptionContext> report_group_data_description() {
			return getRuleContexts(Report_group_data_descriptionContext.class);
		}
		public Report_group_data_descriptionContext report_group_data_description(int i) {
			return getRuleContext(Report_group_data_descriptionContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Report_group_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_group_description_entry; }
	}

	public final Report_group_description_entryContext report_group_description_entry() throws RecognitionException {
		Report_group_description_entryContext _localctx = new Report_group_description_entryContext(_ctx, getState());
		enterRule(_localctx, 396, RULE_report_group_description_entry);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5614);
			report_group_data_description();
			setState(5624);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,916,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5618);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(5615);
						separator();
						}
						}
						setState(5620);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(5621);
					report_group_data_description();
					}
					} 
				}
				setState(5626);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,916,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_group_data_descriptionContext extends ParserRuleContext {
		public Level_numberContext level_number() {
			return getRuleContext(Level_numberContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public Data_nameContext data_name() {
			return getRuleContext(Data_nameContext.class,0);
		}
		public List<Report_group_data_description_clauseContext> report_group_data_description_clause() {
			return getRuleContexts(Report_group_data_description_clauseContext.class);
		}
		public Report_group_data_description_clauseContext report_group_data_description_clause(int i) {
			return getRuleContext(Report_group_data_description_clauseContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Report_group_data_descriptionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_group_data_description; }
	}

	public final Report_group_data_descriptionContext report_group_data_description() throws RecognitionException {
		Report_group_data_descriptionContext _localctx = new Report_group_data_descriptionContext(_ctx, getState());
		enterRule(_localctx, 398, RULE_report_group_data_description);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5627);
			level_number();
			setState(5635);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,918,_ctx) ) {
			case 1:
				{
				setState(5629); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5628);
					separator();
					}
					}
					setState(5631); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5633);
				data_name();
				}
				break;
			}
			setState(5646);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(5638); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5637);
					separator();
					}
					}
					setState(5640); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5642);
				report_group_data_description_clause();
				}
				}
				setState(5648);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5649);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_group_data_description_clauseContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public Line_num_definitionContext line_num_definition() {
			return getRuleContext(Line_num_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode GROUP() { return getToken(cobolParser.GROUP, 0); }
		public Next_group_definitionContext next_group_definition() {
			return getRuleContext(Next_group_definitionContext.class,0);
		}
		public TerminalNode TYPE() { return getToken(cobolParser.TYPE, 0); }
		public Type_is_definitionContext type_is_definition() {
			return getRuleContext(Type_is_definitionContext.class,0);
		}
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public TerminalNode USAGE() { return getToken(cobolParser.USAGE, 0); }
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode WHEN() { return getToken(cobolParser.WHEN, 0); }
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public Column_numberContext column_number() {
			return getRuleContext(Column_numberContext.class,0);
		}
		public TerminalNode INDICATE() { return getToken(cobolParser.INDICATE, 0); }
		public TerminalNode JUSTIFIED() { return getToken(cobolParser.JUSTIFIED, 0); }
		public TerminalNode JUST() { return getToken(cobolParser.JUST, 0); }
		public TerminalNode RIGHT() { return getToken(cobolParser.RIGHT, 0); }
		public PictureContext picture() {
			return getRuleContext(PictureContext.class,0);
		}
		public Sign_isContext sign_is() {
			return getRuleContext(Sign_isContext.class,0);
		}
		public TerminalNode SOURCE() { return getToken(cobolParser.SOURCE, 0); }
		public Source_nameContext source_name() {
			return getRuleContext(Source_nameContext.class,0);
		}
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public Value_is_literalContext value_is_literal() {
			return getRuleContext(Value_is_literalContext.class,0);
		}
		public SumContext sum() {
			return getRuleContext(SumContext.class,0);
		}
		public Report_group_data_description_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_group_data_description_clause; }
	}

	public final Report_group_data_description_clauseContext report_group_data_description_clause() throws RecognitionException {
		Report_group_data_description_clauseContext _localctx = new Report_group_data_description_clauseContext(_ctx, getState());
		enterRule(_localctx, 400, RULE_report_group_data_description_clause);
		int _la;
		try {
			setState(5825);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LINE:
				enterOuterAlt(_localctx, 1);
				{
				setState(5651);
				match(LINE);
				setState(5653); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5652);
					separator();
					}
					}
					setState(5655); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5663);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(5657);
					match(NUMBER);
					setState(5659); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5658);
						separator();
						}
						}
						setState(5661); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5671);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5665);
					match(IS);
					setState(5667); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5666);
						separator();
						}
						}
						setState(5669); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5673);
				line_num_definition();
				}
				break;
			case NEXT:
				enterOuterAlt(_localctx, 2);
				{
				setState(5675);
				match(NEXT);
				setState(5677); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5676);
					separator();
					}
					}
					setState(5679); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5681);
				match(GROUP);
				setState(5683); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5682);
					separator();
					}
					}
					setState(5685); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5693);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5687);
					match(IS);
					setState(5689); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5688);
						separator();
						}
						}
						setState(5691); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5695);
				next_group_definition();
				}
				break;
			case TYPE:
				enterOuterAlt(_localctx, 3);
				{
				setState(5697);
				match(TYPE);
				setState(5699); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5698);
					separator();
					}
					}
					setState(5701); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5709);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5703);
					match(IS);
					setState(5705); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5704);
						separator();
						}
						}
						setState(5707); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5711);
				type_is_definition();
				}
				break;
			case DISPLAY:
			case USAGE:
				enterOuterAlt(_localctx, 4);
				{
				setState(5727);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==USAGE) {
					{
					setState(5713);
					match(USAGE);
					setState(5715); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5714);
						separator();
						}
						}
						setState(5717); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5725);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==IS) {
						{
						setState(5719);
						match(IS);
						setState(5721); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5720);
							separator();
							}
							}
							setState(5723); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					}
				}

				setState(5729);
				match(DISPLAY);
				}
				break;
			case BLANK:
				enterOuterAlt(_localctx, 5);
				{
				setState(5730);
				match(BLANK);
				setState(5732); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5731);
					separator();
					}
					}
					setState(5734); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5742);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WHEN) {
					{
					setState(5736);
					match(WHEN);
					setState(5738); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5737);
						separator();
						}
						}
						setState(5740); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5744);
				match(ZERO);
				}
				break;
			case COLUMN:
				enterOuterAlt(_localctx, 6);
				{
				setState(5746);
				match(COLUMN);
				setState(5748); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5747);
					separator();
					}
					}
					setState(5750); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5758);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(5752);
					match(NUMBER);
					setState(5754); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5753);
						separator();
						}
						}
						setState(5756); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5766);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5760);
					match(IS);
					setState(5762); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5761);
						separator();
						}
						}
						setState(5764); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5768);
				column_number();
				}
				break;
			case GROUP:
				enterOuterAlt(_localctx, 7);
				{
				setState(5770);
				match(GROUP);
				setState(5778);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,946,_ctx) ) {
				case 1:
					{
					setState(5772); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5771);
						separator();
						}
						}
						setState(5774); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5776);
					match(INDICATE);
					}
					break;
				}
				}
				break;
			case JUST:
			case JUSTIFIED:
				enterOuterAlt(_localctx, 8);
				{
				setState(5780);
				_la = _input.LA(1);
				if ( !(_la==JUST || _la==JUSTIFIED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(5788);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,948,_ctx) ) {
				case 1:
					{
					setState(5782); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5781);
						separator();
						}
						}
						setState(5784); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5786);
					match(RIGHT);
					}
					break;
				}
				}
				break;
			case PIC:
			case PICTURE:
				enterOuterAlt(_localctx, 9);
				{
				setState(5790);
				picture();
				}
				break;
			case LEADING:
			case SIGN:
			case TRAILING:
				enterOuterAlt(_localctx, 10);
				{
				setState(5791);
				sign_is();
				}
				break;
			case SOURCE:
				enterOuterAlt(_localctx, 11);
				{
				setState(5792);
				match(SOURCE);
				setState(5794); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5793);
					separator();
					}
					}
					setState(5796); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5804);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5798);
					match(IS);
					setState(5800); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5799);
						separator();
						}
						}
						setState(5802); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5806);
				source_name();
				}
				break;
			case VALUE:
				enterOuterAlt(_localctx, 12);
				{
				setState(5808);
				match(VALUE);
				setState(5810); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5809);
					separator();
					}
					}
					setState(5812); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5820);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5814);
					match(IS);
					setState(5816); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5815);
						separator();
						}
						}
						setState(5818); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5822);
				value_is_literal();
				}
				break;
			case SUM:
				enterOuterAlt(_localctx, 13);
				{
				setState(5824);
				sum();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sign_isContext extends ParserRuleContext {
		public TerminalNode LEADING() { return getToken(cobolParser.LEADING, 0); }
		public TerminalNode TRAILING() { return getToken(cobolParser.TRAILING, 0); }
		public TerminalNode SIGN() { return getToken(cobolParser.SIGN, 0); }
		public TerminalNode SEPARATE() { return getToken(cobolParser.SEPARATE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTER() { return getToken(cobolParser.CHARACTER, 0); }
		public Sign_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sign_is; }
	}

	public final Sign_isContext sign_is() throws RecognitionException {
		Sign_isContext _localctx = new Sign_isContext(_ctx, getState());
		enterRule(_localctx, 402, RULE_sign_is);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5842);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SIGN) {
				{
				setState(5827);
				match(SIGN);
				setState(5835);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,957,_ctx) ) {
				case 1:
					{
					setState(5829); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5828);
						separator();
						}
						}
						setState(5831); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5833);
					match(IS);
					}
					break;
				}
				setState(5838); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5837);
					separator();
					}
					}
					setState(5840); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(5844);
			_la = _input.LA(1);
			if ( !(_la==LEADING || _la==TRAILING) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(5860);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,963,_ctx) ) {
			case 1:
				{
				setState(5846); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5845);
					separator();
					}
					}
					setState(5848); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5850);
				match(SEPARATE);
				setState(5858);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,962,_ctx) ) {
				case 1:
					{
					setState(5852); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5851);
						separator();
						}
						}
						setState(5854); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5856);
					match(CHARACTER);
					}
					break;
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SumContext extends ParserRuleContext {
		public List<TerminalNode> SUM() { return getTokens(cobolParser.SUM); }
		public TerminalNode SUM(int i) {
			return getToken(cobolParser.SUM, i);
		}
		public List<Sum_nameContext> sum_name() {
			return getRuleContexts(Sum_nameContext.class);
		}
		public Sum_nameContext sum_name(int i) {
			return getRuleContext(Sum_nameContext.class,i);
		}
		public TerminalNode RESET() { return getToken(cobolParser.RESET, 0); }
		public Control_foot_nameContext control_foot_name() {
			return getRuleContext(Control_foot_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> UPON() { return getTokens(cobolParser.UPON); }
		public TerminalNode UPON(int i) {
			return getToken(cobolParser.UPON, i);
		}
		public List<Detail_report_group_nameContext> detail_report_group_name() {
			return getRuleContexts(Detail_report_group_nameContext.class);
		}
		public Detail_report_group_nameContext detail_report_group_name(int i) {
			return getRuleContext(Detail_report_group_nameContext.class,i);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public SumContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sum; }
	}

	public final SumContext sum() throws RecognitionException {
		SumContext _localctx = new SumContext(_ctx, getState());
		enterRule(_localctx, 404, RULE_sum);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5902); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5862);
				match(SUM);
				setState(5864); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5863);
					separator();
					}
					}
					setState(5866); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5868);
				sum_name();
				setState(5878);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,966,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5870); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5869);
							separator();
							}
							}
							setState(5872); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(5874);
						sum_name();
						}
						} 
					}
					setState(5880);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,966,_ctx);
				}
				setState(5888);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,968,_ctx) ) {
				case 1:
					{
					setState(5882); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5881);
						separator();
						}
						}
						setState(5884); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5886);
					match(UPON);
					}
					break;
				}
				setState(5899);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,970,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5891); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5890);
							separator();
							}
							}
							setState(5893); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(5895);
						detail_report_group_name();
						}
						} 
					}
					setState(5901);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,970,_ctx);
				}
				}
				}
				setState(5904); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==SUM );
			setState(5928);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,976,_ctx) ) {
			case 1:
				{
				setState(5909);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(5906);
					separator();
					}
					}
					setState(5911);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(5912);
				match(RESET);
				setState(5914); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5913);
					separator();
					}
					}
					setState(5916); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5924);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==ON) {
					{
					setState(5918);
					match(ON);
					setState(5920); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5919);
						separator();
						}
						}
						setState(5922); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(5926);
				control_foot_name();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Control_foot_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode FINAL() { return getToken(cobolParser.FINAL, 0); }
		public Control_foot_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_control_foot_name; }
	}

	public final Control_foot_nameContext control_foot_name() throws RecognitionException {
		Control_foot_nameContext _localctx = new Control_foot_nameContext(_ctx, getState());
		enterRule(_localctx, 406, RULE_control_foot_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5930);
			_la = _input.LA(1);
			if ( !(_la==FINAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Detail_report_group_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Detail_report_group_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_detail_report_group_name; }
	}

	public final Detail_report_group_nameContext detail_report_group_name() throws RecognitionException {
		Detail_report_group_nameContext _localctx = new Detail_report_group_nameContext(_ctx, getState());
		enterRule(_localctx, 408, RULE_detail_report_group_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5932);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sum_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Sum_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sum_name; }
	}

	public final Sum_nameContext sum_name() throws RecognitionException {
		Sum_nameContext _localctx = new Sum_nameContext(_ctx, getState());
		enterRule(_localctx, 410, RULE_sum_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5934);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Source_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Source_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_source_name; }
	}

	public final Source_nameContext source_name() throws RecognitionException {
		Source_nameContext _localctx = new Source_nameContext(_ctx, getState());
		enterRule(_localctx, 412, RULE_source_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5936);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Column_numberContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Column_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_column_number; }
	}

	public final Column_numberContext column_number() throws RecognitionException {
		Column_numberContext _localctx = new Column_numberContext(_ctx, getState());
		enterRule(_localctx, 414, RULE_column_number);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5938);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Type_is_definitionContext extends ParserRuleContext {
		public TerminalNode REPORT() { return getToken(cobolParser.REPORT, 0); }
		public TerminalNode HEADING() { return getToken(cobolParser.HEADING, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode RH() { return getToken(cobolParser.RH, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public TerminalNode PH() { return getToken(cobolParser.PH, 0); }
		public Type_control_nameContext type_control_name() {
			return getRuleContext(Type_control_nameContext.class,0);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode CH() { return getToken(cobolParser.CH, 0); }
		public TerminalNode DETAIL() { return getToken(cobolParser.DETAIL, 0); }
		public TerminalNode DE() { return getToken(cobolParser.DE, 0); }
		public TerminalNode FOOTING() { return getToken(cobolParser.FOOTING, 0); }
		public TerminalNode CF() { return getToken(cobolParser.CF, 0); }
		public TerminalNode PF() { return getToken(cobolParser.PF, 0); }
		public TerminalNode RF() { return getToken(cobolParser.RF, 0); }
		public Type_is_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_type_is_definition; }
	}

	public final Type_is_definitionContext type_is_definition() throws RecognitionException {
		Type_is_definitionContext _localctx = new Type_is_definitionContext(_ctx, getState());
		enterRule(_localctx, 416, RULE_type_is_definition);
		int _la;
		try {
			setState(6014);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,987,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(5940);
				match(REPORT);
				setState(5942); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5941);
					separator();
					}
					}
					setState(5944); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5946);
				match(HEADING);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(5948);
				match(RH);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(5949);
				match(PAGE);
				setState(5951); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5950);
					separator();
					}
					}
					setState(5953); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5955);
				match(HEADING);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(5957);
				match(PH);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(5967);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case CONTROL:
					{
					setState(5958);
					match(CONTROL);
					setState(5960); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5959);
						separator();
						}
						}
						setState(5962); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5964);
					match(HEADING);
					}
					break;
				case CH:
					{
					setState(5966);
					match(CH);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(5970); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5969);
					separator();
					}
					}
					setState(5972); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5974);
				type_control_name();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(5976);
				match(DETAIL);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(5977);
				match(DE);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(5987);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case CONTROL:
					{
					setState(5978);
					match(CONTROL);
					setState(5980); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5979);
						separator();
						}
						}
						setState(5982); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(5984);
					match(FOOTING);
					}
					break;
				case CF:
					{
					setState(5986);
					match(CF);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(5990); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5989);
					separator();
					}
					}
					setState(5992); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(5994);
				type_control_name();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(5996);
				match(PAGE);
				setState(5998); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5997);
					separator();
					}
					}
					setState(6000); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6002);
				match(FOOTING);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(6004);
				match(PF);
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(6005);
				match(REPORT);
				setState(6007); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6006);
					separator();
					}
					}
					setState(6009); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6011);
				match(FOOTING);
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(6013);
				match(RF);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Type_control_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode FINAL() { return getToken(cobolParser.FINAL, 0); }
		public Type_control_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_type_control_name; }
	}

	public final Type_control_nameContext type_control_name() throws RecognitionException {
		Type_control_nameContext _localctx = new Type_control_nameContext(_ctx, getState());
		enterRule(_localctx, 418, RULE_type_control_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6016);
			_la = _input.LA(1);
			if ( !(_la==FINAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Next_group_definitionContext extends ParserRuleContext {
		public Line_numContext line_num() {
			return getRuleContext(Line_numContext.class,0);
		}
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public Next_group_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_next_group_definition; }
	}

	public final Next_group_definitionContext next_group_definition() throws RecognitionException {
		Next_group_definitionContext _localctx = new Next_group_definitionContext(_ctx, getState());
		enterRule(_localctx, 420, RULE_next_group_definition);
		int _la;
		try {
			setState(6035);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(6018);
				line_num();
				}
				break;
			case PLUS:
				enterOuterAlt(_localctx, 2);
				{
				setState(6019);
				match(PLUS);
				setState(6021); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6020);
					separator();
					}
					}
					setState(6023); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6025);
				line_num();
				}
				break;
			case NEXT:
				enterOuterAlt(_localctx, 3);
				{
				setState(6027);
				match(NEXT);
				setState(6029); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6028);
					separator();
					}
					}
					setState(6031); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6033);
				match(PAGE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Line_num_definitionContext extends ParserRuleContext {
		public Line_numContext line_num() {
			return getRuleContext(Line_numContext.class,0);
		}
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public Line_num_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_line_num_definition; }
	}

	public final Line_num_definitionContext line_num_definition() throws RecognitionException {
		Line_num_definitionContext _localctx = new Line_num_definitionContext(_ctx, getState());
		enterRule(_localctx, 422, RULE_line_num_definition);
		int _la;
		try {
			setState(6069);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(6037);
				line_num();
				setState(6059);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,995,_ctx) ) {
				case 1:
					{
					setState(6039); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6038);
						separator();
						}
						}
						setState(6041); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6049);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==ON) {
						{
						setState(6043);
						match(ON);
						setState(6045); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6044);
							separator();
							}
							}
							setState(6047); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					setState(6051);
					match(NEXT);
					setState(6053); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6052);
						separator();
						}
						}
						setState(6055); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6057);
					match(PAGE);
					}
					break;
				}
				}
				break;
			case PLUS:
				enterOuterAlt(_localctx, 2);
				{
				setState(6061);
				match(PLUS);
				setState(6063); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6062);
					separator();
					}
					}
					setState(6065); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6067);
				line_num();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Line_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Line_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_line_num; }
	}

	public final Line_numContext line_num() throws RecognitionException {
		Line_numContext _localctx = new Line_numContext(_ctx, getState());
		enterRule(_localctx, 424, RULE_line_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6071);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rd_clauseContext extends ParserRuleContext {
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CODE() { return getToken(cobolParser.CODE, 0); }
		public Report_codeContext report_code() {
			return getRuleContext(Report_codeContext.class,0);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode CONTROLS() { return getToken(cobolParser.CONTROLS, 0); }
		public List<Control_nameContext> control_name() {
			return getRuleContexts(Control_nameContext.class);
		}
		public Control_nameContext control_name(int i) {
			return getRuleContext(Control_nameContext.class,i);
		}
		public TerminalNode FINAL() { return getToken(cobolParser.FINAL, 0); }
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public Page_size_rdContext page_size_rd() {
			return getRuleContext(Page_size_rdContext.class,0);
		}
		public TerminalNode LIMIT() { return getToken(cobolParser.LIMIT, 0); }
		public TerminalNode LIMITS() { return getToken(cobolParser.LIMITS, 0); }
		public TerminalNode HEADING() { return getToken(cobolParser.HEADING, 0); }
		public Heading_lineContext heading_line() {
			return getRuleContext(Heading_lineContext.class,0);
		}
		public TerminalNode FIRST() { return getToken(cobolParser.FIRST, 0); }
		public List<TerminalNode> DETAIL() { return getTokens(cobolParser.DETAIL); }
		public TerminalNode DETAIL(int i) {
			return getToken(cobolParser.DETAIL, i);
		}
		public First_detail_lineContext first_detail_line() {
			return getRuleContext(First_detail_lineContext.class,0);
		}
		public TerminalNode LAST() { return getToken(cobolParser.LAST, 0); }
		public Last_detail_lineContext last_detail_line() {
			return getRuleContext(Last_detail_lineContext.class,0);
		}
		public TerminalNode FOOTING() { return getToken(cobolParser.FOOTING, 0); }
		public Footing_line_rdContext footing_line_rd() {
			return getRuleContext(Footing_line_rdContext.class,0);
		}
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode LINES() { return getToken(cobolParser.LINES, 0); }
		public Rd_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rd_clause; }
	}

	public final Rd_clauseContext rd_clause() throws RecognitionException {
		Rd_clauseContext _localctx = new Rd_clauseContext(_ctx, getState());
		enterRule(_localctx, 426, RULE_rd_clause);
		int _la;
		try {
			int _alt;
			setState(6263);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case GLOBAL:
			case IS:
				enterOuterAlt(_localctx, 1);
				{
				setState(6079);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6073);
					match(IS);
					setState(6075); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6074);
						separator();
						}
						}
						setState(6077); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6081);
				match(GLOBAL);
				}
				break;
			case CODE:
				enterOuterAlt(_localctx, 2);
				{
				setState(6082);
				match(CODE);
				setState(6084); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6083);
					separator();
					}
					}
					setState(6086); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6088);
				report_code();
				}
				break;
			case CONTROL:
			case CONTROLS:
				enterOuterAlt(_localctx, 3);
				{
				setState(6110);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case CONTROL:
					{
					setState(6090);
					match(CONTROL);
					setState(6098);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1002,_ctx) ) {
					case 1:
						{
						setState(6092); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6091);
							separator();
							}
							}
							setState(6094); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(6096);
						match(IS);
						}
						break;
					}
					}
					break;
				case CONTROLS:
					{
					setState(6100);
					match(CONTROLS);
					setState(6108);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1004,_ctx) ) {
					case 1:
						{
						setState(6102); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6101);
							separator();
							}
							}
							setState(6104); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(6106);
						match(ARE);
						}
						break;
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(6113); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6112);
					separator();
					}
					}
					setState(6115); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6143);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USER_DEFINED_WORD:
					{
					setState(6117);
					control_name();
					setState(6127);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1008,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(6121);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
								{
								{
								setState(6118);
								separator();
								}
								}
								setState(6123);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(6124);
							control_name();
							}
							} 
						}
						setState(6129);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,1008,_ctx);
					}
					}
					break;
				case FINAL:
					{
					setState(6130);
					match(FINAL);
					setState(6140);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1010,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(6134);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
								{
								{
								setState(6131);
								separator();
								}
								}
								setState(6136);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(6137);
							control_name();
							}
							} 
						}
						setState(6142);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,1010,_ctx);
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			case PAGE:
				enterOuterAlt(_localctx, 4);
				{
				setState(6145);
				match(PAGE);
				setState(6147); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6146);
					separator();
					}
					}
					setState(6149); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6179);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case LIMIT:
					{
					setState(6151);
					match(LIMIT);
					setState(6153); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6152);
						separator();
						}
						}
						setState(6155); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6163);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==IS) {
						{
						setState(6157);
						match(IS);
						setState(6159); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6158);
							separator();
							}
							}
							setState(6161); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					}
					break;
				case LIMITS:
					{
					setState(6165);
					match(LIMITS);
					setState(6167); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6166);
						separator();
						}
						}
						setState(6169); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6177);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==ARE) {
						{
						setState(6171);
						match(ARE);
						setState(6173); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6172);
							separator();
							}
							}
							setState(6175); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					}
					break;
				case NUMERIC_LITERAL:
					break;
				default:
					break;
				}
				setState(6181);
				page_size_rd();
				setState(6189);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1021,_ctx) ) {
				case 1:
					{
					setState(6183); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6182);
						separator();
						}
						}
						setState(6185); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6187);
					_la = _input.LA(1);
					if ( !(_la==LINE || _la==LINES) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				setState(6204);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1024,_ctx) ) {
				case 1:
					{
					setState(6192); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6191);
						separator();
						}
						}
						setState(6194); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6196);
					match(HEADING);
					setState(6198); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6197);
						separator();
						}
						}
						setState(6200); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6202);
					heading_line();
					}
					break;
				}
				setState(6225);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1028,_ctx) ) {
				case 1:
					{
					setState(6207); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6206);
						separator();
						}
						}
						setState(6209); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6211);
					match(FIRST);
					setState(6213); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6212);
						separator();
						}
						}
						setState(6215); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6217);
					match(DETAIL);
					setState(6219); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6218);
						separator();
						}
						}
						setState(6221); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6223);
					first_detail_line();
					}
					break;
				}
				setState(6246);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1032,_ctx) ) {
				case 1:
					{
					setState(6228); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6227);
						separator();
						}
						}
						setState(6230); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6232);
					match(LAST);
					setState(6234); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6233);
						separator();
						}
						}
						setState(6236); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6238);
					match(DETAIL);
					setState(6240); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6239);
						separator();
						}
						}
						setState(6242); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6244);
					last_detail_line();
					}
					break;
				}
				setState(6261);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1035,_ctx) ) {
				case 1:
					{
					setState(6249); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6248);
						separator();
						}
						}
						setState(6251); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6253);
					match(FOOTING);
					setState(6255); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6254);
						separator();
						}
						}
						setState(6257); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6259);
					footing_line_rd();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Footing_line_rdContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Footing_line_rdContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_footing_line_rd; }
	}

	public final Footing_line_rdContext footing_line_rd() throws RecognitionException {
		Footing_line_rdContext _localctx = new Footing_line_rdContext(_ctx, getState());
		enterRule(_localctx, 428, RULE_footing_line_rd);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6265);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Last_detail_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Last_detail_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_last_detail_line; }
	}

	public final Last_detail_lineContext last_detail_line() throws RecognitionException {
		Last_detail_lineContext _localctx = new Last_detail_lineContext(_ctx, getState());
		enterRule(_localctx, 430, RULE_last_detail_line);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6267);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class First_detail_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public First_detail_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_first_detail_line; }
	}

	public final First_detail_lineContext first_detail_line() throws RecognitionException {
		First_detail_lineContext _localctx = new First_detail_lineContext(_ctx, getState());
		enterRule(_localctx, 432, RULE_first_detail_line);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6269);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Heading_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Heading_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_heading_line; }
	}

	public final Heading_lineContext heading_line() throws RecognitionException {
		Heading_lineContext _localctx = new Heading_lineContext(_ctx, getState());
		enterRule(_localctx, 434, RULE_heading_line);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6271);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Page_size_rdContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Page_size_rdContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_page_size_rd; }
	}

	public final Page_size_rdContext page_size_rd() throws RecognitionException {
		Page_size_rdContext _localctx = new Page_size_rdContext(_ctx, getState());
		enterRule(_localctx, 436, RULE_page_size_rd);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6273);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Control_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Control_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_control_name; }
	}

	public final Control_nameContext control_name() throws RecognitionException {
		Control_nameContext _localctx = new Control_nameContext(_ctx, getState());
		enterRule(_localctx, 438, RULE_control_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6275);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_codeContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Report_codeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_code; }
	}

	public final Report_codeContext report_code() throws RecognitionException {
		Report_codeContext _localctx = new Report_codeContext(_ctx, getState());
		enterRule(_localctx, 440, RULE_report_code);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6277);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class UsageContext extends ParserRuleContext {
		public Usage_definitionContext usage_definition() {
			return getRuleContext(Usage_definitionContext.class,0);
		}
		public TerminalNode USAGE() { return getToken(cobolParser.USAGE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public UsageContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_usage; }
	}

	public final UsageContext usage() throws RecognitionException {
		UsageContext _localctx = new UsageContext(_ctx, getState());
		enterRule(_localctx, 442, RULE_usage);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6294);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==USAGE) {
				{
				setState(6279);
				match(USAGE);
				setState(6287);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1038,_ctx) ) {
				case 1:
					{
					setState(6281); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6280);
						separator();
						}
						}
						setState(6283); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6285);
					match(IS);
					}
					break;
				}
				setState(6290); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6289);
					separator();
					}
					}
					setState(6292); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(6296);
			usage_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Usage_definitionContext extends ParserRuleContext {
		public TerminalNode BINARY() { return getToken(cobolParser.BINARY, 0); }
		public TerminalNode BINARY_CHAR() { return getToken(cobolParser.BINARY_CHAR, 0); }
		public TerminalNode SIGNED() { return getToken(cobolParser.SIGNED, 0); }
		public TerminalNode UNSIGNED() { return getToken(cobolParser.UNSIGNED, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode BINARY_SHORT() { return getToken(cobolParser.BINARY_SHORT, 0); }
		public TerminalNode BINARY_LONG() { return getToken(cobolParser.BINARY_LONG, 0); }
		public TerminalNode BINARY_DOUBLE() { return getToken(cobolParser.BINARY_DOUBLE, 0); }
		public TerminalNode COMPUTATIONAL() { return getToken(cobolParser.COMPUTATIONAL, 0); }
		public TerminalNode COMPUTATIONAL_1() { return getToken(cobolParser.COMPUTATIONAL_1, 0); }
		public TerminalNode COMPUTATIONAL_2() { return getToken(cobolParser.COMPUTATIONAL_2, 0); }
		public TerminalNode COMPUTATIONAL_3() { return getToken(cobolParser.COMPUTATIONAL_3, 0); }
		public TerminalNode COMPUTATIONAL_4() { return getToken(cobolParser.COMPUTATIONAL_4, 0); }
		public TerminalNode COMPUTATIONAL_5() { return getToken(cobolParser.COMPUTATIONAL_5, 0); }
		public TerminalNode COMPUTATIONAL_X() { return getToken(cobolParser.COMPUTATIONAL_X, 0); }
		public TerminalNode COMP() { return getToken(cobolParser.COMP, 0); }
		public TerminalNode COMP_1() { return getToken(cobolParser.COMP_1, 0); }
		public TerminalNode COMP_2() { return getToken(cobolParser.COMP_2, 0); }
		public TerminalNode COMP_3() { return getToken(cobolParser.COMP_3, 0); }
		public TerminalNode COMP_4() { return getToken(cobolParser.COMP_4, 0); }
		public TerminalNode COMP_5() { return getToken(cobolParser.COMP_5, 0); }
		public TerminalNode COMP_X() { return getToken(cobolParser.COMP_X, 0); }
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public TerminalNode FLOAT_SHORT() { return getToken(cobolParser.FLOAT_SHORT, 0); }
		public TerminalNode FLOAT_LONG() { return getToken(cobolParser.FLOAT_LONG, 0); }
		public TerminalNode FLOAT_EXTENDED() { return getToken(cobolParser.FLOAT_EXTENDED, 0); }
		public TerminalNode INDEX() { return getToken(cobolParser.INDEX, 0); }
		public TerminalNode PACKED_DECIMAL() { return getToken(cobolParser.PACKED_DECIMAL, 0); }
		public TerminalNode POINTER() { return getToken(cobolParser.POINTER, 0); }
		public TerminalNode POINTER_64() { return getToken(cobolParser.POINTER_64, 0); }
		public Usage_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_usage_definition; }
	}

	public final Usage_definitionContext usage_definition() throws RecognitionException {
		Usage_definitionContext _localctx = new Usage_definitionContext(_ctx, getState());
		enterRule(_localctx, 444, RULE_usage_definition);
		int _la;
		try {
			setState(6361);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case BINARY:
				enterOuterAlt(_localctx, 1);
				{
				setState(6298);
				match(BINARY);
				}
				break;
			case BINARY_CHAR:
				enterOuterAlt(_localctx, 2);
				{
				setState(6299);
				match(BINARY_CHAR);
				setState(6307);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1042,_ctx) ) {
				case 1:
					{
					setState(6301); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6300);
						separator();
						}
						}
						setState(6303); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6305);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case BINARY_SHORT:
				enterOuterAlt(_localctx, 3);
				{
				setState(6309);
				match(BINARY_SHORT);
				setState(6317);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1044,_ctx) ) {
				case 1:
					{
					setState(6311); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6310);
						separator();
						}
						}
						setState(6313); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6315);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case BINARY_LONG:
				enterOuterAlt(_localctx, 4);
				{
				setState(6319);
				match(BINARY_LONG);
				setState(6327);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1046,_ctx) ) {
				case 1:
					{
					setState(6321); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6320);
						separator();
						}
						}
						setState(6323); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6325);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case BINARY_DOUBLE:
				enterOuterAlt(_localctx, 5);
				{
				setState(6329);
				match(BINARY_DOUBLE);
				setState(6337);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1048,_ctx) ) {
				case 1:
					{
					setState(6331); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6330);
						separator();
						}
						}
						setState(6333); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6335);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case COMPUTATIONAL:
				enterOuterAlt(_localctx, 6);
				{
				setState(6339);
				match(COMPUTATIONAL);
				}
				break;
			case COMPUTATIONAL_1:
				enterOuterAlt(_localctx, 7);
				{
				setState(6340);
				match(COMPUTATIONAL_1);
				}
				break;
			case COMPUTATIONAL_2:
				enterOuterAlt(_localctx, 8);
				{
				setState(6341);
				match(COMPUTATIONAL_2);
				}
				break;
			case COMPUTATIONAL_3:
				enterOuterAlt(_localctx, 9);
				{
				setState(6342);
				match(COMPUTATIONAL_3);
				}
				break;
			case COMPUTATIONAL_4:
				enterOuterAlt(_localctx, 10);
				{
				setState(6343);
				match(COMPUTATIONAL_4);
				}
				break;
			case COMPUTATIONAL_5:
				enterOuterAlt(_localctx, 11);
				{
				setState(6344);
				match(COMPUTATIONAL_5);
				}
				break;
			case COMPUTATIONAL_X:
				enterOuterAlt(_localctx, 12);
				{
				setState(6345);
				match(COMPUTATIONAL_X);
				}
				break;
			case COMP:
				enterOuterAlt(_localctx, 13);
				{
				setState(6346);
				match(COMP);
				}
				break;
			case COMP_1:
				enterOuterAlt(_localctx, 14);
				{
				setState(6347);
				match(COMP_1);
				}
				break;
			case COMP_2:
				enterOuterAlt(_localctx, 15);
				{
				setState(6348);
				match(COMP_2);
				}
				break;
			case COMP_3:
				enterOuterAlt(_localctx, 16);
				{
				setState(6349);
				match(COMP_3);
				}
				break;
			case COMP_4:
				enterOuterAlt(_localctx, 17);
				{
				setState(6350);
				match(COMP_4);
				}
				break;
			case COMP_5:
				enterOuterAlt(_localctx, 18);
				{
				setState(6351);
				match(COMP_5);
				}
				break;
			case COMP_X:
				enterOuterAlt(_localctx, 19);
				{
				setState(6352);
				match(COMP_X);
				}
				break;
			case DISPLAY:
				enterOuterAlt(_localctx, 20);
				{
				setState(6353);
				match(DISPLAY);
				}
				break;
			case FLOAT_SHORT:
				enterOuterAlt(_localctx, 21);
				{
				setState(6354);
				match(FLOAT_SHORT);
				}
				break;
			case FLOAT_LONG:
				enterOuterAlt(_localctx, 22);
				{
				setState(6355);
				match(FLOAT_LONG);
				}
				break;
			case FLOAT_EXTENDED:
				enterOuterAlt(_localctx, 23);
				{
				setState(6356);
				match(FLOAT_EXTENDED);
				}
				break;
			case INDEX:
				enterOuterAlt(_localctx, 24);
				{
				setState(6357);
				match(INDEX);
				}
				break;
			case PACKED_DECIMAL:
				enterOuterAlt(_localctx, 25);
				{
				setState(6358);
				match(PACKED_DECIMAL);
				}
				break;
			case POINTER:
				enterOuterAlt(_localctx, 26);
				{
				setState(6359);
				match(POINTER);
				}
				break;
			case POINTER_64:
				enterOuterAlt(_localctx, 27);
				{
				setState(6360);
				match(POINTER_64);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class PictureContext extends ParserRuleContext {
		public Character_stringContext character_string() {
			return getRuleContext(Character_stringContext.class,0);
		}
		public TerminalNode PICTURE() { return getToken(cobolParser.PICTURE, 0); }
		public TerminalNode PIC() { return getToken(cobolParser.PIC, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public PictureContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_picture; }
	}

	public final PictureContext picture() throws RecognitionException {
		PictureContext _localctx = new PictureContext(_ctx, getState());
		enterRule(_localctx, 446, RULE_picture);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6363);
			_la = _input.LA(1);
			if ( !(_la==PIC || _la==PICTURE) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(6365); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(6364);
					separator();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(6367); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1050,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(6375);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6369);
				match(IS);
				setState(6371); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(6370);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(6373); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1051,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
			}

			setState(6377);
			character_string();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Character_stringContext extends ParserRuleContext {
		public List<Char_str_partContext> char_str_part() {
			return getRuleContexts(Char_str_partContext.class);
		}
		public Char_str_partContext char_str_part(int i) {
			return getRuleContext(Char_str_partContext.class,i);
		}
		public Character_stringContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_character_string; }
	}

	public final Character_stringContext character_string() throws RecognitionException {
		Character_stringContext _localctx = new Character_stringContext(_ctx, getState());
		enterRule(_localctx, 448, RULE_character_string);
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6380); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(6379);
					char_str_part();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(6382); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1053,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Char_str_partContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode COMMA_() { return getToken(cobolParser.COMMA_, 0); }
		public TerminalNode SLASH_() { return getToken(cobolParser.SLASH_, 0); }
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Char_str_partContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_char_str_part; }
	}

	public final Char_str_partContext char_str_part() throws RecognitionException {
		Char_str_partContext _localctx = new Char_str_partContext(_ctx, getState());
		enterRule(_localctx, 450, RULE_char_str_part);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6384);
			_la = _input.LA(1);
			if ( !(((((_la - 429)) & ~0x3f) == 0 && ((1L << (_la - 429)) & ((1L << (SLASH_ - 429)) | (1L << (COMMA_ - 429)) | (1L << (LPAREN_ - 429)) | (1L << (RPAREN_ - 429)) | (1L << (DOT_ - 429)) | (1L << (NUMERIC_LITERAL - 429)) | (1L << (USER_DEFINED_WORD - 429)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Other_data_itemContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Other_data_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_other_data_item; }
	}

	public final Other_data_itemContext other_data_item() throws RecognitionException {
		Other_data_itemContext _localctx = new Other_data_itemContext(_ctx, getState());
		enterRule(_localctx, 452, RULE_other_data_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6386);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Data_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_name; }
	}

	public final Data_nameContext data_name() throws RecognitionException {
		Data_nameContext _localctx = new Data_nameContext(_ctx, getState());
		enterRule(_localctx, 454, RULE_data_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6388);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sd_clauseContext extends ParserRuleContext {
		public RecordContext record() {
			return getRuleContext(RecordContext.class,0);
		}
		public Data_recContext data_rec() {
			return getRuleContext(Data_recContext.class,0);
		}
		public Sd_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sd_clause; }
	}

	public final Sd_clauseContext sd_clause() throws RecognitionException {
		Sd_clauseContext _localctx = new Sd_clauseContext(_ctx, getState());
		enterRule(_localctx, 456, RULE_sd_clause);
		try {
			setState(6392);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case RECORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(6390);
				record();
				}
				break;
			case DATA:
				enterOuterAlt(_localctx, 2);
				{
				setState(6391);
				data_rec();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_isContext extends ParserRuleContext {
		public List<Report_nameContext> report_name() {
			return getRuleContexts(Report_nameContext.class);
		}
		public Report_nameContext report_name(int i) {
			return getRuleContext(Report_nameContext.class,i);
		}
		public TerminalNode REPORT() { return getToken(cobolParser.REPORT, 0); }
		public TerminalNode REPORTS() { return getToken(cobolParser.REPORTS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public Report_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_is; }
	}

	public final Report_isContext report_is() throws RecognitionException {
		Report_isContext _localctx = new Report_isContext(_ctx, getState());
		enterRule(_localctx, 458, RULE_report_is);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6414);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case REPORT:
				{
				setState(6394);
				match(REPORT);
				setState(6402);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1056,_ctx) ) {
				case 1:
					{
					setState(6396); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6395);
						separator();
						}
						}
						setState(6398); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6400);
					match(IS);
					}
					break;
				}
				}
				break;
			case REPORTS:
				{
				setState(6404);
				match(REPORTS);
				setState(6412);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1058,_ctx) ) {
				case 1:
					{
					setState(6406); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6405);
						separator();
						}
						}
						setState(6408); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6410);
					match(ARE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(6417); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6416);
				separator();
				}
				}
				setState(6419); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(6421);
			report_name();
			setState(6431);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1062,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6425);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(6422);
						separator();
						}
						}
						setState(6427);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(6428);
					report_name();
					}
					} 
				}
				setState(6433);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1062,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Report_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_name; }
	}

	public final Report_nameContext report_name() throws RecognitionException {
		Report_nameContext _localctx = new Report_nameContext(_ctx, getState());
		enterRule(_localctx, 460, RULE_report_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6434);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class LinageContext extends ParserRuleContext {
		public TerminalNode LINAGE() { return getToken(cobolParser.LINAGE, 0); }
		public Page_sizeContext page_size() {
			return getRuleContext(Page_sizeContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<TerminalNode> LINES() { return getTokens(cobolParser.LINES); }
		public TerminalNode LINES(int i) {
			return getToken(cobolParser.LINES, i);
		}
		public TerminalNode FOOTING() { return getToken(cobolParser.FOOTING, 0); }
		public Footing_lineContext footing_line() {
			return getRuleContext(Footing_lineContext.class,0);
		}
		public TerminalNode TOP() { return getToken(cobolParser.TOP, 0); }
		public Top_linesContext top_lines() {
			return getRuleContext(Top_linesContext.class,0);
		}
		public TerminalNode BOTTOM() { return getToken(cobolParser.BOTTOM, 0); }
		public Bottom_linesContext bottom_lines() {
			return getRuleContext(Bottom_linesContext.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<TerminalNode> AT() { return getTokens(cobolParser.AT); }
		public TerminalNode AT(int i) {
			return getToken(cobolParser.AT, i);
		}
		public LinageContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_linage; }
	}

	public final LinageContext linage() throws RecognitionException {
		LinageContext _localctx = new LinageContext(_ctx, getState());
		enterRule(_localctx, 462, RULE_linage);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6436);
			match(LINAGE);
			setState(6438); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6437);
				separator();
				}
				}
				setState(6440); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(6448);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6442);
				match(IS);
				setState(6444); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6443);
					separator();
					}
					}
					setState(6446); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(6450);
			page_size();
			setState(6458);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1067,_ctx) ) {
			case 1:
				{
				setState(6452); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6451);
					separator();
					}
					}
					setState(6454); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6456);
				match(LINES);
				}
				break;
			}
			setState(6489);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1074,_ctx) ) {
			case 1:
				{
				setState(6461); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6460);
					separator();
					}
					}
					setState(6463); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6471);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(6465);
					match(WITH);
					setState(6467); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6466);
						separator();
						}
						}
						setState(6469); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6473);
				match(FOOTING);
				setState(6475); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6474);
					separator();
					}
					}
					setState(6477); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6485);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(6479);
					match(AT);
					setState(6481); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6480);
						separator();
						}
						}
						setState(6483); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6487);
				footing_line();
				}
				break;
			}
			setState(6520);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1081,_ctx) ) {
			case 1:
				{
				setState(6492); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6491);
					separator();
					}
					}
					setState(6494); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6502);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==LINES) {
					{
					setState(6496);
					match(LINES);
					setState(6498); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6497);
						separator();
						}
						}
						setState(6500); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6510);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(6504);
					match(AT);
					setState(6506); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6505);
						separator();
						}
						}
						setState(6508); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6512);
				match(TOP);
				setState(6514); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6513);
					separator();
					}
					}
					setState(6516); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6518);
				top_lines();
				}
				break;
			}
			setState(6551);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1088,_ctx) ) {
			case 1:
				{
				setState(6523); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6522);
					separator();
					}
					}
					setState(6525); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6533);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==LINES) {
					{
					setState(6527);
					match(LINES);
					setState(6529); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6528);
						separator();
						}
						}
						setState(6531); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6541);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(6535);
					match(AT);
					setState(6537); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6536);
						separator();
						}
						}
						setState(6539); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6543);
				match(BOTTOM);
				setState(6545); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6544);
					separator();
					}
					}
					setState(6547); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6549);
				bottom_lines();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Bottom_linesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Bottom_linesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_bottom_lines; }
	}

	public final Bottom_linesContext bottom_lines() throws RecognitionException {
		Bottom_linesContext _localctx = new Bottom_linesContext(_ctx, getState());
		enterRule(_localctx, 464, RULE_bottom_lines);
		try {
			setState(6555);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(6553);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(6554);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Top_linesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Top_linesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_top_lines; }
	}

	public final Top_linesContext top_lines() throws RecognitionException {
		Top_linesContext _localctx = new Top_linesContext(_ctx, getState());
		enterRule(_localctx, 466, RULE_top_lines);
		try {
			setState(6559);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(6557);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(6558);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Footing_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Footing_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_footing_line; }
	}

	public final Footing_lineContext footing_line() throws RecognitionException {
		Footing_lineContext _localctx = new Footing_lineContext(_ctx, getState());
		enterRule(_localctx, 468, RULE_footing_line);
		try {
			setState(6563);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(6561);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(6562);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Page_sizeContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Page_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_page_size; }
	}

	public final Page_sizeContext page_size() throws RecognitionException {
		Page_sizeContext _localctx = new Page_sizeContext(_ctx, getState());
		enterRule(_localctx, 470, RULE_page_size);
		try {
			setState(6567);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(6565);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(6566);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_recContext extends ParserRuleContext {
		public TerminalNode DATA() { return getToken(cobolParser.DATA, 0); }
		public List<Rec_nameContext> rec_name() {
			return getRuleContexts(Rec_nameContext.class);
		}
		public Rec_nameContext rec_name(int i) {
			return getRuleContext(Rec_nameContext.class,i);
		}
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Data_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_rec; }
	}

	public final Data_recContext data_rec() throws RecognitionException {
		Data_recContext _localctx = new Data_recContext(_ctx, getState());
		enterRule(_localctx, 472, RULE_data_rec);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6569);
			match(DATA);
			setState(6571); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6570);
				separator();
				}
				}
				setState(6573); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(6595);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case RECORDS:
				{
				setState(6575);
				match(RECORDS);
				setState(6583);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					setState(6577); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6576);
						separator();
						}
						}
						setState(6579); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6581);
					match(ARE);
					}
				}

				}
				break;
			case RECORD:
				{
				setState(6585);
				match(RECORD);
				setState(6593);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					setState(6587); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6586);
						separator();
						}
						}
						setState(6589); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6591);
					match(IS);
					}
				}

				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(6597);
			rec_name();
			setState(6607);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1100,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6599); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6598);
						separator();
						}
						}
						setState(6601); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6603);
					rec_name();
					}
					} 
				}
				setState(6609);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1100,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rec_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Rec_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rec_name; }
	}

	public final Rec_nameContext rec_name() throws RecognitionException {
		Rec_nameContext _localctx = new Rec_nameContext(_ctx, getState());
		enterRule(_localctx, 474, RULE_rec_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6610);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_of_idContext extends ParserRuleContext {
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public Value_of_id_definitionContext value_of_id_definition() {
			return getRuleContext(Value_of_id_definitionContext.class,0);
		}
		public TerminalNode ID() { return getToken(cobolParser.ID, 0); }
		public TerminalNode FILE_ID() { return getToken(cobolParser.FILE_ID, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Value_of_idContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_of_id; }
	}

	public final Value_of_idContext value_of_id() throws RecognitionException {
		Value_of_idContext _localctx = new Value_of_idContext(_ctx, getState());
		enterRule(_localctx, 476, RULE_value_of_id);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6612);
			match(VALUE);
			setState(6614); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6613);
				separator();
				}
				}
				setState(6616); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(6618);
			match(OF);
			setState(6620); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6619);
				separator();
				}
				}
				setState(6622); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(6624);
			_la = _input.LA(1);
			if ( !(_la==FILE_ID || _la==ID) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(6626); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6625);
				separator();
				}
				}
				setState(6628); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(6636);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6630);
				match(IS);
				setState(6632); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6631);
					separator();
					}
					}
					setState(6634); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(6638);
			value_of_id_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_of_id_definitionContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Value_of_id_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_of_id_definition; }
	}

	public final Value_of_id_definitionContext value_of_id_definition() throws RecognitionException {
		Value_of_id_definitionContext _localctx = new Value_of_id_definitionContext(_ctx, getState());
		enterRule(_localctx, 478, RULE_value_of_id_definition);
		try {
			setState(6642);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(6640);
				match(STRING_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(6641);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class LabelContext extends ParserRuleContext {
		public TerminalNode LABEL() { return getToken(cobolParser.LABEL, 0); }
		public TerminalNode STANDARD() { return getToken(cobolParser.STANDARD, 0); }
		public TerminalNode OMITTED() { return getToken(cobolParser.OMITTED, 0); }
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public LabelContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_label; }
	}

	public final LabelContext label() throws RecognitionException {
		LabelContext _localctx = new LabelContext(_ctx, getState());
		enterRule(_localctx, 480, RULE_label);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6644);
			match(LABEL);
			setState(6646); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6645);
				separator();
				}
				}
				setState(6648); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(6670);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case RECORDS:
				{
				setState(6650);
				match(RECORDS);
				setState(6658);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1109,_ctx) ) {
				case 1:
					{
					setState(6652); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6651);
						separator();
						}
						}
						setState(6654); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6656);
					match(ARE);
					}
					break;
				}
				}
				break;
			case RECORD:
				{
				setState(6660);
				match(RECORD);
				setState(6668);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1111,_ctx) ) {
				case 1:
					{
					setState(6662); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6661);
						separator();
						}
						}
						setState(6664); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6666);
					match(IS);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(6673); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6672);
				separator();
				}
				}
				setState(6675); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(6677);
			_la = _input.LA(1);
			if ( !(_la==OMITTED || _la==STANDARD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RecordContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public Record_definitionContext record_definition() {
			return getRuleContext(Record_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public RecordContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record; }
	}

	public final RecordContext record() throws RecognitionException {
		RecordContext _localctx = new RecordContext(_ctx, getState());
		enterRule(_localctx, 482, RULE_record);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6679);
			match(RECORD);
			setState(6681); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6680);
				separator();
				}
				}
				setState(6683); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(6685);
			record_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_definitionContext extends ParserRuleContext {
		public Longest_recContext longest_rec() {
			return getRuleContext(Longest_recContext.class,0);
		}
		public TerminalNode CONTAINS() { return getToken(cobolParser.CONTAINS, 0); }
		public Shortest_recContext shortest_rec() {
			return getRuleContext(Shortest_recContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public TerminalNode VARYING() { return getToken(cobolParser.VARYING, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public TerminalNode DEPENDING() { return getToken(cobolParser.DEPENDING, 0); }
		public Depending_itemContext depending_item() {
			return getRuleContext(Depending_itemContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Record_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_definition; }
	}

	public final Record_definitionContext record_definition() throws RecognitionException {
		Record_definitionContext _localctx = new Record_definitionContext(_ctx, getState());
		enterRule(_localctx, 484, RULE_record_definition);
		int _la;
		try {
			int _alt;
			setState(6810);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case CONTAINS:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(6693);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CONTAINS) {
					{
					setState(6687);
					match(CONTAINS);
					setState(6689); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6688);
						separator();
						}
						}
						setState(6691); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6707);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1119,_ctx) ) {
				case 1:
					{
					setState(6695);
					shortest_rec();
					setState(6697); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6696);
						separator();
						}
						}
						setState(6699); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6701);
					match(TO);
					setState(6703); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6702);
						separator();
						}
						}
						setState(6705); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
					break;
				}
				setState(6709);
				longest_rec();
				setState(6713);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1120,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(6710);
						separator();
						}
						} 
					}
					setState(6715);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1120,_ctx);
				}
				setState(6723);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CHARACTERS) {
					{
					setState(6716);
					match(CHARACTERS);
					setState(6720);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1121,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(6717);
							separator();
							}
							} 
						}
						setState(6722);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,1121,_ctx);
					}
					}
				}

				}
				break;
			case IS:
			case VARYING:
				enterOuterAlt(_localctx, 2);
				{
				setState(6731);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6725);
					match(IS);
					setState(6727); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6726);
						separator();
						}
						}
						setState(6729); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6733);
				match(VARYING);
				setState(6735); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(6734);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(6737); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1125,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				setState(6745);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IN) {
					{
					setState(6739);
					match(IN);
					setState(6741); 
					_errHandler.sync(this);
					_alt = 1;
					do {
						switch (_alt) {
						case 1:
							{
							{
							setState(6740);
							separator();
							}
							}
							break;
						default:
							throw new NoViableAltException(this);
						}
						setState(6743); 
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,1126,_ctx);
					} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
					}
				}

				setState(6754);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==SIZE) {
					{
					setState(6747);
					match(SIZE);
					setState(6751);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1128,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(6748);
							separator();
							}
							} 
						}
						setState(6753);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,1128,_ctx);
					}
					}
				}

				setState(6765);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==FROM || _la==NUMERIC_LITERAL) {
					{
					setState(6762);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==FROM) {
						{
						setState(6756);
						match(FROM);
						setState(6758); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6757);
							separator();
							}
							}
							setState(6760); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					setState(6764);
					shortest_rec();
					}
				}

				setState(6775);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==TO) {
					{
					setState(6767);
					match(TO);
					setState(6769); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6768);
						separator();
						}
						}
						setState(6771); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6773);
					longest_rec();
					}
				}

				setState(6790);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1137,_ctx) ) {
				case 1:
					{
					setState(6780);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(6777);
						separator();
						}
						}
						setState(6782);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(6783);
					match(CHARACTERS);
					setState(6787);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1136,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(6784);
							separator();
							}
							} 
						}
						setState(6789);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,1136,_ctx);
					}
					}
					break;
				}
				setState(6808);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==DEPENDING) {
					{
					setState(6792);
					match(DEPENDING);
					setState(6794); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6793);
						separator();
						}
						}
						setState(6796); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6804);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==ON) {
						{
						setState(6798);
						match(ON);
						setState(6800); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6799);
							separator();
							}
							}
							setState(6802); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					setState(6806);
					depending_item();
					}
				}

				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Depending_itemContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Depending_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_depending_item; }
	}

	public final Depending_itemContext depending_item() throws RecognitionException {
		Depending_itemContext _localctx = new Depending_itemContext(_ctx, getState());
		enterRule(_localctx, 486, RULE_depending_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6812);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Shortest_recContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Shortest_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_shortest_rec; }
	}

	public final Shortest_recContext shortest_rec() throws RecognitionException {
		Shortest_recContext _localctx = new Shortest_recContext(_ctx, getState());
		enterRule(_localctx, 488, RULE_shortest_rec);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6814);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Longest_recContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Longest_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_longest_rec; }
	}

	public final Longest_recContext longest_rec() throws RecognitionException {
		Longest_recContext _localctx = new Longest_recContext(_ctx, getState());
		enterRule(_localctx, 490, RULE_longest_rec);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6816);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_description_entryContext extends ParserRuleContext {
		public Level_numberContext level_number() {
			return getRuleContext(Level_numberContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<Screen_description_clauseContext> screen_description_clause() {
			return getRuleContexts(Screen_description_clauseContext.class);
		}
		public Screen_description_clauseContext screen_description_clause(int i) {
			return getRuleContext(Screen_description_clauseContext.class,i);
		}
		public Screen_nameContext screen_name() {
			return getRuleContext(Screen_nameContext.class,0);
		}
		public TerminalNode FILLER() { return getToken(cobolParser.FILLER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Screen_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_description_entry; }
	}

	public final Screen_description_entryContext screen_description_entry() throws RecognitionException {
		Screen_description_entryContext _localctx = new Screen_description_entryContext(_ctx, getState());
		enterRule(_localctx, 492, RULE_screen_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6818);
			level_number();
			setState(6828);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1145,_ctx) ) {
			case 1:
				{
				setState(6820); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6819);
					separator();
					}
					}
					setState(6822); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6826);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USER_DEFINED_WORD:
					{
					setState(6824);
					screen_name();
					}
					break;
				case FILLER:
					{
					setState(6825);
					match(FILLER);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(6839);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(6831); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6830);
					separator();
					}
					}
					setState(6833); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6835);
				screen_description_clause();
				}
				}
				setState(6841);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6842);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Screen_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_name; }
	}

	public final Screen_nameContext screen_name() throws RecognitionException {
		Screen_nameContext _localctx = new Screen_nameContext(_ctx, getState());
		enterRule(_localctx, 494, RULE_screen_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6844);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_description_clauseContext extends ParserRuleContext {
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FOREGROUND_COLOR() { return getToken(cobolParser.FOREGROUND_COLOR, 0); }
		public Color_numContext color_num() {
			return getRuleContext(Color_numContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode BACKGROUND_COLOR() { return getToken(cobolParser.BACKGROUND_COLOR, 0); }
		public TerminalNode AUTO() { return getToken(cobolParser.AUTO, 0); }
		public TerminalNode SECURE() { return getToken(cobolParser.SECURE, 0); }
		public TerminalNode REQUIRED() { return getToken(cobolParser.REQUIRED, 0); }
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public TerminalNode USAGE() { return getToken(cobolParser.USAGE, 0); }
		public Sign_isContext sign_is() {
			return getRuleContext(Sign_isContext.class,0);
		}
		public TerminalNode FULL() { return getToken(cobolParser.FULL, 0); }
		public TerminalNode BELL() { return getToken(cobolParser.BELL, 0); }
		public TerminalNode BLINK() { return getToken(cobolParser.BLINK, 0); }
		public TerminalNode ERASE() { return getToken(cobolParser.ERASE, 0); }
		public TerminalNode EOL() { return getToken(cobolParser.EOL, 0); }
		public TerminalNode EOS() { return getToken(cobolParser.EOS, 0); }
		public TerminalNode HIGHLIGHT() { return getToken(cobolParser.HIGHLIGHT, 0); }
		public TerminalNode LOWLIGHT() { return getToken(cobolParser.LOWLIGHT, 0); }
		public TerminalNode REVERSE_VIDEO() { return getToken(cobolParser.REVERSE_VIDEO, 0); }
		public TerminalNode UNDERLINE() { return getToken(cobolParser.UNDERLINE, 0); }
		public Src_numberContext src_number() {
			return getRuleContext(Src_numberContext.class,0);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public Nonnumeric_literalContext nonnumeric_literal() {
			return getRuleContext(Nonnumeric_literalContext.class,0);
		}
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode WHEN() { return getToken(cobolParser.WHEN, 0); }
		public TerminalNode JUSTIFIED() { return getToken(cobolParser.JUSTIFIED, 0); }
		public TerminalNode JUST() { return getToken(cobolParser.JUST, 0); }
		public TerminalNode RIGHT() { return getToken(cobolParser.RIGHT, 0); }
		public PictureContext picture() {
			return getRuleContext(PictureContext.class,0);
		}
		public Scr_pic_usingContext scr_pic_using() {
			return getRuleContext(Scr_pic_usingContext.class,0);
		}
		public Scr_pic_fromContext scr_pic_from() {
			return getRuleContext(Scr_pic_fromContext.class,0);
		}
		public Scr_pic_toContext scr_pic_to() {
			return getRuleContext(Scr_pic_toContext.class,0);
		}
		public Screen_description_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_description_clause; }
	}

	public final Screen_description_clauseContext screen_description_clause() throws RecognitionException {
		Screen_description_clauseContext _localctx = new Screen_description_clauseContext(_ctx, getState());
		enterRule(_localctx, 496, RULE_screen_description_clause);
		int _la;
		try {
			setState(7048);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1186,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(6846);
				match(BLANK);
				setState(6848); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6847);
					separator();
					}
					}
					setState(6850); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6852);
				_la = _input.LA(1);
				if ( !(_la==LINE || _la==SCREEN) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(6854);
				match(FOREGROUND_COLOR);
				setState(6856); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6855);
					separator();
					}
					}
					setState(6858); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6866);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6860);
					match(IS);
					setState(6862); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6861);
						separator();
						}
						}
						setState(6864); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6868);
				color_num();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(6870);
				match(BACKGROUND_COLOR);
				setState(6872); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6871);
					separator();
					}
					}
					setState(6874); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6882);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6876);
					match(IS);
					setState(6878); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6877);
						separator();
						}
						}
						setState(6880); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6884);
				color_num();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(6886);
				match(AUTO);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(6887);
				match(SECURE);
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(6888);
				match(REQUIRED);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(6903);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==USAGE) {
					{
					setState(6889);
					match(USAGE);
					setState(6891); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6890);
						separator();
						}
						}
						setState(6893); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(6901);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==IS) {
						{
						setState(6895);
						match(IS);
						setState(6897); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6896);
							separator();
							}
							}
							setState(6899); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					}
				}

				setState(6905);
				match(DISPLAY);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(6906);
				sign_is();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(6907);
				match(FULL);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(6908);
				match(BELL);
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(6909);
				match(BLINK);
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(6910);
				match(ERASE);
				setState(6912); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6911);
					separator();
					}
					}
					setState(6914); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6916);
				_la = _input.LA(1);
				if ( !(_la==EOL || _la==EOS) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 13:
				enterOuterAlt(_localctx, 13);
				{
				setState(6918);
				match(HIGHLIGHT);
				}
				break;
			case 14:
				enterOuterAlt(_localctx, 14);
				{
				setState(6919);
				match(LOWLIGHT);
				}
				break;
			case 15:
				enterOuterAlt(_localctx, 15);
				{
				setState(6920);
				match(REVERSE_VIDEO);
				}
				break;
			case 16:
				enterOuterAlt(_localctx, 16);
				{
				setState(6921);
				match(UNDERLINE);
				}
				break;
			case 17:
				enterOuterAlt(_localctx, 17);
				{
				setState(6922);
				match(LINE);
				setState(6924); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6923);
					separator();
					}
					}
					setState(6926); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6934);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(6928);
					match(NUMBER);
					setState(6930); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6929);
						separator();
						}
						}
						setState(6932); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6942);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6936);
					match(IS);
					setState(6938); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6937);
						separator();
						}
						}
						setState(6940); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6950);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==PLUS) {
					{
					setState(6944);
					match(PLUS);
					setState(6946); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6945);
						separator();
						}
						}
						setState(6948); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6952);
				src_number();
				}
				break;
			case 18:
				enterOuterAlt(_localctx, 18);
				{
				setState(6954);
				match(COLUMN);
				setState(6956); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6955);
					separator();
					}
					}
					setState(6958); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6966);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(6960);
					match(NUMBER);
					setState(6962); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6961);
						separator();
						}
						}
						setState(6964); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6974);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6968);
					match(IS);
					setState(6970); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6969);
						separator();
						}
						}
						setState(6972); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6982);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==PLUS) {
					{
					setState(6976);
					match(PLUS);
					setState(6978); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6977);
						separator();
						}
						}
						setState(6980); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(6984);
				src_number();
				}
				break;
			case 19:
				enterOuterAlt(_localctx, 19);
				{
				setState(6986);
				match(VALUE);
				setState(6988); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6987);
					separator();
					}
					}
					setState(6990); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(6998);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(6992);
					match(IS);
					setState(6994); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6993);
						separator();
						}
						}
						setState(6996); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(7000);
				nonnumeric_literal();
				}
				break;
			case 20:
				enterOuterAlt(_localctx, 20);
				{
				setState(7002);
				match(BLANK);
				setState(7004); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7003);
					separator();
					}
					}
					setState(7006); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7014);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WHEN) {
					{
					setState(7008);
					match(WHEN);
					setState(7010); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7009);
						separator();
						}
						}
						setState(7012); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(7016);
				match(ZERO);
				}
				break;
			case 21:
				enterOuterAlt(_localctx, 21);
				{
				setState(7018);
				_la = _input.LA(1);
				if ( !(_la==JUST || _la==JUSTIFIED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(7026);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1181,_ctx) ) {
				case 1:
					{
					setState(7020); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7019);
						separator();
						}
						}
						setState(7022); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(7024);
					match(RIGHT);
					}
					break;
				}
				}
				break;
			case 22:
				enterOuterAlt(_localctx, 22);
				{
				setState(7028);
				picture();
				setState(7030); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7029);
					separator();
					}
					}
					setState(7032); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7046);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USING:
					{
					setState(7034);
					scr_pic_using();
					}
					break;
				case FROM:
					{
					setState(7035);
					scr_pic_from();
					setState(7043);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1184,_ctx) ) {
					case 1:
						{
						setState(7037); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(7036);
							separator();
							}
							}
							setState(7039); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(7041);
						scr_pic_to();
						}
						break;
					}
					}
					break;
				case TO:
					{
					setState(7045);
					scr_pic_to();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Scr_pic_usingContext extends ParserRuleContext {
		public TerminalNode USING() { return getToken(cobolParser.USING, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Scr_pic_usingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_scr_pic_using; }
	}

	public final Scr_pic_usingContext scr_pic_using() throws RecognitionException {
		Scr_pic_usingContext _localctx = new Scr_pic_usingContext(_ctx, getState());
		enterRule(_localctx, 498, RULE_scr_pic_using);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7050);
			match(USING);
			setState(7052); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7051);
				separator();
				}
				}
				setState(7054); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7056);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Scr_pic_fromContext extends ParserRuleContext {
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Nonnumeric_literalContext nonnumeric_literal() {
			return getRuleContext(Nonnumeric_literalContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Scr_pic_fromContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_scr_pic_from; }
	}

	public final Scr_pic_fromContext scr_pic_from() throws RecognitionException {
		Scr_pic_fromContext _localctx = new Scr_pic_fromContext(_ctx, getState());
		enterRule(_localctx, 500, RULE_scr_pic_from);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7058);
			match(FROM);
			setState(7060); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7059);
				separator();
				}
				}
				setState(7062); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7066);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				{
				setState(7064);
				qualified_data_item();
				}
				break;
			case STRING_LITERAL:
				{
				setState(7065);
				nonnumeric_literal();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Scr_pic_toContext extends ParserRuleContext {
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Scr_pic_toContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_scr_pic_to; }
	}

	public final Scr_pic_toContext scr_pic_to() throws RecognitionException {
		Scr_pic_toContext _localctx = new Scr_pic_toContext(_ctx, getState());
		enterRule(_localctx, 502, RULE_scr_pic_to);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7068);
			match(TO);
			setState(7070); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7069);
				separator();
				}
				}
				setState(7072); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7074);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Nonnumeric_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Nonnumeric_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_nonnumeric_literal; }
	}

	public final Nonnumeric_literalContext nonnumeric_literal() throws RecognitionException {
		Nonnumeric_literalContext _localctx = new Nonnumeric_literalContext(_ctx, getState());
		enterRule(_localctx, 504, RULE_nonnumeric_literal);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7076);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Src_numberContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Src_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_src_number; }
	}

	public final Src_numberContext src_number() throws RecognitionException {
		Src_numberContext _localctx = new Src_numberContext(_ctx, getState());
		enterRule(_localctx, 506, RULE_src_number);
		try {
			setState(7080);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(7078);
				qualified_data_item();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(7079);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Color_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Color_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_color_num; }
	}

	public final Color_numContext color_num() throws RecognitionException {
		Color_numContext _localctx = new Color_numContext(_ctx, getState());
		enterRule(_localctx, 508, RULE_color_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7082);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Identification_divisionContext extends ParserRuleContext {
		public TerminalNode IDENTIFICATION_IN_A_AREA() { return getToken(cobolParser.IDENTIFICATION_IN_A_AREA, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Identification_division_paragraphContext> identification_division_paragraph() {
			return getRuleContexts(Identification_division_paragraphContext.class);
		}
		public Identification_division_paragraphContext identification_division_paragraph(int i) {
			return getRuleContext(Identification_division_paragraphContext.class,i);
		}
		public Identification_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identification_division; }
	}

	public final Identification_divisionContext identification_division() throws RecognitionException {
		Identification_divisionContext _localctx = new Identification_divisionContext(_ctx, getState());
		enterRule(_localctx, 510, RULE_identification_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7084);
			match(IDENTIFICATION_IN_A_AREA);
			setState(7086); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7085);
				separator();
				}
				}
				setState(7088); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7090);
			match(DIVISION);
			setState(7094);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7091);
				separator();
				}
				}
				setState(7096);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7097);
			match(DOT_);
			setState(7101);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1194,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7098);
					separator();
					}
					} 
				}
				setState(7103);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1194,_ctx);
			}
			setState(7107);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1195,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7104);
					identification_division_paragraph();
					}
					} 
				}
				setState(7109);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1195,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Identification_division_paragraphContext extends ParserRuleContext {
		public Program_idContext program_id() {
			return getRuleContext(Program_idContext.class,0);
		}
		public AuthorContext author() {
			return getRuleContext(AuthorContext.class,0);
		}
		public InstallationContext installation() {
			return getRuleContext(InstallationContext.class,0);
		}
		public Date_writtenContext date_written() {
			return getRuleContext(Date_writtenContext.class,0);
		}
		public Date_compiledContext date_compiled() {
			return getRuleContext(Date_compiledContext.class,0);
		}
		public SecurityContext security() {
			return getRuleContext(SecurityContext.class,0);
		}
		public Options_Context options_() {
			return getRuleContext(Options_Context.class,0);
		}
		public SeparatorContext separator() {
			return getRuleContext(SeparatorContext.class,0);
		}
		public Identification_division_paragraphContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identification_division_paragraph; }
	}

	public final Identification_division_paragraphContext identification_division_paragraph() throws RecognitionException {
		Identification_division_paragraphContext _localctx = new Identification_division_paragraphContext(_ctx, getState());
		enterRule(_localctx, 512, RULE_identification_division_paragraph);
		try {
			setState(7118);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case PROGRAM_ID:
				enterOuterAlt(_localctx, 1);
				{
				setState(7110);
				program_id();
				}
				break;
			case AUTHOR:
				enterOuterAlt(_localctx, 2);
				{
				setState(7111);
				author();
				}
				break;
			case INSTALLATION:
				enterOuterAlt(_localctx, 3);
				{
				setState(7112);
				installation();
				}
				break;
			case DATE_WRITTEN:
				enterOuterAlt(_localctx, 4);
				{
				setState(7113);
				date_written();
				}
				break;
			case DATE_COMPILED:
				enterOuterAlt(_localctx, 5);
				{
				setState(7114);
				date_compiled();
				}
				break;
			case SECURITY:
				enterOuterAlt(_localctx, 6);
				{
				setState(7115);
				security();
				}
				break;
			case OPTIONS:
				enterOuterAlt(_localctx, 7);
				{
				setState(7116);
				options_();
				}
				break;
			case START_SLASH_:
			case START_STAR_:
			case COMMA_:
			case SEMI_:
			case START_FOUR_SPACES:
			case WHITESPACE:
			case NEWLINE:
				enterOuterAlt(_localctx, 8);
				{
				setState(7117);
				separator();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Program_idContext extends ParserRuleContext {
		public TerminalNode PROGRAM_ID() { return getToken(cobolParser.PROGRAM_ID, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public Program_nameContext program_name() {
			return getRuleContext(Program_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Is_programContext is_program() {
			return getRuleContext(Is_programContext.class,0);
		}
		public With_identContext with_ident() {
			return getRuleContext(With_identContext.class,0);
		}
		public Program_idContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program_id; }
	}

	public final Program_idContext program_id() throws RecognitionException {
		Program_idContext _localctx = new Program_idContext(_ctx, getState());
		enterRule(_localctx, 514, RULE_program_id);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7120);
			match(PROGRAM_ID);
			setState(7124);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7121);
				separator();
				}
				}
				setState(7126);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7127);
			match(DOT_);
			setState(7131);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7128);
				separator();
				}
				}
				setState(7133);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7134);
			program_name();
			setState(7138);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1199,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7135);
					separator();
					}
					} 
				}
				setState(7140);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1199,_ctx);
			}
			setState(7142);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==COMMON || _la==INITIAL || _la==IS) {
				{
				setState(7141);
				is_program();
				}
			}

			setState(7147);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1201,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7144);
					separator();
					}
					} 
				}
				setState(7149);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1201,_ctx);
			}
			setState(7151);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IDENT || _la==WITH) {
				{
				setState(7150);
				with_ident();
				}
			}

			setState(7156);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7153);
				separator();
				}
				}
				setState(7158);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7159);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Program_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Program_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program_name; }
	}

	public final Program_nameContext program_name() throws RecognitionException {
		Program_nameContext _localctx = new Program_nameContext(_ctx, getState());
		enterRule(_localctx, 516, RULE_program_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7161);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Is_programContext extends ParserRuleContext {
		public TerminalNode COMMON() { return getToken(cobolParser.COMMON, 0); }
		public TerminalNode INITIAL() { return getToken(cobolParser.INITIAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Is_programContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_is_program; }
	}

	public final Is_programContext is_program() throws RecognitionException {
		Is_programContext _localctx = new Is_programContext(_ctx, getState());
		enterRule(_localctx, 518, RULE_is_program);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7169);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(7163);
				match(IS);
				setState(7165); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7164);
					separator();
					}
					}
					setState(7167); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(7171);
			_la = _input.LA(1);
			if ( !(_la==COMMON || _la==INITIAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(7179);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1207,_ctx) ) {
			case 1:
				{
				setState(7173); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7172);
					separator();
					}
					}
					setState(7175); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7177);
				match(PROGRAM);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class With_identContext extends ParserRuleContext {
		public TerminalNode IDENT() { return getToken(cobolParser.IDENT, 0); }
		public Ident_stringContext ident_string() {
			return getRuleContext(Ident_stringContext.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public With_identContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_with_ident; }
	}

	public final With_identContext with_ident() throws RecognitionException {
		With_identContext _localctx = new With_identContext(_ctx, getState());
		enterRule(_localctx, 520, RULE_with_ident);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7187);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WITH) {
				{
				setState(7181);
				match(WITH);
				setState(7183); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7182);
					separator();
					}
					}
					setState(7185); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(7189);
			match(IDENT);
			setState(7191); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7190);
				separator();
				}
				}
				setState(7193); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7195);
			ident_string();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Ident_stringContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Ident_stringContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_ident_string; }
	}

	public final Ident_stringContext ident_string() throws RecognitionException {
		Ident_stringContext _localctx = new Ident_stringContext(_ctx, getState());
		enterRule(_localctx, 522, RULE_ident_string);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7197);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Comment_entryContext extends ParserRuleContext {
		public TerminalNode START_FOUR_SPACES() { return getToken(cobolParser.START_FOUR_SPACES, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public Line_commentContext line_comment() {
			return getRuleContext(Line_commentContext.class,0);
		}
		public Comment_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_comment_entry; }
	}

	public final Comment_entryContext comment_entry() throws RecognitionException {
		Comment_entryContext _localctx = new Comment_entryContext(_ctx, getState());
		enterRule(_localctx, 524, RULE_comment_entry);
		int _la;
		try {
			setState(7208);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case START_FOUR_SPACES:
				enterOuterAlt(_localctx, 1);
				{
				setState(7199);
				match(START_FOUR_SPACES);
				setState(7203);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (ALLOWING - 384)) | (1L << (OTHERS - 384)) | (1L << (READERS - 384)) | (1L << (WRITERS - 384)) | (1L << (UPDATERS - 384)) | (1L << (UNTIL - 384)) | (1L << (TEST - 384)) | (1L << (PREVIOUS - 384)) | (1L << (PRIOR - 384)) | (1L << (REGARDLESS - 384)) | (1L << (DEPENDENCY - 384)) | (1L << (DICTIONARY - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)))) != 0) || ((((_la - 448)) & ~0x3f) == 0 && ((1L << (_la - 448)) & ((1L << (NUMERIC_LITERAL - 448)) | (1L << (HEX_LITERAL - 448)) | (1L << (USER_DEFINED_WORD - 448)) | (1L << (START_FOUR_SPACES - 448)) | (1L << (WHITESPACE - 448)))) != 0)) {
					{
					{
					setState(7200);
					_la = _input.LA(1);
					if ( _la <= 0 || (_la==NEWLINE) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					}
					setState(7205);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7206);
				match(NEWLINE);
				}
				break;
			case START_SLASH_:
			case START_STAR_:
				enterOuterAlt(_localctx, 2);
				{
				setState(7207);
				line_comment();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class AuthorContext extends ParserRuleContext {
		public TerminalNode AUTHOR() { return getToken(cobolParser.AUTHOR, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public AuthorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_author; }
	}

	public final AuthorContext author() throws RecognitionException {
		AuthorContext _localctx = new AuthorContext(_ctx, getState());
		enterRule(_localctx, 526, RULE_author);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7210);
			match(AUTHOR);
			setState(7214);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7211);
				separator();
				}
				}
				setState(7216);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7217);
			match(DOT_);
			setState(7221);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (ALLOWING - 384)) | (1L << (OTHERS - 384)) | (1L << (READERS - 384)) | (1L << (WRITERS - 384)) | (1L << (UPDATERS - 384)) | (1L << (UNTIL - 384)) | (1L << (TEST - 384)) | (1L << (PREVIOUS - 384)) | (1L << (PRIOR - 384)) | (1L << (REGARDLESS - 384)) | (1L << (DEPENDENCY - 384)) | (1L << (DICTIONARY - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)))) != 0) || ((((_la - 448)) & ~0x3f) == 0 && ((1L << (_la - 448)) & ((1L << (NUMERIC_LITERAL - 448)) | (1L << (HEX_LITERAL - 448)) | (1L << (USER_DEFINED_WORD - 448)) | (1L << (START_FOUR_SPACES - 448)) | (1L << (WHITESPACE - 448)))) != 0)) {
				{
				{
				setState(7218);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(7223);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7224);
			match(NEWLINE);
			setState(7228);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1215,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7225);
					comment_entry();
					}
					} 
				}
				setState(7230);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1215,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class InstallationContext extends ParserRuleContext {
		public TerminalNode INSTALLATION() { return getToken(cobolParser.INSTALLATION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public InstallationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_installation; }
	}

	public final InstallationContext installation() throws RecognitionException {
		InstallationContext _localctx = new InstallationContext(_ctx, getState());
		enterRule(_localctx, 528, RULE_installation);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7231);
			match(INSTALLATION);
			setState(7235);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7232);
				separator();
				}
				}
				setState(7237);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7238);
			match(DOT_);
			setState(7242);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (ALLOWING - 384)) | (1L << (OTHERS - 384)) | (1L << (READERS - 384)) | (1L << (WRITERS - 384)) | (1L << (UPDATERS - 384)) | (1L << (UNTIL - 384)) | (1L << (TEST - 384)) | (1L << (PREVIOUS - 384)) | (1L << (PRIOR - 384)) | (1L << (REGARDLESS - 384)) | (1L << (DEPENDENCY - 384)) | (1L << (DICTIONARY - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)))) != 0) || ((((_la - 448)) & ~0x3f) == 0 && ((1L << (_la - 448)) & ((1L << (NUMERIC_LITERAL - 448)) | (1L << (HEX_LITERAL - 448)) | (1L << (USER_DEFINED_WORD - 448)) | (1L << (START_FOUR_SPACES - 448)) | (1L << (WHITESPACE - 448)))) != 0)) {
				{
				{
				setState(7239);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(7244);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7245);
			match(NEWLINE);
			setState(7249);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1218,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7246);
					comment_entry();
					}
					} 
				}
				setState(7251);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1218,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Date_writtenContext extends ParserRuleContext {
		public TerminalNode DATE_WRITTEN() { return getToken(cobolParser.DATE_WRITTEN, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public Date_writtenContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_date_written; }
	}

	public final Date_writtenContext date_written() throws RecognitionException {
		Date_writtenContext _localctx = new Date_writtenContext(_ctx, getState());
		enterRule(_localctx, 530, RULE_date_written);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7252);
			match(DATE_WRITTEN);
			setState(7256);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7253);
				separator();
				}
				}
				setState(7258);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7259);
			match(DOT_);
			setState(7263);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (ALLOWING - 384)) | (1L << (OTHERS - 384)) | (1L << (READERS - 384)) | (1L << (WRITERS - 384)) | (1L << (UPDATERS - 384)) | (1L << (UNTIL - 384)) | (1L << (TEST - 384)) | (1L << (PREVIOUS - 384)) | (1L << (PRIOR - 384)) | (1L << (REGARDLESS - 384)) | (1L << (DEPENDENCY - 384)) | (1L << (DICTIONARY - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)))) != 0) || ((((_la - 448)) & ~0x3f) == 0 && ((1L << (_la - 448)) & ((1L << (NUMERIC_LITERAL - 448)) | (1L << (HEX_LITERAL - 448)) | (1L << (USER_DEFINED_WORD - 448)) | (1L << (START_FOUR_SPACES - 448)) | (1L << (WHITESPACE - 448)))) != 0)) {
				{
				{
				setState(7260);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(7265);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7266);
			match(NEWLINE);
			setState(7270);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1221,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7267);
					comment_entry();
					}
					} 
				}
				setState(7272);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1221,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Date_compiledContext extends ParserRuleContext {
		public TerminalNode DATE_COMPILED() { return getToken(cobolParser.DATE_COMPILED, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public Date_compiledContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_date_compiled; }
	}

	public final Date_compiledContext date_compiled() throws RecognitionException {
		Date_compiledContext _localctx = new Date_compiledContext(_ctx, getState());
		enterRule(_localctx, 532, RULE_date_compiled);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7273);
			match(DATE_COMPILED);
			setState(7277);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7274);
				separator();
				}
				}
				setState(7279);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7280);
			match(DOT_);
			setState(7284);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (ALLOWING - 384)) | (1L << (OTHERS - 384)) | (1L << (READERS - 384)) | (1L << (WRITERS - 384)) | (1L << (UPDATERS - 384)) | (1L << (UNTIL - 384)) | (1L << (TEST - 384)) | (1L << (PREVIOUS - 384)) | (1L << (PRIOR - 384)) | (1L << (REGARDLESS - 384)) | (1L << (DEPENDENCY - 384)) | (1L << (DICTIONARY - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)))) != 0) || ((((_la - 448)) & ~0x3f) == 0 && ((1L << (_la - 448)) & ((1L << (NUMERIC_LITERAL - 448)) | (1L << (HEX_LITERAL - 448)) | (1L << (USER_DEFINED_WORD - 448)) | (1L << (START_FOUR_SPACES - 448)) | (1L << (WHITESPACE - 448)))) != 0)) {
				{
				{
				setState(7281);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(7286);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7287);
			match(NEWLINE);
			setState(7291);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1224,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7288);
					comment_entry();
					}
					} 
				}
				setState(7293);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1224,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SecurityContext extends ParserRuleContext {
		public TerminalNode SECURITY() { return getToken(cobolParser.SECURITY, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public SecurityContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_security; }
	}

	public final SecurityContext security() throws RecognitionException {
		SecurityContext _localctx = new SecurityContext(_ctx, getState());
		enterRule(_localctx, 534, RULE_security);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7294);
			match(SECURITY);
			setState(7298);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7295);
				separator();
				}
				}
				setState(7300);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7301);
			match(DOT_);
			setState(7305);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << DECLARATIVES_IN_A_AREA) | (1L << END_IN_A_AREA) | (1L << IDENTIFICATION_IN_A_AREA) | (1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << ADVANCING) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMMA - 64)) | (1L << (COMMON - 64)) | (1L << (COMP - 64)) | (1L << (COMPUTATIONAL - 64)) | (1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTENT - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CORR - 64)) | (1L << (CORRESPONDING - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DESCRIPTOR - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_ACCEPT - 128)) | (1L << (END_ADD - 128)) | (1L << (END_CALL - 128)) | (1L << (END_COMPUTE - 128)) | (1L << (END_DELETE - 128)) | (1L << (END_DISPLAY - 128)) | (1L << (END_DIVIDE - 128)) | (1L << (END_EVALUATE - 128)) | (1L << (END_IF - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FALSE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (HIGH_VALUE - 192)) | (1L << (HIGH_VALUES - 192)) | (1L << (I64 - 192)) | (1L << (ID - 192)) | (1L << (IDENT - 192)) | (1L << (IDENTIFICATION - 192)) | (1L << (IF - 192)) | (1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INTO - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (ON - 256)) | (1L << (OPEN - 256)) | (1L << (OPTIONAL - 256)) | (1L << (OPTIONS - 256)) | (1L << (OR - 256)) | (1L << (ORGANIZATION - 256)) | (1L << (OUTPUT - 256)) | (1L << (OVERFLOW - 256)) | (1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROCEED - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (REMAINDER - 256)) | (1L << (REMOVAL - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWIND - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (ROUNDED - 320)) | (1L << (SAME - 320)) | (1L << (SCREEN - 320)) | (1L << (SD - 320)) | (1L << (SEARCH - 320)) | (1L << (SECTION - 320)) | (1L << (SECURE - 320)) | (1L << (SECURITY - 320)) | (1L << (SEGMENT_LIMIT - 320)) | (1L << (SELECT - 320)) | (1L << (SEPARATE - 320)) | (1L << (SEQUENCE - 320)) | (1L << (SEQUENTIAL - 320)) | (1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (USAGE - 384)) | (1L << (USE - 384)) | (1L << (USING - 384)) | (1L << (VALUE - 384)) | (1L << (VALUES - 384)) | (1L << (VARYING - 384)) | (1L << (VAX - 384)) | (1L << (WHEN - 384)) | (1L << (WINDOW - 384)) | (1L << (WITH - 384)) | (1L << (WORDS - 384)) | (1L << (WORKING_STORAGE - 384)) | (1L << (WRITE - 384)) | (1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (OTHER - 384)) | (1L << (ANY - 384)) | (1L << (THEN - 384)) | (1L << (SENTENCE - 384)) | (1L << (ELSE - 384)) | (1L << (ALPHANUMERIC - 384)) | (1L << (NUMERIC_EDITED - 384)) | (1L << (ALPHANUMERIC_EDITED - 384)) | (1L << (ALLOWING - 384)) | (1L << (OTHERS - 384)) | (1L << (READERS - 384)) | (1L << (WRITERS - 384)) | (1L << (UPDATERS - 384)) | (1L << (UNTIL - 384)) | (1L << (TEST - 384)) | (1L << (PREVIOUS - 384)) | (1L << (PRIOR - 384)) | (1L << (REGARDLESS - 384)) | (1L << (DEPENDENCY - 384)) | (1L << (DICTIONARY - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)))) != 0) || ((((_la - 448)) & ~0x3f) == 0 && ((1L << (_la - 448)) & ((1L << (NUMERIC_LITERAL - 448)) | (1L << (HEX_LITERAL - 448)) | (1L << (USER_DEFINED_WORD - 448)) | (1L << (START_FOUR_SPACES - 448)) | (1L << (WHITESPACE - 448)))) != 0)) {
				{
				{
				setState(7302);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(7307);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7308);
			match(NEWLINE);
			setState(7312);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1227,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7309);
					comment_entry();
					}
					} 
				}
				setState(7314);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1227,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Options_Context extends ParserRuleContext {
		public TerminalNode OPTIONS() { return getToken(cobolParser.OPTIONS, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public ArithmeticContext arithmetic() {
			return getRuleContext(ArithmeticContext.class,0);
		}
		public Options_Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_options_; }
	}

	public final Options_Context options_() throws RecognitionException {
		Options_Context _localctx = new Options_Context(_ctx, getState());
		enterRule(_localctx, 536, RULE_options_);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7315);
			match(OPTIONS);
			setState(7319);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7316);
				separator();
				}
				}
				setState(7321);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7322);
			match(DOT_);
			setState(7326);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1229,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7323);
					separator();
					}
					} 
				}
				setState(7328);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1229,_ctx);
			}
			setState(7330);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ARITHMETIC) {
				{
				setState(7329);
				arithmetic();
				}
			}

			setState(7335);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1231,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7332);
					separator();
					}
					} 
				}
				setState(7337);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1231,_ctx);
			}
			setState(7339);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==DOT_) {
				{
				setState(7338);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArithmeticContext extends ParserRuleContext {
		public TerminalNode ARITHMETIC() { return getToken(cobolParser.ARITHMETIC, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode NATIVE() { return getToken(cobolParser.NATIVE, 0); }
		public TerminalNode STANDARD() { return getToken(cobolParser.STANDARD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public ArithmeticContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arithmetic; }
	}

	public final ArithmeticContext arithmetic() throws RecognitionException {
		ArithmeticContext _localctx = new ArithmeticContext(_ctx, getState());
		enterRule(_localctx, 538, RULE_arithmetic);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7341);
			match(ARITHMETIC);
			setState(7343); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7342);
				separator();
				}
				}
				setState(7345); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7353);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(7347);
				match(IS);
				setState(7349); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7348);
					separator();
					}
					}
					setState(7351); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(7355);
			_la = _input.LA(1);
			if ( !(_la==NATIVE || _la==STANDARD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(7359);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7356);
				separator();
				}
				}
				setState(7361);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7362);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Environment_divisionContext extends ParserRuleContext {
		public TerminalNode ENVIRONMENT() { return getToken(cobolParser.ENVIRONMENT, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Configuration_sectionContext configuration_section() {
			return getRuleContext(Configuration_sectionContext.class,0);
		}
		public Input_output_sectionContext input_output_section() {
			return getRuleContext(Input_output_sectionContext.class,0);
		}
		public Environment_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_environment_division; }
	}

	public final Environment_divisionContext environment_division() throws RecognitionException {
		Environment_divisionContext _localctx = new Environment_divisionContext(_ctx, getState());
		enterRule(_localctx, 540, RULE_environment_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7364);
			match(ENVIRONMENT);
			setState(7366); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7365);
				separator();
				}
				}
				setState(7368); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7370);
			match(DIVISION);
			setState(7374);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7371);
				separator();
				}
				}
				setState(7376);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7377);
			match(DOT_);
			setState(7381);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1239,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7378);
					separator();
					}
					} 
				}
				setState(7383);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1239,_ctx);
			}
			setState(7385);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONFIGURATION) {
				{
				setState(7384);
				configuration_section();
				}
			}

			setState(7388);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==INPUT_OUTPUT) {
				{
				setState(7387);
				input_output_section();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Configuration_sectionContext extends ParserRuleContext {
		public TerminalNode CONFIGURATION() { return getToken(cobolParser.CONFIGURATION, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Source_computerContext source_computer() {
			return getRuleContext(Source_computerContext.class,0);
		}
		public Object_computerContext object_computer() {
			return getRuleContext(Object_computerContext.class,0);
		}
		public Special_namesContext special_names() {
			return getRuleContext(Special_namesContext.class,0);
		}
		public Configuration_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_configuration_section; }
	}

	public final Configuration_sectionContext configuration_section() throws RecognitionException {
		Configuration_sectionContext _localctx = new Configuration_sectionContext(_ctx, getState());
		enterRule(_localctx, 542, RULE_configuration_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7390);
			match(CONFIGURATION);
			setState(7392); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7391);
				separator();
				}
				}
				setState(7394); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7396);
			match(SECTION);
			setState(7400);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7397);
				separator();
				}
				}
				setState(7402);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7403);
			match(DOT_);
			setState(7407);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1244,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7404);
					separator();
					}
					} 
				}
				setState(7409);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1244,_ctx);
			}
			setState(7411);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SOURCE_COMPUTER) {
				{
				setState(7410);
				source_computer();
				}
			}

			setState(7416);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1246,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7413);
					separator();
					}
					} 
				}
				setState(7418);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1246,_ctx);
			}
			setState(7420);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==OBJECT_COMPUTER) {
				{
				setState(7419);
				object_computer();
				}
			}

			setState(7425);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1248,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7422);
					separator();
					}
					} 
				}
				setState(7427);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1248,_ctx);
			}
			setState(7429);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SPECIAL_NAMES) {
				{
				setState(7428);
				special_names();
				}
			}

			setState(7434);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1250,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7431);
					separator();
					}
					} 
				}
				setState(7436);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1250,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Input_output_sectionContext extends ParserRuleContext {
		public TerminalNode INPUT_OUTPUT() { return getToken(cobolParser.INPUT_OUTPUT, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public File_controlContext file_control() {
			return getRuleContext(File_controlContext.class,0);
		}
		public I_o_controlContext i_o_control() {
			return getRuleContext(I_o_controlContext.class,0);
		}
		public Input_output_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_input_output_section; }
	}

	public final Input_output_sectionContext input_output_section() throws RecognitionException {
		Input_output_sectionContext _localctx = new Input_output_sectionContext(_ctx, getState());
		enterRule(_localctx, 544, RULE_input_output_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7437);
			match(INPUT_OUTPUT);
			setState(7439); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7438);
				separator();
				}
				}
				setState(7441); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7443);
			match(SECTION);
			setState(7447);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7444);
				separator();
				}
				}
				setState(7449);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7450);
			match(DOT_);
			setState(7454);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1253,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7451);
					separator();
					}
					} 
				}
				setState(7456);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1253,_ctx);
			}
			setState(7458);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE_CONTROL) {
				{
				setState(7457);
				file_control();
				}
			}

			setState(7461);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==I_O_CONTROL) {
				{
				setState(7460);
				i_o_control();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Source_computerContext extends ParserRuleContext {
		public TerminalNode SOURCE_COMPUTER() { return getToken(cobolParser.SOURCE_COMPUTER, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Computer_typeContext computer_type() {
			return getRuleContext(Computer_typeContext.class,0);
		}
		public With_debuggingContext with_debugging() {
			return getRuleContext(With_debuggingContext.class,0);
		}
		public Source_computerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_source_computer; }
	}

	public final Source_computerContext source_computer() throws RecognitionException {
		Source_computerContext _localctx = new Source_computerContext(_ctx, getState());
		enterRule(_localctx, 546, RULE_source_computer);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7463);
			match(SOURCE_COMPUTER);
			setState(7467);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7464);
				separator();
				}
				}
				setState(7469);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7470);
			match(DOT_);
			setState(7474);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1257,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7471);
					separator();
					}
					} 
				}
				setState(7476);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1257,_ctx);
			}
			setState(7495);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ALPHA || _la==I64 || _la==VAX || _la==USER_DEFINED_WORD) {
				{
				setState(7477);
				computer_type();
				setState(7485);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1259,_ctx) ) {
				case 1:
					{
					setState(7479); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7478);
						separator();
						}
						}
						setState(7481); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(7483);
					with_debugging();
					}
					break;
				}
				setState(7490);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(7487);
					separator();
					}
					}
					setState(7492);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7493);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Computer_typeContext extends ParserRuleContext {
		public TerminalNode ALPHA() { return getToken(cobolParser.ALPHA, 0); }
		public TerminalNode I64() { return getToken(cobolParser.I64, 0); }
		public TerminalNode VAX() { return getToken(cobolParser.VAX, 0); }
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Computer_typeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_computer_type; }
	}

	public final Computer_typeContext computer_type() throws RecognitionException {
		Computer_typeContext _localctx = new Computer_typeContext(_ctx, getState());
		enterRule(_localctx, 548, RULE_computer_type);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7497);
			_la = _input.LA(1);
			if ( !(_la==ALPHA || _la==I64 || _la==VAX || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class With_debuggingContext extends ParserRuleContext {
		public TerminalNode DEBUGGING() { return getToken(cobolParser.DEBUGGING, 0); }
		public TerminalNode MODE() { return getToken(cobolParser.MODE, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public With_debuggingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_with_debugging; }
	}

	public final With_debuggingContext with_debugging() throws RecognitionException {
		With_debuggingContext _localctx = new With_debuggingContext(_ctx, getState());
		enterRule(_localctx, 550, RULE_with_debugging);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7505);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WITH) {
				{
				setState(7499);
				match(WITH);
				setState(7501); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7500);
					separator();
					}
					}
					setState(7503); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(7507);
			match(DEBUGGING);
			setState(7509); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7508);
				separator();
				}
				}
				setState(7511); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7513);
			match(MODE);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Object_computerContext extends ParserRuleContext {
		public TerminalNode OBJECT_COMPUTER() { return getToken(cobolParser.OBJECT_COMPUTER, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Computer_typeContext computer_type() {
			return getRuleContext(Computer_typeContext.class,0);
		}
		public Memory_sizeContext memory_size() {
			return getRuleContext(Memory_sizeContext.class,0);
		}
		public Program_collatingContext program_collating() {
			return getRuleContext(Program_collatingContext.class,0);
		}
		public Segment_limitContext segment_limit() {
			return getRuleContext(Segment_limitContext.class,0);
		}
		public Object_computerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_object_computer; }
	}

	public final Object_computerContext object_computer() throws RecognitionException {
		Object_computerContext _localctx = new Object_computerContext(_ctx, getState());
		enterRule(_localctx, 552, RULE_object_computer);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7515);
			match(OBJECT_COMPUTER);
			setState(7519);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7516);
				separator();
				}
				}
				setState(7521);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7522);
			match(DOT_);
			setState(7526);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1266,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7523);
					separator();
					}
					} 
				}
				setState(7528);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1266,_ctx);
			}
			setState(7565);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ALPHA || _la==I64 || _la==VAX || _la==USER_DEFINED_WORD) {
				{
				setState(7529);
				computer_type();
				setState(7537);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1268,_ctx) ) {
				case 1:
					{
					setState(7531); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7530);
						separator();
						}
						}
						setState(7533); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(7535);
					memory_size();
					}
					break;
				}
				setState(7546);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1270,_ctx) ) {
				case 1:
					{
					setState(7540); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7539);
						separator();
						}
						}
						setState(7542); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(7544);
					program_collating();
					}
					break;
				}
				setState(7555);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1272,_ctx) ) {
				case 1:
					{
					setState(7549); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7548);
						separator();
						}
						}
						setState(7551); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(7553);
					segment_limit();
					}
					break;
				}
				setState(7560);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(7557);
					separator();
					}
					}
					setState(7562);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(7563);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Memory_sizeContext extends ParserRuleContext {
		public TerminalNode MEMORY() { return getToken(cobolParser.MEMORY, 0); }
		public Memory_size_amountContext memory_size_amount() {
			return getRuleContext(Memory_size_amountContext.class,0);
		}
		public Memory_size_unitContext memory_size_unit() {
			return getRuleContext(Memory_size_unitContext.class,0);
		}
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Memory_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_memory_size; }
	}

	public final Memory_sizeContext memory_size() throws RecognitionException {
		Memory_sizeContext _localctx = new Memory_sizeContext(_ctx, getState());
		enterRule(_localctx, 554, RULE_memory_size);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7567);
			match(MEMORY);
			setState(7575);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1276,_ctx) ) {
			case 1:
				{
				setState(7569); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7568);
					separator();
					}
					}
					setState(7571); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7573);
				match(SIZE);
				}
				break;
			}
			setState(7578); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7577);
				separator();
				}
				}
				setState(7580); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7582);
			memory_size_amount();
			setState(7584); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7583);
				separator();
				}
				}
				setState(7586); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7588);
			memory_size_unit();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Memory_size_amountContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Memory_size_amountContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_memory_size_amount; }
	}

	public final Memory_size_amountContext memory_size_amount() throws RecognitionException {
		Memory_size_amountContext _localctx = new Memory_size_amountContext(_ctx, getState());
		enterRule(_localctx, 556, RULE_memory_size_amount);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7590);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Memory_size_unitContext extends ParserRuleContext {
		public TerminalNode WORDS() { return getToken(cobolParser.WORDS, 0); }
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public TerminalNode MODULES() { return getToken(cobolParser.MODULES, 0); }
		public Memory_size_unitContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_memory_size_unit; }
	}

	public final Memory_size_unitContext memory_size_unit() throws RecognitionException {
		Memory_size_unitContext _localctx = new Memory_size_unitContext(_ctx, getState());
		enterRule(_localctx, 558, RULE_memory_size_unit);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7592);
			_la = _input.LA(1);
			if ( !(_la==CHARACTERS || _la==MODULES || _la==WORDS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Program_collatingContext extends ParserRuleContext {
		public TerminalNode SEQUENCE() { return getToken(cobolParser.SEQUENCE, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public TerminalNode COLLATING() { return getToken(cobolParser.COLLATING, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Program_collatingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program_collating; }
	}

	public final Program_collatingContext program_collating() throws RecognitionException {
		Program_collatingContext _localctx = new Program_collatingContext(_ctx, getState());
		enterRule(_localctx, 560, RULE_program_collating);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7600);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==PROGRAM) {
				{
				setState(7594);
				match(PROGRAM);
				setState(7596); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7595);
					separator();
					}
					}
					setState(7598); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(7608);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==COLLATING) {
				{
				setState(7602);
				match(COLLATING);
				setState(7604); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7603);
					separator();
					}
					}
					setState(7606); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(7610);
			match(SEQUENCE);
			setState(7618);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1284,_ctx) ) {
			case 1:
				{
				setState(7612); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7611);
					separator();
					}
					}
					setState(7614); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7616);
				match(IS);
				}
				break;
			}
			setState(7621); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7620);
				separator();
				}
				}
				setState(7623); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7625);
			alpha_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alpha_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Alpha_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alpha_name; }
	}

	public final Alpha_nameContext alpha_name() throws RecognitionException {
		Alpha_nameContext _localctx = new Alpha_nameContext(_ctx, getState());
		enterRule(_localctx, 562, RULE_alpha_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7627);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Segment_limitContext extends ParserRuleContext {
		public TerminalNode SEGMENT_LIMIT() { return getToken(cobolParser.SEGMENT_LIMIT, 0); }
		public Segment_numberContext segment_number() {
			return getRuleContext(Segment_numberContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Segment_limitContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_segment_limit; }
	}

	public final Segment_limitContext segment_limit() throws RecognitionException {
		Segment_limitContext _localctx = new Segment_limitContext(_ctx, getState());
		enterRule(_localctx, 564, RULE_segment_limit);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7629);
			match(SEGMENT_LIMIT);
			setState(7637);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				setState(7631); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7630);
					separator();
					}
					}
					setState(7633); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7635);
				match(IS);
				}
			}

			setState(7639);
			segment_number();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Segment_numberContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Segment_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_segment_number; }
	}

	public final Segment_numberContext segment_number() throws RecognitionException {
		Segment_numberContext _localctx = new Segment_numberContext(_ctx, getState());
		enterRule(_localctx, 566, RULE_segment_number);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7641);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Special_namesContext extends ParserRuleContext {
		public TerminalNode SPECIAL_NAMES() { return getToken(cobolParser.SPECIAL_NAMES, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Special_names_contentContext> special_names_content() {
			return getRuleContexts(Special_names_contentContext.class);
		}
		public Special_names_contentContext special_names_content(int i) {
			return getRuleContext(Special_names_contentContext.class,i);
		}
		public Special_namesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_special_names; }
	}

	public final Special_namesContext special_names() throws RecognitionException {
		Special_namesContext _localctx = new Special_namesContext(_ctx, getState());
		enterRule(_localctx, 568, RULE_special_names);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7643);
			match(SPECIAL_NAMES);
			setState(7647);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(7644);
				separator();
				}
				}
				setState(7649);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(7650);
			match(DOT_);
			setState(7654);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1289,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7651);
					separator();
					}
					} 
				}
				setState(7656);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1289,_ctx);
			}
			setState(7670);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ALPHABET) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << C01) | (1L << CARD_READER) | (1L << CLASS))) != 0) || ((((_la - 82)) & ~0x3f) == 0 && ((1L << (_la - 82)) & ((1L << (CONSOLE - 82)) | (1L << (CRT - 82)) | (1L << (CURRENCY - 82)) | (1L << (CURSOR - 82)) | (1L << (DECIMAL_POINT - 82)))) != 0) || _la==ENVIRONMENT_NAME || _la==ENVIRONMENT_VALUE || ((((_la - 228)) & ~0x3f) == 0 && ((1L << (_la - 228)) & ((1L << (LINE_PRINTER - 228)) | (1L << (PAPER_TAPE_PUNCH - 228)) | (1L << (PAPER_TAPE_READER - 228)))) != 0) || ((((_la - 355)) & ~0x3f) == 0 && ((1L << (_la - 355)) & ((1L << (SWITCH - 355)) | (1L << (SYMBOLIC - 355)) | (1L << (SYSERR - 355)) | (1L << (SYSIN - 355)) | (1L << (SYSOUT - 355)))) != 0)) {
				{
				setState(7664); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7657);
					special_names_content();
					setState(7661);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(7658);
						separator();
						}
						}
						setState(7663);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(7666); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ALPHABET) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << C01) | (1L << CARD_READER) | (1L << CLASS))) != 0) || ((((_la - 82)) & ~0x3f) == 0 && ((1L << (_la - 82)) & ((1L << (CONSOLE - 82)) | (1L << (CRT - 82)) | (1L << (CURRENCY - 82)) | (1L << (CURSOR - 82)) | (1L << (DECIMAL_POINT - 82)))) != 0) || _la==ENVIRONMENT_NAME || _la==ENVIRONMENT_VALUE || ((((_la - 228)) & ~0x3f) == 0 && ((1L << (_la - 228)) & ((1L << (LINE_PRINTER - 228)) | (1L << (PAPER_TAPE_PUNCH - 228)) | (1L << (PAPER_TAPE_READER - 228)))) != 0) || ((((_la - 355)) & ~0x3f) == 0 && ((1L << (_la - 355)) & ((1L << (SWITCH - 355)) | (1L << (SYMBOLIC - 355)) | (1L << (SYSERR - 355)) | (1L << (SYSIN - 355)) | (1L << (SYSOUT - 355)))) != 0) );
				setState(7668);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Special_names_contentContext extends ParserRuleContext {
		public Predefined_deviceContext predefined_device() {
			return getRuleContext(Predefined_deviceContext.class,0);
		}
		public Device_nameContext device_name() {
			return getRuleContext(Device_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Arg_envContext arg_env() {
			return getRuleContext(Arg_envContext.class,0);
		}
		public Arg_env_nameContext arg_env_name() {
			return getRuleContext(Arg_env_nameContext.class,0);
		}
		public TerminalNode C01() { return getToken(cobolParser.C01, 0); }
		public Top_of_page_nameContext top_of_page_name() {
			return getRuleContext(Top_of_page_nameContext.class,0);
		}
		public Switch_Context switch_() {
			return getRuleContext(Switch_Context.class,0);
		}
		public AlphabetContext alphabet() {
			return getRuleContext(AlphabetContext.class,0);
		}
		public Symbolic_charsContext symbolic_chars() {
			return getRuleContext(Symbolic_charsContext.class,0);
		}
		public Class_Context class_() {
			return getRuleContext(Class_Context.class,0);
		}
		public CurrencyContext currency() {
			return getRuleContext(CurrencyContext.class,0);
		}
		public TerminalNode DECIMAL_POINT() { return getToken(cobolParser.DECIMAL_POINT, 0); }
		public TerminalNode COMMA() { return getToken(cobolParser.COMMA, 0); }
		public TerminalNode CURSOR() { return getToken(cobolParser.CURSOR, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode CRT() { return getToken(cobolParser.CRT, 0); }
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public Special_names_contentContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_special_names_content; }
	}

	public final Special_names_contentContext special_names_content() throws RecognitionException {
		Special_names_contentContext _localctx = new Special_names_contentContext(_ctx, getState());
		enterRule(_localctx, 570, RULE_special_names_content);
		int _la;
		try {
			setState(7779);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case CARD_READER:
			case CONSOLE:
			case LINE_PRINTER:
			case PAPER_TAPE_PUNCH:
			case PAPER_TAPE_READER:
			case SYSERR:
			case SYSIN:
			case SYSOUT:
				enterOuterAlt(_localctx, 1);
				{
				setState(7672);
				predefined_device();
				setState(7674); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7673);
					separator();
					}
					}
					setState(7676); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7684);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(7678);
					match(IS);
					setState(7680); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7679);
						separator();
						}
						}
						setState(7682); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(7686);
				device_name();
				}
				break;
			case ARGUMENT_NUMBER:
			case ARGUMENT_VALUE:
			case ENVIRONMENT_NAME:
			case ENVIRONMENT_VALUE:
				enterOuterAlt(_localctx, 2);
				{
				setState(7688);
				arg_env();
				setState(7690); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7689);
					separator();
					}
					}
					setState(7692); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7700);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(7694);
					match(IS);
					setState(7696); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7695);
						separator();
						}
						}
						setState(7698); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(7702);
				arg_env_name();
				}
				break;
			case C01:
				enterOuterAlt(_localctx, 3);
				{
				setState(7704);
				match(C01);
				setState(7706); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7705);
					separator();
					}
					}
					setState(7708); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7716);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(7710);
					match(IS);
					setState(7712); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7711);
						separator();
						}
						}
						setState(7714); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(7718);
				top_of_page_name();
				}
				break;
			case SWITCH:
				enterOuterAlt(_localctx, 4);
				{
				setState(7720);
				switch_();
				}
				break;
			case ALPHABET:
				enterOuterAlt(_localctx, 5);
				{
				setState(7721);
				alphabet();
				}
				break;
			case SYMBOLIC:
				enterOuterAlt(_localctx, 6);
				{
				setState(7722);
				symbolic_chars();
				}
				break;
			case CLASS:
				enterOuterAlt(_localctx, 7);
				{
				setState(7723);
				class_();
				}
				break;
			case CURRENCY:
				enterOuterAlt(_localctx, 8);
				{
				setState(7724);
				currency();
				}
				break;
			case DECIMAL_POINT:
				enterOuterAlt(_localctx, 9);
				{
				setState(7725);
				match(DECIMAL_POINT);
				setState(7727); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7726);
					separator();
					}
					}
					setState(7729); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7737);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(7731);
					match(IS);
					setState(7733); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7732);
						separator();
						}
						}
						setState(7735); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(7739);
				match(COMMA);
				}
				break;
			case CURSOR:
				enterOuterAlt(_localctx, 10);
				{
				setState(7741);
				match(CURSOR);
				setState(7743); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7742);
					separator();
					}
					}
					setState(7745); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7753);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(7747);
					match(IS);
					setState(7749); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7748);
						separator();
						}
						}
						setState(7751); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(7755);
				qualified_data_item();
				}
				break;
			case CRT:
				enterOuterAlt(_localctx, 11);
				{
				setState(7757);
				match(CRT);
				setState(7759); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7758);
					separator();
					}
					}
					setState(7761); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7763);
				match(STATUS);
				setState(7765); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7764);
					separator();
					}
					}
					setState(7767); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7775);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(7769);
					match(IS);
					setState(7771); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7770);
						separator();
						}
						}
						setState(7773); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(7777);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Qualified_data_itemContext extends ParserRuleContext {
		public List<TerminalNode> USER_DEFINED_WORD() { return getTokens(cobolParser.USER_DEFINED_WORD); }
		public TerminalNode USER_DEFINED_WORD(int i) {
			return getToken(cobolParser.USER_DEFINED_WORD, i);
		}
		public List<TerminalNode> IN() { return getTokens(cobolParser.IN); }
		public TerminalNode IN(int i) {
			return getToken(cobolParser.IN, i);
		}
		public List<TerminalNode> OF() { return getTokens(cobolParser.OF); }
		public TerminalNode OF(int i) {
			return getToken(cobolParser.OF, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Qualified_data_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_qualified_data_item; }
	}

	public final Qualified_data_itemContext qualified_data_item() throws RecognitionException {
		Qualified_data_itemContext _localctx = new Qualified_data_itemContext(_ctx, getState());
		enterRule(_localctx, 572, RULE_qualified_data_item);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7781);
			match(USER_DEFINED_WORD);
			setState(7797);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1315,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7783); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7782);
						separator();
						}
						}
						setState(7785); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(7787);
					_la = _input.LA(1);
					if ( !(_la==IN || _la==OF) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(7789); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7788);
						separator();
						}
						}
						setState(7791); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(7793);
					match(USER_DEFINED_WORD);
					}
					} 
				}
				setState(7799);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1315,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class CurrencyContext extends ParserRuleContext {
		public TerminalNode CURRENCY() { return getToken(cobolParser.CURRENCY, 0); }
		public Currency_definitionContext currency_definition() {
			return getRuleContext(Currency_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode SIGN() { return getToken(cobolParser.SIGN, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public CurrencyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_currency; }
	}

	public final CurrencyContext currency() throws RecognitionException {
		CurrencyContext _localctx = new CurrencyContext(_ctx, getState());
		enterRule(_localctx, 574, RULE_currency);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7800);
			match(CURRENCY);
			setState(7802); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7801);
				separator();
				}
				}
				setState(7804); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7812);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SIGN) {
				{
				setState(7806);
				match(SIGN);
				setState(7808); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7807);
					separator();
					}
					}
					setState(7810); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(7820);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(7814);
				match(IS);
				setState(7816); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7815);
					separator();
					}
					}
					setState(7818); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(7822);
			currency_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Currency_definitionContext extends ParserRuleContext {
		public Literal_7Context literal_7() {
			return getRuleContext(Literal_7Context.class,0);
		}
		public TerminalNode PICTURE() { return getToken(cobolParser.PICTURE, 0); }
		public TerminalNode SYMBOL() { return getToken(cobolParser.SYMBOL, 0); }
		public Literal_8Context literal_8() {
			return getRuleContext(Literal_8Context.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Currency_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_currency_definition; }
	}

	public final Currency_definitionContext currency_definition() throws RecognitionException {
		Currency_definitionContext _localctx = new Currency_definitionContext(_ctx, getState());
		enterRule(_localctx, 576, RULE_currency_definition);
		int _la;
		try {
			setState(7848);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1325,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(7824);
				literal_7();
				setState(7831);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(7825);
					match(WITH);
					setState(7827); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(7826);
						separator();
						}
						}
						setState(7829); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(7833);
				match(PICTURE);
				setState(7835); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7834);
					separator();
					}
					}
					setState(7837); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7839);
				match(SYMBOL);
				setState(7841); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7840);
					separator();
					}
					}
					setState(7843); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7845);
				literal_8();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(7847);
				match(STRING_LITERAL);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Literal_7Context extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Literal_7Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_literal_7; }
	}

	public final Literal_7Context literal_7() throws RecognitionException {
		Literal_7Context _localctx = new Literal_7Context(_ctx, getState());
		enterRule(_localctx, 578, RULE_literal_7);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7850);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Literal_8Context extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Literal_8Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_literal_8; }
	}

	public final Literal_8Context literal_8() throws RecognitionException {
		Literal_8Context _localctx = new Literal_8Context(_ctx, getState());
		enterRule(_localctx, 580, RULE_literal_8);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7852);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_Context extends ParserRuleContext {
		public TerminalNode CLASS() { return getToken(cobolParser.CLASS, 0); }
		public Class_nameContext class_name() {
			return getRuleContext(Class_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<User_classContext> user_class() {
			return getRuleContexts(User_classContext.class);
		}
		public User_classContext user_class(int i) {
			return getRuleContext(User_classContext.class,i);
		}
		public Class_Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_; }
	}

	public final Class_Context class_() throws RecognitionException {
		Class_Context _localctx = new Class_Context(_ctx, getState());
		enterRule(_localctx, 582, RULE_class_);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7854);
			match(CLASS);
			setState(7856); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7855);
				separator();
				}
				}
				setState(7858); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7860);
			class_name();
			setState(7862); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7861);
				separator();
				}
				}
				setState(7864); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7872);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(7866);
				match(IS);
				setState(7868); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7867);
					separator();
					}
					}
					setState(7870); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(7881); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7874);
				user_class();
				setState(7878);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1330,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(7875);
						separator();
						}
						} 
					}
					setState(7880);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1330,_ctx);
				}
				}
				}
				setState(7883); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==STRING_LITERAL || _la==NUMERIC_LITERAL );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Class_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_name; }
	}

	public final Class_nameContext class_name() throws RecognitionException {
		Class_nameContext _localctx = new Class_nameContext(_ctx, getState());
		enterRule(_localctx, 584, RULE_class_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7885);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class User_classContext extends ParserRuleContext {
		public First_literalContext first_literal() {
			return getRuleContext(First_literalContext.class,0);
		}
		public Last_literalContext last_literal() {
			return getRuleContext(Last_literalContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public User_classContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_user_class; }
	}

	public final User_classContext user_class() throws RecognitionException {
		User_classContext _localctx = new User_classContext(_ctx, getState());
		enterRule(_localctx, 586, RULE_user_class);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7887);
			first_literal();
			setState(7901);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1334,_ctx) ) {
			case 1:
				{
				setState(7889); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7888);
					separator();
					}
					}
					setState(7891); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7893);
				_la = _input.LA(1);
				if ( !(_la==THROUGH || _la==THRU) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(7895); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7894);
					separator();
					}
					}
					setState(7897); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(7899);
				last_literal();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symbolic_charsContext extends ParserRuleContext {
		public TerminalNode SYMBOLIC() { return getToken(cobolParser.SYMBOLIC, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public List<Symb_ch_definitionContext> symb_ch_definition() {
			return getRuleContexts(Symb_ch_definitionContext.class);
		}
		public Symb_ch_definitionContext symb_ch_definition(int i) {
			return getRuleContext(Symb_ch_definitionContext.class,i);
		}
		public Symbolic_charsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symbolic_chars; }
	}

	public final Symbolic_charsContext symbolic_chars() throws RecognitionException {
		Symbolic_charsContext _localctx = new Symbolic_charsContext(_ctx, getState());
		enterRule(_localctx, 588, RULE_symbolic_chars);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7903);
			match(SYMBOLIC);
			setState(7905); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7904);
				separator();
				}
				}
				setState(7907); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7915);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CHARACTERS) {
				{
				setState(7909);
				match(CHARACTERS);
				setState(7911); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7910);
					separator();
					}
					}
					setState(7913); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(7918); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7917);
				symb_ch_definition();
				}
				}
				setState(7920); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symb_ch_definitionContext extends ParserRuleContext {
		public List<Symb_ch_def_clauseContext> symb_ch_def_clause() {
			return getRuleContexts(Symb_ch_def_clauseContext.class);
		}
		public Symb_ch_def_clauseContext symb_ch_def_clause(int i) {
			return getRuleContext(Symb_ch_def_clauseContext.class,i);
		}
		public Symb_ch_def_in_alphabetContext symb_ch_def_in_alphabet() {
			return getRuleContext(Symb_ch_def_in_alphabetContext.class,0);
		}
		public Symb_ch_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symb_ch_definition; }
	}

	public final Symb_ch_definitionContext symb_ch_definition() throws RecognitionException {
		Symb_ch_definitionContext _localctx = new Symb_ch_definitionContext(_ctx, getState());
		enterRule(_localctx, 590, RULE_symb_ch_definition);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7923); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(7922);
					symb_ch_def_clause();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(7925); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1339,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(7928);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IN) {
				{
				setState(7927);
				symb_ch_def_in_alphabet();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symb_ch_def_clauseContext extends ParserRuleContext {
		public List<Symbol_charContext> symbol_char() {
			return getRuleContexts(Symbol_charContext.class);
		}
		public Symbol_charContext symbol_char(int i) {
			return getRuleContext(Symbol_charContext.class,i);
		}
		public List<Char_valContext> char_val() {
			return getRuleContexts(Char_valContext.class);
		}
		public Char_valContext char_val(int i) {
			return getRuleContext(Char_valContext.class,i);
		}
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Symb_ch_def_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symb_ch_def_clause; }
	}

	public final Symb_ch_def_clauseContext symb_ch_def_clause() throws RecognitionException {
		Symb_ch_def_clauseContext _localctx = new Symb_ch_def_clauseContext(_ctx, getState());
		enterRule(_localctx, 592, RULE_symb_ch_def_clause);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7936); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7930);
				symbol_char();
				setState(7932); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7931);
					separator();
					}
					}
					setState(7934); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
				}
				setState(7938); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			setState(7946);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ARE || _la==IS) {
				{
				setState(7940);
				_la = _input.LA(1);
				if ( !(_la==ARE || _la==IS) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(7942); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7941);
					separator();
					}
					}
					setState(7944); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(7954); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7948);
				char_val();
				setState(7950); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(7949);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(7952); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1345,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				}
				setState(7956); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==NUMERIC_LITERAL );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symb_ch_def_in_alphabetContext extends ParserRuleContext {
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Symb_ch_def_in_alphabetContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symb_ch_def_in_alphabet; }
	}

	public final Symb_ch_def_in_alphabetContext symb_ch_def_in_alphabet() throws RecognitionException {
		Symb_ch_def_in_alphabetContext _localctx = new Symb_ch_def_in_alphabetContext(_ctx, getState());
		enterRule(_localctx, 594, RULE_symb_ch_def_in_alphabet);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(7958);
			match(IN);
			setState(7960); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7959);
				separator();
				}
				}
				setState(7962); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7964);
			alpha_name();
			setState(7968);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1348,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(7965);
					separator();
					}
					} 
				}
				setState(7970);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1348,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symbol_charContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Symbol_charContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symbol_char; }
	}

	public final Symbol_charContext symbol_char() throws RecognitionException {
		Symbol_charContext _localctx = new Symbol_charContext(_ctx, getState());
		enterRule(_localctx, 596, RULE_symbol_char);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7971);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Char_valContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Char_valContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_char_val; }
	}

	public final Char_valContext char_val() throws RecognitionException {
		Char_valContext _localctx = new Char_valContext(_ctx, getState());
		enterRule(_localctx, 598, RULE_char_val);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7973);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class AlphabetContext extends ParserRuleContext {
		public TerminalNode ALPHABET() { return getToken(cobolParser.ALPHABET, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public Alpha_valueContext alpha_value() {
			return getRuleContext(Alpha_valueContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public AlphabetContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alphabet; }
	}

	public final AlphabetContext alphabet() throws RecognitionException {
		AlphabetContext _localctx = new AlphabetContext(_ctx, getState());
		enterRule(_localctx, 600, RULE_alphabet);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(7975);
			match(ALPHABET);
			setState(7977); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7976);
				separator();
				}
				}
				setState(7979); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7981);
			alpha_name();
			setState(7983); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(7982);
				separator();
				}
				}
				setState(7985); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(7993);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(7987);
				match(IS);
				setState(7989); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(7988);
					separator();
					}
					}
					setState(7991); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(7995);
			alpha_value();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alpha_valueContext extends ParserRuleContext {
		public TerminalNode ASCII() { return getToken(cobolParser.ASCII, 0); }
		public TerminalNode STANDARD_1() { return getToken(cobolParser.STANDARD_1, 0); }
		public TerminalNode STANDARD_2() { return getToken(cobolParser.STANDARD_2, 0); }
		public TerminalNode NATIVE() { return getToken(cobolParser.NATIVE, 0); }
		public TerminalNode EBCDIC() { return getToken(cobolParser.EBCDIC, 0); }
		public List<User_alphaContext> user_alpha() {
			return getRuleContexts(User_alphaContext.class);
		}
		public User_alphaContext user_alpha(int i) {
			return getRuleContext(User_alphaContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Alpha_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alpha_value; }
	}

	public final Alpha_valueContext alpha_value() throws RecognitionException {
		Alpha_valueContext _localctx = new Alpha_valueContext(_ctx, getState());
		enterRule(_localctx, 602, RULE_alpha_value);
		int _la;
		try {
			int _alt;
			setState(8013);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ASCII:
				enterOuterAlt(_localctx, 1);
				{
				setState(7997);
				match(ASCII);
				}
				break;
			case STANDARD_1:
				enterOuterAlt(_localctx, 2);
				{
				setState(7998);
				match(STANDARD_1);
				}
				break;
			case STANDARD_2:
				enterOuterAlt(_localctx, 3);
				{
				setState(7999);
				match(STANDARD_2);
				}
				break;
			case NATIVE:
				enterOuterAlt(_localctx, 4);
				{
				setState(8000);
				match(NATIVE);
				}
				break;
			case EBCDIC:
				enterOuterAlt(_localctx, 5);
				{
				setState(8001);
				match(EBCDIC);
				}
				break;
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 6);
				{
				setState(8009); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8002);
					user_alpha();
					setState(8006);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1353,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(8003);
							separator();
							}
							} 
						}
						setState(8008);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,1353,_ctx);
					}
					}
					}
					setState(8011); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( _la==STRING_LITERAL || _la==NUMERIC_LITERAL );
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class User_alphaContext extends ParserRuleContext {
		public First_literalContext first_literal() {
			return getRuleContext(First_literalContext.class,0);
		}
		public Last_literalContext last_literal() {
			return getRuleContext(Last_literalContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> ALSO() { return getTokens(cobolParser.ALSO); }
		public TerminalNode ALSO(int i) {
			return getToken(cobolParser.ALSO, i);
		}
		public List<Same_literalContext> same_literal() {
			return getRuleContexts(Same_literalContext.class);
		}
		public Same_literalContext same_literal(int i) {
			return getRuleContext(Same_literalContext.class,i);
		}
		public User_alphaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_user_alpha; }
	}

	public final User_alphaContext user_alpha() throws RecognitionException {
		User_alphaContext _localctx = new User_alphaContext(_ctx, getState());
		enterRule(_localctx, 604, RULE_user_alpha);
		int _la;
		try {
			int _alt;
			setState(8049);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1362,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(8015);
				first_literal();
				setState(8029);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1358,_ctx) ) {
				case 1:
					{
					setState(8017); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8016);
						separator();
						}
						}
						setState(8019); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(8021);
					_la = _input.LA(1);
					if ( !(_la==THROUGH || _la==THRU) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(8023); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8022);
						separator();
						}
						}
						setState(8025); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(8027);
					last_literal();
					}
					break;
				}
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(8031);
				first_literal();
				setState(8045); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(8033); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(8032);
							separator();
							}
							}
							setState(8035); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(8037);
						match(ALSO);
						setState(8039); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(8038);
							separator();
							}
							}
							setState(8041); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(8043);
						same_literal();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(8047); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1361,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class First_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public First_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_first_literal; }
	}

	public final First_literalContext first_literal() throws RecognitionException {
		First_literalContext _localctx = new First_literalContext(_ctx, getState());
		enterRule(_localctx, 606, RULE_first_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8051);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Last_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Last_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_last_literal; }
	}

	public final Last_literalContext last_literal() throws RecognitionException {
		Last_literalContext _localctx = new Last_literalContext(_ctx, getState());
		enterRule(_localctx, 608, RULE_last_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8053);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Same_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Same_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_same_literal; }
	}

	public final Same_literalContext same_literal() throws RecognitionException {
		Same_literalContext _localctx = new Same_literalContext(_ctx, getState());
		enterRule(_localctx, 610, RULE_same_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8055);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_Context extends ParserRuleContext {
		public TerminalNode SWITCH() { return getToken(cobolParser.SWITCH, 0); }
		public Switch_numContext switch_num() {
			return getRuleContext(Switch_numContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Switch_nameContext switch_name() {
			return getRuleContext(Switch_nameContext.class,0);
		}
		public Switch_clause_onContext switch_clause_on() {
			return getRuleContext(Switch_clause_onContext.class,0);
		}
		public Switch_clause_offContext switch_clause_off() {
			return getRuleContext(Switch_clause_offContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Switch_Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_; }
	}

	public final Switch_Context switch_() throws RecognitionException {
		Switch_Context _localctx = new Switch_Context(_ctx, getState());
		enterRule(_localctx, 612, RULE_switch_);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(8057);
			match(SWITCH);
			setState(8059); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8058);
				separator();
				}
				}
				setState(8061); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8063);
			switch_num();
			setState(8067);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1364,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(8064);
					separator();
					}
					} 
				}
				setState(8069);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1364,_ctx);
			}
			setState(8084);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS || _la==USER_DEFINED_WORD) {
				{
				setState(8076);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(8070);
					match(IS);
					setState(8072); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8071);
						separator();
						}
						}
						setState(8074); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(8078);
				switch_name();
				setState(8080); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(8079);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(8082); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1367,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
			}

			setState(8106);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ON:
				{
				setState(8086);
				switch_clause_on();
				setState(8094);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1370,_ctx) ) {
				case 1:
					{
					setState(8088); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8087);
						separator();
						}
						}
						setState(8090); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(8092);
					switch_clause_off();
					}
					break;
				}
				}
				break;
			case OFF:
				{
				setState(8096);
				switch_clause_off();
				setState(8104);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1372,_ctx) ) {
				case 1:
					{
					setState(8098); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8097);
						separator();
						}
						}
						setState(8100); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(8102);
					switch_clause_on();
					}
					break;
				}
				}
				break;
			case ALPHABET:
			case ARGUMENT_NUMBER:
			case ARGUMENT_VALUE:
			case C01:
			case CARD_READER:
			case CLASS:
			case CONSOLE:
			case CRT:
			case CURRENCY:
			case CURSOR:
			case DECIMAL_POINT:
			case ENVIRONMENT_NAME:
			case ENVIRONMENT_VALUE:
			case LINE_PRINTER:
			case PAPER_TAPE_PUNCH:
			case PAPER_TAPE_READER:
			case SWITCH:
			case SYMBOLIC:
			case SYSERR:
			case SYSIN:
			case SYSOUT:
			case START_SLASH_:
			case START_STAR_:
			case COMMA_:
			case SEMI_:
			case DOT_:
			case START_FOUR_SPACES:
			case WHITESPACE:
			case NEWLINE:
				break;
			default:
				break;
			}
			setState(8111);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1374,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(8108);
					separator();
					}
					} 
				}
				setState(8113);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1374,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_clause_onContext extends ParserRuleContext {
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Cond_nameContext cond_name() {
			return getRuleContext(Cond_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Switch_clause_onContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_clause_on; }
	}

	public final Switch_clause_onContext switch_clause_on() throws RecognitionException {
		Switch_clause_onContext _localctx = new Switch_clause_onContext(_ctx, getState());
		enterRule(_localctx, 614, RULE_switch_clause_on);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8114);
			match(ON);
			setState(8116); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8115);
				separator();
				}
				}
				setState(8118); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8126);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==STATUS) {
				{
				setState(8120);
				match(STATUS);
				setState(8122); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8121);
					separator();
					}
					}
					setState(8124); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8134);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(8128);
				match(IS);
				setState(8130); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8129);
					separator();
					}
					}
					setState(8132); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8136);
			cond_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_clause_offContext extends ParserRuleContext {
		public TerminalNode OFF() { return getToken(cobolParser.OFF, 0); }
		public Cond_nameContext cond_name() {
			return getRuleContext(Cond_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Switch_clause_offContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_clause_off; }
	}

	public final Switch_clause_offContext switch_clause_off() throws RecognitionException {
		Switch_clause_offContext _localctx = new Switch_clause_offContext(_ctx, getState());
		enterRule(_localctx, 616, RULE_switch_clause_off);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8138);
			match(OFF);
			setState(8140); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8139);
				separator();
				}
				}
				setState(8142); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8150);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==STATUS) {
				{
				setState(8144);
				match(STATUS);
				setState(8146); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8145);
					separator();
					}
					}
					setState(8148); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8158);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(8152);
				match(IS);
				setState(8154); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8153);
					separator();
					}
					}
					setState(8156); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8160);
			cond_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Cond_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Cond_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_cond_name; }
	}

	public final Cond_nameContext cond_name() throws RecognitionException {
		Cond_nameContext _localctx = new Cond_nameContext(_ctx, getState());
		enterRule(_localctx, 618, RULE_cond_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8162);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Switch_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_name; }
	}

	public final Switch_nameContext switch_name() throws RecognitionException {
		Switch_nameContext _localctx = new Switch_nameContext(_ctx, getState());
		enterRule(_localctx, 620, RULE_switch_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8164);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Switch_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_num; }
	}

	public final Switch_numContext switch_num() throws RecognitionException {
		Switch_numContext _localctx = new Switch_numContext(_ctx, getState());
		enterRule(_localctx, 622, RULE_switch_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8166);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Top_of_page_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Top_of_page_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_top_of_page_name; }
	}

	public final Top_of_page_nameContext top_of_page_name() throws RecognitionException {
		Top_of_page_nameContext _localctx = new Top_of_page_nameContext(_ctx, getState());
		enterRule(_localctx, 624, RULE_top_of_page_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8168);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Predefined_deviceContext extends ParserRuleContext {
		public TerminalNode CARD_READER() { return getToken(cobolParser.CARD_READER, 0); }
		public TerminalNode PAPER_TAPE_READER() { return getToken(cobolParser.PAPER_TAPE_READER, 0); }
		public TerminalNode CONSOLE() { return getToken(cobolParser.CONSOLE, 0); }
		public TerminalNode LINE_PRINTER() { return getToken(cobolParser.LINE_PRINTER, 0); }
		public TerminalNode PAPER_TAPE_PUNCH() { return getToken(cobolParser.PAPER_TAPE_PUNCH, 0); }
		public TerminalNode SYSIN() { return getToken(cobolParser.SYSIN, 0); }
		public TerminalNode SYSOUT() { return getToken(cobolParser.SYSOUT, 0); }
		public TerminalNode SYSERR() { return getToken(cobolParser.SYSERR, 0); }
		public Predefined_deviceContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_predefined_device; }
	}

	public final Predefined_deviceContext predefined_device() throws RecognitionException {
		Predefined_deviceContext _localctx = new Predefined_deviceContext(_ctx, getState());
		enterRule(_localctx, 626, RULE_predefined_device);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8170);
			_la = _input.LA(1);
			if ( !(_la==CARD_READER || _la==CONSOLE || ((((_la - 228)) & ~0x3f) == 0 && ((1L << (_la - 228)) & ((1L << (LINE_PRINTER - 228)) | (1L << (PAPER_TAPE_PUNCH - 228)) | (1L << (PAPER_TAPE_READER - 228)))) != 0) || ((((_la - 360)) & ~0x3f) == 0 && ((1L << (_la - 360)) & ((1L << (SYSERR - 360)) | (1L << (SYSIN - 360)) | (1L << (SYSOUT - 360)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Device_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Device_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_device_name; }
	}

	public final Device_nameContext device_name() throws RecognitionException {
		Device_nameContext _localctx = new Device_nameContext(_ctx, getState());
		enterRule(_localctx, 628, RULE_device_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8172);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arg_envContext extends ParserRuleContext {
		public TerminalNode ARGUMENT_NUMBER() { return getToken(cobolParser.ARGUMENT_NUMBER, 0); }
		public TerminalNode ARGUMENT_VALUE() { return getToken(cobolParser.ARGUMENT_VALUE, 0); }
		public TerminalNode ENVIRONMENT_NAME() { return getToken(cobolParser.ENVIRONMENT_NAME, 0); }
		public TerminalNode ENVIRONMENT_VALUE() { return getToken(cobolParser.ENVIRONMENT_VALUE, 0); }
		public Arg_envContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arg_env; }
	}

	public final Arg_envContext arg_env() throws RecognitionException {
		Arg_envContext _localctx = new Arg_envContext(_ctx, getState());
		enterRule(_localctx, 630, RULE_arg_env);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8174);
			_la = _input.LA(1);
			if ( !(_la==ARGUMENT_NUMBER || _la==ARGUMENT_VALUE || _la==ENVIRONMENT_NAME || _la==ENVIRONMENT_VALUE) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arg_env_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Arg_env_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arg_env_name; }
	}

	public final Arg_env_nameContext arg_env_name() throws RecognitionException {
		Arg_env_nameContext _localctx = new Arg_env_nameContext(_ctx, getState());
		enterRule(_localctx, 632, RULE_arg_env_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8176);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_controlContext extends ParserRuleContext {
		public TerminalNode FILE_CONTROL() { return getToken(cobolParser.FILE_CONTROL, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<SelectContext> select() {
			return getRuleContexts(SelectContext.class);
		}
		public SelectContext select(int i) {
			return getRuleContext(SelectContext.class,i);
		}
		public File_controlContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_control; }
	}

	public final File_controlContext file_control() throws RecognitionException {
		File_controlContext _localctx = new File_controlContext(_ctx, getState());
		enterRule(_localctx, 634, RULE_file_control);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(8178);
			match(FILE_CONTROL);
			setState(8182);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(8179);
				separator();
				}
				}
				setState(8184);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(8185);
			match(DOT_);
			setState(8189);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1386,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(8186);
					separator();
					}
					} 
				}
				setState(8191);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1386,_ctx);
			}
			setState(8201);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==SELECT) {
				{
				{
				setState(8192);
				select();
				setState(8196);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1387,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(8193);
						separator();
						}
						} 
					}
					setState(8198);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1387,_ctx);
				}
				}
				}
				setState(8203);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SelectContext extends ParserRuleContext {
		public TerminalNode SELECT() { return getToken(cobolParser.SELECT, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public Assign_toContext assign_to() {
			return getRuleContext(Assign_toContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode OPTIONAL() { return getToken(cobolParser.OPTIONAL, 0); }
		public ReserveContext reserve() {
			return getRuleContext(ReserveContext.class,0);
		}
		public OrganizationContext organization() {
			return getRuleContext(OrganizationContext.class,0);
		}
		public Block_containsContext block_contains() {
			return getRuleContext(Block_containsContext.class,0);
		}
		public Code_setContext code_set() {
			return getRuleContext(Code_setContext.class,0);
		}
		public PaddingContext padding() {
			return getRuleContext(PaddingContext.class,0);
		}
		public Record_delimiterContext record_delimiter() {
			return getRuleContext(Record_delimiterContext.class,0);
		}
		public Access_modeContext access_mode() {
			return getRuleContext(Access_modeContext.class,0);
		}
		public List<Record_keyContext> record_key() {
			return getRuleContexts(Record_keyContext.class);
		}
		public Record_keyContext record_key(int i) {
			return getRuleContext(Record_keyContext.class,i);
		}
		public Lock_modeContext lock_mode() {
			return getRuleContext(Lock_modeContext.class,0);
		}
		public File_statusContext file_status() {
			return getRuleContext(File_statusContext.class,0);
		}
		public SelectContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_select; }
	}

	public final SelectContext select() throws RecognitionException {
		SelectContext _localctx = new SelectContext(_ctx, getState());
		enterRule(_localctx, 636, RULE_select);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8204);
			match(SELECT);
			setState(8206); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8205);
				separator();
				}
				}
				setState(8208); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8216);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==OPTIONAL) {
				{
				setState(8210);
				match(OPTIONAL);
				setState(8212); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8211);
					separator();
					}
					}
					setState(8214); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8218);
			file_name();
			setState(8222);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(8219);
				separator();
				}
				}
				setState(8224);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(8225);
			assign_to();
			setState(8229);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(8226);
				separator();
				}
				}
				setState(8231);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(8239);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==RESERVE) {
				{
				setState(8232);
				reserve();
				setState(8236);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(8233);
					separator();
					}
					}
					setState(8238);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(8248);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1397,_ctx) ) {
			case 1:
				{
				setState(8241);
				organization();
				setState(8245);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(8242);
					separator();
					}
					}
					setState(8247);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				break;
			}
			setState(8257);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==BLOCK) {
				{
				setState(8250);
				block_contains();
				setState(8254);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(8251);
					separator();
					}
					}
					setState(8256);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(8266);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CODE_SET) {
				{
				setState(8259);
				code_set();
				setState(8263);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(8260);
					separator();
					}
					}
					setState(8265);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(8275);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==PADDING) {
				{
				setState(8268);
				padding();
				setState(8272);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(8269);
					separator();
					}
					}
					setState(8274);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(8284);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1405,_ctx) ) {
			case 1:
				{
				setState(8277);
				record_delimiter();
				setState(8281);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(8278);
					separator();
					}
					}
					setState(8283);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				break;
			}
			setState(8293);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ACCESS || _la==DYNAMIC || _la==RANDOM || _la==SEQUENTIAL) {
				{
				setState(8286);
				access_mode();
				setState(8290);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(8287);
					separator();
					}
					}
					setState(8292);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(8304);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==ALTERNATE || _la==RECORD) {
				{
				{
				setState(8295);
				record_key();
				setState(8299);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(8296);
					separator();
					}
					}
					setState(8301);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(8306);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(8314);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==LOCK) {
				{
				setState(8307);
				lock_mode();
				setState(8311);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(8308);
					separator();
					}
					}
					setState(8313);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(8323);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE || _la==STATUS) {
				{
				setState(8316);
				file_status();
				setState(8320);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(8317);
					separator();
					}
					}
					setState(8322);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(8325);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_statusContext extends ParserRuleContext {
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public File_statContext file_stat() {
			return getRuleContext(File_statContext.class,0);
		}
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public File_statusContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_status; }
	}

	public final File_statusContext file_status() throws RecognitionException {
		File_statusContext _localctx = new File_statusContext(_ctx, getState());
		enterRule(_localctx, 638, RULE_file_status);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8333);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE) {
				{
				setState(8327);
				match(FILE);
				setState(8329); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8328);
					separator();
					}
					}
					setState(8331); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8335);
			match(STATUS);
			setState(8337); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8336);
				separator();
				}
				}
				setState(8339); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8347);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(8341);
				match(IS);
				setState(8343); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8342);
					separator();
					}
					}
					setState(8345); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8349);
			file_stat();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_statContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public File_statContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_stat; }
	}

	public final File_statContext file_stat() throws RecognitionException {
		File_statContext _localctx = new File_statContext(_ctx, getState());
		enterRule(_localctx, 640, RULE_file_stat);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8351);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_keyContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public Record_key_definitionContext record_key_definition() {
			return getRuleContext(Record_key_definitionContext.class,0);
		}
		public TerminalNode ALTERNATE() { return getToken(cobolParser.ALTERNATE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode DUPLICATES() { return getToken(cobolParser.DUPLICATES, 0); }
		public TerminalNode ASCENDING() { return getToken(cobolParser.ASCENDING, 0); }
		public TerminalNode DESCENDING() { return getToken(cobolParser.DESCENDING, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public Record_keyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_key; }
	}

	public final Record_keyContext record_key() throws RecognitionException {
		Record_keyContext _localctx = new Record_keyContext(_ctx, getState());
		enterRule(_localctx, 642, RULE_record_key);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8359);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ALTERNATE) {
				{
				setState(8353);
				match(ALTERNATE);
				setState(8355); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8354);
					separator();
					}
					}
					setState(8357); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8361);
			match(RECORD);
			setState(8363); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8362);
				separator();
				}
				}
				setState(8365); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8373);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==KEY) {
				{
				setState(8367);
				match(KEY);
				setState(8369); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8368);
					separator();
					}
					}
					setState(8371); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8381);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(8375);
				match(IS);
				setState(8377); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8376);
					separator();
					}
					}
					setState(8379); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8383);
			record_key_definition();
			setState(8399);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1429,_ctx) ) {
			case 1:
				{
				setState(8385); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8384);
					separator();
					}
					}
					setState(8387); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8395);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(8389);
					match(WITH);
					setState(8391); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8390);
						separator();
						}
						}
						setState(8393); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(8397);
				match(DUPLICATES);
				}
				break;
			}
			setState(8408);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1431,_ctx) ) {
			case 1:
				{
				setState(8402); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8401);
					separator();
					}
					}
					setState(8404); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8406);
				_la = _input.LA(1);
				if ( !(_la==ASCENDING || _la==DESCENDING) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_key_definitionContext extends ParserRuleContext {
		public List<Qualified_data_itemContext> qualified_data_item() {
			return getRuleContexts(Qualified_data_itemContext.class);
		}
		public Qualified_data_itemContext qualified_data_item(int i) {
			return getRuleContext(Qualified_data_itemContext.class,i);
		}
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode EQUAL_() { return getToken(cobolParser.EQUAL_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Record_key_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_key_definition; }
	}

	public final Record_key_definitionContext record_key_definition() throws RecognitionException {
		Record_key_definitionContext _localctx = new Record_key_definitionContext(_ctx, getState());
		enterRule(_localctx, 644, RULE_record_key_definition);
		int _la;
		try {
			int _alt;
			setState(8438);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1436,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(8410);
				qualified_data_item();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(8411);
				match(USER_DEFINED_WORD);
				setState(8415);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(8412);
					separator();
					}
					}
					setState(8417);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(8418);
				match(EQUAL_);
				setState(8422);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(8419);
					separator();
					}
					}
					setState(8424);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(8425);
				qualified_data_item();
				setState(8435);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1435,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(8429);
						_errHandler.sync(this);
						_la = _input.LA(1);
						while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
							{
							{
							setState(8426);
							separator();
							}
							}
							setState(8431);
							_errHandler.sync(this);
							_la = _input.LA(1);
						}
						setState(8432);
						qualified_data_item();
						}
						} 
					}
					setState(8437);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1435,_ctx);
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Access_modeContext extends ParserRuleContext {
		public TerminalNode SEQUENTIAL() { return getToken(cobolParser.SEQUENTIAL, 0); }
		public TerminalNode RANDOM() { return getToken(cobolParser.RANDOM, 0); }
		public TerminalNode DYNAMIC() { return getToken(cobolParser.DYNAMIC, 0); }
		public TerminalNode ACCESS() { return getToken(cobolParser.ACCESS, 0); }
		public TerminalNode RELATIVE() { return getToken(cobolParser.RELATIVE, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode MODE() { return getToken(cobolParser.MODE, 0); }
		public List<TerminalNode> IS() { return getTokens(cobolParser.IS); }
		public TerminalNode IS(int i) {
			return getToken(cobolParser.IS, i);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Access_modeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_access_mode; }
	}

	public final Access_modeContext access_mode() throws RecognitionException {
		Access_modeContext _localctx = new Access_modeContext(_ctx, getState());
		enterRule(_localctx, 646, RULE_access_mode);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8462);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ACCESS) {
				{
				setState(8440);
				match(ACCESS);
				setState(8442); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8441);
					separator();
					}
					}
					setState(8444); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8452);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==MODE) {
					{
					setState(8446);
					match(MODE);
					setState(8448); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8447);
						separator();
						}
						}
						setState(8450); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(8460);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(8454);
					match(IS);
					setState(8456); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8455);
						separator();
						}
						}
						setState(8458); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				}
			}

			setState(8464);
			_la = _input.LA(1);
			if ( !(_la==DYNAMIC || _la==RANDOM || _la==SEQUENTIAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(8494);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1449,_ctx) ) {
			case 1:
				{
				setState(8466); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8465);
					separator();
					}
					}
					setState(8468); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8470);
				match(RELATIVE);
				setState(8472); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8471);
					separator();
					}
					}
					setState(8474); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8482);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==KEY) {
					{
					setState(8476);
					match(KEY);
					setState(8478); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8477);
						separator();
						}
						}
						setState(8480); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(8490);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(8484);
					match(IS);
					setState(8486); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8485);
						separator();
						}
						}
						setState(8488); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(8492);
				qualified_data_item();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ReserveContext extends ParserRuleContext {
		public TerminalNode RESERVE() { return getToken(cobolParser.RESERVE, 0); }
		public Reserve_numContext reserve_num() {
			return getRuleContext(Reserve_numContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode AREA() { return getToken(cobolParser.AREA, 0); }
		public TerminalNode AREAS() { return getToken(cobolParser.AREAS, 0); }
		public ReserveContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_reserve; }
	}

	public final ReserveContext reserve() throws RecognitionException {
		ReserveContext _localctx = new ReserveContext(_ctx, getState());
		enterRule(_localctx, 648, RULE_reserve);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8496);
			match(RESERVE);
			setState(8498); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8497);
				separator();
				}
				}
				setState(8500); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8502);
			reserve_num();
			setState(8510);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1452,_ctx) ) {
			case 1:
				{
				setState(8504); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8503);
					separator();
					}
					}
					setState(8506); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8508);
				_la = _input.LA(1);
				if ( !(_la==AREA || _la==AREAS) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Reserve_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Reserve_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_reserve_num; }
	}

	public final Reserve_numContext reserve_num() throws RecognitionException {
		Reserve_numContext _localctx = new Reserve_numContext(_ctx, getState());
		enterRule(_localctx, 650, RULE_reserve_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8512);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_delimiterContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode DELIMITER() { return getToken(cobolParser.DELIMITER, 0); }
		public TerminalNode STANDARD_1() { return getToken(cobolParser.STANDARD_1, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Record_delimiterContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_delimiter; }
	}

	public final Record_delimiterContext record_delimiter() throws RecognitionException {
		Record_delimiterContext _localctx = new Record_delimiterContext(_ctx, getState());
		enterRule(_localctx, 652, RULE_record_delimiter);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8514);
			match(RECORD);
			setState(8516); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8515);
				separator();
				}
				}
				setState(8518); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8520);
			match(DELIMITER);
			setState(8522); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8521);
				separator();
				}
				}
				setState(8524); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8532);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(8526);
				match(IS);
				setState(8528); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8527);
					separator();
					}
					}
					setState(8530); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8534);
			match(STANDARD_1);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class PaddingContext extends ParserRuleContext {
		public TerminalNode PADDING() { return getToken(cobolParser.PADDING, 0); }
		public Pad_charContext pad_char() {
			return getRuleContext(Pad_charContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTER() { return getToken(cobolParser.CHARACTER, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public PaddingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_padding; }
	}

	public final PaddingContext padding() throws RecognitionException {
		PaddingContext _localctx = new PaddingContext(_ctx, getState());
		enterRule(_localctx, 654, RULE_padding);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8536);
			match(PADDING);
			setState(8538); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8537);
				separator();
				}
				}
				setState(8540); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8548);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CHARACTER) {
				{
				setState(8542);
				match(CHARACTER);
				setState(8544); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8543);
					separator();
					}
					}
					setState(8546); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8556);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(8550);
				match(IS);
				setState(8552); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8551);
					separator();
					}
					}
					setState(8554); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8558);
			pad_char();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Pad_charContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Pad_charContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_pad_char; }
	}

	public final Pad_charContext pad_char() throws RecognitionException {
		Pad_charContext _localctx = new Pad_charContext(_ctx, getState());
		enterRule(_localctx, 656, RULE_pad_char);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8560);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class OrganizationContext extends ParserRuleContext {
		public TerminalNode SEQUENTIAL() { return getToken(cobolParser.SEQUENTIAL, 0); }
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode RELATIVE() { return getToken(cobolParser.RELATIVE, 0); }
		public TerminalNode INDEXED() { return getToken(cobolParser.INDEXED, 0); }
		public TerminalNode ORGANIZATION() { return getToken(cobolParser.ORGANIZATION, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public OrganizationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_organization; }
	}

	public final OrganizationContext organization() throws RecognitionException {
		OrganizationContext _localctx = new OrganizationContext(_ctx, getState());
		enterRule(_localctx, 658, RULE_organization);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8576);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ORGANIZATION) {
				{
				setState(8562);
				match(ORGANIZATION);
				setState(8564); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8563);
					separator();
					}
					}
					setState(8566); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8574);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(8568);
					match(IS);
					setState(8570); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8569);
						separator();
						}
						}
						setState(8572); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				}
			}

			setState(8589);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case SEQUENTIAL:
				{
				setState(8578);
				match(SEQUENTIAL);
				}
				break;
			case LINE:
				{
				setState(8579);
				match(LINE);
				setState(8581); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8580);
					separator();
					}
					}
					setState(8583); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8585);
				match(SEQUENTIAL);
				}
				break;
			case RELATIVE:
				{
				setState(8587);
				match(RELATIVE);
				}
				break;
			case INDEXED:
				{
				setState(8588);
				match(INDEXED);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Lock_modeContext extends ParserRuleContext {
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public Lock_mode_definitionContext lock_mode_definition() {
			return getRuleContext(Lock_mode_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode MODE() { return getToken(cobolParser.MODE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Lock_modeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_lock_mode; }
	}

	public final Lock_modeContext lock_mode() throws RecognitionException {
		Lock_modeContext _localctx = new Lock_modeContext(_ctx, getState());
		enterRule(_localctx, 660, RULE_lock_mode);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8591);
			match(LOCK);
			setState(8593); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8592);
				separator();
				}
				}
				setState(8595); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8603);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==MODE) {
				{
				setState(8597);
				match(MODE);
				setState(8599); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8598);
					separator();
					}
					}
					setState(8601); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8611);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(8605);
				match(IS);
				setState(8607); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8606);
					separator();
					}
					}
					setState(8609); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8613);
			lock_mode_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Lock_mode_definitionContext extends ParserRuleContext {
		public TerminalNode MANUAL() { return getToken(cobolParser.MANUAL, 0); }
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public TerminalNode MULTIPLE() { return getToken(cobolParser.MULTIPLE, 0); }
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode AUTOMATIC() { return getToken(cobolParser.AUTOMATIC, 0); }
		public TerminalNode ROLLBACK() { return getToken(cobolParser.ROLLBACK, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode EXCLUSIVE() { return getToken(cobolParser.EXCLUSIVE, 0); }
		public Lock_mode_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_lock_mode_definition; }
	}

	public final Lock_mode_definitionContext lock_mode_definition() throws RecognitionException {
		Lock_mode_definitionContext _localctx = new Lock_mode_definitionContext(_ctx, getState());
		enterRule(_localctx, 662, RULE_lock_mode_definition);
		int _la;
		try {
			setState(8683);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case MANUAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(8615);
				match(MANUAL);
				setState(8617); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8616);
					separator();
					}
					}
					setState(8619); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8627);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(8621);
					match(WITH);
					setState(8623); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8622);
						separator();
						}
						}
						setState(8625); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(8629);
				match(LOCK);
				setState(8631); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8630);
					separator();
					}
					}
					setState(8633); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8635);
				match(ON);
				setState(8637); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8636);
					separator();
					}
					}
					setState(8639); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8641);
				match(MULTIPLE);
				setState(8643); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8642);
					separator();
					}
					}
					setState(8645); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8647);
				match(RECORDS);
				}
				break;
			case AUTOMATIC:
				enterOuterAlt(_localctx, 2);
				{
				setState(8649);
				match(AUTOMATIC);
				setState(8680);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1485,_ctx) ) {
				case 1:
					{
					setState(8651); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8650);
						separator();
						}
						}
						setState(8653); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(8661);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==WITH) {
						{
						setState(8655);
						match(WITH);
						setState(8657); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(8656);
							separator();
							}
							}
							setState(8659); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					setState(8678);
					_errHandler.sync(this);
					switch (_input.LA(1)) {
					case LOCK:
						{
						{
						setState(8663);
						match(LOCK);
						setState(8665); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(8664);
							separator();
							}
							}
							setState(8667); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(8669);
						match(ON);
						setState(8671); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(8670);
							separator();
							}
							}
							setState(8673); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(8675);
						match(RECORD);
						}
						}
						break;
					case ROLLBACK:
						{
						setState(8677);
						match(ROLLBACK);
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					}
					break;
				}
				}
				break;
			case EXCLUSIVE:
				enterOuterAlt(_localctx, 3);
				{
				setState(8682);
				match(EXCLUSIVE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Code_setContext extends ParserRuleContext {
		public TerminalNode CODE_SET() { return getToken(cobolParser.CODE_SET, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Code_setContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_code_set; }
	}

	public final Code_setContext code_set() throws RecognitionException {
		Code_setContext _localctx = new Code_setContext(_ctx, getState());
		enterRule(_localctx, 664, RULE_code_set);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8685);
			match(CODE_SET);
			setState(8687); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8686);
				separator();
				}
				}
				setState(8689); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8697);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(8691);
				match(IS);
				setState(8693); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8692);
					separator();
					}
					}
					setState(8695); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8699);
			alpha_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Block_containsContext extends ParserRuleContext {
		public TerminalNode BLOCK() { return getToken(cobolParser.BLOCK, 0); }
		public BlocksizeContext blocksize() {
			return getRuleContext(BlocksizeContext.class,0);
		}
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CONTAINS() { return getToken(cobolParser.CONTAINS, 0); }
		public Smallest_blockContext smallest_block() {
			return getRuleContext(Smallest_blockContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Block_containsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_block_contains; }
	}

	public final Block_containsContext block_contains() throws RecognitionException {
		Block_containsContext _localctx = new Block_containsContext(_ctx, getState());
		enterRule(_localctx, 666, RULE_block_contains);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8701);
			match(BLOCK);
			setState(8703); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8702);
				separator();
				}
				}
				setState(8705); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8713);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONTAINS) {
				{
				setState(8707);
				match(CONTAINS);
				setState(8709); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8708);
					separator();
					}
					}
					setState(8711); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8727);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1495,_ctx) ) {
			case 1:
				{
				setState(8715);
				smallest_block();
				setState(8717); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8716);
					separator();
					}
					}
					setState(8719); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8721);
				match(TO);
				setState(8723); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8722);
					separator();
					}
					}
					setState(8725); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
				break;
			}
			setState(8729);
			blocksize();
			setState(8731); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8730);
				separator();
				}
				}
				setState(8733); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8735);
			_la = _input.LA(1);
			if ( !(_la==CHARACTERS || _la==RECORDS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Smallest_blockContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Smallest_blockContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_smallest_block; }
	}

	public final Smallest_blockContext smallest_block() throws RecognitionException {
		Smallest_blockContext _localctx = new Smallest_blockContext(_ctx, getState());
		enterRule(_localctx, 668, RULE_smallest_block);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8737);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class BlocksizeContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public BlocksizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_blocksize; }
	}

	public final BlocksizeContext blocksize() throws RecognitionException {
		BlocksizeContext _localctx = new BlocksizeContext(_ctx, getState());
		enterRule(_localctx, 670, RULE_blocksize);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8739);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Assign_toContext extends ParserRuleContext {
		public TerminalNode ASSIGN() { return getToken(cobolParser.ASSIGN, 0); }
		public Assign_to_definitionContext assign_to_definition() {
			return getRuleContext(Assign_to_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Assign_toContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_assign_to; }
	}

	public final Assign_toContext assign_to() throws RecognitionException {
		Assign_toContext _localctx = new Assign_toContext(_ctx, getState());
		enterRule(_localctx, 672, RULE_assign_to);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8741);
			match(ASSIGN);
			setState(8743); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8742);
				separator();
				}
				}
				setState(8745); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8753);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==TO) {
				{
				setState(8747);
				match(TO);
				setState(8749); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8748);
					separator();
					}
					}
					setState(8751); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8755);
			assign_to_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Assign_to_definitionContext extends ParserRuleContext {
		public File_specContext file_spec() {
			return getRuleContext(File_specContext.class,0);
		}
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public TerminalNode DYNAMIC() { return getToken(cobolParser.DYNAMIC, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode REEL() { return getToken(cobolParser.REEL, 0); }
		public TerminalNode UNIT() { return getToken(cobolParser.UNIT, 0); }
		public TerminalNode MULTIPLE() { return getToken(cobolParser.MULTIPLE, 0); }
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public Assign_to_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_assign_to_definition; }
	}

	public final Assign_to_definitionContext assign_to_definition() throws RecognitionException {
		Assign_to_definitionContext _localctx = new Assign_to_definitionContext(_ctx, getState());
		enterRule(_localctx, 674, RULE_assign_to_definition);
		int _la;
		try {
			setState(8784);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DISK:
			case DYNAMIC:
			case EXTERNAL:
			case PRINTER:
			case STRING_LITERAL:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(8763);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==DYNAMIC || _la==EXTERNAL) {
					{
					setState(8757);
					_la = _input.LA(1);
					if ( !(_la==DYNAMIC || _la==EXTERNAL) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(8759); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8758);
						separator();
						}
						}
						setState(8761); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(8765);
				file_spec();
				}
				break;
			case MULTIPLE:
			case REEL:
			case UNIT:
				enterOuterAlt(_localctx, 2);
				{
				setState(8772);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==MULTIPLE) {
					{
					setState(8766);
					match(MULTIPLE);
					setState(8768); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8767);
						separator();
						}
						}
						setState(8770); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(8774);
				_la = _input.LA(1);
				if ( !(_la==REEL || _la==UNIT) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(8782);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1505,_ctx) ) {
				case 1:
					{
					setState(8776); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8775);
						separator();
						}
						}
						setState(8778); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(8780);
					match(FILE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_specContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode DISK() { return getToken(cobolParser.DISK, 0); }
		public TerminalNode PRINTER() { return getToken(cobolParser.PRINTER, 0); }
		public File_specContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_spec; }
	}

	public final File_specContext file_spec() throws RecognitionException {
		File_specContext _localctx = new File_specContext(_ctx, getState());
		enterRule(_localctx, 676, RULE_file_spec);
		try {
			setState(8790);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(8786);
				match(STRING_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(8787);
				qualified_data_item();
				}
				break;
			case DISK:
				enterOuterAlt(_localctx, 3);
				{
				setState(8788);
				match(DISK);
				}
				break;
			case PRINTER:
				enterOuterAlt(_localctx, 4);
				{
				setState(8789);
				match(PRINTER);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public File_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_name; }
	}

	public final File_nameContext file_name() throws RecognitionException {
		File_nameContext _localctx = new File_nameContext(_ctx, getState());
		enterRule(_localctx, 678, RULE_file_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8792);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class I_o_controlContext extends ParserRuleContext {
		public TerminalNode I_O_CONTROL() { return getToken(cobolParser.I_O_CONTROL, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<ApplyContext> apply() {
			return getRuleContexts(ApplyContext.class);
		}
		public ApplyContext apply(int i) {
			return getRuleContext(ApplyContext.class,i);
		}
		public List<SameContext> same() {
			return getRuleContexts(SameContext.class);
		}
		public SameContext same(int i) {
			return getRuleContext(SameContext.class,i);
		}
		public List<RerunContext> rerun() {
			return getRuleContexts(RerunContext.class);
		}
		public RerunContext rerun(int i) {
			return getRuleContext(RerunContext.class,i);
		}
		public List<Multiple_fileContext> multiple_file() {
			return getRuleContexts(Multiple_fileContext.class);
		}
		public Multiple_fileContext multiple_file(int i) {
			return getRuleContext(Multiple_fileContext.class,i);
		}
		public I_o_controlContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_i_o_control; }
	}

	public final I_o_controlContext i_o_control() throws RecognitionException {
		I_o_controlContext _localctx = new I_o_controlContext(_ctx, getState());
		enterRule(_localctx, 680, RULE_i_o_control);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(8794);
			match(I_O_CONTROL);
			setState(8798);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(8795);
				separator();
				}
				}
				setState(8800);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(8801);
			match(DOT_);
			setState(8805);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1509,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(8802);
					separator();
					}
					} 
				}
				setState(8807);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1509,_ctx);
			}
			setState(8863);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==APPLY || _la==MULTIPLE || _la==RERUN || _la==SAME || _la==DOT_) {
				{
				setState(8817);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==APPLY) {
					{
					{
					setState(8808);
					apply();
					setState(8812);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(8809);
						separator();
						}
						}
						setState(8814);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(8819);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(8829);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==SAME) {
					{
					{
					setState(8820);
					same();
					setState(8824);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(8821);
						separator();
						}
						}
						setState(8826);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(8831);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(8841);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==RERUN) {
					{
					{
					setState(8832);
					rerun();
					setState(8836);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(8833);
						separator();
						}
						}
						setState(8838);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(8843);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(8853);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==MULTIPLE) {
					{
					{
					setState(8844);
					multiple_file();
					setState(8848);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(8845);
						separator();
						}
						}
						setState(8850);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(8855);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(8856);
				match(DOT_);
				setState(8860);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1518,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(8857);
						separator();
						}
						} 
					}
					setState(8862);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1518,_ctx);
				}
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiple_fileContext extends ParserRuleContext {
		public TerminalNode MULTIPLE() { return getToken(cobolParser.MULTIPLE, 0); }
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode TAPE() { return getToken(cobolParser.TAPE, 0); }
		public TerminalNode CONTAINS() { return getToken(cobolParser.CONTAINS, 0); }
		public List<Multiple_file_definitionContext> multiple_file_definition() {
			return getRuleContexts(Multiple_file_definitionContext.class);
		}
		public Multiple_file_definitionContext multiple_file_definition(int i) {
			return getRuleContext(Multiple_file_definitionContext.class,i);
		}
		public Multiple_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiple_file; }
	}

	public final Multiple_fileContext multiple_file() throws RecognitionException {
		Multiple_fileContext _localctx = new Multiple_fileContext(_ctx, getState());
		enterRule(_localctx, 682, RULE_multiple_file);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(8865);
			match(MULTIPLE);
			setState(8867); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8866);
				separator();
				}
				}
				setState(8869); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8871);
			match(FILE);
			setState(8873); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8872);
				separator();
				}
				}
				setState(8875); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8883);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==TAPE) {
				{
				setState(8877);
				match(TAPE);
				setState(8879); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8878);
					separator();
					}
					}
					setState(8881); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8891);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONTAINS) {
				{
				setState(8885);
				match(CONTAINS);
				setState(8887); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8886);
					separator();
					}
					}
					setState(8889); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8900); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8893);
				multiple_file_definition();
				setState(8897);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1526,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(8894);
						separator();
						}
						} 
					}
					setState(8899);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1526,_ctx);
				}
				}
				}
				setState(8902); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiple_file_definitionContext extends ParserRuleContext {
		public Multiple_file_nameContext multiple_file_name() {
			return getRuleContext(Multiple_file_nameContext.class,0);
		}
		public TerminalNode POSITION() { return getToken(cobolParser.POSITION, 0); }
		public Pos_integerContext pos_integer() {
			return getRuleContext(Pos_integerContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Multiple_file_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiple_file_definition; }
	}

	public final Multiple_file_definitionContext multiple_file_definition() throws RecognitionException {
		Multiple_file_definitionContext _localctx = new Multiple_file_definitionContext(_ctx, getState());
		enterRule(_localctx, 684, RULE_multiple_file_definition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8904);
			multiple_file_name();
			setState(8918);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1530,_ctx) ) {
			case 1:
				{
				setState(8906); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8905);
					separator();
					}
					}
					setState(8908); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8910);
				match(POSITION);
				setState(8912); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8911);
					separator();
					}
					}
					setState(8914); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8916);
				pos_integer();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiple_file_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Multiple_file_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiple_file_name; }
	}

	public final Multiple_file_nameContext multiple_file_name() throws RecognitionException {
		Multiple_file_nameContext _localctx = new Multiple_file_nameContext(_ctx, getState());
		enterRule(_localctx, 686, RULE_multiple_file_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8920);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Pos_integerContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Pos_integerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_pos_integer; }
	}

	public final Pos_integerContext pos_integer() throws RecognitionException {
		Pos_integerContext _localctx = new Pos_integerContext(_ctx, getState());
		enterRule(_localctx, 688, RULE_pos_integer);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8922);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RerunContext extends ParserRuleContext {
		public TerminalNode RERUN() { return getToken(cobolParser.RERUN, 0); }
		public Rerun_definitionContext rerun_definition() {
			return getRuleContext(Rerun_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public TerminalNode EVERY() { return getToken(cobolParser.EVERY, 0); }
		public RerunContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rerun; }
	}

	public final RerunContext rerun() throws RecognitionException {
		RerunContext _localctx = new RerunContext(_ctx, getState());
		enterRule(_localctx, 690, RULE_rerun);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8924);
			match(RERUN);
			setState(8926); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(8925);
				separator();
				}
				}
				setState(8928); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(8942);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ON) {
				{
				setState(8930);
				match(ON);
				setState(8932); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8931);
					separator();
					}
					}
					setState(8934); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8936);
				file_name();
				setState(8938); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8937);
					separator();
					}
					}
					setState(8940); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8950);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==EVERY) {
				{
				setState(8944);
				match(EVERY);
				setState(8946); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8945);
					separator();
					}
					}
					setState(8948); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(8952);
			rerun_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rerun_definitionContext extends ParserRuleContext {
		public Rerun_def_fileContext rerun_def_file() {
			return getRuleContext(Rerun_def_fileContext.class,0);
		}
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public Clock_countContext clock_count() {
			return getRuleContext(Clock_countContext.class,0);
		}
		public TerminalNode CLOCK_UNITS() { return getToken(cobolParser.CLOCK_UNITS, 0); }
		public Condition_nameContext condition_name() {
			return getRuleContext(Condition_nameContext.class,0);
		}
		public Rerun_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rerun_definition; }
	}

	public final Rerun_definitionContext rerun_definition() throws RecognitionException {
		Rerun_definitionContext _localctx = new Rerun_definitionContext(_ctx, getState());
		enterRule(_localctx, 692, RULE_rerun_definition);
		int _la;
		try {
			setState(8979);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1541,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(8954);
				rerun_def_file();
				setState(8956); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8955);
					separator();
					}
					}
					setState(8958); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8966);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==OF) {
					{
					setState(8960);
					match(OF);
					setState(8962); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8961);
						separator();
						}
						}
						setState(8964); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(8968);
				file_name();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(8970);
				clock_count();
				setState(8972); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(8971);
					separator();
					}
					}
					setState(8974); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(8976);
				match(CLOCK_UNITS);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(8978);
				condition_name();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Clock_countContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Clock_countContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_clock_count; }
	}

	public final Clock_countContext clock_count() throws RecognitionException {
		Clock_countContext _localctx = new Clock_countContext(_ctx, getState());
		enterRule(_localctx, 694, RULE_clock_count);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8981);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Condition_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Condition_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_condition_name; }
	}

	public final Condition_nameContext condition_name() throws RecognitionException {
		Condition_nameContext _localctx = new Condition_nameContext(_ctx, getState());
		enterRule(_localctx, 696, RULE_condition_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(8983);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rerun_def_fileContext extends ParserRuleContext {
		public TerminalNode REEL() { return getToken(cobolParser.REEL, 0); }
		public TerminalNode UNIT() { return getToken(cobolParser.UNIT, 0); }
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public Rec_countContext rec_count() {
			return getRuleContext(Rec_countContext.class,0);
		}
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public Rerun_def_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rerun_def_file; }
	}

	public final Rerun_def_fileContext rerun_def_file() throws RecognitionException {
		Rerun_def_fileContext _localctx = new Rerun_def_fileContext(_ctx, getState());
		enterRule(_localctx, 698, RULE_rerun_def_file);
		int _la;
		try {
			setState(9010);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case END:
			case REEL:
			case UNIT:
				enterOuterAlt(_localctx, 1);
				{
				setState(8999);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==END) {
					{
					setState(8985);
					match(END);
					setState(8987); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(8986);
						separator();
						}
						}
						setState(8989); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(8997);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==OF) {
						{
						setState(8991);
						match(OF);
						setState(8993); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(8992);
							separator();
							}
							}
							setState(8995); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						}
					}

					}
				}

				setState(9001);
				_la = _input.LA(1);
				if ( !(_la==REEL || _la==UNIT) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(9002);
				rec_count();
				setState(9004); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9003);
					separator();
					}
					}
					setState(9006); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9008);
				match(RECORDS);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rec_countContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Rec_countContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rec_count; }
	}

	public final Rec_countContext rec_count() throws RecognitionException {
		Rec_countContext _localctx = new Rec_countContext(_ctx, getState());
		enterRule(_localctx, 700, RULE_rec_count);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9012);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SameContext extends ParserRuleContext {
		public TerminalNode SAME() { return getToken(cobolParser.SAME, 0); }
		public List<Same_area_fileContext> same_area_file() {
			return getRuleContexts(Same_area_fileContext.class);
		}
		public Same_area_fileContext same_area_file(int i) {
			return getRuleContext(Same_area_fileContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode AREA() { return getToken(cobolParser.AREA, 0); }
		public TerminalNode FOR() { return getToken(cobolParser.FOR, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode SORT() { return getToken(cobolParser.SORT, 0); }
		public TerminalNode SORT_MERGE() { return getToken(cobolParser.SORT_MERGE, 0); }
		public SameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_same; }
	}

	public final SameContext same() throws RecognitionException {
		SameContext _localctx = new SameContext(_ctx, getState());
		enterRule(_localctx, 702, RULE_same);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(9014);
			match(SAME);
			setState(9016); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(9015);
				separator();
				}
				}
				setState(9018); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(9026);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (((((_la - 292)) & ~0x3f) == 0 && ((1L << (_la - 292)) & ((1L << (RECORD - 292)) | (1L << (SORT - 292)) | (1L << (SORT_MERGE - 292)))) != 0)) {
				{
				setState(9020);
				_la = _input.LA(1);
				if ( !(((((_la - 292)) & ~0x3f) == 0 && ((1L << (_la - 292)) & ((1L << (RECORD - 292)) | (1L << (SORT - 292)) | (1L << (SORT_MERGE - 292)))) != 0)) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(9022); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9021);
					separator();
					}
					}
					setState(9024); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(9034);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AREA) {
				{
				setState(9028);
				match(AREA);
				setState(9030); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9029);
					separator();
					}
					}
					setState(9032); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(9042);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FOR) {
				{
				setState(9036);
				match(FOR);
				setState(9038); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9037);
					separator();
					}
					}
					setState(9040); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
			}

			setState(9044);
			same_area_file();
			setState(9052); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(9046); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(9045);
						separator();
						}
						}
						setState(9048); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(9050);
					same_area_file();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(9054); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1556,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Same_area_fileContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Same_area_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_same_area_file; }
	}

	public final Same_area_fileContext same_area_file() throws RecognitionException {
		Same_area_fileContext _localctx = new Same_area_fileContext(_ctx, getState());
		enterRule(_localctx, 704, RULE_same_area_file);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9056);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ApplyContext extends ParserRuleContext {
		public TerminalNode APPLY() { return getToken(cobolParser.APPLY, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Apply_definitionContext> apply_definition() {
			return getRuleContexts(Apply_definitionContext.class);
		}
		public Apply_definitionContext apply_definition(int i) {
			return getRuleContext(Apply_definitionContext.class,i);
		}
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public ApplyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_apply; }
	}

	public final ApplyContext apply() throws RecognitionException {
		ApplyContext _localctx = new ApplyContext(_ctx, getState());
		enterRule(_localctx, 706, RULE_apply);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(9058);
			match(APPLY);
			setState(9060); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(9059);
				separator();
				}
				}
				setState(9062); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(9070); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(9064);
				apply_definition();
				setState(9066); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9065);
					separator();
					}
					}
					setState(9068); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				}
				}
				setState(9072); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 85)) & ~0x3f) == 0 && ((1L << (_la - 85)) & ((1L << (CONTIGUOUS - 85)) | (1L << (CONTIGUOUS_BEST_TRY - 85)) | (1L << (DEFERRED_WRITE - 85)))) != 0) || _la==EXTENSION || _la==FILL_SIZE || ((((_la - 231)) & ~0x3f) == 0 && ((1L << (_la - 231)) & ((1L << (LOCK_HOLDING - 231)) | (1L << (MASS_INSERT - 231)) | (1L << (PREALLOCATION - 231)) | (1L << (PRINT_CONTROL - 231)))) != 0) || _la==WINDOW );
			setState(9074);
			match(ON);
			setState(9076); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(9075);
				separator();
				}
				}
				setState(9078); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(9087); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(9080);
				file_name();
				setState(9084);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1561,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(9081);
						separator();
						}
						} 
					}
					setState(9086);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,1561,_ctx);
				}
				}
				}
				setState(9089); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Apply_definitionContext extends ParserRuleContext {
		public TerminalNode DEFERRED_WRITE() { return getToken(cobolParser.DEFERRED_WRITE, 0); }
		public TerminalNode EXTENSION() { return getToken(cobolParser.EXTENSION, 0); }
		public Extend_amtContext extend_amt() {
			return getRuleContext(Extend_amtContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FILL_SIZE() { return getToken(cobolParser.FILL_SIZE, 0); }
		public TerminalNode LOCK_HOLDING() { return getToken(cobolParser.LOCK_HOLDING, 0); }
		public TerminalNode MASS_INSERT() { return getToken(cobolParser.MASS_INSERT, 0); }
		public TerminalNode PREALLOCATION() { return getToken(cobolParser.PREALLOCATION, 0); }
		public Preall_amtContext preall_amt() {
			return getRuleContext(Preall_amtContext.class,0);
		}
		public TerminalNode CONTIGUOUS() { return getToken(cobolParser.CONTIGUOUS, 0); }
		public TerminalNode CONTIGUOUS_BEST_TRY() { return getToken(cobolParser.CONTIGUOUS_BEST_TRY, 0); }
		public TerminalNode PRINT_CONTROL() { return getToken(cobolParser.PRINT_CONTROL, 0); }
		public TerminalNode WINDOW() { return getToken(cobolParser.WINDOW, 0); }
		public Window_ptrsContext window_ptrs() {
			return getRuleContext(Window_ptrsContext.class,0);
		}
		public Apply_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_apply_definition; }
	}

	public final Apply_definitionContext apply_definition() throws RecognitionException {
		Apply_definitionContext _localctx = new Apply_definitionContext(_ctx, getState());
		enterRule(_localctx, 708, RULE_apply_definition);
		int _la;
		try {
			setState(9128);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DEFERRED_WRITE:
				enterOuterAlt(_localctx, 1);
				{
				setState(9091);
				match(DEFERRED_WRITE);
				}
				break;
			case EXTENSION:
				enterOuterAlt(_localctx, 2);
				{
				setState(9092);
				match(EXTENSION);
				setState(9094); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9093);
					separator();
					}
					}
					setState(9096); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9098);
				extend_amt();
				}
				break;
			case FILL_SIZE:
				enterOuterAlt(_localctx, 3);
				{
				setState(9100);
				match(FILL_SIZE);
				}
				break;
			case LOCK_HOLDING:
				enterOuterAlt(_localctx, 4);
				{
				setState(9101);
				match(LOCK_HOLDING);
				}
				break;
			case MASS_INSERT:
				enterOuterAlt(_localctx, 5);
				{
				setState(9102);
				match(MASS_INSERT);
				}
				break;
			case CONTIGUOUS:
			case CONTIGUOUS_BEST_TRY:
			case PREALLOCATION:
				enterOuterAlt(_localctx, 6);
				{
				setState(9109);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CONTIGUOUS || _la==CONTIGUOUS_BEST_TRY) {
					{
					setState(9103);
					_la = _input.LA(1);
					if ( !(_la==CONTIGUOUS || _la==CONTIGUOUS_BEST_TRY) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(9105); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(9104);
						separator();
						}
						}
						setState(9107); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					}
				}

				setState(9111);
				match(PREALLOCATION);
				setState(9113); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9112);
					separator();
					}
					}
					setState(9115); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9117);
				preall_amt();
				}
				break;
			case PRINT_CONTROL:
				enterOuterAlt(_localctx, 7);
				{
				setState(9119);
				match(PRINT_CONTROL);
				}
				break;
			case WINDOW:
				enterOuterAlt(_localctx, 8);
				{
				setState(9120);
				match(WINDOW);
				setState(9122); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9121);
					separator();
					}
					}
					setState(9124); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9126);
				window_ptrs();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Window_ptrsContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Window_ptrsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_window_ptrs; }
	}

	public final Window_ptrsContext window_ptrs() throws RecognitionException {
		Window_ptrsContext _localctx = new Window_ptrsContext(_ctx, getState());
		enterRule(_localctx, 710, RULE_window_ptrs);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9130);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Preall_amtContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Preall_amtContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_preall_amt; }
	}

	public final Preall_amtContext preall_amt() throws RecognitionException {
		Preall_amtContext _localctx = new Preall_amtContext(_ctx, getState());
		enterRule(_localctx, 712, RULE_preall_amt);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9132);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Extend_amtContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Extend_amtContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_extend_amt; }
	}

	public final Extend_amtContext extend_amt() throws RecognitionException {
		Extend_amtContext _localctx = new Extend_amtContext(_ctx, getState());
		enterRule(_localctx, 714, RULE_extend_amt);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9134);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arithmetic_expressionContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Unary_arithmetic_operatorContext unary_arithmetic_operator() {
			return getRuleContext(Unary_arithmetic_operatorContext.class,0);
		}
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public ConstantContext constant() {
			return getRuleContext(ConstantContext.class,0);
		}
		public Binary_arithmetic_operatorContext binary_arithmetic_operator() {
			return getRuleContext(Binary_arithmetic_operatorContext.class,0);
		}
		public Arithmetic_expressionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arithmetic_expression; }
	}

	public final Arithmetic_expressionContext arithmetic_expression() throws RecognitionException {
		return arithmetic_expression(0);
	}

	private Arithmetic_expressionContext arithmetic_expression(int _p) throws RecognitionException {
		ParserRuleContext _parentctx = _ctx;
		int _parentState = getState();
		Arithmetic_expressionContext _localctx = new Arithmetic_expressionContext(_ctx, _parentState);
		Arithmetic_expressionContext _prevctx = _localctx;
		int _startState = 716;
		enterRecursionRule(_localctx, 716, RULE_arithmetic_expression, _p);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(9164);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LPAREN_:
				{
				setState(9137);
				match(LPAREN_);
				setState(9141);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9138);
					arithmetic_separator();
					}
					}
					setState(9143);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(9144);
				arithmetic_expression(0);
				setState(9148);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9145);
					arithmetic_separator();
					}
					}
					setState(9150);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(9151);
				match(RPAREN_);
				}
				break;
			case PLUS_:
			case MINUS_:
				{
				setState(9153);
				unary_arithmetic_operator();
				setState(9157);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9154);
					arithmetic_separator();
					}
					}
					setState(9159);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(9160);
				arithmetic_expression(3);
				}
				break;
			case FUNCTION:
			case USER_DEFINED_WORD:
				{
				setState(9162);
				identifier();
				}
				break;
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				{
				setState(9163);
				constant();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			_ctx.stop = _input.LT(-1);
			setState(9184);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1575,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( _parseListeners!=null ) triggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Arithmetic_expressionContext(_parentctx, _parentState);
					pushNewRecursionContext(_localctx, _startState, RULE_arithmetic_expression);
					setState(9166);
					if (!(precpred(_ctx, 4))) throw new FailedPredicateException(this, "precpred(_ctx, 4)");
					setState(9170);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(9167);
						arithmetic_separator();
						}
						}
						setState(9172);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(9173);
					binary_arithmetic_operator();
					setState(9177);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(9174);
						arithmetic_separator();
						}
						}
						setState(9179);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(9180);
					arithmetic_expression(5);
					}
					} 
				}
				setState(9186);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1575,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public static class ConstantContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Figurative_constantContext figurative_constant() {
			return getRuleContext(Figurative_constantContext.class,0);
		}
		public ConstantContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_constant; }
	}

	public final ConstantContext constant() throws RecognitionException {
		ConstantContext _localctx = new ConstantContext(_ctx, getState());
		enterRule(_localctx, 718, RULE_constant);
		try {
			setState(9190);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(9187);
				match(NUMERIC_LITERAL);
				}
				break;
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(9188);
				match(STRING_LITERAL);
				}
				break;
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
				enterOuterAlt(_localctx, 3);
				{
				setState(9189);
				figurative_constant();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Binary_arithmetic_operatorContext extends ParserRuleContext {
		public TerminalNode PLUS_() { return getToken(cobolParser.PLUS_, 0); }
		public TerminalNode MINUS_() { return getToken(cobolParser.MINUS_, 0); }
		public List<TerminalNode> STAR_() { return getTokens(cobolParser.STAR_); }
		public TerminalNode STAR_(int i) {
			return getToken(cobolParser.STAR_, i);
		}
		public TerminalNode SLASH_() { return getToken(cobolParser.SLASH_, 0); }
		public Binary_arithmetic_operatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_binary_arithmetic_operator; }
	}

	public final Binary_arithmetic_operatorContext binary_arithmetic_operator() throws RecognitionException {
		Binary_arithmetic_operatorContext _localctx = new Binary_arithmetic_operatorContext(_ctx, getState());
		enterRule(_localctx, 720, RULE_binary_arithmetic_operator);
		try {
			setState(9198);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1577,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(9192);
				match(PLUS_);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(9193);
				match(MINUS_);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(9194);
				match(STAR_);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(9195);
				match(SLASH_);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(9196);
				match(STAR_);
				setState(9197);
				match(STAR_);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Unary_arithmetic_operatorContext extends ParserRuleContext {
		public TerminalNode PLUS_() { return getToken(cobolParser.PLUS_, 0); }
		public TerminalNode MINUS_() { return getToken(cobolParser.MINUS_, 0); }
		public Unary_arithmetic_operatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_unary_arithmetic_operator; }
	}

	public final Unary_arithmetic_operatorContext unary_arithmetic_operator() throws RecognitionException {
		Unary_arithmetic_operatorContext _localctx = new Unary_arithmetic_operatorContext(_ctx, getState());
		enterRule(_localctx, 722, RULE_unary_arithmetic_operator);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9200);
			_la = _input.LA(1);
			if ( !(_la==PLUS_ || _la==MINUS_) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Logic_expressionContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public List<Logic_expressionContext> logic_expression() {
			return getRuleContexts(Logic_expressionContext.class);
		}
		public Logic_expressionContext logic_expression(int i) {
			return getRuleContext(Logic_expressionContext.class,i);
		}
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public Class_conditionContext class_condition() {
			return getRuleContext(Class_conditionContext.class,0);
		}
		public Logic_conditionContext logic_condition() {
			return getRuleContext(Logic_conditionContext.class,0);
		}
		public Sign_conditionContext sign_condition() {
			return getRuleContext(Sign_conditionContext.class,0);
		}
		public Success_failure_conditionContext success_failure_condition() {
			return getRuleContext(Success_failure_conditionContext.class,0);
		}
		public Logic_operationContext logic_operation() {
			return getRuleContext(Logic_operationContext.class,0);
		}
		public Logic_expressionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_logic_expression; }
	}

	public final Logic_expressionContext logic_expression() throws RecognitionException {
		return logic_expression(0);
	}

	private Logic_expressionContext logic_expression(int _p) throws RecognitionException {
		ParserRuleContext _parentctx = _ctx;
		int _parentState = getState();
		Logic_expressionContext _localctx = new Logic_expressionContext(_ctx, _parentState);
		Logic_expressionContext _prevctx = _localctx;
		int _startState = 724;
		enterRecursionRule(_localctx, 724, RULE_logic_expression, _p);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(9231);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1581,_ctx) ) {
			case 1:
				{
				setState(9203);
				match(LPAREN_);
				setState(9207);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9204);
					arithmetic_separator();
					}
					}
					setState(9209);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(9210);
				logic_expression(0);
				setState(9214);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9211);
					arithmetic_separator();
					}
					}
					setState(9216);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(9217);
				match(RPAREN_);
				}
				break;
			case 2:
				{
				setState(9219);
				match(NOT);
				setState(9223);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9220);
					arithmetic_separator();
					}
					}
					setState(9225);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(9226);
				logic_expression(5);
				}
				break;
			case 3:
				{
				setState(9227);
				class_condition();
				}
				break;
			case 4:
				{
				setState(9228);
				logic_condition(0);
				}
				break;
			case 5:
				{
				setState(9229);
				sign_condition();
				}
				break;
			case 6:
				{
				setState(9230);
				success_failure_condition();
				}
				break;
			}
			_ctx.stop = _input.LT(-1);
			setState(9251);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1584,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( _parseListeners!=null ) triggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Logic_expressionContext(_parentctx, _parentState);
					pushNewRecursionContext(_localctx, _startState, RULE_logic_expression);
					setState(9233);
					if (!(precpred(_ctx, 6))) throw new FailedPredicateException(this, "precpred(_ctx, 6)");
					setState(9237);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(9234);
						arithmetic_separator();
						}
						}
						setState(9239);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(9240);
					logic_operation();
					setState(9244);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(9241);
						arithmetic_separator();
						}
						}
						setState(9246);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(9247);
					logic_expression(7);
					}
					} 
				}
				setState(9253);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1584,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public static class Success_failure_conditionContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode SUCCESS() { return getToken(cobolParser.SUCCESS, 0); }
		public TerminalNode FAILURE() { return getToken(cobolParser.FAILURE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Success_failure_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_success_failure_condition; }
	}

	public final Success_failure_conditionContext success_failure_condition() throws RecognitionException {
		Success_failure_conditionContext _localctx = new Success_failure_conditionContext(_ctx, getState());
		enterRule(_localctx, 726, RULE_success_failure_condition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9254);
			qualified_data_item();
			setState(9262);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1586,_ctx) ) {
			case 1:
				{
				setState(9256); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9255);
					arithmetic_separator();
					}
					}
					setState(9258); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9260);
				match(IS);
				}
				break;
			}
			setState(9265); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(9264);
				arithmetic_separator();
				}
				}
				setState(9267); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(9269);
			_la = _input.LA(1);
			if ( !(_la==FAILURE || _la==SUCCESS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Logic_conditionContext extends ParserRuleContext {
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public Condition_operatorContext condition_operator() {
			return getRuleContext(Condition_operatorContext.class,0);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Class_conditionContext class_condition() {
			return getRuleContext(Class_conditionContext.class,0);
		}
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Logic_conditionContext logic_condition() {
			return getRuleContext(Logic_conditionContext.class,0);
		}
		public Logic_operationContext logic_operation() {
			return getRuleContext(Logic_operationContext.class,0);
		}
		public Logic_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_logic_condition; }
	}

	public final Logic_conditionContext logic_condition() throws RecognitionException {
		return logic_condition(0);
	}

	private Logic_conditionContext logic_condition(int _p) throws RecognitionException {
		ParserRuleContext _parentctx = _ctx;
		int _parentState = getState();
		Logic_conditionContext _localctx = new Logic_conditionContext(_ctx, _parentState);
		Logic_conditionContext _prevctx = _localctx;
		int _startState = 728;
		enterRecursionRule(_localctx, 728, RULE_logic_condition, _p);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(9290);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1590,_ctx) ) {
			case 1:
				{
				setState(9272);
				arithmetic_expression(0);
				setState(9276);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9273);
					arithmetic_separator();
					}
					}
					setState(9278);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(9279);
				condition_operator();
				setState(9283);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9280);
					arithmetic_separator();
					}
					}
					setState(9285);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(9286);
				arithmetic_expression(0);
				}
				break;
			case 2:
				{
				setState(9288);
				class_condition();
				}
				break;
			case 3:
				{
				setState(9289);
				qualified_data_item();
				}
				break;
			}
			_ctx.stop = _input.LT(-1);
			setState(9316);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1594,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( _parseListeners!=null ) triggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Logic_conditionContext(_parentctx, _parentState);
					pushNewRecursionContext(_localctx, _startState, RULE_logic_condition);
					setState(9292);
					if (!(precpred(_ctx, 1))) throw new FailedPredicateException(this, "precpred(_ctx, 1)");
					setState(9294); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(9293);
						arithmetic_separator();
						}
						}
						setState(9296); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(9298);
					logic_operation();
					setState(9302);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(9299);
						arithmetic_separator();
						}
						}
						setState(9304);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(9305);
					condition_operator();
					setState(9309);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(9306);
						arithmetic_separator();
						}
						}
						setState(9311);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(9312);
					arithmetic_expression(0);
					}
					} 
				}
				setState(9318);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1594,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public static class Logic_operationContext extends ParserRuleContext {
		public TerminalNode AND() { return getToken(cobolParser.AND, 0); }
		public TerminalNode OR() { return getToken(cobolParser.OR, 0); }
		public Logic_operationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_logic_operation; }
	}

	public final Logic_operationContext logic_operation() throws RecognitionException {
		Logic_operationContext _localctx = new Logic_operationContext(_ctx, getState());
		enterRule(_localctx, 730, RULE_logic_operation);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9319);
			_la = _input.LA(1);
			if ( !(_la==AND || _la==OR) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sign_conditionContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public Sign_condition_nameContext sign_condition_name() {
			return getRuleContext(Sign_condition_nameContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Sign_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sign_condition; }
	}

	public final Sign_conditionContext sign_condition() throws RecognitionException {
		Sign_conditionContext _localctx = new Sign_conditionContext(_ctx, getState());
		enterRule(_localctx, 732, RULE_sign_condition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9321);
			arithmetic_expression(0);
			setState(9329);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1596,_ctx) ) {
			case 1:
				{
				setState(9323); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9322);
					arithmetic_separator();
					}
					}
					setState(9325); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9327);
				match(IS);
				}
				break;
			}
			setState(9338);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1598,_ctx) ) {
			case 1:
				{
				setState(9332); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9331);
					arithmetic_separator();
					}
					}
					setState(9334); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9336);
				match(NOT);
				}
				break;
			}
			setState(9341); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(9340);
				arithmetic_separator();
				}
				}
				setState(9343); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(9345);
			sign_condition_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sign_condition_nameContext extends ParserRuleContext {
		public TerminalNode POSITIVE() { return getToken(cobolParser.POSITIVE, 0); }
		public TerminalNode NEGATIVE() { return getToken(cobolParser.NEGATIVE, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public Sign_condition_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sign_condition_name; }
	}

	public final Sign_condition_nameContext sign_condition_name() throws RecognitionException {
		Sign_condition_nameContext _localctx = new Sign_condition_nameContext(_ctx, getState());
		enterRule(_localctx, 734, RULE_sign_condition_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9347);
			_la = _input.LA(1);
			if ( !(_la==NEGATIVE || _la==POSITIVE || _la==ZERO) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_conditionContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public Class_condition_nameContext class_condition_name() {
			return getRuleContext(Class_condition_nameContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Class_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_condition; }
	}

	public final Class_conditionContext class_condition() throws RecognitionException {
		Class_conditionContext _localctx = new Class_conditionContext(_ctx, getState());
		enterRule(_localctx, 736, RULE_class_condition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9349);
			identifier();
			setState(9357);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1601,_ctx) ) {
			case 1:
				{
				setState(9351); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9350);
					arithmetic_separator();
					}
					}
					setState(9353); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9355);
				match(IS);
				}
				break;
			}
			setState(9366);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1603,_ctx) ) {
			case 1:
				{
				setState(9360); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9359);
					arithmetic_separator();
					}
					}
					setState(9362); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9364);
				match(NOT);
				}
				break;
			}
			setState(9369); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(9368);
				arithmetic_separator();
				}
				}
				setState(9371); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
			setState(9373);
			class_condition_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_condition_nameContext extends ParserRuleContext {
		public TerminalNode NUMERIC() { return getToken(cobolParser.NUMERIC, 0); }
		public TerminalNode ALPHABETIC() { return getToken(cobolParser.ALPHABETIC, 0); }
		public TerminalNode ALPHABETIC_LOWER() { return getToken(cobolParser.ALPHABETIC_LOWER, 0); }
		public TerminalNode ALPHABETIC_UPPER() { return getToken(cobolParser.ALPHABETIC_UPPER, 0); }
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Class_condition_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_condition_name; }
	}

	public final Class_condition_nameContext class_condition_name() throws RecognitionException {
		Class_condition_nameContext _localctx = new Class_condition_nameContext(_ctx, getState());
		enterRule(_localctx, 738, RULE_class_condition_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9375);
			_la = _input.LA(1);
			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER))) != 0) || _la==NUMERIC || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Condition_operatorContext extends ParserRuleContext {
		public TerminalNode GREATER() { return getToken(cobolParser.GREATER, 0); }
		public TerminalNode OR() { return getToken(cobolParser.OR, 0); }
		public TerminalNode EQUAL() { return getToken(cobolParser.EQUAL, 0); }
		public TerminalNode GE_() { return getToken(cobolParser.GE_, 0); }
		public TerminalNode LESS() { return getToken(cobolParser.LESS, 0); }
		public TerminalNode LE_() { return getToken(cobolParser.LE_, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode GT_() { return getToken(cobolParser.GT_, 0); }
		public TerminalNode LT_() { return getToken(cobolParser.LT_, 0); }
		public TerminalNode EQUAL_() { return getToken(cobolParser.EQUAL_, 0); }
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public TerminalNode THAN() { return getToken(cobolParser.THAN, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Condition_operatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_condition_operator; }
	}

	public final Condition_operatorContext condition_operator() throws RecognitionException {
		Condition_operatorContext _localctx = new Condition_operatorContext(_ctx, getState());
		enterRule(_localctx, 740, RULE_condition_operator);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9384);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(9377);
				match(IS);
				setState(9381);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9378);
					arithmetic_separator();
					}
					}
					setState(9383);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(9521);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1634,_ctx) ) {
			case 1:
				{
				setState(9393);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NOT) {
					{
					setState(9386);
					match(NOT);
					setState(9390);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(9387);
						arithmetic_separator();
						}
						}
						setState(9392);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
				}

				setState(9455);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case GREATER:
					{
					setState(9395);
					match(GREATER);
					setState(9403);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1610,_ctx) ) {
					case 1:
						{
						setState(9397); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(9396);
							arithmetic_separator();
							}
							}
							setState(9399); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(9401);
						match(THAN);
						}
						break;
					}
					}
					break;
				case GT_:
					{
					setState(9405);
					match(GT_);
					setState(9413);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1612,_ctx) ) {
					case 1:
						{
						setState(9407); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(9406);
							arithmetic_separator();
							}
							}
							setState(9409); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(9411);
						match(THAN);
						}
						break;
					}
					}
					break;
				case LESS:
					{
					setState(9415);
					match(LESS);
					setState(9423);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1614,_ctx) ) {
					case 1:
						{
						setState(9417); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(9416);
							arithmetic_separator();
							}
							}
							setState(9419); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(9421);
						match(THAN);
						}
						break;
					}
					}
					break;
				case LT_:
					{
					setState(9425);
					match(LT_);
					setState(9433);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1616,_ctx) ) {
					case 1:
						{
						setState(9427); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(9426);
							arithmetic_separator();
							}
							}
							setState(9429); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(9431);
						match(THAN);
						}
						break;
					}
					}
					break;
				case EQUAL:
					{
					setState(9435);
					match(EQUAL);
					setState(9443);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1618,_ctx) ) {
					case 1:
						{
						setState(9437); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(9436);
							arithmetic_separator();
							}
							}
							setState(9439); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(9441);
						match(TO);
						}
						break;
					}
					}
					break;
				case EQUAL_:
					{
					setState(9445);
					match(EQUAL_);
					setState(9453);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1620,_ctx) ) {
					case 1:
						{
						setState(9447); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(9446);
							arithmetic_separator();
							}
							}
							setState(9449); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
						setState(9451);
						match(TO);
						}
						break;
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			case 2:
				{
				setState(9457);
				match(GREATER);
				setState(9465);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1623,_ctx) ) {
				case 1:
					{
					setState(9459); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(9458);
						arithmetic_separator();
						}
						}
						setState(9461); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(9463);
					match(THAN);
					}
					break;
				}
				setState(9468); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9467);
					arithmetic_separator();
					}
					}
					setState(9470); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9472);
				match(OR);
				setState(9474); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9473);
					arithmetic_separator();
					}
					}
					setState(9476); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9478);
				match(EQUAL);
				setState(9486);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1627,_ctx) ) {
				case 1:
					{
					setState(9480); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(9479);
						arithmetic_separator();
						}
						}
						setState(9482); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(9484);
					match(TO);
					}
					break;
				}
				}
				break;
			case 3:
				{
				setState(9488);
				match(GE_);
				}
				break;
			case 4:
				{
				setState(9489);
				match(LESS);
				setState(9497);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1629,_ctx) ) {
				case 1:
					{
					setState(9491); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(9490);
						arithmetic_separator();
						}
						}
						setState(9493); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(9495);
					match(THAN);
					}
					break;
				}
				setState(9500); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9499);
					arithmetic_separator();
					}
					}
					setState(9502); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9504);
				match(OR);
				setState(9506); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(9505);
					arithmetic_separator();
					}
					}
					setState(9508); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
				setState(9510);
				match(EQUAL);
				setState(9518);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1633,_ctx) ) {
				case 1:
					{
					setState(9512); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(9511);
						arithmetic_separator();
						}
						}
						setState(9514); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0) );
					setState(9516);
					match(TO);
					}
					break;
				}
				}
				break;
			case 5:
				{
				setState(9520);
				match(LE_);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Identifier_resultContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public SubscriptingContext subscripting() {
			return getRuleContext(SubscriptingContext.class,0);
		}
		public Reference_modificationContext reference_modification() {
			return getRuleContext(Reference_modificationContext.class,0);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Identifier_resultContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identifier_result; }
	}

	public final Identifier_resultContext identifier_result() throws RecognitionException {
		Identifier_resultContext _localctx = new Identifier_resultContext(_ctx, getState());
		enterRule(_localctx, 742, RULE_identifier_result);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9523);
			qualified_data_item();
			setState(9531);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1636,_ctx) ) {
			case 1:
				{
				setState(9527);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9524);
					arithmetic_separator();
					}
					}
					setState(9529);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(9530);
				subscripting();
				}
				break;
			}
			setState(9540);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1638,_ctx) ) {
			case 1:
				{
				setState(9536);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9533);
					arithmetic_separator();
					}
					}
					setState(9538);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(9539);
				reference_modification();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class IdentifierContext extends ParserRuleContext {
		public Identifier_resultContext identifier_result() {
			return getRuleContext(Identifier_resultContext.class,0);
		}
		public TerminalNode FUNCTION() { return getToken(cobolParser.FUNCTION, 0); }
		public Function_nameContext function_name() {
			return getRuleContext(Function_nameContext.class,0);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public ArgumentsContext arguments() {
			return getRuleContext(ArgumentsContext.class,0);
		}
		public Reference_modificationContext reference_modification() {
			return getRuleContext(Reference_modificationContext.class,0);
		}
		public IdentifierContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identifier; }
	}

	public final IdentifierContext identifier() throws RecognitionException {
		IdentifierContext _localctx = new IdentifierContext(_ctx, getState());
		enterRule(_localctx, 744, RULE_identifier);
		int _la;
		try {
			setState(9569);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(9542);
				identifier_result();
				}
				break;
			case FUNCTION:
				enterOuterAlt(_localctx, 2);
				{
				setState(9543);
				match(FUNCTION);
				setState(9547);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9544);
					arithmetic_separator();
					}
					}
					setState(9549);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(9550);
				function_name();
				setState(9558);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1641,_ctx) ) {
				case 1:
					{
					setState(9554);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(9551);
						arithmetic_separator();
						}
						}
						setState(9556);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(9557);
					arguments();
					}
					break;
				}
				setState(9567);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1643,_ctx) ) {
				case 1:
					{
					setState(9563);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(9560);
						arithmetic_separator();
						}
						}
						setState(9565);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(9566);
					reference_modification();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArgumentsContext extends ParserRuleContext {
		public SubscriptingContext subscripting() {
			return getRuleContext(SubscriptingContext.class,0);
		}
		public ArgumentsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arguments; }
	}

	public final ArgumentsContext arguments() throws RecognitionException {
		ArgumentsContext _localctx = new ArgumentsContext(_ctx, getState());
		enterRule(_localctx, 746, RULE_arguments);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9571);
			subscripting();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SubscriptingContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public List<TerminalNode> ALL() { return getTokens(cobolParser.ALL); }
		public TerminalNode ALL(int i) {
			return getToken(cobolParser.ALL, i);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public SubscriptingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_subscripting; }
	}

	public final SubscriptingContext subscripting() throws RecognitionException {
		SubscriptingContext _localctx = new SubscriptingContext(_ctx, getState());
		enterRule(_localctx, 748, RULE_subscripting);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(9573);
			match(LPAREN_);
			setState(9577);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(9574);
				arithmetic_separator();
				}
				}
				setState(9579);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(9582);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1646,_ctx) ) {
			case 1:
				{
				setState(9580);
				arithmetic_expression(0);
				}
				break;
			case 2:
				{
				setState(9581);
				match(ALL);
				}
				break;
			}
			setState(9596);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1649,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(9587);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (COMMA_ - 422)) | (1L << (SEMI_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
						{
						{
						setState(9584);
						separator();
						}
						}
						setState(9589);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(9592);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1648,_ctx) ) {
					case 1:
						{
						setState(9590);
						arithmetic_expression(0);
						}
						break;
					case 2:
						{
						setState(9591);
						match(ALL);
						}
						break;
					}
					}
					} 
				}
				setState(9598);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1649,_ctx);
			}
			setState(9602);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(9599);
				arithmetic_separator();
				}
				}
				setState(9604);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(9605);
			match(RPAREN_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Reference_modificationContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public Leftmost_character_positionContext leftmost_character_position() {
			return getRuleContext(Leftmost_character_positionContext.class,0);
		}
		public TerminalNode COLON_() { return getToken(cobolParser.COLON_, 0); }
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public LengthContext length() {
			return getRuleContext(LengthContext.class,0);
		}
		public Reference_modificationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_reference_modification; }
	}

	public final Reference_modificationContext reference_modification() throws RecognitionException {
		Reference_modificationContext _localctx = new Reference_modificationContext(_ctx, getState());
		enterRule(_localctx, 750, RULE_reference_modification);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9607);
			match(LPAREN_);
			setState(9611);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(9608);
				arithmetic_separator();
				}
				}
				setState(9613);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(9614);
			leftmost_character_position();
			setState(9618);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(9615);
				arithmetic_separator();
				}
				}
				setState(9620);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(9621);
			match(COLON_);
			setState(9629);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1654,_ctx) ) {
			case 1:
				{
				setState(9625);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
					{
					{
					setState(9622);
					arithmetic_separator();
					}
					}
					setState(9627);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(9628);
				length();
				}
				break;
			}
			setState(9634);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 422)) & ~0x3f) == 0 && ((1L << (_la - 422)) & ((1L << (START_SLASH_ - 422)) | (1L << (START_STAR_ - 422)) | (1L << (START_FOUR_SPACES - 422)) | (1L << (WHITESPACE - 422)) | (1L << (NEWLINE - 422)))) != 0)) {
				{
				{
				setState(9631);
				arithmetic_separator();
				}
				}
				setState(9636);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(9637);
			match(RPAREN_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Leftmost_character_positionContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public Leftmost_character_positionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_leftmost_character_position; }
	}

	public final Leftmost_character_positionContext leftmost_character_position() throws RecognitionException {
		Leftmost_character_positionContext _localctx = new Leftmost_character_positionContext(_ctx, getState());
		enterRule(_localctx, 752, RULE_leftmost_character_position);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9639);
			arithmetic_expression(0);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class LengthContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public LengthContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_length; }
	}

	public final LengthContext length() throws RecognitionException {
		LengthContext _localctx = new LengthContext(_ctx, getState());
		enterRule(_localctx, 754, RULE_length);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9641);
			arithmetic_expression(0);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Function_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Function_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_function_name; }
	}

	public final Function_nameContext function_name() throws RecognitionException {
		Function_nameContext _localctx = new Function_nameContext(_ctx, getState());
		enterRule(_localctx, 756, RULE_function_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(9643);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 358:
			return arithmetic_expression_sempred((Arithmetic_expressionContext)_localctx, predIndex);
		case 362:
			return logic_expression_sempred((Logic_expressionContext)_localctx, predIndex);
		case 364:
			return logic_condition_sempred((Logic_conditionContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean arithmetic_expression_sempred(Arithmetic_expressionContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0:
			return precpred(_ctx, 4);
		}
		return true;
	}
	private boolean logic_expression_sempred(Logic_expressionContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1:
			return precpred(_ctx, 6);
		}
		return true;
	}
	private boolean logic_condition_sempred(Logic_conditionContext _localctx, int predIndex) {
		switch (predIndex) {
		case 2:
			return precpred(_ctx, 1);
		}
		return true;
	}

	private static final int _serializedATNSegments = 5;
	private static final String _serializedATNSegment0 =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\3\u01c7\u25b0\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4"+
		"`\t`\4a\ta\4b\tb\4c\tc\4d\td\4e\te\4f\tf\4g\tg\4h\th\4i\ti\4j\tj\4k\t"+
		"k\4l\tl\4m\tm\4n\tn\4o\to\4p\tp\4q\tq\4r\tr\4s\ts\4t\tt\4u\tu\4v\tv\4"+
		"w\tw\4x\tx\4y\ty\4z\tz\4{\t{\4|\t|\4}\t}\4~\t~\4\177\t\177\4\u0080\t\u0080"+
		"\4\u0081\t\u0081\4\u0082\t\u0082\4\u0083\t\u0083\4\u0084\t\u0084\4\u0085"+
		"\t\u0085\4\u0086\t\u0086\4\u0087\t\u0087\4\u0088\t\u0088\4\u0089\t\u0089"+
		"\4\u008a\t\u008a\4\u008b\t\u008b\4\u008c\t\u008c\4\u008d\t\u008d\4\u008e"+
		"\t\u008e\4\u008f\t\u008f\4\u0090\t\u0090\4\u0091\t\u0091\4\u0092\t\u0092"+
		"\4\u0093\t\u0093\4\u0094\t\u0094\4\u0095\t\u0095\4\u0096\t\u0096\4\u0097"+
		"\t\u0097\4\u0098\t\u0098\4\u0099\t\u0099\4\u009a\t\u009a\4\u009b\t\u009b"+
		"\4\u009c\t\u009c\4\u009d\t\u009d\4\u009e\t\u009e\4\u009f\t\u009f\4\u00a0"+
		"\t\u00a0\4\u00a1\t\u00a1\4\u00a2\t\u00a2\4\u00a3\t\u00a3\4\u00a4\t\u00a4"+
		"\4\u00a5\t\u00a5\4\u00a6\t\u00a6\4\u00a7\t\u00a7\4\u00a8\t\u00a8\4\u00a9"+
		"\t\u00a9\4\u00aa\t\u00aa\4\u00ab\t\u00ab\4\u00ac\t\u00ac\4\u00ad\t\u00ad"+
		"\4\u00ae\t\u00ae\4\u00af\t\u00af\4\u00b0\t\u00b0\4\u00b1\t\u00b1\4\u00b2"+
		"\t\u00b2\4\u00b3\t\u00b3\4\u00b4\t\u00b4\4\u00b5\t\u00b5\4\u00b6\t\u00b6"+
		"\4\u00b7\t\u00b7\4\u00b8\t\u00b8\4\u00b9\t\u00b9\4\u00ba\t\u00ba\4\u00bb"+
		"\t\u00bb\4\u00bc\t\u00bc\4\u00bd\t\u00bd\4\u00be\t\u00be\4\u00bf\t\u00bf"+
		"\4\u00c0\t\u00c0\4\u00c1\t\u00c1\4\u00c2\t\u00c2\4\u00c3\t\u00c3\4\u00c4"+
		"\t\u00c4\4\u00c5\t\u00c5\4\u00c6\t\u00c6\4\u00c7\t\u00c7\4\u00c8\t\u00c8"+
		"\4\u00c9\t\u00c9\4\u00ca\t\u00ca\4\u00cb\t\u00cb\4\u00cc\t\u00cc\4\u00cd"+
		"\t\u00cd\4\u00ce\t\u00ce\4\u00cf\t\u00cf\4\u00d0\t\u00d0\4\u00d1\t\u00d1"+
		"\4\u00d2\t\u00d2\4\u00d3\t\u00d3\4\u00d4\t\u00d4\4\u00d5\t\u00d5\4\u00d6"+
		"\t\u00d6\4\u00d7\t\u00d7\4\u00d8\t\u00d8\4\u00d9\t\u00d9\4\u00da\t\u00da"+
		"\4\u00db\t\u00db\4\u00dc\t\u00dc\4\u00dd\t\u00dd\4\u00de\t\u00de\4\u00df"+
		"\t\u00df\4\u00e0\t\u00e0\4\u00e1\t\u00e1\4\u00e2\t\u00e2\4\u00e3\t\u00e3"+
		"\4\u00e4\t\u00e4\4\u00e5\t\u00e5\4\u00e6\t\u00e6\4\u00e7\t\u00e7\4\u00e8"+
		"\t\u00e8\4\u00e9\t\u00e9\4\u00ea\t\u00ea\4\u00eb\t\u00eb\4\u00ec\t\u00ec"+
		"\4\u00ed\t\u00ed\4\u00ee\t\u00ee\4\u00ef\t\u00ef\4\u00f0\t\u00f0\4\u00f1"+
		"\t\u00f1\4\u00f2\t\u00f2\4\u00f3\t\u00f3\4\u00f4\t\u00f4\4\u00f5\t\u00f5"+
		"\4\u00f6\t\u00f6\4\u00f7\t\u00f7\4\u00f8\t\u00f8\4\u00f9\t\u00f9\4\u00fa"+
		"\t\u00fa\4\u00fb\t\u00fb\4\u00fc\t\u00fc\4\u00fd\t\u00fd\4\u00fe\t\u00fe"+
		"\4\u00ff\t\u00ff\4\u0100\t\u0100\4\u0101\t\u0101\4\u0102\t\u0102\4\u0103"+
		"\t\u0103\4\u0104\t\u0104\4\u0105\t\u0105\4\u0106\t\u0106\4\u0107\t\u0107"+
		"\4\u0108\t\u0108\4\u0109\t\u0109\4\u010a\t\u010a\4\u010b\t\u010b\4\u010c"+
		"\t\u010c\4\u010d\t\u010d\4\u010e\t\u010e\4\u010f\t\u010f\4\u0110\t\u0110"+
		"\4\u0111\t\u0111\4\u0112\t\u0112\4\u0113\t\u0113\4\u0114\t\u0114\4\u0115"+
		"\t\u0115\4\u0116\t\u0116\4\u0117\t\u0117\4\u0118\t\u0118\4\u0119\t\u0119"+
		"\4\u011a\t\u011a\4\u011b\t\u011b\4\u011c\t\u011c\4\u011d\t\u011d\4\u011e"+
		"\t\u011e\4\u011f\t\u011f\4\u0120\t\u0120\4\u0121\t\u0121\4\u0122\t\u0122"+
		"\4\u0123\t\u0123\4\u0124\t\u0124\4\u0125\t\u0125\4\u0126\t\u0126\4\u0127"+
		"\t\u0127\4\u0128\t\u0128\4\u0129\t\u0129\4\u012a\t\u012a\4\u012b\t\u012b"+
		"\4\u012c\t\u012c\4\u012d\t\u012d\4\u012e\t\u012e\4\u012f\t\u012f\4\u0130"+
		"\t\u0130\4\u0131\t\u0131\4\u0132\t\u0132\4\u0133\t\u0133\4\u0134\t\u0134"+
		"\4\u0135\t\u0135\4\u0136\t\u0136\4\u0137\t\u0137\4\u0138\t\u0138\4\u0139"+
		"\t\u0139\4\u013a\t\u013a\4\u013b\t\u013b\4\u013c\t\u013c\4\u013d\t\u013d"+
		"\4\u013e\t\u013e\4\u013f\t\u013f\4\u0140\t\u0140\4\u0141\t\u0141\4\u0142"+
		"\t\u0142\4\u0143\t\u0143\4\u0144\t\u0144\4\u0145\t\u0145\4\u0146\t\u0146"+
		"\4\u0147\t\u0147\4\u0148\t\u0148\4\u0149\t\u0149\4\u014a\t\u014a\4\u014b"+
		"\t\u014b\4\u014c\t\u014c\4\u014d\t\u014d\4\u014e\t\u014e\4\u014f\t\u014f"+
		"\4\u0150\t\u0150\4\u0151\t\u0151\4\u0152\t\u0152\4\u0153\t\u0153\4\u0154"+
		"\t\u0154\4\u0155\t\u0155\4\u0156\t\u0156\4\u0157\t\u0157\4\u0158\t\u0158"+
		"\4\u0159\t\u0159\4\u015a\t\u015a\4\u015b\t\u015b\4\u015c\t\u015c\4\u015d"+
		"\t\u015d\4\u015e\t\u015e\4\u015f\t\u015f\4\u0160\t\u0160\4\u0161\t\u0161"+
		"\4\u0162\t\u0162\4\u0163\t\u0163\4\u0164\t\u0164\4\u0165\t\u0165\4\u0166"+
		"\t\u0166\4\u0167\t\u0167\4\u0168\t\u0168\4\u0169\t\u0169\4\u016a\t\u016a"+
		"\4\u016b\t\u016b\4\u016c\t\u016c\4\u016d\t\u016d\4\u016e\t\u016e\4\u016f"+
		"\t\u016f\4\u0170\t\u0170\4\u0171\t\u0171\4\u0172\t\u0172\4\u0173\t\u0173"+
		"\4\u0174\t\u0174\4\u0175\t\u0175\4\u0176\t\u0176\4\u0177\t\u0177\4\u0178"+
		"\t\u0178\4\u0179\t\u0179\4\u017a\t\u017a\4\u017b\t\u017b\4\u017c\t\u017c"+
		"\3\2\3\2\7\2\u02fb\n\2\f\2\16\2\u02fe\13\2\3\2\3\2\3\3\3\3\3\4\3\4\5\4"+
		"\u0306\n\4\3\5\3\5\3\5\3\5\5\5\u030c\n\5\3\6\3\6\5\6\u0310\n\6\3\7\3\7"+
		"\3\7\3\7\3\7\3\7\5\7\u0318\n\7\3\b\3\b\3\b\3\b\5\b\u031e\n\b\3\t\3\t\7"+
		"\t\u0322\n\t\f\t\16\t\u0325\13\t\3\t\3\t\3\t\7\t\u032a\n\t\f\t\16\t\u032d"+
		"\13\t\3\t\5\t\u0330\n\t\3\n\3\n\5\n\u0334\n\n\3\n\5\n\u0337\n\n\3\n\5"+
		"\n\u033a\n\n\3\13\3\13\5\13\u033e\n\13\3\13\3\13\7\13\u0342\n\13\f\13"+
		"\16\13\u0345\13\13\7\13\u0347\n\13\f\13\16\13\u034a\13\13\3\13\3\13\7"+
		"\13\u034e\n\13\f\13\16\13\u0351\13\13\7\13\u0353\n\13\f\13\16\13\u0356"+
		"\13\13\5\13\u0358\n\13\3\13\7\13\u035b\n\13\f\13\16\13\u035e\13\13\3\13"+
		"\5\13\u0361\n\13\3\13\7\13\u0364\n\13\f\13\16\13\u0367\13\13\3\13\3\13"+
		"\7\13\u036b\n\13\f\13\16\13\u036e\13\13\7\13\u0370\n\13\f\13\16\13\u0373"+
		"\13\13\3\f\3\f\6\f\u0377\n\f\r\f\16\f\u0378\3\f\3\f\6\f\u037d\n\f\r\f"+
		"\16\f\u037e\3\f\3\f\5\f\u0383\n\f\3\f\7\f\u0386\n\f\f\f\16\f\u0389\13"+
		"\f\3\f\3\f\7\f\u038d\n\f\f\f\16\f\u0390\13\f\3\r\3\r\6\r\u0394\n\r\r\r"+
		"\16\r\u0395\3\r\3\r\6\r\u039a\n\r\r\r\16\r\u039b\3\r\3\r\5\r\u03a0\n\r"+
		"\3\r\6\r\u03a3\n\r\r\r\16\r\u03a4\3\r\3\r\5\r\u03a9\n\r\3\r\7\r\u03ac"+
		"\n\r\f\r\16\r\u03af\13\r\3\r\3\r\7\r\u03b3\n\r\f\r\16\r\u03b6\13\r\3\16"+
		"\3\16\3\17\3\17\7\17\u03bc\n\17\f\17\16\17\u03bf\13\17\3\17\3\17\7\17"+
		"\u03c3\n\17\f\17\16\17\u03c6\13\17\3\17\3\17\7\17\u03ca\n\17\f\17\16\17"+
		"\u03cd\13\17\6\17\u03cf\n\17\r\17\16\17\u03d0\3\17\3\17\6\17\u03d5\n\17"+
		"\r\17\16\17\u03d6\3\17\3\17\7\17\u03db\n\17\f\17\16\17\u03de\13\17\3\17"+
		"\3\17\7\17\u03e2\n\17\f\17\16\17\u03e5\13\17\3\20\3\20\3\20\6\20\u03ea"+
		"\n\20\r\20\16\20\u03eb\3\20\3\20\7\20\u03f0\n\20\f\20\16\20\u03f3\13\20"+
		"\3\21\3\21\3\22\3\22\7\22\u03f9\n\22\f\22\16\22\u03fc\13\22\3\22\3\22"+
		"\7\22\u0400\n\22\f\22\16\22\u0403\13\22\3\22\3\22\7\22\u0407\n\22\f\22"+
		"\16\22\u040a\13\22\7\22\u040c\n\22\f\22\16\22\u040f\13\22\3\23\3\23\7"+
		"\23\u0413\n\23\f\23\16\23\u0416\13\23\6\23\u0418\n\23\r\23\16\23\u0419"+
		"\3\23\7\23\u041d\n\23\f\23\16\23\u0420\13\23\3\23\3\23\7\23\u0424\n\23"+
		"\f\23\16\23\u0427\13\23\5\23\u0429\n\23\3\24\3\24\6\24\u042d\n\24\r\24"+
		"\16\24\u042e\3\24\3\24\5\24\u0433\n\24\3\24\6\24\u0436\n\24\r\24\16\24"+
		"\u0437\3\24\3\24\6\24\u043c\n\24\r\24\16\24\u043d\3\24\3\24\5\24\u0442"+
		"\n\24\3\24\6\24\u0445\n\24\r\24\16\24\u0446\3\24\3\24\6\24\u044b\n\24"+
		"\r\24\16\24\u044c\3\24\3\24\6\24\u0451\n\24\r\24\16\24\u0452\3\24\3\24"+
		"\5\24\u0457\n\24\3\24\6\24\u045a\n\24\r\24\16\24\u045b\3\24\3\24\7\24"+
		"\u0460\n\24\f\24\16\24\u0463\13\24\3\24\3\24\7\24\u0467\n\24\f\24\16\24"+
		"\u046a\13\24\3\24\3\24\6\24\u046e\n\24\r\24\16\24\u046f\3\24\3\24\6\24"+
		"\u0474\n\24\r\24\16\24\u0475\3\24\3\24\5\24\u047a\n\24\3\24\7\24\u047d"+
		"\n\24\f\24\16\24\u0480\13\24\3\24\3\24\7\24\u0484\n\24\f\24\16\24\u0487"+
		"\13\24\3\25\3\25\3\26\3\26\6\26\u048d\n\26\r\26\16\26\u048e\3\26\3\26"+
		"\7\26\u0493\n\26\f\26\16\26\u0496\13\26\3\26\3\26\3\26\3\26\5\26\u049c"+
		"\n\26\3\27\3\27\6\27\u04a0\n\27\r\27\16\27\u04a1\3\27\3\27\6\27\u04a6"+
		"\n\27\r\27\16\27\u04a7\3\27\3\27\5\27\u04ac\n\27\3\27\7\27\u04af\n\27"+
		"\f\27\16\27\u04b2\13\27\3\27\3\27\7\27\u04b6\n\27\f\27\16\27\u04b9\13"+
		"\27\3\30\3\30\3\31\3\31\3\32\3\32\6\32\u04c1\n\32\r\32\16\32\u04c2\3\32"+
		"\3\32\6\32\u04c7\n\32\r\32\16\32\u04c8\3\32\3\32\7\32\u04cd\n\32\f\32"+
		"\16\32\u04d0\13\32\3\33\3\33\6\33\u04d4\n\33\r\33\16\33\u04d5\3\33\3\33"+
		"\3\34\3\34\7\34\u04dc\n\34\f\34\16\34\u04df\13\34\3\34\3\34\3\34\3\34"+
		"\7\34\u04e5\n\34\f\34\16\34\u04e8\13\34\3\34\3\34\3\34\5\34\u04ed\n\34"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\5\35\u050d\n\35\3\36\3\36\6\36\u0511\n\36\r\36\16\36\u0512"+
		"\3\36\3\36\6\36\u0517\n\36\r\36\16\36\u0518\3\36\3\36\6\36\u051d\n\36"+
		"\r\36\16\36\u051e\3\36\3\36\5\36\u0523\n\36\3\36\6\36\u0526\n\36\r\36"+
		"\16\36\u0527\3\36\3\36\6\36\u052c\n\36\r\36\16\36\u052d\3\36\3\36\6\36"+
		"\u0532\n\36\r\36\16\36\u0533\3\36\3\36\5\36\u0538\n\36\5\36\u053a\n\36"+
		"\3\36\6\36\u053d\n\36\r\36\16\36\u053e\3\36\3\36\5\36\u0543\n\36\3\36"+
		"\6\36\u0546\n\36\r\36\16\36\u0547\3\36\3\36\5\36\u054c\n\36\3\37\3\37"+
		"\3 \3 \6 \u0552\n \r \16 \u0553\3 \3 \6 \u0558\n \r \16 \u0559\3 \3 \5"+
		" \u055e\n \3 \6 \u0561\n \r \16 \u0562\3 \3 \6 \u0567\n \r \16 \u0568"+
		"\3 \3 \5 \u056d\n \3 \6 \u0570\n \r \16 \u0571\3 \3 \6 \u0576\n \r \16"+
		" \u0577\3 \3 \6 \u057c\n \r \16 \u057d\3 \3 \5 \u0582\n \3 \6 \u0585\n"+
		" \r \16 \u0586\3 \3 \5 \u058b\n \3!\3!\3\"\3\"\6\"\u0591\n\"\r\"\16\""+
		"\u0592\3\"\3\"\6\"\u0597\n\"\r\"\16\"\u0598\3\"\3\"\6\"\u059d\n\"\r\""+
		"\16\"\u059e\3\"\3\"\5\"\u05a3\n\"\3#\3#\3$\3$\3%\3%\6%\u05ab\n%\r%\16"+
		"%\u05ac\3%\3%\6%\u05b1\n%\r%\16%\u05b2\3%\3%\6%\u05b7\n%\r%\16%\u05b8"+
		"\3%\3%\6%\u05bd\n%\r%\16%\u05be\3%\3%\5%\u05c3\n%\3%\6%\u05c6\n%\r%\16"+
		"%\u05c7\3%\3%\5%\u05cc\n%\3%\6%\u05cf\n%\r%\16%\u05d0\3%\3%\6%\u05d5\n"+
		"%\r%\16%\u05d6\5%\u05d9\n%\3%\3%\5%\u05dd\n%\3&\3&\3\'\3\'\3(\3(\6(\u05e5"+
		"\n(\r(\16(\u05e6\3(\3(\6(\u05eb\n(\r(\16(\u05ec\3(\3(\5(\u05f1\n(\3(\6"+
		"(\u05f4\n(\r(\16(\u05f5\3(\3(\5(\u05fa\n(\3(\6(\u05fd\n(\r(\16(\u05fe"+
		"\3(\3(\6(\u0603\n(\r(\16(\u0604\3(\3(\5(\u0609\n(\3(\6(\u060c\n(\r(\16"+
		"(\u060d\3(\3(\6(\u0612\n(\r(\16(\u0613\3(\3(\6(\u0618\n(\r(\16(\u0619"+
		"\3(\3(\5(\u061e\n(\3(\6(\u0621\n(\r(\16(\u0622\3(\3(\5(\u0627\n(\3(\6"+
		"(\u062a\n(\r(\16(\u062b\3(\3(\6(\u0630\n(\r(\16(\u0631\3(\3(\5(\u0636"+
		"\n(\3(\6(\u0639\n(\r(\16(\u063a\3(\3(\6(\u063f\n(\r(\16(\u0640\3(\3(\5"+
		"(\u0645\n(\5(\u0647\n(\3(\6(\u064a\n(\r(\16(\u064b\3(\3(\5(\u0650\n(\5"+
		"(\u0652\n(\3(\6(\u0655\n(\r(\16(\u0656\3(\3(\5(\u065b\n(\3)\3)\6)\u065f"+
		"\n)\r)\16)\u0660\5)\u0663\n)\3)\3)\6)\u0667\n)\r)\16)\u0668\5)\u066b\n"+
		")\3)\3)\3)\6)\u0670\n)\r)\16)\u0671\3)\3)\5)\u0676\n)\3)\6)\u0679\n)\r"+
		")\16)\u067a\3)\3)\5)\u067f\n)\3)\3)\6)\u0683\n)\r)\16)\u0684\3)\3)\3)"+
		"\3)\6)\u068b\n)\r)\16)\u068c\3)\3)\5)\u0691\n)\5)\u0693\n)\5)\u0695\n"+
		")\3*\3*\6*\u0699\n*\r*\16*\u069a\3*\3*\6*\u069f\n*\r*\16*\u06a0\3*\3*"+
		"\6*\u06a5\n*\r*\16*\u06a6\3*\3*\5*\u06ab\n*\5*\u06ad\n*\3*\6*\u06b0\n"+
		"*\r*\16*\u06b1\3*\3*\3*\5*\u06b7\n*\5*\u06b9\n*\3*\6*\u06bc\n*\r*\16*"+
		"\u06bd\3*\3*\6*\u06c2\n*\r*\16*\u06c3\3*\6*\u06c7\n*\r*\16*\u06c8\3*\3"+
		"*\5*\u06cd\n*\3+\3+\5+\u06d1\n+\3+\6+\u06d4\n+\r+\16+\u06d5\3+\3+\3,\3"+
		",\6,\u06dc\n,\r,\16,\u06dd\5,\u06e0\n,\3,\3,\6,\u06e4\n,\r,\16,\u06e5"+
		"\3,\3,\3-\3-\6-\u06ec\n-\r-\16-\u06ed\5-\u06f0\n-\3-\3-\6-\u06f4\n-\r"+
		"-\16-\u06f5\3-\3-\3.\3.\6.\u06fc\n.\r.\16.\u06fd\5.\u0700\n.\3.\3.\6."+
		"\u0704\n.\r.\16.\u0705\3.\3.\6.\u070a\n.\r.\16.\u070b\3.\3.\6.\u0710\n"+
		".\r.\16.\u0711\3.\3.\6.\u0716\n.\r.\16.\u0717\3.\3.\6.\u071c\n.\r.\16"+
		".\u071d\3.\3.\6.\u0722\n.\r.\16.\u0723\3.\3.\6.\u0728\n.\r.\16.\u0729"+
		"\3.\3.\7.\u072e\n.\f.\16.\u0731\13.\3/\3/\6/\u0735\n/\r/\16/\u0736\3/"+
		"\3/\6/\u073b\n/\r/\16/\u073c\3/\3/\6/\u0741\n/\r/\16/\u0742\3/\3/\6/\u0747"+
		"\n/\r/\16/\u0748\3/\3/\3\60\3\60\5\60\u074f\n\60\3\61\3\61\5\61\u0753"+
		"\n\61\3\62\3\62\3\63\3\63\6\63\u0759\n\63\r\63\16\63\u075a\3\63\3\63\6"+
		"\63\u075f\n\63\r\63\16\63\u0760\3\63\3\63\6\63\u0765\n\63\r\63\16\63\u0766"+
		"\3\63\3\63\6\63\u076b\n\63\r\63\16\63\u076c\3\63\3\63\6\63\u0771\n\63"+
		"\r\63\16\63\u0772\3\63\3\63\6\63\u0777\n\63\r\63\16\63\u0778\5\63\u077b"+
		"\n\63\3\63\3\63\6\63\u077f\n\63\r\63\16\63\u0780\3\63\3\63\5\63\u0785"+
		"\n\63\6\63\u0787\n\63\r\63\16\63\u0788\6\63\u078b\n\63\r\63\16\63\u078c"+
		"\5\63\u078f\n\63\3\64\3\64\6\64\u0793\n\64\r\64\16\64\u0794\3\64\3\64"+
		"\6\64\u0799\n\64\r\64\16\64\u079a\3\64\3\64\6\64\u079f\n\64\r\64\16\64"+
		"\u07a0\5\64\u07a3\n\64\3\64\3\64\6\64\u07a7\n\64\r\64\16\64\u07a8\3\64"+
		"\3\64\5\64\u07ad\n\64\3\64\6\64\u07b0\n\64\r\64\16\64\u07b1\3\64\3\64"+
		"\5\64\u07b6\n\64\6\64\u07b8\n\64\r\64\16\64\u07b9\3\65\3\65\6\65\u07be"+
		"\n\65\r\65\16\65\u07bf\5\65\u07c2\n\65\3\65\3\65\3\65\6\65\u07c7\n\65"+
		"\r\65\16\65\u07c8\3\65\3\65\6\65\u07cd\n\65\r\65\16\65\u07ce\3\65\3\65"+
		"\5\65\u07d3\n\65\3\65\3\65\3\65\6\65\u07d8\n\65\r\65\16\65\u07d9\3\65"+
		"\3\65\5\65\u07de\n\65\3\65\6\65\u07e1\n\65\r\65\16\65\u07e2\3\65\3\65"+
		"\5\65\u07e7\n\65\3\65\3\65\6\65\u07eb\n\65\r\65\16\65\u07ec\3\65\3\65"+
		"\6\65\u07f1\n\65\r\65\16\65\u07f2\3\65\3\65\3\65\3\65\6\65\u07f9\n\65"+
		"\r\65\16\65\u07fa\3\65\3\65\5\65\u07ff\n\65\3\65\6\65\u0802\n\65\r\65"+
		"\16\65\u0803\3\65\3\65\5\65\u0808\n\65\3\65\3\65\6\65\u080c\n\65\r\65"+
		"\16\65\u080d\3\65\3\65\6\65\u0812\n\65\r\65\16\65\u0813\3\65\3\65\3\65"+
		"\3\65\6\65\u081a\n\65\r\65\16\65\u081b\3\65\3\65\5\65\u0820\n\65\3\65"+
		"\6\65\u0823\n\65\r\65\16\65\u0824\3\65\3\65\5\65\u0829\n\65\3\65\3\65"+
		"\6\65\u082d\n\65\r\65\16\65\u082e\3\65\3\65\6\65\u0833\n\65\r\65\16\65"+
		"\u0834\3\65\3\65\5\65\u0839\n\65\5\65\u083b\n\65\5\65\u083d\n\65\3\66"+
		"\3\66\6\66\u0841\n\66\r\66\16\66\u0842\3\66\3\66\6\66\u0847\n\66\r\66"+
		"\16\66\u0848\3\66\3\66\6\66\u084d\n\66\r\66\16\66\u084e\3\66\3\66\6\66"+
		"\u0853\n\66\r\66\16\66\u0854\3\66\3\66\5\66\u0859\n\66\3\66\6\66\u085c"+
		"\n\66\r\66\16\66\u085d\3\66\3\66\6\66\u0862\n\66\r\66\16\66\u0863\3\66"+
		"\3\66\5\66\u0868\n\66\6\66\u086a\n\66\r\66\16\66\u086b\3\66\6\66\u086f"+
		"\n\66\r\66\16\66\u0870\3\66\3\66\5\66\u0875\n\66\3\66\6\66\u0878\n\66"+
		"\r\66\16\66\u0879\3\66\3\66\5\66\u087e\n\66\3\67\3\67\5\67\u0882\n\67"+
		"\38\38\68\u0886\n8\r8\168\u0887\38\38\68\u088c\n8\r8\168\u088d\38\38\6"+
		"8\u0892\n8\r8\168\u0893\38\68\u0897\n8\r8\168\u0898\38\38\68\u089d\n8"+
		"\r8\168\u089e\58\u08a1\n8\38\38\68\u08a5\n8\r8\168\u08a6\38\38\68\u08ab"+
		"\n8\r8\168\u08ac\58\u08af\n8\38\38\58\u08b3\n8\38\68\u08b6\n8\r8\168\u08b7"+
		"\38\38\68\u08bc\n8\r8\168\u08bd\38\38\68\u08c2\n8\r8\168\u08c3\38\68\u08c7"+
		"\n8\r8\168\u08c8\38\38\58\u08cd\n8\39\39\69\u08d1\n9\r9\169\u08d2\39\3"+
		"9\69\u08d7\n9\r9\169\u08d8\39\39\69\u08dd\n9\r9\169\u08de\59\u08e1\n9"+
		"\39\39\69\u08e5\n9\r9\169\u08e6\39\39\69\u08eb\n9\r9\169\u08ec\39\39\5"+
		"9\u08f1\n9\3:\3:\3;\3;\3<\3<\3<\3=\3=\3>\3>\6>\u08fe\n>\r>\16>\u08ff\5"+
		">\u0902\n>\3>\3>\6>\u0906\n>\r>\16>\u0907\3>\3>\5>\u090c\n>\3>\6>\u090f"+
		"\n>\r>\16>\u0910\3>\3>\6>\u0915\n>\r>\16>\u0916\3?\3?\3@\3@\3A\3A\6A\u091f"+
		"\nA\rA\16A\u0920\3A\3A\6A\u0925\nA\rA\16A\u0926\3A\3A\6A\u092b\nA\rA\16"+
		"A\u092c\3A\3A\5A\u0931\nA\3A\3A\5A\u0935\nA\3B\3B\6B\u0939\nB\rB\16B\u093a"+
		"\3B\3B\6B\u093f\nB\rB\16B\u0940\3B\3B\6B\u0945\nB\rB\16B\u0946\3B\3B\6"+
		"B\u094b\nB\rB\16B\u094c\3B\3B\7B\u0951\nB\fB\16B\u0954\13B\3C\3C\3D\3"+
		"D\3E\3E\6E\u095c\nE\rE\16E\u095d\3E\3E\5E\u0962\nE\6E\u0964\nE\rE\16E"+
		"\u0965\3F\3F\6F\u096a\nF\rF\16F\u096b\3F\3F\6F\u0970\nF\rF\16F\u0971\3"+
		"F\3F\6F\u0976\nF\rF\16F\u0977\3F\3F\6F\u097c\nF\rF\16F\u097d\3F\3F\7F"+
		"\u0982\nF\fF\16F\u0985\13F\6F\u0987\nF\rF\16F\u0988\3G\3G\3H\3H\6H\u098f"+
		"\nH\rH\16H\u0990\3H\3H\6H\u0995\nH\rH\16H\u0996\3H\3H\6H\u099b\nH\rH\16"+
		"H\u099c\3H\3H\7H\u09a1\nH\fH\16H\u09a4\13H\3I\3I\3J\3J\6J\u09aa\nJ\rJ"+
		"\16J\u09ab\3J\3J\6J\u09b0\nJ\rJ\16J\u09b1\3K\3K\6K\u09b6\nK\rK\16K\u09b7"+
		"\3K\3K\6K\u09bc\nK\rK\16K\u09bd\3K\3K\5K\u09c2\nK\6K\u09c4\nK\rK\16K\u09c5"+
		"\3L\3L\6L\u09ca\nL\rL\16L\u09cb\3L\3L\7L\u09d0\nL\fL\16L\u09d3\13L\3M"+
		"\3M\6M\u09d7\nM\rM\16M\u09d8\3M\3M\5M\u09dd\nM\3M\6M\u09e0\nM\rM\16M\u09e1"+
		"\3M\3M\3N\3N\6N\u09e8\nN\rN\16N\u09e9\3N\3N\6N\u09ee\nN\rN\16N\u09ef\3"+
		"N\3N\7N\u09f4\nN\fN\16N\u09f7\13N\6N\u09f9\nN\rN\16N\u09fa\3O\3O\3O\5"+
		"O\u0a00\nO\3P\3P\3Q\3Q\3R\3R\3S\3S\6S\u0a0a\nS\rS\16S\u0a0b\3S\3S\6S\u0a10"+
		"\nS\rS\16S\u0a11\3T\3T\6T\u0a16\nT\rT\16T\u0a17\3T\3T\6T\u0a1c\nT\rT\16"+
		"T\u0a1d\3T\6T\u0a21\nT\rT\16T\u0a22\3T\3T\7T\u0a27\nT\fT\16T\u0a2a\13"+
		"T\3U\3U\6U\u0a2e\nU\rU\16U\u0a2f\3U\3U\6U\u0a34\nU\rU\16U\u0a35\3U\3U"+
		"\6U\u0a3a\nU\rU\16U\u0a3b\5U\u0a3e\nU\3U\3U\6U\u0a42\nU\rU\16U\u0a43\3"+
		"U\3U\6U\u0a48\nU\rU\16U\u0a49\3V\3V\5V\u0a4e\nV\3W\3W\3X\3X\6X\u0a54\n"+
		"X\rX\16X\u0a55\3X\3X\6X\u0a5a\nX\rX\16X\u0a5b\5X\u0a5e\nX\3X\3X\6X\u0a62"+
		"\nX\rX\16X\u0a63\3X\3X\6X\u0a68\nX\rX\16X\u0a69\3X\3X\3Y\3Y\6Y\u0a70\n"+
		"Y\rY\16Y\u0a71\3Y\3Y\6Y\u0a76\nY\rY\16Y\u0a77\3Y\3Y\5Y\u0a7c\nY\3Y\6Y"+
		"\u0a7f\nY\rY\16Y\u0a80\3Y\3Y\3Y\6Y\u0a86\nY\rY\16Y\u0a87\3Y\3Y\5Y\u0a8c"+
		"\nY\3Y\6Y\u0a8f\nY\rY\16Y\u0a90\3Y\3Y\6Y\u0a95\nY\rY\16Y\u0a96\3Y\3Y\3"+
		"Y\6Y\u0a9c\nY\rY\16Y\u0a9d\3Y\3Y\5Y\u0aa2\nY\5Y\u0aa4\nY\3Y\6Y\u0aa7\n"+
		"Y\rY\16Y\u0aa8\3Y\3Y\5Y\u0aad\nY\3Z\3Z\6Z\u0ab1\nZ\rZ\16Z\u0ab2\3Z\3Z"+
		"\3[\3[\3\\\3\\\3]\3]\6]\u0abd\n]\r]\16]\u0abe\3]\3]\3^\3^\6^\u0ac5\n^"+
		"\r^\16^\u0ac6\3^\3^\5^\u0acb\n^\3^\6^\u0ace\n^\r^\16^\u0acf\3^\3^\5^\u0ad4"+
		"\n^\3^\3^\6^\u0ad8\n^\r^\16^\u0ad9\3^\3^\5^\u0ade\n^\3^\6^\u0ae1\n^\r"+
		"^\16^\u0ae2\3^\3^\6^\u0ae7\n^\r^\16^\u0ae8\3^\3^\6^\u0aed\n^\r^\16^\u0aee"+
		"\3^\3^\5^\u0af3\n^\3^\6^\u0af6\n^\r^\16^\u0af7\3^\3^\5^\u0afc\n^\3_\3"+
		"_\3`\3`\6`\u0b02\n`\r`\16`\u0b03\3`\3`\6`\u0b08\n`\r`\16`\u0b09\3`\3`"+
		"\5`\u0b0e\n`\3`\6`\u0b11\n`\r`\16`\u0b12\3`\3`\7`\u0b17\n`\f`\16`\u0b1a"+
		"\13`\3`\6`\u0b1d\n`\r`\16`\u0b1e\3`\3`\6`\u0b23\n`\r`\16`\u0b24\3`\3`"+
		"\6`\u0b29\n`\r`\16`\u0b2a\3`\3`\5`\u0b2f\n`\3`\6`\u0b32\n`\r`\16`\u0b33"+
		"\3`\3`\7`\u0b38\n`\f`\16`\u0b3b\13`\3`\6`\u0b3e\n`\r`\16`\u0b3f\3`\3`"+
		"\6`\u0b44\n`\r`\16`\u0b45\3`\6`\u0b49\n`\r`\16`\u0b4a\3`\3`\6`\u0b4f\n"+
		"`\r`\16`\u0b50\3`\3`\6`\u0b55\n`\r`\16`\u0b56\3`\3`\5`\u0b5b\n`\3`\6`"+
		"\u0b5e\n`\r`\16`\u0b5f\3`\3`\5`\u0b64\n`\3a\3a\3a\6a\u0b69\na\ra\16a\u0b6a"+
		"\5a\u0b6d\na\3a\3a\6a\u0b71\na\ra\16a\u0b72\3a\3a\6a\u0b77\na\ra\16a\u0b78"+
		"\3a\3a\5a\u0b7d\na\3a\3a\3a\5a\u0b82\na\3b\3b\3b\3b\5b\u0b88\nb\3c\3c"+
		"\5c\u0b8c\nc\3d\3d\6d\u0b90\nd\rd\16d\u0b91\3d\3d\6d\u0b96\nd\rd\16d\u0b97"+
		"\3d\3d\6d\u0b9c\nd\rd\16d\u0b9d\3d\3d\6d\u0ba2\nd\rd\16d\u0ba3\3d\3d\5"+
		"d\u0ba8\nd\3d\6d\u0bab\nd\rd\16d\u0bac\3d\3d\6d\u0bb1\nd\rd\16d\u0bb2"+
		"\3d\3d\5d\u0bb7\nd\6d\u0bb9\nd\rd\16d\u0bba\3d\6d\u0bbe\nd\rd\16d\u0bbf"+
		"\3d\3d\5d\u0bc4\nd\3d\6d\u0bc7\nd\rd\16d\u0bc8\3d\3d\5d\u0bcd\nd\3e\3"+
		"e\6e\u0bd1\ne\re\16e\u0bd2\3e\3e\6e\u0bd7\ne\re\16e\u0bd8\3e\3e\6e\u0bdd"+
		"\ne\re\16e\u0bde\3e\3e\6e\u0be3\ne\re\16e\u0be4\3e\3e\5e\u0be9\ne\3e\6"+
		"e\u0bec\ne\re\16e\u0bed\3e\3e\6e\u0bf2\ne\re\16e\u0bf3\3e\3e\5e\u0bf8"+
		"\ne\3e\6e\u0bfb\ne\re\16e\u0bfc\3e\3e\6e\u0c01\ne\re\16e\u0c02\3e\3e\6"+
		"e\u0c07\ne\re\16e\u0c08\3e\3e\5e\u0c0d\ne\3e\6e\u0c10\ne\re\16e\u0c11"+
		"\3e\3e\5e\u0c16\ne\3f\3f\3g\3g\5g\u0c1c\ng\3h\3h\3h\3h\5h\u0c22\nh\3i"+
		"\3i\6i\u0c26\ni\ri\16i\u0c27\3i\3i\6i\u0c2c\ni\ri\16i\u0c2d\3i\3i\7i\u0c32"+
		"\ni\fi\16i\u0c35\13i\6i\u0c37\ni\ri\16i\u0c38\3i\6i\u0c3c\ni\ri\16i\u0c3d"+
		"\3i\3i\5i\u0c42\ni\3j\3j\6j\u0c46\nj\rj\16j\u0c47\3j\3j\6j\u0c4c\nj\r"+
		"j\16j\u0c4d\3j\3j\7j\u0c52\nj\fj\16j\u0c55\13j\6j\u0c57\nj\rj\16j\u0c58"+
		"\3j\6j\u0c5c\nj\rj\16j\u0c5d\3j\3j\5j\u0c62\nj\3k\3k\6k\u0c66\nk\rk\16"+
		"k\u0c67\3k\3k\6k\u0c6c\nk\rk\16k\u0c6d\3k\3k\6k\u0c72\nk\rk\16k\u0c73"+
		"\5k\u0c76\nk\3k\3k\6k\u0c7a\nk\rk\16k\u0c7b\3k\3k\5k\u0c80\nk\3k\3k\6"+
		"k\u0c84\nk\rk\16k\u0c85\3k\3k\5k\u0c8a\nk\5k\u0c8c\nk\5k\u0c8e\nk\3k\6"+
		"k\u0c91\nk\rk\16k\u0c92\3k\3k\5k\u0c97\nk\3l\3l\6l\u0c9b\nl\rl\16l\u0c9c"+
		"\3l\3l\6l\u0ca1\nl\rl\16l\u0ca2\3l\3l\6l\u0ca7\nl\rl\16l\u0ca8\3l\3l\6"+
		"l\u0cad\nl\rl\16l\u0cae\3l\3l\5l\u0cb3\nl\3l\6l\u0cb6\nl\rl\16l\u0cb7"+
		"\3l\3l\5l\u0cbc\nl\3m\3m\5m\u0cc0\nm\3n\3n\3o\3o\6o\u0cc6\no\ro\16o\u0cc7"+
		"\3o\3o\5o\u0ccc\no\3o\6o\u0ccf\no\ro\16o\u0cd0\3o\3o\5o\u0cd5\no\3p\3"+
		"p\6p\u0cd9\np\rp\16p\u0cda\3p\3p\5p\u0cdf\np\3p\6p\u0ce2\np\rp\16p\u0ce3"+
		"\3p\3p\5p\u0ce8\np\3q\3q\6q\u0cec\nq\rq\16q\u0ced\5q\u0cf0\nq\3q\3q\3"+
		"q\6q\u0cf5\nq\rq\16q\u0cf6\3q\3q\3q\3q\6q\u0cfd\nq\rq\16q\u0cfe\5q\u0d01"+
		"\nq\3q\3q\6q\u0d05\nq\rq\16q\u0d06\3q\3q\5q\u0d0b\nq\5q\u0d0d\nq\3r\3"+
		"r\3r\3r\3r\6r\u0d14\nr\rr\16r\u0d15\3r\3r\6r\u0d1a\nr\rr\16r\u0d1b\5r"+
		"\u0d1e\nr\3r\3r\6r\u0d22\nr\rr\16r\u0d23\3r\3r\5r\u0d28\nr\5r\u0d2a\n"+
		"r\3r\6r\u0d2d\nr\rr\16r\u0d2e\3r\3r\3r\3r\6r\u0d35\nr\rr\16r\u0d36\5r"+
		"\u0d39\nr\3r\3r\3r\3r\3r\6r\u0d40\nr\rr\16r\u0d41\5r\u0d44\nr\3r\3r\3"+
		"r\3r\6r\u0d4a\nr\rr\16r\u0d4b\5r\u0d4e\nr\3r\3r\3r\6r\u0d53\nr\rr\16r"+
		"\u0d54\5r\u0d57\nr\3r\3r\6r\u0d5b\nr\rr\16r\u0d5c\3r\3r\5r\u0d61\nr\5"+
		"r\u0d63\nr\3s\3s\6s\u0d67\ns\rs\16s\u0d68\5s\u0d6b\ns\3s\3s\6s\u0d6f\n"+
		"s\rs\16s\u0d70\3s\3s\5s\u0d75\ns\3s\6s\u0d78\ns\rs\16s\u0d79\3s\3s\3t"+
		"\3t\6t\u0d80\nt\rt\16t\u0d81\5t\u0d84\nt\3t\3t\6t\u0d88\nt\rt\16t\u0d89"+
		"\3t\3t\5t\u0d8e\nt\3t\6t\u0d91\nt\rt\16t\u0d92\3t\3t\3u\3u\3v\3v\6v\u0d9b"+
		"\nv\rv\16v\u0d9c\3v\3v\6v\u0da1\nv\rv\16v\u0da2\3v\3v\5v\u0da7\nv\3v\6"+
		"v\u0daa\nv\rv\16v\u0dab\3v\3v\5v\u0db0\nv\3v\6v\u0db3\nv\rv\16v\u0db4"+
		"\3v\3v\5v\u0db9\nv\3w\3w\3x\3x\6x\u0dbf\nx\rx\16x\u0dc0\3x\3x\6x\u0dc5"+
		"\nx\rx\16x\u0dc6\3x\3x\5x\u0dcb\nx\6x\u0dcd\nx\rx\16x\u0dce\3x\6x\u0dd2"+
		"\nx\rx\16x\u0dd3\3x\3x\6x\u0dd8\nx\rx\16x\u0dd9\3x\7x\u0ddd\nx\fx\16x"+
		"\u0de0\13x\3x\3x\7x\u0de4\nx\fx\16x\u0de7\13x\5x\u0de9\nx\3x\3x\6x\u0ded"+
		"\nx\rx\16x\u0dee\3x\3x\5x\u0df3\nx\3x\6x\u0df6\nx\rx\16x\u0df7\3x\3x\5"+
		"x\u0dfc\nx\3y\3y\6y\u0e00\ny\ry\16y\u0e01\3y\3y\6y\u0e06\ny\ry\16y\u0e07"+
		"\3y\3y\5y\u0e0c\ny\6y\u0e0e\ny\ry\16y\u0e0f\3z\3z\6z\u0e14\nz\rz\16z\u0e15"+
		"\3z\3z\6z\u0e1a\nz\rz\16z\u0e1b\5z\u0e1e\nz\3z\3z\3z\6z\u0e23\nz\rz\16"+
		"z\u0e24\5z\u0e27\nz\3z\3z\6z\u0e2b\nz\rz\16z\u0e2c\3z\3z\5z\u0e31\nz\5"+
		"z\u0e33\nz\3z\3z\6z\u0e37\nz\rz\16z\u0e38\5z\u0e3b\nz\3z\3z\6z\u0e3f\n"+
		"z\rz\16z\u0e40\3z\3z\3z\5z\u0e46\nz\5z\u0e48\nz\3{\3{\6{\u0e4c\n{\r{\16"+
		"{\u0e4d\3{\3{\6{\u0e52\n{\r{\16{\u0e53\3|\3|\6|\u0e58\n|\r|\16|\u0e59"+
		"\3|\3|\6|\u0e5e\n|\r|\16|\u0e5f\3|\3|\5|\u0e64\n|\3|\6|\u0e67\n|\r|\16"+
		"|\u0e68\3|\3|\5|\u0e6d\n|\3|\6|\u0e70\n|\r|\16|\u0e71\3|\3|\5|\u0e76\n"+
		"|\3|\6|\u0e79\n|\r|\16|\u0e7a\3|\3|\5|\u0e7f\n|\3}\3}\6}\u0e83\n}\r}\16"+
		"}\u0e84\3}\3}\3~\3~\6~\u0e8b\n~\r~\16~\u0e8c\3~\3~\6~\u0e91\n~\r~\16~"+
		"\u0e92\3\177\3\177\3\177\6\177\u0e98\n\177\r\177\16\177\u0e99\5\177\u0e9c"+
		"\n\177\3\177\3\177\6\177\u0ea0\n\177\r\177\16\177\u0ea1\3\177\3\177\7"+
		"\177\u0ea6\n\177\f\177\16\177\u0ea9\13\177\5\177\u0eab\n\177\3\u0080\3"+
		"\u0080\6\u0080\u0eaf\n\u0080\r\u0080\16\u0080\u0eb0\5\u0080\u0eb3\n\u0080"+
		"\3\u0080\3\u0080\3\u0080\6\u0080\u0eb8\n\u0080\r\u0080\16\u0080\u0eb9"+
		"\5\u0080\u0ebc\n\u0080\3\u0080\3\u0080\3\u0080\6\u0080\u0ec1\n\u0080\r"+
		"\u0080\16\u0080\u0ec2\5\u0080\u0ec5\n\u0080\3\u0080\3\u0080\3\u0080\6"+
		"\u0080\u0eca\n\u0080\r\u0080\16\u0080\u0ecb\5\u0080\u0ece\n\u0080\3\u0080"+
		"\5\u0080\u0ed1\n\u0080\3\u0081\3\u0081\3\u0081\5\u0081\u0ed6\n\u0081\3"+
		"\u0082\3\u0082\3\u0083\3\u0083\6\u0083\u0edc\n\u0083\r\u0083\16\u0083"+
		"\u0edd\3\u0083\3\u0083\6\u0083\u0ee2\n\u0083\r\u0083\16\u0083\u0ee3\3"+
		"\u0083\3\u0083\6\u0083\u0ee8\n\u0083\r\u0083\16\u0083\u0ee9\3\u0083\3"+
		"\u0083\6\u0083\u0eee\n\u0083\r\u0083\16\u0083\u0eef\3\u0083\3\u0083\6"+
		"\u0083\u0ef4\n\u0083\r\u0083\16\u0083\u0ef5\5\u0083\u0ef8\n\u0083\3\u0083"+
		"\3\u0083\6\u0083\u0efc\n\u0083\r\u0083\16\u0083\u0efd\3\u0084\3\u0084"+
		"\3\u0085\3\u0085\3\u0086\3\u0086\6\u0086\u0f06\n\u0086\r\u0086\16\u0086"+
		"\u0f07\3\u0086\3\u0086\6\u0086\u0f0c\n\u0086\r\u0086\16\u0086\u0f0d\3"+
		"\u0086\6\u0086\u0f11\n\u0086\r\u0086\16\u0086\u0f12\3\u0086\3\u0086\6"+
		"\u0086\u0f17\n\u0086\r\u0086\16\u0086\u0f18\3\u0086\3\u0086\6\u0086\u0f1d"+
		"\n\u0086\r\u0086\16\u0086\u0f1e\3\u0086\3\u0086\5\u0086\u0f23\n\u0086"+
		"\6\u0086\u0f25\n\u0086\r\u0086\16\u0086\u0f26\3\u0086\3\u0086\6\u0086"+
		"\u0f2b\n\u0086\r\u0086\16\u0086\u0f2c\3\u0086\3\u0086\7\u0086\u0f31\n"+
		"\u0086\f\u0086\16\u0086\u0f34\13\u0086\3\u0086\6\u0086\u0f37\n\u0086\r"+
		"\u0086\16\u0086\u0f38\3\u0086\3\u0086\5\u0086\u0f3d\n\u0086\3\u0086\6"+
		"\u0086\u0f40\n\u0086\r\u0086\16\u0086\u0f41\3\u0086\3\u0086\6\u0086\u0f46"+
		"\n\u0086\r\u0086\16\u0086\u0f47\3\u0086\6\u0086\u0f4b\n\u0086\r\u0086"+
		"\16\u0086\u0f4c\3\u0086\3\u0086\6\u0086\u0f51\n\u0086\r\u0086\16\u0086"+
		"\u0f52\3\u0086\3\u0086\6\u0086\u0f57\n\u0086\r\u0086\16\u0086\u0f58\3"+
		"\u0086\3\u0086\5\u0086\u0f5d\n\u0086\6\u0086\u0f5f\n\u0086\r\u0086\16"+
		"\u0086\u0f60\3\u0086\3\u0086\6\u0086\u0f65\n\u0086\r\u0086\16\u0086\u0f66"+
		"\3\u0086\3\u0086\6\u0086\u0f6b\n\u0086\r\u0086\16\u0086\u0f6c\3\u0086"+
		"\3\u0086\6\u0086\u0f71\n\u0086\r\u0086\16\u0086\u0f72\3\u0086\3\u0086"+
		"\6\u0086\u0f77\n\u0086\r\u0086\16\u0086\u0f78\3\u0086\3\u0086\6\u0086"+
		"\u0f7d\n\u0086\r\u0086\16\u0086\u0f7e\3\u0086\3\u0086\5\u0086\u0f83\n"+
		"\u0086\5\u0086\u0f85\n\u0086\3\u0086\6\u0086\u0f88\n\u0086\r\u0086\16"+
		"\u0086\u0f89\3\u0086\3\u0086\5\u0086\u0f8e\n\u0086\3\u0086\6\u0086\u0f91"+
		"\n\u0086\r\u0086\16\u0086\u0f92\3\u0086\3\u0086\5\u0086\u0f97\n\u0086"+
		"\3\u0087\3\u0087\3\u0088\3\u0088\5\u0088\u0f9d\n\u0088\3\u0089\3\u0089"+
		"\3\u0089\3\u0089\3\u0089\3\u0089\5\u0089\u0fa5\n\u0089\3\u008a\3\u008a"+
		"\6\u008a\u0fa9\n\u008a\r\u008a\16\u008a\u0faa\3\u008a\3\u008a\6\u008a"+
		"\u0faf\n\u008a\r\u008a\16\u008a\u0fb0\3\u008a\3\u008a\5\u008a\u0fb5\n"+
		"\u008a\3\u008a\3\u008a\6\u008a\u0fb9\n\u008a\r\u008a\16\u008a\u0fba\3"+
		"\u008a\3\u008a\6\u008a\u0fbf\n\u008a\r\u008a\16\u008a\u0fc0\3\u008a\3"+
		"\u008a\5\u008a\u0fc5\n\u008a\5\u008a\u0fc7\n\u008a\3\u008b\3\u008b\6\u008b"+
		"\u0fcb\n\u008b\r\u008b\16\u008b\u0fcc\3\u008b\3\u008b\6\u008b\u0fd1\n"+
		"\u008b\r\u008b\16\u008b\u0fd2\3\u008b\3\u008b\5\u008b\u0fd7\n\u008b\3"+
		"\u008b\3\u008b\6\u008b\u0fdb\n\u008b\r\u008b\16\u008b\u0fdc\3\u008b\3"+
		"\u008b\6\u008b\u0fe1\n\u008b\r\u008b\16\u008b\u0fe2\3\u008b\3\u008b\5"+
		"\u008b\u0fe7\n\u008b\5\u008b\u0fe9\n\u008b\3\u008c\3\u008c\6\u008c\u0fed"+
		"\n\u008c\r\u008c\16\u008c\u0fee\3\u008c\3\u008c\6\u008c\u0ff3\n\u008c"+
		"\r\u008c\16\u008c\u0ff4\3\u008c\3\u008c\5\u008c\u0ff9\n\u008c\3\u008c"+
		"\3\u008c\6\u008c\u0ffd\n\u008c\r\u008c\16\u008c\u0ffe\3\u008c\3\u008c"+
		"\6\u008c\u1003\n\u008c\r\u008c\16\u008c\u1004\3\u008c\3\u008c\5\u008c"+
		"\u1009\n\u008c\5\u008c\u100b\n\u008c\3\u008d\3\u008d\6\u008d\u100f\n\u008d"+
		"\r\u008d\16\u008d\u1010\3\u008d\3\u008d\6\u008d\u1015\n\u008d\r\u008d"+
		"\16\u008d\u1016\3\u008d\3\u008d\5\u008d\u101b\n\u008d\3\u008d\3\u008d"+
		"\6\u008d\u101f\n\u008d\r\u008d\16\u008d\u1020\3\u008d\3\u008d\6\u008d"+
		"\u1025\n\u008d\r\u008d\16\u008d\u1026\3\u008d\3\u008d\5\u008d\u102b\n"+
		"\u008d\5\u008d\u102d\n\u008d\3\u008e\3\u008e\6\u008e\u1031\n\u008e\r\u008e"+
		"\16\u008e\u1032\3\u008e\3\u008e\6\u008e\u1037\n\u008e\r\u008e\16\u008e"+
		"\u1038\3\u008e\3\u008e\6\u008e\u103d\n\u008e\r\u008e\16\u008e\u103e\5"+
		"\u008e\u1041\n\u008e\3\u008e\3\u008e\6\u008e\u1045\n\u008e\r\u008e\16"+
		"\u008e\u1046\3\u008e\3\u008e\5\u008e\u104b\n\u008e\3\u008e\6\u008e\u104e"+
		"\n\u008e\r\u008e\16\u008e\u104f\3\u008e\3\u008e\5\u008e\u1054\n\u008e"+
		"\3\u008f\3\u008f\3\u0090\3\u0090\6\u0090\u105a\n\u0090\r\u0090\16\u0090"+
		"\u105b\3\u0090\3\u0090\6\u0090\u1060\n\u0090\r\u0090\16\u0090\u1061\3"+
		"\u0090\3\u0090\6\u0090\u1066\n\u0090\r\u0090\16\u0090\u1067\3\u0090\3"+
		"\u0090\5\u0090\u106c\n\u0090\3\u0090\6\u0090\u106f\n\u0090\r\u0090\16"+
		"\u0090\u1070\3\u0090\3\u0090\6\u0090\u1075\n\u0090\r\u0090\16\u0090\u1076"+
		"\3\u0090\3\u0090\5\u0090\u107b\n\u0090\3\u0090\6\u0090\u107e\n\u0090\r"+
		"\u0090\16\u0090\u107f\3\u0090\3\u0090\5\u0090\u1084\n\u0090\3\u0090\6"+
		"\u0090\u1087\n\u0090\r\u0090\16\u0090\u1088\3\u0090\3\u0090\5\u0090\u108d"+
		"\n\u0090\3\u0091\3\u0091\6\u0091\u1091\n\u0091\r\u0091\16\u0091\u1092"+
		"\3\u0091\3\u0091\6\u0091\u1097\n\u0091\r\u0091\16\u0091\u1098\3\u0091"+
		"\3\u0091\6\u0091\u109d\n\u0091\r\u0091\16\u0091\u109e\3\u0091\3\u0091"+
		"\3\u0092\3\u0092\6\u0092\u10a5\n\u0092\r\u0092\16\u0092\u10a6\3\u0092"+
		"\3\u0092\6\u0092\u10ab\n\u0092\r\u0092\16\u0092\u10ac\3\u0092\3\u0092"+
		"\6\u0092\u10b1\n\u0092\r\u0092\16\u0092\u10b2\3\u0092\6\u0092\u10b6\n"+
		"\u0092\r\u0092\16\u0092\u10b7\3\u0092\3\u0092\5\u0092\u10bc\n\u0092\5"+
		"\u0092\u10be\n\u0092\3\u0092\6\u0092\u10c1\n\u0092\r\u0092\16\u0092\u10c2"+
		"\3\u0092\3\u0092\5\u0092\u10c7\n\u0092\3\u0093\3\u0093\6\u0093\u10cb\n"+
		"\u0093\r\u0093\16\u0093\u10cc\3\u0093\3\u0093\6\u0093\u10d1\n\u0093\r"+
		"\u0093\16\u0093\u10d2\5\u0093\u10d5\n\u0093\3\u0093\3\u0093\6\u0093\u10d9"+
		"\n\u0093\r\u0093\16\u0093\u10da\3\u0093\3\u0093\6\u0093\u10df\n\u0093"+
		"\r\u0093\16\u0093\u10e0\5\u0093\u10e3\n\u0093\3\u0093\3\u0093\6\u0093"+
		"\u10e7\n\u0093\r\u0093\16\u0093\u10e8\3\u0093\3\u0093\6\u0093\u10ed\n"+
		"\u0093\r\u0093\16\u0093\u10ee\3\u0093\6\u0093\u10f2\n\u0093\r\u0093\16"+
		"\u0093\u10f3\3\u0093\3\u0093\5\u0093\u10f8\n\u0093\5\u0093\u10fa\n\u0093"+
		"\3\u0093\6\u0093\u10fd\n\u0093\r\u0093\16\u0093\u10fe\3\u0093\3\u0093"+
		"\5\u0093\u1103\n\u0093\3\u0094\3\u0094\6\u0094\u1107\n\u0094\r\u0094\16"+
		"\u0094\u1108\3\u0094\3\u0094\6\u0094\u110d\n\u0094\r\u0094\16\u0094\u110e"+
		"\3\u0094\3\u0094\5\u0094\u1113\n\u0094\3\u0094\6\u0094\u1116\n\u0094\r"+
		"\u0094\16\u0094\u1117\3\u0094\3\u0094\5\u0094\u111c\n\u0094\3\u0094\6"+
		"\u0094\u111f\n\u0094\r\u0094\16\u0094\u1120\3\u0094\3\u0094\5\u0094\u1125"+
		"\n\u0094\3\u0095\3\u0095\6\u0095\u1129\n\u0095\r\u0095\16\u0095\u112a"+
		"\5\u0095\u112d\n\u0095\3\u0095\3\u0095\6\u0095\u1131\n\u0095\r\u0095\16"+
		"\u0095\u1132\3\u0095\3\u0095\5\u0095\u1137\n\u0095\3\u0095\3\u0095\6\u0095"+
		"\u113b\n\u0095\r\u0095\16\u0095\u113c\3\u0095\3\u0095\5\u0095\u1141\n"+
		"\u0095\5\u0095\u1143\n\u0095\3\u0096\3\u0096\6\u0096\u1147\n\u0096\r\u0096"+
		"\16\u0096\u1148\3\u0096\3\u0096\6\u0096\u114d\n\u0096\r\u0096\16\u0096"+
		"\u114e\5\u0096\u1151\n\u0096\3\u0096\3\u0096\5\u0096\u1155\n\u0096\3\u0097"+
		"\3\u0097\6\u0097\u1159\n\u0097\r\u0097\16\u0097\u115a\3\u0097\3\u0097"+
		"\6\u0097\u115f\n\u0097\r\u0097\16\u0097\u1160\5\u0097\u1163\n\u0097\3"+
		"\u0097\3\u0097\5\u0097\u1167\n\u0097\3\u0098\3\u0098\6\u0098\u116b\n\u0098"+
		"\r\u0098\16\u0098\u116c\5\u0098\u116f\n\u0098\3\u0098\3\u0098\6\u0098"+
		"\u1173\n\u0098\r\u0098\16\u0098\u1174\3\u0098\3\u0098\5\u0098\u1179\n"+
		"\u0098\3\u0098\6\u0098\u117c\n\u0098\r\u0098\16\u0098\u117d\3\u0098\3"+
		"\u0098\3\u0098\3\u0098\6\u0098\u1184\n\u0098\r\u0098\16\u0098\u1185\5"+
		"\u0098\u1188\n\u0098\3\u0098\3\u0098\6\u0098\u118c\n\u0098\r\u0098\16"+
		"\u0098\u118d\3\u0098\3\u0098\5\u0098\u1192\n\u0098\3\u0098\6\u0098\u1195"+
		"\n\u0098\r\u0098\16\u0098\u1196\3\u0098\3\u0098\3\u0098\3\u0098\6\u0098"+
		"\u119d\n\u0098\r\u0098\16\u0098\u119e\3\u0098\3\u0098\6\u0098\u11a3\n"+
		"\u0098\r\u0098\16\u0098\u11a4\5\u0098\u11a7\n\u0098\3\u0098\3\u0098\6"+
		"\u0098\u11ab\n\u0098\r\u0098\16\u0098\u11ac\3\u0098\3\u0098\5\u0098\u11b1"+
		"\n\u0098\5\u0098\u11b3\n\u0098\3\u0098\6\u0098\u11b6\n\u0098\r\u0098\16"+
		"\u0098\u11b7\3\u0098\3\u0098\3\u0098\3\u0098\6\u0098\u11be\n\u0098\r\u0098"+
		"\16\u0098\u11bf\5\u0098\u11c2\n\u0098\3\u0098\5\u0098\u11c5\n\u0098\3"+
		"\u0099\3\u0099\3\u0099\3\u0099\3\u0099\6\u0099\u11cc\n\u0099\r\u0099\16"+
		"\u0099\u11cd\5\u0099\u11d0\n\u0099\3\u0099\3\u0099\3\u0099\6\u0099\u11d5"+
		"\n\u0099\r\u0099\16\u0099\u11d6\3\u0099\3\u0099\5\u0099\u11db\n\u0099"+
		"\3\u0099\3\u0099\6\u0099\u11df\n\u0099\r\u0099\16\u0099\u11e0\5\u0099"+
		"\u11e3\n\u0099\3\u0099\3\u0099\3\u0099\3\u0099\6\u0099\u11e9\n\u0099\r"+
		"\u0099\16\u0099\u11ea\5\u0099\u11ed\n\u0099\3\u0099\3\u0099\6\u0099\u11f1"+
		"\n\u0099\r\u0099\16\u0099\u11f2\3\u0099\3\u0099\3\u0099\3\u0099\6\u0099"+
		"\u11f9\n\u0099\r\u0099\16\u0099\u11fa\3\u0099\3\u0099\6\u0099\u11ff\n"+
		"\u0099\r\u0099\16\u0099\u1200\5\u0099\u1203\n\u0099\3\u0099\3\u0099\3"+
		"\u0099\3\u0099\6\u0099\u1209\n\u0099\r\u0099\16\u0099\u120a\5\u0099\u120d"+
		"\n\u0099\3\u0099\3\u0099\6\u0099\u1211\n\u0099\r\u0099\16\u0099\u1212"+
		"\3\u0099\3\u0099\5\u0099\u1217\n\u0099\3\u0099\6\u0099\u121a\n\u0099\r"+
		"\u0099\16\u0099\u121b\3\u0099\3\u0099\5\u0099\u1220\n\u0099\3\u009a\3"+
		"\u009a\3\u009b\3\u009b\3\u009b\3\u009b\3\u009b\6\u009b\u1229\n\u009b\r"+
		"\u009b\16\u009b\u122a\3\u009b\3\u009b\5\u009b\u122f\n\u009b\5\u009b\u1231"+
		"\n\u009b\3\u009c\3\u009c\6\u009c\u1235\n\u009c\r\u009c\16\u009c\u1236"+
		"\3\u009c\3\u009c\3\u009c\3\u009c\6\u009c\u123d\n\u009c\r\u009c\16\u009c"+
		"\u123e\5\u009c\u1241\n\u009c\3\u009c\3\u009c\3\u009c\6\u009c\u1246\n\u009c"+
		"\r\u009c\16\u009c\u1247\5\u009c\u124a\n\u009c\3\u009c\3\u009c\6\u009c"+
		"\u124e\n\u009c\r\u009c\16\u009c\u124f\3\u009c\3\u009c\3\u009c\3\u009c"+
		"\6\u009c\u1256\n\u009c\r\u009c\16\u009c\u1257\5\u009c\u125a\n\u009c\3"+
		"\u009c\3\u009c\3\u009c\6\u009c\u125f\n\u009c\r\u009c\16\u009c\u1260\5"+
		"\u009c\u1263\n\u009c\3\u009c\3\u009c\6\u009c\u1267\n\u009c\r\u009c\16"+
		"\u009c\u1268\3\u009c\3\u009c\5\u009c\u126d\n\u009c\3\u009d\3\u009d\3\u009e"+
		"\3\u009e\5\u009e\u1273\n\u009e\3\u009f\3\u009f\3\u009f\6\u009f\u1278\n"+
		"\u009f\r\u009f\16\u009f\u1279\3\u009f\3\u009f\6\u009f\u127e\n\u009f\r"+
		"\u009f\16\u009f\u127f\3\u009f\3\u009f\5\u009f\u1284\n\u009f\5\u009f\u1286"+
		"\n\u009f\3\u009f\3\u009f\6\u009f\u128a\n\u009f\r\u009f\16\u009f\u128b"+
		"\3\u009f\3\u009f\5\u009f\u1290\n\u009f\5\u009f\u1292\n\u009f\3\u00a0\3"+
		"\u00a0\6\u00a0\u1296\n\u00a0\r\u00a0\16\u00a0\u1297\3\u00a0\3\u00a0\5"+
		"\u00a0\u129c\n\u00a0\3\u00a0\3\u00a0\6\u00a0\u12a0\n\u00a0\r\u00a0\16"+
		"\u00a0\u12a1\3\u00a0\3\u00a0\5\u00a0\u12a6\n\u00a0\3\u00a0\3\u00a0\5\u00a0"+
		"\u12aa\n\u00a0\3\u00a1\3\u00a1\3\u00a2\3\u00a2\3\u00a3\3\u00a3\6\u00a3"+
		"\u12b2\n\u00a3\r\u00a3\16\u00a3\u12b3\5\u00a3\u12b6\n\u00a3\3\u00a3\3"+
		"\u00a3\6\u00a3\u12ba\n\u00a3\r\u00a3\16\u00a3\u12bb\3\u00a3\3\u00a3\5"+
		"\u00a3\u12c0\n\u00a3\3\u00a4\3\u00a4\6\u00a4\u12c4\n\u00a4\r\u00a4\16"+
		"\u00a4\u12c5\5\u00a4\u12c8\n\u00a4\3\u00a4\3\u00a4\6\u00a4\u12cc\n\u00a4"+
		"\r\u00a4\16\u00a4\u12cd\3\u00a4\3\u00a4\5\u00a4\u12d2\n\u00a4\3\u00a5"+
		"\3\u00a5\6\u00a5\u12d6\n\u00a5\r\u00a5\16\u00a5\u12d7\5\u00a5\u12da\n"+
		"\u00a5\3\u00a5\3\u00a5\6\u00a5\u12de\n\u00a5\r\u00a5\16\u00a5\u12df\3"+
		"\u00a5\3\u00a5\6\u00a5\u12e4\n\u00a5\r\u00a5\16\u00a5\u12e5\3\u00a5\3"+
		"\u00a5\5\u00a5\u12ea\n\u00a5\3\u00a6\3\u00a6\6\u00a6\u12ee\n\u00a6\r\u00a6"+
		"\16\u00a6\u12ef\3\u00a6\3\u00a6\5\u00a6\u12f4\n\u00a6\3\u00a6\6\u00a6"+
		"\u12f7\n\u00a6\r\u00a6\16\u00a6\u12f8\3\u00a6\3\u00a6\5\u00a6\u12fd\n"+
		"\u00a6\3\u00a7\3\u00a7\6\u00a7\u1301\n\u00a7\r\u00a7\16\u00a7\u1302\3"+
		"\u00a7\3\u00a7\7\u00a7\u1307\n\u00a7\f\u00a7\16\u00a7\u130a\13\u00a7\3"+
		"\u00a7\3\u00a7\7\u00a7\u130e\n\u00a7\f\u00a7\16\u00a7\u1311\13\u00a7\3"+
		"\u00a7\3\u00a7\7\u00a7\u1315\n\u00a7\f\u00a7\16\u00a7\u1318\13\u00a7\5"+
		"\u00a7\u131a\n\u00a7\3\u00a7\3\u00a7\7\u00a7\u131e\n\u00a7\f\u00a7\16"+
		"\u00a7\u1321\13\u00a7\5\u00a7\u1323\n\u00a7\3\u00a7\3\u00a7\7\u00a7\u1327"+
		"\n\u00a7\f\u00a7\16\u00a7\u132a\13\u00a7\5\u00a7\u132c\n\u00a7\3\u00a7"+
		"\3\u00a7\7\u00a7\u1330\n\u00a7\f\u00a7\16\u00a7\u1333\13\u00a7\5\u00a7"+
		"\u1335\n\u00a7\3\u00a7\3\u00a7\7\u00a7\u1339\n\u00a7\f\u00a7\16\u00a7"+
		"\u133c\13\u00a7\5\u00a7\u133e\n\u00a7\3\u00a8\3\u00a8\6\u00a8\u1342\n"+
		"\u00a8\r\u00a8\16\u00a8\u1343\3\u00a8\3\u00a8\7\u00a8\u1348\n\u00a8\f"+
		"\u00a8\16\u00a8\u134b\13\u00a8\3\u00a8\3\u00a8\7\u00a8\u134f\n\u00a8\f"+
		"\u00a8\16\u00a8\u1352\13\u00a8\3\u00a8\3\u00a8\7\u00a8\u1356\n\u00a8\f"+
		"\u00a8\16\u00a8\u1359\13\u00a8\3\u00a8\7\u00a8\u135c\n\u00a8\f\u00a8\16"+
		"\u00a8\u135f\13\u00a8\3\u00a8\3\u00a8\3\u00a8\7\u00a8\u1364\n\u00a8\f"+
		"\u00a8\16\u00a8\u1367\13\u00a8\3\u00a8\7\u00a8\u136a\n\u00a8\f\u00a8\16"+
		"\u00a8\u136d\13\u00a8\5\u00a8\u136f\n\u00a8\3\u00a8\7\u00a8\u1372\n\u00a8"+
		"\f\u00a8\16\u00a8\u1375\13\u00a8\7\u00a8\u1377\n\u00a8\f\u00a8\16\u00a8"+
		"\u137a\13\u00a8\3\u00a9\3\u00a9\6\u00a9\u137e\n\u00a9\r\u00a9\16\u00a9"+
		"\u137f\3\u00a9\3\u00a9\7\u00a9\u1384\n\u00a9\f\u00a9\16\u00a9\u1387\13"+
		"\u00a9\3\u00a9\3\u00a9\7\u00a9\u138b\n\u00a9\f\u00a9\16\u00a9\u138e\13"+
		"\u00a9\3\u00a9\3\u00a9\7\u00a9\u1392\n\u00a9\f\u00a9\16\u00a9\u1395\13"+
		"\u00a9\7\u00a9\u1397\n\u00a9\f\u00a9\16\u00a9\u139a\13\u00a9\3\u00aa\3"+
		"\u00aa\6\u00aa\u139e\n\u00aa\r\u00aa\16\u00aa\u139f\3\u00aa\3\u00aa\7"+
		"\u00aa\u13a4\n\u00aa\f\u00aa\16\u00aa\u13a7\13\u00aa\3\u00aa\3\u00aa\7"+
		"\u00aa\u13ab\n\u00aa\f\u00aa\16\u00aa\u13ae\13\u00aa\3\u00aa\3\u00aa\7"+
		"\u00aa\u13b2\n\u00aa\f\u00aa\16\u00aa\u13b5\13\u00aa\7\u00aa\u13b7\n\u00aa"+
		"\f\u00aa\16\u00aa\u13ba\13\u00aa\3\u00ab\3\u00ab\6\u00ab\u13be\n\u00ab"+
		"\r\u00ab\16\u00ab\u13bf\3\u00ab\3\u00ab\7\u00ab\u13c4\n\u00ab\f\u00ab"+
		"\16\u00ab\u13c7\13\u00ab\3\u00ab\3\u00ab\7\u00ab\u13cb\n\u00ab\f\u00ab"+
		"\16\u00ab\u13ce\13\u00ab\3\u00ab\3\u00ab\7\u00ab\u13d2\n\u00ab\f\u00ab"+
		"\16\u00ab\u13d5\13\u00ab\3\u00ab\7\u00ab\u13d8\n\u00ab\f\u00ab\16\u00ab"+
		"\u13db\13\u00ab\3\u00ab\7\u00ab\u13de\n\u00ab\f\u00ab\16\u00ab\u13e1\13"+
		"\u00ab\7\u00ab\u13e3\n\u00ab\f\u00ab\16\u00ab\u13e6\13\u00ab\3\u00ac\3"+
		"\u00ac\6\u00ac\u13ea\n\u00ac\r\u00ac\16\u00ac\u13eb\3\u00ac\3\u00ac\7"+
		"\u00ac\u13f0\n\u00ac\f\u00ac\16\u00ac\u13f3\13\u00ac\3\u00ac\3\u00ac\7"+
		"\u00ac\u13f7\n\u00ac\f\u00ac\16\u00ac\u13fa\13\u00ac\3\u00ac\3\u00ac\7"+
		"\u00ac\u13fe\n\u00ac\f\u00ac\16\u00ac\u1401\13\u00ac\7\u00ac\u1403\n\u00ac"+
		"\f\u00ac\16\u00ac\u1406\13\u00ac\3\u00ad\3\u00ad\6\u00ad\u140a\n\u00ad"+
		"\r\u00ad\16\u00ad\u140b\3\u00ad\3\u00ad\7\u00ad\u1410\n\u00ad\f\u00ad"+
		"\16\u00ad\u1413\13\u00ad\3\u00ad\3\u00ad\7\u00ad\u1417\n\u00ad\f\u00ad"+
		"\16\u00ad\u141a\13\u00ad\7\u00ad\u141c\n\u00ad\f\u00ad\16\u00ad\u141f"+
		"\13\u00ad\3\u00ad\3\u00ad\3\u00ae\3\u00ae\6\u00ae\u1425\n\u00ae\r\u00ae"+
		"\16\u00ae\u1426\3\u00ae\3\u00ae\7\u00ae\u142b\n\u00ae\f\u00ae\16\u00ae"+
		"\u142e\13\u00ae\3\u00ae\3\u00ae\7\u00ae\u1432\n\u00ae\f\u00ae\16\u00ae"+
		"\u1435\13\u00ae\7\u00ae\u1437\n\u00ae\f\u00ae\16\u00ae\u143a\13\u00ae"+
		"\3\u00ae\3\u00ae\3\u00af\3\u00af\6\u00af\u1440\n\u00af\r\u00af\16\u00af"+
		"\u1441\3\u00af\3\u00af\7\u00af\u1446\n\u00af\f\u00af\16\u00af\u1449\13"+
		"\u00af\3\u00af\3\u00af\7\u00af\u144d\n\u00af\f\u00af\16\u00af\u1450\13"+
		"\u00af\7\u00af\u1452\n\u00af\f\u00af\16\u00af\u1455\13\u00af\3\u00af\3"+
		"\u00af\3\u00b0\3\u00b0\6\u00b0\u145b\n\u00b0\r\u00b0\16\u00b0\u145c\5"+
		"\u00b0\u145f\n\u00b0\3\u00b0\3\u00b0\3\u00b0\6\u00b0\u1464\n\u00b0\r\u00b0"+
		"\16\u00b0\u1465\5\u00b0\u1468\n\u00b0\3\u00b0\3\u00b0\3\u00b0\3\u00b0"+
		"\3\u00b0\3\u00b0\3\u00b0\3\u00b0\3\u00b0\3\u00b0\3\u00b0\3\u00b0\5\u00b0"+
		"\u1476\n\u00b0\3\u00b1\3\u00b1\7\u00b1\u147a\n\u00b1\f\u00b1\16\u00b1"+
		"\u147d\13\u00b1\3\u00b1\7\u00b1\u1480\n\u00b1\f\u00b1\16\u00b1\u1483\13"+
		"\u00b1\3\u00b2\3\u00b2\6\u00b2\u1487\n\u00b2\r\u00b2\16\u00b2\u1488\3"+
		"\u00b2\3\u00b2\5\u00b2\u148d\n\u00b2\5\u00b2\u148f\n\u00b2\3\u00b2\6\u00b2"+
		"\u1492\n\u00b2\r\u00b2\16\u00b2\u1493\3\u00b2\3\u00b2\6\u00b2\u1498\n"+
		"\u00b2\r\u00b2\16\u00b2\u1499\3\u00b2\3\u00b2\5\u00b2\u149e\n\u00b2\3"+
		"\u00b2\6\u00b2\u14a1\n\u00b2\r\u00b2\16\u00b2\u14a2\3\u00b2\3\u00b2\7"+
		"\u00b2\u14a7\n\u00b2\f\u00b2\16\u00b2\u14aa\13\u00b2\3\u00b2\3\u00b2\3"+
		"\u00b3\3\u00b3\3\u00b4\3\u00b4\6\u00b4\u14b2\n\u00b4\r\u00b4\16\u00b4"+
		"\u14b3\5\u00b4\u14b6\n\u00b4\3\u00b4\3\u00b4\3\u00b4\6\u00b4\u14bb\n\u00b4"+
		"\r\u00b4\16\u00b4\u14bc\5\u00b4\u14bf\n\u00b4\3\u00b4\3\u00b4\3\u00b4"+
		"\3\u00b4\3\u00b4\3\u00b4\3\u00b4\6\u00b4\u14c8\n\u00b4\r\u00b4\16\u00b4"+
		"\u14c9\3\u00b4\3\u00b4\5\u00b4\u14ce\n\u00b4\3\u00b4\3\u00b4\6\u00b4\u14d2"+
		"\n\u00b4\r\u00b4\16\u00b4\u14d3\3\u00b4\3\u00b4\5\u00b4\u14d8\n\u00b4"+
		"\3\u00b4\3\u00b4\6\u00b4\u14dc\n\u00b4\r\u00b4\16\u00b4\u14dd\3\u00b4"+
		"\3\u00b4\6\u00b4\u14e2\n\u00b4\r\u00b4\16\u00b4\u14e3\5\u00b4\u14e6\n"+
		"\u00b4\3\u00b4\3\u00b4\3\u00b4\3\u00b4\5\u00b4\u14ec\n\u00b4\3\u00b5\3"+
		"\u00b5\6\u00b5\u14f0\n\u00b5\r\u00b5\16\u00b5\u14f1\3\u00b5\3\u00b5\6"+
		"\u00b5\u14f6\n\u00b5\r\u00b5\16\u00b5\u14f7\3\u00b5\3\u00b5\6\u00b5\u14fc"+
		"\n\u00b5\r\u00b5\16\u00b5\u14fd\3\u00b5\3\u00b5\5\u00b5\u1502\n\u00b5"+
		"\3\u00b6\3\u00b6\3\u00b7\3\u00b7\3\u00b8\3\u00b8\6\u00b8\u150a\n\u00b8"+
		"\r\u00b8\16\u00b8\u150b\3\u00b8\3\u00b8\5\u00b8\u1510\n\u00b8\3\u00b8"+
		"\3\u00b8\6\u00b8\u1514\n\u00b8\r\u00b8\16\u00b8\u1515\3\u00b8\3\u00b8"+
		"\5\u00b8\u151a\n\u00b8\5\u00b8\u151c\n\u00b8\3\u00b8\6\u00b8\u151f\n\u00b8"+
		"\r\u00b8\16\u00b8\u1520\3\u00b8\3\u00b8\6\u00b8\u1525\n\u00b8\r\u00b8"+
		"\16\u00b8\u1526\3\u00b8\3\u00b8\7\u00b8\u152b\n\u00b8\f\u00b8\16\u00b8"+
		"\u152e\13\u00b8\3\u00b9\3\u00b9\6\u00b9\u1532\n\u00b9\r\u00b9\16\u00b9"+
		"\u1533\3\u00b9\3\u00b9\5\u00b9\u1538\n\u00b9\3\u00ba\3\u00ba\3\u00ba\6"+
		"\u00ba\u153d\n\u00ba\r\u00ba\16\u00ba\u153e\3\u00ba\3\u00ba\3\u00ba\3"+
		"\u00ba\6\u00ba\u1545\n\u00ba\r\u00ba\16\u00ba\u1546\3\u00ba\3\u00ba\5"+
		"\u00ba\u154b\n\u00ba\3\u00bb\3\u00bb\6\u00bb\u154f\n\u00bb\r\u00bb\16"+
		"\u00bb\u1550\3\u00bb\3\u00bb\3\u00bc\3\u00bc\3\u00bd\3\u00bd\3\u00be\3"+
		"\u00be\3\u00bf\3\u00bf\6\u00bf\u155d\n\u00bf\r\u00bf\16\u00bf\u155e\3"+
		"\u00bf\3\u00bf\6\u00bf\u1563\n\u00bf\r\u00bf\16\u00bf\u1564\3\u00bf\3"+
		"\u00bf\7\u00bf\u1569\n\u00bf\f\u00bf\16\u00bf\u156c\13\u00bf\3\u00bf\6"+
		"\u00bf\u156f\n\u00bf\r\u00bf\16\u00bf\u1570\3\u00bf\3\u00bf\5\u00bf\u1575"+
		"\n\u00bf\3\u00c0\3\u00c0\6\u00c0\u1579\n\u00c0\r\u00c0\16\u00c0\u157a"+
		"\3\u00c0\3\u00c0\6\u00c0\u157f\n\u00c0\r\u00c0\16\u00c0\u1580\5\u00c0"+
		"\u1583\n\u00c0\3\u00c0\3\u00c0\6\u00c0\u1587\n\u00c0\r\u00c0\16\u00c0"+
		"\u1588\3\u00c0\3\u00c0\7\u00c0\u158d\n\u00c0\f\u00c0\16\u00c0\u1590\13"+
		"\u00c0\3\u00c1\3\u00c1\3\u00c2\3\u00c2\6\u00c2\u1596\n\u00c2\r\u00c2\16"+
		"\u00c2\u1597\3\u00c2\3\u00c2\6\u00c2\u159c\n\u00c2\r\u00c2\16\u00c2\u159d"+
		"\5\u00c2\u15a0\n\u00c2\3\u00c2\3\u00c2\6\u00c2\u15a4\n\u00c2\r\u00c2\16"+
		"\u00c2\u15a5\5\u00c2\u15a8\n\u00c2\3\u00c2\3\u00c2\6\u00c2\u15ac\n\u00c2"+
		"\r\u00c2\16\u00c2\u15ad\3\u00c2\3\u00c2\7\u00c2\u15b2\n\u00c2\f\u00c2"+
		"\16\u00c2\u15b5\13\u00c2\3\u00c3\3\u00c3\3\u00c4\3\u00c4\6\u00c4\u15bb"+
		"\n\u00c4\r\u00c4\16\u00c4\u15bc\3\u00c4\3\u00c4\3\u00c4\3\u00c4\6\u00c4"+
		"\u15c3\n\u00c4\r\u00c4\16\u00c4\u15c4\3\u00c4\3\u00c4\6\u00c4\u15c9\n"+
		"\u00c4\r\u00c4\16\u00c4\u15ca\3\u00c4\3\u00c4\6\u00c4\u15cf\n\u00c4\r"+
		"\u00c4\16\u00c4\u15d0\3\u00c4\3\u00c4\6\u00c4\u15d5\n\u00c4\r\u00c4\16"+
		"\u00c4\u15d6\3\u00c4\3\u00c4\6\u00c4\u15db\n\u00c4\r\u00c4\16\u00c4\u15dc"+
		"\3\u00c4\3\u00c4\6\u00c4\u15e1\n\u00c4\r\u00c4\16\u00c4\u15e2\5\u00c4"+
		"\u15e5\n\u00c4\3\u00c4\3\u00c4\5\u00c4\u15e9\n\u00c4\3\u00c5\3\u00c5\3"+
		"\u00c6\3\u00c6\3\u00c7\3\u00c7\3\u00c8\3\u00c8\7\u00c8\u15f3\n\u00c8\f"+
		"\u00c8\16\u00c8\u15f6\13\u00c8\3\u00c8\7\u00c8\u15f9\n\u00c8\f\u00c8\16"+
		"\u00c8\u15fc\13\u00c8\3\u00c9\3\u00c9\6\u00c9\u1600\n\u00c9\r\u00c9\16"+
		"\u00c9\u1601\3\u00c9\3\u00c9\5\u00c9\u1606\n\u00c9\3\u00c9\6\u00c9\u1609"+
		"\n\u00c9\r\u00c9\16\u00c9\u160a\3\u00c9\3\u00c9\7\u00c9\u160f\n\u00c9"+
		"\f\u00c9\16\u00c9\u1612\13\u00c9\3\u00c9\3\u00c9\3\u00ca\3\u00ca\6\u00ca"+
		"\u1618\n\u00ca\r\u00ca\16\u00ca\u1619\3\u00ca\3\u00ca\6\u00ca\u161e\n"+
		"\u00ca\r\u00ca\16\u00ca\u161f\5\u00ca\u1622\n\u00ca\3\u00ca\3\u00ca\6"+
		"\u00ca\u1626\n\u00ca\r\u00ca\16\u00ca\u1627\5\u00ca\u162a\n\u00ca\3\u00ca"+
		"\3\u00ca\3\u00ca\3\u00ca\6\u00ca\u1630\n\u00ca\r\u00ca\16\u00ca\u1631"+
		"\3\u00ca\3\u00ca\6\u00ca\u1636\n\u00ca\r\u00ca\16\u00ca\u1637\3\u00ca"+
		"\3\u00ca\6\u00ca\u163c\n\u00ca\r\u00ca\16\u00ca\u163d\5\u00ca\u1640\n"+
		"\u00ca\3\u00ca\3\u00ca\3\u00ca\3\u00ca\6\u00ca\u1646\n\u00ca\r\u00ca\16"+
		"\u00ca\u1647\3\u00ca\3\u00ca\6\u00ca\u164c\n\u00ca\r\u00ca\16\u00ca\u164d"+
		"\5\u00ca\u1650\n\u00ca\3\u00ca\3\u00ca\3\u00ca\3\u00ca\6\u00ca\u1656\n"+
		"\u00ca\r\u00ca\16\u00ca\u1657\3\u00ca\3\u00ca\6\u00ca\u165c\n\u00ca\r"+
		"\u00ca\16\u00ca\u165d\5\u00ca\u1660\n\u00ca\5\u00ca\u1662\n\u00ca\3\u00ca"+
		"\3\u00ca\3\u00ca\6\u00ca\u1667\n\u00ca\r\u00ca\16\u00ca\u1668\3\u00ca"+
		"\3\u00ca\6\u00ca\u166d\n\u00ca\r\u00ca\16\u00ca\u166e\5\u00ca\u1671\n"+
		"\u00ca\3\u00ca\3\u00ca\3\u00ca\3\u00ca\6\u00ca\u1677\n\u00ca\r\u00ca\16"+
		"\u00ca\u1678\3\u00ca\3\u00ca\6\u00ca\u167d\n\u00ca\r\u00ca\16\u00ca\u167e"+
		"\5\u00ca\u1681\n\u00ca\3\u00ca\3\u00ca\6\u00ca\u1685\n\u00ca\r\u00ca\16"+
		"\u00ca\u1686\5\u00ca\u1689\n\u00ca\3\u00ca\3\u00ca\3\u00ca\3\u00ca\6\u00ca"+
		"\u168f\n\u00ca\r\u00ca\16\u00ca\u1690\3\u00ca\3\u00ca\5\u00ca\u1695\n"+
		"\u00ca\3\u00ca\3\u00ca\6\u00ca\u1699\n\u00ca\r\u00ca\16\u00ca\u169a\3"+
		"\u00ca\3\u00ca\5\u00ca\u169f\n\u00ca\3\u00ca\3\u00ca\3\u00ca\3\u00ca\6"+
		"\u00ca\u16a5\n\u00ca\r\u00ca\16\u00ca\u16a6\3\u00ca\3\u00ca\6\u00ca\u16ab"+
		"\n\u00ca\r\u00ca\16\u00ca\u16ac\5\u00ca\u16af\n\u00ca\3\u00ca\3\u00ca"+
		"\3\u00ca\3\u00ca\6\u00ca\u16b5\n\u00ca\r\u00ca\16\u00ca\u16b6\3\u00ca"+
		"\3\u00ca\6\u00ca\u16bb\n\u00ca\r\u00ca\16\u00ca\u16bc\5\u00ca\u16bf\n"+
		"\u00ca\3\u00ca\3\u00ca\3\u00ca\5\u00ca\u16c4\n\u00ca\3\u00cb\3\u00cb\6"+
		"\u00cb\u16c8\n\u00cb\r\u00cb\16\u00cb\u16c9\3\u00cb\3\u00cb\5\u00cb\u16ce"+
		"\n\u00cb\3\u00cb\6\u00cb\u16d1\n\u00cb\r\u00cb\16\u00cb\u16d2\5\u00cb"+
		"\u16d5\n\u00cb\3\u00cb\3\u00cb\6\u00cb\u16d9\n\u00cb\r\u00cb\16\u00cb"+
		"\u16da\3\u00cb\3\u00cb\6\u00cb\u16df\n\u00cb\r\u00cb\16\u00cb\u16e0\3"+
		"\u00cb\3\u00cb\5\u00cb\u16e5\n\u00cb\5\u00cb\u16e7\n\u00cb\3\u00cc\3\u00cc"+
		"\6\u00cc\u16eb\n\u00cc\r\u00cc\16\u00cc\u16ec\3\u00cc\3\u00cc\6\u00cc"+
		"\u16f1\n\u00cc\r\u00cc\16\u00cc\u16f2\3\u00cc\3\u00cc\7\u00cc\u16f7\n"+
		"\u00cc\f\u00cc\16\u00cc\u16fa\13\u00cc\3\u00cc\6\u00cc\u16fd\n\u00cc\r"+
		"\u00cc\16\u00cc\u16fe\3\u00cc\3\u00cc\5\u00cc\u1703\n\u00cc\3\u00cc\6"+
		"\u00cc\u1706\n\u00cc\r\u00cc\16\u00cc\u1707\3\u00cc\3\u00cc\7\u00cc\u170c"+
		"\n\u00cc\f\u00cc\16\u00cc\u170f\13\u00cc\6\u00cc\u1711\n\u00cc\r\u00cc"+
		"\16\u00cc\u1712\3\u00cc\7\u00cc\u1716\n\u00cc\f\u00cc\16\u00cc\u1719\13"+
		"\u00cc\3\u00cc\3\u00cc\6\u00cc\u171d\n\u00cc\r\u00cc\16\u00cc\u171e\3"+
		"\u00cc\3\u00cc\6\u00cc\u1723\n\u00cc\r\u00cc\16\u00cc\u1724\5\u00cc\u1727"+
		"\n\u00cc\3\u00cc\3\u00cc\5\u00cc\u172b\n\u00cc\3\u00cd\3\u00cd\3\u00ce"+
		"\3\u00ce\3\u00cf\3\u00cf\3\u00d0\3\u00d0\3\u00d1\3\u00d1\3\u00d2\3\u00d2"+
		"\6\u00d2\u1739\n\u00d2\r\u00d2\16\u00d2\u173a\3\u00d2\3\u00d2\3\u00d2"+
		"\3\u00d2\3\u00d2\6\u00d2\u1742\n\u00d2\r\u00d2\16\u00d2\u1743\3\u00d2"+
		"\3\u00d2\3\u00d2\3\u00d2\3\u00d2\6\u00d2\u174b\n\u00d2\r\u00d2\16\u00d2"+
		"\u174c\3\u00d2\3\u00d2\3\u00d2\5\u00d2\u1752\n\u00d2\3\u00d2\6\u00d2\u1755"+
		"\n\u00d2\r\u00d2\16\u00d2\u1756\3\u00d2\3\u00d2\3\u00d2\3\u00d2\3\u00d2"+
		"\3\u00d2\6\u00d2\u175f\n\u00d2\r\u00d2\16\u00d2\u1760\3\u00d2\3\u00d2"+
		"\3\u00d2\5\u00d2\u1766\n\u00d2\3\u00d2\6\u00d2\u1769\n\u00d2\r\u00d2\16"+
		"\u00d2\u176a\3\u00d2\3\u00d2\3\u00d2\3\u00d2\6\u00d2\u1771\n\u00d2\r\u00d2"+
		"\16\u00d2\u1772\3\u00d2\3\u00d2\3\u00d2\3\u00d2\3\u00d2\6\u00d2\u177a"+
		"\n\u00d2\r\u00d2\16\u00d2\u177b\3\u00d2\3\u00d2\3\u00d2\5\u00d2\u1781"+
		"\n\u00d2\3\u00d3\3\u00d3\3\u00d4\3\u00d4\3\u00d4\6\u00d4\u1788\n\u00d4"+
		"\r\u00d4\16\u00d4\u1789\3\u00d4\3\u00d4\3\u00d4\3\u00d4\6\u00d4\u1790"+
		"\n\u00d4\r\u00d4\16\u00d4\u1791\3\u00d4\3\u00d4\5\u00d4\u1796\n\u00d4"+
		"\3\u00d5\3\u00d5\6\u00d5\u179a\n\u00d5\r\u00d5\16\u00d5\u179b\3\u00d5"+
		"\3\u00d5\6\u00d5\u17a0\n\u00d5\r\u00d5\16\u00d5\u17a1\5\u00d5\u17a4\n"+
		"\u00d5\3\u00d5\3\u00d5\6\u00d5\u17a8\n\u00d5\r\u00d5\16\u00d5\u17a9\3"+
		"\u00d5\3\u00d5\5\u00d5\u17ae\n\u00d5\3\u00d5\3\u00d5\6\u00d5\u17b2\n\u00d5"+
		"\r\u00d5\16\u00d5\u17b3\3\u00d5\3\u00d5\5\u00d5\u17b8\n\u00d5\3\u00d6"+
		"\3\u00d6\3\u00d7\3\u00d7\6\u00d7\u17be\n\u00d7\r\u00d7\16\u00d7\u17bf"+
		"\5\u00d7\u17c2\n\u00d7\3\u00d7\3\u00d7\3\u00d7\6\u00d7\u17c7\n\u00d7\r"+
		"\u00d7\16\u00d7\u17c8\3\u00d7\3\u00d7\3\u00d7\3\u00d7\6\u00d7\u17cf\n"+
		"\u00d7\r\u00d7\16\u00d7\u17d0\3\u00d7\3\u00d7\5\u00d7\u17d5\n\u00d7\3"+
		"\u00d7\3\u00d7\6\u00d7\u17d9\n\u00d7\r\u00d7\16\u00d7\u17da\3\u00d7\3"+
		"\u00d7\5\u00d7\u17df\n\u00d7\5\u00d7\u17e1\n\u00d7\3\u00d7\6\u00d7\u17e4"+
		"\n\u00d7\r\u00d7\16\u00d7\u17e5\3\u00d7\3\u00d7\7\u00d7\u17ea\n\u00d7"+
		"\f\u00d7\16\u00d7\u17ed\13\u00d7\3\u00d7\7\u00d7\u17f0\n\u00d7\f\u00d7"+
		"\16\u00d7\u17f3\13\u00d7\3\u00d7\3\u00d7\7\u00d7\u17f7\n\u00d7\f\u00d7"+
		"\16\u00d7\u17fa\13\u00d7\3\u00d7\7\u00d7\u17fd\n\u00d7\f\u00d7\16\u00d7"+
		"\u1800\13\u00d7\5\u00d7\u1802\n\u00d7\3\u00d7\3\u00d7\6\u00d7\u1806\n"+
		"\u00d7\r\u00d7\16\u00d7\u1807\3\u00d7\3\u00d7\6\u00d7\u180c\n\u00d7\r"+
		"\u00d7\16\u00d7\u180d\3\u00d7\3\u00d7\6\u00d7\u1812\n\u00d7\r\u00d7\16"+
		"\u00d7\u1813\5\u00d7\u1816\n\u00d7\3\u00d7\3\u00d7\6\u00d7\u181a\n\u00d7"+
		"\r\u00d7\16\u00d7\u181b\3\u00d7\3\u00d7\6\u00d7\u1820\n\u00d7\r\u00d7"+
		"\16\u00d7\u1821\5\u00d7\u1824\n\u00d7\5\u00d7\u1826\n\u00d7\3\u00d7\3"+
		"\u00d7\6\u00d7\u182a\n\u00d7\r\u00d7\16\u00d7\u182b\3\u00d7\3\u00d7\5"+
		"\u00d7\u1830\n\u00d7\3\u00d7\6\u00d7\u1833\n\u00d7\r\u00d7\16\u00d7\u1834"+
		"\3\u00d7\3\u00d7\6\u00d7\u1839\n\u00d7\r\u00d7\16\u00d7\u183a\3\u00d7"+
		"\3\u00d7\5\u00d7\u183f\n\u00d7\3\u00d7\6\u00d7\u1842\n\u00d7\r\u00d7\16"+
		"\u00d7\u1843\3\u00d7\3\u00d7\6\u00d7\u1848\n\u00d7\r\u00d7\16\u00d7\u1849"+
		"\3\u00d7\3\u00d7\6\u00d7\u184e\n\u00d7\r\u00d7\16\u00d7\u184f\3\u00d7"+
		"\3\u00d7\5\u00d7\u1854\n\u00d7\3\u00d7\6\u00d7\u1857\n\u00d7\r\u00d7\16"+
		"\u00d7\u1858\3\u00d7\3\u00d7\6\u00d7\u185d\n\u00d7\r\u00d7\16\u00d7\u185e"+
		"\3\u00d7\3\u00d7\6\u00d7\u1863\n\u00d7\r\u00d7\16\u00d7\u1864\3\u00d7"+
		"\3\u00d7\5\u00d7\u1869\n\u00d7\3\u00d7\6\u00d7\u186c\n\u00d7\r\u00d7\16"+
		"\u00d7\u186d\3\u00d7\3\u00d7\6\u00d7\u1872\n\u00d7\r\u00d7\16\u00d7\u1873"+
		"\3\u00d7\3\u00d7\5\u00d7\u1878\n\u00d7\5\u00d7\u187a\n\u00d7\3\u00d8\3"+
		"\u00d8\3\u00d9\3\u00d9\3\u00da\3\u00da\3\u00db\3\u00db\3\u00dc\3\u00dc"+
		"\3\u00dd\3\u00dd\3\u00de\3\u00de\3\u00df\3\u00df\6\u00df\u188c\n\u00df"+
		"\r\u00df\16\u00df\u188d\3\u00df\3\u00df\5\u00df\u1892\n\u00df\3\u00df"+
		"\6\u00df\u1895\n\u00df\r\u00df\16\u00df\u1896\5\u00df\u1899\n\u00df\3"+
		"\u00df\3\u00df\3\u00e0\3\u00e0\3\u00e0\6\u00e0\u18a0\n\u00e0\r\u00e0\16"+
		"\u00e0\u18a1\3\u00e0\3\u00e0\5\u00e0\u18a6\n\u00e0\3\u00e0\3\u00e0\6\u00e0"+
		"\u18aa\n\u00e0\r\u00e0\16\u00e0\u18ab\3\u00e0\3\u00e0\5\u00e0\u18b0\n"+
		"\u00e0\3\u00e0\3\u00e0\6\u00e0\u18b4\n\u00e0\r\u00e0\16\u00e0\u18b5\3"+
		"\u00e0\3\u00e0\5\u00e0\u18ba\n\u00e0\3\u00e0\3\u00e0\6\u00e0\u18be\n\u00e0"+
		"\r\u00e0\16\u00e0\u18bf\3\u00e0\3\u00e0\5\u00e0\u18c4\n\u00e0\3\u00e0"+
		"\3\u00e0\3\u00e0\3\u00e0\3\u00e0\3\u00e0\3\u00e0\3\u00e0\3\u00e0\3\u00e0"+
		"\3\u00e0\3\u00e0\3\u00e0\3\u00e0\3\u00e0\3\u00e0\3\u00e0\3\u00e0\3\u00e0"+
		"\3\u00e0\3\u00e0\3\u00e0\5\u00e0\u18dc\n\u00e0\3\u00e1\3\u00e1\6\u00e1"+
		"\u18e0\n\u00e1\r\u00e1\16\u00e1\u18e1\3\u00e1\3\u00e1\6\u00e1\u18e6\n"+
		"\u00e1\r\u00e1\16\u00e1\u18e7\5\u00e1\u18ea\n\u00e1\3\u00e1\3\u00e1\3"+
		"\u00e2\6\u00e2\u18ef\n\u00e2\r\u00e2\16\u00e2\u18f0\3\u00e3\3\u00e3\3"+
		"\u00e4\3\u00e4\3\u00e5\3\u00e5\3\u00e6\3\u00e6\5\u00e6\u18fb\n\u00e6\3"+
		"\u00e7\3\u00e7\6\u00e7\u18ff\n\u00e7\r\u00e7\16\u00e7\u1900\3\u00e7\3"+
		"\u00e7\5\u00e7\u1905\n\u00e7\3\u00e7\3\u00e7\6\u00e7\u1909\n\u00e7\r\u00e7"+
		"\16\u00e7\u190a\3\u00e7\3\u00e7\5\u00e7\u190f\n\u00e7\5\u00e7\u1911\n"+
		"\u00e7\3\u00e7\6\u00e7\u1914\n\u00e7\r\u00e7\16\u00e7\u1915\3\u00e7\3"+
		"\u00e7\7\u00e7\u191a\n\u00e7\f\u00e7\16\u00e7\u191d\13\u00e7\3\u00e7\7"+
		"\u00e7\u1920\n\u00e7\f\u00e7\16\u00e7\u1923\13\u00e7\3\u00e8\3\u00e8\3"+
		"\u00e9\3\u00e9\6\u00e9\u1929\n\u00e9\r\u00e9\16\u00e9\u192a\3\u00e9\3"+
		"\u00e9\6\u00e9\u192f\n\u00e9\r\u00e9\16\u00e9\u1930\5\u00e9\u1933\n\u00e9"+
		"\3\u00e9\3\u00e9\6\u00e9\u1937\n\u00e9\r\u00e9\16\u00e9\u1938\3\u00e9"+
		"\3\u00e9\5\u00e9\u193d\n\u00e9\3\u00e9\6\u00e9\u1940\n\u00e9\r\u00e9\16"+
		"\u00e9\u1941\3\u00e9\3\u00e9\6\u00e9\u1946\n\u00e9\r\u00e9\16\u00e9\u1947"+
		"\5\u00e9\u194a\n\u00e9\3\u00e9\3\u00e9\6\u00e9\u194e\n\u00e9\r\u00e9\16"+
		"\u00e9\u194f\3\u00e9\3\u00e9\6\u00e9\u1954\n\u00e9\r\u00e9\16\u00e9\u1955"+
		"\5\u00e9\u1958\n\u00e9\3\u00e9\3\u00e9\5\u00e9\u195c\n\u00e9\3\u00e9\6"+
		"\u00e9\u195f\n\u00e9\r\u00e9\16\u00e9\u1960\3\u00e9\3\u00e9\6\u00e9\u1965"+
		"\n\u00e9\r\u00e9\16\u00e9\u1966\5\u00e9\u1969\n\u00e9\3\u00e9\3\u00e9"+
		"\6\u00e9\u196d\n\u00e9\r\u00e9\16\u00e9\u196e\5\u00e9\u1971\n\u00e9\3"+
		"\u00e9\3\u00e9\6\u00e9\u1975\n\u00e9\r\u00e9\16\u00e9\u1976\3\u00e9\3"+
		"\u00e9\5\u00e9\u197b\n\u00e9\3\u00e9\6\u00e9\u197e\n\u00e9\r\u00e9\16"+
		"\u00e9\u197f\3\u00e9\3\u00e9\6\u00e9\u1984\n\u00e9\r\u00e9\16\u00e9\u1985"+
		"\5\u00e9\u1988\n\u00e9\3\u00e9\3\u00e9\6\u00e9\u198c\n\u00e9\r\u00e9\16"+
		"\u00e9\u198d\5\u00e9\u1990\n\u00e9\3\u00e9\3\u00e9\6\u00e9\u1994\n\u00e9"+
		"\r\u00e9\16\u00e9\u1995\3\u00e9\3\u00e9\5\u00e9\u199a\n\u00e9\3\u00ea"+
		"\3\u00ea\5\u00ea\u199e\n\u00ea\3\u00eb\3\u00eb\5\u00eb\u19a2\n\u00eb\3"+
		"\u00ec\3\u00ec\5\u00ec\u19a6\n\u00ec\3\u00ed\3\u00ed\5\u00ed\u19aa\n\u00ed"+
		"\3\u00ee\3\u00ee\6\u00ee\u19ae\n\u00ee\r\u00ee\16\u00ee\u19af\3\u00ee"+
		"\3\u00ee\6\u00ee\u19b4\n\u00ee\r\u00ee\16\u00ee\u19b5\3\u00ee\3\u00ee"+
		"\5\u00ee\u19ba\n\u00ee\3\u00ee\3\u00ee\6\u00ee\u19be\n\u00ee\r\u00ee\16"+
		"\u00ee\u19bf\3\u00ee\3\u00ee\5\u00ee\u19c4\n\u00ee\5\u00ee\u19c6\n\u00ee"+
		"\3\u00ee\3\u00ee\6\u00ee\u19ca\n\u00ee\r\u00ee\16\u00ee\u19cb\3\u00ee"+
		"\3\u00ee\7\u00ee\u19d0\n\u00ee\f\u00ee\16\u00ee\u19d3\13\u00ee\3\u00ef"+
		"\3\u00ef\3\u00f0\3\u00f0\6\u00f0\u19d9\n\u00f0\r\u00f0\16\u00f0\u19da"+
		"\3\u00f0\3\u00f0\6\u00f0\u19df\n\u00f0\r\u00f0\16\u00f0\u19e0\3\u00f0"+
		"\3\u00f0\6\u00f0\u19e5\n\u00f0\r\u00f0\16\u00f0\u19e6\3\u00f0\3\u00f0"+
		"\6\u00f0\u19eb\n\u00f0\r\u00f0\16\u00f0\u19ec\5\u00f0\u19ef\n\u00f0\3"+
		"\u00f0\3\u00f0\3\u00f1\3\u00f1\5\u00f1\u19f5\n\u00f1\3\u00f2\3\u00f2\6"+
		"\u00f2\u19f9\n\u00f2\r\u00f2\16\u00f2\u19fa\3\u00f2\3\u00f2\6\u00f2\u19ff"+
		"\n\u00f2\r\u00f2\16\u00f2\u1a00\3\u00f2\3\u00f2\5\u00f2\u1a05\n\u00f2"+
		"\3\u00f2\3\u00f2\6\u00f2\u1a09\n\u00f2\r\u00f2\16\u00f2\u1a0a\3\u00f2"+
		"\3\u00f2\5\u00f2\u1a0f\n\u00f2\5\u00f2\u1a11\n\u00f2\3\u00f2\6\u00f2\u1a14"+
		"\n\u00f2\r\u00f2\16\u00f2\u1a15\3\u00f2\3\u00f2\3\u00f3\3\u00f3\6\u00f3"+
		"\u1a1c\n\u00f3\r\u00f3\16\u00f3\u1a1d\3\u00f3\3\u00f3\3\u00f4\3\u00f4"+
		"\6\u00f4\u1a24\n\u00f4\r\u00f4\16\u00f4\u1a25\5\u00f4\u1a28\n\u00f4\3"+
		"\u00f4\3\u00f4\6\u00f4\u1a2c\n\u00f4\r\u00f4\16\u00f4\u1a2d\3\u00f4\3"+
		"\u00f4\6\u00f4\u1a32\n\u00f4\r\u00f4\16\u00f4\u1a33\5\u00f4\u1a36\n\u00f4"+
		"\3\u00f4\3\u00f4\7\u00f4\u1a3a\n\u00f4\f\u00f4\16\u00f4\u1a3d\13\u00f4"+
		"\3\u00f4\3\u00f4\7\u00f4\u1a41\n\u00f4\f\u00f4\16\u00f4\u1a44\13\u00f4"+
		"\5\u00f4\u1a46\n\u00f4\3\u00f4\3\u00f4\6\u00f4\u1a4a\n\u00f4\r\u00f4\16"+
		"\u00f4\u1a4b\5\u00f4\u1a4e\n\u00f4\3\u00f4\3\u00f4\6\u00f4\u1a52\n\u00f4"+
		"\r\u00f4\16\u00f4\u1a53\3\u00f4\3\u00f4\6\u00f4\u1a58\n\u00f4\r\u00f4"+
		"\16\u00f4\u1a59\5\u00f4\u1a5c\n\u00f4\3\u00f4\3\u00f4\7\u00f4\u1a60\n"+
		"\u00f4\f\u00f4\16\u00f4\u1a63\13\u00f4\5\u00f4\u1a65\n\u00f4\3\u00f4\3"+
		"\u00f4\6\u00f4\u1a69\n\u00f4\r\u00f4\16\u00f4\u1a6a\5\u00f4\u1a6d\n\u00f4"+
		"\3\u00f4\5\u00f4\u1a70\n\u00f4\3\u00f4\3\u00f4\6\u00f4\u1a74\n\u00f4\r"+
		"\u00f4\16\u00f4\u1a75\3\u00f4\3\u00f4\5\u00f4\u1a7a\n\u00f4\3\u00f4\7"+
		"\u00f4\u1a7d\n\u00f4\f\u00f4\16\u00f4\u1a80\13\u00f4\3\u00f4\3\u00f4\7"+
		"\u00f4\u1a84\n\u00f4\f\u00f4\16\u00f4\u1a87\13\u00f4\5\u00f4\u1a89\n\u00f4"+
		"\3\u00f4\3\u00f4\6\u00f4\u1a8d\n\u00f4\r\u00f4\16\u00f4\u1a8e\3\u00f4"+
		"\3\u00f4\6\u00f4\u1a93\n\u00f4\r\u00f4\16\u00f4\u1a94\5\u00f4\u1a97\n"+
		"\u00f4\3\u00f4\3\u00f4\5\u00f4\u1a9b\n\u00f4\5\u00f4\u1a9d\n\u00f4\3\u00f5"+
		"\3\u00f5\3\u00f6\3\u00f6\3\u00f7\3\u00f7\3\u00f8\3\u00f8\6\u00f8\u1aa7"+
		"\n\u00f8\r\u00f8\16\u00f8\u1aa8\3\u00f8\3\u00f8\5\u00f8\u1aad\n\u00f8"+
		"\5\u00f8\u1aaf\n\u00f8\3\u00f8\6\u00f8\u1ab2\n\u00f8\r\u00f8\16\u00f8"+
		"\u1ab3\3\u00f8\3\u00f8\7\u00f8\u1ab8\n\u00f8\f\u00f8\16\u00f8\u1abb\13"+
		"\u00f8\3\u00f8\3\u00f8\3\u00f9\3\u00f9\3\u00fa\3\u00fa\6\u00fa\u1ac3\n"+
		"\u00fa\r\u00fa\16\u00fa\u1ac4\3\u00fa\3\u00fa\3\u00fa\3\u00fa\6\u00fa"+
		"\u1acb\n\u00fa\r\u00fa\16\u00fa\u1acc\3\u00fa\3\u00fa\6\u00fa\u1ad1\n"+
		"\u00fa\r\u00fa\16\u00fa\u1ad2\5\u00fa\u1ad5\n\u00fa\3\u00fa\3\u00fa\3"+
		"\u00fa\3\u00fa\6\u00fa\u1adb\n\u00fa\r\u00fa\16\u00fa\u1adc\3\u00fa\3"+
		"\u00fa\6\u00fa\u1ae1\n\u00fa\r\u00fa\16\u00fa\u1ae2\5\u00fa\u1ae5\n\u00fa"+
		"\3\u00fa\3\u00fa\3\u00fa\3\u00fa\3\u00fa\3\u00fa\3\u00fa\6\u00fa\u1aee"+
		"\n\u00fa\r\u00fa\16\u00fa\u1aef\3\u00fa\3\u00fa\6\u00fa\u1af4\n\u00fa"+
		"\r\u00fa\16\u00fa\u1af5\5\u00fa\u1af8\n\u00fa\5\u00fa\u1afa\n\u00fa\3"+
		"\u00fa\3\u00fa\3\u00fa\3\u00fa\3\u00fa\3\u00fa\3\u00fa\6\u00fa\u1b03\n"+
		"\u00fa\r\u00fa\16\u00fa\u1b04\3\u00fa\3\u00fa\3\u00fa\3\u00fa\3\u00fa"+
		"\3\u00fa\3\u00fa\3\u00fa\6\u00fa\u1b0f\n\u00fa\r\u00fa\16\u00fa\u1b10"+
		"\3\u00fa\3\u00fa\6\u00fa\u1b15\n\u00fa\r\u00fa\16\u00fa\u1b16\5\u00fa"+
		"\u1b19\n\u00fa\3\u00fa\3\u00fa\6\u00fa\u1b1d\n\u00fa\r\u00fa\16\u00fa"+
		"\u1b1e\5\u00fa\u1b21\n\u00fa\3\u00fa\3\u00fa\6\u00fa\u1b25\n\u00fa\r\u00fa"+
		"\16\u00fa\u1b26\5\u00fa\u1b29\n\u00fa\3\u00fa\3\u00fa\3\u00fa\3\u00fa"+
		"\6\u00fa\u1b2f\n\u00fa\r\u00fa\16\u00fa\u1b30\3\u00fa\3\u00fa\6\u00fa"+
		"\u1b35\n\u00fa\r\u00fa\16\u00fa\u1b36\5\u00fa\u1b39\n\u00fa\3\u00fa\3"+
		"\u00fa\6\u00fa\u1b3d\n\u00fa\r\u00fa\16\u00fa\u1b3e\5\u00fa\u1b41\n\u00fa"+
		"\3\u00fa\3\u00fa\6\u00fa\u1b45\n\u00fa\r\u00fa\16\u00fa\u1b46\5\u00fa"+
		"\u1b49\n\u00fa\3\u00fa\3\u00fa\3\u00fa\3\u00fa\6\u00fa\u1b4f\n\u00fa\r"+
		"\u00fa\16\u00fa\u1b50\3\u00fa\3\u00fa\6\u00fa\u1b55\n\u00fa\r\u00fa\16"+
		"\u00fa\u1b56\5\u00fa\u1b59\n\u00fa\3\u00fa\3\u00fa\3\u00fa\3\u00fa\6\u00fa"+
		"\u1b5f\n\u00fa\r\u00fa\16\u00fa\u1b60\3\u00fa\3\u00fa\6\u00fa\u1b65\n"+
		"\u00fa\r\u00fa\16\u00fa\u1b66\5\u00fa\u1b69\n\u00fa\3\u00fa\3\u00fa\3"+
		"\u00fa\3\u00fa\6\u00fa\u1b6f\n\u00fa\r\u00fa\16\u00fa\u1b70\3\u00fa\3"+
		"\u00fa\5\u00fa\u1b75\n\u00fa\3\u00fa\3\u00fa\6\u00fa\u1b79\n\u00fa\r\u00fa"+
		"\16\u00fa\u1b7a\3\u00fa\3\u00fa\3\u00fa\6\u00fa\u1b80\n\u00fa\r\u00fa"+
		"\16\u00fa\u1b81\3\u00fa\3\u00fa\5\u00fa\u1b86\n\u00fa\3\u00fa\5\u00fa"+
		"\u1b89\n\u00fa\5\u00fa\u1b8b\n\u00fa\3\u00fb\3\u00fb\6\u00fb\u1b8f\n\u00fb"+
		"\r\u00fb\16\u00fb\u1b90\3\u00fb\3\u00fb\3\u00fc\3\u00fc\6\u00fc\u1b97"+
		"\n\u00fc\r\u00fc\16\u00fc\u1b98\3\u00fc\3\u00fc\5\u00fc\u1b9d\n\u00fc"+
		"\3\u00fd\3\u00fd\6\u00fd\u1ba1\n\u00fd\r\u00fd\16\u00fd\u1ba2\3\u00fd"+
		"\3\u00fd\3\u00fe\3\u00fe\3\u00ff\3\u00ff\5\u00ff\u1bab\n\u00ff\3\u0100"+
		"\3\u0100\3\u0101\3\u0101\6\u0101\u1bb1\n\u0101\r\u0101\16\u0101\u1bb2"+
		"\3\u0101\3\u0101\7\u0101\u1bb7\n\u0101\f\u0101\16\u0101\u1bba\13\u0101"+
		"\3\u0101\3\u0101\7\u0101\u1bbe\n\u0101\f\u0101\16\u0101\u1bc1\13\u0101"+
		"\3\u0101\7\u0101\u1bc4\n\u0101\f\u0101\16\u0101\u1bc7\13\u0101\3\u0102"+
		"\3\u0102\3\u0102\3\u0102\3\u0102\3\u0102\3\u0102\3\u0102\5\u0102\u1bd1"+
		"\n\u0102\3\u0103\3\u0103\7\u0103\u1bd5\n\u0103\f\u0103\16\u0103\u1bd8"+
		"\13\u0103\3\u0103\3\u0103\7\u0103\u1bdc\n\u0103\f\u0103\16\u0103\u1bdf"+
		"\13\u0103\3\u0103\3\u0103\7\u0103\u1be3\n\u0103\f\u0103\16\u0103\u1be6"+
		"\13\u0103\3\u0103\5\u0103\u1be9\n\u0103\3\u0103\7\u0103\u1bec\n\u0103"+
		"\f\u0103\16\u0103\u1bef\13\u0103\3\u0103\5\u0103\u1bf2\n\u0103\3\u0103"+
		"\7\u0103\u1bf5\n\u0103\f\u0103\16\u0103\u1bf8\13\u0103\3\u0103\3\u0103"+
		"\3\u0104\3\u0104\3\u0105\3\u0105\6\u0105\u1c00\n\u0105\r\u0105\16\u0105"+
		"\u1c01\5\u0105\u1c04\n\u0105\3\u0105\3\u0105\6\u0105\u1c08\n\u0105\r\u0105"+
		"\16\u0105\u1c09\3\u0105\3\u0105\5\u0105\u1c0e\n\u0105\3\u0106\3\u0106"+
		"\6\u0106\u1c12\n\u0106\r\u0106\16\u0106\u1c13\5\u0106\u1c16\n\u0106\3"+
		"\u0106\3\u0106\6\u0106\u1c1a\n\u0106\r\u0106\16\u0106\u1c1b\3\u0106\3"+
		"\u0106\3\u0107\3\u0107\3\u0108\3\u0108\7\u0108\u1c24\n\u0108\f\u0108\16"+
		"\u0108\u1c27\13\u0108\3\u0108\3\u0108\5\u0108\u1c2b\n\u0108\3\u0109\3"+
		"\u0109\7\u0109\u1c2f\n\u0109\f\u0109\16\u0109\u1c32\13\u0109\3\u0109\3"+
		"\u0109\7\u0109\u1c36\n\u0109\f\u0109\16\u0109\u1c39\13\u0109\3\u0109\3"+
		"\u0109\7\u0109\u1c3d\n\u0109\f\u0109\16\u0109\u1c40\13\u0109\3\u010a\3"+
		"\u010a\7\u010a\u1c44\n\u010a\f\u010a\16\u010a\u1c47\13\u010a\3\u010a\3"+
		"\u010a\7\u010a\u1c4b\n\u010a\f\u010a\16\u010a\u1c4e\13\u010a\3\u010a\3"+
		"\u010a\7\u010a\u1c52\n\u010a\f\u010a\16\u010a\u1c55\13\u010a\3\u010b\3"+
		"\u010b\7\u010b\u1c59\n\u010b\f\u010b\16\u010b\u1c5c\13\u010b\3\u010b\3"+
		"\u010b\7\u010b\u1c60\n\u010b\f\u010b\16\u010b\u1c63\13\u010b\3\u010b\3"+
		"\u010b\7\u010b\u1c67\n\u010b\f\u010b\16\u010b\u1c6a\13\u010b\3\u010c\3"+
		"\u010c\7\u010c\u1c6e\n\u010c\f\u010c\16\u010c\u1c71\13\u010c\3\u010c\3"+
		"\u010c\7\u010c\u1c75\n\u010c\f\u010c\16\u010c\u1c78\13\u010c\3\u010c\3"+
		"\u010c\7\u010c\u1c7c\n\u010c\f\u010c\16\u010c\u1c7f\13\u010c\3\u010d\3"+
		"\u010d\7\u010d\u1c83\n\u010d\f\u010d\16\u010d\u1c86\13\u010d\3\u010d\3"+
		"\u010d\7\u010d\u1c8a\n\u010d\f\u010d\16\u010d\u1c8d\13\u010d\3\u010d\3"+
		"\u010d\7\u010d\u1c91\n\u010d\f\u010d\16\u010d\u1c94\13\u010d\3\u010e\3"+
		"\u010e\7\u010e\u1c98\n\u010e\f\u010e\16\u010e\u1c9b\13\u010e\3\u010e\3"+
		"\u010e\7\u010e\u1c9f\n\u010e\f\u010e\16\u010e\u1ca2\13\u010e\3\u010e\5"+
		"\u010e\u1ca5\n\u010e\3\u010e\7\u010e\u1ca8\n\u010e\f\u010e\16\u010e\u1cab"+
		"\13\u010e\3\u010e\5\u010e\u1cae\n\u010e\3\u010f\3\u010f\6\u010f\u1cb2"+
		"\n\u010f\r\u010f\16\u010f\u1cb3\3\u010f\3\u010f\6\u010f\u1cb8\n\u010f"+
		"\r\u010f\16\u010f\u1cb9\5\u010f\u1cbc\n\u010f\3\u010f\3\u010f\7\u010f"+
		"\u1cc0\n\u010f\f\u010f\16\u010f\u1cc3\13\u010f\3\u010f\3\u010f\3\u0110"+
		"\3\u0110\6\u0110\u1cc9\n\u0110\r\u0110\16\u0110\u1cca\3\u0110\3\u0110"+
		"\7\u0110\u1ccf\n\u0110\f\u0110\16\u0110\u1cd2\13\u0110\3\u0110\3\u0110"+
		"\7\u0110\u1cd6\n\u0110\f\u0110\16\u0110\u1cd9\13\u0110\3\u0110\5\u0110"+
		"\u1cdc\n\u0110\3\u0110\5\u0110\u1cdf\n\u0110\3\u0111\3\u0111\6\u0111\u1ce3"+
		"\n\u0111\r\u0111\16\u0111\u1ce4\3\u0111\3\u0111\7\u0111\u1ce9\n\u0111"+
		"\f\u0111\16\u0111\u1cec\13\u0111\3\u0111\3\u0111\7\u0111\u1cf0\n\u0111"+
		"\f\u0111\16\u0111\u1cf3\13\u0111\3\u0111\5\u0111\u1cf6\n\u0111\3\u0111"+
		"\7\u0111\u1cf9\n\u0111\f\u0111\16\u0111\u1cfc\13\u0111\3\u0111\5\u0111"+
		"\u1cff\n\u0111\3\u0111\7\u0111\u1d02\n\u0111\f\u0111\16\u0111\u1d05\13"+
		"\u0111\3\u0111\5\u0111\u1d08\n\u0111\3\u0111\7\u0111\u1d0b\n\u0111\f\u0111"+
		"\16\u0111\u1d0e\13\u0111\3\u0112\3\u0112\6\u0112\u1d12\n\u0112\r\u0112"+
		"\16\u0112\u1d13\3\u0112\3\u0112\7\u0112\u1d18\n\u0112\f\u0112\16\u0112"+
		"\u1d1b\13\u0112\3\u0112\3\u0112\7\u0112\u1d1f\n\u0112\f\u0112\16\u0112"+
		"\u1d22\13\u0112\3\u0112\5\u0112\u1d25\n\u0112\3\u0112\5\u0112\u1d28\n"+
		"\u0112\3\u0113\3\u0113\7\u0113\u1d2c\n\u0113\f\u0113\16\u0113\u1d2f\13"+
		"\u0113\3\u0113\3\u0113\7\u0113\u1d33\n\u0113\f\u0113\16\u0113\u1d36\13"+
		"\u0113\3\u0113\3\u0113\6\u0113\u1d3a\n\u0113\r\u0113\16\u0113\u1d3b\3"+
		"\u0113\3\u0113\5\u0113\u1d40\n\u0113\3\u0113\7\u0113\u1d43\n\u0113\f\u0113"+
		"\16\u0113\u1d46\13\u0113\3\u0113\3\u0113\5\u0113\u1d4a\n\u0113\3\u0114"+
		"\3\u0114\3\u0115\3\u0115\6\u0115\u1d50\n\u0115\r\u0115\16\u0115\u1d51"+
		"\5\u0115\u1d54\n\u0115\3\u0115\3\u0115\6\u0115\u1d58\n\u0115\r\u0115\16"+
		"\u0115\u1d59\3\u0115\3\u0115\3\u0116\3\u0116\7\u0116\u1d60\n\u0116\f\u0116"+
		"\16\u0116\u1d63\13\u0116\3\u0116\3\u0116\7\u0116\u1d67\n\u0116\f\u0116"+
		"\16\u0116\u1d6a\13\u0116\3\u0116\3\u0116\6\u0116\u1d6e\n\u0116\r\u0116"+
		"\16\u0116\u1d6f\3\u0116\3\u0116\5\u0116\u1d74\n\u0116\3\u0116\6\u0116"+
		"\u1d77\n\u0116\r\u0116\16\u0116\u1d78\3\u0116\3\u0116\5\u0116\u1d7d\n"+
		"\u0116\3\u0116\6\u0116\u1d80\n\u0116\r\u0116\16\u0116\u1d81\3\u0116\3"+
		"\u0116\5\u0116\u1d86\n\u0116\3\u0116\7\u0116\u1d89\n\u0116\f\u0116\16"+
		"\u0116\u1d8c\13\u0116\3\u0116\3\u0116\5\u0116\u1d90\n\u0116\3\u0117\3"+
		"\u0117\6\u0117\u1d94\n\u0117\r\u0117\16\u0117\u1d95\3\u0117\3\u0117\5"+
		"\u0117\u1d9a\n\u0117\3\u0117\6\u0117\u1d9d\n\u0117\r\u0117\16\u0117\u1d9e"+
		"\3\u0117\3\u0117\6\u0117\u1da3\n\u0117\r\u0117\16\u0117\u1da4\3\u0117"+
		"\3\u0117\3\u0118\3\u0118\3\u0119\3\u0119\3\u011a\3\u011a\6\u011a\u1daf"+
		"\n\u011a\r\u011a\16\u011a\u1db0\5\u011a\u1db3\n\u011a\3\u011a\3\u011a"+
		"\6\u011a\u1db7\n\u011a\r\u011a\16\u011a\u1db8\5\u011a\u1dbb\n\u011a\3"+
		"\u011a\3\u011a\6\u011a\u1dbf\n\u011a\r\u011a\16\u011a\u1dc0\3\u011a\3"+
		"\u011a\5\u011a\u1dc5\n\u011a\3\u011a\6\u011a\u1dc8\n\u011a\r\u011a\16"+
		"\u011a\u1dc9\3\u011a\3\u011a\3\u011b\3\u011b\3\u011c\3\u011c\6\u011c\u1dd2"+
		"\n\u011c\r\u011c\16\u011c\u1dd3\3\u011c\3\u011c\5\u011c\u1dd8\n\u011c"+
		"\3\u011c\3\u011c\3\u011d\3\u011d\3\u011e\3\u011e\7\u011e\u1de0\n\u011e"+
		"\f\u011e\16\u011e\u1de3\13\u011e\3\u011e\3\u011e\7\u011e\u1de7\n\u011e"+
		"\f\u011e\16\u011e\u1dea\13\u011e\3\u011e\3\u011e\7\u011e\u1dee\n\u011e"+
		"\f\u011e\16\u011e\u1df1\13\u011e\6\u011e\u1df3\n\u011e\r\u011e\16\u011e"+
		"\u1df4\3\u011e\3\u011e\5\u011e\u1df9\n\u011e\3\u011f\3\u011f\6\u011f\u1dfd"+
		"\n\u011f\r\u011f\16\u011f\u1dfe\3\u011f\3\u011f\6\u011f\u1e03\n\u011f"+
		"\r\u011f\16\u011f\u1e04\5\u011f\u1e07\n\u011f\3\u011f\3\u011f\3\u011f"+
		"\3\u011f\6\u011f\u1e0d\n\u011f\r\u011f\16\u011f\u1e0e\3\u011f\3\u011f"+
		"\6\u011f\u1e13\n\u011f\r\u011f\16\u011f\u1e14\5\u011f\u1e17\n\u011f\3"+
		"\u011f\3\u011f\3\u011f\3\u011f\6\u011f\u1e1d\n\u011f\r\u011f\16\u011f"+
		"\u1e1e\3\u011f\3\u011f\6\u011f\u1e23\n\u011f\r\u011f\16\u011f\u1e24\5"+
		"\u011f\u1e27\n\u011f\3\u011f\3\u011f\3\u011f\3\u011f\3\u011f\3\u011f\3"+
		"\u011f\3\u011f\3\u011f\6\u011f\u1e32\n\u011f\r\u011f\16\u011f\u1e33\3"+
		"\u011f\3\u011f\6\u011f\u1e38\n\u011f\r\u011f\16\u011f\u1e39\5\u011f\u1e3c"+
		"\n\u011f\3\u011f\3\u011f\3\u011f\3\u011f\6\u011f\u1e42\n\u011f\r\u011f"+
		"\16\u011f\u1e43\3\u011f\3\u011f\6\u011f\u1e48\n\u011f\r\u011f\16\u011f"+
		"\u1e49\5\u011f\u1e4c\n\u011f\3\u011f\3\u011f\3\u011f\3\u011f\6\u011f\u1e52"+
		"\n\u011f\r\u011f\16\u011f\u1e53\3\u011f\3\u011f\6\u011f\u1e58\n\u011f"+
		"\r\u011f\16\u011f\u1e59\3\u011f\3\u011f\6\u011f\u1e5e\n\u011f\r\u011f"+
		"\16\u011f\u1e5f\5\u011f\u1e62\n\u011f\3\u011f\3\u011f\5\u011f\u1e66\n"+
		"\u011f\3\u0120\3\u0120\6\u0120\u1e6a\n\u0120\r\u0120\16\u0120\u1e6b\3"+
		"\u0120\3\u0120\6\u0120\u1e70\n\u0120\r\u0120\16\u0120\u1e71\3\u0120\3"+
		"\u0120\7\u0120\u1e76\n\u0120\f\u0120\16\u0120\u1e79\13\u0120\3\u0121\3"+
		"\u0121\6\u0121\u1e7d\n\u0121\r\u0121\16\u0121\u1e7e\3\u0121\3\u0121\6"+
		"\u0121\u1e83\n\u0121\r\u0121\16\u0121\u1e84\5\u0121\u1e87\n\u0121\3\u0121"+
		"\3\u0121\6\u0121\u1e8b\n\u0121\r\u0121\16\u0121\u1e8c\5\u0121\u1e8f\n"+
		"\u0121\3\u0121\3\u0121\3\u0122\3\u0122\3\u0122\6\u0122\u1e96\n\u0122\r"+
		"\u0122\16\u0122\u1e97\5\u0122\u1e9a\n\u0122\3\u0122\3\u0122\6\u0122\u1e9e"+
		"\n\u0122\r\u0122\16\u0122\u1e9f\3\u0122\3\u0122\6\u0122\u1ea4\n\u0122"+
		"\r\u0122\16\u0122\u1ea5\3\u0122\3\u0122\3\u0122\5\u0122\u1eab\n\u0122"+
		"\3\u0123\3\u0123\3\u0124\3\u0124\3\u0125\3\u0125\6\u0125\u1eb3\n\u0125"+
		"\r\u0125\16\u0125\u1eb4\3\u0125\3\u0125\6\u0125\u1eb9\n\u0125\r\u0125"+
		"\16\u0125\u1eba\3\u0125\3\u0125\6\u0125\u1ebf\n\u0125\r\u0125\16\u0125"+
		"\u1ec0\5\u0125\u1ec3\n\u0125\3\u0125\3\u0125\7\u0125\u1ec7\n\u0125\f\u0125"+
		"\16\u0125\u1eca\13\u0125\6\u0125\u1ecc\n\u0125\r\u0125\16\u0125\u1ecd"+
		"\3\u0126\3\u0126\3\u0127\3\u0127\6\u0127\u1ed4\n\u0127\r\u0127\16\u0127"+
		"\u1ed5\3\u0127\3\u0127\6\u0127\u1eda\n\u0127\r\u0127\16\u0127\u1edb\3"+
		"\u0127\3\u0127\5\u0127\u1ee0\n\u0127\3\u0128\3\u0128\6\u0128\u1ee4\n\u0128"+
		"\r\u0128\16\u0128\u1ee5\3\u0128\3\u0128\6\u0128\u1eea\n\u0128\r\u0128"+
		"\16\u0128\u1eeb\5\u0128\u1eee\n\u0128\3\u0128\6\u0128\u1ef1\n\u0128\r"+
		"\u0128\16\u0128\u1ef2\3\u0129\6\u0129\u1ef6\n\u0129\r\u0129\16\u0129\u1ef7"+
		"\3\u0129\5\u0129\u1efb\n\u0129\3\u012a\3\u012a\6\u012a\u1eff\n\u012a\r"+
		"\u012a\16\u012a\u1f00\6\u012a\u1f03\n\u012a\r\u012a\16\u012a\u1f04\3\u012a"+
		"\3\u012a\6\u012a\u1f09\n\u012a\r\u012a\16\u012a\u1f0a\5\u012a\u1f0d\n"+
		"\u012a\3\u012a\3\u012a\6\u012a\u1f11\n\u012a\r\u012a\16\u012a\u1f12\6"+
		"\u012a\u1f15\n\u012a\r\u012a\16\u012a\u1f16\3\u012b\3\u012b\6\u012b\u1f1b"+
		"\n\u012b\r\u012b\16\u012b\u1f1c\3\u012b\3\u012b\7\u012b\u1f21\n\u012b"+
		"\f\u012b\16\u012b\u1f24\13\u012b\3\u012c\3\u012c\3\u012d\3\u012d\3\u012e"+
		"\3\u012e\6\u012e\u1f2c\n\u012e\r\u012e\16\u012e\u1f2d\3\u012e\3\u012e"+
		"\6\u012e\u1f32\n\u012e\r\u012e\16\u012e\u1f33\3\u012e\3\u012e\6\u012e"+
		"\u1f38\n\u012e\r\u012e\16\u012e\u1f39\5\u012e\u1f3c\n\u012e\3\u012e\3"+
		"\u012e\3\u012f\3\u012f\3\u012f\3\u012f\3\u012f\3\u012f\3\u012f\7\u012f"+
		"\u1f47\n\u012f\f\u012f\16\u012f\u1f4a\13\u012f\6\u012f\u1f4c\n\u012f\r"+
		"\u012f\16\u012f\u1f4d\5\u012f\u1f50\n\u012f\3\u0130\3\u0130\6\u0130\u1f54"+
		"\n\u0130\r\u0130\16\u0130\u1f55\3\u0130\3\u0130\6\u0130\u1f5a\n\u0130"+
		"\r\u0130\16\u0130\u1f5b\3\u0130\3\u0130\5\u0130\u1f60\n\u0130\3\u0130"+
		"\3\u0130\6\u0130\u1f64\n\u0130\r\u0130\16\u0130\u1f65\3\u0130\3\u0130"+
		"\6\u0130\u1f6a\n\u0130\r\u0130\16\u0130\u1f6b\3\u0130\3\u0130\6\u0130"+
		"\u1f70\n\u0130\r\u0130\16\u0130\u1f71\5\u0130\u1f74\n\u0130\3\u0131\3"+
		"\u0131\3\u0132\3\u0132\3\u0133\3\u0133\3\u0134\3\u0134\6\u0134\u1f7e\n"+
		"\u0134\r\u0134\16\u0134\u1f7f\3\u0134\3\u0134\7\u0134\u1f84\n\u0134\f"+
		"\u0134\16\u0134\u1f87\13\u0134\3\u0134\3\u0134\6\u0134\u1f8b\n\u0134\r"+
		"\u0134\16\u0134\u1f8c\5\u0134\u1f8f\n\u0134\3\u0134\3\u0134\6\u0134\u1f93"+
		"\n\u0134\r\u0134\16\u0134\u1f94\5\u0134\u1f97\n\u0134\3\u0134\3\u0134"+
		"\6\u0134\u1f9b\n\u0134\r\u0134\16\u0134\u1f9c\3\u0134\3\u0134\5\u0134"+
		"\u1fa1\n\u0134\3\u0134\3\u0134\6\u0134\u1fa5\n\u0134\r\u0134\16\u0134"+
		"\u1fa6\3\u0134\3\u0134\5\u0134\u1fab\n\u0134\5\u0134\u1fad\n\u0134\3\u0134"+
		"\7\u0134\u1fb0\n\u0134\f\u0134\16\u0134\u1fb3\13\u0134\3\u0135\3\u0135"+
		"\6\u0135\u1fb7\n\u0135\r\u0135\16\u0135\u1fb8\3\u0135\3\u0135\6\u0135"+
		"\u1fbd\n\u0135\r\u0135\16\u0135\u1fbe\5\u0135\u1fc1\n\u0135\3\u0135\3"+
		"\u0135\6\u0135\u1fc5\n\u0135\r\u0135\16\u0135\u1fc6\5\u0135\u1fc9\n\u0135"+
		"\3\u0135\3\u0135\3\u0136\3\u0136\6\u0136\u1fcf\n\u0136\r\u0136\16\u0136"+
		"\u1fd0\3\u0136\3\u0136\6\u0136\u1fd5\n\u0136\r\u0136\16\u0136\u1fd6\5"+
		"\u0136\u1fd9\n\u0136\3\u0136\3\u0136\6\u0136\u1fdd\n\u0136\r\u0136\16"+
		"\u0136\u1fde\5\u0136\u1fe1\n\u0136\3\u0136\3\u0136\3\u0137\3\u0137\3\u0138"+
		"\3\u0138\3\u0139\3\u0139\3\u013a\3\u013a\3\u013b\3\u013b\3\u013c\3\u013c"+
		"\3\u013d\3\u013d\3\u013e\3\u013e\3\u013f\3\u013f\7\u013f\u1ff7\n\u013f"+
		"\f\u013f\16\u013f\u1ffa\13\u013f\3\u013f\3\u013f\7\u013f\u1ffe\n\u013f"+
		"\f\u013f\16\u013f\u2001\13\u013f\3\u013f\3\u013f\7\u013f\u2005\n\u013f"+
		"\f\u013f\16\u013f\u2008\13\u013f\7\u013f\u200a\n\u013f\f\u013f\16\u013f"+
		"\u200d\13\u013f\3\u0140\3\u0140\6\u0140\u2011\n\u0140\r\u0140\16\u0140"+
		"\u2012\3\u0140\3\u0140\6\u0140\u2017\n\u0140\r\u0140\16\u0140\u2018\5"+
		"\u0140\u201b\n\u0140\3\u0140\3\u0140\7\u0140\u201f\n\u0140\f\u0140\16"+
		"\u0140\u2022\13\u0140\3\u0140\3\u0140\7\u0140\u2026\n\u0140\f\u0140\16"+
		"\u0140\u2029\13\u0140\3\u0140\3\u0140\7\u0140\u202d\n\u0140\f\u0140\16"+
		"\u0140\u2030\13\u0140\5\u0140\u2032\n\u0140\3\u0140\3\u0140\7\u0140\u2036"+
		"\n\u0140\f\u0140\16\u0140\u2039\13\u0140\5\u0140\u203b\n\u0140\3\u0140"+
		"\3\u0140\7\u0140\u203f\n\u0140\f\u0140\16\u0140\u2042\13\u0140\5\u0140"+
		"\u2044\n\u0140\3\u0140\3\u0140\7\u0140\u2048\n\u0140\f\u0140\16\u0140"+
		"\u204b\13\u0140\5\u0140\u204d\n\u0140\3\u0140\3\u0140\7\u0140\u2051\n"+
		"\u0140\f\u0140\16\u0140\u2054\13\u0140\5\u0140\u2056\n\u0140\3\u0140\3"+
		"\u0140\7\u0140\u205a\n\u0140\f\u0140\16\u0140\u205d\13\u0140\5\u0140\u205f"+
		"\n\u0140\3\u0140\3\u0140\7\u0140\u2063\n\u0140\f\u0140\16\u0140\u2066"+
		"\13\u0140\5\u0140\u2068\n\u0140\3\u0140\3\u0140\7\u0140\u206c\n\u0140"+
		"\f\u0140\16\u0140\u206f\13\u0140\7\u0140\u2071\n\u0140\f\u0140\16\u0140"+
		"\u2074\13\u0140\3\u0140\3\u0140\7\u0140\u2078\n\u0140\f\u0140\16\u0140"+
		"\u207b\13\u0140\5\u0140\u207d\n\u0140\3\u0140\3\u0140\7\u0140\u2081\n"+
		"\u0140\f\u0140\16\u0140\u2084\13\u0140\5\u0140\u2086\n\u0140\3\u0140\3"+
		"\u0140\3\u0141\3\u0141\6\u0141\u208c\n\u0141\r\u0141\16\u0141\u208d\5"+
		"\u0141\u2090\n\u0141\3\u0141\3\u0141\6\u0141\u2094\n\u0141\r\u0141\16"+
		"\u0141\u2095\3\u0141\3\u0141\6\u0141\u209a\n\u0141\r\u0141\16\u0141\u209b"+
		"\5\u0141\u209e\n\u0141\3\u0141\3\u0141\3\u0142\3\u0142\3\u0143\3\u0143"+
		"\6\u0143\u20a6\n\u0143\r\u0143\16\u0143\u20a7\5\u0143\u20aa\n\u0143\3"+
		"\u0143\3\u0143\6\u0143\u20ae\n\u0143\r\u0143\16\u0143\u20af\3\u0143\3"+
		"\u0143\6\u0143\u20b4\n\u0143\r\u0143\16\u0143\u20b5\5\u0143\u20b8\n\u0143"+
		"\3\u0143\3\u0143\6\u0143\u20bc\n\u0143\r\u0143\16\u0143\u20bd\5\u0143"+
		"\u20c0\n\u0143\3\u0143\3\u0143\6\u0143\u20c4\n\u0143\r\u0143\16\u0143"+
		"\u20c5\3\u0143\3\u0143\6\u0143\u20ca\n\u0143\r\u0143\16\u0143\u20cb\5"+
		"\u0143\u20ce\n\u0143\3\u0143\3\u0143\5\u0143\u20d2\n\u0143\3\u0143\6\u0143"+
		"\u20d5\n\u0143\r\u0143\16\u0143\u20d6\3\u0143\3\u0143\5\u0143\u20db\n"+
		"\u0143\3\u0144\3\u0144\3\u0144\7\u0144\u20e0\n\u0144\f\u0144\16\u0144"+
		"\u20e3\13\u0144\3\u0144\3\u0144\7\u0144\u20e7\n\u0144\f\u0144\16\u0144"+
		"\u20ea\13\u0144\3\u0144\3\u0144\7\u0144\u20ee\n\u0144\f\u0144\16\u0144"+
		"\u20f1\13\u0144\3\u0144\7\u0144\u20f4\n\u0144\f\u0144\16\u0144\u20f7\13"+
		"\u0144\5\u0144\u20f9\n\u0144\3\u0145\3\u0145\6\u0145\u20fd\n\u0145\r\u0145"+
		"\16\u0145\u20fe\3\u0145\3\u0145\6\u0145\u2103\n\u0145\r\u0145\16\u0145"+
		"\u2104\5\u0145\u2107\n\u0145\3\u0145\3\u0145\6\u0145\u210b\n\u0145\r\u0145"+
		"\16\u0145\u210c\5\u0145\u210f\n\u0145\5\u0145\u2111\n\u0145\3\u0145\3"+
		"\u0145\6\u0145\u2115\n\u0145\r\u0145\16\u0145\u2116\3\u0145\3\u0145\6"+
		"\u0145\u211b\n\u0145\r\u0145\16\u0145\u211c\3\u0145\3\u0145\6\u0145\u2121"+
		"\n\u0145\r\u0145\16\u0145\u2122\5\u0145\u2125\n\u0145\3\u0145\3\u0145"+
		"\6\u0145\u2129\n\u0145\r\u0145\16\u0145\u212a\5\u0145\u212d\n\u0145\3"+
		"\u0145\3\u0145\5\u0145\u2131\n\u0145\3\u0146\3\u0146\6\u0146\u2135\n\u0146"+
		"\r\u0146\16\u0146\u2136\3\u0146\3\u0146\6\u0146\u213b\n\u0146\r\u0146"+
		"\16\u0146\u213c\3\u0146\3\u0146\5\u0146\u2141\n\u0146\3\u0147\3\u0147"+
		"\3\u0148\3\u0148\6\u0148\u2147\n\u0148\r\u0148\16\u0148\u2148\3\u0148"+
		"\3\u0148\6\u0148\u214d\n\u0148\r\u0148\16\u0148\u214e\3\u0148\3\u0148"+
		"\6\u0148\u2153\n\u0148\r\u0148\16\u0148\u2154\5\u0148\u2157\n\u0148\3"+
		"\u0148\3\u0148\3\u0149\3\u0149\6\u0149\u215d\n\u0149\r\u0149\16\u0149"+
		"\u215e\3\u0149\3\u0149\6\u0149\u2163\n\u0149\r\u0149\16\u0149\u2164\5"+
		"\u0149\u2167\n\u0149\3\u0149\3\u0149\6\u0149\u216b\n\u0149\r\u0149\16"+
		"\u0149\u216c\5\u0149\u216f\n\u0149\3\u0149\3\u0149\3\u014a\3\u014a\3\u014b"+
		"\3\u014b\6\u014b\u2177\n\u014b\r\u014b\16\u014b\u2178\3\u014b\3\u014b"+
		"\6\u014b\u217d\n\u014b\r\u014b\16\u014b\u217e\5\u014b\u2181\n\u014b\5"+
		"\u014b\u2183\n\u014b\3\u014b\3\u014b\3\u014b\6\u014b\u2188\n\u014b\r\u014b"+
		"\16\u014b\u2189\3\u014b\3\u014b\3\u014b\3\u014b\5\u014b\u2190\n\u014b"+
		"\3\u014c\3\u014c\6\u014c\u2194\n\u014c\r\u014c\16\u014c\u2195\3\u014c"+
		"\3\u014c\6\u014c\u219a\n\u014c\r\u014c\16\u014c\u219b\5\u014c\u219e\n"+
		"\u014c\3\u014c\3\u014c\6\u014c\u21a2\n\u014c\r\u014c\16\u014c\u21a3\5"+
		"\u014c\u21a6\n\u014c\3\u014c\3\u014c\3\u014d\3\u014d\6\u014d\u21ac\n\u014d"+
		"\r\u014d\16\u014d\u21ad\3\u014d\3\u014d\6\u014d\u21b2\n\u014d\r\u014d"+
		"\16\u014d\u21b3\5\u014d\u21b6\n\u014d\3\u014d\3\u014d\6\u014d\u21ba\n"+
		"\u014d\r\u014d\16\u014d\u21bb\3\u014d\3\u014d\6\u014d\u21c0\n\u014d\r"+
		"\u014d\16\u014d\u21c1\3\u014d\3\u014d\6\u014d\u21c6\n\u014d\r\u014d\16"+
		"\u014d\u21c7\3\u014d\3\u014d\3\u014d\3\u014d\6\u014d\u21ce\n\u014d\r\u014d"+
		"\16\u014d\u21cf\3\u014d\3\u014d\6\u014d\u21d4\n\u014d\r\u014d\16\u014d"+
		"\u21d5\5\u014d\u21d8\n\u014d\3\u014d\3\u014d\6\u014d\u21dc\n\u014d\r\u014d"+
		"\16\u014d\u21dd\3\u014d\3\u014d\6\u014d\u21e2\n\u014d\r\u014d\16\u014d"+
		"\u21e3\3\u014d\3\u014d\3\u014d\5\u014d\u21e9\n\u014d\5\u014d\u21eb\n\u014d"+
		"\3\u014d\5\u014d\u21ee\n\u014d\3\u014e\3\u014e\6\u014e\u21f2\n\u014e\r"+
		"\u014e\16\u014e\u21f3\3\u014e\3\u014e\6\u014e\u21f8\n\u014e\r\u014e\16"+
		"\u014e\u21f9\5\u014e\u21fc\n\u014e\3\u014e\3\u014e\3\u014f\3\u014f\6\u014f"+
		"\u2202\n\u014f\r\u014f\16\u014f\u2203\3\u014f\3\u014f\6\u014f\u2208\n"+
		"\u014f\r\u014f\16\u014f\u2209\5\u014f\u220c\n\u014f\3\u014f\3\u014f\6"+
		"\u014f\u2210\n\u014f\r\u014f\16\u014f\u2211\3\u014f\3\u014f\6\u014f\u2216"+
		"\n\u014f\r\u014f\16\u014f\u2217\5\u014f\u221a\n\u014f\3\u014f\3\u014f"+
		"\6\u014f\u221e\n\u014f\r\u014f\16\u014f\u221f\3\u014f\3\u014f\3\u0150"+
		"\3\u0150\3\u0151\3\u0151\3\u0152\3\u0152\6\u0152\u222a\n\u0152\r\u0152"+
		"\16\u0152\u222b\3\u0152\3\u0152\6\u0152\u2230\n\u0152\r\u0152\16\u0152"+
		"\u2231\5\u0152\u2234\n\u0152\3\u0152\3\u0152\3\u0153\3\u0153\6\u0153\u223a"+
		"\n\u0153\r\u0153\16\u0153\u223b\5\u0153\u223e\n\u0153\3\u0153\3\u0153"+
		"\3\u0153\6\u0153\u2243\n\u0153\r\u0153\16\u0153\u2244\5\u0153\u2247\n"+
		"\u0153\3\u0153\3\u0153\6\u0153\u224b\n\u0153\r\u0153\16\u0153\u224c\3"+
		"\u0153\3\u0153\5\u0153\u2251\n\u0153\5\u0153\u2253\n\u0153\3\u0154\3\u0154"+
		"\3\u0154\3\u0154\5\u0154\u2259\n\u0154\3\u0155\3\u0155\3\u0156\3\u0156"+
		"\7\u0156\u225f\n\u0156\f\u0156\16\u0156\u2262\13\u0156\3\u0156\3\u0156"+
		"\7\u0156\u2266\n\u0156\f\u0156\16\u0156\u2269\13\u0156\3\u0156\3\u0156"+
		"\7\u0156\u226d\n\u0156\f\u0156\16\u0156\u2270\13\u0156\7\u0156\u2272\n"+
		"\u0156\f\u0156\16\u0156\u2275\13\u0156\3\u0156\3\u0156\7\u0156\u2279\n"+
		"\u0156\f\u0156\16\u0156\u227c\13\u0156\7\u0156\u227e\n\u0156\f\u0156\16"+
		"\u0156\u2281\13\u0156\3\u0156\3\u0156\7\u0156\u2285\n\u0156\f\u0156\16"+
		"\u0156\u2288\13\u0156\7\u0156\u228a\n\u0156\f\u0156\16\u0156\u228d\13"+
		"\u0156\3\u0156\3\u0156\7\u0156\u2291\n\u0156\f\u0156\16\u0156\u2294\13"+
		"\u0156\7\u0156\u2296\n\u0156\f\u0156\16\u0156\u2299\13\u0156\3\u0156\3"+
		"\u0156\7\u0156\u229d\n\u0156\f\u0156\16\u0156\u22a0\13\u0156\5\u0156\u22a2"+
		"\n\u0156\3\u0157\3\u0157\6\u0157\u22a6\n\u0157\r\u0157\16\u0157\u22a7"+
		"\3\u0157\3\u0157\6\u0157\u22ac\n\u0157\r\u0157\16\u0157\u22ad\3\u0157"+
		"\3\u0157\6\u0157\u22b2\n\u0157\r\u0157\16\u0157\u22b3\5\u0157\u22b6\n"+
		"\u0157\3\u0157\3\u0157\6\u0157\u22ba\n\u0157\r\u0157\16\u0157\u22bb\5"+
		"\u0157\u22be\n\u0157\3\u0157\3\u0157\7\u0157\u22c2\n\u0157\f\u0157\16"+
		"\u0157\u22c5\13\u0157\6\u0157\u22c7\n\u0157\r\u0157\16\u0157\u22c8\3\u0158"+
		"\3\u0158\6\u0158\u22cd\n\u0158\r\u0158\16\u0158\u22ce\3\u0158\3\u0158"+
		"\6\u0158\u22d3\n\u0158\r\u0158\16\u0158\u22d4\3\u0158\3\u0158\5\u0158"+
		"\u22d9\n\u0158\3\u0159\3\u0159\3\u015a\3\u015a\3\u015b\3\u015b\6\u015b"+
		"\u22e1\n\u015b\r\u015b\16\u015b\u22e2\3\u015b\3\u015b\6\u015b\u22e7\n"+
		"\u015b\r\u015b\16\u015b\u22e8\3\u015b\3\u015b\6\u015b\u22ed\n\u015b\r"+
		"\u015b\16\u015b\u22ee\5\u015b\u22f1\n\u015b\3\u015b\3\u015b\6\u015b\u22f5"+
		"\n\u015b\r\u015b\16\u015b\u22f6\5\u015b\u22f9\n\u015b\3\u015b\3\u015b"+
		"\3\u015c\3\u015c\6\u015c\u22ff\n\u015c\r\u015c\16\u015c\u2300\3\u015c"+
		"\3\u015c\6\u015c\u2305\n\u015c\r\u015c\16\u015c\u2306\5\u015c\u2309\n"+
		"\u015c\3\u015c\3\u015c\3\u015c\3\u015c\6\u015c\u230f\n\u015c\r\u015c\16"+
		"\u015c\u2310\3\u015c\3\u015c\3\u015c\5\u015c\u2316\n\u015c\3\u015d\3\u015d"+
		"\3\u015e\3\u015e\3\u015f\3\u015f\6\u015f\u231e\n\u015f\r\u015f\16\u015f"+
		"\u231f\3\u015f\3\u015f\6\u015f\u2324\n\u015f\r\u015f\16\u015f\u2325\5"+
		"\u015f\u2328\n\u015f\5\u015f\u232a\n\u015f\3\u015f\3\u015f\3\u015f\6\u015f"+
		"\u232f\n\u015f\r\u015f\16\u015f\u2330\3\u015f\3\u015f\5\u015f\u2335\n"+
		"\u015f\3\u0160\3\u0160\3\u0161\3\u0161\6\u0161\u233b\n\u0161\r\u0161\16"+
		"\u0161\u233c\3\u0161\3\u0161\6\u0161\u2341\n\u0161\r\u0161\16\u0161\u2342"+
		"\5\u0161\u2345\n\u0161\3\u0161\3\u0161\6\u0161\u2349\n\u0161\r\u0161\16"+
		"\u0161\u234a\5\u0161\u234d\n\u0161\3\u0161\3\u0161\6\u0161\u2351\n\u0161"+
		"\r\u0161\16\u0161\u2352\5\u0161\u2355\n\u0161\3\u0161\3\u0161\6\u0161"+
		"\u2359\n\u0161\r\u0161\16\u0161\u235a\3\u0161\3\u0161\6\u0161\u235f\n"+
		"\u0161\r\u0161\16\u0161\u2360\3\u0162\3\u0162\3\u0163\3\u0163\6\u0163"+
		"\u2367\n\u0163\r\u0163\16\u0163\u2368\3\u0163\3\u0163\6\u0163\u236d\n"+
		"\u0163\r\u0163\16\u0163\u236e\6\u0163\u2371\n\u0163\r\u0163\16\u0163\u2372"+
		"\3\u0163\3\u0163\6\u0163\u2377\n\u0163\r\u0163\16\u0163\u2378\3\u0163"+
		"\3\u0163\7\u0163\u237d\n\u0163\f\u0163\16\u0163\u2380\13\u0163\6\u0163"+
		"\u2382\n\u0163\r\u0163\16\u0163\u2383\3\u0164\3\u0164\3\u0164\6\u0164"+
		"\u2389\n\u0164\r\u0164\16\u0164\u238a\3\u0164\3\u0164\3\u0164\3\u0164"+
		"\3\u0164\3\u0164\3\u0164\6\u0164\u2394\n\u0164\r\u0164\16\u0164\u2395"+
		"\5\u0164\u2398\n\u0164\3\u0164\3\u0164\6\u0164\u239c\n\u0164\r\u0164\16"+
		"\u0164\u239d\3\u0164\3\u0164\3\u0164\3\u0164\3\u0164\6\u0164\u23a5\n\u0164"+
		"\r\u0164\16\u0164\u23a6\3\u0164\3\u0164\5\u0164\u23ab\n\u0164\3\u0165"+
		"\3\u0165\3\u0166\3\u0166\3\u0167\3\u0167\3\u0168\3\u0168\3\u0168\7\u0168"+
		"\u23b6\n\u0168\f\u0168\16\u0168\u23b9\13\u0168\3\u0168\3\u0168\7\u0168"+
		"\u23bd\n\u0168\f\u0168\16\u0168\u23c0\13\u0168\3\u0168\3\u0168\3\u0168"+
		"\3\u0168\7\u0168\u23c6\n\u0168\f\u0168\16\u0168\u23c9\13\u0168\3\u0168"+
		"\3\u0168\3\u0168\3\u0168\5\u0168\u23cf\n\u0168\3\u0168\3\u0168\7\u0168"+
		"\u23d3\n\u0168\f\u0168\16\u0168\u23d6\13\u0168\3\u0168\3\u0168\7\u0168"+
		"\u23da\n\u0168\f\u0168\16\u0168\u23dd\13\u0168\3\u0168\3\u0168\7\u0168"+
		"\u23e1\n\u0168\f\u0168\16\u0168\u23e4\13\u0168\3\u0169\3\u0169\3\u0169"+
		"\5\u0169\u23e9\n\u0169\3\u016a\3\u016a\3\u016a\3\u016a\3\u016a\3\u016a"+
		"\5\u016a\u23f1\n\u016a\3\u016b\3\u016b\3\u016c\3\u016c\3\u016c\7\u016c"+
		"\u23f8\n\u016c\f\u016c\16\u016c\u23fb\13\u016c\3\u016c\3\u016c\7\u016c"+
		"\u23ff\n\u016c\f\u016c\16\u016c\u2402\13\u016c\3\u016c\3\u016c\3\u016c"+
		"\3\u016c\7\u016c\u2408\n\u016c\f\u016c\16\u016c\u240b\13\u016c\3\u016c"+
		"\3\u016c\3\u016c\3\u016c\3\u016c\5\u016c\u2412\n\u016c\3\u016c\3\u016c"+
		"\7\u016c\u2416\n\u016c\f\u016c\16\u016c\u2419\13\u016c\3\u016c\3\u016c"+
		"\7\u016c\u241d\n\u016c\f\u016c\16\u016c\u2420\13\u016c\3\u016c\3\u016c"+
		"\7\u016c\u2424\n\u016c\f\u016c\16\u016c\u2427\13\u016c\3\u016d\3\u016d"+
		"\6\u016d\u242b\n\u016d\r\u016d\16\u016d\u242c\3\u016d\3\u016d\5\u016d"+
		"\u2431\n\u016d\3\u016d\6\u016d\u2434\n\u016d\r\u016d\16\u016d\u2435\3"+
		"\u016d\3\u016d\3\u016e\3\u016e\3\u016e\7\u016e\u243d\n\u016e\f\u016e\16"+
		"\u016e\u2440\13\u016e\3\u016e\3\u016e\7\u016e\u2444\n\u016e\f\u016e\16"+
		"\u016e\u2447\13\u016e\3\u016e\3\u016e\3\u016e\3\u016e\5\u016e\u244d\n"+
		"\u016e\3\u016e\3\u016e\6\u016e\u2451\n\u016e\r\u016e\16\u016e\u2452\3"+
		"\u016e\3\u016e\7\u016e\u2457\n\u016e\f\u016e\16\u016e\u245a\13\u016e\3"+
		"\u016e\3\u016e\7\u016e\u245e\n\u016e\f\u016e\16\u016e\u2461\13\u016e\3"+
		"\u016e\3\u016e\7\u016e\u2465\n\u016e\f\u016e\16\u016e\u2468\13\u016e\3"+
		"\u016f\3\u016f\3\u0170\3\u0170\6\u0170\u246e\n\u0170\r\u0170\16\u0170"+
		"\u246f\3\u0170\3\u0170\5\u0170\u2474\n\u0170\3\u0170\6\u0170\u2477\n\u0170"+
		"\r\u0170\16\u0170\u2478\3\u0170\3\u0170\5\u0170\u247d\n\u0170\3\u0170"+
		"\6\u0170\u2480\n\u0170\r\u0170\16\u0170\u2481\3\u0170\3\u0170\3\u0171"+
		"\3\u0171\3\u0172\3\u0172\6\u0172\u248a\n\u0172\r\u0172\16\u0172\u248b"+
		"\3\u0172\3\u0172\5\u0172\u2490\n\u0172\3\u0172\6\u0172\u2493\n\u0172\r"+
		"\u0172\16\u0172\u2494\3\u0172\3\u0172\5\u0172\u2499\n\u0172\3\u0172\6"+
		"\u0172\u249c\n\u0172\r\u0172\16\u0172\u249d\3\u0172\3\u0172\3\u0173\3"+
		"\u0173\3\u0174\3\u0174\7\u0174\u24a6\n\u0174\f\u0174\16\u0174\u24a9\13"+
		"\u0174\5\u0174\u24ab\n\u0174\3\u0174\3\u0174\7\u0174\u24af\n\u0174\f\u0174"+
		"\16\u0174\u24b2\13\u0174\5\u0174\u24b4\n\u0174\3\u0174\3\u0174\6\u0174"+
		"\u24b8\n\u0174\r\u0174\16\u0174\u24b9\3\u0174\3\u0174\5\u0174\u24be\n"+
		"\u0174\3\u0174\3\u0174\6\u0174\u24c2\n\u0174\r\u0174\16\u0174\u24c3\3"+
		"\u0174\3\u0174\5\u0174\u24c8\n\u0174\3\u0174\3\u0174\6\u0174\u24cc\n\u0174"+
		"\r\u0174\16\u0174\u24cd\3\u0174\3\u0174\5\u0174\u24d2\n\u0174\3\u0174"+
		"\3\u0174\6\u0174\u24d6\n\u0174\r\u0174\16\u0174\u24d7\3\u0174\3\u0174"+
		"\5\u0174\u24dc\n\u0174\3\u0174\3\u0174\6\u0174\u24e0\n\u0174\r\u0174\16"+
		"\u0174\u24e1\3\u0174\3\u0174\5\u0174\u24e6\n\u0174\3\u0174\3\u0174\6\u0174"+
		"\u24ea\n\u0174\r\u0174\16\u0174\u24eb\3\u0174\3\u0174\5\u0174\u24f0\n"+
		"\u0174\5\u0174\u24f2\n\u0174\3\u0174\3\u0174\6\u0174\u24f6\n\u0174\r\u0174"+
		"\16\u0174\u24f7\3\u0174\3\u0174\5\u0174\u24fc\n\u0174\3\u0174\6\u0174"+
		"\u24ff\n\u0174\r\u0174\16\u0174\u2500\3\u0174\3\u0174\6\u0174\u2505\n"+
		"\u0174\r\u0174\16\u0174\u2506\3\u0174\3\u0174\6\u0174\u250b\n\u0174\r"+
		"\u0174\16\u0174\u250c\3\u0174\3\u0174\5\u0174\u2511\n\u0174\3\u0174\3"+
		"\u0174\3\u0174\6\u0174\u2516\n\u0174\r\u0174\16\u0174\u2517\3\u0174\3"+
		"\u0174\5\u0174\u251c\n\u0174\3\u0174\6\u0174\u251f\n\u0174\r\u0174\16"+
		"\u0174\u2520\3\u0174\3\u0174\6\u0174\u2525\n\u0174\r\u0174\16\u0174\u2526"+
		"\3\u0174\3\u0174\6\u0174\u252b\n\u0174\r\u0174\16\u0174\u252c\3\u0174"+
		"\3\u0174\5\u0174\u2531\n\u0174\3\u0174\5\u0174\u2534\n\u0174\3\u0175\3"+
		"\u0175\7\u0175\u2538\n\u0175\f\u0175\16\u0175\u253b\13\u0175\3\u0175\5"+
		"\u0175\u253e\n\u0175\3\u0175\7\u0175\u2541\n\u0175\f\u0175\16\u0175\u2544"+
		"\13\u0175\3\u0175\5\u0175\u2547\n\u0175\3\u0176\3\u0176\3\u0176\7\u0176"+
		"\u254c\n\u0176\f\u0176\16\u0176\u254f\13\u0176\3\u0176\3\u0176\7\u0176"+
		"\u2553\n\u0176\f\u0176\16\u0176\u2556\13\u0176\3\u0176\5\u0176\u2559\n"+
		"\u0176\3\u0176\7\u0176";
	private static final String _serializedATNSegment1 =
		"\u255c\n\u0176\f\u0176\16\u0176\u255f\13\u0176\3\u0176\5\u0176\u2562\n"+
		"\u0176\5\u0176\u2564\n\u0176\3\u0177\3\u0177\3\u0178\3\u0178\7\u0178\u256a"+
		"\n\u0178\f\u0178\16\u0178\u256d\13\u0178\3\u0178\3\u0178\5\u0178\u2571"+
		"\n\u0178\3\u0178\7\u0178\u2574\n\u0178\f\u0178\16\u0178\u2577\13\u0178"+
		"\3\u0178\3\u0178\5\u0178\u257b\n\u0178\7\u0178\u257d\n\u0178\f\u0178\16"+
		"\u0178\u2580\13\u0178\3\u0178\7\u0178\u2583\n\u0178\f\u0178\16\u0178\u2586"+
		"\13\u0178\3\u0178\3\u0178\3\u0179\3\u0179\7\u0179\u258c\n\u0179\f\u0179"+
		"\16\u0179\u258f\13\u0179\3\u0179\3\u0179\7\u0179\u2593\n\u0179\f\u0179"+
		"\16\u0179\u2596\13\u0179\3\u0179\3\u0179\7\u0179\u259a\n\u0179\f\u0179"+
		"\16\u0179\u259d\13\u0179\3\u0179\5\u0179\u25a0\n\u0179\3\u0179\7\u0179"+
		"\u25a3\n\u0179\f\u0179\16\u0179\u25a6\13\u0179\3\u0179\3\u0179\3\u017a"+
		"\3\u017a\3\u017b\3\u017b\3\u017c\3\u017c\3\u017c\2\5\u02ce\u02d6\u02da"+
		"\u017d\2\4\6\b\n\f\16\20\22\24\26\30\32\34\36 \"$&(*,.\60\62\64\668:<"+
		">@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084\u0086\u0088\u008a"+
		"\u008c\u008e\u0090\u0092\u0094\u0096\u0098\u009a\u009c\u009e\u00a0\u00a2"+
		"\u00a4\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4\u00b6\u00b8\u00ba"+
		"\u00bc\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca\u00cc\u00ce\u00d0\u00d2"+
		"\u00d4\u00d6\u00d8\u00da\u00dc\u00de\u00e0\u00e2\u00e4\u00e6\u00e8\u00ea"+
		"\u00ec\u00ee\u00f0\u00f2\u00f4\u00f6\u00f8\u00fa\u00fc\u00fe\u0100\u0102"+
		"\u0104\u0106\u0108\u010a\u010c\u010e\u0110\u0112\u0114\u0116\u0118\u011a"+
		"\u011c\u011e\u0120\u0122\u0124\u0126\u0128\u012a\u012c\u012e\u0130\u0132"+
		"\u0134\u0136\u0138\u013a\u013c\u013e\u0140\u0142\u0144\u0146\u0148\u014a"+
		"\u014c\u014e\u0150\u0152\u0154\u0156\u0158\u015a\u015c\u015e\u0160\u0162"+
		"\u0164\u0166\u0168\u016a\u016c\u016e\u0170\u0172\u0174\u0176\u0178\u017a"+
		"\u017c\u017e\u0180\u0182\u0184\u0186\u0188\u018a\u018c\u018e\u0190\u0192"+
		"\u0194\u0196\u0198\u019a\u019c\u019e\u01a0\u01a2\u01a4\u01a6\u01a8\u01aa"+
		"\u01ac\u01ae\u01b0\u01b2\u01b4\u01b6\u01b8\u01ba\u01bc\u01be\u01c0\u01c2"+
		"\u01c4\u01c6\u01c8\u01ca\u01cc\u01ce\u01d0\u01d2\u01d4\u01d6\u01d8\u01da"+
		"\u01dc\u01de\u01e0\u01e2\u01e4\u01e6\u01e8\u01ea\u01ec\u01ee\u01f0\u01f2"+
		"\u01f4\u01f6\u01f8\u01fa\u01fc\u01fe\u0200\u0202\u0204\u0206\u0208\u020a"+
		"\u020c\u020e\u0210\u0212\u0214\u0216\u0218\u021a\u021c\u021e\u0220\u0222"+
		"\u0224\u0226\u0228\u022a\u022c\u022e\u0230\u0232\u0234\u0236\u0238\u023a"+
		"\u023c\u023e\u0240\u0242\u0244\u0246\u0248\u024a\u024c\u024e\u0250\u0252"+
		"\u0254\u0256\u0258\u025a\u025c\u025e\u0260\u0262\u0264\u0266\u0268\u026a"+
		"\u026c\u026e\u0270\u0272\u0274\u0276\u0278\u027a\u027c\u027e\u0280\u0282"+
		"\u0284\u0286\u0288\u028a\u028c\u028e\u0290\u0292\u0294\u0296\u0298\u029a"+
		"\u029c\u029e\u02a0\u02a2\u02a4\u02a6\u02a8\u02aa\u02ac\u02ae\u02b0\u02b2"+
		"\u02b4\u02b6\u02b8\u02ba\u02bc\u02be\u02c0\u02c2\u02c4\u02c6\u02c8\u02ca"+
		"\u02cc\u02ce\u02d0\u02d2\u02d4\u02d6\u02d8\u02da\u02dc\u02de\u02e0\u02e2"+
		"\u02e4\u02e6\u02e8\u02ea\u02ec\u02ee\u02f0\u02f2\u02f4\u02f6\2\63\6\2"+
		"\u00c2\u00c3\u00eb\u00ec\u0121\u0122\u0157\u0158\3\2\u01c7\u01c7\4\2\u009e"+
		"\u009e\u00a1\u00a1\4\2\u01c1\u01c1\u01c4\u01c4\4\2\u00f8\u00f8\u01a3\u01a4"+
		"\3\2\u0171\u0172\4\2\n\n%%\4\2\u00a4\u00a4\u0108\u0108\6\2\u00a4\u00a4"+
		"\u00d0\u00d0\u00d7\u00d7\u0108\u0108\4\2\34\34tt\5\2\13\13\u00b0\u00b0"+
		"\u00de\u00de\4\2\13\13\u00de\u00de\5\2\16\16\u00fc\u00fc\u0199\u019b\3"+
		"\2_`\4\2\62\62\u00d4\u00d4\4\2\u00e4\u00e4\u0144\u0144\4\2\u0129\u0129"+
		"\u017c\u017c\3\2\u0168\u0169\4\2\u00df\u00df\u0140\u0140\3\2\u00d9\u00da"+
		"\3\2\u01c1\u01c2\4\2\u00de\u00de\u0177\u0177\4\2\u00af\u00af\u01c4\u01c4"+
		"\3\2\u00e4\u00e5\4\2\u0151\u0151\u017e\u017e\3\2\u0112\u0113\7\2\u01af"+
		"\u01b0\u01b8\u01b9\u01be\u01be\u01c2\u01c2\u01c4\u01c4\4\2\u00ac\u00ac"+
		"\u00c5\u00c5\4\2\u0101\u0101\u015a\u015a\3\2\u009a\u009b\4\2CC\u00cd\u00cd"+
		"\4\2\u00f6\u00f6\u015a\u015a\6\2\f\f\u00c4\u00c4\u0188\u0188\u01c4\u01c4"+
		"\5\2::\u00f2\u00f2\u018c\u018c\4\2\u00c9\u00c9\u00ff\u00ff\4\2\26\26\u00d6"+
		"\u00d6\7\2\66\66TT\u00e6\u00e6\u010d\u010e\u016a\u016c\4\2\31\32\u0098"+
		"\u0099\5\2}}\u0123\u0123\u014e\u014e\3\2\27\30\4\2::\u0127\u0127\4\2}"+
		"}\u00a6\u00a6\4\2\u0126\u0126\u0153\u0154\3\2WX\3\2\u01ac\u01ad\4\2\u00a7"+
		"\u00a7\u0162\u0162\4\2\24\24\u0106\u0106\5\2\u00f7\u00f7\u0118\u0118\u0191"+
		"\u0191\5\2\16\20\u00fc\u00fc\u01c4\u01c4\2\u2b97\2\u02fc\3\2\2\2\4\u0301"+
		"\3\2\2\2\6\u0305\3\2\2\2\b\u030b\3\2\2\2\n\u030f\3\2\2\2\f\u0317\3\2\2"+
		"\2\16\u031d\3\2\2\2\20\u032f\3\2\2\2\22\u0331\3\2\2\2\24\u033b\3\2\2\2"+
		"\26\u0374\3\2\2\2\30\u0391\3\2\2\2\32\u03b7\3\2\2\2\34\u03b9\3\2\2\2\36"+
		"\u03e6\3\2\2\2 \u03f4\3\2\2\2\"\u03f6\3\2\2\2$\u0417\3\2\2\2&\u042a\3"+
		"\2\2\2(\u0488\3\2\2\2*\u049b\3\2\2\2,\u049d\3\2\2\2.\u04ba\3\2\2\2\60"+
		"\u04bc\3\2\2\2\62\u04be\3\2\2\2\64\u04d1\3\2\2\2\66\u04ec\3\2\2\28\u050c"+
		"\3\2\2\2:\u050e\3\2\2\2<\u054d\3\2\2\2>\u054f\3\2\2\2@\u058c\3\2\2\2B"+
		"\u058e\3\2\2\2D\u05a4\3\2\2\2F\u05a6\3\2\2\2H\u05a8\3\2\2\2J\u05de\3\2"+
		"\2\2L\u05e0\3\2\2\2N\u05e2\3\2\2\2P\u0694\3\2\2\2R\u0696\3\2\2\2T\u06d0"+
		"\3\2\2\2V\u06df\3\2\2\2X\u06ef\3\2\2\2Z\u06ff\3\2\2\2\\\u0732\3\2\2\2"+
		"^\u074e\3\2\2\2`\u0752\3\2\2\2b\u0754\3\2\2\2d\u078e\3\2\2\2f\u0790\3"+
		"\2\2\2h\u083c\3\2\2\2j\u083e\3\2\2\2l\u0881\3\2\2\2n\u0883\3\2\2\2p\u08ce"+
		"\3\2\2\2r\u08f2\3\2\2\2t\u08f4\3\2\2\2v\u08f6\3\2\2\2x\u08f9\3\2\2\2z"+
		"\u0901\3\2\2\2|\u0918\3\2\2\2~\u091a\3\2\2\2\u0080\u091c\3\2\2\2\u0082"+
		"\u0936\3\2\2\2\u0084\u0955\3\2\2\2\u0086\u0957\3\2\2\2\u0088\u0959\3\2"+
		"\2\2\u008a\u0967\3\2\2\2\u008c\u098a\3\2\2\2\u008e\u098c\3\2\2\2\u0090"+
		"\u09a5\3\2\2\2\u0092\u09a7\3\2\2\2\u0094\u09b3\3\2\2\2\u0096\u09c7\3\2"+
		"\2\2\u0098\u09d4\3\2\2\2\u009a\u09e5\3\2\2\2\u009c\u09ff\3\2\2\2\u009e"+
		"\u0a01\3\2\2\2\u00a0\u0a03\3\2\2\2\u00a2\u0a05\3\2\2\2\u00a4\u0a07\3\2"+
		"\2\2\u00a6\u0a13\3\2\2\2\u00a8\u0a2b\3\2\2\2\u00aa\u0a4d\3\2\2\2\u00ac"+
		"\u0a4f\3\2\2\2\u00ae\u0a51\3\2\2\2\u00b0\u0a6d\3\2\2\2\u00b2\u0aae\3\2"+
		"\2\2\u00b4\u0ab6\3\2\2\2\u00b6\u0ab8\3\2\2\2\u00b8\u0aba\3\2\2\2\u00ba"+
		"\u0afb\3\2\2\2\u00bc\u0afd\3\2\2\2\u00be\u0aff\3\2\2\2\u00c0\u0b81\3\2"+
		"\2\2\u00c2\u0b87\3\2\2\2\u00c4\u0b8b\3\2\2\2\u00c6\u0b8d\3\2\2\2\u00c8"+
		"\u0bce\3\2\2\2\u00ca\u0c17\3\2\2\2\u00cc\u0c1b\3\2\2\2\u00ce\u0c21\3\2"+
		"\2\2\u00d0\u0c23\3\2\2\2\u00d2\u0c43\3\2\2\2\u00d4\u0c63\3\2\2\2\u00d6"+
		"\u0c98\3\2\2\2\u00d8\u0cbf\3\2\2\2\u00da\u0cc1\3\2\2\2\u00dc\u0cc3\3\2"+
		"\2\2\u00de\u0cd6\3\2\2\2\u00e0\u0d0c\3\2\2\2\u00e2\u0d62\3\2\2\2\u00e4"+
		"\u0d6a\3\2\2\2\u00e6\u0d83\3\2\2\2\u00e8\u0d96\3\2\2\2\u00ea\u0d98\3\2"+
		"\2\2\u00ec\u0dba\3\2\2\2\u00ee\u0dbc\3\2\2\2\u00f0\u0dfd\3\2\2\2\u00f2"+
		"\u0e47\3\2\2\2\u00f4\u0e49\3\2\2\2\u00f6\u0e55\3\2\2\2\u00f8\u0e80\3\2"+
		"\2\2\u00fa\u0e88\3\2\2\2\u00fc\u0eaa\3\2\2\2\u00fe\u0ed0\3\2\2\2\u0100"+
		"\u0ed5\3\2\2\2\u0102\u0ed7\3\2\2\2\u0104\u0ed9\3\2\2\2\u0106\u0eff\3\2"+
		"\2\2\u0108\u0f01\3\2\2\2\u010a\u0f84\3\2\2\2\u010c\u0f98\3\2\2\2\u010e"+
		"\u0f9c\3\2\2\2\u0110\u0fa4\3\2\2\2\u0112\u0fc6\3\2\2\2\u0114\u0fe8\3\2"+
		"\2\2\u0116\u100a\3\2\2\2\u0118\u102c\3\2\2\2\u011a\u102e\3\2\2\2\u011c"+
		"\u1055\3\2\2\2\u011e\u1057\3\2\2\2\u0120\u108e\3\2\2\2\u0122\u10a2\3\2"+
		"\2\2\u0124\u10c8\3\2\2\2\u0126\u1104\3\2\2\2\u0128\u112c\3\2\2\2\u012a"+
		"\u1144\3\2\2\2\u012c\u1156\3\2\2\2\u012e\u11c4\3\2\2\2\u0130\u121f\3\2"+
		"\2\2\u0132\u1221\3\2\2\2\u0134\u1230\3\2\2\2\u0136\u126c\3\2\2\2\u0138"+
		"\u126e\3\2\2\2\u013a\u1272\3\2\2\2\u013c\u1291\3\2\2\2\u013e\u12a9\3\2"+
		"\2\2\u0140\u12ab\3\2\2\2\u0142\u12ad\3\2\2\2\u0144\u12b5\3\2\2\2\u0146"+
		"\u12c7\3\2\2\2\u0148\u12d9\3\2\2\2\u014a\u12eb\3\2\2\2\u014c\u12fe\3\2"+
		"\2\2\u014e\u133f\3\2\2\2\u0150\u137b\3\2\2\2\u0152\u139b\3\2\2\2\u0154"+
		"\u13bb\3\2\2\2\u0156\u13e7\3\2\2\2\u0158\u1407\3\2\2\2\u015a\u1422\3\2"+
		"\2\2\u015c\u143d\3\2\2\2\u015e\u1475\3\2\2\2\u0160\u1477\3\2\2\2\u0162"+
		"\u1484\3\2\2\2\u0164\u14ad\3\2\2\2\u0166\u14eb\3\2\2\2\u0168\u14ed\3\2"+
		"\2\2\u016a\u1503\3\2\2\2\u016c\u1505\3\2\2\2\u016e\u151b\3\2\2\2\u0170"+
		"\u152f\3\2\2\2\u0172\u154a\3\2\2\2\u0174\u154c\3\2\2\2\u0176\u1554\3\2"+
		"\2\2\u0178\u1556\3\2\2\2\u017a\u1558\3\2\2\2\u017c\u155a\3\2\2\2\u017e"+
		"\u1576\3\2\2\2\u0180\u1591\3\2\2\2\u0182\u1593\3\2\2\2\u0184\u15b6\3\2"+
		"\2\2\u0186\u15e8\3\2\2\2\u0188\u15ea\3\2\2\2\u018a\u15ec\3\2\2\2\u018c"+
		"\u15ee\3\2\2\2\u018e\u15f0\3\2\2\2\u0190\u15fd\3\2\2\2\u0192\u16c3\3\2"+
		"\2\2\u0194\u16d4\3\2\2\2\u0196\u1710\3\2\2\2\u0198\u172c\3\2\2\2\u019a"+
		"\u172e\3\2\2\2\u019c\u1730\3\2\2\2\u019e\u1732\3\2\2\2\u01a0\u1734\3\2"+
		"\2\2\u01a2\u1780\3\2\2\2\u01a4\u1782\3\2\2\2\u01a6\u1795\3\2\2\2\u01a8"+
		"\u17b7\3\2\2\2\u01aa\u17b9\3\2\2\2\u01ac\u1879\3\2\2\2\u01ae\u187b\3\2"+
		"\2\2\u01b0\u187d\3\2\2\2\u01b2\u187f\3\2\2\2\u01b4\u1881\3\2\2\2\u01b6"+
		"\u1883\3\2\2\2\u01b8\u1885\3\2\2\2\u01ba\u1887\3\2\2\2\u01bc\u1898\3\2"+
		"\2\2\u01be\u18db\3\2\2\2\u01c0\u18dd\3\2\2\2\u01c2\u18ee\3\2\2\2\u01c4"+
		"\u18f2\3\2\2\2\u01c6\u18f4\3\2\2\2\u01c8\u18f6\3\2\2\2\u01ca\u18fa\3\2"+
		"\2\2\u01cc\u1910\3\2\2\2\u01ce\u1924\3\2\2\2\u01d0\u1926\3\2\2\2\u01d2"+
		"\u199d\3\2\2\2\u01d4\u19a1\3\2\2\2\u01d6\u19a5\3\2\2\2\u01d8\u19a9\3\2"+
		"\2\2\u01da\u19ab\3\2\2\2\u01dc\u19d4\3\2\2\2\u01de\u19d6\3\2\2\2\u01e0"+
		"\u19f4\3\2\2\2\u01e2\u19f6\3\2\2\2\u01e4\u1a19\3\2\2\2\u01e6\u1a9c\3\2"+
		"\2\2\u01e8\u1a9e\3\2\2\2\u01ea\u1aa0\3\2\2\2\u01ec\u1aa2\3\2\2\2\u01ee"+
		"\u1aa4\3\2\2\2\u01f0\u1abe\3\2\2\2\u01f2\u1b8a\3\2\2\2\u01f4\u1b8c\3\2"+
		"\2\2\u01f6\u1b94\3\2\2\2\u01f8\u1b9e\3\2\2\2\u01fa\u1ba6\3\2\2\2\u01fc"+
		"\u1baa\3\2\2\2\u01fe\u1bac\3\2\2\2\u0200\u1bae\3\2\2\2\u0202\u1bd0\3\2"+
		"\2\2\u0204\u1bd2\3\2\2\2\u0206\u1bfb\3\2\2\2\u0208\u1c03\3\2\2\2\u020a"+
		"\u1c15\3\2\2\2\u020c\u1c1f\3\2\2\2\u020e\u1c2a\3\2\2\2\u0210\u1c2c\3\2"+
		"\2\2\u0212\u1c41\3\2\2\2\u0214\u1c56\3\2\2\2\u0216\u1c6b\3\2\2\2\u0218"+
		"\u1c80\3\2\2\2\u021a\u1c95\3\2\2\2\u021c\u1caf\3\2\2\2\u021e\u1cc6\3\2"+
		"\2\2\u0220\u1ce0\3\2\2\2\u0222\u1d0f\3\2\2\2\u0224\u1d29\3\2\2\2\u0226"+
		"\u1d4b\3\2\2\2\u0228\u1d53\3\2\2\2\u022a\u1d5d\3\2\2\2\u022c\u1d91\3\2"+
		"\2\2\u022e\u1da8\3\2\2\2\u0230\u1daa\3\2\2\2\u0232\u1db2\3\2\2\2\u0234"+
		"\u1dcd\3\2\2\2\u0236\u1dcf\3\2\2\2\u0238\u1ddb\3\2\2\2\u023a\u1ddd\3\2"+
		"\2\2\u023c\u1e65\3\2\2\2\u023e\u1e67\3\2\2\2\u0240\u1e7a\3\2\2\2\u0242"+
		"\u1eaa\3\2\2\2\u0244\u1eac\3\2\2\2\u0246\u1eae\3\2\2\2\u0248\u1eb0\3\2"+
		"\2\2\u024a\u1ecf\3\2\2\2\u024c\u1ed1\3\2\2\2\u024e\u1ee1\3\2\2\2\u0250"+
		"\u1ef5\3\2\2\2\u0252\u1f02\3\2\2\2\u0254\u1f18\3\2\2\2\u0256\u1f25\3\2"+
		"\2\2\u0258\u1f27\3\2\2\2\u025a\u1f29\3\2\2\2\u025c\u1f4f\3\2\2\2\u025e"+
		"\u1f73\3\2\2\2\u0260\u1f75\3\2\2\2\u0262\u1f77\3\2\2\2\u0264\u1f79\3\2"+
		"\2\2\u0266\u1f7b\3\2\2\2\u0268\u1fb4\3\2\2\2\u026a\u1fcc\3\2\2\2\u026c"+
		"\u1fe4\3\2\2\2\u026e\u1fe6\3\2\2\2\u0270\u1fe8\3\2\2\2\u0272\u1fea\3\2"+
		"\2\2\u0274\u1fec\3\2\2\2\u0276\u1fee\3\2\2\2\u0278\u1ff0\3\2\2\2\u027a"+
		"\u1ff2\3\2\2\2\u027c\u1ff4\3\2\2\2\u027e\u200e\3\2\2\2\u0280\u208f\3\2"+
		"\2\2\u0282\u20a1\3\2\2\2\u0284\u20a9\3\2\2\2\u0286\u20f8\3\2\2\2\u0288"+
		"\u2110\3\2\2\2\u028a\u2132\3\2\2\2\u028c\u2142\3\2\2\2\u028e\u2144\3\2"+
		"\2\2\u0290\u215a\3\2\2\2\u0292\u2172\3\2\2\2\u0294\u2182\3\2\2\2\u0296"+
		"\u2191\3\2\2\2\u0298\u21ed\3\2\2\2\u029a\u21ef\3\2\2\2\u029c\u21ff\3\2"+
		"\2\2\u029e\u2223\3\2\2\2\u02a0\u2225\3\2\2\2\u02a2\u2227\3\2\2\2\u02a4"+
		"\u2252\3\2\2\2\u02a6\u2258\3\2\2\2\u02a8\u225a\3\2\2\2\u02aa\u225c\3\2"+
		"\2\2\u02ac\u22a3\3\2\2\2\u02ae\u22ca\3\2\2\2\u02b0\u22da\3\2\2\2\u02b2"+
		"\u22dc\3\2\2\2\u02b4\u22de\3\2\2\2\u02b6\u2315\3\2\2\2\u02b8\u2317\3\2"+
		"\2\2\u02ba\u2319\3\2\2\2\u02bc\u2334\3\2\2\2\u02be\u2336\3\2\2\2\u02c0"+
		"\u2338\3\2\2\2\u02c2\u2362\3\2\2\2\u02c4\u2364\3\2\2\2\u02c6\u23aa\3\2"+
		"\2\2\u02c8\u23ac\3\2\2\2\u02ca\u23ae\3\2\2\2\u02cc\u23b0\3\2\2\2\u02ce"+
		"\u23ce\3\2\2\2\u02d0\u23e8\3\2\2\2\u02d2\u23f0\3\2\2\2\u02d4\u23f2\3\2"+
		"\2\2\u02d6\u2411\3\2\2\2\u02d8\u2428\3\2\2\2\u02da\u244c\3\2\2\2\u02dc"+
		"\u2469\3\2\2\2\u02de\u246b\3\2\2\2\u02e0\u2485\3\2\2\2\u02e2\u2487\3\2"+
		"\2\2\u02e4\u24a1\3\2\2\2\u02e6\u24aa\3\2\2\2\u02e8\u2535\3\2\2\2\u02ea"+
		"\u2563\3\2\2\2\u02ec\u2565\3\2\2\2\u02ee\u2567\3\2\2\2\u02f0\u2589\3\2"+
		"\2\2\u02f2\u25a9\3\2\2\2\u02f4\u25ab\3\2\2\2\u02f6\u25ad\3\2\2\2\u02f8"+
		"\u02fb\5\22\n\2\u02f9\u02fb\5\f\7\2\u02fa\u02f8\3\2\2\2\u02fa\u02f9\3"+
		"\2\2\2\u02fb\u02fe\3\2\2\2\u02fc\u02fa\3\2\2\2\u02fc\u02fd\3\2\2\2\u02fd"+
		"\u02ff\3\2\2\2\u02fe\u02fc\3\2\2\2\u02ff\u0300\7\2\2\3\u0300\3\3\2\2\2"+
		"\u0301\u0302\t\2\2\2\u0302\5\3\2\2\2\u0303\u0306\5\4\3\2\u0304\u0306\7"+
		"\u0191\2\2\u0305\u0303\3\2\2\2\u0305\u0304\3\2\2\2\u0306\7\3\2\2\2\u0307"+
		"\u030c\5\4\3\2\u0308\u0309\7\13\2\2\u0309\u030a\7\u01c6\2\2\u030a\u030c"+
		"\7\u01c1\2\2\u030b\u0307\3\2\2\2\u030b\u0308\3\2\2\2\u030c\t\3\2\2\2\u030d"+
		"\u0310\5\b\5\2\u030e\u0310\7\u0191\2\2\u030f\u030d\3\2\2\2\u030f\u030e"+
		"\3\2\2\2\u0310\13\3\2\2\2\u0311\u0318\7\u01c6\2\2\u0312\u0318\7\u01c7"+
		"\2\2\u0313\u0318\7\u01c5\2\2\u0314\u0318\7\u01b0\2\2\u0315\u0318\7\u01b1"+
		"\2\2\u0316\u0318\5\20\t\2\u0317\u0311\3\2\2\2\u0317\u0312\3\2\2\2\u0317"+
		"\u0313\3\2\2\2\u0317\u0314\3\2\2\2\u0317\u0315\3\2\2\2\u0317\u0316\3\2"+
		"\2\2\u0318\r\3\2\2\2\u0319\u031e\7\u01c6\2\2\u031a\u031e\7\u01c7\2\2\u031b"+
		"\u031e\7\u01c5\2\2\u031c\u031e\5\20\t\2\u031d\u0319\3\2\2\2\u031d\u031a"+
		"\3\2\2\2\u031d\u031b\3\2\2\2\u031d\u031c\3\2\2\2\u031e\17\3\2\2\2\u031f"+
		"\u0323\7\u01a8\2\2\u0320\u0322\n\3\2\2\u0321\u0320\3\2\2\2\u0322\u0325"+
		"\3\2\2\2\u0323\u0321\3\2\2\2\u0323\u0324\3\2\2\2\u0324\u0326\3\2\2\2\u0325"+
		"\u0323\3\2\2\2\u0326\u0330\7\u01c7\2\2\u0327\u032b\7\u01a9\2\2\u0328\u032a"+
		"\n\3\2\2\u0329\u0328\3\2\2\2\u032a\u032d\3\2\2\2\u032b\u0329\3\2\2\2\u032b"+
		"\u032c\3\2\2\2\u032c\u032e\3\2\2\2\u032d\u032b\3\2\2\2\u032e\u0330\7\u01c7"+
		"\2\2\u032f\u031f\3\2\2\2\u032f\u0327\3\2\2\2\u0330\21\3\2\2\2\u0331\u0333"+
		"\5\u0200\u0101\2\u0332\u0334\5\u021e\u0110\2\u0333\u0332\3\2\2\2\u0333"+
		"\u0334\3\2\2\2\u0334\u0336\3\2\2\2\u0335\u0337\5\u014c\u00a7\2\u0336\u0335"+
		"\3\2\2\2\u0336\u0337\3\2\2\2\u0337\u0339\3\2\2\2\u0338\u033a\5\24\13\2"+
		"\u0339\u0338\3\2\2\2\u0339\u033a\3\2\2\2\u033a\23\3\2\2\2\u033b\u033d"+
		"\5\30\r\2\u033c\u033e\5\34\17\2\u033d\u033c\3\2\2\2\u033d\u033e\3\2\2"+
		"\2\u033e\u0357\3\2\2\2\u033f\u0343\5\32\16\2\u0340\u0342\5\f\7\2\u0341"+
		"\u0340\3\2\2\2\u0342\u0345\3\2\2\2\u0343\u0341\3\2\2\2\u0343\u0344\3\2"+
		"\2\2\u0344\u0347\3\2\2\2\u0345\u0343\3\2\2\2\u0346\u033f\3\2\2\2\u0347"+
		"\u034a\3\2\2\2\u0348\u0346\3\2\2\2\u0348\u0349\3\2\2\2\u0349\u0358\3\2"+
		"\2\2\u034a\u0348\3\2\2\2\u034b\u034f\5\"\22\2\u034c\u034e\5\f\7\2\u034d"+
		"\u034c\3\2\2\2\u034e\u0351\3\2\2\2\u034f\u034d\3\2\2\2\u034f\u0350\3\2"+
		"\2\2\u0350\u0353\3\2\2\2\u0351\u034f\3\2\2\2\u0352\u034b\3\2\2\2\u0353"+
		"\u0356\3\2\2\2\u0354\u0352\3\2\2\2\u0354\u0355\3\2\2\2\u0355\u0358\3\2"+
		"\2\2\u0356\u0354\3\2\2\2\u0357\u0348\3\2\2\2\u0357\u0354\3\2\2\2\u0358"+
		"\u0360\3\2\2\2\u0359\u035b\5\f\7\2\u035a\u0359\3\2\2\2\u035b\u035e\3\2"+
		"\2\2\u035c\u035a\3\2\2\2\u035c\u035d\3\2\2\2\u035d\u035f\3\2\2\2\u035e"+
		"\u035c\3\2\2\2\u035f\u0361\5\26\f\2\u0360\u035c\3\2\2\2\u0360\u0361\3"+
		"\2\2\2\u0361\u0371\3\2\2\2\u0362\u0364\5\f\7\2\u0363\u0362\3\2\2\2\u0364"+
		"\u0367\3\2\2\2\u0365\u0363\3\2\2\2\u0365\u0366\3\2\2\2\u0366\u0368\3\2"+
		"\2\2\u0367\u0365\3\2\2\2\u0368\u036c\5\66\34\2\u0369\u036b\5\f\7\2\u036a"+
		"\u0369\3\2\2\2\u036b\u036e\3\2\2\2\u036c\u036a\3\2\2\2\u036c\u036d\3\2"+
		"\2\2\u036d\u0370\3\2\2\2\u036e\u036c\3\2\2\2\u036f\u0365\3\2\2\2\u0370"+
		"\u0373\3\2\2\2\u0371\u036f\3\2\2\2\u0371\u0372\3\2\2\2\u0372\25\3\2\2"+
		"\2\u0373\u0371\3\2\2\2\u0374\u0376\7\4\2\2\u0375\u0377\5\f\7\2\u0376\u0375"+
		"\3\2\2\2\u0377\u0378\3\2\2\2\u0378\u0376\3\2\2\2\u0378\u0379\3\2\2\2\u0379"+
		"\u037a\3\2\2\2\u037a\u0382\7\u011e\2\2\u037b\u037d\5\f\7\2\u037c\u037b"+
		"\3\2\2\2\u037d\u037e\3\2\2\2\u037e\u037c\3\2\2\2\u037e\u037f\3\2\2\2\u037f"+
		"\u0380\3\2\2\2\u0380\u0381\5\u0206\u0104\2\u0381\u0383\3\2\2\2\u0382\u037c"+
		"\3\2\2\2\u0382\u0383\3\2\2\2\u0383\u0387\3\2\2\2\u0384\u0386\5\f\7\2\u0385"+
		"\u0384\3\2\2\2\u0386\u0389\3\2\2\2\u0387\u0385\3\2\2\2\u0387\u0388\3\2"+
		"\2\2\u0388\u038a\3\2\2\2\u0389\u0387\3\2\2\2\u038a\u038e\7\u01be\2\2\u038b"+
		"\u038d\5\f\7\2\u038c\u038b\3\2\2\2\u038d\u0390\3\2\2\2\u038e\u038c\3\2"+
		"\2\2\u038e\u038f\3\2\2\2\u038f\27\3\2\2\2\u0390\u038e\3\2\2\2\u0391\u0393"+
		"\7\u011c\2\2\u0392\u0394\5\f\7\2\u0393\u0392\3\2\2\2\u0394\u0395\3\2\2"+
		"\2\u0395\u0393\3\2\2\2\u0395\u0396\3\2\2\2\u0396\u0397\3\2\2\2\u0397\u039f"+
		"\7z\2\2\u0398\u039a\5\f\7\2\u0399\u0398\3\2\2\2\u039a\u039b\3\2\2\2\u039b"+
		"\u0399\3\2\2\2\u039b\u039c\3\2\2\2\u039c\u039d\3\2\2\2\u039d\u039e\5\62"+
		"\32\2\u039e\u03a0\3\2\2\2\u039f\u0399\3\2\2\2\u039f\u03a0\3\2\2\2\u03a0"+
		"\u03a8\3\2\2\2\u03a1\u03a3\5\f\7\2\u03a2\u03a1\3\2\2\2\u03a3\u03a4\3\2"+
		"\2\2\u03a4\u03a2\3\2\2\2\u03a4\u03a5\3\2\2\2\u03a5\u03a6\3\2\2\2\u03a6"+
		"\u03a7\5\64\33\2\u03a7\u03a9\3\2\2\2\u03a8\u03a2\3\2\2\2\u03a8\u03a9\3"+
		"\2\2\2\u03a9\u03ad\3\2\2\2\u03aa\u03ac\5\f\7\2\u03ab\u03aa\3\2\2\2\u03ac"+
		"\u03af\3\2\2\2\u03ad\u03ab\3\2\2\2\u03ad\u03ae\3\2\2\2\u03ae\u03b0\3\2"+
		"\2\2\u03af\u03ad\3\2\2\2\u03b0\u03b4\7\u01be\2\2\u03b1\u03b3\5\f\7\2\u03b2"+
		"\u03b1\3\2\2\2\u03b3\u03b6\3\2\2\2\u03b4\u03b2\3\2\2\2\u03b4\u03b5\3\2"+
		"\2\2\u03b5\31\3\2\2\2\u03b6\u03b4\3\2\2\2\u03b7\u03b8\5,\27\2\u03b8\33"+
		"\3\2\2\2\u03b9\u03bd\7\3\2\2\u03ba\u03bc\5\f\7\2\u03bb\u03ba\3\2\2\2\u03bc"+
		"\u03bf\3\2\2\2\u03bd\u03bb\3\2\2\2\u03bd\u03be\3\2\2\2\u03be\u03c0\3\2"+
		"\2\2\u03bf\u03bd\3\2\2\2\u03c0\u03c4\7\u01be\2\2\u03c1\u03c3\5\f\7\2\u03c2"+
		"\u03c1\3\2\2\2\u03c3\u03c6\3\2\2\2\u03c4\u03c2\3\2\2\2\u03c4\u03c5\3\2"+
		"\2\2\u03c5\u03ce\3\2\2\2\u03c6\u03c4\3\2\2\2\u03c7\u03cb\5\36\20\2\u03c8"+
		"\u03ca\5\f\7\2\u03c9\u03c8\3\2\2\2\u03ca\u03cd\3\2\2\2\u03cb\u03c9\3\2"+
		"\2\2\u03cb\u03cc\3\2\2\2\u03cc\u03cf\3\2\2\2\u03cd\u03cb\3\2\2\2\u03ce"+
		"\u03c7\3\2\2\2\u03cf\u03d0\3\2\2\2\u03d0\u03ce\3\2\2\2\u03d0\u03d1\3\2"+
		"\2\2\u03d1\u03d2\3\2\2\2\u03d2\u03d4\7\4\2\2\u03d3\u03d5\5\f\7\2\u03d4"+
		"\u03d3\3\2\2\2\u03d5\u03d6\3\2\2\2\u03d6\u03d4\3\2\2\2\u03d6\u03d7\3\2"+
		"\2\2\u03d7\u03d8\3\2\2\2\u03d8\u03dc\7n\2\2\u03d9\u03db\5\f\7\2\u03da"+
		"\u03d9\3\2\2\2\u03db\u03de\3\2\2\2\u03dc\u03da\3\2\2\2\u03dc\u03dd\3\2"+
		"\2\2\u03dd\u03df\3\2\2\2\u03de\u03dc\3\2\2\2\u03df\u03e3\7\u01be\2\2\u03e0"+
		"\u03e2\5\f\7\2\u03e1\u03e0\3\2\2\2\u03e2\u03e5\3\2\2\2\u03e3\u03e1\3\2"+
		"\2\2\u03e3\u03e4\3\2\2\2\u03e4\35\3\2\2\2\u03e5\u03e3\3\2\2\2\u03e6\u03e7"+
		"\5,\27\2\u03e7\u03f1\5&\24\2\u03e8\u03ea\5\f\7\2\u03e9\u03e8\3\2\2\2\u03ea"+
		"\u03eb\3\2\2\2\u03eb\u03e9\3\2\2\2\u03eb\u03ec\3\2\2\2\u03ec\u03ed\3\2"+
		"\2\2\u03ed\u03ee\5 \21\2\u03ee\u03f0\3\2\2\2\u03ef\u03e9\3\2\2\2\u03f0"+
		"\u03f3\3\2\2\2\u03f1\u03ef\3\2\2\2\u03f1\u03f2\3\2\2\2\u03f2\37\3\2\2"+
		"\2\u03f3\u03f1\3\2\2\2\u03f4\u03f5\5\"\22\2\u03f5!\3\2\2\2\u03f6\u03fa"+
		"\5.\30\2\u03f7\u03f9\5\f\7\2\u03f8\u03f7\3\2\2\2\u03f9\u03fc\3\2\2\2\u03fa"+
		"\u03f8\3\2\2\2\u03fa\u03fb\3\2\2\2\u03fb\u03fd\3\2\2\2\u03fc\u03fa\3\2"+
		"\2\2\u03fd\u0401\7\u01be\2\2\u03fe\u0400\5\f\7\2\u03ff\u03fe\3\2\2\2\u0400"+
		"\u0403\3\2\2\2\u0401\u03ff\3\2\2\2\u0401\u0402\3\2\2\2\u0402\u040d\3\2"+
		"\2\2\u0403\u0401\3\2\2\2\u0404\u0408\5$\23\2\u0405\u0407\5\f\7\2\u0406"+
		"\u0405\3\2\2\2\u0407\u040a\3\2\2\2\u0408\u0406\3\2\2\2\u0408\u0409\3\2"+
		"\2\2\u0409\u040c\3\2\2\2\u040a\u0408\3\2\2\2\u040b\u0404\3\2\2\2\u040c"+
		"\u040f\3\2\2\2\u040d\u040b\3\2\2\2\u040d\u040e\3\2\2\2\u040e#\3\2\2\2"+
		"\u040f\u040d\3\2\2\2\u0410\u0414\58\35\2\u0411\u0413\5\f\7\2\u0412\u0411"+
		"\3\2\2\2\u0413\u0416\3\2\2\2\u0414\u0412\3\2\2\2\u0414\u0415\3\2\2\2\u0415"+
		"\u0418\3\2\2\2\u0416\u0414\3\2\2\2\u0417\u0410\3\2\2\2\u0418\u0419\3\2"+
		"\2\2\u0419\u0417\3\2\2\2\u0419\u041a\3\2\2\2\u041a\u0428\3\2\2\2\u041b"+
		"\u041d\5\f\7\2\u041c\u041b\3\2\2\2\u041d\u0420\3\2\2\2\u041e\u041c\3\2"+
		"\2\2\u041e\u041f\3\2\2\2\u041f\u0421\3\2\2\2\u0420\u041e\3\2\2\2\u0421"+
		"\u0425\7\u01be\2\2\u0422\u0424\5\f\7\2\u0423\u0422\3\2\2\2\u0424\u0427"+
		"\3\2\2\2\u0425\u0423\3\2\2\2\u0425\u0426\3\2\2\2\u0426\u0429\3\2\2\2\u0427"+
		"\u0425\3\2\2\2\u0428\u041e\3\2\2\2\u0428\u0429\3\2\2\2\u0429%\3\2\2\2"+
		"\u042a\u0432\7\u0183\2\2\u042b\u042d\5\f\7\2\u042c\u042b\3\2\2\2\u042d"+
		"\u042e\3\2\2\2\u042e\u042c\3\2\2\2\u042e\u042f\3\2\2\2\u042f\u0430\3\2"+
		"\2\2\u0430\u0431\7\u00bc\2\2\u0431\u0433\3\2\2\2\u0432\u042c\3\2\2\2\u0432"+
		"\u0433\3\2\2\2\u0433\u0435\3\2\2\2\u0434\u0436\5\f\7\2\u0435\u0434\3\2"+
		"\2\2\u0436\u0437\3\2\2\2\u0437\u0435\3\2\2\2\u0437\u0438\3\2\2\2\u0438"+
		"\u0479\3\2\2\2\u0439\u0441\7\n\2\2\u043a\u043c\5\f\7\2\u043b\u043a\3\2"+
		"\2\2\u043c\u043d\3\2\2\2\u043d\u043b\3\2\2\2\u043d\u043e\3\2\2\2\u043e"+
		"\u043f\3\2\2\2\u043f\u0440\7\u015a\2\2\u0440\u0442\3\2\2\2\u0441\u043b"+
		"\3\2\2\2\u0441\u0442\3\2\2\2\u0442\u0444\3\2\2\2\u0443\u0445\5\f\7\2\u0444"+
		"\u0443\3\2\2\2\u0445\u0446\3\2\2\2\u0446\u0444\3\2\2\2\u0446\u0447\3\2"+
		"\2\2\u0447\u0448\3\2\2\2\u0448\u044a\t\4\2\2\u0449\u044b\5\f\7\2\u044a"+
		"\u0449\3\2\2\2\u044b\u044c\3\2\2\2\u044c\u044a\3\2\2\2\u044c\u044d\3\2"+
		"\2\2\u044d\u044e\3\2\2\2\u044e\u0456\7\u011c\2\2\u044f\u0451\5\f\7\2\u0450"+
		"\u044f\3\2\2\2\u0451\u0452\3\2\2\2\u0452\u0450\3\2\2\2\u0452\u0453\3\2"+
		"\2\2\u0453\u0454\3\2\2\2\u0454\u0455\7\u0102\2\2\u0455\u0457\3\2\2\2\u0456"+
		"\u0450\3\2\2\2\u0456\u0457\3\2\2\2\u0457\u0459\3\2\2\2\u0458\u045a\5\f"+
		"\7\2\u0459\u0458\3\2\2\2\u045a\u045b\3\2\2\2\u045b\u0459\3\2\2\2\u045b"+
		"\u045c\3\2\2\2\u045c\u045d\3\2\2\2\u045d\u0461\5*\26\2\u045e\u0460\5\f"+
		"\7\2\u045f\u045e\3\2\2\2\u0460\u0463\3\2\2\2\u0461\u045f\3\2\2\2\u0461"+
		"\u0462\3\2\2\2\u0462\u0464\3\2\2\2\u0463\u0461\3\2\2\2\u0464\u0468\7\u01be"+
		"\2\2\u0465\u0467\5\f\7\2\u0466\u0465\3\2\2\2\u0467\u046a\3\2\2\2\u0468"+
		"\u0466\3\2\2\2\u0468\u0469\3\2\2\2\u0469\u047a\3\2\2\2\u046a\u0468\3\2"+
		"\2\2\u046b\u046d\7%\2\2\u046c\u046e\5\f\7\2\u046d\u046c\3\2\2\2\u046e"+
		"\u046f\3\2\2\2\u046f\u046d\3\2\2\2\u046f\u0470\3\2\2\2\u0470\u0471\3\2"+
		"\2\2\u0471\u0473\7\u0133\2\2\u0472\u0474\5\f\7\2\u0473\u0472\3\2\2\2\u0474"+
		"\u0475\3\2\2\2\u0475\u0473\3\2\2\2\u0475\u0476\3\2\2\2\u0476\u0477\3\2"+
		"\2\2\u0477\u0478\5(\25\2\u0478\u047a\3\2\2\2\u0479\u0439\3\2\2\2\u0479"+
		"\u046b\3\2\2\2\u047a\u047e\3\2\2\2\u047b\u047d\5\f\7\2\u047c\u047b\3\2"+
		"\2\2\u047d\u0480\3\2\2\2\u047e\u047c\3\2\2\2\u047e\u047f\3\2\2\2\u047f"+
		"\u0481\3\2\2\2\u0480\u047e\3\2\2\2\u0481\u0485\7\u01be\2\2\u0482\u0484"+
		"\5\f\7\2\u0483\u0482\3\2\2\2\u0484\u0487\3\2\2\2\u0485\u0483\3\2\2\2\u0485"+
		"\u0486\3\2\2\2\u0486\'\3\2\2\2\u0487\u0485\3\2\2\2\u0488\u0489\5\u023e"+
		"\u0120\2\u0489)\3\2\2\2\u048a\u0494\5\u02a8\u0155\2\u048b\u048d\5\f\7"+
		"\2\u048c\u048b\3\2\2\2\u048d\u048e\3\2\2\2\u048e\u048c\3\2\2\2\u048e\u048f"+
		"\3\2\2\2\u048f\u0490\3\2\2\2\u0490\u0491\5\u02a8\u0155\2\u0491\u0493\3"+
		"\2\2\2\u0492\u048c\3\2\2\2\u0493\u0496\3\2\2\2\u0494\u0492\3\2\2\2\u0494"+
		"\u0495\3\2\2\2\u0495\u049c\3\2\2\2\u0496\u0494\3\2\2\2\u0497\u049c\7\u00d0"+
		"\2\2\u0498\u049c\7\u0108\2\2\u0499\u049c\7\u00d7\2\2\u049a\u049c\7\u00a4"+
		"\2\2\u049b\u048a\3\2\2\2\u049b\u0497\3\2\2\2\u049b\u0498\3\2\2\2\u049b"+
		"\u0499\3\2\2\2\u049b\u049a\3\2\2\2\u049c+\3\2\2\2\u049d\u049f\5\60\31"+
		"\2\u049e\u04a0\5\f\7\2\u049f\u049e\3\2\2\2\u04a0\u04a1\3\2\2\2\u04a1\u049f"+
		"\3\2\2\2\u04a1\u04a2\3\2\2\2\u04a2\u04a3\3\2\2\2\u04a3\u04ab\7\u0147\2"+
		"\2\u04a4\u04a6\5\f\7\2\u04a5\u04a4\3\2\2\2\u04a6\u04a7\3\2\2\2\u04a7\u04a5"+
		"\3\2\2\2\u04a7\u04a8\3\2\2\2\u04a8\u04a9\3\2\2\2\u04a9\u04aa\5\u0238\u011d"+
		"\2\u04aa\u04ac\3\2\2\2\u04ab\u04a5\3\2\2\2\u04ab\u04ac\3\2\2\2\u04ac\u04b0"+
		"\3\2\2\2\u04ad\u04af\5\f\7\2\u04ae\u04ad\3\2\2\2\u04af\u04b2\3\2\2\2\u04b0"+
		"\u04ae\3\2\2\2\u04b0\u04b1\3\2\2\2\u04b1\u04b3\3\2\2\2\u04b2\u04b0\3\2"+
		"\2\2\u04b3\u04b7\7\u01be\2\2\u04b4\u04b6\5\f\7\2\u04b5\u04b4\3\2\2\2\u04b6"+
		"\u04b9\3\2\2\2\u04b7\u04b5\3\2\2\2\u04b7\u04b8\3\2\2\2\u04b8-\3\2\2\2"+
		"\u04b9\u04b7\3\2\2\2\u04ba\u04bb\7\u01c4\2\2\u04bb/\3\2\2\2\u04bc\u04bd"+
		"\7\u01c4\2\2\u04bd\61\3\2\2\2\u04be\u04c0\7\u0184\2\2\u04bf\u04c1\5\f"+
		"\7\2\u04c0\u04bf\3\2\2\2\u04c1\u04c2\3\2\2\2\u04c2\u04c0\3\2\2\2\u04c2"+
		"\u04c3\3\2\2\2\u04c3\u04c4\3\2\2\2\u04c4\u04ce\5\u023e\u0120\2\u04c5\u04c7"+
		"\5\f\7\2\u04c6\u04c5\3\2\2\2\u04c7\u04c8\3\2\2\2\u04c8\u04c6\3\2\2\2\u04c8"+
		"\u04c9\3\2\2\2\u04c9\u04ca\3\2\2\2\u04ca\u04cb\5\u023e\u0120\2\u04cb\u04cd"+
		"\3\2\2\2\u04cc\u04c6\3\2\2\2\u04cd\u04d0\3\2\2\2\u04ce\u04cc\3\2\2\2\u04ce"+
		"\u04cf\3\2\2\2\u04cf\63\3\2\2\2\u04d0\u04ce\3\2\2\2\u04d1\u04d3\7\u00bb"+
		"\2\2\u04d2\u04d4\5\f\7\2\u04d3\u04d2\3\2\2\2\u04d4\u04d5\3\2\2\2\u04d5"+
		"\u04d3\3\2\2\2\u04d5\u04d6\3\2\2\2\u04d6\u04d7\3\2\2\2\u04d7\u04d8\5\u023e"+
		"\u0120\2\u04d8\65\3\2\2\2\u04d9\u04dd\5\u02ce\u0168\2\u04da\u04dc\5\f"+
		"\7\2\u04db\u04da\3\2\2\2\u04dc\u04df\3\2\2\2\u04dd\u04db\3\2\2\2\u04dd"+
		"\u04de\3\2\2\2\u04de\u04e0\3\2\2\2\u04df\u04dd\3\2\2\2\u04e0\u04e1\7\u01be"+
		"\2\2\u04e1\u04ed\3\2\2\2\u04e2\u04e6\5\u02d6\u016c\2\u04e3\u04e5\5\f\7"+
		"\2\u04e4\u04e3\3\2\2\2\u04e5\u04e8\3\2\2\2\u04e6\u04e4\3\2\2\2\u04e6\u04e7"+
		"\3\2\2\2\u04e7\u04e9\3\2\2\2\u04e8\u04e6\3\2\2\2\u04e9\u04ea\7\u01be\2"+
		"\2\u04ea\u04ed\3\2\2\2\u04eb\u04ed\5\f\7\2\u04ec\u04d9\3\2\2\2\u04ec\u04e2"+
		"\3\2\2\2\u04ec\u04eb\3\2\2\2\u04ed\67\3\2\2\2\u04ee\u050d\5\u0110\u0089"+
		"\2\u04ef\u050d\5\u010a\u0086\2\u04f0\u050d\5\u0104\u0083\2\u04f1\u050d"+
		"\5\u00f6|\2\u04f2\u050d\5\u00f4{\2\u04f3\u050d\5\u00f0y\2\u04f4\u050d"+
		"\5\u00eex\2\u04f5\u050d\5\u00ecw\2\u04f6\u050d\5\u00eav\2\u04f7\u050d"+
		"\5\u00ceh\2\u04f8\u050d\5\u00c4c\2\u04f9\u050d\5\u00be`\2\u04fa\u050d"+
		"\5\u00b6\\\2\u04fb\u050d\5\u00b8]\2\u04fc\u050d\5\u00b2Z\2\u04fd\u050d"+
		"\5\u00ba^\2\u04fe\u050d\5\u00b0Y\2\u04ff\u050d\5\u00a6T\2\u0500\u050d"+
		"\5\u00a4S\2\u0501\u050d\5\u0080A\2\u0502\u050d\5n8\2\u0503\u050d\5\u00ae"+
		"X\2\u0504\u050d\5j\66\2\u0505\u050d\5d\63\2\u0506\u050d\5R*\2\u0507\u050d"+
		"\5N(\2\u0508\u050d\5H%\2\u0509\u050d\5B\"\2\u050a\u050d\5> \2\u050b\u050d"+
		"\5:\36\2\u050c\u04ee\3\2\2\2\u050c\u04ef\3\2\2\2\u050c\u04f0\3\2\2\2\u050c"+
		"\u04f1\3\2\2\2\u050c\u04f2\3\2\2\2\u050c\u04f3\3\2\2\2\u050c\u04f4\3\2"+
		"\2\2\u050c\u04f5\3\2\2\2\u050c\u04f6\3\2\2\2\u050c\u04f7\3\2\2\2\u050c"+
		"\u04f8\3\2\2\2\u050c\u04f9\3\2\2\2\u050c\u04fa\3\2\2\2\u050c\u04fb\3\2"+
		"\2\2\u050c\u04fc\3\2\2\2\u050c\u04fd\3\2\2\2\u050c\u04fe\3\2\2\2\u050c"+
		"\u04ff\3\2\2\2\u050c\u0500\3\2\2\2\u050c\u0501\3\2\2\2\u050c\u0502\3\2"+
		"\2\2\u050c\u0503\3\2\2\2\u050c\u0504\3\2\2\2\u050c\u0505\3\2\2\2\u050c"+
		"\u0506\3\2\2\2\u050c\u0507\3\2\2\2\u050c\u0508\3\2\2\2\u050c\u0509\3\2"+
		"\2\2\u050c\u050a\3\2\2\2\u050c\u050b\3\2\2\2\u050d9\3\2\2\2\u050e\u0510"+
		"\7\u013d\2\2\u050f\u0511\5\f\7\2\u0510\u050f\3\2\2\2\u0511\u0512\3\2\2"+
		"\2\u0512\u0510\3\2\2\2\u0512\u0513\3\2\2\2\u0513\u0514\3\2\2\2\u0514\u0522"+
		"\5<\37\2\u0515\u0517\5\f\7\2\u0516\u0515\3\2\2\2\u0517\u0518\3\2\2\2\u0518"+
		"\u0516\3\2\2\2\u0518\u0519\3\2\2\2\u0519\u051a\3\2\2\2\u051a\u051c\7\u00b7"+
		"\2\2\u051b\u051d\5\f\7\2\u051c\u051b\3\2\2\2\u051d\u051e\3\2\2\2\u051e"+
		"\u051c\3\2\2\2\u051e\u051f\3\2\2\2\u051f\u0520\3\2\2\2\u0520\u0521\5\u00d8"+
		"m\2\u0521\u0523\3\2\2\2\u0522\u0516\3\2\2\2\u0522\u0523\3\2\2\2\u0523"+
		"\u0539\3\2\2\2\u0524\u0526\5\f\7\2\u0525\u0524\3\2\2\2\u0526\u0527\3\2"+
		"\2\2\u0527\u0525\3\2\2\2\u0527\u0528\3\2\2\2\u0528\u0529\3\2\2\2\u0529"+
		"\u052b\7\u019c\2\2\u052a\u052c\5\f\7\2\u052b\u052a\3\2\2\2\u052c\u052d"+
		"\3\2\2\2\u052d\u052b\3\2\2\2\u052d\u052e\3\2\2\2\u052e\u052f\3\2\2\2\u052f"+
		"\u0537\7\u00f9\2\2\u0530\u0532\5\f\7\2\u0531\u0530\3\2\2\2\u0532\u0533"+
		"\3\2\2\2\u0533\u0531\3\2\2\2\u0533\u0534\3\2\2\2\u0534\u0535\3\2\2\2\u0535"+
		"\u0536\7\u019d\2\2\u0536\u0538\3\2\2\2\u0537\u0531\3\2\2\2\u0537\u0538"+
		"\3\2\2\2\u0538\u053a\3\2\2\2\u0539\u0525\3\2\2\2\u0539\u053a\3\2\2\2\u053a"+
		"\u0542\3\2\2\2\u053b\u053d\5\f\7\2\u053c\u053b\3\2\2\2\u053d\u053e\3\2"+
		"\2\2\u053e\u053c\3\2\2\2\u053e\u053f\3\2\2\2\u053f\u0540\3\2\2\2\u0540"+
		"\u0541\5\u0118\u008d\2\u0541\u0543\3\2\2\2\u0542\u053c\3\2\2\2\u0542\u0543"+
		"\3\2\2\2\u0543\u054b\3\2\2\2\u0544\u0546\5\f\7\2\u0545\u0544\3\2\2\2\u0546"+
		"\u0547\3\2\2\2\u0547\u0545\3\2\2\2\u0547\u0548\3\2\2\2\u0548\u0549\3\2"+
		"\2\2\u0549\u054a\7\u0090\2\2\u054a\u054c\3\2\2\2\u054b\u0545\3\2\2\2\u054b"+
		"\u054c\3\2\2\2\u054c;\3\2\2\2\u054d\u054e\5\u023e\u0120\2\u054e=\3\2\2"+
		"\2\u054f\u0551\7\u0139\2\2\u0550\u0552\5\f\7\2\u0551\u0550\3\2\2\2\u0552"+
		"\u0553\3\2\2\2\u0553\u0551\3\2\2\2\u0553\u0554\3\2\2\2\u0554\u0555\3\2"+
		"\2\2\u0555\u055d\5@!\2\u0556\u0558\5\f\7\2\u0557\u0556\3\2\2\2\u0558\u0559"+
		"\3\2\2\2\u0559\u0557\3\2\2\2\u0559\u055a\3\2\2\2\u055a\u055b\3\2\2\2\u055b"+
		"\u055c\7\u0126\2\2\u055c\u055e\3\2\2\2\u055d\u0557\3\2\2\2\u055d\u055e"+
		"\3\2\2\2\u055e\u056c\3\2\2\2\u055f\u0561\5\f\7\2\u0560\u055f\3\2\2\2\u0561"+
		"\u0562\3\2\2\2\u0562\u0560\3\2\2\2\u0562\u0563\3\2\2\2\u0563\u0564\3\2"+
		"\2\2\u0564\u0566\7\u00d4\2\2\u0565\u0567\5\f\7\2\u0566\u0565\3\2\2\2\u0567"+
		"\u0568\3\2\2\2\u0568\u0566\3\2\2\2\u0568\u0569\3\2\2\2\u0569\u056a\3\2"+
		"\2\2\u056a\u056b\5\u0140\u00a1\2\u056b\u056d\3\2\2\2\u056c\u0560\3\2\2"+
		"\2\u056c\u056d\3\2\2\2\u056d\u056f\3\2\2\2\u056e\u0570\5\f\7\2\u056f\u056e"+
		"\3\2\2\2\u0570\u0571\3\2\2\2\u0571\u056f\3\2\2\2\u0571\u0572\3\2\2\2\u0572"+
		"\u0573\3\2\2\2\u0573\u0581\5\u0144\u00a3\2\u0574\u0576\5\f\7\2\u0575\u0574"+
		"\3\2\2\2\u0576\u0577\3\2\2\2\u0577\u0575\3\2\2\2\u0577\u0578\3\2\2\2\u0578"+
		"\u0579\3\2\2\2\u0579\u057b\7\u00fa\2\2\u057a\u057c\5\f\7\2\u057b\u057a"+
		"\3\2\2\2\u057c\u057d\3\2\2\2\u057d\u057b\3\2\2\2\u057d\u057e\3\2\2\2\u057e"+
		"\u057f\3\2\2\2\u057f\u0580\5\u0144\u00a3\2\u0580\u0582\3\2\2\2\u0581\u0575"+
		"\3\2\2\2\u0581\u0582\3\2\2\2\u0582\u058a\3\2\2\2\u0583\u0585\5\f\7\2\u0584"+
		"\u0583\3\2\2\2\u0585\u0586\3\2\2\2\u0586\u0584\3\2\2\2\u0586\u0587\3\2"+
		"\2\2\u0587\u0588\3\2\2\2\u0588\u0589\7\u008f\2\2\u0589\u058b\3\2\2\2\u058a"+
		"\u0584\3\2\2\2\u058a\u058b\3\2\2\2\u058b?\3\2\2\2\u058c\u058d\7\u01c4"+
		"\2\2\u058dA\3\2\2\2\u058e\u0590\7\u012c\2\2\u058f\u0591\5\f\7\2\u0590"+
		"\u058f\3\2\2\2\u0591\u0592\3\2\2\2\u0592\u0590\3\2\2\2\u0592\u0593\3\2"+
		"\2\2\u0593\u0594\3\2\2\2\u0594\u05a2\5F$\2\u0595\u0597\5\f\7\2\u0596\u0595"+
		"\3\2\2\2\u0597\u0598\3\2\2\2\u0598\u0596\3\2\2\2\u0598\u0599\3\2\2\2\u0599"+
		"\u059a\3\2\2\2\u059a\u059c\7\u00b7\2\2\u059b\u059d\5\f\7\2\u059c\u059b"+
		"\3\2\2\2\u059d\u059e\3\2\2\2\u059e\u059c\3\2\2\2\u059e\u059f\3\2\2\2\u059f"+
		"\u05a0\3\2\2\2\u05a0\u05a1\5D#\2\u05a1\u05a3\3\2\2\2\u05a2\u0596\3\2\2"+
		"\2\u05a2\u05a3\3\2\2\2\u05a3C\3\2\2\2\u05a4\u05a5\5\u02ea\u0176\2\u05a5"+
		"E\3\2\2\2\u05a6\u05a7\5\u023e\u0120\2\u05a7G\3\2\2\2\u05a8\u05aa\7\u0126"+
		"\2\2\u05a9\u05ab\5\f\7\2\u05aa\u05a9\3\2\2\2\u05ab\u05ac\3\2\2\2\u05ac"+
		"\u05aa\3\2\2\2\u05ac\u05ad\3\2\2\2\u05ad\u05ae\3\2\2\2\u05ae\u05b0\7\u01a6"+
		"\2\2\u05af\u05b1\5\f\7\2\u05b0\u05af\3\2\2\2\u05b1\u05b2\3\2\2\2\u05b2"+
		"\u05b0\3\2\2\2\u05b2\u05b3\3\2\2\2\u05b3\u05b4\3\2\2\2\u05b4\u05cb\5L"+
		"\'\2\u05b5\u05b7\5\f\7\2\u05b6\u05b5\3\2\2\2\u05b7\u05b8\3\2\2\2\u05b8"+
		"\u05b6\3\2\2\2\u05b8\u05b9\3\2\2\2\u05b9\u05ba\3\2\2\2\u05ba\u05c2\7\u0179"+
		"\2\2\u05bb\u05bd\5\f\7\2\u05bc\u05bb\3\2\2\2\u05bd\u05be\3\2\2\2\u05be"+
		"\u05bc\3\2\2\2\u05be\u05bf\3\2\2\2\u05bf\u05c0\3\2\2\2\u05c0\u05c1\7\u00d6"+
		"\2\2\u05c1\u05c3\3\2\2\2\u05c2\u05bc\3\2\2\2\u05c2\u05c3\3\2\2\2\u05c3"+
		"\u05c5\3\2\2\2\u05c4\u05c6\5\f\7\2\u05c5\u05c4\3\2\2\2\u05c6\u05c7\3\2"+
		"\2\2\u05c7\u05c5\3\2\2\2\u05c7\u05c8\3\2\2\2\u05c8\u05c9\3\2\2\2\u05c9"+
		"\u05ca\5J&\2\u05ca\u05cc\3\2\2\2\u05cb\u05b6\3\2\2\2\u05cb\u05cc\3\2\2"+
		"\2\u05cc\u05dc\3\2\2\2\u05cd\u05cf\5\f\7\2\u05ce\u05cd\3\2\2\2\u05cf\u05d0"+
		"\3\2\2\2\u05d0\u05ce\3\2\2\2\u05d0\u05d1\3\2\2\2\u05d1\u05d8\3\2\2\2\u05d2"+
		"\u05d4\7\u00c9\2\2\u05d3\u05d5\5\f\7\2\u05d4\u05d3\3\2\2\2\u05d5\u05d6"+
		"\3\2\2\2\u05d6\u05d4\3\2\2\2\u05d6\u05d7\3\2\2\2\u05d7\u05d9\3\2\2\2\u05d8"+
		"\u05d2\3\2\2\2\u05d8\u05d9\3\2\2\2\u05d9\u05da\3\2\2\2\u05da\u05db\7\u01a7"+
		"\2\2\u05db\u05dd\3\2\2\2\u05dc\u05ce\3\2\2\2\u05dc\u05dd\3\2\2\2\u05dd"+
		"I\3\2\2\2\u05de\u05df\t\5\2\2\u05dfK\3\2\2\2\u05e0\u05e1\t\5\2\2\u05e1"+
		"M\3\2\2\2\u05e2\u05e4\7\u0125\2\2\u05e3\u05e5\5\f\7\2\u05e4\u05e3\3\2"+
		"\2\2\u05e5\u05e6\3\2\2\2\u05e6\u05e4\3\2\2\2\u05e6\u05e7\3\2\2\2\u05e7"+
		"\u05e8\3\2\2\2\u05e8\u05f0\5\u02a8\u0155\2\u05e9\u05eb\5\f\7\2\u05ea\u05e9"+
		"\3\2\2\2\u05eb\u05ec\3\2\2\2\u05ec\u05ea\3\2\2\2\u05ec\u05ed\3\2\2\2\u05ed"+
		"\u05ee\3\2\2\2\u05ee\u05ef\t\6\2\2\u05ef\u05f1\3\2\2\2\u05f0\u05ea\3\2"+
		"\2\2\u05f0\u05f1\3\2\2\2\u05f1\u05f9\3\2\2\2\u05f2\u05f4\5\f\7\2\u05f3"+
		"\u05f2\3\2\2\2\u05f4\u05f5\3\2\2\2\u05f5\u05f3\3\2\2\2\u05f5\u05f6\3\2"+
		"\2\2\u05f6\u05f7\3\2\2\2\u05f7\u05f8\7\u0126\2\2\u05f8\u05fa\3\2\2\2\u05f9"+
		"\u05f3\3\2\2\2\u05f9\u05fa\3\2\2\2\u05fa\u0608\3\2\2\2\u05fb\u05fd\5\f"+
		"\7\2\u05fc\u05fb\3\2\2\2\u05fd\u05fe\3\2\2\2\u05fe\u05fc\3\2\2\2\u05fe"+
		"\u05ff\3\2\2\2\u05ff\u0600\3\2\2\2\u0600\u0602\7\u00d4\2\2\u0601\u0603"+
		"\5\f\7\2\u0602\u0601\3\2\2\2\u0603\u0604\3\2\2\2\u0604\u0602\3\2\2\2\u0604"+
		"\u0605\3\2\2\2\u0605\u0606\3\2\2\2\u0606\u0607\5\u0140\u00a1\2\u0607\u0609"+
		"\3\2\2\2\u0608\u05fc\3\2\2\2\u0608\u0609\3\2\2\2\u0609\u0646\3\2\2\2\u060a"+
		"\u060c\5\f\7\2\u060b\u060a\3\2\2\2\u060c\u060d\3\2\2\2\u060d\u060b\3\2"+
		"\2\2\u060d\u060e\3\2\2\2\u060e\u060f\3\2\2\2\u060f\u0626\5P)\2\u0610\u0612"+
		"\5\f\7\2\u0611\u0610\3\2\2\2\u0612\u0613\3\2\2\2\u0613\u0611\3\2\2\2\u0613"+
		"\u0614\3\2\2\2\u0614\u0615\3\2\2\2\u0615\u061d\7\u00db\2\2\u0616\u0618"+
		"\5\f\7\2\u0617\u0616\3\2\2\2\u0618\u0619\3\2\2\2\u0619\u0617\3\2\2\2\u0619"+
		"\u061a\3\2\2\2\u061a\u061b\3\2\2\2\u061b\u061c\7\u00d6\2\2\u061c\u061e"+
		"\3\2\2\2\u061d\u0617\3\2\2\2\u061d\u061e\3\2\2\2\u061e\u0620\3\2\2\2\u061f"+
		"\u0621\5\f\7\2\u0620\u061f\3\2\2\2\u0621\u0622\3\2\2\2\u0622\u0620\3\2"+
		"\2\2\u0622\u0623\3\2\2\2\u0623\u0624\3\2\2\2\u0624\u0625\5\u0184\u00c3"+
		"\2\u0625\u0627\3\2\2\2\u0626\u0611\3\2\2\2\u0626\u0627\3\2\2\2\u0627\u0647"+
		"\3\2\2\2\u0628\u062a\5\f\7\2\u0629\u0628\3\2\2\2\u062a\u062b\3\2\2\2\u062b"+
		"\u0629\3\2\2\2\u062b\u062c\3\2\2\2\u062c\u062d\3\2\2\2\u062d\u0635\7\u00db"+
		"\2\2\u062e\u0630\5\f\7\2\u062f\u062e\3\2\2\2\u0630\u0631\3\2\2\2\u0631"+
		"\u062f\3\2\2\2\u0631\u0632\3\2\2\2\u0632\u0633\3\2\2\2\u0633\u0634\7\u00d6"+
		"\2\2\u0634\u0636\3\2\2\2\u0635\u062f\3\2\2\2\u0635\u0636\3\2\2\2\u0636"+
		"\u0638\3\2\2\2\u0637\u0639\5\f\7\2\u0638\u0637\3\2\2\2\u0639\u063a\3\2"+
		"\2\2\u063a\u0638\3\2\2\2\u063a\u063b\3\2\2\2\u063b\u063c\3\2\2\2\u063c"+
		"\u0644\5\u0184\u00c3\2\u063d\u063f\5\f\7\2\u063e\u063d\3\2\2\2\u063f\u0640"+
		"\3\2\2\2\u0640\u063e\3\2\2\2\u0640\u0641\3\2\2\2\u0641\u0642\3\2\2\2\u0642"+
		"\u0643\5P)\2\u0643\u0645\3\2\2\2\u0644\u063e\3\2\2\2\u0644\u0645\3\2\2"+
		"\2\u0645\u0647\3\2\2\2\u0646\u060b\3\2\2\2\u0646\u0629\3\2\2\2\u0646\u0647"+
		"\3\2\2\2\u0647\u0651\3\2\2\2\u0648\u064a\5\f\7\2\u0649\u0648\3\2\2\2\u064a"+
		"\u064b\3\2\2\2\u064b\u0649\3\2\2\2\u064b\u064c\3\2\2\2\u064c\u064f\3\2"+
		"\2\2\u064d\u0650\5\u0114\u008b\2\u064e\u0650\5\u0118\u008d\2\u064f\u064d"+
		"\3\2\2\2\u064f\u064e\3\2\2\2\u0650\u0652\3\2\2\2\u0651\u0649\3\2\2\2\u0651"+
		"\u0652\3\2\2\2\u0652\u065a\3\2\2\2\u0653\u0655\5\f\7\2\u0654\u0653\3\2"+
		"\2\2\u0655\u0656\3\2\2\2\u0656\u0654\3\2\2\2\u0656\u0657\3\2\2\2\u0657"+
		"\u0658\3\2\2\2\u0658\u0659\7\u008e\2\2\u0659\u065b\3\2\2\2\u065a\u0654"+
		"\3\2\2\2\u065a\u065b\3\2\2\2\u065bO\3\2\2\2\u065c\u065e\7\u018b\2\2\u065d"+
		"\u065f\5\f\7\2\u065e\u065d\3\2\2\2\u065f\u0660\3\2\2\2\u0660\u065e\3\2"+
		"\2\2\u0660\u0661\3\2\2\2\u0661\u0663\3\2\2\2\u0662\u065c\3\2\2\2\u0662"+
		"\u0663\3\2\2\2\u0663\u066a\3\2\2\2\u0664\u0666\7\u00f9\2\2\u0665\u0667"+
		"\5\f\7\2\u0666\u0665\3\2\2\2\u0667\u0668\3\2\2\2\u0668\u0666\3\2\2\2\u0668"+
		"\u0669\3\2\2\2\u0669\u066b\3\2\2\2\u066a\u0664\3\2\2\2\u066a\u066b\3\2"+
		"\2\2\u066b\u066c\3\2\2\2\u066c\u0695\7\u00e8\2\2\u066d\u0675\7\u01a5\2"+
		"\2\u066e\u0670\5\f\7\2\u066f\u066e\3\2\2\2\u0670\u0671\3\2\2\2\u0671\u066f"+
		"\3\2\2\2\u0671\u0672\3\2\2\2\u0672\u0673\3\2\2\2\u0673\u0674\7\u00ff\2"+
		"\2\u0674\u0676\3\2\2\2\u0675\u066f\3\2\2\2\u0675\u0676\3\2\2\2\u0676\u067e"+
		"\3\2\2\2\u0677\u0679\5\f\7\2\u0678\u0677\3\2\2\2\u0679\u067a\3\2\2\2\u067a"+
		"\u0678\3\2\2\2\u067a\u067b\3\2\2\2\u067b\u067c\3\2\2\2\u067c\u067d\7\u00e8"+
		"\2\2\u067d\u067f\3\2\2\2\u067e\u0678\3\2\2\2\u067e\u067f\3\2\2\2\u067f"+
		"\u0695\3\2\2\2\u0680\u0682\7\u019c\2\2\u0681\u0683\5\f\7\2\u0682\u0681"+
		"\3\2\2\2\u0683\u0684\3\2\2\2\u0684\u0682\3\2\2\2\u0684\u0685\3\2\2\2\u0685"+
		"\u0692\3\2\2\2\u0686\u0693\7\u01a0\2\2\u0687\u0693\7\u019e\2\2\u0688\u0690"+
		"\7\u00f9\2\2\u0689\u068b\5\f\7\2\u068a\u0689\3\2\2\2\u068b\u068c\3\2\2"+
		"\2\u068c\u068a\3\2\2\2\u068c\u068d\3\2\2\2\u068d\u068e\3\2\2\2\u068e\u068f"+
		"\7\u019d\2\2\u068f\u0691\3\2\2\2\u0690\u068a\3\2\2\2\u0690\u0691\3\2\2"+
		"\2\u0691\u0693\3\2\2\2\u0692\u0686\3\2\2\2\u0692\u0687\3\2\2\2\u0692\u0688"+
		"\3\2\2\2\u0693\u0695\3\2\2\2\u0694\u0662\3\2\2\2\u0694\u066d\3\2\2\2\u0694"+
		"\u0680\3\2\2\2\u0695Q\3\2\2\2\u0696\u06ac\7\u010f\2\2\u0697\u0699\5\f"+
		"\7\2\u0698\u0697\3\2\2\2\u0699\u069a\3\2\2\2\u069a\u0698\3\2\2\2\u069a"+
		"\u069b\3\2\2\2\u069b\u069c\3\2\2\2\u069c\u06aa\5r:\2\u069d\u069f\5\f\7"+
		"\2\u069e\u069d\3\2\2\2\u069f\u06a0\3\2\2\2\u06a0\u069e\3\2\2\2\u06a0\u06a1"+
		"\3\2\2\2\u06a1\u06a2\3\2\2\2\u06a2\u06a4\t\7\2\2\u06a3\u06a5\5\f\7\2\u06a4"+
		"\u06a3\3\2\2\2\u06a5\u06a6\3\2\2\2\u06a6\u06a4\3\2\2\2\u06a6\u06a7\3\2"+
		"\2\2\u06a7\u06a8\3\2\2\2\u06a8\u06a9\5t;\2\u06a9\u06ab\3\2\2\2\u06aa\u069e"+
		"\3\2\2\2\u06aa\u06ab\3\2\2\2\u06ab\u06ad\3\2\2\2\u06ac\u0698\3\2\2\2\u06ac"+
		"\u06ad\3\2\2\2\u06ad\u06b8\3\2\2\2\u06ae\u06b0\5\f\7\2\u06af\u06ae\3\2"+
		"\2\2\u06b0\u06b1\3\2\2\2\u06b1\u06af\3\2\2\2\u06b1\u06b2\3\2\2\2\u06b2"+
		"\u06b6\3\2\2\2\u06b3\u06b7\5T+\2\u06b4\u06b7\5X-\2\u06b5\u06b7\5Z.\2\u06b6"+
		"\u06b3\3\2\2\2\u06b6\u06b4\3\2\2\2\u06b6\u06b5\3\2\2\2\u06b7\u06b9\3\2"+
		"\2\2\u06b8\u06af\3\2\2\2\u06b8\u06b9\3\2\2\2\u06b9\u06cc\3\2\2\2\u06ba"+
		"\u06bc\5\f\7\2\u06bb\u06ba\3\2\2\2\u06bc\u06bd\3\2\2\2\u06bd\u06bb\3\2"+
		"\2\2\u06bd\u06be\3\2\2\2\u06be\u06bf\3\2\2\2\u06bf\u06c0\58\35\2\u06c0"+
		"\u06c2\3\2\2\2\u06c1\u06bb\3\2\2\2\u06c2\u06c3\3\2\2\2\u06c3\u06c1\3\2"+
		"\2\2\u06c3\u06c4\3\2\2\2\u06c4\u06c6\3\2\2\2\u06c5\u06c7\5\f\7\2\u06c6"+
		"\u06c5\3\2\2\2\u06c7\u06c8\3\2\2\2\u06c8\u06c6\3\2\2\2\u06c8\u06c9\3\2"+
		"\2\2\u06c9\u06ca\3\2\2\2\u06ca\u06cb\7\u008d\2\2\u06cb\u06cd\3\2\2\2\u06cc"+
		"\u06c1\3\2\2\2\u06cc\u06cd\3\2\2\2\u06cdS\3\2\2\2\u06ce\u06d1\5\u02ea"+
		"\u0176\2\u06cf\u06d1\7\u01c2\2\2\u06d0\u06ce\3\2\2\2\u06d0\u06cf\3\2\2"+
		"\2\u06d1\u06d3\3\2\2\2\u06d2\u06d4\5\f\7\2\u06d3\u06d2\3\2\2\2\u06d4\u06d5"+
		"\3\2\2\2\u06d5\u06d3\3\2\2\2\u06d5\u06d6\3\2\2\2\u06d6\u06d7\3\2\2\2\u06d7"+
		"\u06d8\7\u0174\2\2\u06d8U\3\2\2\2\u06d9\u06db\7\u018b\2\2\u06da\u06dc"+
		"\5\f\7\2\u06db\u06da\3\2\2\2\u06dc\u06dd\3\2\2\2\u06dd\u06db\3\2\2\2\u06dd"+
		"\u06de\3\2\2\2\u06de\u06e0\3\2\2\2\u06df\u06d9\3\2\2\2\u06df\u06e0\3\2"+
		"\2\2\u06e0\u06e1\3\2\2\2\u06e1\u06e3\7\u01a2\2\2\u06e2\u06e4\5\f\7\2\u06e3"+
		"\u06e2\3\2\2\2\u06e4\u06e5\3\2\2\2\u06e5\u06e3\3\2\2\2\u06e5\u06e6\3\2"+
		"\2\2\u06e6\u06e7\3\2\2\2\u06e7\u06e8\t\b\2\2\u06e8W\3\2\2\2\u06e9\u06eb"+
		"\5V,\2\u06ea\u06ec\5\f\7\2\u06eb\u06ea\3\2\2\2\u06ec\u06ed\3\2\2\2\u06ed"+
		"\u06eb\3\2\2\2\u06ed\u06ee\3\2\2\2\u06ee\u06f0\3\2\2\2\u06ef\u06e9\3\2"+
		"\2\2\u06ef\u06f0\3\2\2\2\u06f0\u06f1\3\2\2\2\u06f1\u06f3\7\u01a1\2\2\u06f2"+
		"\u06f4\5\f\7\2\u06f3\u06f2\3\2\2\2\u06f4\u06f5\3\2\2\2\u06f5\u06f3\3\2"+
		"\2\2\u06f5\u06f6\3\2\2\2\u06f6\u06f7\3\2\2\2\u06f7\u06f8\5\u02d6\u016c"+
		"\2\u06f8Y\3\2\2\2\u06f9\u06fb\5V,\2\u06fa\u06fc\5\f\7\2\u06fb\u06fa\3"+
		"\2\2\2\u06fc\u06fd\3\2\2\2\u06fd\u06fb\3\2\2\2\u06fd\u06fe\3\2\2\2\u06fe"+
		"\u0700\3\2\2\2\u06ff\u06f9\3\2\2\2\u06ff\u0700\3\2\2\2\u0700\u0701\3\2"+
		"\2\2\u0701\u0703\7\u0187\2\2\u0702\u0704\5\f\7\2\u0703\u0702\3\2\2\2\u0704"+
		"\u0705\3\2\2\2\u0705\u0703\3\2\2\2\u0705\u0706\3\2\2\2\u0706\u0707\3\2"+
		"\2\2\u0707\u0709\5\\/\2\u0708\u070a\5\f\7\2\u0709\u0708\3\2\2\2\u070a"+
		"\u070b\3\2\2\2\u070b\u0709\3\2\2\2\u070b\u070c\3\2\2\2\u070c\u070d\3\2"+
		"\2\2\u070d\u070f\7\u01a1\2\2\u070e\u0710\5\f\7\2\u070f\u070e\3\2\2\2\u0710"+
		"\u0711\3\2\2\2\u0711\u070f\3\2\2\2\u0711\u0712\3\2\2\2\u0712\u0713\3\2"+
		"\2\2\u0713\u072f\5\u02d6\u016c\2\u0714\u0716\5\f\7\2\u0715\u0714\3\2\2"+
		"\2\u0716\u0717\3\2\2\2\u0717\u0715\3\2\2\2\u0717\u0718\3\2\2\2\u0718\u0719"+
		"\3\2\2\2\u0719\u071b\7\n\2\2\u071a\u071c\5\f\7\2\u071b\u071a\3\2\2\2\u071c"+
		"\u071d\3\2\2\2\u071d\u071b\3\2\2\2\u071d\u071e\3\2\2\2\u071e\u071f\3\2"+
		"\2\2\u071f\u0721\5\\/\2\u0720\u0722\5\f\7\2\u0721\u0720\3\2\2\2\u0722"+
		"\u0723\3\2\2\2\u0723\u0721\3\2\2\2\u0723\u0724\3\2\2\2\u0724\u0725\3\2"+
		"\2\2\u0725\u0727\7\u01a1\2\2\u0726\u0728\5\f\7\2\u0727\u0726\3\2\2\2\u0728"+
		"\u0729\3\2\2\2\u0729\u0727\3\2\2\2\u0729\u072a\3\2\2\2\u072a\u072b\3\2"+
		"\2\2\u072b\u072c\5\u02d6\u016c\2\u072c\u072e\3\2\2\2\u072d\u0715\3\2\2"+
		"\2\u072e\u0731\3\2\2\2\u072f\u072d\3\2\2\2\u072f\u0730\3\2\2\2\u0730["+
		"\3\2\2\2\u0731\u072f\3\2\2\2\u0732\u0734\5b\62\2\u0733\u0735\5\f\7\2\u0734"+
		"\u0733\3\2\2\2\u0735\u0736\3\2\2\2\u0736\u0734\3\2\2\2\u0736\u0737\3\2"+
		"\2\2\u0737\u0738\3\2\2\2\u0738\u073a\7\u00b7\2\2\u0739\u073b\5\f\7\2\u073a"+
		"\u0739\3\2\2\2\u073b\u073c\3\2\2\2\u073c\u073a\3\2\2\2\u073c\u073d\3\2"+
		"\2\2\u073d\u073e\3\2\2\2\u073e\u0740\5`\61\2\u073f\u0741\5\f\7\2\u0740"+
		"\u073f\3\2\2\2\u0741\u0742\3\2\2\2\u0742\u0740\3\2\2\2\u0742\u0743\3\2"+
		"\2\2\u0743\u0744\3\2\2\2\u0744\u0746\7\62\2\2\u0745\u0747\5\f\7\2\u0746"+
		"\u0745\3\2\2\2\u0747\u0748\3\2\2\2\u0748\u0746\3\2\2\2\u0748\u0749\3\2"+
		"\2\2\u0749\u074a\3\2\2\2\u074a\u074b\5^\60\2\u074b]\3\2\2\2\u074c\u074f"+
		"\5\u02ea\u0176\2\u074d\u074f\7\u01c2\2\2\u074e\u074c\3\2\2\2\u074e\u074d"+
		"\3\2\2\2\u074f_\3\2\2\2\u0750\u0753\5\u02ea\u0176\2\u0751\u0753\7\u01c2"+
		"\2\2\u0752\u0750\3\2\2\2\u0752\u0751\3\2\2\2\u0753a\3\2\2\2\u0754\u0755"+
		"\5\u02e8\u0175\2\u0755c\3\2\2\2\u0756\u075e\7\u0103\2\2\u0757\u0759\5"+
		"\f\7\2\u0758\u0757\3\2\2\2\u0759\u075a\3\2\2\2\u075a\u0758\3\2\2\2\u075a"+
		"\u075b\3\2\2\2\u075b\u075c\3\2\2\2\u075c\u075d\5f\64\2\u075d\u075f\3\2"+
		"\2\2\u075e\u0758\3\2\2\2\u075f\u0760\3\2\2\2\u0760\u075e\3\2\2\2\u0760"+
		"\u0761\3\2\2\2\u0761\u078f\3\2\2\2\u0762\u078a\7\u0103\2\2\u0763\u0765"+
		"\5\f\7\2\u0764\u0763\3\2\2\2\u0765\u0766\3\2\2\2\u0766\u0764\3\2\2\2\u0766"+
		"\u0767\3\2\2\2\u0767\u0768\3\2\2\2\u0768\u0786\t\t\2\2\u0769\u076b\5\f"+
		"\7\2\u076a\u0769\3\2\2\2\u076b\u076c\3\2\2\2\u076c\u076a\3\2\2\2\u076c"+
		"\u076d\3\2\2\2\u076d\u076e\3\2\2\2\u076e\u0784\5\u02a8\u0155\2\u076f\u0771"+
		"\5\f\7\2\u0770\u076f\3\2\2\2\u0771\u0772\3\2\2\2\u0772\u0770\3\2\2\2\u0772"+
		"\u0773\3\2\2\2\u0773\u077a\3\2\2\2\u0774\u0776\7\u018b\2\2\u0775\u0777"+
		"\5\f\7\2\u0776\u0775\3\2\2\2\u0777\u0778\3\2\2\2\u0778\u0776\3\2\2\2\u0778"+
		"\u0779\3\2\2\2\u0779\u077b\3\2\2\2\u077a\u0774\3\2\2\2\u077a\u077b\3\2"+
		"\2\2\u077b\u077c\3\2\2\2\u077c\u077e\7\u00f9\2\2\u077d\u077f\5\f\7\2\u077e"+
		"\u077d\3\2\2\2\u077f\u0780\3\2\2\2\u0780\u077e\3\2\2\2\u0780\u0781\3\2"+
		"\2\2\u0781\u0782\3\2\2\2\u0782\u0783\7\u013c\2\2\u0783\u0785\3\2\2\2\u0784"+
		"\u0770\3\2\2\2\u0784\u0785\3\2\2\2\u0785\u0787\3\2\2\2\u0786\u076a\3\2"+
		"\2\2\u0787\u0788\3\2\2\2\u0788\u0786\3\2\2\2\u0788\u0789\3\2\2\2\u0789"+
		"\u078b\3\2\2\2\u078a\u0764\3\2\2\2\u078b\u078c\3\2\2\2\u078c\u078a\3\2"+
		"\2\2\u078c\u078d\3\2\2\2\u078d\u078f\3\2\2\2\u078e\u0756\3\2\2\2\u078e"+
		"\u0762\3\2\2\2\u078fe\3\2\2\2\u0790\u07b7\t\n\2\2\u0791\u0793\5\f\7\2"+
		"\u0792\u0791\3\2\2\2\u0793\u0794\3\2\2\2\u0794\u0792\3\2\2\2\u0794\u0795"+
		"\3\2\2\2\u0795\u0796\3\2\2\2\u0796\u07ac\5\u02a8\u0155\2\u0797\u0799\5"+
		"\f\7\2\u0798\u0797\3\2\2\2\u0799\u079a\3\2\2\2\u079a\u0798\3\2\2\2\u079a"+
		"\u079b\3\2\2\2\u079b\u07a2\3\2\2\2\u079c\u079e\7\u018b\2\2\u079d\u079f"+
		"\5\f\7\2\u079e\u079d\3\2\2\2\u079f\u07a0\3\2\2\2\u07a0\u079e\3\2\2\2\u07a0"+
		"\u07a1\3\2\2\2\u07a1\u07a3\3\2\2\2\u07a2\u079c\3\2\2\2\u07a2\u07a3\3\2"+
		"\2\2\u07a3\u07a4\3\2\2\2\u07a4\u07a6\7\u00f9\2\2\u07a5\u07a7\5\f\7\2\u07a6"+
		"\u07a5\3\2\2\2\u07a7\u07a8\3\2\2\2\u07a8\u07a6\3\2\2\2\u07a8\u07a9\3\2"+
		"\2\2\u07a9\u07aa\3\2\2\2\u07aa\u07ab\7\u013c\2\2\u07ab\u07ad\3\2\2\2\u07ac"+
		"\u0798\3\2\2\2\u07ac\u07ad\3\2\2\2\u07ad\u07b5\3\2\2\2\u07ae\u07b0\5\f"+
		"\7\2\u07af\u07ae\3\2\2\2\u07b0\u07b1\3\2\2\2\u07b1\u07af\3\2\2\2\u07b1"+
		"\u07b2\3\2\2\2\u07b2\u07b3\3\2\2\2\u07b3\u07b4\5h\65\2\u07b4\u07b6\3\2"+
		"\2\2\u07b5\u07af\3\2\2\2\u07b5\u07b6\3\2\2\2\u07b6\u07b8\3\2\2\2\u07b7"+
		"\u0792\3\2\2\2\u07b8\u07b9\3\2\2\2\u07b9\u07b7\3\2\2\2\u07b9\u07ba\3\2"+
		"\2\2\u07bag\3\2\2\2\u07bb\u07bd\7\u018b\2\2\u07bc\u07be\5\f\7\2\u07bd"+
		"\u07bc\3\2\2\2\u07be\u07bf\3\2\2\2\u07bf\u07bd\3\2\2\2\u07bf\u07c0\3\2"+
		"\2\2\u07c0\u07c2\3\2\2\2\u07c1\u07bb\3\2\2\2\u07c1\u07c2\3\2\2\2\u07c2"+
		"\u07c3\3\2\2\2\u07c3\u083d\7\u00e8\2\2\u07c4\u07c6\7\u019c\2\2\u07c5\u07c7"+
		"\5\f\7\2\u07c6\u07c5\3\2\2\2\u07c7\u07c8\3\2\2\2\u07c8\u07c6\3\2\2\2\u07c8"+
		"\u07c9\3\2\2\2\u07c9\u083a\3\2\2\2\u07ca\u07d2\7\u00f9\2\2\u07cb\u07cd"+
		"\5\f\7\2\u07cc\u07cb\3\2\2\2\u07cd\u07ce\3\2\2\2\u07ce\u07cc\3\2\2\2\u07ce"+
		"\u07cf\3\2\2\2\u07cf\u07d0\3\2\2\2\u07d0\u07d1\7\u019d\2\2\u07d1\u07d3"+
		"\3\2\2\2\u07d2\u07cc\3\2\2\2\u07d2\u07d3\3\2\2\2\u07d3\u083b\3\2\2\2\u07d4"+
		"\u083b\7\13\2\2\u07d5\u07dd\7\u019e\2\2\u07d6\u07d8\5\f\7\2\u07d7\u07d6"+
		"\3\2\2\2\u07d8\u07d9\3\2\2\2\u07d9\u07d7\3\2\2\2\u07d9\u07da\3\2\2\2\u07da"+
		"\u07db\3\2\2\2\u07db\u07dc\7\u019f\2\2\u07dc\u07de\3\2\2\2\u07dd\u07d7"+
		"\3\2\2\2\u07dd\u07de\3\2\2\2\u07de\u07e6\3\2\2\2\u07df\u07e1\5\f\7\2\u07e0"+
		"\u07df\3\2\2\2\u07e1\u07e2\3\2\2\2\u07e2\u07e0\3\2\2\2\u07e2\u07e3\3\2"+
		"\2\2\u07e3\u07e4\3\2\2\2\u07e4\u07e5\7\u01a0\2\2\u07e5\u07e7\3\2\2\2\u07e6"+
		"\u07e0\3\2\2\2\u07e6\u07e7\3\2\2\2\u07e7\u0839\3\2\2\2\u07e8\u07ea\7\u019e"+
		"\2\2\u07e9\u07eb\5\f\7\2\u07ea\u07e9\3\2\2\2\u07eb\u07ec\3\2\2\2\u07ec"+
		"\u07ea\3\2\2\2\u07ec\u07ed\3\2\2\2\u07ed\u07ee\3\2\2\2\u07ee\u07f0\7\u01a0"+
		"\2\2\u07ef\u07f1\5\f\7\2\u07f0\u07ef\3\2\2\2\u07f1\u07f2\3\2\2\2\u07f2"+
		"\u07f0\3\2\2\2\u07f2\u07f3\3\2\2\2\u07f3\u07f4\3\2\2\2\u07f4\u07f5\7\u019f"+
		"\2\2\u07f5\u0839\3\2\2\2\u07f6\u07fe\7\u019f\2\2\u07f7\u07f9\5\f\7\2\u07f8"+
		"\u07f7\3\2\2\2\u07f9\u07fa\3\2\2\2\u07fa\u07f8\3\2\2\2\u07fa\u07fb\3\2"+
		"\2\2\u07fb\u07fc\3\2\2\2\u07fc\u07fd\7\u019e\2\2\u07fd\u07ff\3\2\2\2\u07fe"+
		"\u07f8\3\2\2\2\u07fe\u07ff\3\2\2\2\u07ff\u0807\3\2\2\2\u0800\u0802\5\f"+
		"\7\2\u0801\u0800\3\2\2\2\u0802\u0803\3\2\2\2\u0803\u0801\3\2\2\2\u0803"+
		"\u0804\3\2\2\2\u0804\u0805\3\2\2\2\u0805\u0806\7\u01a0\2\2\u0806\u0808"+
		"\3\2\2\2\u0807\u0801\3\2\2\2\u0807\u0808\3\2\2\2\u0808\u0839\3\2\2\2\u0809"+
		"\u080b\7\u019f\2\2\u080a\u080c\5\f\7\2\u080b\u080a\3\2\2\2\u080c\u080d"+
		"\3\2\2\2\u080d\u080b\3\2\2\2\u080d\u080e\3\2\2\2\u080e\u080f\3\2\2\2\u080f"+
		"\u0811\7\u01a0\2\2\u0810\u0812\5\f\7\2\u0811\u0810\3\2\2\2\u0812\u0813"+
		"\3\2\2\2\u0813\u0811\3\2\2\2\u0813\u0814\3\2\2\2\u0814\u0815\3\2\2\2\u0815"+
		"\u0816\7\u019e\2\2\u0816\u0839\3\2\2\2\u0817\u081f\7\u01a0\2\2\u0818\u081a"+
		"\5\f\7\2\u0819\u0818\3\2\2\2\u081a\u081b\3\2\2\2\u081b\u0819\3\2\2\2\u081b"+
		"\u081c\3\2\2\2\u081c\u081d\3\2\2\2\u081d\u081e\7\u019e\2\2\u081e\u0820"+
		"\3\2\2\2\u081f\u0819\3\2\2\2\u081f\u0820\3\2\2\2\u0820\u0828\3\2\2\2\u0821"+
		"\u0823\5\f\7\2\u0822\u0821\3\2\2\2\u0823\u0824\3\2\2\2\u0824\u0822\3\2"+
		"\2\2\u0824\u0825\3\2\2\2\u0825\u0826\3\2\2\2\u0826\u0827\7\u019f\2\2\u0827"+
		"\u0829\3\2\2\2\u0828\u0822\3\2\2\2\u0828\u0829\3\2\2\2\u0829\u0839\3\2"+
		"\2\2\u082a\u082c\7\u01a0\2\2\u082b\u082d\5\f\7\2\u082c\u082b\3\2\2\2\u082d"+
		"\u082e\3\2\2\2\u082e\u082c\3\2\2\2\u082e\u082f\3\2\2\2\u082f\u0830\3\2"+
		"\2\2\u0830\u0832\7\u019f\2\2\u0831\u0833\5\f\7\2\u0832\u0831\3\2\2\2\u0833"+
		"\u0834\3\2\2\2\u0834\u0832\3\2\2\2\u0834\u0835\3\2\2\2\u0835\u0836\3\2"+
		"\2\2\u0836\u0837\7\u019e\2\2\u0837\u0839\3\2\2\2\u0838\u07d5\3\2\2\2\u0838"+
		"\u07e8\3\2\2\2\u0838\u07f6\3\2\2\2\u0838\u0809\3\2\2\2\u0838\u0817\3\2"+
		"\2\2\u0838\u082a\3\2\2\2\u0839\u083b\3\2\2\2\u083a\u07ca\3\2\2\2\u083a"+
		"\u07d4\3\2\2\2\u083a\u0838\3\2\2\2\u083b\u083d\3\2\2\2\u083c\u07c1\3\2"+
		"\2\2\u083c\u07c4\3\2\2\2\u083di\3\2\2\2\u083e\u0840\7\u00f5\2\2\u083f"+
		"\u0841\5\f\7\2\u0840\u083f\3\2\2\2\u0841\u0842\3\2\2\2\u0842\u0840\3\2"+
		"\2\2\u0842\u0843\3\2\2\2\u0843\u0844\3\2\2\2\u0844\u0846\5l\67\2\u0845"+
		"\u0847\5\f\7\2\u0846\u0845\3\2\2\2\u0847\u0848\3\2\2\2\u0848\u0846\3\2"+
		"\2\2\u0848\u0849\3\2\2\2\u0849\u084a\3\2\2\2\u084a\u0858\7\62\2\2\u084b"+
		"\u084d\5\f\7\2\u084c\u084b\3\2\2\2\u084d\u084e\3\2\2\2\u084e\u084c\3\2"+
		"\2\2\u084e\u084f\3\2\2\2\u084f\u0850\3\2\2\2\u0850\u0852\5l\67\2\u0851"+
		"\u0853\5\f\7\2\u0852\u0851\3\2\2\2\u0853\u0854\3\2\2\2\u0854\u0852\3\2"+
		"\2\2\u0854\u0855\3\2\2\2\u0855\u0856\3\2\2\2\u0856\u0857\7\u00bb\2\2\u0857"+
		"\u0859\3\2\2\2\u0858\u084c\3\2\2\2\u0858\u0859\3\2\2\2\u0859\u0869\3\2"+
		"\2\2\u085a\u085c\5\f\7\2\u085b\u085a\3\2\2\2\u085c\u085d\3\2\2\2\u085d"+
		"\u085b\3\2\2\2\u085d\u085e\3\2\2\2\u085e\u085f\3\2\2\2\u085f\u0867\5\u02e8"+
		"\u0175\2\u0860\u0862\5\f\7\2\u0861\u0860\3\2\2\2\u0862\u0863\3\2\2\2\u0863"+
		"\u0861\3\2\2\2\u0863\u0864\3\2\2\2\u0864\u0865\3\2\2\2\u0865\u0866\7\u0142"+
		"\2\2\u0866\u0868\3\2\2\2\u0867\u0861\3\2\2\2\u0867\u0868\3\2\2\2\u0868"+
		"\u086a\3\2\2\2\u0869\u085b\3\2\2\2\u086a\u086b\3\2\2\2\u086b\u0869\3\2"+
		"\2\2\u086b\u086c\3\2\2\2\u086c\u0874\3\2\2\2\u086d\u086f\5\f\7\2\u086e"+
		"\u086d\3\2\2\2\u086f\u0870\3\2\2\2\u0870\u086e\3\2\2\2\u0870\u0871\3\2"+
		"\2\2\u0871\u0872\3\2\2\2\u0872\u0873\5\u0116\u008c\2\u0873\u0875\3\2\2"+
		"\2\u0874\u086e\3\2\2\2\u0874\u0875\3\2\2\2\u0875\u087d\3\2\2\2\u0876\u0878"+
		"\5\f\7\2\u0877\u0876\3\2\2\2\u0878\u0879\3\2\2\2\u0879\u0877\3\2\2\2\u0879"+
		"\u087a\3\2\2\2\u087a\u087b\3\2\2\2\u087b\u087c\7\u008b\2\2\u087c\u087e"+
		"\3\2\2\2\u087d\u0877\3\2\2\2\u087d\u087e\3\2\2\2\u087ek\3\2\2\2\u087f"+
		"\u0882\5\u02ea\u0176\2\u0880\u0882\7\u01c2\2\2\u0881\u087f\3\2\2\2\u0881"+
		"\u0880\3\2\2\2\u0882m\3\2\2\2\u0883\u0885\7\u00f0\2\2\u0884\u0886\5\f"+
		"\7\2\u0885\u0884\3\2\2\2\u0886\u0887\3\2\2\2\u0887\u0885\3\2\2\2\u0887"+
		"\u0888\3\2\2\2\u0888\u0889\3\2\2\2\u0889\u0891\5|?\2\u088a\u088c\5\f\7"+
		"\2\u088b\u088a\3\2\2\2\u088c\u088d\3\2\2\2\u088d\u088b\3\2\2\2\u088d\u088e"+
		"\3\2\2\2\u088e\u088f\3\2\2\2\u088f\u0890\5z>\2\u0890\u0892\3\2\2\2\u0891"+
		"\u088b\3\2\2\2\u0892\u0893\3\2\2\2\u0893\u0891\3\2\2\2\u0893\u0894\3\2"+
		"\2\2\u0894\u08b2\3\2\2\2\u0895\u0897\5\f\7\2\u0896\u0895\3\2\2\2\u0897"+
		"\u0898\3\2\2\2\u0898\u0896\3\2\2\2\u0898\u0899\3\2\2\2\u0899\u08a0\3\2"+
		"\2\2\u089a\u089c\7@\2\2\u089b\u089d\5\f\7\2\u089c\u089b\3\2\2\2\u089d"+
		"\u089e\3\2\2\2\u089e\u089c\3\2\2\2\u089e\u089f\3\2\2\2\u089f\u08a1\3\2"+
		"\2\2\u08a0\u089a\3\2\2\2\u08a0\u08a1\3\2\2\2\u08a1\u08a2\3\2\2\2\u08a2"+
		"\u08a4\7\u014d\2\2\u08a3\u08a5\5\f\7\2\u08a4\u08a3\3\2\2\2\u08a5\u08a6"+
		"\3\2\2\2\u08a6\u08a4\3\2\2\2\u08a6\u08a7\3\2\2\2\u08a7\u08ae\3\2\2\2\u08a8"+
		"\u08aa\7\u00d6\2\2\u08a9\u08ab\5\f\7\2\u08aa\u08a9\3\2\2\2\u08ab\u08ac"+
		"\3\2\2\2\u08ac\u08aa\3\2\2\2\u08ac\u08ad\3\2\2\2\u08ad\u08af\3\2\2\2\u08ae"+
		"\u08a8\3\2\2\2\u08ae\u08af\3\2\2\2\u08af\u08b0\3\2\2\2\u08b0\u08b1\5\u0234"+
		"\u011b\2\u08b1\u08b3\3\2\2\2\u08b2\u0896\3\2\2\2\u08b2\u08b3\3\2\2\2\u08b3"+
		"\u08b5\3\2\2\2\u08b4\u08b6\5\f\7\2\u08b5\u08b4\3\2\2\2\u08b6\u08b7\3\2"+
		"\2\2\u08b7\u08b5\3\2\2\2\u08b7\u08b8\3\2\2\2\u08b8\u08b9\3\2\2\2\u08b9"+
		"\u08c1\7\u0184\2\2\u08ba\u08bc\5\f\7\2\u08bb\u08ba\3\2\2\2\u08bc\u08bd"+
		"\3\2\2\2\u08bd\u08bb\3\2\2\2\u08bd\u08be\3\2\2\2\u08be\u08bf\3\2\2\2\u08bf"+
		"\u08c0\5x=\2\u08c0\u08c2\3\2\2\2\u08c1\u08bb\3\2\2\2\u08c2\u08c3\3\2\2"+
		"\2\u08c3\u08c1\3\2\2\2\u08c3\u08c4\3\2\2\2\u08c4\u08c6\3\2\2\2\u08c5\u08c7"+
		"\5\f\7\2\u08c6\u08c5\3\2\2\2\u08c7\u08c8\3\2\2\2\u08c8\u08c6\3\2\2\2\u08c8"+
		"\u08c9\3\2\2\2\u08c9\u08cc\3\2\2\2\u08ca\u08cd\5p9\2\u08cb\u08cd\5v<\2"+
		"\u08cc\u08ca\3\2\2\2\u08cc\u08cb\3\2\2\2\u08cdo\3\2\2\2\u08ce\u08d0\7"+
		"\u0108\2\2\u08cf\u08d1\5\f\7\2\u08d0\u08cf\3\2\2\2\u08d1\u08d2\3\2\2\2"+
		"\u08d2\u08d0\3\2\2\2\u08d2\u08d3\3\2\2\2\u08d3\u08d4\3\2\2\2\u08d4\u08d6"+
		"\7\u011c\2\2\u08d5\u08d7\5\f\7\2\u08d6\u08d5\3\2\2\2\u08d7\u08d8\3\2\2"+
		"\2\u08d8\u08d6\3\2\2\2\u08d8\u08d9\3\2\2\2\u08d9\u08e0\3\2\2\2\u08da\u08dc"+
		"\7\u00d6\2\2\u08db\u08dd\5\f\7\2\u08dc\u08db\3\2\2\2\u08dd\u08de\3\2\2"+
		"\2\u08de\u08dc\3\2\2\2\u08de\u08df\3\2\2\2\u08df\u08e1\3\2\2\2\u08e0\u08da"+
		"\3\2\2\2\u08e0\u08e1\3\2\2\2\u08e1\u08e2\3\2\2\2\u08e2\u08f0\5r:\2\u08e3"+
		"\u08e5\5\f\7\2\u08e4\u08e3\3\2\2\2\u08e5\u08e6\3\2\2\2\u08e6\u08e4\3\2"+
		"\2\2\u08e6\u08e7\3\2\2\2\u08e7\u08e8\3\2\2\2\u08e8\u08ea\t\7\2\2\u08e9"+
		"\u08eb\5\f\7\2\u08ea\u08e9\3\2\2\2\u08eb\u08ec\3\2\2\2\u08ec\u08ea\3\2"+
		"\2\2\u08ec\u08ed\3\2\2\2\u08ed\u08ee\3\2\2\2\u08ee\u08ef\5t;\2\u08ef\u08f1"+
		"\3\2\2\2\u08f0\u08e4\3\2\2\2\u08f0\u08f1\3\2\2\2\u08f1q\3\2\2\2\u08f2"+
		"\u08f3\7\u01c4\2\2\u08f3s\3\2\2\2\u08f4\u08f5\7\u01c4\2\2\u08f5u\3\2\2"+
		"\2\u08f6\u08f7\7\u00bb\2\2\u08f7\u08f8\5\u02a8\u0155\2\u08f8w\3\2\2\2"+
		"\u08f9\u08fa\7\u01c4\2\2\u08fay\3\2\2\2\u08fb\u08fd\7\u0102\2\2\u08fc"+
		"\u08fe\5\f\7\2\u08fd\u08fc\3\2\2\2\u08fe\u08ff\3\2\2\2\u08ff\u08fd\3\2"+
		"\2\2\u08ff\u0900\3\2\2\2\u0900\u0902\3\2\2\2\u0901\u08fb\3\2\2\2\u0901"+
		"\u0902\3\2\2\2\u0902\u0903\3\2\2\2\u0903\u090b\t\13\2\2\u0904\u0906\5"+
		"\f\7\2\u0905\u0904\3\2\2\2\u0906\u0907\3\2\2\2\u0907\u0905\3\2\2\2\u0907"+
		"\u0908\3\2\2\2\u0908\u0909\3\2\2\2\u0909\u090a\7\u00db\2\2\u090a\u090c"+
		"\3\2\2\2\u090b\u0905\3\2\2\2\u090b\u090c\3\2\2\2\u090c\u0914\3\2\2\2\u090d"+
		"\u090f\5\f\7\2\u090e\u090d\3\2\2\2\u090f\u0910\3\2\2\2\u0910\u090e\3\2"+
		"\2\2\u0910\u0911\3\2\2\2\u0911\u0912\3\2\2\2\u0912\u0913\5~@\2\u0913\u0915"+
		"\3\2\2\2\u0914\u090e\3\2\2\2\u0915\u0916\3\2\2\2\u0916\u0914\3\2\2\2\u0916"+
		"\u0917\3\2\2\2\u0917{\3\2\2\2\u0918\u0919\7\u01c4\2\2\u0919}\3\2\2\2\u091a"+
		"\u091b\5\u023e\u0120\2\u091b\177\3\2\2\2\u091c\u091e\7\u00d2\2\2\u091d"+
		"\u091f\5\f\7\2\u091e\u091d\3\2\2\2\u091f\u0920\3\2\2\2\u0920\u091e\3\2"+
		"\2\2\u0920\u0921\3\2\2\2\u0921\u0922\3\2\2\2\u0922\u0924\5\u00a2R\2\u0923"+
		"\u0925\5\f\7\2\u0924\u0923\3\2\2\2\u0925\u0926\3\2\2\2\u0926\u0924\3\2"+
		"\2\2\u0926\u0927\3\2\2\2\u0927\u0934\3\2\2\2\u0928\u0930\5\u0092J\2\u0929"+
		"\u092b\5\f\7\2\u092a\u0929\3\2\2\2\u092b\u092c\3\2\2\2\u092c\u092a\3\2"+
		"\2\2\u092c\u092d\3\2\2\2\u092d\u092e\3\2\2\2\u092e\u092f\5\u0088E\2\u092f"+
		"\u0931\3\2\2\2\u0930\u092a\3\2\2\2\u0930\u0931\3\2\2\2\u0931\u0935\3\2"+
		"\2\2\u0932\u0935\5\u0088E\2\u0933\u0935\5\u0082B\2\u0934\u0928\3\2\2\2"+
		"\u0934\u0932\3\2\2\2\u0934\u0933\3\2\2\2\u0935\u0081\3\2\2\2\u0936\u0938"+
		"\7]\2\2\u0937\u0939\5\f\7\2\u0938\u0937\3\2\2\2\u0939\u093a\3\2\2\2\u093a"+
		"\u0938\3\2\2\2\u093a\u093b\3\2\2\2\u093b\u093c\3\2\2\2\u093c\u093e\5\u0086"+
		"D\2\u093d\u093f\5\f\7\2\u093e\u093d\3\2\2\2\u093f\u0940\3\2\2\2\u0940"+
		"\u093e\3\2\2\2\u0940\u0941\3\2\2\2\u0941\u0942\3\2\2\2\u0942\u0944\7\u0175"+
		"\2\2\u0943\u0945\5\f\7\2\u0944\u0943\3\2\2\2\u0945\u0946\3\2\2\2\u0946"+
		"\u0944\3\2\2\2\u0946\u0947\3\2\2\2\u0947\u0948\3\2\2\2\u0948\u0952\5\u0084"+
		"C\2\u0949\u094b\5\f\7\2\u094a\u0949\3\2\2\2\u094b\u094c\3\2\2\2\u094c"+
		"\u094a\3\2\2\2\u094c\u094d\3\2\2\2\u094d\u094e\3\2\2\2\u094e\u094f\5\u0098"+
		"M\2\u094f\u0951\3\2\2\2\u0950\u094a\3\2\2\2\u0951\u0954\3\2\2\2\u0952"+
		"\u0950\3\2\2\2\u0952\u0953\3\2\2\2\u0953\u0083\3\2\2\2\u0954\u0952\3\2"+
		"\2\2\u0955\u0956\5\u009cO\2\u0956\u0085\3\2\2\2\u0957\u0958\5\u009cO\2"+
		"\u0958\u0087\3\2\2\2\u0959\u0963\7\u0131\2\2\u095a\u095c\5\f\7\2\u095b"+
		"\u095a\3\2\2\2\u095c\u095d\3\2\2\2\u095d\u095b\3\2\2\2\u095d\u095e\3\2"+
		"\2\2\u095e\u0961\3\2\2\2\u095f\u0962\5\u008eH\2\u0960\u0962\5\u008aF\2"+
		"\u0961\u095f\3\2\2\2\u0961\u0960\3\2\2\2\u0962\u0964\3\2\2\2\u0963\u095b"+
		"\3\2\2\2\u0964\u0965\3\2\2\2\u0965\u0963\3\2\2\2\u0965\u0966\3\2\2\2\u0966"+
		"\u0089\3\2\2\2\u0967\u0986\t\f\2\2\u0968\u096a\5\f\7\2\u0969\u0968\3\2"+
		"\2\2\u096a\u096b\3\2\2\2\u096b\u0969\3\2\2\2\u096b\u096c\3\2\2\2\u096c"+
		"\u096d\3\2\2\2\u096d\u096f\5\u009cO\2\u096e\u0970\5\f\7\2\u096f\u096e"+
		"\3\2\2\2\u0970\u0971\3\2\2\2\u0971\u096f\3\2\2\2\u0971\u0972\3\2\2\2\u0972"+
		"\u0973\3\2\2\2\u0973\u0975\7\62\2\2\u0974\u0976\5\f\7\2\u0975\u0974\3"+
		"\2\2\2\u0976\u0977\3\2\2\2\u0977\u0975\3\2\2\2\u0977\u0978\3\2\2\2\u0978"+
		"\u0979\3\2\2\2\u0979\u0983\5\u008cG\2\u097a\u097c\5\f\7\2\u097b\u097a"+
		"\3\2\2\2\u097c\u097d\3\2\2\2\u097d\u097b\3\2\2\2\u097d\u097e\3\2\2\2\u097e"+
		"\u097f\3\2\2\2\u097f\u0980\5\u0098M\2\u0980\u0982\3\2\2\2\u0981\u097b"+
		"\3\2\2\2\u0982\u0985\3\2\2\2\u0983\u0981\3\2\2\2\u0983\u0984\3\2\2\2\u0984"+
		"\u0987\3\2\2\2\u0985\u0983\3\2\2\2\u0986\u0969\3\2\2\2\u0987\u0988\3\2"+
		"\2\2\u0988\u0986\3\2\2\2\u0988\u0989\3\2\2\2\u0989\u008b\3\2\2\2\u098a"+
		"\u098b\5\u009cO\2\u098b\u008d\3\2\2\2\u098c\u098e\7:\2\2\u098d\u098f\5"+
		"\f\7\2\u098e\u098d\3\2\2\2\u098f\u0990\3\2\2\2\u0990\u098e\3\2\2\2\u0990"+
		"\u0991\3\2\2\2\u0991\u0992\3\2\2\2\u0992\u0994\7\62\2\2\u0993\u0995\5"+
		"\f\7\2\u0994\u0993\3\2\2\2\u0995\u0996\3\2\2\2\u0996\u0994\3\2\2\2\u0996"+
		"\u0997\3\2\2\2\u0997\u0998\3\2\2\2\u0998\u09a2\5\u0090I\2\u0999\u099b"+
		"\5\f\7\2\u099a\u0999\3\2\2\2\u099b\u099c\3\2\2\2\u099c\u099a\3\2\2\2\u099c"+
		"\u099d\3\2\2\2\u099d\u099e\3\2\2\2\u099e\u099f\5\u0098M\2\u099f\u09a1"+
		"\3\2\2\2\u09a0\u099a\3\2\2\2\u09a1\u09a4\3\2\2\2\u09a2\u09a0\3\2\2\2\u09a2"+
		"\u09a3\3\2\2\2\u09a3\u008f\3\2\2\2\u09a4\u09a2\3\2\2\2\u09a5\u09a6\5\u009c"+
		"O\2\u09a6\u0091\3\2\2\2\u09a7\u09af\7\u016d\2\2\u09a8\u09aa\5\f\7\2\u09a9"+
		"\u09a8\3\2\2\2\u09aa\u09ab\3\2\2\2\u09ab\u09a9\3\2\2\2\u09ab\u09ac\3\2"+
		"\2\2\u09ac\u09ad\3\2\2\2\u09ad\u09ae\5\u0094K\2\u09ae\u09b0\3\2\2\2\u09af"+
		"\u09a9\3\2\2\2\u09b0\u09b1\3\2\2\2\u09b1\u09af\3\2\2\2\u09b1\u09b2\3\2"+
		"\2\2\u09b2\u0093\3\2\2\2\u09b3\u09b5\5\u00a0Q\2\u09b4\u09b6\5\f\7\2\u09b5"+
		"\u09b4\3\2\2\2\u09b6\u09b7\3\2\2\2\u09b7\u09b5\3\2\2\2\u09b7\u09b8\3\2"+
		"\2\2\u09b8\u09b9\3\2\2\2\u09b9\u09c3\7\u00b5\2\2\u09ba\u09bc\5\f\7\2\u09bb"+
		"\u09ba\3\2\2\2\u09bc\u09bd\3\2\2\2\u09bd\u09bb\3\2\2\2\u09bd\u09be\3\2"+
		"\2\2\u09be\u09c1\3\2\2\2\u09bf\u09c2\5\u0096L\2\u09c0\u09c2\5\u009aN\2"+
		"\u09c1\u09bf\3\2\2\2\u09c1\u09c0\3\2\2\2\u09c2\u09c4\3\2\2\2\u09c3\u09bb"+
		"\3\2\2\2\u09c4\u09c5\3\2\2\2\u09c5\u09c3\3\2\2\2\u09c5\u09c6\3\2\2\2\u09c6"+
		"\u0095\3\2\2\2\u09c7\u09d1\7:\2\2\u09c8\u09ca\5\f\7\2\u09c9\u09c8\3\2"+
		"\2\2\u09ca\u09cb\3\2\2\2\u09cb\u09c9\3\2\2\2\u09cb\u09cc\3\2\2\2\u09cc"+
		"\u09cd\3\2\2\2\u09cd\u09ce\5\u0098M\2\u09ce\u09d0\3\2\2\2\u09cf\u09c9"+
		"\3\2\2\2\u09d0\u09d3\3\2\2\2\u09d1\u09cf\3\2\2\2\u09d1\u09d2\3\2\2\2\u09d2"+
		"\u0097\3\2\2\2\u09d3\u09d1\3\2\2\2\u09d4\u09dc\t\b\2\2\u09d5\u09d7\5\f"+
		"\7\2\u09d6\u09d5\3\2\2\2\u09d7\u09d8\3\2\2\2\u09d8\u09d6\3\2\2\2\u09d8"+
		"\u09d9\3\2\2\2\u09d9\u09da\3\2\2\2\u09da\u09db\7\u00cd\2\2\u09db\u09dd"+
		"\3\2\2\2\u09dc\u09d6\3\2\2\2\u09dc\u09dd\3\2\2\2\u09dd\u09df\3\2\2\2\u09de"+
		"\u09e0\5\f\7\2\u09df\u09de\3\2\2\2\u09e0\u09e1\3\2\2\2\u09e1\u09df\3\2"+
		"\2\2\u09e1\u09e2\3\2\2\2\u09e2\u09e3\3\2\2\2\u09e3\u09e4\5\u009eP\2\u09e4"+
		"\u0099\3\2\2\2\u09e5\u09f8\t\r\2\2\u09e6\u09e8\5\f\7\2\u09e7\u09e6\3\2"+
		"\2\2\u09e8\u09e9\3\2\2\2\u09e9\u09e7\3\2\2\2\u09e9\u09ea\3\2\2\2\u09ea"+
		"\u09eb\3\2\2\2\u09eb\u09f5\5\u009cO\2\u09ec\u09ee\5\f\7\2\u09ed\u09ec"+
		"\3\2\2\2\u09ee\u09ef\3\2\2\2\u09ef\u09ed\3\2\2\2\u09ef\u09f0\3\2\2\2\u09f0"+
		"\u09f1\3\2\2\2\u09f1\u09f2\5\u0098M\2\u09f2\u09f4\3\2\2\2\u09f3\u09ed"+
		"\3\2\2\2\u09f4\u09f7\3\2\2\2\u09f5\u09f3\3\2\2\2\u09f5\u09f6\3\2\2\2\u09f6"+
		"\u09f9\3\2\2\2\u09f7\u09f5\3\2\2\2\u09f8\u09e7\3\2\2\2\u09f9\u09fa\3\2"+
		"\2\2\u09fa\u09f8\3\2\2\2\u09fa\u09fb\3\2\2\2\u09fb\u009b\3\2\2\2\u09fc"+
		"\u0a00\5\u023e\u0120\2\u09fd\u0a00\7\u01c1\2\2\u09fe\u0a00\5\6\4\2\u09ff"+
		"\u09fc\3\2\2\2\u09ff\u09fd\3\2\2\2\u09ff\u09fe\3\2\2\2\u0a00\u009d\3\2"+
		"\2\2\u0a01\u0a02\5\u009cO\2\u0a02\u009f\3\2\2\2\u0a03\u0a04\5\u023e\u0120"+
		"\2\u0a04\u00a1\3\2\2\2\u0a05\u0a06\5\u023e\u0120\2\u0a06\u00a3\3\2\2\2"+
		"\u0a07\u0a0f\7\u00cf\2\2\u0a08\u0a0a\5\f\7\2\u0a09\u0a08\3\2\2\2\u0a0a"+
		"\u0a0b\3\2\2\2\u0a0b\u0a09\3\2\2\2\u0a0b\u0a0c\3\2\2\2\u0a0c\u0a0d\3\2"+
		"\2\2\u0a0d\u0a0e\5\u01ce\u00e8\2\u0a0e\u0a10\3\2\2\2\u0a0f\u0a09\3\2\2"+
		"\2\u0a10\u0a11\3\2\2\2\u0a11\u0a0f\3\2\2\2\u0a11\u0a12\3\2\2\2\u0a12\u00a5"+
		"\3\2\2\2\u0a13\u0a1b\7\u00ce\2\2\u0a14\u0a16\5\f\7\2\u0a15\u0a14\3\2\2"+
		"\2\u0a16\u0a17\3\2\2\2\u0a17\u0a15\3\2\2\2\u0a17\u0a18\3\2\2\2\u0a18\u0a19"+
		"\3\2\2\2\u0a19\u0a1a\5\u00acW\2\u0a1a\u0a1c\3\2\2\2\u0a1b\u0a15\3\2\2"+
		"\2\u0a1c\u0a1d\3\2\2\2\u0a1d\u0a1b\3\2\2\2\u0a1d\u0a1e\3\2\2\2\u0a1e\u0a28"+
		"\3\2\2\2\u0a1f\u0a21\5\f\7\2\u0a20\u0a1f\3\2\2\2\u0a21\u0a22\3\2\2\2\u0a22"+
		"\u0a20\3\2\2\2\u0a22\u0a23\3\2\2\2\u0a23\u0a24\3\2\2\2\u0a24\u0a25\5\u00a8"+
		"U\2\u0a25\u0a27\3\2\2\2\u0a26\u0a20\3\2\2\2\u0a27\u0a2a\3\2\2\2\u0a28"+
		"\u0a26\3\2\2\2\u0a28\u0a29\3\2\2\2\u0a29\u00a7\3\2\2\2\u0a2a\u0a28\3\2"+
		"\2\2\u0a2b\u0a47\7\u0131\2\2\u0a2c\u0a2e\5\f\7\2\u0a2d\u0a2c\3\2\2\2\u0a2e"+
		"\u0a2f\3\2\2\2\u0a2f\u0a2d\3\2\2\2\u0a2f\u0a30\3\2\2\2\u0a30\u0a31\3\2"+
		"\2\2\u0a31\u0a33\t\16\2\2\u0a32\u0a34\5\f\7\2\u0a33\u0a32\3\2\2\2\u0a34"+
		"\u0a35\3\2\2\2\u0a35\u0a33\3\2\2\2\u0a35\u0a36\3\2\2\2\u0a36\u0a3d\3\2"+
		"\2\2\u0a37\u0a39\7e\2\2\u0a38\u0a3a\5\f\7\2\u0a39\u0a38\3\2\2\2\u0a3a"+
		"\u0a3b\3\2\2\2\u0a3b\u0a39\3\2\2\2\u0a3b\u0a3c\3\2\2\2\u0a3c\u0a3e\3\2"+
		"\2\2\u0a3d\u0a37\3\2\2\2\u0a3d\u0a3e\3\2\2\2\u0a3e\u0a3f\3\2\2\2\u0a3f"+
		"\u0a41\7\62\2\2\u0a40\u0a42\5\f\7\2\u0a41\u0a40\3\2\2\2\u0a42\u0a43\3"+
		"\2\2\2\u0a43\u0a41\3\2\2\2\u0a43\u0a44\3\2\2\2\u0a44\u0a45\3\2\2\2\u0a45"+
		"\u0a46\5\u00aaV\2\u0a46\u0a48\3\2\2\2\u0a47\u0a2d\3\2\2\2\u0a48\u0a49"+
		"\3\2\2\2\u0a49\u0a47\3\2\2\2\u0a49\u0a4a\3\2\2\2\u0a4a\u00a9\3\2\2\2\u0a4b"+
		"\u0a4e\5\u023e\u0120\2\u0a4c\u0a4e\5\u02d0\u0169\2\u0a4d\u0a4b\3\2\2\2"+
		"\u0a4d\u0a4c\3\2\2\2\u0a4e\u00ab\3\2\2\2\u0a4f\u0a50\5\u023e\u0120\2\u0a50"+
		"\u00ad\3\2\2\2\u0a51\u0a53\7\u00f3\2\2\u0a52\u0a54\5\f\7\2\u0a53\u0a52"+
		"\3\2\2\2\u0a54\u0a55\3\2\2\2\u0a55\u0a53\3\2\2\2\u0a55\u0a56\3\2\2\2\u0a56"+
		"\u0a5d\3\2\2\2\u0a57\u0a59\t\17\2\2\u0a58\u0a5a\5\f\7\2\u0a59\u0a58\3"+
		"\2\2\2\u0a5a\u0a5b\3\2\2\2\u0a5b\u0a59\3\2\2\2\u0a5b\u0a5c\3\2\2\2\u0a5c"+
		"\u0a5e\3\2\2\2\u0a5d\u0a57\3\2\2\2\u0a5d\u0a5e\3\2\2\2\u0a5e\u0a5f\3\2"+
		"\2\2\u0a5f\u0a61\5\u00d8m\2\u0a60\u0a62\5\f\7\2\u0a61\u0a60\3\2\2\2\u0a62"+
		"\u0a63\3\2\2\2\u0a63\u0a61\3\2\2\2\u0a63\u0a64\3\2\2\2\u0a64\u0a65\3\2"+
		"\2\2\u0a65\u0a67\7\u0175\2\2\u0a66\u0a68\5\f\7\2\u0a67\u0a66\3\2\2\2\u0a68"+
		"\u0a69\3\2\2\2\u0a69\u0a67\3\2\2\2\u0a69\u0a6a\3\2\2\2\u0a6a\u0a6b\3\2"+
		"\2\2\u0a6b\u0a6c\5\u0140\u00a1\2\u0a6c\u00af\3\2\2\2\u0a6d\u0a6f\7\u00c8"+
		"\2\2\u0a6e\u0a70\5\f\7\2\u0a6f\u0a6e\3\2\2\2\u0a70\u0a71\3\2\2\2\u0a71"+
		"\u0a6f\3\2\2\2\u0a71\u0a72\3\2\2\2\u0a72\u0a73\3\2\2\2\u0a73\u0a7b\5\u02d6"+
		"\u016c\2\u0a74\u0a76\5\f\7\2\u0a75\u0a74\3\2\2\2\u0a76\u0a77\3\2\2\2\u0a77"+
		"\u0a75\3\2\2\2\u0a77\u0a78\3\2\2\2\u0a78\u0a79\3\2\2\2\u0a79\u0a7a\7\u0196"+
		"\2\2\u0a7a\u0a7c\3\2\2\2\u0a7b\u0a75\3\2\2\2\u0a7b\u0a7c\3\2\2\2\u0a7c"+
		"\u0a7e\3\2\2\2\u0a7d\u0a7f\5\f\7\2\u0a7e\u0a7d\3\2\2\2\u0a7f\u0a80\3\2"+
		"\2\2\u0a80\u0a7e\3\2\2\2\u0a80\u0a81\3\2\2\2\u0a81\u0a8b\3\2\2\2\u0a82"+
		"\u0a8c\5$\23\2\u0a83\u0a85\7\u00f8\2\2\u0a84\u0a86\5\f\7\2\u0a85\u0a84"+
		"\3\2\2\2\u0a86\u0a87\3\2\2\2\u0a87\u0a85\3\2\2\2\u0a87\u0a88\3\2\2\2\u0a88"+
		"\u0a89\3\2\2\2\u0a89\u0a8a\7\u0197\2\2\u0a8a\u0a8c\3\2\2\2\u0a8b\u0a82"+
		"\3\2\2\2\u0a8b\u0a83\3\2\2\2\u0a8c\u0aa3\3\2\2\2\u0a8d\u0a8f\5\f\7\2\u0a8e"+
		"\u0a8d\3\2\2\2\u0a8f\u0a90\3\2\2\2\u0a90\u0a8e\3\2\2\2\u0a90\u0a91\3\2"+
		"\2\2\u0a91\u0a92\3\2\2\2\u0a92\u0a94\7\u0198\2\2\u0a93\u0a95\5\f\7\2\u0a94"+
		"\u0a93\3\2\2\2\u0a95\u0a96\3\2\2\2\u0a96\u0a94\3\2\2\2\u0a96\u0a97\3\2"+
		"\2\2\u0a97\u0aa1\3\2\2\2\u0a98\u0aa2\5$\23\2\u0a99\u0a9b\7\u00f8\2\2\u0a9a"+
		"\u0a9c\5\f\7\2\u0a9b\u0a9a\3\2\2\2\u0a9c\u0a9d\3\2\2\2\u0a9d\u0a9b\3\2"+
		"\2\2\u0a9d\u0a9e\3\2\2\2\u0a9e\u0a9f\3\2\2\2\u0a9f\u0aa0\7\u0197\2\2\u0aa0"+
		"\u0aa2\3\2\2\2\u0aa1\u0a98\3\2\2\2\u0aa1\u0a99\3\2\2\2\u0aa2\u0aa4\3\2"+
		"\2\2\u0aa3\u0a8e\3\2\2\2\u0aa3\u0aa4\3\2\2\2\u0aa4\u0aac\3\2\2\2\u0aa5"+
		"\u0aa7\5\f\7\2\u0aa6\u0aa5\3\2\2\2\u0aa7\u0aa8\3\2\2\2\u0aa8\u0aa6\3\2"+
		"\2\2\u0aa8\u0aa9\3\2\2\2\u0aa9\u0aaa\3\2\2\2\u0aaa\u0aab\7\u008a\2\2\u0aab"+
		"\u0aad\3\2\2\2\u0aac\u0aa6\3\2\2\2\u0aac\u0aad\3\2\2\2\u0aad\u00b1\3\2"+
		"\2\2\u0aae\u0ab0\7\u00ba\2\2\u0aaf\u0ab1\5\f\7\2\u0ab0\u0aaf\3\2\2\2\u0ab1"+
		"\u0ab2\3\2\2\2\u0ab2\u0ab0\3\2\2\2\u0ab2\u0ab3\3\2\2\2\u0ab3\u0ab4\3\2"+
		"\2\2\u0ab4\u0ab5\5\u00b4[\2\u0ab5\u00b3\3\2\2\2\u0ab6\u0ab7\5\u023e\u0120"+
		"\2\u0ab7\u00b5\3\2\2\2\u0ab8\u0ab9\7\u00a3\2\2\u0ab9\u00b7\3\2\2\2\u0aba"+
		"\u0abc\7\u00a3\2\2\u0abb\u0abd\5\f\7\2\u0abc\u0abb\3\2\2\2\u0abd\u0abe"+
		"\3\2\2\2\u0abe\u0abc\3\2\2\2\u0abe\u0abf\3\2\2\2\u0abf\u0ac0\3\2\2\2\u0ac0"+
		"\u0ac1\7\u011e\2\2\u0ac1\u00b9\3\2\2\2\u0ac2\u0aca\7\u00bd\2\2\u0ac3\u0ac5"+
		"\5\f\7\2\u0ac4\u0ac3\3\2\2\2\u0ac5\u0ac6\3\2\2\2\u0ac6\u0ac4\3\2\2\2\u0ac6"+
		"\u0ac7\3\2\2\2\u0ac7\u0ac8\3\2\2\2\u0ac8\u0ac9\7\u0175\2\2\u0ac9\u0acb"+
		"\3\2\2\2\u0aca\u0ac4\3\2\2\2\u0aca\u0acb\3\2\2\2\u0acb\u0ad3\3\2\2\2\u0acc"+
		"\u0ace\5\f\7\2\u0acd\u0acc\3\2\2\2\u0ace\u0acf\3\2\2\2\u0acf\u0acd\3\2"+
		"\2\2\u0acf\u0ad0\3\2\2\2\u0ad0\u0ad1\3\2\2\2\u0ad1\u0ad2\5\u00bc_\2\u0ad2"+
		"\u0ad4\3\2\2\2\u0ad3\u0acd\3\2\2\2\u0ad3\u0ad4\3\2\2\2\u0ad4\u0afc\3\2"+
		"\2\2\u0ad5\u0add\7\u00bd\2\2\u0ad6\u0ad8\5\f\7\2\u0ad7\u0ad6\3\2\2\2\u0ad8"+
		"\u0ad9\3\2\2\2\u0ad9\u0ad7\3\2\2\2\u0ad9\u0ada\3\2\2\2\u0ada\u0adb\3\2"+
		"\2\2\u0adb\u0adc\7\u0175\2\2\u0adc\u0ade\3\2\2\2\u0add\u0ad7\3\2\2\2\u0add"+
		"\u0ade\3\2\2\2\u0ade\u0ae6\3\2\2\2\u0adf\u0ae1\5\f\7\2\u0ae0\u0adf\3\2"+
		"\2\2\u0ae1\u0ae2\3\2\2\2\u0ae2\u0ae0\3\2\2\2\u0ae2\u0ae3\3\2\2\2\u0ae3"+
		"\u0ae4\3\2\2\2\u0ae4\u0ae5\5\u00bc_\2\u0ae5\u0ae7\3\2\2\2\u0ae6\u0ae0"+
		"\3\2\2\2\u0ae7\u0ae8\3\2\2\2\u0ae8\u0ae6\3\2\2\2\u0ae8\u0ae9\3\2\2\2\u0ae9"+
		"\u0aea\3\2\2\2\u0aea\u0af2\7s\2\2\u0aeb\u0aed\5\f\7\2\u0aec\u0aeb\3\2"+
		"\2\2\u0aed\u0aee\3\2\2\2\u0aee\u0aec\3\2\2\2\u0aee\u0aef\3\2\2\2\u0aef"+
		"\u0af0\3\2\2\2\u0af0\u0af1\7\u0102\2\2\u0af1\u0af3\3\2\2\2\u0af2\u0aec"+
		"\3\2\2\2\u0af2\u0af3\3\2\2\2\u0af3\u0af5\3\2\2\2\u0af4\u0af6\5\f\7\2\u0af5"+
		"\u0af4\3\2\2\2\u0af6\u0af7\3\2\2\2\u0af7\u0af5\3\2\2\2\u0af7\u0af8\3\2"+
		"\2\2\u0af8\u0af9\3\2\2\2\u0af9\u0afa\5\u023e\u0120\2\u0afa\u0afc\3\2\2"+
		"\2\u0afb\u0ac2\3\2\2\2\u0afb\u0ad5\3\2\2\2\u0afc\u00bb\3\2\2\2\u0afd\u0afe"+
		"\7\u01c4\2\2\u0afe\u00bd\3\2\2\2\u0aff\u0b01\7\u009f\2\2\u0b00\u0b02\5"+
		"\f\7\2\u0b01\u0b00\3\2\2\2\u0b02\u0b03\3\2\2\2\u0b03\u0b01\3\2\2\2\u0b03"+
		"\u0b04\3\2\2\2\u0b04\u0b05\3\2\2\2\u0b05\u0b18\5\u00c2b\2\u0b06\u0b08"+
		"\5\f\7\2\u0b07\u0b06\3\2\2\2\u0b08\u0b09\3\2\2\2\u0b09\u0b07\3\2\2\2\u0b09"+
		"\u0b0a\3\2\2\2\u0b0a\u0b0b\3\2\2\2\u0b0b\u0b0c\7\21\2\2\u0b0c\u0b0e\3"+
		"\2\2\2\u0b0d\u0b07\3\2\2\2\u0b0d\u0b0e\3\2\2\2\u0b0e\u0b10\3\2\2\2\u0b0f"+
		"\u0b11\5\f\7\2\u0b10\u0b0f\3\2\2\2\u0b11\u0b12\3\2\2\2\u0b12\u0b10\3\2"+
		"\2\2\u0b12\u0b13\3\2\2\2\u0b13\u0b14\3\2\2\2\u0b14\u0b15\5\u00c2b\2\u0b15"+
		"\u0b17\3\2\2\2\u0b16\u0b0d\3\2\2\2\u0b17\u0b1a\3\2\2\2\u0b18\u0b16\3\2"+
		"\2\2\u0b18\u0b19\3\2\2\2\u0b19\u0b43\3\2\2\2\u0b1a\u0b18\3\2\2\2\u0b1b"+
		"\u0b1d\5\f\7\2\u0b1c\u0b1b\3\2\2\2\u0b1d\u0b1e\3\2\2\2\u0b1e\u0b1c\3\2"+
		"\2\2\u0b1e\u0b1f\3\2\2\2\u0b1f\u0b20\3\2\2\2\u0b20\u0b22\7\u0189\2\2\u0b21"+
		"\u0b23\5\f\7\2\u0b22\u0b21\3\2\2\2\u0b23\u0b24\3\2\2\2\u0b24\u0b22\3\2"+
		"\2\2\u0b24\u0b25\3\2\2\2\u0b25\u0b26\3\2\2\2\u0b26\u0b39\5\u00c0a\2\u0b27"+
		"\u0b29\5\f\7\2\u0b28\u0b27\3\2\2\2\u0b29\u0b2a\3\2\2\2\u0b2a\u0b28\3\2"+
		"\2\2\u0b2a\u0b2b\3\2\2\2\u0b2b\u0b2c\3\2\2\2\u0b2c\u0b2d\7\21\2\2\u0b2d"+
		"\u0b2f\3\2\2\2\u0b2e\u0b28\3\2\2\2\u0b2e\u0b2f\3\2\2\2\u0b2f\u0b31\3\2"+
		"\2\2\u0b30\u0b32\5\f\7\2\u0b31\u0b30\3\2\2\2\u0b32\u0b33\3\2\2\2\u0b33"+
		"\u0b31\3\2\2\2\u0b33\u0b34\3\2\2\2\u0b34\u0b35\3\2\2\2\u0b35\u0b36\5\u00c0"+
		"a\2\u0b36\u0b38\3\2\2\2\u0b37\u0b2e\3\2\2\2\u0b38\u0b3b\3\2\2\2\u0b39"+
		"\u0b37\3\2\2\2\u0b39\u0b3a\3\2\2\2\u0b3a\u0b3d\3\2\2\2\u0b3b\u0b39\3\2"+
		"\2\2\u0b3c\u0b3e\5\f\7\2\u0b3d\u0b3c\3\2\2\2\u0b3e\u0b3f\3\2\2\2\u0b3f"+
		"\u0b3d\3\2\2\2\u0b3f\u0b40\3\2\2\2\u0b40\u0b41\3\2\2\2\u0b41\u0b42\5$"+
		"\23\2\u0b42\u0b44\3\2\2\2\u0b43\u0b1c\3\2\2\2\u0b44\u0b45\3\2\2\2\u0b45"+
		"\u0b43\3\2\2\2\u0b45\u0b46\3\2\2\2\u0b46\u0b5a\3\2\2\2\u0b47\u0b49\5\f"+
		"\7\2\u0b48\u0b47\3\2\2\2\u0b49\u0b4a\3\2\2\2\u0b4a\u0b48\3\2\2\2\u0b4a"+
		"\u0b4b\3\2\2\2\u0b4b\u0b4c\3\2\2\2\u0b4c\u0b4e\7\u0189\2\2\u0b4d\u0b4f"+
		"\5\f\7\2\u0b4e\u0b4d\3\2\2\2\u0b4f\u0b50\3\2\2\2\u0b50\u0b4e\3\2\2\2\u0b50"+
		"\u0b51\3\2\2\2\u0b51\u0b52\3\2\2\2\u0b52\u0b54\7\u0194\2\2\u0b53\u0b55"+
		"\5\f\7\2\u0b54\u0b53\3\2\2\2\u0b55\u0b56\3\2\2\2\u0b56\u0b54\3\2\2\2\u0b56"+
		"\u0b57\3\2\2\2\u0b57\u0b58\3\2\2\2\u0b58\u0b59\5$\23\2\u0b59\u0b5b\3\2"+
		"\2\2\u0b5a\u0b48\3\2\2\2\u0b5a\u0b5b\3\2\2\2\u0b5b\u0b63\3\2\2\2\u0b5c"+
		"\u0b5e\5\f\7\2\u0b5d\u0b5c\3\2\2\2\u0b5e\u0b5f\3\2\2\2\u0b5f\u0b5d\3\2"+
		"\2\2\u0b5f\u0b60\3\2\2\2\u0b60\u0b61\3\2\2\2\u0b61\u0b62\7\u0089\2\2\u0b62"+
		"\u0b64\3\2\2\2\u0b63\u0b5d\3\2\2\2\u0b63\u0b64\3\2\2\2\u0b64\u00bf\3\2"+
		"\2\2\u0b65\u0b82\5\u02d6\u016c\2\u0b66\u0b68\7\u00fa\2\2\u0b67\u0b69\5"+
		"\f\7\2\u0b68\u0b67\3\2\2\2\u0b69\u0b6a\3\2\2\2\u0b6a\u0b68\3\2\2\2\u0b6a"+
		"\u0b6b\3\2\2\2\u0b6b\u0b6d\3\2\2\2\u0b6c\u0b66\3\2\2\2\u0b6c\u0b6d\3\2"+
		"\2\2\u0b6d\u0b6e\3\2\2\2\u0b6e\u0b7c\5\u02ce\u0168\2\u0b6f\u0b71\5\f\7"+
		"\2\u0b70\u0b6f\3\2\2\2\u0b71\u0b72\3\2\2\2\u0b72\u0b70\3\2\2\2\u0b72\u0b73"+
		"\3\2\2\2\u0b73\u0b74\3\2\2\2\u0b74\u0b76\t\7\2\2\u0b75\u0b77\5\f\7\2\u0b76"+
		"\u0b75\3\2\2\2\u0b77\u0b78\3\2\2\2\u0b78\u0b76\3\2\2\2\u0b78\u0b79\3\2"+
		"\2\2\u0b79\u0b7a\3\2\2\2\u0b7a\u0b7b\5\u02ce\u0168\2\u0b7b\u0b7d\3\2\2"+
		"\2\u0b7c\u0b70\3\2\2\2\u0b7c\u0b7d\3\2\2\2\u0b7d\u0b82\3\2\2\2\u0b7e\u0b82"+
		"\7\u0195\2\2\u0b7f\u0b82\7\u0178\2\2\u0b80\u0b82\7\u00a8\2\2\u0b81\u0b65"+
		"\3\2\2\2\u0b81\u0b6c\3\2\2\2\u0b81\u0b7e\3\2\2\2\u0b81\u0b7f\3\2\2\2\u0b81"+
		"\u0b80\3\2\2\2\u0b82\u00c1\3\2\2\2\u0b83\u0b88\5\u02ce\u0168\2\u0b84\u0b88"+
		"\5\u02d6\u016c\2\u0b85\u0b88\7\u0178\2\2\u0b86\u0b88\7\u00a8\2\2\u0b87"+
		"\u0b83\3\2\2\2\u0b87\u0b84\3\2\2\2\u0b87\u0b85\3\2\2\2\u0b87\u0b86\3\2"+
		"\2\2\u0b88\u00c3\3\2\2\2\u0b89\u0b8c\5\u00c6d\2\u0b8a\u0b8c\5\u00c8e\2"+
		"\u0b8b\u0b89\3\2\2\2\u0b8b\u0b8a\3\2\2\2\u0b8c\u00c5\3\2\2\2\u0b8d\u0b8f"+
		"\7y\2\2\u0b8e\u0b90\5\f\7\2\u0b8f\u0b8e\3\2\2\2\u0b90\u0b91\3\2\2\2\u0b91"+
		"\u0b8f\3\2\2\2\u0b91\u0b92\3\2\2\2\u0b92\u0b93\3\2\2\2\u0b93\u0b95\5\u00cc"+
		"g\2\u0b94\u0b96\5\f\7\2\u0b95\u0b94\3\2\2\2\u0b96\u0b97\3\2\2\2\u0b97"+
		"\u0b95\3\2\2\2\u0b97\u0b98\3\2\2\2\u0b98\u0b99\3\2\2\2\u0b99\u0ba7\t\20"+
		"\2\2\u0b9a\u0b9c\5\f\7\2\u0b9b\u0b9a\3\2\2\2\u0b9c\u0b9d\3\2\2\2\u0b9d"+
		"\u0b9b\3\2\2\2\u0b9d\u0b9e\3\2\2\2\u0b9e\u0b9f\3\2\2\2\u0b9f\u0ba1\5\u00cc"+
		"g\2\u0ba0\u0ba2\5\f\7\2\u0ba1\u0ba0\3\2\2\2\u0ba2\u0ba3\3\2\2\2\u0ba3"+
		"\u0ba1\3\2\2\2\u0ba3\u0ba4\3\2\2\2\u0ba4\u0ba5\3\2\2\2\u0ba5\u0ba6\7\u00bb"+
		"\2\2\u0ba6\u0ba8\3\2\2\2\u0ba7\u0b9b\3\2\2\2\u0ba7\u0ba8\3\2\2\2\u0ba8"+
		"\u0bb8\3\2\2\2\u0ba9\u0bab\5\f\7\2\u0baa\u0ba9\3\2\2\2\u0bab\u0bac\3\2"+
		"\2\2\u0bac\u0baa\3\2\2\2\u0bac\u0bad\3\2\2\2\u0bad\u0bae\3\2\2\2\u0bae"+
		"\u0bb6\5\u02e8\u0175\2\u0baf\u0bb1\5\f\7\2\u0bb0\u0baf\3\2\2\2\u0bb1\u0bb2"+
		"\3\2\2\2\u0bb2\u0bb0\3\2\2\2\u0bb2\u0bb3\3\2\2\2\u0bb3\u0bb4\3\2\2\2\u0bb4"+
		"\u0bb5\7\u0142\2\2\u0bb5\u0bb7\3\2\2\2\u0bb6\u0bb0\3\2\2\2\u0bb6\u0bb7"+
		"\3\2\2\2\u0bb7\u0bb9\3\2\2\2\u0bb8\u0baa\3\2\2\2\u0bb9\u0bba\3\2\2\2\u0bba"+
		"\u0bb8\3\2\2\2\u0bba\u0bbb\3\2\2\2\u0bbb\u0bc3\3\2\2\2\u0bbc\u0bbe\5\f"+
		"\7\2\u0bbd\u0bbc\3\2\2\2\u0bbe\u0bbf\3\2\2\2\u0bbf\u0bbd\3\2\2\2\u0bbf"+
		"\u0bc0\3\2\2\2\u0bc0\u0bc1\3\2\2\2\u0bc1\u0bc2\5\u0116\u008c\2\u0bc2\u0bc4"+
		"\3\2\2\2\u0bc3\u0bbd\3\2\2\2\u0bc3\u0bc4\3\2\2\2\u0bc4\u0bcc\3\2\2\2\u0bc5"+
		"\u0bc7\5\f\7\2\u0bc6\u0bc5\3\2\2\2\u0bc7\u0bc8\3\2\2\2\u0bc8\u0bc6\3\2"+
		"\2\2\u0bc8\u0bc9\3\2\2\2\u0bc9\u0bca\3\2\2\2\u0bca\u0bcb\7\u0088\2\2\u0bcb"+
		"\u0bcd\3\2\2\2\u0bcc\u0bc6\3\2\2\2\u0bcc\u0bcd\3\2\2\2\u0bcd\u00c7\3\2"+
		"\2\2\u0bce\u0bd0\7y\2\2\u0bcf\u0bd1\5\f\7\2\u0bd0\u0bcf\3\2\2\2\u0bd1"+
		"\u0bd2\3\2\2\2\u0bd2\u0bd0\3\2\2\2\u0bd2\u0bd3\3\2\2\2\u0bd3\u0bd4\3\2"+
		"\2\2\u0bd4\u0bd6\5\u00ccg\2\u0bd5\u0bd7\5\f\7\2\u0bd6\u0bd5\3\2\2\2\u0bd7"+
		"\u0bd8\3\2\2\2\u0bd8\u0bd6\3\2\2\2\u0bd8\u0bd9\3\2\2\2\u0bd9\u0bda\3\2"+
		"\2\2\u0bda\u0be8\t\20\2\2\u0bdb\u0bdd\5\f\7\2\u0bdc\u0bdb\3\2\2\2\u0bdd"+
		"\u0bde\3\2\2\2\u0bde\u0bdc\3\2\2\2\u0bde\u0bdf\3\2\2\2\u0bdf\u0be0\3\2"+
		"\2\2\u0be0\u0be2\5\u00ccg\2\u0be1\u0be3\5\f\7\2\u0be2\u0be1\3\2\2\2\u0be3"+
		"\u0be4\3\2\2\2\u0be4\u0be2\3\2\2\2\u0be4\u0be5\3\2\2\2\u0be5\u0be6\3\2"+
		"\2\2\u0be6\u0be7\7\u00bb\2\2\u0be7\u0be9\3\2\2\2\u0be8\u0bdc\3\2\2\2\u0be8"+
		"\u0be9\3\2\2\2\u0be9\u0beb\3\2\2\2\u0bea\u0bec\5\f\7\2\u0beb\u0bea\3\2"+
		"\2\2\u0bec\u0bed\3\2\2\2\u0bed\u0beb\3\2\2\2\u0bed\u0bee\3\2\2\2\u0bee"+
		"\u0bef\3\2\2\2\u0bef\u0bf7\5\u02e8\u0175\2\u0bf0\u0bf2\5\f\7\2\u0bf1\u0bf0"+
		"\3\2\2\2\u0bf2\u0bf3\3\2\2\2\u0bf3\u0bf1\3\2\2\2\u0bf3\u0bf4\3\2\2\2\u0bf4"+
		"\u0bf5\3\2\2\2\u0bf5\u0bf6\7\u0142\2\2\u0bf6\u0bf8\3\2\2\2\u0bf7\u0bf1"+
		"\3\2\2\2\u0bf7\u0bf8\3\2\2\2\u0bf8\u0bfa\3\2\2\2\u0bf9\u0bfb\5\f\7\2\u0bfa"+
		"\u0bf9\3\2\2\2\u0bfb\u0bfc\3\2\2\2\u0bfc\u0bfa\3\2\2\2\u0bfc\u0bfd\3\2"+
		"\2\2\u0bfd\u0bfe\3\2\2\2\u0bfe\u0c00\7\u012d\2\2\u0bff\u0c01\5\f\7\2\u0c00"+
		"\u0bff\3\2\2\2\u0c01\u0c02\3\2\2\2\u0c02\u0c00\3\2\2\2\u0c02\u0c03\3\2"+
		"\2\2\u0c03\u0c04\3\2\2\2\u0c04\u0c0c\5\u00caf\2\u0c05\u0c07\5\f\7\2\u0c06"+
		"\u0c05\3\2\2\2\u0c07\u0c08\3\2\2\2\u0c08\u0c06\3\2\2\2\u0c08\u0c09\3\2"+
		"\2\2\u0c09\u0c0a\3\2\2\2\u0c0a\u0c0b\5\u0116\u008c\2\u0c0b\u0c0d\3\2\2"+
		"\2\u0c0c\u0c06\3\2\2\2\u0c0c\u0c0d\3\2\2\2\u0c0d\u0c15\3\2\2\2\u0c0e\u0c10"+
		"\5\f\7\2\u0c0f\u0c0e\3\2\2\2\u0c10\u0c11\3\2\2\2\u0c11\u0c0f\3\2\2\2\u0c11"+
		"\u0c12\3\2\2\2\u0c12\u0c13\3\2\2\2\u0c13\u0c14\7\u0088\2\2\u0c14\u0c16"+
		"\3\2\2\2\u0c15\u0c0f\3\2\2\2\u0c15\u0c16\3\2\2\2\u0c16\u00c9\3\2\2\2\u0c17"+
		"\u0c18\5\u02e8\u0175\2\u0c18\u00cb\3\2\2\2\u0c19\u0c1c\5\u02ea\u0176\2"+
		"\u0c1a\u0c1c\7\u01c2\2\2\u0c1b\u0c19\3\2\2\2\u0c1b\u0c1a\3\2\2\2\u0c1c"+
		"\u00cd\3\2\2\2\u0c1d\u0c22\5\u00d0i\2\u0c1e\u0c22\5\u00d2j\2\u0c1f\u0c22"+
		"\5\u00d4k\2\u0c20\u0c22\5\u00d6l\2\u0c21\u0c1d\3\2\2\2\u0c21\u0c1e\3\2"+
		"\2\2\u0c21\u0c1f\3\2\2\2\u0c21\u0c20\3\2\2\2\u0c22\u00cf\3\2\2\2\u0c23"+
		"\u0c36\7x\2\2\u0c24\u0c26\5\f\7\2\u0c25\u0c24\3\2\2\2\u0c26\u0c27\3\2"+
		"\2\2\u0c27\u0c25\3\2\2\2\u0c27\u0c28\3\2\2\2\u0c28\u0c29\3\2\2\2\u0c29"+
		"\u0c33\5\u00d8m\2\u0c2a\u0c2c\5\f\7\2\u0c2b\u0c2a\3\2\2\2\u0c2c\u0c2d"+
		"\3\2\2\2\u0c2d\u0c2b\3\2\2\2\u0c2d\u0c2e\3\2\2\2\u0c2e\u0c2f\3\2\2\2\u0c2f"+
		"\u0c30\5\u00e0q\2\u0c30\u0c32\3\2\2\2\u0c31\u0c2b\3\2\2\2\u0c32\u0c35"+
		"\3\2\2\2\u0c33\u0c31\3\2\2\2\u0c33\u0c34\3\2\2\2\u0c34\u0c37\3\2\2\2\u0c35"+
		"\u0c33\3\2\2\2\u0c36\u0c25\3\2\2\2\u0c37\u0c38\3\2\2\2\u0c38\u0c36\3\2"+
		"\2\2\u0c38\u0c39\3\2\2\2\u0c39\u0c41\3\2\2\2\u0c3a\u0c3c\5\f\7\2\u0c3b"+
		"\u0c3a\3\2\2\2\u0c3c\u0c3d\3\2\2\2\u0c3d\u0c3b\3\2\2\2\u0c3d\u0c3e\3\2"+
		"\2\2\u0c3e\u0c3f\3\2\2\2\u0c3f\u0c40\7\u0087\2\2\u0c40\u0c42\3\2\2\2\u0c41"+
		"\u0c3b\3\2\2\2\u0c41\u0c42\3\2\2\2\u0c42\u00d1\3\2\2\2\u0c43\u0c56\7x"+
		"\2\2\u0c44\u0c46\5\f\7\2\u0c45\u0c44\3\2\2\2\u0c46\u0c47\3\2\2\2\u0c47"+
		"\u0c45\3\2\2\2\u0c47\u0c48\3\2\2\2\u0c48\u0c49\3\2\2\2\u0c49\u0c53\5\u00d8"+
		"m\2\u0c4a\u0c4c\5\f\7\2\u0c4b\u0c4a\3\2\2\2\u0c4c\u0c4d\3\2\2\2\u0c4d"+
		"\u0c4b\3\2\2\2\u0c4d\u0c4e\3\2\2\2\u0c4e\u0c4f\3\2\2\2\u0c4f\u0c50\5\u00e2"+
		"r\2\u0c50\u0c52\3\2\2\2\u0c51\u0c4b\3\2\2\2\u0c52\u0c55\3\2\2\2\u0c53"+
		"\u0c51\3\2\2\2\u0c53\u0c54\3\2\2\2\u0c54\u0c57\3\2\2\2\u0c55\u0c53\3\2"+
		"\2\2\u0c56\u0c45\3\2\2\2\u0c57\u0c58\3\2\2\2\u0c58\u0c56\3\2\2\2\u0c58"+
		"\u0c59\3\2\2\2\u0c59\u0c61\3\2\2\2\u0c5a\u0c5c\5\f\7\2\u0c5b\u0c5a\3\2"+
		"\2\2\u0c5c\u0c5d\3\2\2\2\u0c5d\u0c5b\3\2\2\2\u0c5d\u0c5e\3\2\2\2\u0c5e"+
		"\u0c5f\3\2\2\2\u0c5f\u0c60\7\u0087\2\2\u0c60\u0c62\3\2\2\2\u0c61\u0c5b"+
		"\3\2\2\2\u0c61\u0c62\3\2\2\2\u0c62\u00d3\3\2\2\2\u0c63\u0c65\7x\2\2\u0c64"+
		"\u0c66\5\f\7\2\u0c65\u0c64\3\2\2\2\u0c66\u0c67\3\2\2\2\u0c67\u0c65\3\2"+
		"\2\2\u0c67\u0c68\3\2\2\2\u0c68\u0c69\3\2\2\2\u0c69\u0c8d\5\u023e\u0120"+
		"\2\u0c6a\u0c6c\5\f\7\2\u0c6b\u0c6a\3\2\2\2\u0c6c\u0c6d\3\2\2\2\u0c6d\u0c6b"+
		"\3\2\2\2\u0c6d\u0c6e\3\2\2\2\u0c6e\u0c75\3\2\2\2\u0c6f\u0c71\7\37\2\2"+
		"\u0c70\u0c72\5\f\7\2\u0c71\u0c70\3\2\2\2\u0c72\u0c73\3\2\2\2\u0c73\u0c71"+
		"\3\2\2\2\u0c73\u0c74\3\2\2\2\u0c74\u0c76\3\2\2\2\u0c75\u0c6f\3\2\2\2\u0c75"+
		"\u0c76\3\2\2\2\u0c76\u0c8b\3\2\2\2\u0c77\u0c7f\5\u00dco\2\u0c78\u0c7a"+
		"\5\f\7\2\u0c79\u0c78\3\2\2\2\u0c7a\u0c7b\3\2\2\2\u0c7b\u0c79\3\2\2\2\u0c7b"+
		"\u0c7c\3\2\2\2\u0c7c\u0c7d\3\2\2\2\u0c7d\u0c7e\5\u00dep\2\u0c7e\u0c80"+
		"\3\2\2\2\u0c7f\u0c79\3\2\2\2\u0c7f\u0c80\3\2\2\2\u0c80\u0c8c\3\2\2\2\u0c81"+
		"\u0c89\5\u00dep\2\u0c82\u0c84\5\f\7\2\u0c83\u0c82\3\2\2\2\u0c84\u0c85"+
		"\3\2\2\2\u0c85\u0c83\3\2\2\2\u0c85\u0c86\3\2\2\2\u0c86\u0c87\3\2\2\2\u0c87"+
		"\u0c88\5\u00dco\2\u0c88\u0c8a\3\2\2\2\u0c89\u0c83\3\2\2\2\u0c89\u0c8a"+
		"\3\2\2\2\u0c8a\u0c8c\3\2\2\2\u0c8b\u0c77\3\2\2\2\u0c8b\u0c81\3\2\2\2\u0c8c"+
		"\u0c8e\3\2\2\2\u0c8d\u0c6b\3\2\2\2\u0c8d\u0c8e\3\2\2\2\u0c8e\u0c96\3\2"+
		"\2\2\u0c8f\u0c91\5\f\7\2\u0c90\u0c8f\3\2\2\2\u0c91\u0c92\3\2\2\2\u0c92"+
		"\u0c90\3\2\2\2\u0c92\u0c93\3\2\2\2\u0c93\u0c94\3\2\2\2\u0c94\u0c95\7\u0087"+
		"\2\2\u0c95\u0c97\3\2\2\2\u0c96\u0c90\3\2\2\2\u0c96\u0c97\3\2\2\2\u0c97"+
		"\u00d5\3\2\2\2\u0c98\u0c9a\7x\2\2\u0c99\u0c9b\5\f\7\2\u0c9a\u0c99\3\2"+
		"\2\2\u0c9b\u0c9c\3\2\2\2\u0c9c\u0c9a\3\2\2\2\u0c9c\u0c9d\3\2\2\2\u0c9d"+
		"\u0c9e\3\2\2\2\u0c9e\u0ca0\5\u00d8m\2\u0c9f\u0ca1\5\f\7\2\u0ca0\u0c9f"+
		"\3\2\2\2\u0ca1\u0ca2\3\2\2\2\u0ca2\u0ca0\3\2\2\2\u0ca2\u0ca3\3\2\2\2\u0ca3"+
		"\u0ca4\3\2\2\2\u0ca4\u0ca6\7\u0181\2\2\u0ca5\u0ca7\5\f\7\2\u0ca6\u0ca5"+
		"\3\2\2\2\u0ca7\u0ca8\3\2\2\2\u0ca8\u0ca6\3\2\2\2\u0ca8\u0ca9\3\2\2\2\u0ca9"+
		"\u0caa\3\2\2\2\u0caa\u0cb2\5\u00dan\2\u0cab\u0cad\5\f\7\2\u0cac\u0cab"+
		"\3\2\2\2\u0cad\u0cae\3\2\2\2\u0cae\u0cac\3\2\2\2\u0cae\u0caf\3\2\2\2\u0caf"+
		"\u0cb0\3\2\2\2\u0cb0\u0cb1\5\u0112\u008a\2\u0cb1\u0cb3\3\2\2\2\u0cb2\u0cac"+
		"\3\2\2\2\u0cb2\u0cb3\3\2\2\2\u0cb3\u0cbb\3\2\2\2\u0cb4\u0cb6\5\f\7\2\u0cb5"+
		"\u0cb4\3\2\2\2\u0cb6\u0cb7\3\2\2\2\u0cb7\u0cb5\3\2\2\2\u0cb7\u0cb8\3\2"+
		"\2\2\u0cb8\u0cb9\3\2\2\2\u0cb9\u0cba\7\u0087\2\2\u0cba\u0cbc\3\2\2\2\u0cbb"+
		"\u0cb5\3\2\2\2\u0cbb\u0cbc\3\2\2\2\u0cbc\u00d7\3\2\2\2\u0cbd\u0cc0\5\u02ea"+
		"\u0176\2\u0cbe\u0cc0\5\u02d0\u0169\2\u0cbf\u0cbd\3\2\2\2\u0cbf\u0cbe\3"+
		"\2\2\2\u0cc0\u00d9\3\2\2\2\u0cc1\u0cc2\7\u01c4\2\2\u0cc2\u00db\3\2\2\2"+
		"\u0cc3\u0ccb\7\u00e4\2\2\u0cc4\u0cc6\5\f\7\2\u0cc5\u0cc4\3\2\2\2\u0cc6"+
		"\u0cc7\3\2\2\2\u0cc7\u0cc5\3\2\2\2\u0cc7\u0cc8\3\2\2\2\u0cc8\u0cc9\3\2"+
		"\2\2\u0cc9\u0cca\7\u00fb\2\2\u0cca\u0ccc\3\2\2\2\u0ccb\u0cc5\3\2\2\2\u0ccb"+
		"\u0ccc\3\2\2\2\u0ccc\u0cce\3\2\2\2\u0ccd\u0ccf\5\f\7\2\u0cce\u0ccd\3\2"+
		"\2\2\u0ccf\u0cd0\3\2\2\2\u0cd0\u0cce\3\2\2\2\u0cd0\u0cd1\3\2\2\2\u0cd1"+
		"\u0cd4\3\2\2\2\u0cd2\u0cd5\5\u02ea\u0176\2\u0cd3\u0cd5\7\u01c2\2\2\u0cd4"+
		"\u0cd2\3\2\2\2\u0cd4\u0cd3\3\2\2\2\u0cd5\u00dd\3\2\2\2\u0cd6\u0cde\7A"+
		"\2\2\u0cd7\u0cd9\5\f\7\2\u0cd8\u0cd7\3\2\2\2\u0cd9\u0cda\3\2\2\2\u0cda"+
		"\u0cd8\3\2\2\2\u0cda\u0cdb\3\2\2\2\u0cdb\u0cdc\3\2\2\2\u0cdc\u0cdd\7\u00fb"+
		"\2\2\u0cdd\u0cdf\3\2\2\2\u0cde\u0cd8\3\2\2\2\u0cde\u0cdf\3\2\2\2\u0cdf"+
		"\u0ce1\3\2\2\2\u0ce0\u0ce2\5\f\7\2\u0ce1\u0ce0\3\2\2\2\u0ce2\u0ce3\3\2"+
		"\2\2\u0ce3\u0ce1\3\2\2\2\u0ce3\u0ce4\3\2\2\2\u0ce4\u0ce7\3\2\2\2\u0ce5"+
		"\u0ce8\5\u02ea\u0176\2\u0ce6\u0ce8\7\u01c2\2\2\u0ce7\u0ce5\3\2\2\2\u0ce7"+
		"\u0ce6\3\2\2\2\u0ce8\u00df\3\2\2\2\u0ce9\u0ceb\7\u018b\2\2\u0cea\u0cec"+
		"\5\f\7\2\u0ceb\u0cea\3\2\2\2\u0cec\u0ced\3\2\2\2\u0ced\u0ceb\3\2\2\2\u0ced"+
		"\u0cee\3\2\2\2\u0cee\u0cf0\3\2\2\2\u0cef\u0ce9\3\2\2\2\u0cef\u0cf0\3\2"+
		"\2\2\u0cf0\u0cf1\3\2\2\2\u0cf1\u0d0d\7\\\2\2\u0cf2\u0cf4\7\u0181\2\2\u0cf3"+
		"\u0cf5\5\f\7\2\u0cf4\u0cf3\3\2\2\2\u0cf5\u0cf6\3\2\2\2\u0cf6\u0cf4\3\2"+
		"\2\2\u0cf6\u0cf7\3\2\2\2\u0cf7\u0cf8\3\2\2\2\u0cf8\u0cf9\5\u00e8u\2\u0cf9"+
		"\u0d0d\3\2\2\2\u0cfa\u0cfc\7\u018b\2\2\u0cfb\u0cfd\5\f\7\2\u0cfc\u0cfb"+
		"\3\2\2\2\u0cfd\u0cfe\3\2\2\2\u0cfe\u0cfc\3\2\2\2\u0cfe\u0cff\3\2\2\2\u0cff"+
		"\u0d01\3\2\2\2\u0d00\u0cfa\3\2\2\2\u0d00\u0d01\3\2\2\2\u0d01\u0d02\3\2"+
		"\2\2\u0d02\u0d0a\7\u00f9\2\2\u0d03\u0d05\5\f\7\2\u0d04\u0d03\3\2\2\2\u0d05"+
		"\u0d06\3\2\2\2\u0d06\u0d04\3\2\2\2\u0d06\u0d07\3\2\2\2\u0d07\u0d08\3\2"+
		"\2\2\u0d08\u0d09\7\t\2\2\u0d09\u0d0b\3\2\2\2\u0d0a\u0d04\3\2\2\2\u0d0a"+
		"\u0d0b\3\2\2\2\u0d0b\u0d0d\3\2\2\2\u0d0c";
	private static final String _serializedATNSegment2 =
		"\u0cef\3\2\2\2\u0d0c\u0cf2\3\2\2\2\u0d0c\u0d00\3\2\2\2\u0d0d\u00e1\3\2"+
		"\2\2\u0d0e\u0d63\5\u00e0q\2\u0d0f\u0d63\5\u00e4s\2\u0d10\u0d63\5\u00e6"+
		"t\2\u0d11\u0d29\7\u009d\2\2\u0d12\u0d14\5\f\7\2\u0d13\u0d12\3\2\2\2\u0d14"+
		"\u0d15\3\2\2\2\u0d15\u0d13\3\2\2\2\u0d15\u0d16\3\2\2\2\u0d16\u0d1d\3\2"+
		"\2\2\u0d17\u0d19\7\u0175\2\2\u0d18\u0d1a\5\f\7\2\u0d19\u0d18\3\2\2\2\u0d1a"+
		"\u0d1b\3\2\2\2\u0d1b\u0d19\3\2\2\2\u0d1b\u0d1c\3\2\2\2\u0d1c\u0d1e\3\2"+
		"\2\2\u0d1d\u0d17\3\2\2\2\u0d1d\u0d1e\3\2\2\2\u0d1e\u0d1f\3\2\2\2\u0d1f"+
		"\u0d27\7\u0081\2\2\u0d20\u0d22\5\f\7\2\u0d21\u0d20\3\2\2\2\u0d22\u0d23"+
		"\3\2\2\2\u0d23\u0d21\3\2\2\2\u0d23\u0d24\3\2\2\2\u0d24\u0d25\3\2\2\2\u0d25"+
		"\u0d26\7\u00ff\2\2\u0d26\u0d28\3\2\2\2\u0d27\u0d21\3\2\2\2\u0d27\u0d28"+
		"\3\2\2\2\u0d28\u0d2a\3\2\2\2\u0d29\u0d13\3\2\2\2\u0d29\u0d2a\3\2\2\2\u0d2a"+
		"\u0d2c\3\2\2\2\u0d2b\u0d2d\5\f\7\2\u0d2c\u0d2b\3\2\2\2\u0d2d\u0d2e\3\2"+
		"\2\2\u0d2e\u0d2c\3\2\2\2\u0d2e\u0d2f\3\2\2\2\u0d2f\u0d30\3\2\2\2\u0d30"+
		"\u0d31\t\21\2\2\u0d31\u0d63\3\2\2\2\u0d32\u0d34\7\u018b\2\2\u0d33\u0d35"+
		"\5\f\7\2\u0d34\u0d33\3\2\2\2\u0d35\u0d36\3\2\2\2\u0d36\u0d34\3\2\2\2\u0d36"+
		"\u0d37\3\2\2\2\u0d37\u0d39\3\2\2\2\u0d38\u0d32\3\2\2\2\u0d38\u0d39\3\2"+
		"\2\2\u0d39\u0d3a\3\2\2\2\u0d3a\u0d63\7&\2\2\u0d3b\u0d63\7\u017b\2\2\u0d3c"+
		"\u0d63\7\60\2\2\u0d3d\u0d3f\7\u018b\2\2\u0d3e\u0d40\5\f\7\2\u0d3f\u0d3e"+
		"\3\2\2\2\u0d40\u0d41\3\2\2\2\u0d41\u0d3f\3\2\2\2\u0d41\u0d42\3\2\2\2\u0d42"+
		"\u0d44\3\2\2\2\u0d43\u0d3d\3\2\2\2\u0d43\u0d44\3\2\2\2\u0d44\u0d45\3\2"+
		"\2\2\u0d45\u0d63\7.\2\2\u0d46\u0d63\7\u013a\2\2\u0d47\u0d49\7\u018b\2"+
		"\2\u0d48\u0d4a\5\f\7\2\u0d49\u0d48\3\2\2\2\u0d4a\u0d4b\3\2\2\2\u0d4b\u0d49"+
		"\3\2\2\2\u0d4b\u0d4c\3\2\2\2\u0d4c\u0d4e\3\2\2\2\u0d4d\u0d47\3\2\2\2\u0d4d"+
		"\u0d4e\3\2\2\2\u0d4e\u0d4f\3\2\2\2\u0d4f\u0d63\7\\\2\2\u0d50\u0d52\7\u018b"+
		"\2\2\u0d51\u0d53\5\f\7\2\u0d52\u0d51\3\2\2\2\u0d53\u0d54\3\2\2\2\u0d54"+
		"\u0d52\3\2\2\2\u0d54\u0d55\3\2\2\2\u0d55\u0d57\3\2\2\2\u0d56\u0d50\3\2"+
		"\2\2\u0d56\u0d57\3\2\2\2\u0d57\u0d58\3\2\2\2\u0d58\u0d60\7\u00f9\2\2\u0d59"+
		"\u0d5b\5\f\7\2\u0d5a\u0d59\3\2\2\2\u0d5b\u0d5c\3\2\2\2\u0d5c\u0d5a\3\2"+
		"\2\2\u0d5c\u0d5d\3\2\2\2\u0d5d\u0d5e\3\2\2\2\u0d5e\u0d5f\7\t\2\2\u0d5f"+
		"\u0d61\3\2\2\2\u0d60\u0d5a\3\2\2\2\u0d60\u0d61\3\2\2\2\u0d61\u0d63\3\2"+
		"\2\2\u0d62\u0d0e\3\2\2\2\u0d62\u0d0f\3\2\2\2\u0d62\u0d10\3\2\2\2\u0d62"+
		"\u0d11\3\2\2\2\u0d62\u0d38\3\2\2\2\u0d62\u0d3b\3\2\2\2\u0d62\u0d3c\3\2"+
		"\2\2\u0d62\u0d43\3\2\2\2\u0d62\u0d46\3\2\2\2\u0d62\u0d4d\3\2\2\2\u0d62"+
		"\u0d56\3\2\2\2\u0d63\u00e3\3\2\2\2\u0d64\u0d66\7\37\2\2\u0d65\u0d67\5"+
		"\f\7\2\u0d66\u0d65\3\2\2\2\u0d67\u0d68\3\2\2\2\u0d68\u0d66\3\2\2\2\u0d68"+
		"\u0d69\3\2\2\2\u0d69\u0d6b\3\2\2\2\u0d6a\u0d64\3\2\2\2\u0d6a\u0d6b\3\2"+
		"\2\2\u0d6b\u0d6c\3\2\2\2\u0d6c\u0d74\7\u00e4\2\2\u0d6d\u0d6f\5\f\7\2\u0d6e"+
		"\u0d6d\3\2\2\2\u0d6f\u0d70\3\2\2\2\u0d70\u0d6e\3\2\2\2\u0d70\u0d71\3\2"+
		"\2\2\u0d71\u0d72\3\2\2\2\u0d72\u0d73\7\u00fb\2\2\u0d73\u0d75\3\2\2\2\u0d74"+
		"\u0d6e\3\2\2\2\u0d74\u0d75\3\2\2\2\u0d75\u0d77\3\2\2\2\u0d76\u0d78\5\f"+
		"\7\2\u0d77\u0d76\3\2\2\2\u0d78\u0d79\3\2\2\2\u0d79\u0d77\3\2\2\2\u0d79"+
		"\u0d7a\3\2\2\2\u0d7a\u0d7b\3\2\2\2\u0d7b\u0d7c\5\u013c\u009f\2\u0d7c\u00e5"+
		"\3\2\2\2\u0d7d\u0d7f\7\37\2\2\u0d7e\u0d80\5\f\7\2\u0d7f\u0d7e\3\2\2\2"+
		"\u0d80\u0d81\3\2\2\2\u0d81\u0d7f\3\2\2\2\u0d81\u0d82\3\2\2\2\u0d82\u0d84"+
		"\3\2\2\2\u0d83\u0d7d\3\2\2\2\u0d83\u0d84\3\2\2\2\u0d84\u0d85\3\2\2\2\u0d85"+
		"\u0d8d\7A\2\2\u0d86\u0d88\5\f\7\2\u0d87\u0d86\3\2\2\2\u0d88\u0d89\3\2"+
		"\2\2\u0d89\u0d87\3\2\2\2\u0d89\u0d8a\3\2\2\2\u0d8a\u0d8b\3\2\2\2\u0d8b"+
		"\u0d8c\7\u00fb\2\2\u0d8c\u0d8e\3\2\2\2\u0d8d\u0d87\3\2\2\2\u0d8d\u0d8e"+
		"\3\2\2\2\u0d8e\u0d90\3\2\2\2\u0d8f\u0d91\5\f\7\2\u0d90\u0d8f\3\2\2\2\u0d91"+
		"\u0d92\3\2\2\2\u0d92\u0d90\3\2\2\2\u0d92\u0d93\3\2\2\2\u0d93\u0d94\3\2"+
		"\2\2\u0d94\u0d95\5\u013c\u009f\2\u0d95\u00e7\3\2\2\2\u0d96\u0d97\7\u01c4"+
		"\2\2\u0d97\u00e9\3\2\2\2\u0d98\u0d9a\7q\2\2\u0d99\u0d9b\5\f\7\2\u0d9a"+
		"\u0d99\3\2\2\2\u0d9b\u0d9c\3\2\2\2\u0d9c\u0d9a\3\2\2\2\u0d9c\u0d9d\3\2"+
		"\2\2\u0d9d\u0d9e\3\2\2\2\u0d9e\u0da6\5\u02a8\u0155\2\u0d9f\u0da1\5\f\7"+
		"\2\u0da0\u0d9f\3\2\2\2\u0da1\u0da2\3\2\2\2\u0da2\u0da0\3\2\2\2\u0da2\u0da3"+
		"\3\2\2\2\u0da3\u0da4\3\2\2\2\u0da4\u0da5\7\u0126\2\2\u0da5\u0da7\3\2\2"+
		"\2\u0da6\u0da0\3\2\2\2\u0da6\u0da7\3\2\2\2\u0da7\u0daf\3\2\2\2\u0da8\u0daa"+
		"\5\f\7\2\u0da9\u0da8\3\2\2\2\u0daa\u0dab\3\2\2\2\u0dab\u0da9\3\2\2\2\u0dab"+
		"\u0dac\3\2\2\2\u0dac\u0dad\3\2\2\2\u0dad\u0dae\5\u0118\u008d\2\u0dae\u0db0"+
		"\3\2\2\2\u0daf\u0da9\3\2\2\2\u0daf\u0db0\3\2\2\2\u0db0\u0db8\3\2\2\2\u0db1"+
		"\u0db3\5\f\7\2\u0db2\u0db1\3\2\2\2\u0db3\u0db4\3\2\2\2\u0db4\u0db2\3\2"+
		"\2\2\u0db4\u0db5\3\2\2\2\u0db5\u0db6\3\2\2\2\u0db6\u0db7\7\u0086\2\2\u0db7"+
		"\u0db9\3\2\2\2\u0db8\u0db2\3\2\2\2\u0db8\u0db9\3\2\2\2\u0db9\u00eb\3\2"+
		"\2\2\u0dba\u0dbb\7Y\2\2\u0dbb\u00ed\3\2\2\2\u0dbc\u0dcc\7L\2\2\u0dbd\u0dbf"+
		"\5\f\7\2\u0dbe\u0dbd\3\2\2\2\u0dbf\u0dc0\3\2\2\2\u0dc0\u0dbe\3\2\2\2\u0dc0"+
		"\u0dc1\3\2\2\2\u0dc1\u0dc2\3\2\2\2\u0dc2\u0dca\5\u02e8\u0175\2\u0dc3\u0dc5"+
		"\5\f\7\2\u0dc4\u0dc3\3\2\2\2\u0dc5\u0dc6\3\2\2\2\u0dc6\u0dc4\3\2\2\2\u0dc6"+
		"\u0dc7\3\2\2\2\u0dc7\u0dc8\3\2\2\2\u0dc8\u0dc9\7\u0142\2\2\u0dc9\u0dcb"+
		"\3\2\2\2\u0dca\u0dc4\3\2\2\2\u0dca\u0dcb\3\2\2\2\u0dcb\u0dcd\3\2\2\2\u0dcc"+
		"\u0dbe\3\2\2\2\u0dcd\u0dce\3\2\2\2\u0dce\u0dcc\3\2\2\2\u0dce\u0dcf\3\2"+
		"\2\2\u0dcf\u0de8\3\2\2\2\u0dd0\u0dd2\5\f\7\2\u0dd1\u0dd0\3\2\2\2\u0dd2"+
		"\u0dd3\3\2\2\2\u0dd3\u0dd1\3\2\2\2\u0dd3\u0dd4\3\2\2\2\u0dd4\u0dd5\3\2"+
		"\2\2\u0dd5\u0dd7\7\u009c\2\2\u0dd6\u0dd8\5\f\7\2\u0dd7\u0dd6\3\2\2\2\u0dd8"+
		"\u0dd9\3\2\2\2\u0dd9\u0dd7\3\2\2\2\u0dd9\u0dda\3\2\2\2\u0dda\u0de9\3\2"+
		"\2\2\u0ddb\u0ddd\5\f\7\2\u0ddc\u0ddb\3\2\2\2\u0ddd\u0de0\3\2\2\2\u0dde"+
		"\u0ddc\3\2\2\2\u0dde\u0ddf\3\2\2\2\u0ddf\u0de1\3\2\2\2\u0de0\u0dde\3\2"+
		"\2\2\u0de1\u0de5\7\u01b3\2\2\u0de2\u0de4\5\f\7\2\u0de3\u0de2\3\2\2\2\u0de4"+
		"\u0de7\3\2\2\2\u0de5\u0de3\3\2\2\2\u0de5\u0de6\3\2\2\2\u0de6\u0de9\3\2"+
		"\2\2\u0de7\u0de5\3\2\2\2\u0de8\u0dd1\3\2\2\2\u0de8\u0dde\3\2\2\2\u0de9"+
		"\u0dea\3\2\2\2\u0dea\u0df2\5\u02ce\u0168\2\u0deb\u0ded\5\f\7\2\u0dec\u0deb"+
		"\3\2\2\2\u0ded\u0dee\3\2\2\2\u0dee\u0dec\3\2\2\2\u0dee\u0def\3\2\2\2\u0def"+
		"\u0df0\3\2\2\2\u0df0\u0df1\5\u0116\u008c\2\u0df1\u0df3\3\2\2\2\u0df2\u0dec"+
		"\3\2\2\2\u0df2\u0df3\3\2\2\2\u0df3\u0dfb\3\2\2\2\u0df4\u0df6\5\f\7\2\u0df5"+
		"\u0df4\3\2\2\2\u0df6\u0df7\3\2\2\2\u0df7\u0df5\3\2\2\2\u0df7\u0df8\3\2"+
		"\2\2\u0df8\u0df9\3\2\2\2\u0df9\u0dfa\7\u0085\2\2\u0dfa\u0dfc\3\2\2\2\u0dfb"+
		"\u0df5\3\2\2\2\u0dfb\u0dfc\3\2\2\2\u0dfc\u00ef\3\2\2\2\u0dfd\u0e0d\7="+
		"\2\2\u0dfe\u0e00\5\f\7\2\u0dff\u0dfe\3\2\2\2\u0e00\u0e01\3\2\2\2\u0e01"+
		"\u0dff\3\2\2\2\u0e01\u0e02\3\2\2\2\u0e02\u0e03\3\2\2\2\u0e03\u0e0b\5\u02a8"+
		"\u0155\2\u0e04\u0e06\5\f\7\2\u0e05\u0e04\3\2\2\2\u0e06\u0e07\3\2\2\2\u0e07"+
		"\u0e05\3\2\2\2\u0e07\u0e08\3\2\2\2\u0e08\u0e09\3\2\2\2\u0e09\u0e0a\5\u00f2"+
		"z\2\u0e0a\u0e0c\3\2\2\2\u0e0b\u0e05\3\2\2\2\u0e0b\u0e0c\3\2\2\2\u0e0c"+
		"\u0e0e\3\2\2\2\u0e0d\u0dff\3\2\2\2\u0e0e\u0e0f\3\2\2\2\u0e0f\u0e0d\3\2"+
		"\2\2\u0e0f\u0e10\3\2\2\2\u0e10\u00f1\3\2\2\2\u0e11\u0e32\t\22\2\2\u0e12"+
		"\u0e14\5\f\7\2\u0e13\u0e12\3\2\2\2\u0e14\u0e15\3\2\2\2\u0e15\u0e13\3\2"+
		"\2\2\u0e15\u0e16\3\2\2\2\u0e16\u0e30\3\2\2\2\u0e17\u0e19\7\u00b5\2\2\u0e18"+
		"\u0e1a\5\f\7\2\u0e19\u0e18\3\2\2\2\u0e1a\u0e1b\3\2\2\2\u0e1b\u0e19\3\2"+
		"\2\2\u0e1b\u0e1c\3\2\2\2\u0e1c\u0e1e\3\2\2\2\u0e1d\u0e17\3\2\2\2\u0e1d"+
		"\u0e1e\3\2\2\2\u0e1e\u0e1f\3\2\2\2\u0e1f\u0e31\7\u012e\2\2\u0e20\u0e22"+
		"\7\u018b\2\2\u0e21\u0e23\5\f\7\2\u0e22\u0e21\3\2\2\2\u0e23\u0e24\3\2\2"+
		"\2\u0e24\u0e22\3\2\2\2\u0e24\u0e25\3\2\2\2\u0e25\u0e27\3\2\2\2\u0e26\u0e20"+
		"\3\2\2\2\u0e26\u0e27\3\2\2\2\u0e27\u0e28\3\2\2\2\u0e28\u0e2a\7\u00f9\2"+
		"\2\u0e29\u0e2b\5\f\7\2\u0e2a\u0e29\3\2\2\2\u0e2b\u0e2c\3\2\2\2\u0e2c\u0e2a"+
		"\3\2\2\2\u0e2c\u0e2d\3\2\2\2\u0e2d\u0e2e\3\2\2\2\u0e2e\u0e2f\7\u013c\2"+
		"\2\u0e2f\u0e31\3\2\2\2\u0e30\u0e1d\3\2\2\2\u0e30\u0e26\3\2\2\2\u0e31\u0e33"+
		"\3\2\2\2\u0e32\u0e13\3\2\2\2\u0e32\u0e33\3\2\2\2\u0e33\u0e48\3\2\2\2\u0e34"+
		"\u0e36\7\u018b\2\2\u0e35\u0e37\5\f\7\2\u0e36\u0e35\3\2\2\2\u0e37\u0e38"+
		"\3\2\2\2\u0e38\u0e36\3\2\2\2\u0e38\u0e39\3\2\2\2\u0e39\u0e3b\3\2\2\2\u0e3a"+
		"\u0e34\3\2\2\2\u0e3a\u0e3b\3\2\2\2\u0e3b\u0e45\3\2\2\2\u0e3c\u0e3e\7\u00f9"+
		"\2\2\u0e3d\u0e3f\5\f\7\2\u0e3e\u0e3d\3\2\2\2\u0e3f\u0e40\3\2\2\2\u0e40"+
		"\u0e3e\3\2\2\2\u0e40\u0e41\3\2\2\2\u0e41\u0e42\3\2\2\2\u0e42\u0e43\7\u013c"+
		"\2\2\u0e43\u0e46\3\2\2\2\u0e44\u0e46\7\u00e8\2\2\u0e45\u0e3c\3\2\2\2\u0e45"+
		"\u0e44\3\2\2\2\u0e46\u0e48\3\2\2\2\u0e47\u0e11\3\2\2\2\u0e47\u0e3a\3\2"+
		"\2\2\u0e48\u00f3\3\2\2\2\u0e49\u0e51\7\65\2\2\u0e4a\u0e4c\5\f\7\2\u0e4b"+
		"\u0e4a\3\2\2\2\u0e4c\u0e4d\3\2\2\2\u0e4d\u0e4b\3\2\2\2\u0e4d\u0e4e\3\2"+
		"\2\2\u0e4e\u0e4f\3\2\2\2\u0e4f\u0e50\5\u0102\u0082\2\u0e50\u0e52\3\2\2"+
		"\2\u0e51\u0e4b\3\2\2\2\u0e52\u0e53\3\2\2\2\u0e53\u0e51\3\2\2\2\u0e53\u0e54"+
		"\3\2\2\2\u0e54\u00f5\3\2\2\2\u0e55\u0e57\7\64\2\2\u0e56\u0e58\5\f\7\2"+
		"\u0e57\u0e56\3\2\2\2\u0e58\u0e59\3\2\2\2\u0e59\u0e57\3\2\2\2\u0e59\u0e5a"+
		"\3\2\2\2\u0e5a\u0e5b\3\2\2\2\u0e5b\u0e63\5\u0102\u0082\2\u0e5c\u0e5e\5"+
		"\f\7\2\u0e5d\u0e5c\3\2\2\2\u0e5e\u0e5f\3\2\2\2\u0e5f\u0e5d\3\2\2\2\u0e5f"+
		"\u0e60\3\2\2\2\u0e60\u0e61\3\2\2\2\u0e61\u0e62\5\u00fa~\2\u0e62\u0e64"+
		"\3\2\2\2\u0e63\u0e5d\3\2\2\2\u0e63\u0e64\3\2\2\2\u0e64\u0e6c\3\2\2\2\u0e65"+
		"\u0e67\5\f\7\2\u0e66\u0e65\3\2\2\2\u0e67\u0e68\3\2\2\2\u0e68\u0e66\3\2"+
		"\2\2\u0e68\u0e69\3\2\2\2\u0e69\u0e6a\3\2\2\2\u0e6a\u0e6b\5\u00f8}\2\u0e6b"+
		"\u0e6d\3\2\2\2\u0e6c\u0e66\3\2\2\2\u0e6c\u0e6d\3\2\2\2\u0e6d\u0e75\3\2"+
		"\2\2\u0e6e\u0e70\5\f\7\2\u0e6f\u0e6e\3\2\2\2\u0e70\u0e71\3\2\2\2\u0e71"+
		"\u0e6f\3\2\2\2\u0e71\u0e72\3\2\2\2\u0e72\u0e73\3\2\2\2\u0e73\u0e74\5\u0112"+
		"\u008a\2\u0e74\u0e76\3\2\2\2\u0e75\u0e6f\3\2\2\2\u0e75\u0e76\3\2\2\2\u0e76"+
		"\u0e7e\3\2\2\2\u0e77\u0e79\5\f\7\2\u0e78\u0e77\3\2\2\2\u0e79\u0e7a\3\2"+
		"\2\2\u0e7a\u0e78\3\2\2\2\u0e7a\u0e7b\3\2\2\2\u0e7b\u0e7c\3\2\2\2\u0e7c"+
		"\u0e7d\7\u0084\2\2\u0e7d\u0e7f\3\2\2\2\u0e7e\u0e78\3\2\2\2\u0e7e\u0e7f"+
		"\3\2\2\2\u0e7f\u00f7\3\2\2\2\u0e80\u0e82\7\u00bb\2\2\u0e81\u0e83\5\f\7"+
		"\2\u0e82\u0e81\3\2\2\2\u0e83\u0e84\3\2\2\2\u0e84\u0e82\3\2\2\2\u0e84\u0e85"+
		"\3\2\2\2\u0e85\u0e86\3\2\2\2\u0e86\u0e87\5\u02e8\u0175\2\u0e87\u00f9\3"+
		"\2\2\2\u0e88\u0e90\7\u0184\2\2\u0e89\u0e8b\5\f\7\2\u0e8a\u0e89\3\2\2\2"+
		"\u0e8b\u0e8c\3\2\2\2\u0e8c\u0e8a\3\2\2\2\u0e8c\u0e8d\3\2\2\2\u0e8d\u0e8e"+
		"\3\2\2\2\u0e8e\u0e8f\5\u00fc\177\2\u0e8f\u0e91\3\2\2\2\u0e90\u0e8a\3\2"+
		"\2\2\u0e91\u0e92\3\2\2\2\u0e92\u0e90\3\2\2\2\u0e92\u0e93\3\2\2\2\u0e93"+
		"\u00fb\3\2\2\2\u0e94\u0eab\7\u0101\2\2\u0e95\u0e97\5\u00fe\u0080\2\u0e96"+
		"\u0e98\5\f\7\2\u0e97\u0e96\3\2\2\2\u0e98\u0e99\3\2\2\2\u0e99\u0e97\3\2"+
		"\2\2\u0e99\u0e9a\3\2\2\2\u0e9a\u0e9c\3\2\2\2\u0e9b\u0e95\3\2\2\2\u0e9b"+
		"\u0e9c\3\2\2\2\u0e9c\u0e9d\3\2\2\2\u0e9d\u0ea7\5\u0100\u0081\2\u0e9e\u0ea0"+
		"\5\f\7\2\u0e9f\u0e9e\3\2\2\2\u0ea0\u0ea1\3\2\2\2\u0ea1\u0e9f\3\2\2\2\u0ea1"+
		"\u0ea2\3\2\2\2\u0ea2\u0ea3\3\2\2\2\u0ea3\u0ea4\5\u0100\u0081\2\u0ea4\u0ea6"+
		"\3\2\2\2\u0ea5\u0e9f\3\2\2\2\u0ea6\u0ea9\3\2\2\2\u0ea7\u0ea5\3\2\2\2\u0ea7"+
		"\u0ea8\3\2\2\2\u0ea8\u0eab\3\2\2\2\u0ea9\u0ea7\3\2\2\2\u0eaa\u0e94\3\2"+
		"\2\2\u0eaa\u0e9b\3\2\2\2\u0eab\u00fd\3\2\2\2\u0eac\u0eae\7\62\2\2\u0ead"+
		"\u0eaf\5\f\7\2\u0eae\u0ead\3\2\2\2\u0eaf\u0eb0\3\2\2\2\u0eb0\u0eae\3\2"+
		"\2\2\u0eb0\u0eb1\3\2\2\2\u0eb1\u0eb3\3\2\2\2\u0eb2\u0eac\3\2\2\2\u0eb2"+
		"\u0eb3\3\2\2\2\u0eb3\u0eb4\3\2\2\2\u0eb4\u0ed1\7\u012a\2\2\u0eb5\u0eb7"+
		"\7\62\2\2\u0eb6\u0eb8\5\f\7\2\u0eb7\u0eb6\3\2\2\2\u0eb8\u0eb9\3\2\2\2"+
		"\u0eb9\u0eb7\3\2\2\2\u0eb9\u0eba\3\2\2\2\u0eba\u0ebc\3\2\2\2\u0ebb\u0eb5"+
		"\3\2\2\2\u0ebb\u0ebc\3\2\2\2\u0ebc\u0ebd\3\2\2\2\u0ebd\u0ed1\7V\2\2\u0ebe"+
		"\u0ec0\7\62\2\2\u0ebf\u0ec1\5\f\7\2\u0ec0\u0ebf\3\2\2\2\u0ec1\u0ec2\3"+
		"\2\2\2\u0ec2\u0ec0\3\2\2\2\u0ec2\u0ec3\3\2\2\2\u0ec3\u0ec5\3\2\2\2\u0ec4"+
		"\u0ebe\3\2\2\2\u0ec4\u0ec5\3\2\2\2\u0ec5\u0ec6\3\2\2\2\u0ec6\u0ed1\7u"+
		"\2\2\u0ec7\u0ec9\7\62\2\2\u0ec8\u0eca\5\f\7\2\u0ec9\u0ec8\3\2\2\2\u0eca"+
		"\u0ecb\3\2\2\2\u0ecb\u0ec9\3\2\2\2\u0ecb\u0ecc\3\2\2\2\u0ecc\u0ece\3\2"+
		"\2\2\u0ecd\u0ec7\3\2\2\2\u0ecd\u0ece\3\2\2\2\u0ece\u0ecf\3\2\2\2\u0ecf"+
		"\u0ed1\7\u0185\2\2\u0ed0\u0eb2\3\2\2\2\u0ed0\u0ebb\3\2\2\2\u0ed0\u0ec4"+
		"\3\2\2\2\u0ed0\u0ecd\3\2\2\2\u0ed1\u00ff\3\2\2\2\u0ed2\u0ed6\5\u023e\u0120"+
		"\2\u0ed3\u0ed6\7\u01c2\2\2\u0ed4\u0ed6\7\u01c1\2\2\u0ed5\u0ed2\3\2\2\2"+
		"\u0ed5\u0ed3\3\2\2\2\u0ed5\u0ed4\3\2\2\2\u0ed6\u0101\3\2\2\2\u0ed7\u0ed8"+
		"\t\5\2\2\u0ed8\u0103\3\2\2\2\u0ed9\u0efb\7\22\2\2\u0eda\u0edc\5\f\7\2"+
		"\u0edb\u0eda\3\2\2\2\u0edc\u0edd\3\2\2\2\u0edd\u0edb\3\2\2\2\u0edd\u0ede"+
		"\3\2\2\2\u0ede\u0edf\3\2\2\2\u0edf\u0ee1\5\u0108\u0085\2\u0ee0\u0ee2\5"+
		"\f\7\2\u0ee1\u0ee0\3\2\2\2\u0ee2\u0ee3\3\2\2\2\u0ee3\u0ee1\3\2\2\2\u0ee3"+
		"\u0ee4\3\2\2\2\u0ee4\u0ee5\3\2\2\2\u0ee5\u0ee7\7\u0175\2\2\u0ee6\u0ee8"+
		"\5\f\7\2\u0ee7\u0ee6\3\2\2\2\u0ee8\u0ee9\3\2\2\2\u0ee9\u0ee7\3\2\2\2\u0ee9"+
		"\u0eea\3\2\2\2\u0eea\u0ef7\3\2\2\2\u0eeb\u0eed\7\u011d\2\2\u0eec\u0eee"+
		"\5\f\7\2\u0eed\u0eec\3\2\2\2\u0eee\u0eef\3\2\2\2\u0eef\u0eed\3\2\2\2\u0eef"+
		"\u0ef0\3\2\2\2\u0ef0\u0ef1\3\2\2\2\u0ef1\u0ef3\7\u0175\2\2\u0ef2\u0ef4"+
		"\5\f\7\2\u0ef3\u0ef2\3\2\2\2\u0ef4\u0ef5\3\2\2\2\u0ef5\u0ef3\3\2\2\2\u0ef5"+
		"\u0ef6\3\2\2\2\u0ef6\u0ef8\3\2\2\2\u0ef7\u0eeb\3\2\2\2\u0ef7\u0ef8\3\2"+
		"\2\2\u0ef8\u0ef9\3\2\2\2\u0ef9\u0efa\5\u0106\u0084\2\u0efa\u0efc\3\2\2"+
		"\2\u0efb\u0edb\3\2\2\2\u0efc\u0efd\3\2\2\2\u0efd\u0efb\3\2\2\2\u0efd\u0efe"+
		"\3\2\2\2\u0efe\u0105\3\2\2\2\u0eff\u0f00\7\u01c4\2\2\u0f00\u0107\3\2\2"+
		"\2\u0f01\u0f02\7\u01c4\2\2\u0f02\u0109\3\2\2\2\u0f03\u0f0b\7\b\2\2\u0f04"+
		"\u0f06\5\f\7\2\u0f05\u0f04\3\2\2\2\u0f06\u0f07\3\2\2\2\u0f07\u0f05\3\2"+
		"\2\2\u0f07\u0f08\3\2\2\2\u0f08\u0f09\3\2\2\2\u0f09\u0f0a\5\u010e\u0088"+
		"\2\u0f0a\u0f0c\3\2\2\2\u0f0b\u0f05\3\2\2\2\u0f0c\u0f0d\3\2\2\2\u0f0d\u0f0b"+
		"\3\2\2\2\u0f0d\u0f0e\3\2\2\2\u0f0e\u0f10\3\2\2\2\u0f0f\u0f11\5\f\7\2\u0f10"+
		"\u0f0f\3\2\2\2\u0f11\u0f12\3\2\2\2\u0f12\u0f10\3\2\2\2\u0f12\u0f13\3\2"+
		"\2\2\u0f13\u0f14\3\2\2\2\u0f14\u0f24\7\u0175\2\2\u0f15\u0f17\5\f\7\2\u0f16"+
		"\u0f15\3\2\2\2\u0f17\u0f18\3\2\2\2\u0f18\u0f16\3\2\2\2\u0f18\u0f19\3\2"+
		"\2\2\u0f19\u0f1a\3\2\2\2\u0f1a\u0f22\5\u02e8\u0175\2\u0f1b\u0f1d\5\f\7"+
		"\2\u0f1c\u0f1b\3\2\2\2\u0f1d\u0f1e\3\2\2\2\u0f1e\u0f1c\3\2\2\2\u0f1e\u0f1f"+
		"\3\2\2\2\u0f1f\u0f20\3\2\2\2\u0f20\u0f21\7\u0142\2\2\u0f21\u0f23\3\2\2"+
		"\2\u0f22\u0f1c\3\2\2\2\u0f22\u0f23\3\2\2\2\u0f23\u0f25\3\2\2\2\u0f24\u0f16"+
		"\3\2\2\2\u0f25\u0f26\3\2\2\2\u0f26\u0f24\3\2\2\2\u0f26\u0f27\3\2\2\2\u0f27"+
		"\u0f85\3\2\2\2\u0f28\u0f32\7\b\2\2\u0f29\u0f2b\5\f\7\2\u0f2a\u0f29\3\2"+
		"\2\2\u0f2b\u0f2c\3\2\2\2\u0f2c\u0f2a\3\2\2\2\u0f2c\u0f2d\3\2\2\2\u0f2d"+
		"\u0f2e\3\2\2\2\u0f2e\u0f2f\5\u010e\u0088\2\u0f2f\u0f31\3\2\2\2\u0f30\u0f2a"+
		"\3\2\2\2\u0f31\u0f34\3\2\2\2\u0f32\u0f30\3\2\2\2\u0f32\u0f33\3\2\2\2\u0f33"+
		"\u0f3c\3\2\2\2\u0f34\u0f32\3\2\2\2\u0f35\u0f37\5\f\7\2\u0f36\u0f35\3\2"+
		"\2\2\u0f37\u0f38\3\2\2\2\u0f38\u0f36\3\2\2\2\u0f38\u0f39\3\2\2\2\u0f39"+
		"\u0f3a\3\2\2\2\u0f3a\u0f3b\7\u0175\2\2\u0f3b\u0f3d\3\2\2\2\u0f3c\u0f36"+
		"\3\2\2\2\u0f3c\u0f3d\3\2\2\2\u0f3d\u0f45\3\2\2\2\u0f3e\u0f40\5\f\7\2\u0f3f"+
		"\u0f3e\3\2\2\2\u0f40\u0f41\3\2\2\2\u0f41\u0f3f\3\2\2\2\u0f41\u0f42\3\2"+
		"\2\2\u0f42\u0f43\3\2\2\2\u0f43\u0f44\5\u010e\u0088\2\u0f44\u0f46\3\2\2"+
		"\2\u0f45\u0f3f\3\2\2\2\u0f46\u0f47\3\2\2\2\u0f47\u0f45\3\2\2\2\u0f47\u0f48"+
		"\3\2\2\2\u0f48\u0f4a\3\2\2\2\u0f49\u0f4b\5\f\7\2\u0f4a\u0f49\3\2\2\2\u0f4b"+
		"\u0f4c\3\2\2\2\u0f4c\u0f4a\3\2\2\2\u0f4c\u0f4d\3\2\2\2\u0f4d\u0f4e\3\2"+
		"\2\2\u0f4e\u0f5e\7\u00bb\2\2\u0f4f\u0f51\5\f\7\2\u0f50\u0f4f\3\2\2\2\u0f51"+
		"\u0f52\3\2\2\2\u0f52\u0f50\3\2\2\2\u0f52\u0f53\3\2\2\2\u0f53\u0f54\3\2"+
		"\2\2\u0f54\u0f5c\5\u02e8\u0175\2\u0f55\u0f57\5\f\7\2\u0f56\u0f55\3\2\2"+
		"\2\u0f57\u0f58\3\2\2\2\u0f58\u0f56\3\2\2\2\u0f58\u0f59\3\2\2\2\u0f59\u0f5a"+
		"\3\2\2\2\u0f5a\u0f5b\7\u0142\2\2\u0f5b\u0f5d\3\2\2\2\u0f5c\u0f56\3\2\2"+
		"\2\u0f5c\u0f5d\3\2\2\2\u0f5d\u0f5f\3\2\2\2\u0f5e\u0f50\3\2\2\2\u0f5f\u0f60"+
		"\3\2\2\2\u0f60\u0f5e\3\2\2\2\u0f60\u0f61\3\2\2\2\u0f61\u0f85\3\2\2\2\u0f62"+
		"\u0f64\7\b\2\2\u0f63\u0f65\5\f\7\2\u0f64\u0f63\3\2\2\2\u0f65\u0f66\3\2"+
		"\2\2\u0f66\u0f64\3\2\2\2\u0f66\u0f67\3\2\2\2\u0f67\u0f68\3\2\2\2\u0f68"+
		"\u0f6a\t\17\2\2\u0f69\u0f6b\5\f\7\2\u0f6a\u0f69\3\2\2\2\u0f6b\u0f6c\3"+
		"\2\2\2\u0f6c\u0f6a\3\2\2\2\u0f6c\u0f6d\3\2\2\2\u0f6d\u0f6e\3\2\2\2\u0f6e"+
		"\u0f70\5\u010c\u0087\2\u0f6f\u0f71\5\f\7\2\u0f70\u0f6f\3\2\2\2\u0f71\u0f72"+
		"\3\2\2\2\u0f72\u0f70\3\2\2\2\u0f72\u0f73\3\2\2\2\u0f73\u0f74\3\2\2\2\u0f74"+
		"\u0f76\7\u0175\2\2\u0f75\u0f77\5\f\7\2\u0f76\u0f75\3\2\2\2\u0f77\u0f78"+
		"\3\2\2\2\u0f78\u0f76\3\2\2\2\u0f78\u0f79\3\2\2\2\u0f79\u0f7a\3\2\2\2\u0f7a"+
		"\u0f82\5\u010c\u0087\2\u0f7b\u0f7d\5\f\7\2\u0f7c\u0f7b\3\2\2\2\u0f7d\u0f7e"+
		"\3\2\2\2\u0f7e\u0f7c\3\2\2\2\u0f7e\u0f7f\3\2\2\2\u0f7f\u0f80\3\2\2\2\u0f80"+
		"\u0f81\7\u0142\2\2\u0f81\u0f83\3\2\2\2\u0f82\u0f7c\3\2\2\2\u0f82\u0f83"+
		"\3\2\2\2\u0f83\u0f85\3\2\2\2\u0f84\u0f03\3\2\2\2\u0f84\u0f28\3\2\2\2\u0f84"+
		"\u0f62\3\2\2\2\u0f85\u0f8d\3\2\2\2\u0f86\u0f88\5\f\7\2\u0f87\u0f86\3\2"+
		"\2\2\u0f88\u0f89\3\2\2\2\u0f89\u0f87\3\2\2\2\u0f89\u0f8a\3\2\2\2\u0f8a"+
		"\u0f8b\3\2\2\2\u0f8b\u0f8c\5\u0116\u008c\2\u0f8c\u0f8e\3\2\2\2\u0f8d\u0f87"+
		"\3\2\2\2\u0f8d\u0f8e\3\2\2\2\u0f8e\u0f96\3\2\2\2\u0f8f\u0f91\5\f\7\2\u0f90"+
		"\u0f8f\3\2\2\2\u0f91\u0f92\3\2\2\2\u0f92\u0f90\3\2\2\2\u0f92\u0f93\3\2"+
		"\2\2\u0f93\u0f94\3\2\2\2\u0f94\u0f95\7\u0083\2\2\u0f95\u0f97\3\2\2\2\u0f96"+
		"\u0f90\3\2\2\2\u0f96\u0f97\3\2\2\2\u0f97\u010b\3\2\2\2\u0f98\u0f99\5\u023e"+
		"\u0120\2\u0f99\u010d\3\2\2\2\u0f9a\u0f9d\7\u01c2\2\2\u0f9b\u0f9d\5\u02ea"+
		"\u0176\2\u0f9c\u0f9a\3\2\2\2\u0f9c\u0f9b\3\2\2\2\u0f9d\u010f\3\2\2\2\u0f9e"+
		"\u0fa5\5\u011e\u0090\2\u0f9f\u0fa5\5\u0120\u0091\2\u0fa0\u0fa5\5\u0122"+
		"\u0092\2\u0fa1\u0fa5\5\u0124\u0093\2\u0fa2\u0fa5\5\u0126\u0094\2\u0fa3"+
		"\u0fa5\5\u011a\u008e\2\u0fa4\u0f9e\3\2\2\2\u0fa4\u0f9f\3\2\2\2\u0fa4\u0fa0"+
		"\3\2\2\2\u0fa4\u0fa1\3\2\2\2\u0fa4\u0fa2\3\2\2\2\u0fa4\u0fa3\3\2\2\2\u0fa5"+
		"\u0111\3\2\2\2\u0fa6\u0fb4\5\u0146\u00a4\2\u0fa7\u0fa9\5\f\7\2\u0fa8\u0fa7"+
		"\3\2\2\2\u0fa9\u0faa\3\2\2\2\u0faa\u0fa8\3\2\2\2\u0faa\u0fab\3\2\2\2\u0fab"+
		"\u0fac\3\2\2\2\u0fac\u0fae\7\u00fa\2\2\u0fad\u0faf\5\f\7\2\u0fae\u0fad"+
		"\3\2\2\2\u0faf\u0fb0\3\2\2\2\u0fb0\u0fae\3\2\2\2\u0fb0\u0fb1\3\2\2\2\u0fb1"+
		"\u0fb2\3\2\2\2\u0fb2\u0fb3\5\u0146\u00a4\2\u0fb3\u0fb5\3\2\2\2\u0fb4\u0fa8"+
		"\3\2\2\2\u0fb4\u0fb5\3\2\2\2\u0fb5\u0fc7\3\2\2\2\u0fb6\u0fb8\7\u00fa\2"+
		"\2\u0fb7\u0fb9\5\f\7\2\u0fb8\u0fb7\3\2\2\2\u0fb9\u0fba\3\2\2\2\u0fba\u0fb8"+
		"\3\2\2\2\u0fba\u0fbb\3\2\2\2\u0fbb\u0fbc\3\2\2\2\u0fbc\u0fc4\5\u0146\u00a4"+
		"\2\u0fbd\u0fbf\5\f\7\2\u0fbe\u0fbd\3\2\2\2\u0fbf\u0fc0\3\2\2\2\u0fc0\u0fbe"+
		"\3\2\2\2\u0fc0\u0fc1\3\2\2\2\u0fc1\u0fc2\3\2\2\2\u0fc2\u0fc3\5\u0146\u00a4"+
		"\2\u0fc3\u0fc5\3\2\2\2\u0fc4\u0fbe\3\2\2\2\u0fc4\u0fc5\3\2\2\2\u0fc5\u0fc7"+
		"\3\2\2\2\u0fc6\u0fa6\3\2\2\2\u0fc6\u0fb6\3\2\2\2\u0fc7\u0113\3\2\2\2\u0fc8"+
		"\u0fd6\5\u0144\u00a3\2\u0fc9\u0fcb\5\f\7\2\u0fca\u0fc9\3\2\2\2\u0fcb\u0fcc"+
		"\3\2\2\2\u0fcc\u0fca\3\2\2\2\u0fcc\u0fcd\3\2\2\2\u0fcd\u0fce\3\2\2\2\u0fce"+
		"\u0fd0\7\u00fa\2\2\u0fcf\u0fd1\5\f\7\2\u0fd0\u0fcf\3\2\2\2\u0fd1\u0fd2"+
		"\3\2\2\2\u0fd2\u0fd0\3\2\2\2\u0fd2\u0fd3\3\2\2\2\u0fd3\u0fd4\3\2\2\2\u0fd4"+
		"\u0fd5\5\u0144\u00a3\2\u0fd5\u0fd7\3\2\2\2\u0fd6\u0fca\3\2\2\2\u0fd6\u0fd7"+
		"\3\2\2\2\u0fd7\u0fe9\3\2\2\2\u0fd8\u0fda\7\u00fa\2\2\u0fd9\u0fdb\5\f\7"+
		"\2\u0fda\u0fd9\3\2\2\2\u0fdb\u0fdc\3\2\2\2\u0fdc\u0fda\3\2\2\2\u0fdc\u0fdd"+
		"\3\2\2\2\u0fdd\u0fde\3\2\2\2\u0fde\u0fe6\5\u0144\u00a3\2\u0fdf\u0fe1\5"+
		"\f\7\2\u0fe0\u0fdf\3\2\2\2\u0fe1\u0fe2\3\2\2\2\u0fe2\u0fe0\3\2\2\2\u0fe2"+
		"\u0fe3\3\2\2\2\u0fe3\u0fe4\3\2\2\2\u0fe4\u0fe5\5\u0144\u00a3\2\u0fe5\u0fe7"+
		"\3\2\2\2\u0fe6\u0fe0\3\2\2\2\u0fe6\u0fe7\3\2\2\2\u0fe7\u0fe9\3\2\2\2\u0fe8"+
		"\u0fc8\3\2\2\2\u0fe8\u0fd8\3\2\2\2\u0fe9\u0115\3\2\2\2\u0fea\u0ff8\5\u0148"+
		"\u00a5\2\u0feb\u0fed\5\f\7\2\u0fec\u0feb\3\2\2\2\u0fed\u0fee\3\2\2\2\u0fee"+
		"\u0fec\3\2\2\2\u0fee\u0fef\3\2\2\2\u0fef\u0ff0\3\2\2\2\u0ff0\u0ff2\7\u00fa"+
		"\2\2\u0ff1\u0ff3\5\f\7\2\u0ff2\u0ff1\3\2\2\2\u0ff3\u0ff4\3\2\2\2\u0ff4"+
		"\u0ff2\3\2\2\2\u0ff4\u0ff5\3\2\2\2\u0ff5\u0ff6\3\2\2\2\u0ff6\u0ff7\5\u0148"+
		"\u00a5\2\u0ff7\u0ff9\3\2\2\2\u0ff8\u0fec\3\2\2\2\u0ff8\u0ff9\3\2\2\2\u0ff9"+
		"\u100b\3\2\2\2\u0ffa\u0ffc\7\u00fa\2\2\u0ffb\u0ffd\5\f\7\2\u0ffc\u0ffb"+
		"\3\2\2\2\u0ffd\u0ffe\3\2\2\2\u0ffe\u0ffc\3\2\2\2\u0ffe\u0fff\3\2\2\2\u0fff"+
		"\u1000\3\2\2\2\u1000\u1008\5\u0148\u00a5\2\u1001\u1003\5\f\7\2\u1002\u1001"+
		"\3\2\2\2\u1003\u1004\3\2\2\2\u1004\u1002\3\2\2\2\u1004\u1005\3\2\2\2\u1005"+
		"\u1006\3\2\2\2\u1006\u1007\5\u0148\u00a5\2\u1007\u1009\3\2\2\2\u1008\u1002"+
		"\3\2\2\2\u1008\u1009\3\2\2\2\u1009\u100b\3\2\2\2\u100a\u0fea\3\2\2\2\u100a"+
		"\u0ffa\3\2\2\2\u100b\u0117\3\2\2\2\u100c\u101a\5\u014a\u00a6\2\u100d\u100f"+
		"\5\f\7\2\u100e\u100d\3\2\2\2\u100f\u1010\3\2\2\2\u1010\u100e\3\2\2\2\u1010"+
		"\u1011\3\2\2\2\u1011\u1012\3\2\2\2\u1012\u1014\7\u00fa\2\2\u1013\u1015"+
		"\5\f\7\2\u1014\u1013\3\2\2\2\u1015\u1016\3\2\2\2\u1016\u1014\3\2\2\2\u1016"+
		"\u1017\3\2\2\2\u1017\u1018\3\2\2\2\u1018\u1019\5\u014a\u00a6\2\u1019\u101b"+
		"\3\2\2\2\u101a\u100e\3\2\2\2\u101a\u101b\3\2\2\2\u101b\u102d\3\2\2\2\u101c"+
		"\u101e\7\u00fa\2\2\u101d\u101f\5\f\7\2\u101e\u101d\3\2\2\2\u101f\u1020"+
		"\3\2\2\2\u1020\u101e\3\2\2\2\u1020\u1021\3\2\2\2\u1021\u1022\3\2\2\2\u1022"+
		"\u102a\5\u014a\u00a6\2\u1023\u1025\5\f\7\2\u1024\u1023\3\2\2\2\u1025\u1026"+
		"\3\2\2\2\u1026\u1024\3\2\2\2\u1026\u1027\3\2\2\2\u1027\u1028\3\2\2\2\u1028"+
		"\u1029\5\u014a\u00a6\2\u1029\u102b\3\2\2\2\u102a\u1024\3\2\2\2\u102a\u102b"+
		"\3\2\2\2\u102b\u102d\3\2\2\2\u102c\u100c\3\2\2\2\u102c\u101c\3\2\2\2\u102d"+
		"\u0119\3\2\2\2\u102e\u1030\7\6\2\2\u102f\u1031\5\f\7\2\u1030\u102f\3\2"+
		"\2\2\u1031\u1032\3\2\2\2\u1032\u1030\3\2\2\2\u1032\u1033\3\2\2\2\u1033"+
		"\u1034\3\2\2\2\u1034\u1036\5\u0140\u00a1\2\u1035\u1037\5\f\7\2\u1036\u1035"+
		"\3\2\2\2\u1037\u1038\3\2\2\2\u1038\u1036\3\2\2\2\u1038\u1039\3\2\2\2\u1039"+
		"\u1040\3\2\2\2\u103a\u103c\7\u00b7\2\2\u103b\u103d\5\f\7\2\u103c\u103b"+
		"\3\2\2\2\u103d\u103e\3\2\2\2\u103e\u103c\3\2\2\2\u103e\u103f\3\2\2\2\u103f"+
		"\u1041\3\2\2\2\u1040\u103a\3\2\2\2\u1040\u1041\3\2\2\2\u1041\u1042\3\2"+
		"\2\2\u1042\u104a\5\u011c\u008f\2\u1043\u1045\5\f\7\2\u1044\u1043\3\2\2"+
		"\2\u1045\u1046\3\2\2\2\u1046\u1044\3\2\2\2\u1046\u1047\3\2\2\2\u1047\u1048"+
		"\3\2\2\2\u1048\u1049\5\u0112\u008a\2\u1049\u104b\3\2\2\2\u104a\u1044\3"+
		"\2\2\2\u104a\u104b\3\2\2\2\u104b\u1053\3\2\2\2\u104c\u104e\5\f\7\2\u104d"+
		"\u104c\3\2\2\2\u104e\u104f\3\2\2\2\u104f\u104d\3\2\2\2\u104f\u1050\3\2"+
		"\2\2\u1050\u1051\3\2\2\2\u1051\u1052\7\u0082\2\2\u1052\u1054\3\2\2\2\u1053"+
		"\u104d\3\2\2\2\u1053\u1054\3\2\2\2\u1054\u011b\3\2\2\2\u1055\u1056\7\u01c4"+
		"\2\2\u1056\u011d\3\2\2\2\u1057\u1059\7\6\2\2\u1058\u105a\5\f\7\2\u1059"+
		"\u1058\3\2\2\2\u105a\u105b\3\2\2\2\u105b\u1059\3\2\2\2\u105b\u105c\3\2"+
		"\2\2\u105c\u105d\3\2\2\2\u105d\u106b\5\u0140\u00a1\2\u105e\u1060\5\f\7"+
		"\2\u105f\u105e\3\2\2\2\u1060\u1061\3\2\2\2\u1061\u105f\3\2\2\2\u1061\u1062"+
		"\3\2\2\2\u1062\u1063\3\2\2\2\u1063\u1065\7\u00b7\2\2\u1064\u1066\5\f\7"+
		"\2\u1065\u1064\3\2\2\2\u1066\u1067\3\2\2\2\u1067\u1065\3\2\2\2\u1067\u1068"+
		"\3\2\2\2\u1068\u1069\3\2\2\2\u1069\u106a\5\u0142\u00a2\2\u106a\u106c\3"+
		"\2\2\2\u106b\u105f\3\2\2\2\u106b\u106c\3\2\2\2\u106c\u107a\3\2\2\2\u106d"+
		"\u106f\5\f\7\2\u106e\u106d\3\2\2\2\u106f\u1070\3\2\2\2\u1070\u106e\3\2"+
		"\2\2\u1070\u1071\3\2\2\2\u1071\u1072\3\2\2\2\u1072\u1074\7\u018b\2\2\u1073"+
		"\u1075\5\f\7\2\u1074\u1073\3\2\2\2\u1075\u1076\3\2\2\2\u1076\u1074\3\2"+
		"\2\2\u1076\u1077\3\2\2\2\u1077\u1078\3\2\2\2\u1078\u1079\7\\\2\2\u1079"+
		"\u107b\3\2\2\2\u107a\u106e\3\2\2\2\u107a\u107b\3\2\2\2\u107b\u1083\3\2"+
		"\2\2\u107c\u107e\5\f\7\2\u107d\u107c\3\2\2\2\u107e\u107f\3\2\2\2\u107f"+
		"\u107d\3\2\2\2\u107f\u1080\3\2\2\2\u1080\u1081\3\2\2\2\u1081\u1082\5\u0114"+
		"\u008b\2\u1082\u1084\3\2\2\2\u1083\u107d\3\2\2\2\u1083\u1084\3\2\2\2\u1084"+
		"\u108c\3\2\2\2\u1085\u1087\5\f\7\2\u1086\u1085\3\2\2\2\u1087\u1088\3\2"+
		"\2\2\u1088\u1086\3\2\2\2\u1088\u1089\3\2\2\2\u1089\u108a\3\2\2\2\u108a"+
		"\u108b\7\u0082\2\2\u108b\u108d\3\2\2\2\u108c\u1086\3\2\2\2\u108c\u108d"+
		"\3\2\2\2\u108d\u011f\3\2\2\2\u108e\u1090\7\6\2\2\u108f\u1091\5\f\7\2\u1090"+
		"\u108f\3\2\2\2\u1091\u1092\3\2\2\2\u1092\u1090\3\2\2\2\u1092\u1093\3\2"+
		"\2\2\u1093\u1094\3\2\2\2\u1094\u1096\5\u0140\u00a1\2\u1095\u1097\5\f\7"+
		"\2\u1096\u1095\3\2\2\2\u1097\u1098\3\2\2\2\u1098\u1096\3\2\2\2\u1098\u1099"+
		"\3\2\2\2\u1099\u109a\3\2\2\2\u109a\u109c\7\u00b7\2\2\u109b\u109d\5\f\7"+
		"\2\u109c\u109b\3\2\2\2\u109d\u109e\3\2\2\2\u109e\u109c\3\2\2\2\u109e\u109f"+
		"\3\2\2\2\u109f\u10a0\3\2\2\2\u10a0\u10a1\5\u013e\u00a0\2\u10a1\u0121\3"+
		"\2\2\2\u10a2\u10a4\7\6\2\2\u10a3\u10a5\5\f\7\2\u10a4\u10a3\3\2\2\2\u10a5"+
		"\u10a6\3\2\2\2\u10a6\u10a4\3\2\2\2\u10a6\u10a7\3\2\2\2\u10a7\u10a8\3\2"+
		"\2\2\u10a8\u10b0\5\u0140\u00a1\2\u10a9\u10ab\5\f\7\2\u10aa\u10a9\3\2\2"+
		"\2\u10ab\u10ac\3\2\2\2\u10ac\u10aa\3\2\2\2\u10ac\u10ad\3\2\2\2\u10ad\u10ae"+
		"\3\2\2\2\u10ae\u10af\5\u0130\u0099\2\u10af\u10b1\3\2\2\2\u10b0\u10aa\3"+
		"\2\2\2\u10b1\u10b2\3\2\2\2\u10b2\u10b0\3\2\2\2\u10b2\u10b3\3\2\2\2\u10b3"+
		"\u10bd\3\2\2\2\u10b4\u10b6\5\f\7\2\u10b5\u10b4\3\2\2\2\u10b6\u10b7\3\2"+
		"\2\2\u10b7\u10b5\3\2\2\2\u10b7\u10b8\3\2\2\2\u10b8\u10bb\3\2\2\2\u10b9"+
		"\u10bc\5\u0112\u008a\2\u10ba\u10bc\5\u0114\u008b\2\u10bb\u10b9\3\2\2\2"+
		"\u10bb\u10ba\3\2\2\2\u10bc\u10be\3\2\2\2\u10bd\u10b5\3\2\2\2\u10bd\u10be"+
		"\3\2\2\2\u10be\u10c6\3\2\2\2\u10bf\u10c1\5\f\7\2\u10c0\u10bf\3\2\2\2\u10c1"+
		"\u10c2\3\2\2\2\u10c2\u10c0\3\2\2\2\u10c2\u10c3\3\2\2\2\u10c3\u10c4\3\2"+
		"\2\2\u10c4\u10c5\7\u0082\2\2\u10c5\u10c7\3\2\2\2\u10c6\u10c0\3\2\2\2\u10c6"+
		"\u10c7\3\2\2\2\u10c7\u0123\3\2\2\2\u10c8\u10ca\7\6\2\2\u10c9\u10cb\5\f"+
		"\7\2\u10ca\u10c9\3\2\2\2\u10cb\u10cc\3\2\2\2\u10cc\u10ca\3\2\2\2\u10cc"+
		"\u10cd\3\2\2\2\u10cd\u10d4\3\2\2\2\u10ce\u10d0\7Z\2\2\u10cf\u10d1\5\f"+
		"\7\2\u10d0\u10cf\3\2\2\2\u10d1\u10d2\3\2\2\2\u10d2\u10d0\3\2\2\2\u10d2"+
		"\u10d3\3\2\2\2\u10d3\u10d5\3\2\2\2\u10d4\u10ce\3\2\2\2\u10d4\u10d5\3\2"+
		"\2\2\u10d5\u10d6\3\2\2\2\u10d6\u10d8\7\u00db\2\2\u10d7\u10d9\5\f\7\2\u10d8"+
		"\u10d7\3\2\2\2\u10d9\u10da\3\2\2\2\u10da\u10d8\3\2\2\2\u10da\u10db\3\2"+
		"\2\2\u10db\u10e2\3\2\2\2\u10dc\u10de\7\u00c9\2\2\u10dd\u10df\5\f\7\2\u10de"+
		"\u10dd\3\2\2\2\u10df\u10e0\3\2\2\2\u10e0\u10de\3\2\2\2\u10e0\u10e1\3\2"+
		"\2\2\u10e1\u10e3\3\2\2\2\u10e2\u10dc\3\2\2\2\u10e2\u10e3\3\2\2\2\u10e3"+
		"\u10e4\3\2\2\2\u10e4\u10ec\5\u0132\u009a\2\u10e5\u10e7\5\f\7\2\u10e6\u10e5"+
		"\3\2\2\2\u10e7\u10e8\3\2\2\2\u10e8\u10e6\3\2\2\2\u10e8\u10e9\3\2\2\2\u10e9"+
		"\u10ea\3\2\2\2\u10ea\u10eb\5\u012e\u0098\2\u10eb\u10ed\3\2\2\2\u10ec\u10e6"+
		"\3\2\2\2\u10ed\u10ee\3\2\2\2\u10ee\u10ec\3\2\2\2\u10ee\u10ef\3\2\2\2\u10ef"+
		"\u10f9\3\2\2\2\u10f0\u10f2\5\f\7\2\u10f1\u10f0\3\2\2\2\u10f2\u10f3\3\2"+
		"\2\2\u10f3\u10f1\3\2\2\2\u10f3\u10f4\3\2\2\2\u10f4\u10f7\3\2\2\2\u10f5"+
		"\u10f8\5\u0112\u008a\2\u10f6\u10f8\5\u0114\u008b\2\u10f7\u10f5\3\2\2\2"+
		"\u10f7\u10f6\3\2\2\2\u10f8\u10fa\3\2\2\2\u10f9\u10f1\3\2\2\2\u10f9\u10fa"+
		"\3\2\2\2\u10fa\u1102\3\2\2\2\u10fb\u10fd\5\f\7\2\u10fc\u10fb\3\2\2\2\u10fd"+
		"\u10fe\3\2\2\2\u10fe\u10fc\3\2\2\2\u10fe\u10ff\3\2\2\2\u10ff\u1100\3\2"+
		"\2\2\u1100\u1101\7\u0082\2\2\u1101\u1103\3\2\2\2\u1102\u10fc\3\2\2\2\u1102"+
		"\u1103\3\2\2\2\u1103\u0125\3\2\2\2\u1104\u1106\7\6\2\2\u1105\u1107\5\f"+
		"\7\2\u1106\u1105\3\2\2\2\u1107\u1108\3\2\2\2\u1108\u1106\3\2\2\2\u1108"+
		"\u1109\3\2\2\2\u1109\u110a\3\2\2\2\u110a\u1112\5\u01f0\u00f9\2\u110b\u110d"+
		"\5\f\7\2\u110c\u110b\3\2\2\2\u110d\u110e\3\2\2\2\u110e\u110c\3\2\2\2\u110e"+
		"\u110f\3\2\2\2\u110f\u1110\3\2\2\2\u1110\u1111\5\u0128\u0095\2\u1111\u1113"+
		"\3\2\2\2\u1112\u110c\3\2\2\2\u1112\u1113\3\2\2\2\u1113\u111b\3\2\2\2\u1114"+
		"\u1116\5\f\7\2\u1115\u1114\3\2\2\2\u1116\u1117\3\2\2\2\u1117\u1115\3\2"+
		"\2\2\u1117\u1118\3\2\2\2\u1118\u1119\3\2\2\2\u1119\u111a\5\u0112\u008a"+
		"\2\u111a\u111c\3\2\2\2\u111b\u1115\3\2\2\2\u111b\u111c\3\2\2\2\u111c\u1124"+
		"\3\2\2\2\u111d\u111f\5\f\7\2\u111e\u111d\3\2\2\2\u111f\u1120\3\2\2\2\u1120"+
		"\u111e\3\2\2\2\u1120\u1121\3\2\2\2\u1121\u1122\3\2\2\2\u1122\u1123\7\u0082"+
		"\2\2\u1123\u1125\3\2\2\2\u1124\u111e\3\2\2\2\u1124\u1125\3\2\2\2\u1125"+
		"\u0127\3\2\2\2\u1126\u1128\7\37\2\2\u1127\u1129\5\f\7\2\u1128\u1127\3"+
		"\2\2\2\u1129\u112a\3\2\2\2\u112a\u1128\3\2\2\2\u112a\u112b\3\2\2\2\u112b"+
		"\u112d\3\2\2\2\u112c\u1126\3\2\2\2\u112c\u112d\3\2\2\2\u112d\u1142\3\2"+
		"\2\2\u112e\u1136\5\u012a\u0096\2\u112f\u1131\5\f\7\2\u1130\u112f\3\2\2"+
		"\2\u1131\u1132\3\2\2\2\u1132\u1130\3\2\2\2\u1132\u1133\3\2\2\2\u1133\u1134"+
		"\3\2\2\2\u1134\u1135\5\u012c\u0097\2\u1135\u1137\3\2\2\2\u1136\u1130\3"+
		"\2\2\2\u1136\u1137\3\2\2\2\u1137\u1143\3\2\2\2\u1138\u1140\5\u012c\u0097"+
		"\2\u1139\u113b\5\f\7\2\u113a\u1139\3\2\2\2\u113b\u113c\3\2\2\2\u113c\u113a"+
		"\3\2\2\2\u113c\u113d\3\2\2\2\u113d\u113e\3\2\2\2\u113e\u113f\5\u012a\u0096"+
		"\2\u113f\u1141\3\2\2\2\u1140\u113a\3\2\2\2\u1140\u1141\3\2\2\2\u1141\u1143"+
		"\3\2\2\2\u1142\u112e\3\2\2\2\u1142\u1138\3\2\2\2\u1143\u0129\3\2\2\2\u1144"+
		"\u1146\7\u00e4\2\2\u1145\u1147\5\f\7\2\u1146\u1145\3\2\2\2\u1147\u1148"+
		"\3\2\2\2\u1148\u1146\3\2\2\2\u1148\u1149\3\2\2\2\u1149\u1150\3\2\2\2\u114a"+
		"\u114c\7\u00fb\2\2\u114b\u114d\5\f\7\2\u114c\u114b\3\2\2\2\u114d\u114e"+
		"\3\2\2\2\u114e\u114c\3\2\2\2\u114e\u114f\3\2\2\2\u114f\u1151\3\2\2\2\u1150"+
		"\u114a\3\2\2\2\u1150\u1151\3\2\2\2\u1151\u1154\3\2\2\2\u1152\u1155\7\u01c2"+
		"\2\2\u1153\u1155\5\u023e\u0120\2\u1154\u1152\3\2\2\2\u1154\u1153\3\2\2"+
		"\2\u1155\u012b\3\2\2\2\u1156\u1158\7A\2\2\u1157\u1159\5\f\7\2\u1158\u1157"+
		"\3\2\2\2\u1159\u115a\3\2\2\2\u115a\u1158\3\2\2\2\u115a\u115b\3\2\2\2\u115b"+
		"\u1162\3\2\2\2\u115c\u115e\7\u00fb\2\2\u115d\u115f\5\f\7\2\u115e\u115d"+
		"\3\2\2\2\u115f\u1160\3\2\2\2\u1160\u115e\3\2\2\2\u1160\u1161\3\2\2\2\u1161"+
		"\u1163\3\2\2\2\u1162\u115c\3\2\2\2\u1162\u1163\3\2\2\2\u1163\u1166\3\2"+
		"\2\2\u1164\u1167\7\u01c2\2\2\u1165\u1167\5\u023e\u0120\2\u1166\u1164\3"+
		"\2\2\2\u1166\u1165\3\2\2\2\u1167\u012d\3\2\2\2\u1168\u116a\7\u00b7\2\2"+
		"\u1169\u116b\5\f\7\2\u116a\u1169\3\2\2\2\u116b\u116c\3\2\2\2\u116c\u116a"+
		"\3\2\2\2\u116c\u116d\3\2\2\2\u116d\u116f\3\2\2\2\u116e\u1168\3\2\2\2\u116e"+
		"\u116f\3\2\2\2\u116f\u1170\3\2\2\2\u1170\u1178\7\u00e4\2\2\u1171\u1173"+
		"\5\f\7\2\u1172\u1171\3\2\2\2\u1173\u1174\3\2\2\2\u1174\u1172\3\2\2\2\u1174"+
		"\u1175\3\2\2\2\u1175\u1176\3\2\2\2\u1176\u1177\7\u00fb\2\2\u1177\u1179"+
		"\3\2\2\2\u1178\u1172\3\2\2\2\u1178\u1179\3\2\2\2\u1179\u117b\3\2\2\2\u117a"+
		"\u117c\5\f\7\2\u117b\u117a\3\2\2\2\u117c\u117d\3\2\2\2\u117d\u117b\3\2"+
		"\2\2\u117d\u117e\3\2\2\2\u117e\u117f\3\2\2\2\u117f\u1180\5\u013c\u009f"+
		"\2\u1180\u11c5\3\2\2\2\u1181\u1183\7\u00b7\2\2\u1182\u1184\5\f\7\2\u1183"+
		"\u1182\3\2\2\2\u1184\u1185\3\2\2\2\u1185\u1183\3\2\2\2\u1185\u1186\3\2"+
		"\2\2\u1186\u1188\3\2\2\2\u1187\u1181\3\2\2\2\u1187\u1188\3\2\2\2\u1188"+
		"\u1189\3\2\2\2\u1189\u1191\7A\2\2\u118a\u118c\5\f\7\2\u118b\u118a\3\2"+
		"\2\2\u118c\u118d\3\2\2\2\u118d\u118b\3\2\2\2\u118d\u118e\3\2\2\2\u118e"+
		"\u118f\3\2\2\2\u118f\u1190\7\u00fb\2\2\u1190\u1192\3\2\2\2\u1191\u118b"+
		"\3\2\2\2\u1191\u1192\3\2\2\2\u1192\u1194\3\2\2\2\u1193\u1195\5\f\7\2\u1194"+
		"\u1193\3\2\2\2\u1195\u1196\3\2\2\2\u1196\u1194\3\2\2\2\u1196\u1197\3\2"+
		"\2\2\u1197\u1198\3\2\2\2\u1198\u1199\5\u013c\u009f\2\u1199\u11c5\3\2\2"+
		"\2\u119a\u11b2\7\u009d\2\2\u119b\u119d\5\f\7\2\u119c\u119b\3\2\2\2\u119d"+
		"\u119e\3\2\2\2\u119e\u119c\3\2\2\2\u119e\u119f\3\2\2\2\u119f\u11a6\3\2"+
		"\2\2\u11a0\u11a2\7\u0175\2\2\u11a1\u11a3\5\f\7\2\u11a2\u11a1\3\2\2\2\u11a3"+
		"\u11a4\3\2\2\2\u11a4\u11a2\3\2\2\2\u11a4\u11a5\3\2\2\2\u11a5\u11a7\3\2"+
		"\2\2\u11a6\u11a0\3\2\2\2\u11a6\u11a7\3\2\2\2\u11a7\u11a8\3\2\2\2\u11a8"+
		"\u11b0\7\u0081\2\2\u11a9\u11ab\5\f\7\2\u11aa\u11a9\3\2\2\2\u11ab\u11ac"+
		"\3\2\2\2\u11ac\u11aa\3\2\2\2\u11ac\u11ad\3\2\2\2\u11ad\u11ae\3\2\2\2\u11ae"+
		"\u11af\7\u00ff\2\2\u11af\u11b1\3\2\2\2\u11b0\u11aa\3\2\2\2\u11b0\u11b1"+
		"\3\2\2\2\u11b1\u11b3\3\2\2\2\u11b2\u119c\3\2\2\2\u11b2\u11b3\3\2\2\2\u11b3"+
		"\u11b5\3\2\2\2\u11b4\u11b6\5\f\7\2\u11b5\u11b4\3\2\2\2\u11b6\u11b7\3\2"+
		"\2\2\u11b7\u11b5\3\2\2\2\u11b7\u11b8\3\2\2\2\u11b8\u11b9\3\2\2\2\u11b9"+
		"\u11ba\t\21\2\2\u11ba\u11c5\3\2\2\2\u11bb\u11bd\7\u018b\2\2\u11bc\u11be"+
		"\5\f\7\2\u11bd\u11bc\3\2\2\2\u11be\u11bf\3\2\2\2\u11bf\u11bd\3\2\2\2\u11bf"+
		"\u11c0\3\2\2\2\u11c0\u11c2\3\2\2\2\u11c1\u11bb\3\2\2\2\u11c1\u11c2\3\2"+
		"\2\2\u11c2\u11c3\3\2\2\2\u11c3\u11c5\7&\2\2\u11c4\u116e\3\2\2\2\u11c4"+
		"\u1187\3\2\2\2\u11c4\u119a\3\2\2\2\u11c4\u11c1\3\2\2\2\u11c5\u012f\3\2"+
		"\2\2\u11c6\u1220\5\u012e\u0098\2\u11c7\u1220\7\u017b\2\2\u11c8\u1220\7"+
		"\60\2\2\u11c9\u11cb\7\u018b\2\2\u11ca\u11cc\5\f\7\2\u11cb\u11ca\3\2\2"+
		"\2\u11cc\u11cd\3\2\2\2\u11cd\u11cb\3\2\2\2\u11cd\u11ce\3\2\2\2\u11ce\u11d0"+
		"\3\2\2\2\u11cf\u11c9\3\2\2\2\u11cf\u11d0\3\2\2\2\u11d0\u11d1\3\2\2\2\u11d1"+
		"\u1220\7.\2\2\u11d2\u11da\7\u0120\2\2\u11d3\u11d5\5\f\7\2\u11d4\u11d3"+
		"\3\2\2\2\u11d5\u11d6\3\2\2\2\u11d6\u11d4\3\2\2\2\u11d6\u11d7\3\2\2\2\u11d7"+
		"\u11d8\3\2\2\2\u11d8\u11d9\5\u0136\u009c\2\u11d9\u11db\3\2\2\2\u11da\u11d4"+
		"\3\2\2\2\u11da\u11db\3\2\2\2\u11db\u1220\3\2\2\2\u11dc\u11de\7\u018b\2"+
		"\2\u11dd\u11df\5\f\7\2\u11de\u11dd\3\2\2\2\u11df\u11e0\3\2\2\2\u11e0\u11de"+
		"\3\2\2\2\u11e0\u11e1\3\2\2\2\u11e1\u11e3\3\2\2\2\u11e2\u11dc\3\2\2\2\u11e2"+
		"\u11e3\3\2\2\2\u11e3\u11e4\3\2\2\2\u11e4\u1220\7\\\2\2\u11e5\u1220\7\u013a"+
		"\2\2\u11e6\u11e8\7\u018b\2\2\u11e7\u11e9\5\f\7\2\u11e8\u11e7\3\2\2\2\u11e9"+
		"\u11ea\3\2\2\2\u11ea\u11e8\3\2\2\2\u11ea\u11eb\3\2\2\2\u11eb\u11ed\3\2"+
		"\2\2\u11ec\u11e6\3\2\2\2\u11ec\u11ed\3\2\2\2\u11ed\u11ee\3\2\2\2\u11ee"+
		"\u11f0\7\u00f9\2\2\u11ef\u11f1\5\f\7\2\u11f0\u11ef\3\2\2\2\u11f1\u11f2"+
		"\3\2\2\2\u11f2\u11f0\3\2\2\2\u11f2\u11f3\3\2\2\2\u11f3\u11f4\3\2\2\2\u11f4"+
		"\u11f5\7\177\2\2\u11f5\u1220\3\2\2\2\u11f6\u11f8\7o\2\2\u11f7\u11f9\5"+
		"\f\7\2\u11f8\u11f7\3\2\2\2\u11f9\u11fa\3\2\2\2\u11fa\u11f8\3\2\2\2\u11fa"+
		"\u11fb\3\2\2\2\u11fb\u1202\3\2\2\2\u11fc\u11fe\7\u00d6\2\2\u11fd\u11ff"+
		"\5\f\7\2\u11fe\u11fd\3\2\2\2\u11ff\u1200\3\2\2\2\u1200\u11fe\3\2\2\2\u1200"+
		"\u1201\3\2\2\2\u1201\u1203\3\2\2\2\u1202\u11fc\3\2\2\2\u1202\u1203\3\2"+
		"\2\2\u1203\u1204\3\2\2\2\u1204\u1205\5\u0134\u009b\2\u1205\u1220\3\2\2"+
		"\2\u1206\u1208\7Z\2\2\u1207\u1209\5\f\7\2\u1208\u1207\3\2\2\2\u1209\u120a"+
		"\3\2\2\2\u120a\u1208\3\2\2\2\u120a\u120b\3\2\2\2\u120b\u120d\3\2\2\2\u120c"+
		"\u1206\3\2\2\2\u120c\u120d\3\2\2\2\u120d\u120e\3\2\2\2\u120e\u1216\7\u00db"+
		"\2\2\u120f\u1211\5\f\7\2\u1210\u120f\3\2\2\2\u1211\u1212\3\2\2\2\u1212"+
		"\u1210\3\2\2\2\u1212\u1213\3\2\2\2\u1213\u1214\3\2\2\2\u1214\u1215\7\u00c9"+
		"\2\2\u1215\u1217\3\2\2\2\u1216\u1210\3\2\2\2\u1216\u1217\3\2\2\2\u1217"+
		"\u1219\3\2\2\2\u1218\u121a\5\f\7\2\u1219\u1218\3\2\2\2\u121a\u121b\3\2"+
		"\2\2\u121b\u1219\3\2\2\2\u121b\u121c\3\2\2\2\u121c\u121d\3\2\2\2\u121d"+
		"\u121e\5\u0132\u009a\2\u121e\u1220\3\2\2\2\u121f\u11c6\3\2\2\2\u121f\u11c7"+
		"\3\2\2\2\u121f\u11c8\3\2\2\2\u121f\u11cf\3\2\2\2\u121f\u11d2\3\2\2\2\u121f"+
		"\u11e2\3\2\2\2\u121f\u11e5\3\2\2\2\u121f\u11ec\3\2\2\2\u121f\u11f6\3\2"+
		"\2\2\u121f\u120c\3\2\2\2\u1220\u0131\3\2\2\2\u1221\u1222\5\u023e\u0120"+
		"\2\u1222\u0133\3\2\2\2\u1223\u1231\5\n\6\2\u1224\u1231\7\u01c1\2\2\u1225"+
		"\u1231\5\u023e\u0120\2\u1226\u122e\7c\2\2\u1227\u1229\5\f\7\2\u1228\u1227"+
		"\3\2\2\2\u1229\u122a\3\2\2\2\u122a\u1228\3\2\2\2\u122a\u122b\3\2\2\2\u122b"+
		"\u122c\3\2\2\2\u122c\u122d\7\u0185\2\2\u122d\u122f\3\2\2\2\u122e\u1228"+
		"\3\2\2\2\u122e\u122f\3\2\2\2\u122f\u1231\3\2\2\2\u1230\u1223\3\2\2\2\u1230"+
		"\u1224\3\2\2\2\u1230\u1225\3\2\2\2\u1230\u1226\3\2\2\2\u1231\u0135\3\2"+
		"\2\2\u1232\u1234\7\u0152\2\2\u1233\u1235\5\f\7\2\u1234\u1233\3\2\2\2\u1235"+
		"\u1236\3\2\2\2\u1236\u1234\3\2\2\2\u1236\u1237\3\2\2\2\u1237\u1238\3\2"+
		"\2\2\u1238\u1239\5\u013a\u009e\2\u1239\u126d\3\2\2\2\u123a\u123c\7\u018b"+
		"\2\2\u123b\u123d\5\f\7\2\u123c\u123b\3\2\2\2\u123d\u123e\3\2\2\2\u123e"+
		"\u123c\3\2\2\2\u123e\u123f\3\2\2\2\u123f\u1241\3\2\2\2\u1240\u123a\3\2"+
		"\2\2\u1240\u1241\3\2\2\2\u1241\u1242\3\2\2\2\u1242\u126d\7#\2\2\u1243"+
		"\u1245\7\u018b\2\2\u1244\u1246\5\f\7\2\u1245\u1244\3\2\2\2\u1246\u1247"+
		"\3\2\2\2\u1247\u1245\3\2\2\2\u1247\u1248\3\2\2\2\u1248\u124a\3\2\2\2\u1249"+
		"\u1243\3\2\2\2\u1249\u124a\3\2\2\2\u124a\u124b\3\2\2\2\u124b\u124d\7\u00f9"+
		"\2\2\u124c\u124e\5\f\7\2\u124d\u124c\3\2\2\2\u124e\u124f\3\2\2\2\u124f"+
		"\u124d\3\2\2\2\u124f\u1250\3\2\2\2\u1250\u1251\3\2\2\2\u1251\u1252\7,"+
		"\2\2\u1252\u126d\3\2\2\2\u1253\u1255\7\u018b\2\2\u1254\u1256\5\f\7\2\u1255"+
		"\u1254\3\2\2\2\u1256\u1257\3\2\2\2\u1257\u1255\3\2\2\2\u1257\u1258\3\2"+
		"\2\2\u1258\u125a\3\2\2\2\u1259\u1253\3\2\2\2\u1259\u125a\3\2\2\2\u125a"+
		"\u125b\3\2\2\2\u125b\u126d\7\u0080\2\2\u125c\u125e\7\u018b\2\2\u125d\u125f"+
		"\5\f\7\2\u125e\u125d\3\2\2\2\u125f\u1260\3\2\2\2\u1260\u125e\3\2\2\2\u1260"+
		"\u1261\3\2\2\2\u1261\u1263\3\2\2\2\u1262\u125c\3\2\2\2\u1262\u1263\3\2"+
		"\2\2\u1263\u1264\3\2\2\2\u1264\u1266\7\u00ad\2\2\u1265\u1267\5\f\7\2\u1266"+
		"\u1265\3\2\2\2\u1267\u1268\3\2\2\2\u1268\u1266\3\2\2\2\u1268\u1269\3\2"+
		"\2\2\u1269\u126a\3\2\2\2\u126a\u126b\5\u0138\u009d\2\u126b\u126d\3\2\2"+
		"\2\u126c\u1232\3\2\2\2\u126c\u1240\3\2\2\2\u126c\u1249\3\2\2\2\u126c\u1259"+
		"\3\2\2\2\u126c\u1262\3\2\2\2\u126d\u0137\3\2\2\2\u126e\u126f\7\u01c1\2"+
		"\2\u126f\u0139\3\2\2\2\u1270\u1273\7\u01c2\2\2\u1271\u1273\5\u023e\u0120"+
		"\2\u1272\u1270\3\2\2\2\u1272\u1271\3\2\2\2\u1273\u013b\3\2\2\2\u1274\u1292"+
		"\5\u01aa\u00d6\2\u1275\u1285\5\u023e\u0120\2\u1276\u1278\5\f\7\2\u1277"+
		"\u1276\3\2\2\2\u1278\u1279\3\2\2\2\u1279\u1277\3\2\2\2\u1279\u127a\3\2"+
		"\2\2\u127a\u127b\3\2\2\2\u127b\u1283\7\u0114\2\2\u127c\u127e\5\f\7\2\u127d"+
		"\u127c\3\2\2\2\u127e\u127f\3\2\2\2\u127f\u127d\3\2\2\2\u127f\u1280\3\2"+
		"\2\2\u1280\u1281\3\2\2\2\u1281\u1282\5\u01aa\u00d6\2\u1282\u1284\3\2\2"+
		"\2\u1283\u127d\3\2\2\2\u1283\u1284\3\2\2\2\u1284\u1286\3\2\2\2\u1285\u1277"+
		"\3\2\2\2\u1285\u1286\3\2\2\2\u1286\u1292\3\2\2\2\u1287\u128f\7\u0114\2"+
		"\2\u1288\u128a\5\f\7\2\u1289\u1288\3\2\2\2\u128a\u128b\3\2\2\2\u128b\u1289"+
		"\3\2\2\2\u128b\u128c\3\2\2\2\u128c\u128d\3\2\2\2\u128d\u128e\5\u01aa\u00d6"+
		"\2\u128e\u1290\3\2\2\2\u128f\u1289\3\2\2\2\u128f\u1290\3\2\2\2\u1290\u1292"+
		"\3\2\2\2\u1291\u1274\3\2\2\2\u1291\u1275\3\2\2\2\u1291\u1287\3\2\2\2\u1292"+
		"\u013d\3\2\2\2\u1293\u129b\7f\2\2\u1294\u1296\5\f\7\2\u1295\u1294\3\2"+
		"\2\2\u1296\u1297\3\2\2\2\u1297\u1295\3\2\2\2\u1297\u1298\3\2\2\2\u1298"+
		"\u1299\3\2\2\2\u1299\u129a\7\u0190\2\2\u129a\u129c\3\2\2\2\u129b\u1295"+
		"\3\2\2\2\u129b\u129c\3\2\2\2\u129c\u12aa\3\2\2\2\u129d\u12a5\7i\2\2\u129e"+
		"\u12a0\5\f\7\2\u129f\u129e\3\2\2\2\u12a0\u12a1\3\2\2\2\u12a1\u129f\3\2"+
		"\2\2\u12a1\u12a2\3\2\2\2\u12a2\u12a3\3\2\2\2\u12a3\u12a4\7\u018f\2\2\u12a4"+
		"\u12a6\3\2\2\2\u12a5\u129f\3\2\2\2\u12a5\u12a6\3\2\2\2\u12a6\u12aa\3\2"+
		"\2\2\u12a7\u12aa\7j\2\2\u12a8\u12aa\7\u0173\2\2\u12a9\u1293\3\2\2\2\u12a9"+
		"\u129d\3\2\2\2\u12a9\u12a7\3\2\2\2\u12a9\u12a8\3\2\2\2\u12aa\u013f\3\2"+
		"\2\2\u12ab\u12ac\5\u02e8\u0175\2\u12ac\u0141\3\2\2\2\u12ad\u12ae\7\u01c4"+
		"\2\2\u12ae\u0143\3\2\2\2\u12af\u12b1\7\37\2\2\u12b0\u12b2\5\f\7\2\u12b1"+
		"\u12b0\3\2\2\2\u12b2\u12b3\3\2\2\2\u12b3\u12b1\3\2\2\2\u12b3\u12b4\3\2"+
		"\2\2\u12b4\u12b6\3\2\2\2\u12b5\u12af\3\2\2\2\u12b5\u12b6\3\2\2\2\u12b6"+
		"\u12b7\3\2\2\2\u12b7\u12bf\7\u0081\2\2\u12b8\u12ba\5\f\7\2\u12b9\u12b8"+
		"\3\2\2\2\u12ba\u12bb\3\2\2\2\u12bb\u12b9\3\2\2\2\u12bb\u12bc\3\2\2\2\u12bc"+
		"\u12bd\3\2\2\2\u12bd\u12be\5$\23\2\u12be\u12c0\3\2\2\2\u12bf\u12b9\3\2"+
		"\2\2\u12bf\u12c0\3\2\2\2\u12c0\u0145\3\2\2\2\u12c1\u12c3\7\u0102\2\2\u12c2"+
		"\u12c4\5\f\7\2\u12c3\u12c2\3\2\2\2\u12c4\u12c5\3\2\2\2\u12c5\u12c3\3\2"+
		"\2\2\u12c5\u12c6\3\2\2\2\u12c6\u12c8\3\2\2\2\u12c7\u12c1\3\2\2\2\u12c7"+
		"\u12c8\3\2\2\2\u12c8\u12c9\3\2\2\2\u12c9\u12d1\7\u00a1\2\2\u12ca\u12cc"+
		"\5\f\7\2\u12cb\u12ca\3\2\2\2\u12cc\u12cd\3\2\2\2\u12cd\u12cb\3\2\2\2\u12cd"+
		"\u12ce\3\2\2\2\u12ce\u12cf\3\2\2\2\u12cf\u12d0\5$\23\2\u12d0\u12d2\3\2"+
		"\2\2\u12d1\u12cb\3\2\2\2\u12d1\u12d2\3\2\2\2\u12d2\u0147\3\2\2\2\u12d3"+
		"\u12d5\7\u0102\2\2\u12d4\u12d6\5\f\7\2\u12d5\u12d4\3\2\2\2\u12d6\u12d7"+
		"\3\2\2\2\u12d7\u12d5\3\2\2\2\u12d7\u12d8\3\2\2\2\u12d8\u12da\3\2\2\2\u12d9"+
		"\u12d3\3\2\2\2\u12d9\u12da\3\2\2\2\u12da\u12db\3\2\2\2\u12db\u12dd\7\u0152"+
		"\2\2\u12dc\u12de\5\f\7\2\u12dd\u12dc\3\2\2\2\u12de\u12df\3\2\2\2\u12df"+
		"\u12dd\3\2\2\2\u12df\u12e0\3\2\2\2\u12e0\u12e1\3\2\2\2\u12e1\u12e9\7\u009e"+
		"\2\2\u12e2\u12e4\5\f\7\2\u12e3\u12e2\3\2\2\2\u12e4\u12e5\3\2\2\2\u12e5"+
		"\u12e3\3\2\2\2\u12e5\u12e6\3\2\2\2\u12e6\u12e7\3\2\2\2\u12e7\u12e8\5$"+
		"\23\2\u12e8\u12ea\3\2\2\2\u12e9\u12e3\3\2\2\2\u12e9\u12ea\3\2\2\2\u12ea"+
		"\u0149\3\2\2\2\u12eb\u12f3\7\u00d5\2\2\u12ec\u12ee\5\f\7\2\u12ed\u12ec"+
		"\3\2\2\2\u12ee\u12ef\3\2\2\2\u12ef\u12ed\3\2\2\2\u12ef\u12f0\3\2\2\2\u12f0"+
		"\u12f1\3\2\2\2\u12f1\u12f2\7\u00db\2\2\u12f2\u12f4\3\2\2\2\u12f3\u12ed"+
		"\3\2\2\2\u12f3\u12f4\3\2\2\2\u12f4\u12fc\3\2\2\2\u12f5\u12f7\5\f\7\2\u12f6"+
		"\u12f5\3\2\2\2\u12f7\u12f8\3\2\2\2\u12f8\u12f6\3\2\2\2\u12f8\u12f9\3\2"+
		"\2\2\u12f9\u12fa\3\2\2\2\u12fa\u12fb\5$\23\2\u12fb\u12fd\3\2\2\2\u12fc"+
		"\u12f6\3\2\2\2\u12fc\u12fd\3\2\2\2\u12fd\u014b\3\2\2\2\u12fe\u1300\7e"+
		"\2\2\u12ff\u1301\5\f\7\2\u1300\u12ff\3\2\2\2\u1301\u1302\3\2\2\2\u1302"+
		"\u1300\3\2\2\2\u1302\u1303\3\2\2\2\u1303\u1304\3\2\2\2\u1304\u1308\7z"+
		"\2\2\u1305\u1307\5\f\7\2\u1306\u1305\3\2\2\2\u1307\u130a\3\2\2\2\u1308"+
		"\u1306\3\2\2\2\u1308\u1309\3\2\2\2\u1309\u130b\3\2\2\2\u130a\u1308\3\2"+
		"\2\2\u130b\u130f\7\u01be\2\2\u130c\u130e\5\f\7\2\u130d\u130c\3\2\2\2\u130e"+
		"\u1311\3\2\2\2\u130f\u130d\3\2\2\2\u130f\u1310\3\2\2\2\u1310\u1319\3\2"+
		"\2\2\u1311\u130f\3\2\2\2\u1312\u1316\5\u014e\u00a8\2\u1313\u1315\5\f\7"+
		"\2\u1314\u1313\3\2\2\2\u1315\u1318\3\2\2\2\u1316\u1314\3\2\2\2\u1316\u1317"+
		"\3\2\2\2\u1317\u131a\3\2\2\2\u1318\u1316\3\2\2\2\u1319\u1312\3\2\2\2\u1319"+
		"\u131a\3\2\2\2\u131a\u1322\3\2\2\2\u131b\u131f\5\u0150\u00a9\2\u131c\u131e"+
		"\5\f\7\2\u131d\u131c\3\2\2\2\u131e\u1321\3\2\2\2\u131f\u131d\3\2\2\2\u131f"+
		"\u1320\3\2\2\2\u1320\u1323\3\2\2\2\u1321\u131f\3\2\2\2\u1322\u131b\3\2"+
		"\2\2\u1322\u1323\3\2\2\2\u1323\u132b\3\2\2\2\u1324\u1328\5\u0152\u00aa"+
		"\2\u1325\u1327\5\f\7\2\u1326\u1325\3\2\2\2\u1327\u132a\3\2\2\2\u1328\u1326"+
		"\3\2\2\2\u1328\u1329\3\2\2\2\u1329\u132c\3\2\2\2\u132a\u1328\3\2\2\2\u132b"+
		"\u1324\3\2\2\2\u132b\u132c\3\2\2\2\u132c\u1334\3\2\2\2\u132d\u1331\5\u0154"+
		"\u00ab\2\u132e\u1330\5\f\7\2\u132f\u132e\3\2\2\2\u1330\u1333\3\2\2\2\u1331"+
		"\u132f\3\2\2\2\u1331\u1332\3\2\2\2\u1332\u1335\3\2\2\2\u1333\u1331\3\2"+
		"\2\2\u1334\u132d\3\2\2\2\u1334\u1335\3\2\2\2\u1335\u133d\3\2\2\2\u1336"+
		"\u133a\5\u0156\u00ac\2\u1337\u1339\5\f\7\2\u1338\u1337\3\2\2\2\u1339\u133c"+
		"\3\2\2\2\u133a\u1338\3\2\2\2\u133a\u133b\3\2\2\2\u133b\u133e\3\2\2\2\u133c"+
		"\u133a\3\2\2\2\u133d\u1336\3\2\2\2\u133d\u133e\3\2\2\2\u133e\u014d\3\2"+
		"\2\2\u133f\u1341\7\u00aa\2\2\u1340\u1342\5\f\7\2\u1341\u1340\3\2\2\2\u1342"+
		"\u1343\3\2\2\2\u1343\u1341\3\2\2\2\u1343\u1344\3\2\2\2\u1344\u1345\3\2"+
		"\2\2\u1345\u1349\7\u0147\2\2\u1346\u1348\5\f\7\2\u1347\u1346\3\2\2\2\u1348"+
		"\u134b\3\2\2\2\u1349\u1347\3\2\2\2\u1349\u134a\3\2\2\2\u134a\u134c\3\2"+
		"\2\2\u134b\u1349\3\2\2\2\u134c\u1350\7\u01be\2\2\u134d\u134f\5\f\7\2\u134e"+
		"\u134d\3\2\2\2\u134f\u1352\3\2\2\2\u1350\u134e\3\2\2\2\u1350\u1351\3\2"+
		"\2\2\u1351\u1378\3\2\2\2\u1352\u1350\3\2\2\2\u1353\u135d\5\u0158\u00ad"+
		"\2\u1354\u1356\5\f\7\2\u1355\u1354\3\2\2\2\u1356\u1359\3\2\2\2\u1357\u1355"+
		"\3\2\2\2\u1357\u1358\3\2\2\2\u1358\u135a\3\2\2\2\u1359\u1357\3\2\2\2\u135a"+
		"\u135c\5\u0160\u00b1\2\u135b\u1357\3\2\2\2\u135c\u135f\3\2\2\2\u135d\u135b"+
		"\3\2\2\2\u135d\u135e\3\2\2\2\u135e\u136f\3\2\2\2\u135f\u135d\3\2\2\2\u1360"+
		"\u136f\5\u015c\u00af\2\u1361\u136b\5\u015a\u00ae\2\u1362\u1364\5\f\7\2"+
		"\u1363\u1362\3\2\2\2\u1364\u1367\3\2\2\2\u1365\u1363\3\2\2\2\u1365\u1366"+
		"\3\2\2\2\u1366\u1368\3\2\2\2\u1367\u1365\3\2\2\2\u1368\u136a\5\u0160\u00b1"+
		"\2\u1369\u1365\3\2\2\2\u136a\u136d\3\2\2\2\u136b\u1369\3\2\2\2\u136b\u136c"+
		"\3\2\2\2\u136c\u136f\3\2\2\2\u136d\u136b\3\2\2\2\u136e\u1353\3\2\2\2\u136e"+
		"\u1360\3\2\2\2\u136e\u1361\3\2\2\2\u136f\u1373\3\2\2\2\u1370\u1372\5\f"+
		"\7\2\u1371\u1370\3\2\2\2\u1372\u1375\3\2\2\2\u1373\u1371\3\2\2\2\u1373"+
		"\u1374\3\2\2\2\u1374\u1377\3\2\2\2\u1375\u1373\3\2\2\2\u1376\u136e\3\2"+
		"\2\2\u1377\u137a\3\2\2\2\u1378\u1376\3\2\2\2\u1378\u1379\3\2\2\2\u1379"+
		"\u014f\3\2\2\2\u137a\u1378\3\2\2\2\u137b\u137d\7\u018d\2\2\u137c\u137e"+
		"\5\f\7\2\u137d\u137c\3\2\2\2\u137e\u137f\3\2\2\2\u137f\u137d\3\2\2\2\u137f"+
		"\u1380\3\2\2\2\u1380\u1381\3\2\2\2\u1381\u1385\7\u0147\2\2\u1382\u1384"+
		"\5\f\7\2\u1383\u1382\3\2\2\2\u1384\u1387\3\2\2\2\u1385\u1383\3\2\2\2\u1385"+
		"\u1386\3\2\2\2\u1386\u1388\3\2\2\2\u1387\u1385\3\2\2\2\u1388\u138c\7\u01be"+
		"\2\2\u1389\u138b\5\f\7\2\u138a\u1389\3\2\2\2\u138b\u138e\3\2\2\2\u138c"+
		"\u138a\3\2\2\2\u138c\u138d\3\2\2\2\u138d\u1398\3\2\2\2\u138e\u138c\3\2"+
		"\2\2\u138f\u1393\5\u0160\u00b1\2\u1390\u1392\5\f\7\2\u1391\u1390\3\2\2"+
		"\2\u1392\u1395\3\2\2\2\u1393\u1391\3\2\2\2\u1393\u1394\3\2\2\2\u1394\u1397"+
		"\3\2\2\2\u1395\u1393\3\2\2\2\u1396\u138f\3\2\2\2\u1397\u139a\3\2\2\2\u1398"+
		"\u1396\3\2\2\2\u1398\u1399\3\2\2\2\u1399\u0151\3\2\2\2\u139a\u1398\3\2"+
		"\2\2\u139b\u139d\7\u00e7\2\2\u139c\u139e\5\f\7\2\u139d\u139c\3\2\2\2\u139e"+
		"\u139f\3\2\2\2\u139f\u139d\3\2\2\2\u139f\u13a0\3\2\2\2\u13a0\u13a1\3\2"+
		"\2\2\u13a1\u13a5\7\u0147\2\2\u13a2\u13a4\5\f\7\2\u13a3\u13a2\3\2\2\2\u13a4"+
		"\u13a7\3\2\2\2\u13a5\u13a3\3\2\2\2\u13a5\u13a6\3\2\2\2\u13a6\u13a8\3\2"+
		"\2\2\u13a7\u13a5\3\2\2\2\u13a8\u13ac\7\u01be\2\2\u13a9\u13ab\5\f\7\2\u13aa"+
		"\u13a9\3\2\2\2\u13ab\u13ae\3\2\2\2\u13ac\u13aa\3\2\2\2\u13ac\u13ad\3\2"+
		"\2\2\u13ad\u13b8\3\2\2\2\u13ae\u13ac\3\2\2\2\u13af\u13b3\5\u0160\u00b1"+
		"\2\u13b0\u13b2\5\f\7\2\u13b1\u13b0\3\2\2\2\u13b2\u13b5\3\2\2\2\u13b3\u13b1"+
		"\3\2\2\2\u13b3\u13b4\3\2\2\2\u13b4\u13b7\3\2\2\2\u13b5\u13b3\3\2\2\2\u13b6"+
		"\u13af\3\2\2\2\u13b7\u13ba\3\2\2\2\u13b8\u13b6\3\2\2\2\u13b8\u13b9\3\2"+
		"\2\2\u13b9\u0153\3\2\2\2\u13ba\u13b8\3\2\2\2\u13bb\u13bd\7\u0132\2\2\u13bc"+
		"\u13be\5\f\7\2\u13bd\u13bc\3\2\2\2\u13be\u13bf\3\2\2\2\u13bf\u13bd\3\2"+
		"\2\2\u13bf\u13c0\3\2\2\2\u13c0\u13c1\3\2\2\2\u13c1\u13c5\7\u0147\2\2\u13c2"+
		"\u13c4\5\f\7\2\u13c3\u13c2\3\2\2\2\u13c4\u13c7\3\2\2\2\u13c5\u13c3\3\2"+
		"\2\2\u13c5\u13c6\3\2\2\2\u13c6\u13c8\3\2\2\2\u13c7\u13c5\3\2\2\2\u13c8"+
		"\u13cc\7\u01be\2\2\u13c9\u13cb\5\f\7\2\u13ca\u13c9\3\2\2\2\u13cb\u13ce"+
		"\3\2\2\2\u13cc\u13ca\3\2\2\2\u13cc\u13cd\3\2\2\2\u13cd\u13e4\3\2\2\2\u13ce"+
		"\u13cc\3\2\2\2\u13cf\u13d9\5\u015c\u00af\2\u13d0\u13d2\5\f\7\2\u13d1\u13d0"+
		"\3\2\2\2\u13d2\u13d5\3\2\2\2\u13d3\u13d1\3\2\2\2\u13d3\u13d4\3\2\2\2\u13d4"+
		"\u13d6\3\2\2\2\u13d5\u13d3\3\2\2\2\u13d6\u13d8\5\u018e\u00c8\2\u13d7\u13d3"+
		"\3\2\2\2\u13d8\u13db\3\2\2\2\u13d9\u13d7\3\2\2\2\u13d9\u13da\3\2\2\2\u13da"+
		"\u13df\3\2\2\2\u13db\u13d9\3\2\2\2\u13dc\u13de\5\f\7\2\u13dd\u13dc\3\2"+
		"\2\2\u13de\u13e1\3\2\2\2\u13df\u13dd\3\2\2\2\u13df\u13e0\3\2\2\2\u13e0"+
		"\u13e3\3\2\2\2\u13e1\u13df\3\2\2\2\u13e2\u13cf\3\2\2\2\u13e3\u13e6\3\2"+
		"\2\2\u13e4\u13e2\3\2\2\2\u13e4\u13e5\3\2\2\2\u13e5\u0155\3\2\2\2\u13e6"+
		"\u13e4\3\2\2\2\u13e7\u13e9\7\u0144\2\2\u13e8\u13ea\5\f\7\2\u13e9\u13e8"+
		"\3\2\2\2\u13ea\u13eb\3\2\2\2\u13eb\u13e9\3\2\2\2\u13eb\u13ec\3\2\2\2\u13ec"+
		"\u13ed\3\2\2\2\u13ed\u13f1\7\u0147\2\2\u13ee\u13f0\5\f\7\2\u13ef\u13ee"+
		"\3\2\2\2\u13f0\u13f3\3\2\2\2\u13f1\u13ef\3\2\2\2\u13f1\u13f2\3\2\2\2\u13f2"+
		"\u13f4\3\2\2\2\u13f3\u13f1\3\2\2\2\u13f4\u13f8\7\u01be\2\2\u13f5\u13f7"+
		"\5\f\7\2\u13f6\u13f5\3\2\2\2\u13f7\u13fa\3\2\2\2\u13f8\u13f6\3\2\2\2\u13f8"+
		"\u13f9\3\2\2\2\u13f9\u1404\3\2\2\2\u13fa\u13f8\3\2\2\2\u13fb\u13ff\5\u01ee"+
		"\u00f8\2\u13fc\u13fe\5\f\7\2\u13fd\u13fc\3\2\2\2\u13fe\u1401\3\2\2\2\u13ff"+
		"\u13fd\3\2\2\2\u13ff\u1400\3\2\2\2\u1400\u1403\3\2\2\2\u1401\u13ff\3\2"+
		"\2\2\u1402\u13fb\3\2\2\2\u1403\u1406\3\2\2\2\u1404\u1402\3\2\2\2\u1404"+
		"\u1405\3\2\2\2\u1405\u0157\3\2\2\2\u1406\u1404\3\2\2\2\u1407\u1409\7\u00a9"+
		"\2\2\u1408\u140a\5\f\7\2\u1409\u1408\3\2\2\2\u140a\u140b\3\2\2\2\u140b"+
		"\u1409\3\2\2\2\u140b\u140c\3\2\2\2\u140c\u140d\3\2\2\2\u140d\u1411\5\u02a8"+
		"\u0155\2\u140e\u1410\5\f\7\2\u140f\u140e\3\2\2\2\u1410\u1413\3\2\2\2\u1411"+
		"\u140f\3\2\2\2\u1411\u1412\3\2\2\2\u1412\u141d\3\2\2\2\u1413\u1411\3\2"+
		"\2\2\u1414\u1418\5\u015e\u00b0\2\u1415\u1417\5\f\7\2\u1416\u1415\3\2\2"+
		"\2\u1417\u141a\3\2\2\2\u1418\u1416\3\2\2\2\u1418\u1419\3\2\2\2\u1419\u141c"+
		"\3\2\2\2\u141a\u1418\3\2\2\2\u141b\u1414\3\2\2\2\u141c\u141f\3\2\2\2\u141d"+
		"\u141b\3\2\2\2\u141d\u141e\3\2\2\2\u141e\u1420\3\2\2\2\u141f\u141d\3\2"+
		"\2\2\u1420\u1421\7\u01be\2\2\u1421\u0159\3\2\2\2\u1422\u1424\7\u0145\2"+
		"\2\u1423\u1425\5\f\7\2\u1424\u1423\3\2\2\2\u1425\u1426\3\2\2\2\u1426\u1424"+
		"\3\2\2\2\u1426\u1427\3\2\2\2\u1427\u1428\3\2\2\2\u1428\u142c\5\u02a8\u0155"+
		"\2\u1429\u142b\5\f\7\2\u142a\u1429\3\2\2\2\u142b\u142e\3\2\2\2\u142c\u142a"+
		"\3\2\2\2\u142c\u142d\3\2\2\2\u142d\u1438\3\2\2\2\u142e\u142c\3\2\2\2\u142f"+
		"\u1433\5\u01ca\u00e6\2\u1430\u1432\5\f\7\2\u1431\u1430\3\2\2\2\u1432\u1435"+
		"\3\2\2\2\u1433\u1431\3\2\2\2\u1433\u1434\3\2\2\2\u1434\u1437\3\2\2\2\u1435"+
		"\u1433\3\2\2\2\u1436\u142f\3\2\2\2\u1437\u143a\3\2\2\2\u1438\u1436\3\2"+
		"\2\2\u1438\u1439\3\2\2\2\u1439\u143b\3\2\2\2\u143a\u1438\3\2\2\2\u143b"+
		"\u143c\7\u01be\2\2\u143c\u015b\3\2\2\2\u143d\u143f\7\u0124\2\2\u143e\u1440"+
		"\5\f\7\2\u143f\u143e\3\2\2\2\u1440\u1441\3\2\2\2\u1441\u143f\3\2\2\2\u1441"+
		"\u1442\3\2\2\2\u1442\u1443\3\2\2\2\u1443\u1447\5\u01ce\u00e8\2\u1444\u1446"+
		"\5\f\7\2\u1445\u1444\3\2\2\2\u1446\u1449\3\2\2\2\u1447\u1445\3\2\2\2\u1447"+
		"\u1448\3\2\2\2\u1448\u1453\3\2\2\2\u1449\u1447\3\2\2\2\u144a\u144e\5\u01ac"+
		"\u00d7\2\u144b\u144d\5\f\7\2\u144c\u144b\3\2\2\2\u144d\u1450\3\2\2\2\u144e"+
		"\u144c\3\2\2\2\u144e\u144f\3\2\2\2\u144f\u1452\3\2\2\2\u1450\u144e\3\2"+
		"\2\2\u1451\u144a\3\2\2\2\u1452\u1455\3\2\2\2\u1453\u1451\3\2\2\2\u1453"+
		"\u1454\3\2\2\2\u1454\u1456\3\2\2\2\u1455\u1453\3\2\2\2\u1456\u1457\7\u01be"+
		"\2\2\u1457\u015d\3\2\2\2\u1458\u145a\7\u00d6\2\2\u1459\u145b\5\f\7\2\u145a"+
		"\u1459\3\2\2\2\u145b\u145c\3\2\2\2\u145c\u145a\3\2\2\2\u145c\u145d\3\2"+
		"\2\2\u145d\u145f\3\2\2\2\u145e\u1458\3\2\2\2\u145e\u145f\3\2\2\2\u145f"+
		"\u1460\3\2\2\2\u1460\u1476\7\u00a6\2\2\u1461\u1463\7\u00d6\2\2\u1462\u1464"+
		"\5\f\7\2\u1463\u1462\3\2\2\2\u1464\u1465\3\2\2\2\u1465\u1463\3\2\2\2\u1465"+
		"\u1466\3\2\2\2\u1466\u1468\3\2\2\2\u1467\u1461\3\2\2\2\u1467\u1468\3\2"+
		"\2\2\u1468\u1469\3\2\2\2\u1469\u1476\7\u00bc\2\2\u146a\u1476\5\u029c\u014f"+
		"\2\u146b\u1476\5\u01e4\u00f3\2\u146c\u1476\5\u01e2\u00f2\2\u146d\u1476"+
		"\5\u01de\u00f0\2\u146e\u1476\5\u01da\u00ee\2\u146f\u1476\5\u01d0\u00e9"+
		"\2\u1470\u1476\5\u01cc\u00e7\2\u1471\u1476\5\u029a\u014e\2\u1472\u1476"+
		"\5\u0288\u0145\2\u1473\u1476\5\u0284\u0143\2\u1474\u1476\5\u0280\u0141"+
		"\2\u1475\u145e\3\2\2\2\u1475\u1467\3\2\2\2\u1475\u146a\3\2\2\2\u1475\u146b"+
		"\3\2\2\2\u1475\u146c\3\2\2\2\u1475\u146d\3\2\2\2\u1475\u146e\3\2\2\2\u1475"+
		"\u146f\3\2\2\2\u1475\u1470\3\2\2\2\u1475\u1471\3\2\2\2\u1475\u1472\3\2"+
		"\2\2\u1475\u1473\3\2\2\2\u1475\u1474\3\2\2\2\u1476\u015f\3\2\2\2\u1477"+
		"\u1481\5\u0162\u00b2\2\u1478\u147a\5\f\7\2\u1479\u1478\3\2\2\2\u147a\u147d"+
		"\3\2\2\2\u147b\u1479\3\2\2\2\u147b\u147c\3\2\2\2\u147c\u147e\3\2\2\2\u147d"+
		"\u147b\3\2\2\2\u147e\u1480\5\u0162\u00b2\2\u147f\u147b\3\2\2\2\u1480\u1483"+
		"\3\2\2\2\u1481\u147f\3\2\2\2\u1481\u1482\3\2\2\2\u1482\u0161\3\2\2\2\u1483"+
		"\u1481\3\2\2\2\u1484\u148e\5\u0164\u00b3\2\u1485\u1487\5\f\7\2\u1486\u1485"+
		"\3\2\2\2\u1487\u1488\3\2\2\2\u1488\u1486\3\2\2\2\u1488\u1489\3\2\2\2\u1489"+
		"\u148c\3\2\2\2\u148a\u148d\5\u01c8\u00e5\2\u148b\u148d\7\u00ad\2\2\u148c"+
		"\u148a\3\2\2\2\u148c\u148b\3\2\2\2\u148d\u148f\3\2\2\2\u148e\u1486\3\2"+
		"\2\2\u148e\u148f\3\2\2\2\u148f\u149d\3\2\2\2\u1490\u1492\5\f\7\2\u1491"+
		"\u1490\3\2\2\2\u1492\u1493\3\2\2\2\u1493\u1491\3\2\2\2\u1493\u1494\3\2"+
		"\2\2\u1494\u1495\3\2\2\2\u1495\u1497\7\u0128\2\2\u1496\u1498\5\f\7\2\u1497"+
		"\u1496\3\2\2\2\u1498\u1499\3\2\2\2\u1499\u1497\3\2\2\2\u1499\u149a\3\2"+
		"\2\2\u149a\u149b\3\2\2\2\u149b\u149c\5\u01c6\u00e4\2\u149c\u149e\3\2\2"+
		"\2\u149d\u1491\3\2\2\2\u149d\u149e\3\2\2\2\u149e\u14a8\3\2\2\2\u149f\u14a1"+
		"\5\f\7\2\u14a0\u149f\3\2\2\2\u14a1\u14a2\3\2\2\2\u14a2\u14a0\3\2\2\2\u14a2"+
		"\u14a3\3\2\2\2\u14a3\u14a4\3\2\2\2\u14a4\u14a5\5\u0166\u00b4\2\u14a5\u14a7"+
		"\3\2\2\2\u14a6\u14a0\3\2\2\2\u14a7\u14aa\3\2\2\2\u14a8\u14a6\3\2\2\2\u14a8"+
		"\u14a9\3\2\2\2\u14a9\u14ab\3\2\2\2\u14aa\u14a8\3\2\2\2\u14ab\u14ac\7\u01be"+
		"\2\2\u14ac\u0163\3\2\2\2\u14ad\u14ae\7\u01c2\2\2\u14ae\u0165\3\2\2\2\u14af"+
		"\u14b1\7\u00d6\2\2\u14b0\u14b2\5\f\7\2\u14b1\u14b0\3\2\2\2\u14b2\u14b3"+
		"\3\2\2\2\u14b3\u14b1\3\2\2\2\u14b3\u14b4\3\2\2\2\u14b4\u14b6\3\2\2\2\u14b5"+
		"\u14af\3\2\2\2\u14b5\u14b6\3\2\2\2\u14b6\u14b7\3\2\2\2\u14b7\u14ec\7\u00a6"+
		"\2\2\u14b8\u14ba\7\u00d6\2\2\u14b9\u14bb\5\f\7\2\u14ba\u14b9\3\2\2\2\u14bb"+
		"\u14bc\3\2\2\2\u14bc\u14ba\3\2\2\2\u14bc\u14bd\3\2\2\2\u14bd\u14bf\3\2"+
		"\2\2\u14be\u14b8\3\2\2\2\u14be\u14bf\3\2\2\2\u14bf\u14c0\3\2\2\2\u14c0"+
		"\u14ec\7\u00bc\2\2\u14c1\u14ec\5\u01c0\u00e1\2\u14c2\u14ec\5\u01bc\u00df"+
		"\2\u14c3\u14ec\5\u0194\u00cb\2\u14c4\u14ec\5\u017c\u00bf\2\u14c5\u14cd"+
		"\t\23\2\2\u14c6\u14c8\5\f\7\2\u14c7\u14c6\3\2\2\2\u14c8\u14c9\3\2\2\2"+
		"\u14c9\u14c7\3\2\2\2\u14c9\u14ca\3\2\2\2\u14ca\u14cb\3\2\2\2\u14cb\u14cc"+
		"\t\24\2\2\u14cc\u14ce\3\2\2\2\u14cd\u14c7\3\2\2\2\u14cd\u14ce\3\2\2\2"+
		"\u14ce\u14ec\3\2\2\2\u14cf\u14d7\t\25\2\2\u14d0\u14d2\5\f\7\2\u14d1\u14d0"+
		"\3\2\2\2\u14d2\u14d3\3\2\2\2\u14d3\u14d1\3\2\2\2\u14d3\u14d4\3\2\2\2\u14d4"+
		"\u14d5\3\2\2\2\u14d5\u14d6\7\u0140\2\2\u14d6\u14d8\3\2\2\2\u14d7\u14d1"+
		"\3\2\2\2\u14d7\u14d8\3\2\2\2\u14d8\u14ec\3\2\2\2\u14d9\u14db\7,\2\2\u14da"+
		"\u14dc\5\f\7\2\u14db\u14da\3\2\2\2\u14dc\u14dd\3\2\2\2\u14dd\u14db\3\2"+
		"\2\2\u14dd\u14de\3\2\2\2\u14de\u14e5\3\2\2\2\u14df\u14e1\7\u0189\2\2\u14e0"+
		"\u14e2\5\f\7\2\u14e1\u14e0\3\2\2\2\u14e2\u14e3\3\2\2\2\u14e3\u14e1\3\2"+
		"\2\2\u14e3\u14e4\3\2\2\2\u14e4\u14e6\3\2\2\2\u14e5\u14df\3\2\2\2\u14e5"+
		"\u14e6\3\2\2\2\u14e6\u14e7\3\2\2\2\u14e7\u14e8\7\u0191\2\2\u14e8\u14ec"+
		"\3\2\2\2\u14e9\u14ec\5\u016e\u00b8\2\u14ea\u14ec\5\u0168\u00b5\2\u14eb"+
		"\u14b5\3\2\2\2\u14eb\u14be\3\2\2\2\u14eb\u14c1\3\2\2\2\u14eb\u14c2\3\2"+
		"\2\2\u14eb\u14c3\3\2\2\2\u14eb\u14c4\3\2\2\2\u14eb\u14c5\3\2\2\2\u14eb"+
		"\u14cf\3\2\2\2\u14eb\u14d9\3\2\2\2\u14eb\u14e9\3\2\2\2\u14eb\u14ea\3\2"+
		"\2\2\u14ec\u0167\3\2\2\2\u14ed\u14ef\7\u012f\2\2\u14ee\u14f0\5\f\7\2\u14ef"+
		"\u14ee\3\2\2\2\u14f0\u14f1\3\2\2\2\u14f1\u14ef\3\2\2\2\u14f1\u14f2\3\2"+
		"\2\2\u14f2\u14f3\3\2\2\2\u14f3\u1501\5\u016a\u00b6\2\u14f4\u14f6\5\f\7"+
		"\2\u14f5\u14f4\3\2\2\2\u14f6\u14f7\3\2\2\2\u14f7\u14f5\3\2\2\2\u14f7\u14f8"+
		"\3\2\2\2\u14f8\u14f9\3\2\2\2\u14f9\u14fb\t\7\2\2\u14fa\u14fc\5\f\7\2\u14fb"+
		"\u14fa\3\2\2\2\u14fc\u14fd\3\2\2\2\u14fd\u14fb\3\2\2\2\u14fd\u14fe\3\2"+
		"\2\2\u14fe\u14ff\3\2\2\2\u14ff\u1500\5\u016c\u00b7\2\u1500\u1502\3\2\2"+
		"\2\u1501\u14f5\3\2\2\2\u1501\u1502\3\2\2\2\u1502\u0169\3\2\2\2\u1503\u1504"+
		"\5\u023e\u0120\2\u1504\u016b\3\2\2\2\u1505\u1506\5\u023e\u0120\2\u1506"+
		"\u016d\3\2\2\2\u1507\u150f\7\u0185\2\2\u1508\u150a\5\f\7\2\u1509\u1508"+
		"\3\2\2\2\u150a\u150b\3\2\2\2\u150b\u1509\3\2\2\2\u150b\u150c\3\2\2\2\u150c"+
		"\u150d\3\2\2\2\u150d\u150e\7\u00d6\2\2\u150e\u1510\3\2\2\2\u150f\u1509"+
		"\3\2\2\2\u150f\u1510\3\2\2\2\u1510\u151c\3\2\2\2\u1511\u1519\7\u0186\2"+
		"\2\u1512\u1514\5\f\7\2\u1513\u1512\3\2\2\2\u1514\u1515\3\2\2\2\u1515\u1513"+
		"\3\2\2\2\u1515\u1516\3\2\2\2\u1516\u1517\3\2\2\2\u1517\u1518\7\26\2\2"+
		"\u1518\u151a\3\2\2\2\u1519\u1513\3\2\2\2\u1519\u151a\3\2\2\2\u151a\u151c"+
		"\3\2\2\2\u151b\u1507\3\2\2\2\u151b\u1511\3\2\2\2\u151c\u151e\3\2\2\2\u151d"+
		"\u151f\5\f\7\2\u151e\u151d\3\2\2\2\u151f\u1520\3\2\2\2\u1520\u151e\3\2"+
		"\2\2\u1520\u1521\3\2\2\2\u1521\u1522\3\2\2\2\u1522\u152c\5\u0170\u00b9"+
		"\2\u1523\u1525\5\f\7\2\u1524\u1523\3\2\2\2\u1525\u1526\3\2\2\2\u1526\u1524"+
		"\3\2\2\2\u1526\u1527\3\2\2\2\u1527\u1528\3\2\2\2\u1528\u1529\5\u0170\u00b9"+
		"\2\u1529\u152b\3\2\2\2\u152a\u1524\3\2\2\2\u152b\u152e\3\2\2\2\u152c\u152a"+
		"\3\2\2\2\u152c\u152d\3\2\2\2\u152d\u016f\3\2\2\2\u152e\u152c\3\2\2\2\u152f"+
		"\u1537\5\u0172\u00ba\2\u1530\u1532\5\f\7\2\u1531\u1530\3\2\2\2\u1532\u1533"+
		"\3\2\2\2\u1533\u1531\3\2\2\2\u1533\u1534\3\2\2\2\u1534\u1535\3\2\2\2\u1535"+
		"\u1536\5\u0174\u00bb\2\u1536\u1538\3\2\2\2\u1537\u1531\3\2\2\2\u1537\u1538"+
		"\3\2\2\2\u1538\u0171\3\2\2\2\u1539\u154b\5\u017a\u00be\2\u153a\u153c\7"+
		"\u012a\2\2\u153b\u153d\5\f\7\2\u153c\u153b\3\2\2\2\u153d\u153e\3\2\2\2"+
		"\u153e\u153c\3\2\2\2\u153e\u153f\3\2\2\2\u153f\u1540\3\2\2\2\u1540\u1541"+
		"\5\u0178\u00bd\2\u1541\u154b\3\2\2\2\u1542\u1544\7\u00a6\2\2\u1543\u1545"+
		"\5\f\7\2\u1544\u1543\3\2\2\2\u1545\u1546\3\2\2\2\u1546\u1544\3\2\2\2\u1546"+
		"\u1547\3\2\2\2\u1547\u1548\3\2\2\2\u1548\u1549\5\u0176\u00bc\2\u1549\u154b"+
		"\3\2\2\2\u154a\u1539\3\2\2\2\u154a\u153a\3\2\2\2\u154a\u1542\3\2\2\2\u154b"+
		"\u0173\3\2\2\2\u154c\u154e\t\7\2\2\u154d\u154f\5\f\7\2\u154e\u154d\3\2"+
		"\2\2\u154f\u1550\3\2\2\2\u1550\u154e\3\2\2\2\u1550\u1551\3\2\2\2\u1551"+
		"\u1552\3\2\2\2\u1552\u1553\5\u0172\u00ba\2\u1553\u0175\3\2\2\2\u1554\u1555"+
		"\7\u01c4\2\2\u1555\u0177\3\2\2\2\u1556\u1557\5\u023e\u0120\2\u1557\u0179"+
		"\3\2\2\2\u1558\u1559\t\26\2\2\u1559\u017b\3\2\2\2\u155a\u155c\7\u00fe"+
		"\2\2\u155b\u155d\5\f\7\2\u155c\u155b\3\2\2\2\u155d\u155e\3\2\2\2\u155e"+
		"\u155c\3\2\2\2\u155e\u155f\3\2\2\2\u155f\u1560\3\2\2\2\u1560\u156a\5\u0186"+
		"\u00c4\2\u1561\u1563\5\f\7\2\u1562\u1561\3\2\2\2\u1563\u1564\3\2\2\2\u1564"+
		"\u1562\3\2\2\2\u1564\u1565\3\2\2\2\u1565\u1566\3\2\2\2\u1566\u1567\5\u0182"+
		"\u00c2\2\u1567\u1569\3\2\2\2\u1568\u1562\3\2\2\2\u1569\u156c\3\2\2\2\u156a"+
		"\u1568\3\2\2\2\u156a\u156b\3\2\2\2\u156b\u1574\3\2\2\2\u156c\u156a\3\2"+
		"\2\2\u156d\u156f\5\f\7\2\u156e\u156d\3\2\2\2\u156f\u1570\3\2\2\2\u1570"+
		"\u156e\3\2\2\2\u1570\u1571\3\2\2\2\u1571\u1572\3\2\2\2\u1572\u1573\5\u017e"+
		"\u00c0\2\u1573\u1575\3\2\2\2\u1574\u156e\3\2\2\2\u1574\u1575\3\2\2\2\u1575"+
		"\u017d\3\2\2\2\u1576\u1578\7\u00cb\2\2\u1577\u1579\5\f\7\2\u1578\u1577"+
		"\3\2\2\2\u1579\u157a\3\2\2\2\u157a\u1578\3\2\2\2\u157a\u157b\3\2\2\2\u157b"+
		"\u1582\3\2\2\2\u157c\u157e\7\62\2\2\u157d\u157f\5\f\7\2\u157e\u157d\3"+
		"\2\2\2\u157f\u1580\3\2\2\2\u1580\u157e\3\2\2\2\u1580\u1581\3\2\2\2\u1581"+
		"\u1583\3\2\2\2\u1582\u157c\3\2\2\2\u1582\u1583\3\2\2\2\u1583\u1584\3\2"+
		"\2\2\u1584\u158e\5\u0180\u00c1\2\u1585\u1587\5\f\7\2\u1586\u1585\3\2\2"+
		"\2\u1587\u1588\3\2\2\2\u1588\u1586\3\2\2\2\u1588\u1589\3\2\2\2\u1589\u158a"+
		"\3\2\2\2\u158a\u158b\5\u0180\u00c1\2\u158b\u158d\3\2\2\2\u158c\u1586\3"+
		"\2\2\2\u158d\u1590\3\2\2\2\u158e\u158c\3\2\2\2\u158e\u158f\3\2\2\2\u158f"+
		"\u017f\3\2\2\2\u1590\u158e\3\2\2\2\u1591\u1592\7\u01c4\2\2\u1592\u0181"+
		"\3\2\2\2\u1593\u1595\t\13\2\2\u1594\u1596\5\f\7\2\u1595\u1594\3\2\2\2"+
		"\u1596\u1597\3\2\2\2\u1597\u1595\3\2\2\2\u1597\u1598\3\2\2\2\u1598\u159f"+
		"\3\2\2\2\u1599\u159b\7\u00db\2\2\u159a\u159c\5\f\7\2\u159b\u159a\3\2\2"+
		"\2\u159c\u159d\3\2\2\2\u159d\u159b\3\2\2\2\u159d\u159e\3\2\2\2\u159e\u15a0"+
		"\3\2\2\2\u159f\u1599\3\2\2\2\u159f\u15a0\3\2\2\2\u15a0\u15a7\3\2\2\2\u15a1"+
		"\u15a3\7\u00d6\2\2\u15a2\u15a4\5\f\7\2\u15a3\u15a2\3\2\2\2\u15a4\u15a5"+
		"\3\2\2\2\u15a5\u15a3\3\2\2\2\u15a5\u15a6\3\2\2\2\u15a6\u15a8\3\2\2\2\u15a7"+
		"\u15a1\3\2\2\2\u15a7\u15a8\3\2\2\2\u15a8\u15a9\3\2\2\2\u15a9\u15b3\5\u0184"+
		"\u00c3\2\u15aa\u15ac\5\f\7\2\u15ab\u15aa\3\2\2\2\u15ac\u15ad\3\2\2\2\u15ad"+
		"\u15ab\3\2\2\2\u15ad\u15ae\3\2\2\2\u15ae\u15af\3\2\2\2\u15af\u15b0\5\u0184"+
		"\u00c3\2\u15b0\u15b2\3\2\2\2\u15b1\u15ab\3\2\2\2\u15b2\u15b5\3\2\2\2\u15b3"+
		"\u15b1\3\2\2\2\u15b3\u15b4\3\2\2\2\u15b4\u0183\3\2\2\2\u15b5\u15b3\3\2"+
		"\2\2\u15b6\u15b7\5\u023e\u0120\2\u15b7\u0185\3\2\2\2\u15b8\u15ba\5\u0188"+
		"\u00c5\2\u15b9\u15bb\5\f\7\2\u15ba\u15b9\3\2\2\2\u15bb\u15bc\3\2\2\2\u15bc"+
		"\u15ba\3\2\2\2\u15bc\u15bd\3\2\2\2\u15bd\u15be\3\2\2\2\u15be\u15bf\7\u0174"+
		"\2\2\u15bf\u15e9\3\2\2\2\u15c0\u15c2\5\u018a\u00c6\2\u15c1\u15c3\5\f\7"+
		"\2\u15c2\u15c1\3\2\2\2\u15c3\u15c4\3\2\2\2\u15c4\u15c2\3\2\2\2\u15c4\u15c5"+
		"\3\2\2\2\u15c5\u15c6\3\2\2\2\u15c6\u15c8\7\u0175\2\2\u15c7\u15c9\5\f\7"+
		"\2\u15c8\u15c7\3\2\2\2\u15c9\u15ca\3\2\2\2\u15ca\u15c8\3\2\2\2\u15ca\u15cb"+
		"\3\2\2\2\u15cb\u15cc\3\2\2\2\u15cc\u15ce\5\u018c\u00c7\2\u15cd\u15cf\5"+
		"\f\7\2\u15ce\u15cd\3\2\2\2\u15cf\u15d0\3\2\2\2\u15d0\u15ce\3\2\2\2\u15d0"+
		"\u15d1\3\2\2\2\u15d1\u15d2\3\2\2\2\u15d2\u15d4\7\u0174\2\2\u15d3\u15d5"+
		"\5\f\7\2\u15d4\u15d3\3\2\2\2\u15d5\u15d6\3\2\2\2\u15d6\u15d4\3\2\2\2\u15d6"+
		"\u15d7\3\2\2\2\u15d7\u15d8\3\2\2\2\u15d8\u15da\7s\2\2\u15d9\u15db\5\f"+
		"\7\2\u15da\u15d9\3\2\2\2\u15db\u15dc\3\2\2\2\u15dc\u15da\3\2\2\2\u15dc"+
		"\u15dd\3\2\2\2\u15dd\u15e4\3\2\2\2\u15de\u15e0\7\u0102\2\2\u15df\u15e1"+
		"\5\f\7\2\u15e0\u15df\3\2\2\2\u15e1\u15e2\3\2\2\2\u15e2\u15e0\3\2\2\2\u15e2"+
		"\u15e3\3\2\2\2\u15e3\u15e5\3\2\2\2\u15e4\u15de\3\2\2\2\u15e4\u15e5\3\2"+
		"\2\2\u15e5\u15e6\3\2\2\2\u15e6\u15e7\5\u01e8\u00f5\2\u15e7\u15e9\3\2\2"+
		"\2\u15e8\u15b8\3\2\2\2\u15e8\u15c0\3\2\2\2\u15e9\u0187\3\2\2\2\u15ea\u15eb"+
		"\7\u01c2\2\2\u15eb\u0189\3\2\2\2\u15ec\u15ed\7\u01c2\2\2\u15ed\u018b\3"+
		"\2\2\2\u15ee\u15ef\7\u01c2\2\2\u15ef\u018d\3\2\2\2\u15f0\u15fa\5\u0190"+
		"\u00c9\2\u15f1\u15f3\5\f\7\2\u15f2\u15f1\3\2\2\2\u15f3\u15f6\3\2\2\2\u15f4"+
		"\u15f2\3\2\2\2\u15f4\u15f5\3\2\2\2\u15f5\u15f7\3\2\2\2\u15f6\u15f4\3\2"+
		"\2\2\u15f7\u15f9\5\u0190\u00c9\2\u15f8\u15f4\3\2\2\2\u15f9\u15fc\3\2\2"+
		"\2\u15fa\u15f8\3\2\2\2\u15fa\u15fb\3\2\2\2\u15fb\u018f\3\2\2\2\u15fc\u15fa"+
		"\3\2\2\2\u15fd\u1605\5\u0164\u00b3\2\u15fe\u1600\5\f\7\2\u15ff\u15fe\3"+
		"\2\2\2\u1600\u1601\3\2\2\2\u1601\u15ff\3\2\2\2\u1601\u1602\3\2\2\2\u1602"+
		"\u1603\3\2\2\2\u1603\u1604\5\u01c8\u00e5\2\u1604\u1606\3\2\2\2\u1605\u15ff"+
		"\3\2\2\2\u1605\u1606\3\2\2\2\u1606\u1610\3\2\2\2\u1607\u1609\5\f\7\2\u1608"+
		"\u1607\3\2\2\2\u1609\u160a\3\2\2\2\u160a\u1608\3\2\2\2\u160a\u160b\3\2"+
		"\2\2\u160b\u160c\3\2\2\2\u160c\u160d\5\u0192\u00ca\2\u160d\u160f\3\2\2"+
		"\2\u160e\u1608\3\2\2\2\u160f\u1612\3\2\2\2\u1610\u160e\3\2\2\2\u1610\u1611"+
		"\3\2\2\2\u1611\u1613\3\2\2\2\u1612\u1610\3\2\2\2\u1613\u1614\7\u01be\2"+
		"\2\u1614\u0191\3\2\2\2\u1615\u1617\7\u00e4\2\2\u1616\u1618\5\f\7\2\u1617"+
		"\u1616\3\2\2\2\u1618\u1619\3\2\2\2\u1619\u1617\3\2\2\2\u1619\u161a\3\2"+
		"\2\2\u161a\u1621\3\2\2\2\u161b\u161d\7\u00fb\2\2\u161c\u161e\5\f\7\2\u161d"+
		"\u161c\3\2\2\2\u161e\u161f\3\2\2\2\u161f\u161d\3\2\2\2\u161f\u1620\3\2"+
		"\2\2\u1620\u1622\3\2\2\2\u1621\u161b\3\2\2\2\u1621\u1622\3\2\2\2\u1622"+
		"\u1629\3\2\2\2\u1623\u1625\7\u00d6\2\2\u1624\u1626\5\f\7\2\u1625\u1624"+
		"\3\2\2\2\u1626\u1627\3\2\2\2\u1627\u1625\3\2\2\2\u1627\u1628\3\2\2\2\u1628"+
		"\u162a\3\2\2\2\u1629\u1623\3\2\2\2\u1629\u162a\3\2\2\2\u162a\u162b\3\2"+
		"\2\2\u162b\u162c\5\u01a8\u00d5\2\u162c\u16c4\3\2\2\2\u162d\u162f\7\u00f8"+
		"\2\2\u162e\u1630\5\f\7\2\u162f\u162e\3\2\2\2\u1630\u1631\3\2\2\2\u1631"+
		"\u162f\3\2\2\2\u1631\u1632\3\2\2\2\u1632\u1633\3\2\2\2\u1633\u1635\7\u00bf"+
		"\2\2\u1634\u1636\5\f\7\2\u1635\u1634\3\2\2\2\u1636\u1637\3\2\2\2\u1637"+
		"\u1635\3\2\2\2\u1637\u1638\3\2\2\2\u1638\u163f\3\2\2\2\u1639\u163b\7\u00d6"+
		"\2\2\u163a\u163c\5\f\7\2\u163b\u163a\3\2\2\2\u163c\u163d\3\2\2\2\u163d"+
		"\u163b\3\2\2\2\u163d\u163e\3\2\2\2\u163e\u1640\3\2\2\2\u163f\u1639\3\2"+
		"\2\2\u163f\u1640\3\2\2\2\u1640\u1641\3\2\2\2\u1641\u1642\5\u01a6\u00d4"+
		"\2\u1642\u16c4\3\2\2\2\u1643\u1645\7\u0179\2\2\u1644\u1646\5\f\7\2\u1645"+
		"\u1644\3\2\2\2\u1646\u1647\3\2\2\2\u1647\u1645\3\2\2\2\u1647\u1648\3\2"+
		"\2\2\u1648\u164f\3\2\2\2\u1649\u164b\7\u00d6\2\2\u164a\u164c\5\f\7\2\u164b"+
		"\u164a\3\2\2\2\u164c\u164d\3\2\2\2\u164d\u164b\3\2\2\2\u164d\u164e\3\2"+
		"\2\2\u164e\u1650\3\2\2\2\u164f\u1649\3\2\2\2\u164f\u1650\3\2\2\2\u1650"+
		"\u1651\3\2\2\2\u1651\u1652\5\u01a2\u00d2\2\u1652\u16c4\3\2\2\2\u1653\u1655"+
		"\7\u0182\2\2\u1654\u1656\5\f\7\2\u1655\u1654\3\2\2\2\u1656\u1657\3\2\2"+
		"\2\u1657\u1655\3\2\2\2\u1657\u1658\3\2\2\2\u1658\u165f\3\2\2\2\u1659\u165b"+
		"\7\u00d6\2\2\u165a\u165c\5\f\7\2\u165b\u165a\3\2\2\2\u165c\u165d\3\2\2"+
		"\2\u165d\u165b\3\2\2\2\u165d\u165e\3\2\2\2\u165e\u1660\3\2\2\2\u165f\u1659"+
		"\3\2\2\2\u165f\u1660\3\2\2\2\u1660\u1662\3\2\2\2\u1661\u1653\3\2\2\2\u1661"+
		"\u1662\3\2\2\2\u1662\u1663\3\2\2\2\u1663\u16c4\7x\2\2\u1664\u1666\7,\2"+
		"\2\u1665\u1667\5\f\7\2\u1666\u1665\3\2\2\2\u1667\u1668\3\2\2\2\u1668\u1666"+
		"\3\2\2\2\u1668\u1669\3\2\2\2\u1669\u1670\3\2\2\2\u166a\u166c\7\u0189\2"+
		"\2\u166b\u166d\5\f\7\2\u166c\u166b\3\2\2\2\u166d\u166e\3\2\2\2\u166e\u166c"+
		"\3\2\2\2\u166e\u166f\3\2\2\2\u166f\u1671\3\2\2\2\u1670\u166a\3\2\2\2\u1670"+
		"\u1671\3\2\2\2\u1671\u1672\3\2\2\2\u1672\u1673\7\u0191\2\2\u1673\u16c4"+
		"\3\2\2\2\u1674\u1676\7A\2\2\u1675\u1677\5\f\7\2\u1676\u1675\3\2\2\2\u1677"+
		"\u1678\3\2\2\2\u1678\u1676\3\2\2\2\u1678\u1679\3\2\2\2\u1679\u1680\3\2"+
		"\2\2\u167a\u167c\7\u00fb\2\2\u167b\u167d\5\f\7\2\u167c\u167b\3\2\2\2\u167d"+
		"\u167e\3\2\2\2\u167e\u167c\3\2\2\2\u167e\u167f\3\2\2\2\u167f\u1681\3\2"+
		"\2\2\u1680\u167a\3\2\2\2\u1680\u1681\3\2\2\2\u1681\u1688\3\2\2\2\u1682"+
		"\u1684\7\u00d6\2\2\u1683\u1685\5\f\7\2\u1684\u1683\3\2\2\2\u1685\u1686"+
		"\3\2\2\2\u1686\u1684\3\2\2\2\u1686\u1687\3\2\2\2\u1687\u1689\3\2\2\2\u1688"+
		"\u1682\3\2\2\2\u1688\u1689\3\2\2\2\u1689\u168a\3\2\2\2\u168a\u168b\5\u01a0"+
		"\u00d1\2\u168b\u16c4\3\2\2\2\u168c\u1694\7\u00bf\2\2\u168d\u168f\5\f\7"+
		"\2\u168e\u168d\3\2\2\2\u168f\u1690\3\2\2\2\u1690\u168e\3\2\2\2\u1690\u1691"+
		"\3\2\2\2\u1691\u1692\3\2\2\2\u1692\u1693\7\u00cc\2\2\u1693\u1695\3\2\2"+
		"\2\u1694\u168e\3\2\2\2\u1694\u1695\3\2\2\2\u1695\u16c4\3\2\2\2\u1696\u169e"+
		"\t\25\2\2\u1697\u1699\5\f\7\2\u1698\u1697\3\2\2\2\u1699\u169a\3\2\2\2"+
		"\u169a\u1698\3\2\2\2\u169a\u169b\3\2\2\2\u169b\u169c\3\2\2\2\u169c\u169d"+
		"\7\u0140\2\2\u169d\u169f\3\2\2\2\u169e\u1698\3\2\2\2\u169e\u169f\3\2\2"+
		"\2\u169f\u16c4\3\2\2\2\u16a0\u16c4\5\u01c0\u00e1\2\u16a1\u16c4\5\u0194"+
		"\u00cb\2\u16a2\u16a4\7\u0155\2\2\u16a3\u16a5\5\f\7\2\u16a4\u16a3\3\2\2"+
		"\2\u16a5\u16a6\3\2\2\2\u16a6\u16a4\3\2\2\2\u16a6\u16a7\3\2\2\2\u16a7\u16ae"+
		"\3\2\2\2\u16a8\u16aa\7\u00d6\2\2\u16a9\u16ab\5\f\7\2\u16aa\u16a9\3\2\2"+
		"\2\u16ab\u16ac\3\2\2\2\u16ac\u16aa\3\2\2\2\u16ac\u16ad\3\2\2\2\u16ad\u16af"+
		"\3\2\2\2\u16ae\u16a8\3\2\2\2\u16ae\u16af\3\2\2\2\u16af\u16b0\3\2\2\2\u16b0"+
		"\u16b1\5\u019e\u00d0\2\u16b1\u16c4\3\2\2\2\u16b2\u16b4\7\u0185\2\2\u16b3"+
		"\u16b5\5\f\7\2\u16b4\u16b3\3\2\2\2\u16b5\u16b6\3\2\2\2\u16b6\u16b4\3\2"+
		"\2\2\u16b6\u16b7\3\2\2\2\u16b7\u16be\3\2\2\2\u16b8\u16ba\7\u00d6\2\2\u16b9"+
		"\u16bb\5\f\7\2\u16ba\u16b9\3\2\2\2\u16bb\u16bc\3\2\2\2\u16bc\u16ba\3\2"+
		"\2\2\u16bc\u16bd\3\2\2\2\u16bd\u16bf\3\2\2\2\u16be\u16b8\3\2\2\2\u16be"+
		"\u16bf\3\2\2\2\u16bf\u16c0\3\2\2\2\u16c0\u16c1\5\u017a\u00be\2\u16c1\u16c4"+
		"\3\2\2\2\u16c2\u16c4\5\u0196\u00cc\2\u16c3\u1615\3\2\2\2\u16c3\u162d\3"+
		"\2\2\2\u16c3\u1643\3\2\2\2\u16c3\u1661\3\2\2\2\u16c3\u1664\3\2\2\2\u16c3"+
		"\u1674\3\2\2\2\u16c3\u168c\3\2\2\2\u16c3\u1696\3\2\2\2\u16c3\u16a0\3\2"+
		"\2\2\u16c3\u16a1\3\2\2\2\u16c3\u16a2\3\2\2\2\u16c3\u16b2\3\2\2\2\u16c3"+
		"\u16c2\3\2\2\2\u16c4\u0193\3\2\2\2\u16c5\u16cd\7\u0150\2\2\u16c6\u16c8"+
		"\5\f\7\2\u16c7\u16c6\3\2\2\2\u16c8\u16c9\3\2\2\2\u16c9\u16c7\3\2\2\2\u16c9"+
		"\u16ca\3\2\2\2\u16ca\u16cb\3\2\2\2\u16cb\u16cc\7\u00d6\2\2\u16cc\u16ce"+
		"\3\2\2\2\u16cd\u16c7\3\2\2\2\u16cd\u16ce\3\2\2\2\u16ce\u16d0\3\2\2\2\u16cf"+
		"\u16d1\5\f\7\2\u16d0\u16cf\3\2\2\2\u16d1\u16d2\3\2\2\2\u16d2\u16d0\3\2"+
		"\2\2\u16d2\u16d3\3\2\2\2\u16d3\u16d5\3\2\2\2\u16d4\u16c5\3\2\2\2\u16d4"+
		"\u16d5\3\2\2\2\u16d5\u16d6\3\2\2\2\u16d6\u16e6\t\27\2\2\u16d7\u16d9\5"+
		"\f\7\2\u16d8\u16d7\3\2\2\2\u16d9\u16da\3\2\2\2\u16da\u16d8\3\2\2\2\u16da"+
		"\u16db\3\2\2\2\u16db\u16dc\3\2\2\2\u16dc\u16e4\7\u014c\2\2\u16dd\u16df"+
		"\5\f\7\2\u16de\u16dd\3\2\2\2\u16df\u16e0\3\2\2\2\u16e0\u16de\3\2\2\2\u16e0"+
		"\u16e1\3\2\2\2\u16e1\u16e2\3\2\2\2\u16e2\u16e3\79\2\2\u16e3\u16e5\3\2"+
		"\2\2\u16e4\u16de\3\2\2\2\u16e4\u16e5\3\2\2\2\u16e5\u16e7\3\2\2\2\u16e6"+
		"\u16d8\3\2\2\2\u16e6\u16e7\3\2\2\2\u16e7\u0195\3\2\2\2\u16e8\u16ea\7\u0163"+
		"\2\2\u16e9\u16eb\5\f\7\2\u16ea\u16e9\3\2\2\2\u16eb\u16ec\3\2\2\2\u16ec"+
		"\u16ea\3\2\2\2\u16ec\u16ed\3\2\2\2\u16ed\u16ee\3\2\2\2\u16ee\u16f8\5\u019c"+
		"\u00cf\2\u16ef\u16f1\5\f\7\2\u16f0\u16ef\3\2\2\2\u16f1\u16f2\3\2\2\2\u16f2"+
		"\u16f0\3\2\2\2\u16f2\u16f3\3\2\2\2\u16f3\u16f4\3\2\2\2\u16f4\u16f5\5\u019c"+
		"\u00cf\2\u16f5\u16f7\3\2\2\2\u16f6\u16f0\3\2\2\2\u16f7\u16fa\3\2\2\2\u16f8"+
		"\u16f6\3\2\2\2\u16f8\u16f9\3\2\2\2\u16f9\u1702\3\2\2\2\u16fa\u16f8\3\2"+
		"\2\2\u16fb\u16fd\5\f\7\2\u16fc\u16fb\3\2\2\2\u16fd\u16fe\3\2\2\2\u16fe"+
		"\u16fc\3\2\2\2\u16fe\u16ff\3\2\2\2\u16ff\u1700\3\2\2\2\u1700\u1701\7\u0181"+
		"\2\2\u1701\u1703\3\2\2\2\u1702\u16fc\3\2\2\2\u1702\u1703\3\2\2\2\u1703"+
		"\u170d\3\2\2\2\u1704\u1706\5\f\7\2\u1705\u1704\3\2\2\2\u1706\u1707\3\2"+
		"\2\2\u1707\u1705\3\2\2\2\u1707\u1708\3\2\2\2\u1708\u1709\3\2\2\2\u1709"+
		"\u170a\5\u019a\u00ce\2\u170a\u170c\3\2\2\2\u170b\u1705\3\2\2\2\u170c\u170f"+
		"\3\2\2\2\u170d\u170b\3\2\2\2\u170d\u170e\3\2\2\2\u170e\u1711\3\2\2\2\u170f"+
		"\u170d\3\2\2\2\u1710\u16e8\3\2\2\2\u1711\u1712\3\2\2\2\u1712\u1710\3\2"+
		"\2\2\u1712\u1713\3\2\2\2\u1713\u172a\3\2\2\2\u1714\u1716\5\f\7\2\u1715"+
		"\u1714\3\2\2\2\u1716\u1719\3\2\2\2\u1717\u1715\3\2\2\2\u1717\u1718\3\2"+
		"\2\2\u1718\u171a\3\2\2\2\u1719\u1717\3\2\2\2\u171a\u171c\7\u0138\2\2\u171b"+
		"\u171d\5\f\7\2\u171c\u171b\3\2\2\2\u171d\u171e\3\2\2\2\u171e\u171c\3\2"+
		"\2\2\u171e\u171f\3\2\2\2\u171f\u1726\3\2\2\2\u1720\u1722\7\u0102\2\2\u1721"+
		"\u1723\5\f\7\2\u1722\u1721\3\2\2\2\u1723\u1724\3\2\2\2\u1724\u1722\3\2"+
		"\2\2\u1724\u1725\3\2\2\2\u1725\u1727\3\2\2\2\u1726\u1720\3\2\2\2\u1726"+
		"\u1727\3\2\2\2\u1727\u1728\3\2\2\2\u1728\u1729\5\u0198\u00cd\2\u1729\u172b"+
		"\3\2\2\2\u172a\u1717\3\2\2\2\u172a\u172b\3\2\2\2\u172b\u0197\3\2\2\2\u172c"+
		"\u172d\t\30\2\2\u172d\u0199\3\2\2\2\u172e\u172f\7\u01c4\2\2\u172f\u019b"+
		"\3\2\2\2\u1730\u1731\7\u01c4\2\2\u1731\u019d\3\2\2\2\u1732\u1733\5\u023e"+
		"\u0120\2\u1733\u019f\3\2\2\2\u1734\u1735\7\u01c2\2\2\u1735\u01a1\3\2\2"+
		"\2\u1736\u1738\7\u0132\2\2\u1737\u1739\5\f\7\2\u1738\u1737\3\2\2\2\u1739"+
		"\u173a\3\2\2\2\u173a\u1738\3\2\2\2\u173a\u173b\3\2\2\2\u173b\u173c\3\2"+
		"\2\2\u173c\u173d\7\u00c0\2\2\u173d\u1781\3\2\2\2\u173e\u1781\7\u013f\2"+
		"\2\u173f\u1741\7\u010c\2\2\u1740\u1742\5\f\7\2\u1741\u1740\3\2\2\2\u1742"+
		"\u1743\3\2\2\2\u1743\u1741\3\2\2\2\u1743\u1744\3\2\2\2\u1744\u1745\3\2"+
		"\2\2\u1745\u1746\7\u00c0\2\2\u1746\u1781\3\2\2\2\u1747\u1781\7\u0111\2"+
		"\2\u1748\u174a\7Z\2\2\u1749\u174b\5\f\7\2\u174a\u1749\3\2\2\2\u174b\u174c"+
		"\3\2\2\2\u174c\u174a\3\2\2\2\u174c\u174d\3\2\2\2\u174d\u174e\3\2\2\2\u174e"+
		"\u174f\7\u00c0\2\2\u174f\u1752\3\2\2\2\u1750\u1752\78\2\2\u1751\u1748"+
		"\3\2\2\2\u1751\u1750\3\2\2\2\u1752\u1754\3\2\2\2\u1753\u1755\5\f\7\2\u1754"+
		"\u1753\3\2\2\2\u1755\u1756\3\2\2\2\u1756\u1754\3\2\2\2\u1756\u1757\3\2"+
		"\2\2\u1757\u1758\3\2\2\2\u1758\u1759\5\u01a4\u00d3\2\u1759\u1781\3\2\2"+
		"\2\u175a\u1781\7v\2\2\u175b\u1781\7k\2\2\u175c\u175e\7Z\2\2\u175d\u175f"+
		"\5\f\7\2\u175e\u175d\3\2\2\2\u175f\u1760\3\2\2\2\u1760\u175e\3\2\2\2\u1760"+
		"\u1761\3\2\2\2\u1761\u1762\3\2\2\2\u1762\u1763\7\u00b4\2\2\u1763\u1766"+
		"\3\2\2\2\u1764\u1766\7\67\2\2\u1765\u175c\3\2\2\2\u1765\u1764\3\2\2\2"+
		"\u1766\u1768\3\2\2\2\u1767\u1769\5\f\7\2\u1768\u1767\3\2\2\2\u1769\u176a"+
		"\3\2\2\2\u176a\u1768\3\2\2\2\u176a\u176b\3\2\2\2\u176b\u176c\3\2\2\2\u176c"+
		"\u176d\5\u01a4\u00d3\2\u176d\u1781\3\2\2\2\u176e\u1770\7\u010c\2\2\u176f"+
		"\u1771\5\f\7\2\u1770\u176f\3\2\2\2\u1771\u1772\3\2\2\2\u1772\u1770\3\2"+
		"\2\2\u1772\u1773\3\2\2\2\u1773\u1774\3\2\2\2\u1774\u1775\7\u00b4\2\2\u1775"+
		"\u1781\3\2\2\2\u1776\u1781\7\u0110\2\2\u1777\u1779\7\u0132\2\2\u1778\u177a"+
		"\5\f\7\2\u1779\u1778\3\2\2\2\u177a\u177b\3\2\2\2\u177b\u1779\3\2\2\2\u177b"+
		"\u177c\3\2\2\2\u177c\u177d\3\2\2\2\u177d\u177e\7\u00b4\2\2\u177e\u1781"+
		"\3\2\2\2\u177f\u1781\7\u013e\2\2\u1780\u1736\3\2\2\2\u1780\u173e\3\2\2"+
		"\2\u1780\u173f\3\2\2\2\u1780\u1747\3\2\2\2\u1780\u1751\3\2\2\2\u1780\u175a"+
		"\3\2\2\2\u1780\u175b\3\2\2\2\u1780\u1765\3\2\2\2\u1780\u176e\3\2\2\2\u1780"+
		"\u1776\3\2\2\2\u1780\u1777\3\2\2\2\u1780\u177f\3\2\2\2\u1781\u01a3\3\2"+
		"\2\2\u1782\u1783\t\30\2\2\u1783\u01a5\3\2\2\2\u1784\u1796\5\u01aa\u00d6"+
		"\2\u1785\u1787\7\u0114\2\2\u1786\u1788\5\f\7\2\u1787\u1786\3\2\2\2\u1788"+
		"\u1789\3\2\2\2\u1789\u1787\3\2\2\2\u1789\u178a\3\2\2\2\u178a\u178b\3\2"+
		"\2\2\u178b\u178c\5\u01aa\u00d6\2\u178c\u1796\3\2\2\2\u178d\u178f\7\u00f8"+
		"\2\2\u178e\u1790\5\f\7\2\u178f\u178e\3\2\2\2\u1790\u1791\3\2\2\2\u1791"+
		"\u178f\3\2\2\2\u1791\u1792\3\2\2\2\u1792\u1793\3\2\2\2\u1793\u1794\7\u010c"+
		"\2\2\u1794\u1796\3\2\2\2\u1795\u1784\3\2\2\2\u1795\u1785\3\2\2\2\u1795"+
		"\u178d\3\2\2\2\u1796\u01a7\3\2\2\2\u1797\u17ad\5\u01aa\u00d6\2\u1798\u179a"+
		"\5\f\7\2\u1799\u1798\3\2\2\2\u179a\u179b\3\2\2\2\u179b\u1799\3\2\2\2\u179b"+
		"\u179c\3\2\2\2\u179c\u17a3\3\2\2\2\u179d\u179f\7\u0102\2\2\u179e\u17a0"+
		"\5\f\7\2\u179f\u179e\3\2\2\2\u17a0\u17a1\3\2\2\2\u17a1\u179f\3\2\2\2\u17a1"+
		"\u17a2\3\2\2\2\u17a2\u17a4\3\2\2\2\u17a3\u179d\3\2\2\2\u17a3\u17a4\3\2"+
		"\2\2\u17a4\u17a5\3\2\2\2\u17a5\u17a7\7\u00f8\2\2\u17a6\u17a8\5\f\7\2\u17a7"+
		"\u17a6\3\2\2\2\u17a8\u17a9\3\2\2\2\u17a9\u17a7\3\2\2\2\u17a9\u17aa\3\2"+
		"\2\2\u17aa\u17ab\3\2\2\2\u17ab\u17ac\7\u010c\2\2\u17ac\u17ae\3\2\2\2\u17ad"+
		"\u1799\3\2\2\2\u17ad\u17ae\3\2\2\2\u17ae\u17b8\3\2\2\2\u17af\u17b1\7\u0114"+
		"\2\2\u17b0\u17b2\5\f\7\2\u17b1\u17b0\3\2\2\2\u17b2\u17b3\3\2\2\2\u17b3"+
		"\u17b1\3\2\2\2\u17b3\u17b4\3\2\2\2\u17b4\u17b5\3\2\2\2\u17b5\u17b6\5\u01aa"+
		"\u00d6\2\u17b6\u17b8\3\2\2\2\u17b7\u1797\3\2\2\2\u17b7\u17af\3\2\2\2\u17b8"+
		"\u01a9\3\2\2\2\u17b9\u17ba\7\u01c2\2\2\u17ba\u01ab\3\2\2\2\u17bb\u17bd"+
		"\7\u00d6\2\2\u17bc\u17be\5\f\7\2\u17bd\u17bc\3\2\2\2\u17be\u17bf\3\2\2"+
		"\2\u17bf\u17bd\3\2\2\2\u17bf\u17c0\3\2\2\2\u17c0\u17c2\3\2\2\2\u17c1\u17bb"+
		"\3\2\2\2\u17c1\u17c2\3\2\2\2\u17c2\u17c3\3\2\2\2\u17c3\u187a\7\u00bc\2"+
		"\2\u17c4\u17c6\7>\2\2\u17c5\u17c7\5\f\7\2\u17c6\u17c5\3\2\2\2\u17c7\u17c8"+
		"\3\2\2\2\u17c8\u17c6\3\2\2\2\u17c8\u17c9\3\2\2\2\u17c9\u17ca\3\2\2\2\u17ca"+
		"\u17cb\5\u01ba\u00de\2\u17cb\u187a\3\2\2\2\u17cc\u17d4\7Z\2\2\u17cd\u17cf"+
		"\5\f\7\2\u17ce\u17cd\3\2\2\2\u17cf\u17d0\3\2\2\2\u17d0\u17ce\3\2\2\2\u17d0"+
		"\u17d1\3\2\2\2\u17d1\u17d2\3\2\2\2\u17d2\u17d3\7\u00d6\2\2\u17d3\u17d5"+
		"\3\2\2\2\u17d4\u17ce\3\2\2\2\u17d4\u17d5\3\2\2\2\u17d5\u17e1\3\2\2\2\u17d6"+
		"\u17de\7[\2\2\u17d7\u17d9\5\f\7\2\u17d8\u17d7\3\2\2\2\u17d9\u17da\3\2"+
		"\2\2\u17da\u17d8\3\2\2\2\u17da\u17db\3\2\2\2\u17db\u17dc\3\2\2\2\u17dc"+
		"\u17dd\7\26\2\2\u17dd\u17df\3\2\2\2\u17de\u17d8\3\2\2\2\u17de\u17df\3"+
		"\2\2\2\u17df\u17e1\3\2\2\2\u17e0\u17cc\3\2\2\2\u17e0\u17d6\3\2\2\2\u17e1"+
		"\u17e3\3\2\2\2\u17e2\u17e4\5\f\7\2\u17e3\u17e2\3\2\2\2\u17e4\u17e5\3\2"+
		"\2\2\u17e5\u17e3\3\2\2\2\u17e5\u17e6\3\2\2\2\u17e6\u1801\3\2\2\2\u17e7"+
		"\u17f1\5\u01b8\u00dd\2\u17e8\u17ea\5\f\7\2\u17e9\u17e8\3\2\2\2\u17ea\u17ed"+
		"\3\2\2\2\u17eb\u17e9\3\2\2\2\u17eb\u17ec\3\2\2\2\u17ec\u17ee\3\2\2\2\u17ed"+
		"\u17eb\3\2\2\2\u17ee\u17f0\5\u01b8\u00dd\2\u17ef\u17eb\3\2\2\2\u17f0\u17f3"+
		"\3\2\2\2\u17f1\u17ef\3\2\2\2\u17f1\u17f2\3\2\2\2\u17f2\u1802\3\2\2\2\u17f3"+
		"\u17f1\3\2\2\2\u17f4\u17fe\7\u00af\2\2\u17f5\u17f7\5\f\7\2\u17f6\u17f5"+
		"\3\2\2\2\u17f7\u17fa\3\2\2\2\u17f8\u17f6\3\2\2\2\u17f8\u17f9\3\2\2\2\u17f9"+
		"\u17fb\3\2\2\2\u17fa\u17f8\3\2\2\2\u17fb\u17fd\5\u01b8\u00dd\2\u17fc\u17f8"+
		"\3\2\2\2\u17fd\u1800\3\2\2\2\u17fe\u17fc\3\2\2\2\u17fe\u17ff\3\2\2\2\u17ff"+
		"\u1802\3\2\2\2\u1800\u17fe\3\2\2\2\u1801\u17e7\3\2\2\2\u1801\u17f4\3\2"+
		"\2\2\u1802\u187a\3\2\2\2\u1803\u1805\7\u010c\2\2\u1804\u1806\5\f\7\2\u1805"+
		"\u1804\3\2\2\2\u1806\u1807\3\2\2\2\u1807\u1805\3\2\2\2\u1807\u1808\3\2"+
		"\2\2\u1808\u1825\3\2\2\2\u1809\u180b\7\u00e1\2\2\u180a\u180c\5\f\7\2\u180b"+
		"\u180a\3\2\2\2\u180c\u180d\3\2\2\2\u180d\u180b\3\2\2\2\u180d\u180e\3\2"+
		"\2\2\u180e\u1815\3\2\2\2\u180f\u1811\7\u00d6\2\2\u1810\u1812\5\f\7\2\u1811"+
		"\u1810\3\2\2\2\u1812\u1813\3\2\2\2\u1813\u1811\3\2\2\2\u1813\u1814\3\2"+
		"\2\2\u1814\u1816\3\2\2\2\u1815\u180f\3\2\2\2\u1815\u1816\3\2\2\2\u1816"+
		"\u1826\3\2\2\2\u1817\u1819\7\u00e2\2\2\u1818\u181a\5\f\7\2\u1819\u1818"+
		"\3\2\2\2\u181a\u181b\3\2\2\2\u181b\u1819\3\2\2\2\u181b\u181c\3\2\2\2\u181c"+
		"\u1823\3\2\2\2\u181d\u181f\7\26\2\2\u181e\u1820\5\f\7\2\u181f\u181e\3"+
		"\2\2\2\u1820\u1821\3\2\2\2\u1821\u181f\3\2\2\2\u1821\u1822\3\2\2\2\u1822"+
		"\u1824\3\2\2\2\u1823\u181d\3\2\2\2\u1823\u1824\3\2\2\2\u1824\u1826\3\2"+
		"\2\2\u1825\u1809\3\2\2\2\u1825\u1817\3\2\2\2\u1825\u1826\3\2\2\2\u1826"+
		"\u1827\3\2\2\2\u1827\u182f\5\u01b6\u00dc\2\u1828\u182a\5\f\7\2\u1829\u1828"+
		"\3\2\2\2\u182a\u182b\3\2\2\2\u182b\u1829\3\2\2\2\u182b\u182c\3\2\2\2\u182c"+
		"\u182d\3\2\2\2\u182d\u182e\t\31\2\2\u182e\u1830\3\2\2\2\u182f\u1829\3"+
		"\2\2\2\u182f\u1830\3\2\2\2\u1830\u183e\3\2\2\2\u1831\u1833\5\f\7\2\u1832"+
		"\u1831\3\2\2\2\u1833\u1834\3\2\2\2\u1834\u1832\3\2\2\2\u1834\u1835\3\2"+
		"\2\2\u1835\u1836\3\2\2\2\u1836\u1838\7\u00c0\2\2\u1837\u1839\5\f\7\2\u1838"+
		"\u1837\3\2\2\2\u1839\u183a\3\2\2\2\u183a\u1838\3\2\2\2\u183a\u183b\3\2"+
		"\2\2\u183b\u183c\3\2\2\2\u183c\u183d\5\u01b4\u00db\2\u183d\u183f\3\2\2"+
		"\2\u183e\u1832\3\2\2\2\u183e\u183f\3\2\2\2\u183f\u1853\3\2\2\2\u1840\u1842"+
		"\5\f\7\2\u1841\u1840\3\2\2\2\u1842\u1843\3\2\2\2\u1843\u1841\3\2\2\2\u1843"+
		"\u1844\3\2\2\2\u1844\u1845\3\2\2\2\u1845\u1847\7\u00b0\2\2\u1846\u1848"+
		"\5\f\7\2\u1847\u1846\3\2\2\2\u1848\u1849\3\2\2\2\u1849\u1847\3\2\2\2\u1849"+
		"\u184a\3\2\2\2\u184a\u184b\3\2\2\2\u184b\u184d\7v\2\2\u184c\u184e\5\f"+
		"\7\2\u184d\u184c\3\2\2\2\u184e\u184f\3\2\2\2\u184f\u184d\3\2\2\2\u184f"+
		"\u1850\3\2\2\2\u1850\u1851\3\2\2\2\u1851\u1852\5\u01b2\u00da\2\u1852\u1854"+
		"\3\2\2\2\u1853\u1841\3\2\2\2\u1853\u1854\3\2\2\2\u1854\u1868\3\2\2\2\u1855"+
		"\u1857\5\f\7\2\u1856\u1855\3\2\2\2\u1857\u1858\3\2\2\2\u1858\u1856\3\2"+
		"\2\2\u1858\u1859\3\2\2\2\u1859\u185a\3\2\2\2\u185a\u185c\7\u00dd\2\2\u185b"+
		"\u185d\5\f\7\2\u185c\u185b\3\2\2\2\u185d\u185e\3\2\2\2\u185e\u185c\3\2"+
		"\2\2\u185e\u185f\3\2\2\2\u185f\u1860\3\2\2\2\u1860\u1862\7v\2\2\u1861"+
		"\u1863\5\f\7\2\u1862\u1861\3\2\2\2\u1863\u1864\3\2\2\2\u1864\u1862\3\2"+
		"\2\2\u1864\u1865\3\2\2\2\u1865\u1866\3\2\2\2\u1866\u1867\5\u01b0\u00d9"+
		"\2\u1867\u1869\3\2\2\2\u1868\u1856\3\2\2\2\u1868\u1869\3\2\2\2\u1869\u1877"+
		"\3\2\2\2\u186a\u186c\5\f\7\2\u186b\u186a\3\2\2\2\u186c\u186d\3\2\2\2\u186d"+
		"\u186b\3\2\2\2\u186d\u186e\3\2\2\2\u186e\u186f\3\2\2\2\u186f\u1871\7\u00b4"+
		"\2\2\u1870\u1872\5\f\7\2\u1871\u1870\3\2\2\2\u1872\u1873\3\2\2\2\u1873"+
		"\u1871\3\2\2\2\u1873\u1874\3\2\2\2\u1874\u1875\3\2\2\2\u1875\u1876\5\u01ae"+
		"\u00d8\2\u1876\u1878\3\2\2\2\u1877\u186b\3\2\2\2\u1877\u1878\3\2\2\2\u1878"+
		"\u187a\3\2\2\2\u1879\u17c1\3\2\2\2\u1879\u17c4\3\2\2\2\u1879\u17e0\3\2"+
		"\2\2\u1879\u1803\3\2\2\2\u187a\u01ad\3\2\2\2\u187b\u187c\7\u01c2\2\2\u187c"+
		"\u01af\3\2\2\2\u187d\u187e\7\u01c2\2\2\u187e\u01b1\3\2\2\2\u187f\u1880"+
		"\7\u01c2\2\2\u1880\u01b3\3\2\2\2\u1881\u1882\7\u01c2\2\2\u1882\u01b5\3"+
		"\2\2\2\u1883\u1884\7\u01c2\2\2\u1884\u01b7\3\2\2\2\u1885\u1886\5\u023e"+
		"\u0120\2\u1886\u01b9\3\2\2\2\u1887\u1888\7\u01c1\2\2\u1888\u01bb\3\2\2"+
		"\2\u1889\u1891\7\u0182\2\2\u188a\u188c\5\f\7\2\u188b\u188a\3\2\2\2\u188c"+
		"\u188d\3\2\2\2\u188d\u188b\3\2\2\2\u188d\u188e\3\2\2\2\u188e\u188f\3\2"+
		"\2\2\u188f\u1890\7\u00d6\2\2\u1890\u1892\3\2\2\2\u1891\u188b\3\2\2\2\u1891"+
		"\u1892\3\2\2\2\u1892\u1894\3\2\2\2\u1893\u1895\5\f\7\2\u1894\u1893\3\2"+
		"\2\2\u1895\u1896\3\2\2\2\u1896\u1894\3\2\2\2\u1896\u1897\3\2\2\2\u1897"+
		"\u1899\3\2\2\2\u1898\u1889\3\2\2\2\u1898\u1899\3\2\2\2\u1899\u189a\3\2"+
		"\2\2\u189a\u189b\5\u01be\u00e0\2\u189b\u01bd\3\2\2\2\u189c\u18dc\7\'\2"+
		"\2\u189d\u18a5\7(\2\2\u189e\u18a0\5\f\7\2\u189f\u189e\3\2\2\2\u18a0\u18a1"+
		"\3\2\2\2\u18a1\u189f\3\2\2\2\u18a1\u18a2\3\2\2\2\u18a2\u18a3\3\2\2\2\u18a3"+
		"\u18a4\t\32\2\2\u18a4\u18a6\3\2\2\2\u18a5\u189f\3\2\2\2\u18a5\u18a6\3"+
		"\2\2\2\u18a6\u18dc\3\2\2\2\u18a7\u18af\7+\2\2\u18a8\u18aa\5\f\7\2\u18a9"+
		"\u18a8\3\2\2\2\u18aa\u18ab\3\2\2\2\u18ab\u18a9\3\2\2\2\u18ab\u18ac\3\2"+
		"\2\2\u18ac\u18ad\3\2\2\2\u18ad\u18ae\t\32\2\2\u18ae\u18b0\3\2\2\2\u18af"+
		"\u18a9\3\2\2\2\u18af\u18b0\3\2\2\2\u18b0\u18dc\3\2\2\2\u18b1\u18b9\7*"+
		"\2\2\u18b2\u18b4\5\f\7\2\u18b3\u18b2\3\2\2\2\u18b4\u18b5\3\2\2\2\u18b5"+
		"\u18b3\3\2\2\2\u18b5\u18b6\3\2\2\2\u18b6\u18b7\3\2\2\2\u18b7\u18b8\t\32"+
		"\2\2\u18b8\u18ba\3\2\2\2\u18b9\u18b3\3\2\2\2";
	private static final String _serializedATNSegment3 =
		"\u18b9\u18ba\3\2\2\2\u18ba\u18dc\3\2\2\2\u18bb\u18c3\7)\2\2\u18bc\u18be"+
		"\5\f\7\2\u18bd\u18bc\3\2\2\2\u18be\u18bf\3\2\2\2\u18bf\u18bd\3\2\2\2\u18bf"+
		"\u18c0\3\2\2\2\u18c0\u18c1\3\2\2\2\u18c1\u18c2\t\32\2\2\u18c2\u18c4\3"+
		"\2\2\2\u18c3\u18bd\3\2\2\2\u18c3\u18c4\3\2\2\2\u18c4\u18dc\3\2\2\2\u18c5"+
		"\u18dc\7E\2\2\u18c6\u18dc\7F\2\2\u18c7\u18dc\7G\2\2\u18c8\u18dc\7H\2\2"+
		"\u18c9\u18dc\7I\2\2\u18ca\u18dc\7J\2\2\u18cb\u18dc\7K\2\2\u18cc\u18dc"+
		"\7D\2\2\u18cd\u18dc\7M\2\2\u18ce\u18dc\7N\2\2\u18cf\u18dc\7O\2\2\u18d0"+
		"\u18dc\7P\2\2\u18d1\u18dc\7Q\2\2\u18d2\u18dc\7R\2\2\u18d3\u18dc\7x\2\2"+
		"\u18d4\u18dc\7\u00b3\2\2\u18d5\u18dc\7\u00b2\2\2\u18d6\u18dc\7\u00b1\2"+
		"\2\u18d7\u18dc\7\u00ca\2\2\u18d8\u18dc\7\u010a\2\2\u18d9\u18dc\7\u0115"+
		"\2\2\u18da\u18dc\7\u0116\2\2\u18db\u189c\3\2\2\2\u18db\u189d\3\2\2\2\u18db"+
		"\u18a7\3\2\2\2\u18db\u18b1\3\2\2\2\u18db\u18bb\3\2\2\2\u18db\u18c5\3\2"+
		"\2\2\u18db\u18c6\3\2\2\2\u18db\u18c7\3\2\2\2\u18db\u18c8\3\2\2\2\u18db"+
		"\u18c9\3\2\2\2\u18db\u18ca\3\2\2\2\u18db\u18cb\3\2\2\2\u18db\u18cc\3\2"+
		"\2\2\u18db\u18cd\3\2\2\2\u18db\u18ce\3\2\2\2\u18db\u18cf\3\2\2\2\u18db"+
		"\u18d0\3\2\2\2\u18db\u18d1\3\2\2\2\u18db\u18d2\3\2\2\2\u18db\u18d3\3\2"+
		"\2\2\u18db\u18d4\3\2\2\2\u18db\u18d5\3\2\2\2\u18db\u18d6\3\2\2\2\u18db"+
		"\u18d7\3\2\2\2\u18db\u18d8\3\2\2\2\u18db\u18d9\3\2\2\2\u18db\u18da\3\2"+
		"\2\2\u18dc\u01bf\3\2\2\2\u18dd\u18df\t\33\2\2\u18de\u18e0\5\f\7\2\u18df"+
		"\u18de\3\2\2\2\u18e0\u18e1\3\2\2\2\u18e1\u18df\3\2\2\2\u18e1\u18e2\3\2"+
		"\2\2\u18e2\u18e9\3\2\2\2\u18e3\u18e5\7\u00d6\2\2\u18e4\u18e6\5\f\7\2\u18e5"+
		"\u18e4\3\2\2\2\u18e6\u18e7\3\2\2\2\u18e7\u18e5\3\2\2\2\u18e7\u18e8\3\2"+
		"\2\2\u18e8\u18ea\3\2\2\2\u18e9\u18e3\3\2\2\2\u18e9\u18ea\3\2\2\2\u18ea"+
		"\u18eb\3\2\2\2\u18eb\u18ec\5\u01c2\u00e2\2\u18ec\u01c1\3\2\2\2\u18ed\u18ef"+
		"\5\u01c4\u00e3\2\u18ee\u18ed\3\2\2\2\u18ef\u18f0\3\2\2\2\u18f0\u18ee\3"+
		"\2\2\2\u18f0\u18f1\3\2\2\2\u18f1\u01c3\3\2\2\2\u18f2\u18f3\t\34\2\2\u18f3"+
		"\u01c5\3\2\2\2\u18f4\u18f5\7\u01c4\2\2\u18f5\u01c7\3\2\2\2\u18f6\u18f7"+
		"\7\u01c4\2\2\u18f7\u01c9\3\2\2\2\u18f8\u18fb\5\u01e4\u00f3\2\u18f9\u18fb"+
		"\5\u01da\u00ee\2\u18fa\u18f8\3\2\2\2\u18fa\u18f9\3\2\2\2\u18fb\u01cb\3"+
		"\2\2\2\u18fc\u1904\7\u0132\2\2\u18fd\u18ff\5\f\7\2\u18fe\u18fd\3\2\2\2"+
		"\u18ff\u1900\3\2\2\2\u1900\u18fe\3\2\2\2\u1900\u1901\3\2\2\2\u1901\u1902"+
		"\3\2\2\2\u1902\u1903\7\u00d6\2\2\u1903\u1905\3\2\2\2\u1904\u18fe\3\2\2"+
		"\2\u1904\u1905\3\2\2\2\u1905\u1911\3\2\2\2\u1906\u190e\7\u0134\2\2\u1907"+
		"\u1909\5\f\7\2\u1908\u1907\3\2\2\2\u1909\u190a\3\2\2\2\u190a\u1908\3\2"+
		"\2\2\u190a\u190b\3\2\2\2\u190b\u190c\3\2\2\2\u190c\u190d\7\26\2\2\u190d"+
		"\u190f\3\2\2\2\u190e\u1908\3\2\2\2\u190e\u190f\3\2\2\2\u190f\u1911\3\2"+
		"\2\2\u1910\u18fc\3\2\2\2\u1910\u1906\3\2\2\2\u1911\u1913\3\2\2\2\u1912"+
		"\u1914\5\f\7\2\u1913\u1912\3\2\2\2\u1914\u1915\3\2\2\2\u1915\u1913\3\2"+
		"\2\2\u1915\u1916\3\2\2\2\u1916\u1917\3\2\2\2\u1917\u1921\5\u01ce\u00e8"+
		"\2\u1918\u191a\5\f\7\2\u1919\u1918\3\2\2\2\u191a\u191d\3\2\2\2\u191b\u1919"+
		"\3\2\2\2\u191b\u191c\3\2\2\2\u191c\u191e\3\2\2\2\u191d\u191b\3\2\2\2\u191e"+
		"\u1920\5\u01ce\u00e8\2\u191f\u191b\3\2\2\2\u1920\u1923\3\2\2\2\u1921\u191f"+
		"\3\2\2\2\u1921\u1922\3\2\2\2\u1922\u01cd\3\2\2\2\u1923\u1921\3\2\2\2\u1924"+
		"\u1925\7\u01c4\2\2\u1925\u01cf\3\2\2\2\u1926\u1928\7\u00e3\2\2\u1927\u1929"+
		"\5\f\7\2\u1928\u1927\3\2\2\2\u1929\u192a\3\2\2\2\u192a\u1928\3\2\2\2\u192a"+
		"\u192b\3\2\2\2\u192b\u1932\3\2\2\2\u192c\u192e\7\u00d6\2\2\u192d\u192f"+
		"\5\f\7\2\u192e\u192d\3\2\2\2\u192f\u1930\3\2\2\2\u1930\u192e\3\2\2\2\u1930"+
		"\u1931\3\2\2\2\u1931\u1933\3\2\2\2\u1932\u192c\3\2\2\2\u1932\u1933\3\2"+
		"\2\2\u1933\u1934\3\2\2\2\u1934\u193c\5\u01d8\u00ed\2\u1935\u1937\5\f\7"+
		"\2\u1936\u1935\3\2\2\2\u1937\u1938\3\2\2\2\u1938\u1936\3\2\2\2\u1938\u1939"+
		"\3\2\2\2\u1939\u193a\3\2\2\2\u193a\u193b\7\u00e5\2\2\u193b\u193d\3\2\2"+
		"\2\u193c\u1936\3\2\2\2\u193c\u193d\3\2\2\2\u193d\u195b\3\2\2\2\u193e\u1940"+
		"\5\f\7\2\u193f\u193e\3\2\2\2\u1940\u1941\3\2\2\2\u1941\u193f\3\2\2\2\u1941"+
		"\u1942\3\2\2\2\u1942\u1949\3\2\2\2\u1943\u1945\7\u018b\2\2\u1944\u1946"+
		"\5\f\7\2\u1945\u1944\3\2\2\2\u1946\u1947\3\2\2\2\u1947\u1945\3\2\2\2\u1947"+
		"\u1948\3\2\2\2\u1948\u194a\3\2\2\2\u1949\u1943\3\2\2\2\u1949\u194a\3\2"+
		"\2\2\u194a\u194b\3\2\2\2\u194b\u194d\7\u00b4\2\2\u194c\u194e\5\f\7\2\u194d"+
		"\u194c\3\2\2\2\u194e\u194f\3\2\2\2\u194f\u194d\3\2\2\2\u194f\u1950\3\2"+
		"\2\2\u1950\u1957\3\2\2\2\u1951\u1953\7\37\2\2\u1952\u1954\5\f\7\2\u1953"+
		"\u1952\3\2\2\2\u1954\u1955\3\2\2\2\u1955\u1953\3\2\2\2\u1955\u1956\3\2"+
		"\2\2\u1956\u1958\3\2\2\2\u1957\u1951\3\2\2\2\u1957\u1958\3\2\2\2\u1958"+
		"\u1959\3\2\2\2\u1959\u195a\5\u01d6\u00ec\2\u195a\u195c\3\2\2\2\u195b\u193f"+
		"\3\2\2\2\u195b\u195c\3\2\2\2\u195c\u197a\3\2\2\2\u195d\u195f\5\f\7\2\u195e"+
		"\u195d\3\2\2\2\u195f\u1960\3\2\2\2\u1960\u195e\3\2\2\2\u1960\u1961\3\2"+
		"\2\2\u1961\u1968\3\2\2\2\u1962\u1964\7\u00e5\2\2\u1963\u1965\5\f\7\2\u1964"+
		"\u1963\3\2\2\2\u1965\u1966\3\2\2\2\u1966\u1964\3\2\2\2\u1966\u1967\3\2"+
		"\2\2\u1967\u1969\3\2\2\2\u1968\u1962\3\2\2\2\u1968\u1969\3\2\2\2\u1969"+
		"\u1970\3\2\2\2\u196a\u196c\7\37\2\2\u196b\u196d\5\f\7\2\u196c\u196b\3"+
		"\2\2\2\u196d\u196e\3\2\2\2\u196e\u196c\3\2\2\2\u196e\u196f\3\2\2\2\u196f"+
		"\u1971\3\2\2\2\u1970\u196a\3\2\2\2\u1970\u1971\3\2\2\2\u1971\u1972\3\2"+
		"\2\2\u1972\u1974\7\u0176\2\2\u1973\u1975\5\f\7\2\u1974\u1973\3\2\2\2\u1975"+
		"\u1976\3\2\2\2\u1976\u1974\3\2\2\2\u1976\u1977\3\2\2\2\u1977\u1978\3\2"+
		"\2\2\u1978\u1979\5\u01d4\u00eb\2\u1979\u197b\3\2\2\2\u197a\u195e\3\2\2"+
		"\2\u197a\u197b\3\2\2\2\u197b\u1999\3\2\2\2\u197c\u197e\5\f\7\2\u197d\u197c"+
		"\3\2\2\2\u197e\u197f\3\2\2\2\u197f\u197d\3\2\2\2\u197f\u1980\3\2\2\2\u1980"+
		"\u1987\3\2\2\2\u1981\u1983\7\u00e5\2\2\u1982\u1984\5\f\7\2\u1983\u1982"+
		"\3\2\2\2\u1984\u1985\3\2\2\2\u1985\u1983\3\2\2\2\u1985\u1986\3\2\2\2\u1986"+
		"\u1988\3\2\2\2\u1987\u1981\3\2\2\2\u1987\u1988\3\2\2\2\u1988\u198f\3\2"+
		"\2\2\u1989\u198b\7\37\2\2\u198a\u198c\5\f\7\2\u198b\u198a\3\2\2\2\u198c"+
		"\u198d\3\2\2\2\u198d\u198b\3\2\2\2\u198d\u198e\3\2\2\2\u198e\u1990\3\2"+
		"\2\2\u198f\u1989\3\2\2\2\u198f\u1990\3\2\2\2\u1990\u1991\3\2\2\2\u1991"+
		"\u1993\7\61\2\2\u1992\u1994\5\f\7\2\u1993\u1992\3\2\2\2\u1994\u1995\3"+
		"\2\2\2\u1995\u1993\3\2\2\2\u1995\u1996\3\2\2\2\u1996\u1997\3\2\2\2\u1997"+
		"\u1998\5\u01d2\u00ea\2\u1998\u199a\3\2\2\2\u1999\u197d\3\2\2\2\u1999\u199a"+
		"\3\2\2\2\u199a\u01d1\3\2\2\2\u199b\u199e\7\u01c2\2\2\u199c\u199e\5\u023e"+
		"\u0120\2\u199d\u199b\3\2\2\2\u199d\u199c\3\2\2\2\u199e\u01d3\3\2\2\2\u199f"+
		"\u19a2\7\u01c2\2\2\u19a0\u19a2\5\u023e\u0120\2\u19a1\u199f\3\2\2\2\u19a1"+
		"\u19a0\3\2\2\2\u19a2\u01d5\3\2\2\2\u19a3\u19a6\7\u01c2\2\2\u19a4\u19a6"+
		"\5\u023e\u0120\2\u19a5\u19a3\3\2\2\2\u19a5\u19a4\3\2\2\2\u19a6\u01d7\3"+
		"\2\2\2\u19a7\u19aa\7\u01c2\2\2\u19a8\u19aa\5\u023e\u0120\2\u19a9\u19a7"+
		"\3\2\2\2\u19a9\u19a8\3\2\2\2\u19aa\u01d9\3\2\2\2\u19ab\u19ad\7e\2\2\u19ac"+
		"\u19ae\5\f\7\2\u19ad\u19ac\3\2\2\2\u19ae\u19af\3\2\2\2\u19af\u19ad\3\2"+
		"\2\2\u19af\u19b0\3\2\2\2\u19b0\u19c5\3\2\2\2\u19b1\u19b9\7\u0127\2\2\u19b2"+
		"\u19b4\5\f\7\2\u19b3\u19b2\3\2\2\2\u19b4\u19b5\3\2\2\2\u19b5\u19b3\3\2"+
		"\2\2\u19b5\u19b6\3\2\2\2\u19b6\u19b7\3\2\2\2\u19b7\u19b8\7\26\2\2\u19b8"+
		"\u19ba\3\2\2\2\u19b9\u19b3\3\2\2\2\u19b9\u19ba\3\2\2\2\u19ba\u19c6\3\2"+
		"\2\2\u19bb\u19c3\7\u0126\2\2\u19bc\u19be\5\f\7\2\u19bd\u19bc\3\2\2\2\u19be"+
		"\u19bf\3\2\2\2\u19bf\u19bd\3\2\2\2\u19bf\u19c0\3\2\2\2\u19c0\u19c1\3\2"+
		"\2\2\u19c1\u19c2\7\u00d6\2\2\u19c2\u19c4\3\2\2\2\u19c3\u19bd\3\2\2\2\u19c3"+
		"\u19c4\3\2\2\2\u19c4\u19c6\3\2\2\2\u19c5\u19b1\3\2\2\2\u19c5\u19bb\3\2"+
		"\2\2\u19c6\u19c7\3\2\2\2\u19c7\u19d1\5\u01dc\u00ef\2\u19c8\u19ca\5\f\7"+
		"\2\u19c9\u19c8\3\2\2\2\u19ca\u19cb\3\2\2\2\u19cb\u19c9\3\2\2\2\u19cb\u19cc"+
		"\3\2\2\2\u19cc\u19cd\3\2\2\2\u19cd\u19ce\5\u01dc\u00ef\2\u19ce\u19d0\3"+
		"\2\2\2\u19cf\u19c9\3\2\2\2\u19d0\u19d3\3\2\2\2\u19d1\u19cf\3\2\2\2\u19d1"+
		"\u19d2\3\2\2\2\u19d2\u01db\3\2\2\2\u19d3\u19d1\3\2\2\2\u19d4\u19d5\7\u01c4"+
		"\2\2\u19d5\u01dd\3\2\2\2\u19d6\u19d8\7\u0185\2\2\u19d7\u19d9\5\f\7\2\u19d8"+
		"\u19d7\3\2\2\2\u19d9\u19da\3\2\2\2\u19da\u19d8\3\2\2\2\u19da\u19db\3\2"+
		"\2\2\u19db\u19dc\3\2\2\2\u19dc\u19de\7\u00ff\2\2\u19dd\u19df\5\f\7\2\u19de"+
		"\u19dd\3\2\2\2\u19df\u19e0\3\2\2\2\u19e0\u19de\3\2\2\2\u19e0\u19e1\3\2"+
		"\2\2\u19e1\u19e2\3\2\2\2\u19e2\u19e4\t\35\2\2\u19e3\u19e5\5\f\7\2\u19e4"+
		"\u19e3\3\2\2\2\u19e5\u19e6\3\2\2\2\u19e6\u19e4\3\2\2\2\u19e6\u19e7\3\2"+
		"\2\2\u19e7\u19ee\3\2\2\2\u19e8\u19ea\7\u00d6\2\2\u19e9\u19eb\5\f\7\2\u19ea"+
		"\u19e9\3\2\2\2\u19eb\u19ec\3\2\2\2\u19ec\u19ea\3\2\2\2\u19ec\u19ed\3\2"+
		"\2\2\u19ed\u19ef\3\2\2\2\u19ee\u19e8\3\2\2\2\u19ee\u19ef\3\2\2\2\u19ef"+
		"\u19f0\3\2\2\2\u19f0\u19f1\5\u01e0\u00f1\2\u19f1\u01df\3\2\2\2\u19f2\u19f5"+
		"\7\u01c1\2\2\u19f3\u19f5\5\u023e\u0120\2\u19f4\u19f2\3\2\2\2\u19f4\u19f3"+
		"\3\2\2\2\u19f5\u01e1\3\2\2\2\u19f6\u19f8\7\u00dc\2\2\u19f7\u19f9\5\f\7"+
		"\2\u19f8\u19f7\3\2\2\2\u19f9\u19fa\3\2\2\2\u19fa\u19f8\3\2\2\2\u19fa\u19fb"+
		"\3\2\2\2\u19fb\u1a10\3\2\2\2\u19fc\u1a04\7\u0127\2\2\u19fd\u19ff\5\f\7"+
		"\2\u19fe\u19fd\3\2\2\2\u19ff\u1a00\3\2\2\2\u1a00\u19fe\3\2\2\2\u1a00\u1a01"+
		"\3\2\2\2\u1a01\u1a02\3\2\2\2\u1a02\u1a03\7\26\2\2\u1a03\u1a05\3\2\2\2"+
		"\u1a04\u19fe\3\2\2\2\u1a04\u1a05\3\2\2\2\u1a05\u1a11\3\2\2\2\u1a06\u1a0e"+
		"\7\u0126\2\2\u1a07\u1a09\5\f\7\2\u1a08\u1a07\3\2\2\2\u1a09\u1a0a\3\2\2"+
		"\2\u1a0a\u1a08\3\2\2\2\u1a0a\u1a0b\3\2\2\2\u1a0b\u1a0c\3\2\2\2\u1a0c\u1a0d"+
		"\7\u00d6\2\2\u1a0d\u1a0f\3\2\2\2\u1a0e\u1a08\3\2\2\2\u1a0e\u1a0f\3\2\2"+
		"\2\u1a0f\u1a11\3\2\2\2\u1a10\u19fc\3\2\2\2\u1a10\u1a06\3\2\2\2\u1a11\u1a13"+
		"\3\2\2\2\u1a12\u1a14\5\f\7\2\u1a13\u1a12\3\2\2\2\u1a14\u1a15\3\2\2\2\u1a15"+
		"\u1a13\3\2\2\2\u1a15\u1a16\3\2\2\2\u1a16\u1a17\3\2\2\2\u1a17\u1a18\t\36"+
		"\2\2\u1a18\u01e3\3\2\2\2\u1a19\u1a1b\7\u0126\2\2\u1a1a\u1a1c\5\f\7\2\u1a1b"+
		"\u1a1a\3\2\2\2\u1a1c\u1a1d\3\2\2\2\u1a1d\u1a1b\3\2\2\2\u1a1d\u1a1e\3\2"+
		"\2\2\u1a1e\u1a1f\3\2\2\2\u1a1f\u1a20\5\u01e6\u00f4\2\u1a20\u01e5\3\2\2"+
		"\2\u1a21\u1a23\7U\2\2\u1a22\u1a24\5\f\7\2\u1a23\u1a22\3\2\2\2\u1a24\u1a25"+
		"\3\2\2\2\u1a25\u1a23\3\2\2\2\u1a25\u1a26\3\2\2\2\u1a26\u1a28\3\2\2\2\u1a27"+
		"\u1a21\3\2\2\2\u1a27\u1a28\3\2\2\2\u1a28\u1a35\3\2\2\2\u1a29\u1a2b\5\u01ea"+
		"\u00f6\2\u1a2a\u1a2c\5\f\7\2\u1a2b\u1a2a\3\2\2\2\u1a2c\u1a2d\3\2\2\2\u1a2d"+
		"\u1a2b\3\2\2\2\u1a2d\u1a2e\3\2\2\2\u1a2e\u1a2f\3\2\2\2\u1a2f\u1a31\7\u0175"+
		"\2\2\u1a30\u1a32\5\f\7\2\u1a31\u1a30\3\2\2\2\u1a32\u1a33\3\2\2\2\u1a33"+
		"\u1a31\3\2\2\2\u1a33\u1a34\3\2\2\2\u1a34\u1a36\3\2\2\2\u1a35\u1a29\3\2"+
		"\2\2\u1a35\u1a36\3\2\2\2\u1a36\u1a37\3\2\2\2\u1a37\u1a3b\5\u01ec\u00f7"+
		"\2\u1a38\u1a3a\5\f\7\2\u1a39\u1a38\3\2\2\2\u1a3a\u1a3d\3\2\2\2\u1a3b\u1a39"+
		"\3\2\2\2\u1a3b\u1a3c\3\2\2\2\u1a3c\u1a45\3\2\2\2\u1a3d\u1a3b\3\2\2\2\u1a3e"+
		"\u1a42\7:\2\2\u1a3f\u1a41\5\f\7\2\u1a40\u1a3f\3\2\2\2\u1a41\u1a44\3\2"+
		"\2\2\u1a42\u1a40\3\2\2\2\u1a42\u1a43\3\2\2\2\u1a43\u1a46\3\2\2\2\u1a44"+
		"\u1a42\3\2\2\2\u1a45\u1a3e\3\2\2\2\u1a45\u1a46\3\2\2\2\u1a46\u1a9d\3\2"+
		"\2\2\u1a47\u1a49\7\u00d6\2\2\u1a48\u1a4a\5\f\7\2\u1a49\u1a48\3\2\2\2\u1a4a"+
		"\u1a4b\3\2\2\2\u1a4b\u1a49\3\2\2\2\u1a4b\u1a4c\3\2\2\2\u1a4c\u1a4e\3\2"+
		"\2\2\u1a4d\u1a47\3\2\2\2\u1a4d\u1a4e\3\2\2\2\u1a4e\u1a4f\3\2\2\2\u1a4f"+
		"\u1a51\7\u0187\2\2\u1a50\u1a52\5\f\7\2\u1a51\u1a50\3\2\2\2\u1a52\u1a53"+
		"\3\2\2\2\u1a53\u1a51\3\2\2\2\u1a53\u1a54\3\2\2\2\u1a54\u1a5b\3\2\2\2\u1a55"+
		"\u1a57\7\u00c9\2\2\u1a56\u1a58\5\f\7\2\u1a57\u1a56\3\2\2\2\u1a58\u1a59"+
		"\3\2\2\2\u1a59\u1a57\3\2\2\2\u1a59\u1a5a\3\2\2\2\u1a5a\u1a5c\3\2\2\2\u1a5b"+
		"\u1a55\3\2\2\2\u1a5b\u1a5c\3\2\2\2\u1a5c\u1a64\3\2\2\2\u1a5d\u1a61\7\u0152"+
		"\2\2\u1a5e\u1a60\5\f\7\2\u1a5f\u1a5e\3\2\2\2\u1a60\u1a63\3\2\2\2\u1a61"+
		"\u1a5f\3\2\2\2\u1a61\u1a62\3\2\2\2\u1a62\u1a65\3\2\2\2\u1a63\u1a61\3\2"+
		"\2\2\u1a64\u1a5d\3\2\2\2\u1a64\u1a65\3\2\2\2\u1a65\u1a6f\3\2\2\2\u1a66"+
		"\u1a68\7\u00b7\2\2\u1a67\u1a69\5\f\7\2\u1a68\u1a67\3\2\2\2\u1a69\u1a6a"+
		"\3\2\2\2\u1a6a\u1a68\3\2\2\2\u1a6a\u1a6b\3\2\2\2\u1a6b\u1a6d\3\2\2\2\u1a6c"+
		"\u1a66\3\2\2\2\u1a6c\u1a6d\3\2\2\2\u1a6d\u1a6e\3\2\2\2\u1a6e\u1a70\5\u01ea"+
		"\u00f6\2\u1a6f\u1a6c\3\2\2\2\u1a6f\u1a70\3\2\2\2\u1a70\u1a79\3\2\2\2\u1a71"+
		"\u1a73\7\u0175\2\2\u1a72\u1a74\5\f\7\2\u1a73\u1a72\3\2\2\2\u1a74\u1a75"+
		"\3\2\2\2\u1a75\u1a73\3\2\2\2\u1a75\u1a76\3\2\2\2\u1a76\u1a77\3\2\2\2\u1a77"+
		"\u1a78\5\u01ec\u00f7\2\u1a78\u1a7a\3\2\2\2\u1a79\u1a71\3\2\2\2\u1a79\u1a7a"+
		"\3\2\2\2\u1a7a\u1a88\3\2\2\2\u1a7b\u1a7d\5\f\7\2\u1a7c\u1a7b\3\2\2\2\u1a7d"+
		"\u1a80\3\2\2\2\u1a7e\u1a7c\3\2\2\2\u1a7e\u1a7f\3\2\2\2\u1a7f\u1a81\3\2"+
		"\2\2\u1a80\u1a7e\3\2\2\2\u1a81\u1a85\7:\2\2\u1a82\u1a84\5\f\7\2\u1a83"+
		"\u1a82\3\2\2\2\u1a84\u1a87\3\2\2\2\u1a85\u1a83\3\2\2\2\u1a85\u1a86\3\2"+
		"\2\2\u1a86\u1a89\3\2\2\2\u1a87\u1a85\3\2\2\2\u1a88\u1a7e\3\2\2\2\u1a88"+
		"\u1a89\3\2\2\2\u1a89\u1a9a\3\2\2\2\u1a8a\u1a8c\7s\2\2\u1a8b\u1a8d\5\f"+
		"\7\2\u1a8c\u1a8b\3\2\2\2\u1a8d\u1a8e\3\2\2\2\u1a8e\u1a8c\3\2\2\2\u1a8e"+
		"\u1a8f\3\2\2\2\u1a8f\u1a96\3\2\2\2\u1a90\u1a92\7\u0102\2\2\u1a91\u1a93"+
		"\5\f\7\2\u1a92\u1a91\3\2\2\2\u1a93\u1a94\3\2\2\2\u1a94\u1a92\3\2\2\2\u1a94"+
		"\u1a95\3\2\2\2\u1a95\u1a97\3\2\2\2\u1a96\u1a90\3\2\2\2\u1a96\u1a97\3\2"+
		"\2\2\u1a97\u1a98\3\2\2\2\u1a98\u1a99\5\u01e8\u00f5\2\u1a99\u1a9b\3\2\2"+
		"\2\u1a9a\u1a8a\3\2\2\2\u1a9a\u1a9b\3\2\2\2\u1a9b\u1a9d\3\2\2\2\u1a9c\u1a27"+
		"\3\2\2\2\u1a9c\u1a4d\3\2\2\2\u1a9d\u01e7\3\2\2\2\u1a9e\u1a9f\5\u023e\u0120"+
		"\2\u1a9f\u01e9\3\2\2\2\u1aa0\u1aa1\7\u01c2\2\2\u1aa1\u01eb\3\2\2\2\u1aa2"+
		"\u1aa3\7\u01c2\2\2\u1aa3\u01ed\3\2\2\2\u1aa4\u1aae\5\u0164\u00b3\2\u1aa5"+
		"\u1aa7\5\f\7\2\u1aa6\u1aa5\3\2\2\2\u1aa7\u1aa8\3\2\2\2\u1aa8\u1aa6\3\2"+
		"\2\2\u1aa8\u1aa9\3\2\2\2\u1aa9\u1aac\3\2\2\2\u1aaa\u1aad\5\u01f0\u00f9"+
		"\2\u1aab\u1aad\7\u00ad\2\2\u1aac\u1aaa\3\2\2\2\u1aac\u1aab\3\2\2\2\u1aad"+
		"\u1aaf\3\2\2\2\u1aae\u1aa6\3\2\2\2\u1aae\u1aaf\3\2\2\2\u1aaf\u1ab9\3\2"+
		"\2\2\u1ab0\u1ab2\5\f\7\2\u1ab1\u1ab0\3\2\2\2\u1ab2\u1ab3\3\2\2\2\u1ab3"+
		"\u1ab1\3\2\2\2\u1ab3\u1ab4\3\2\2\2\u1ab4\u1ab5\3\2\2\2\u1ab5\u1ab6\5\u01f2"+
		"\u00fa\2\u1ab6\u1ab8\3\2\2\2\u1ab7\u1ab1\3\2\2\2\u1ab8\u1abb\3\2\2\2\u1ab9"+
		"\u1ab7\3\2\2\2\u1ab9\u1aba\3\2\2\2\u1aba\u1abc\3\2\2\2\u1abb\u1ab9\3\2"+
		"\2\2\u1abc\u1abd\7\u01be\2\2\u1abd\u01ef\3\2\2\2\u1abe\u1abf\7\u01c4\2"+
		"\2\u1abf\u01f1\3\2\2\2\u1ac0\u1ac2\7,\2\2\u1ac1\u1ac3\5\f\7\2\u1ac2\u1ac1"+
		"\3\2\2\2\u1ac3\u1ac4\3\2\2\2\u1ac4\u1ac2\3\2\2\2\u1ac4\u1ac5\3\2\2\2\u1ac5"+
		"\u1ac6\3\2\2\2\u1ac6\u1ac7\t\21\2\2\u1ac7\u1b8b\3\2\2\2\u1ac8\u1aca\7"+
		"\u00b6\2\2\u1ac9\u1acb\5\f\7\2\u1aca\u1ac9\3\2\2\2\u1acb\u1acc\3\2\2\2"+
		"\u1acc\u1aca\3\2\2\2\u1acc\u1acd\3\2\2\2\u1acd\u1ad4\3\2\2\2\u1ace\u1ad0"+
		"\7\u00d6\2\2\u1acf\u1ad1\5\f\7\2\u1ad0\u1acf\3\2\2\2\u1ad1\u1ad2\3\2\2"+
		"\2\u1ad2\u1ad0\3\2\2\2\u1ad2\u1ad3\3\2\2\2\u1ad3\u1ad5\3\2\2\2\u1ad4\u1ace"+
		"\3\2\2\2\u1ad4\u1ad5\3\2\2\2\u1ad5\u1ad6\3\2\2\2\u1ad6\u1ad7\5\u01fe\u0100"+
		"\2\u1ad7\u1b8b\3\2\2\2\u1ad8\u1ada\7$\2\2\u1ad9\u1adb\5\f\7\2\u1ada\u1ad9"+
		"\3\2\2\2\u1adb\u1adc\3\2\2\2\u1adc\u1ada\3\2\2\2\u1adc\u1add\3\2\2\2\u1add"+
		"\u1ae4\3\2\2\2\u1ade\u1ae0\7\u00d6\2\2\u1adf\u1ae1\5\f\7\2\u1ae0\u1adf"+
		"\3\2\2\2\u1ae1\u1ae2\3\2\2\2\u1ae2\u1ae0\3\2\2\2\u1ae2\u1ae3\3\2\2\2\u1ae3"+
		"\u1ae5\3\2\2\2\u1ae4\u1ade\3\2\2\2\u1ae4\u1ae5\3\2\2\2\u1ae5\u1ae6\3\2"+
		"\2\2\u1ae6\u1ae7\5\u01fe\u0100\2\u1ae7\u1b8b\3\2\2\2\u1ae8\u1b8b\7!\2"+
		"\2\u1ae9\u1b8b\7\u0148\2\2\u1aea\u1b8b\7\u0135\2\2\u1aeb\u1aed\7\u0182"+
		"\2\2\u1aec\u1aee\5\f\7\2\u1aed\u1aec\3\2\2\2\u1aee\u1aef\3\2\2\2\u1aef"+
		"\u1aed\3\2\2\2\u1aef\u1af0\3\2\2\2\u1af0\u1af7\3\2\2\2\u1af1\u1af3\7\u00d6"+
		"\2\2\u1af2\u1af4\5\f\7\2\u1af3\u1af2\3\2\2\2\u1af4\u1af5\3\2\2\2\u1af5"+
		"\u1af3\3\2\2\2\u1af5\u1af6\3\2\2\2\u1af6\u1af8\3\2\2\2\u1af7\u1af1\3\2"+
		"\2\2\u1af7\u1af8\3\2\2\2\u1af8\u1afa\3\2\2\2\u1af9\u1aeb\3\2\2\2\u1af9"+
		"\u1afa\3\2\2\2\u1afa\u1afb\3\2\2\2\u1afb\u1b8b\7x\2\2\u1afc\u1b8b\5\u0194"+
		"\u00cb\2\u1afd\u1b8b\7\u00b8\2\2\u1afe\u1b8b\7&\2\2\u1aff\u1b8b\7-\2\2"+
		"\u1b00\u1b02\7\u009d\2\2\u1b01\u1b03\5\f\7\2\u1b02\u1b01\3\2\2\2\u1b03"+
		"\u1b04\3\2\2\2\u1b04\u1b02\3\2\2\2\u1b04\u1b05\3\2\2\2\u1b05\u1b06\3\2"+
		"\2\2\u1b06\u1b07\t\37\2\2\u1b07\u1b8b\3\2\2\2\u1b08\u1b8b\7\u00c1\2\2"+
		"\u1b09\u1b8b\7\u00ea\2\2\u1b0a\u1b8b\7\u013b\2\2\u1b0b\u1b8b\7\u017a\2"+
		"\2\u1b0c\u1b0e\7\u00e4\2\2\u1b0d\u1b0f\5\f\7\2\u1b0e\u1b0d\3\2\2\2\u1b0f"+
		"\u1b10\3\2\2\2\u1b10\u1b0e\3\2\2\2\u1b10\u1b11\3\2\2\2\u1b11\u1b18\3\2"+
		"\2\2\u1b12\u1b14\7\u00fb\2\2\u1b13\u1b15\5\f\7\2\u1b14\u1b13\3\2\2\2\u1b15"+
		"\u1b16\3\2\2\2\u1b16\u1b14\3\2\2\2\u1b16\u1b17\3\2\2\2\u1b17\u1b19\3\2"+
		"\2\2\u1b18\u1b12\3\2\2\2\u1b18\u1b19\3\2\2\2\u1b19\u1b20\3\2\2\2\u1b1a"+
		"\u1b1c\7\u00d6\2\2\u1b1b\u1b1d\5\f\7\2\u1b1c\u1b1b\3\2\2\2\u1b1d\u1b1e"+
		"\3\2\2\2\u1b1e\u1b1c\3\2\2\2\u1b1e\u1b1f\3\2\2\2\u1b1f\u1b21\3\2\2\2\u1b20"+
		"\u1b1a\3\2\2\2\u1b20\u1b21\3\2\2\2\u1b21\u1b28\3\2\2\2\u1b22\u1b24\7\u0114"+
		"\2\2\u1b23\u1b25\5\f\7\2\u1b24\u1b23\3\2\2\2\u1b25\u1b26\3\2\2\2\u1b26"+
		"\u1b24\3\2\2\2\u1b26\u1b27\3\2\2\2\u1b27\u1b29\3\2\2\2\u1b28\u1b22\3\2"+
		"\2\2\u1b28\u1b29\3\2\2\2\u1b29\u1b2a\3\2\2\2\u1b2a\u1b2b\5\u01fc\u00ff"+
		"\2\u1b2b\u1b8b\3\2\2\2\u1b2c\u1b2e\7A\2\2\u1b2d\u1b2f\5\f\7\2\u1b2e\u1b2d"+
		"\3\2\2\2\u1b2f\u1b30\3\2\2\2\u1b30\u1b2e\3\2\2\2\u1b30\u1b31\3\2\2\2\u1b31"+
		"\u1b38\3\2\2\2\u1b32\u1b34\7\u00fb\2\2\u1b33\u1b35\5\f\7\2\u1b34\u1b33"+
		"\3\2\2\2\u1b35\u1b36\3\2\2\2\u1b36\u1b34\3\2\2\2\u1b36\u1b37\3\2\2\2\u1b37"+
		"\u1b39\3\2\2\2\u1b38\u1b32\3\2\2\2\u1b38\u1b39\3\2\2\2\u1b39\u1b40\3\2"+
		"\2\2\u1b3a\u1b3c\7\u00d6\2\2\u1b3b\u1b3d\5\f\7\2\u1b3c\u1b3b\3\2\2\2\u1b3d"+
		"\u1b3e\3\2\2\2\u1b3e\u1b3c\3\2\2\2\u1b3e\u1b3f\3\2\2\2\u1b3f\u1b41\3\2"+
		"\2\2\u1b40\u1b3a\3\2\2\2\u1b40\u1b41\3\2\2\2\u1b41\u1b48\3\2\2\2\u1b42"+
		"\u1b44\7\u0114\2\2\u1b43\u1b45\5\f\7\2\u1b44\u1b43\3\2\2\2\u1b45\u1b46"+
		"\3\2\2\2\u1b46\u1b44\3\2\2\2\u1b46\u1b47\3\2\2\2\u1b47\u1b49\3\2\2\2\u1b48"+
		"\u1b42\3\2\2\2\u1b48\u1b49\3\2\2\2\u1b49\u1b4a\3\2\2\2\u1b4a\u1b4b\5\u01fc"+
		"\u00ff\2\u1b4b\u1b8b\3\2\2\2\u1b4c\u1b4e\7\u0185\2\2\u1b4d\u1b4f\5\f\7"+
		"\2\u1b4e\u1b4d\3\2\2\2\u1b4f\u1b50\3\2\2\2\u1b50\u1b4e\3\2\2\2\u1b50\u1b51"+
		"\3\2\2\2\u1b51\u1b58\3\2\2\2\u1b52\u1b54\7\u00d6\2\2\u1b53\u1b55\5\f\7"+
		"\2\u1b54\u1b53\3\2\2\2\u1b55\u1b56\3\2\2\2\u1b56\u1b54\3\2\2\2\u1b56\u1b57"+
		"\3\2\2\2\u1b57\u1b59\3\2\2\2\u1b58\u1b52\3\2\2\2\u1b58\u1b59\3\2\2\2\u1b59"+
		"\u1b5a\3\2\2\2\u1b5a\u1b5b\5\u01fa\u00fe\2\u1b5b\u1b8b\3\2\2\2\u1b5c\u1b5e"+
		"\7,\2\2\u1b5d\u1b5f\5\f\7\2\u1b5e\u1b5d\3\2\2\2\u1b5f\u1b60\3\2\2\2\u1b60"+
		"\u1b5e\3\2\2\2\u1b60\u1b61\3\2\2\2\u1b61\u1b68\3\2\2\2\u1b62\u1b64\7\u0189"+
		"\2\2\u1b63\u1b65\5\f\7\2\u1b64\u1b63\3\2\2\2\u1b65\u1b66\3\2\2\2\u1b66"+
		"\u1b64\3\2\2\2\u1b66\u1b67\3\2\2\2\u1b67\u1b69\3\2\2\2\u1b68\u1b62\3\2"+
		"\2\2\u1b68\u1b69\3\2\2\2\u1b69\u1b6a\3\2\2\2\u1b6a\u1b6b\7\u0191\2\2\u1b6b"+
		"\u1b8b\3\2\2\2\u1b6c\u1b74\t\25\2\2\u1b6d\u1b6f\5\f\7\2\u1b6e\u1b6d\3"+
		"\2\2\2\u1b6f\u1b70\3\2\2\2\u1b70\u1b6e\3\2\2\2\u1b70\u1b71\3\2\2\2\u1b71"+
		"\u1b72\3\2\2\2\u1b72\u1b73\7\u0140\2\2\u1b73\u1b75\3\2\2\2\u1b74\u1b6e"+
		"\3\2\2\2\u1b74\u1b75\3\2\2\2\u1b75\u1b8b\3\2\2\2\u1b76\u1b78\5\u01c0\u00e1"+
		"\2\u1b77\u1b79\5\f\7\2\u1b78\u1b77\3\2\2\2\u1b79\u1b7a\3\2\2\2\u1b7a\u1b78"+
		"\3\2\2\2\u1b7a\u1b7b\3\2\2\2\u1b7b\u1b88\3\2\2\2\u1b7c\u1b89\5\u01f4\u00fb"+
		"\2\u1b7d\u1b85\5\u01f6\u00fc\2\u1b7e\u1b80\5\f\7\2\u1b7f\u1b7e\3\2\2\2"+
		"\u1b80\u1b81\3\2\2\2\u1b81\u1b7f\3\2\2\2\u1b81\u1b82\3\2\2\2\u1b82\u1b83"+
		"\3\2\2\2\u1b83\u1b84\5\u01f8\u00fd\2\u1b84\u1b86\3\2\2\2\u1b85\u1b7f\3"+
		"\2\2\2\u1b85\u1b86\3\2\2\2\u1b86\u1b89\3\2\2\2\u1b87\u1b89\5\u01f8\u00fd"+
		"\2\u1b88\u1b7c\3\2\2\2\u1b88\u1b7d\3\2\2\2\u1b88\u1b87\3\2\2\2\u1b89\u1b8b"+
		"\3\2\2\2\u1b8a\u1ac0\3\2\2\2\u1b8a\u1ac8\3\2\2\2\u1b8a\u1ad8\3\2\2\2\u1b8a"+
		"\u1ae8\3\2\2\2\u1b8a\u1ae9\3\2\2\2\u1b8a\u1aea\3\2\2\2\u1b8a\u1af9\3\2"+
		"\2\2\u1b8a\u1afc\3\2\2\2\u1b8a\u1afd\3\2\2\2\u1b8a\u1afe\3\2\2\2\u1b8a"+
		"\u1aff\3\2\2\2\u1b8a\u1b00\3\2\2\2\u1b8a\u1b08\3\2\2\2\u1b8a\u1b09\3\2"+
		"\2\2\u1b8a\u1b0a\3\2\2\2\u1b8a\u1b0b\3\2\2\2\u1b8a\u1b0c\3\2\2\2\u1b8a"+
		"\u1b2c\3\2\2\2\u1b8a\u1b4c\3\2\2\2\u1b8a\u1b5c\3\2\2\2\u1b8a\u1b6c\3\2"+
		"\2\2\u1b8a\u1b76\3\2\2\2\u1b8b\u01f3\3\2\2\2\u1b8c\u1b8e\7\u0184\2\2\u1b8d"+
		"\u1b8f\5\f\7\2\u1b8e\u1b8d\3\2\2\2\u1b8f\u1b90\3\2\2\2\u1b90\u1b8e\3\2"+
		"\2\2\u1b90\u1b91\3\2\2\2\u1b91\u1b92\3\2\2\2\u1b92\u1b93\5\u023e\u0120"+
		"\2\u1b93\u01f5\3\2\2\2\u1b94\u1b96\7\u00b7\2\2\u1b95\u1b97\5\f\7\2\u1b96"+
		"\u1b95\3\2\2\2\u1b97\u1b98\3\2\2\2\u1b98\u1b96\3\2\2\2\u1b98\u1b99\3\2"+
		"\2\2\u1b99\u1b9c\3\2\2\2\u1b9a\u1b9d\5\u023e\u0120\2\u1b9b\u1b9d\5\u01fa"+
		"\u00fe\2\u1b9c\u1b9a\3\2\2\2\u1b9c\u1b9b\3\2\2\2\u1b9d\u01f7\3\2\2\2\u1b9e"+
		"\u1ba0\7\u0175\2\2\u1b9f\u1ba1\5\f\7\2\u1ba0\u1b9f\3\2\2\2\u1ba1\u1ba2"+
		"\3\2\2\2\u1ba2\u1ba0\3\2\2\2\u1ba2\u1ba3\3\2\2\2\u1ba3\u1ba4\3\2\2\2\u1ba4"+
		"\u1ba5\5\u023e\u0120\2\u1ba5\u01f9\3\2\2\2\u1ba6\u1ba7\7\u01c1\2\2\u1ba7"+
		"\u01fb\3\2\2\2\u1ba8\u1bab\5\u023e\u0120\2\u1ba9\u1bab\7\u01c2\2\2\u1baa"+
		"\u1ba8\3\2\2\2\u1baa\u1ba9\3\2\2\2\u1bab\u01fd\3\2\2\2\u1bac\u1bad\7\u01c2"+
		"\2\2\u1bad\u01ff\3\2\2\2\u1bae\u1bb0\7\5\2\2\u1baf\u1bb1\5\f\7\2\u1bb0"+
		"\u1baf\3\2\2\2\u1bb1\u1bb2\3\2\2\2\u1bb2\u1bb0\3\2\2\2\u1bb2\u1bb3\3\2"+
		"\2\2\u1bb3\u1bb4\3\2\2\2\u1bb4\u1bb8\7z\2\2\u1bb5\u1bb7\5\f\7\2\u1bb6"+
		"\u1bb5\3\2\2\2\u1bb7\u1bba\3\2\2\2\u1bb8\u1bb6\3\2\2\2\u1bb8\u1bb9\3\2"+
		"\2\2\u1bb9\u1bbb\3\2\2\2\u1bba\u1bb8\3\2\2\2\u1bbb\u1bbf\7\u01be\2\2\u1bbc"+
		"\u1bbe\5\f\7\2\u1bbd\u1bbc\3\2\2\2\u1bbe\u1bc1\3\2\2\2\u1bbf\u1bbd\3\2"+
		"\2\2\u1bbf\u1bc0\3\2\2\2\u1bc0\u1bc5\3\2\2\2\u1bc1\u1bbf\3\2\2\2\u1bc2"+
		"\u1bc4\5\u0202\u0102\2\u1bc3\u1bc2\3\2\2\2\u1bc4\u1bc7\3\2\2\2\u1bc5\u1bc3"+
		"\3\2\2\2\u1bc5\u1bc6\3\2\2\2\u1bc6\u0201\3\2\2\2\u1bc7\u1bc5\3\2\2\2\u1bc8"+
		"\u1bd1\5\u0204\u0103\2\u1bc9\u1bd1\5\u0210\u0109\2\u1bca\u1bd1\5\u0212"+
		"\u010a\2\u1bcb\u1bd1\5\u0214\u010b\2\u1bcc\u1bd1\5\u0216\u010c\2\u1bcd"+
		"\u1bd1\5\u0218\u010d\2\u1bce\u1bd1\5\u021a\u010e\2\u1bcf\u1bd1\5\f\7\2"+
		"\u1bd0\u1bc8\3\2\2\2\u1bd0\u1bc9\3\2\2\2\u1bd0\u1bca\3\2\2\2\u1bd0\u1bcb"+
		"\3\2\2\2\u1bd0\u1bcc\3\2\2\2\u1bd0\u1bcd\3\2\2\2\u1bd0\u1bce\3\2\2\2\u1bd0"+
		"\u1bcf\3\2\2\2\u1bd1\u0203\3\2\2\2\u1bd2\u1bd6\7\u011f\2\2\u1bd3\u1bd5"+
		"\5\f\7\2\u1bd4\u1bd3\3\2\2\2\u1bd5\u1bd8\3\2\2\2\u1bd6\u1bd4\3\2\2\2\u1bd6"+
		"\u1bd7\3\2\2\2\u1bd7\u1bd9\3\2\2\2\u1bd8\u1bd6\3\2\2\2\u1bd9\u1bdd\7\u01be"+
		"\2\2\u1bda\u1bdc\5\f\7\2\u1bdb\u1bda\3\2\2\2\u1bdc\u1bdf\3\2\2\2\u1bdd"+
		"\u1bdb\3\2\2\2\u1bdd\u1bde\3\2\2\2\u1bde\u1be0\3\2\2\2\u1bdf\u1bdd\3\2"+
		"\2\2\u1be0\u1be4\5\u0206\u0104\2\u1be1\u1be3\5\f\7\2\u1be2\u1be1\3\2\2"+
		"\2\u1be3\u1be6\3\2\2\2\u1be4\u1be2\3\2\2\2\u1be4\u1be5\3\2\2\2\u1be5\u1be8"+
		"\3\2\2\2\u1be6\u1be4\3\2\2\2\u1be7\u1be9\5\u0208\u0105\2\u1be8\u1be7\3"+
		"\2\2\2\u1be8\u1be9\3\2\2\2\u1be9\u1bed\3\2\2\2\u1bea\u1bec\5\f\7\2\u1beb"+
		"\u1bea\3\2\2\2\u1bec\u1bef\3\2\2\2\u1bed\u1beb\3\2\2\2\u1bed\u1bee\3\2"+
		"\2\2\u1bee\u1bf1\3\2\2\2\u1bef\u1bed\3\2\2\2\u1bf0\u1bf2\5\u020a\u0106"+
		"\2\u1bf1\u1bf0\3\2\2\2\u1bf1\u1bf2\3\2\2\2\u1bf2\u1bf6\3\2\2\2\u1bf3\u1bf5"+
		"\5\f\7\2\u1bf4\u1bf3\3\2\2\2\u1bf5\u1bf8\3\2\2\2\u1bf6\u1bf4\3\2\2\2\u1bf6"+
		"\u1bf7\3\2\2\2\u1bf7\u1bf9\3\2\2\2\u1bf8\u1bf6\3\2\2\2\u1bf9\u1bfa\7\u01be"+
		"\2\2\u1bfa\u0205\3\2\2\2\u1bfb\u1bfc\7\u01c4\2\2\u1bfc\u0207\3\2\2\2\u1bfd"+
		"\u1bff\7\u00d6\2\2\u1bfe\u1c00\5\f\7\2\u1bff\u1bfe\3\2\2\2\u1c00\u1c01"+
		"\3\2\2\2\u1c01\u1bff\3\2\2\2\u1c01\u1c02\3\2\2\2\u1c02\u1c04\3\2\2\2\u1c03"+
		"\u1bfd\3\2\2\2\u1c03\u1c04\3\2\2\2\u1c04\u1c05\3\2\2\2\u1c05\u1c0d\t "+
		"\2\2\u1c06\u1c08\5\f\7\2\u1c07\u1c06\3\2\2\2\u1c08\u1c09\3\2\2\2\u1c09"+
		"\u1c07\3\2\2\2\u1c09\u1c0a\3\2\2\2\u1c0a\u1c0b\3\2\2\2\u1c0b\u1c0c\7\u011e"+
		"\2\2\u1c0c\u1c0e\3\2\2\2\u1c0d\u1c07\3\2\2\2\u1c0d\u1c0e\3\2\2\2\u1c0e"+
		"\u0209\3\2\2\2\u1c0f\u1c11\7\u018b\2\2\u1c10\u1c12\5\f\7\2\u1c11\u1c10"+
		"\3\2\2\2\u1c12\u1c13\3\2\2\2\u1c13\u1c11\3\2\2\2\u1c13\u1c14\3\2\2\2\u1c14"+
		"\u1c16\3\2\2\2\u1c15\u1c0f\3\2\2\2\u1c15\u1c16\3\2\2\2\u1c16\u1c17\3\2"+
		"\2\2\u1c17\u1c19\7\u00c6\2\2\u1c18\u1c1a\5\f\7\2\u1c19\u1c18\3\2\2\2\u1c1a"+
		"\u1c1b\3\2\2\2\u1c1b\u1c19\3\2\2\2\u1c1b\u1c1c\3\2\2\2\u1c1c\u1c1d\3\2"+
		"\2\2\u1c1d\u1c1e\5\u020c\u0107\2\u1c1e\u020b\3\2\2\2\u1c1f\u1c20\7\u01c1"+
		"\2\2\u1c20\u020d\3\2\2\2\u1c21\u1c25\7\u01c5\2\2\u1c22\u1c24\n\3\2\2\u1c23"+
		"\u1c22\3\2\2\2\u1c24\u1c27\3\2\2\2\u1c25\u1c23\3\2\2\2\u1c25\u1c26\3\2"+
		"\2\2\u1c26\u1c28\3\2\2\2\u1c27\u1c25\3\2\2\2\u1c28\u1c2b\7\u01c7\2\2\u1c29"+
		"\u1c2b\5\20\t\2\u1c2a\u1c21\3\2\2\2\u1c2a\u1c29\3\2\2\2\u1c2b\u020f\3"+
		"\2\2\2\u1c2c\u1c30\7 \2\2\u1c2d\u1c2f\5\f\7\2\u1c2e\u1c2d\3\2\2\2\u1c2f"+
		"\u1c32\3\2\2\2\u1c30\u1c2e\3\2\2\2\u1c30\u1c31\3\2\2\2\u1c31\u1c33\3\2"+
		"\2\2\u1c32\u1c30\3\2\2\2\u1c33\u1c37\7\u01be\2\2\u1c34\u1c36\n\3\2\2\u1c35"+
		"\u1c34\3\2\2\2\u1c36\u1c39\3\2\2\2\u1c37\u1c35\3\2\2\2\u1c37\u1c38\3\2"+
		"\2\2\u1c38\u1c3a\3\2\2\2\u1c39\u1c37\3\2\2\2\u1c3a\u1c3e\7\u01c7\2\2\u1c3b"+
		"\u1c3d\5\u020e\u0108\2\u1c3c\u1c3b\3\2\2\2\u1c3d\u1c40\3\2\2\2\u1c3e\u1c3c"+
		"\3\2\2\2\u1c3e\u1c3f\3\2\2\2\u1c3f\u0211\3\2\2\2\u1c40\u1c3e\3\2\2\2\u1c41"+
		"\u1c45\7\u00d3\2\2\u1c42\u1c44\5\f\7\2\u1c43\u1c42\3\2\2\2\u1c44\u1c47"+
		"\3\2\2\2\u1c45\u1c43\3\2\2\2\u1c45\u1c46\3\2\2\2\u1c46\u1c48\3\2\2\2\u1c47"+
		"\u1c45\3\2\2\2\u1c48\u1c4c\7\u01be\2\2\u1c49\u1c4b\n\3\2\2\u1c4a\u1c49"+
		"\3\2\2\2\u1c4b\u1c4e\3\2\2\2\u1c4c\u1c4a\3\2\2\2\u1c4c\u1c4d\3\2\2\2\u1c4d"+
		"\u1c4f\3\2\2\2\u1c4e\u1c4c\3\2\2\2\u1c4f\u1c53\7\u01c7\2\2\u1c50\u1c52"+
		"\5\u020e\u0108\2\u1c51\u1c50\3\2\2\2\u1c52\u1c55\3\2\2\2\u1c53\u1c51\3"+
		"\2\2\2\u1c53\u1c54\3\2\2\2\u1c54\u0213\3\2\2\2\u1c55\u1c53\3\2\2\2\u1c56"+
		"\u1c5a\7h\2\2\u1c57\u1c59\5\f\7\2\u1c58\u1c57\3\2\2\2\u1c59\u1c5c\3\2"+
		"\2\2\u1c5a\u1c58\3\2\2\2\u1c5a\u1c5b\3\2\2\2\u1c5b\u1c5d\3\2\2\2\u1c5c"+
		"\u1c5a\3\2\2\2\u1c5d\u1c61\7\u01be\2\2\u1c5e\u1c60\n\3\2\2\u1c5f\u1c5e"+
		"\3\2\2\2\u1c60\u1c63\3\2\2\2\u1c61\u1c5f\3\2\2\2\u1c61\u1c62\3\2\2\2\u1c62"+
		"\u1c64\3\2\2\2\u1c63\u1c61\3\2\2\2\u1c64\u1c68\7\u01c7\2\2\u1c65\u1c67"+
		"\5\u020e\u0108\2\u1c66\u1c65\3\2\2\2\u1c67\u1c6a\3\2\2\2\u1c68\u1c66\3"+
		"\2\2\2\u1c68\u1c69\3\2\2\2\u1c69\u0215\3\2\2\2\u1c6a\u1c68\3\2\2\2\u1c6b"+
		"\u1c6f\7g\2\2\u1c6c\u1c6e\5\f\7\2\u1c6d\u1c6c\3\2\2\2\u1c6e\u1c71\3\2"+
		"\2\2\u1c6f\u1c6d\3\2\2\2\u1c6f\u1c70\3\2\2\2\u1c70\u1c72\3\2\2\2\u1c71"+
		"\u1c6f\3\2\2\2\u1c72\u1c76\7\u01be\2\2\u1c73\u1c75\n\3\2\2\u1c74\u1c73"+
		"\3\2\2\2\u1c75\u1c78\3\2\2\2\u1c76\u1c74\3\2\2\2\u1c76\u1c77\3\2\2\2\u1c77"+
		"\u1c79\3\2\2\2\u1c78\u1c76\3\2\2\2\u1c79\u1c7d\7\u01c7\2\2\u1c7a\u1c7c"+
		"\5\u020e\u0108\2\u1c7b\u1c7a\3\2\2\2\u1c7c\u1c7f\3\2\2\2\u1c7d\u1c7b\3"+
		"\2\2\2\u1c7d\u1c7e\3\2\2\2\u1c7e\u0217\3\2\2\2\u1c7f\u1c7d\3\2\2\2\u1c80"+
		"\u1c84\7\u0149\2\2\u1c81\u1c83\5\f\7\2\u1c82\u1c81\3\2\2\2\u1c83\u1c86"+
		"\3\2\2\2\u1c84\u1c82\3\2\2\2\u1c84\u1c85\3\2\2\2\u1c85\u1c87\3\2\2\2\u1c86"+
		"\u1c84\3\2\2\2\u1c87\u1c8b\7\u01be\2\2\u1c88\u1c8a\n\3\2\2\u1c89\u1c88"+
		"\3\2\2\2\u1c8a\u1c8d\3\2\2\2\u1c8b\u1c89\3\2\2\2\u1c8b\u1c8c\3\2\2\2\u1c8c"+
		"\u1c8e\3\2\2\2\u1c8d\u1c8b\3\2\2\2\u1c8e\u1c92\7\u01c7\2\2\u1c8f\u1c91"+
		"\5\u020e\u0108\2\u1c90\u1c8f\3\2\2\2\u1c91\u1c94\3\2\2\2\u1c92\u1c90\3"+
		"\2\2\2\u1c92\u1c93\3\2\2\2\u1c93\u0219\3\2\2\2\u1c94\u1c92\3\2\2\2\u1c95"+
		"\u1c99\7\u0105\2\2\u1c96\u1c98\5\f\7\2\u1c97\u1c96\3\2\2\2\u1c98\u1c9b"+
		"\3\2\2\2\u1c99\u1c97\3\2\2\2\u1c99\u1c9a\3\2\2\2\u1c9a\u1c9c\3\2\2\2\u1c9b"+
		"\u1c99\3\2\2\2\u1c9c\u1ca0\7\u01be\2\2\u1c9d\u1c9f\5\f\7\2\u1c9e\u1c9d"+
		"\3\2\2\2\u1c9f\u1ca2\3\2\2\2\u1ca0\u1c9e\3\2\2\2\u1ca0\u1ca1\3\2\2\2\u1ca1"+
		"\u1ca4\3\2\2\2\u1ca2\u1ca0\3\2\2\2\u1ca3\u1ca5\5\u021c\u010f\2\u1ca4\u1ca3"+
		"\3\2\2\2\u1ca4\u1ca5\3\2\2\2\u1ca5\u1ca9\3\2\2\2\u1ca6\u1ca8\5\f\7\2\u1ca7"+
		"\u1ca6\3\2\2\2\u1ca8\u1cab\3\2\2\2\u1ca9\u1ca7\3\2\2\2\u1ca9\u1caa\3\2"+
		"\2\2\u1caa\u1cad\3\2\2\2\u1cab\u1ca9\3\2\2\2\u1cac\u1cae\7\u01be\2\2\u1cad"+
		"\u1cac\3\2\2\2\u1cad\u1cae\3\2\2\2\u1cae\u021b\3\2\2\2\u1caf\u1cb1\7\33"+
		"\2\2\u1cb0\u1cb2\5\f\7\2\u1cb1\u1cb0\3\2\2\2\u1cb2\u1cb3\3\2\2\2\u1cb3"+
		"\u1cb1\3\2\2\2\u1cb3\u1cb4\3\2\2\2\u1cb4\u1cbb\3\2\2\2\u1cb5\u1cb7\7\u00d6"+
		"\2\2\u1cb6\u1cb8\5\f\7\2\u1cb7\u1cb6\3\2\2\2\u1cb8\u1cb9\3\2\2\2\u1cb9"+
		"\u1cb7\3\2\2\2\u1cb9\u1cba\3\2\2\2\u1cba\u1cbc\3\2\2\2\u1cbb\u1cb5\3\2"+
		"\2\2\u1cbb\u1cbc\3\2\2\2\u1cbc\u1cbd\3\2\2\2\u1cbd\u1cc1\t!\2\2\u1cbe"+
		"\u1cc0\5\f\7\2\u1cbf\u1cbe\3\2\2\2\u1cc0\u1cc3\3\2\2\2\u1cc1\u1cbf\3\2"+
		"\2\2\u1cc1\u1cc2\3\2\2\2\u1cc2\u1cc4\3\2\2\2\u1cc3\u1cc1\3\2\2\2\u1cc4"+
		"\u1cc5\7\u01be\2\2\u1cc5\u021d\3\2\2\2\u1cc6\u1cc8\7\u0097\2\2\u1cc7\u1cc9"+
		"\5\f\7\2\u1cc8\u1cc7\3\2\2\2\u1cc9\u1cca\3\2\2\2\u1cca\u1cc8\3\2\2\2\u1cca"+
		"\u1ccb\3\2\2\2\u1ccb\u1ccc\3\2\2\2\u1ccc\u1cd0\7z\2\2\u1ccd\u1ccf\5\f"+
		"\7\2\u1cce\u1ccd\3\2\2\2\u1ccf\u1cd2\3\2\2\2\u1cd0\u1cce\3\2\2\2\u1cd0"+
		"\u1cd1\3\2\2\2\u1cd1\u1cd3\3\2\2\2\u1cd2\u1cd0\3\2\2\2\u1cd3\u1cd7\7\u01be"+
		"\2\2\u1cd4\u1cd6\5\f\7\2\u1cd5\u1cd4\3\2\2\2\u1cd6\u1cd9\3\2\2\2\u1cd7"+
		"\u1cd5\3\2\2\2\u1cd7\u1cd8\3\2\2\2\u1cd8\u1cdb\3\2\2\2\u1cd9\u1cd7\3\2"+
		"\2\2\u1cda\u1cdc\5\u0220\u0111\2\u1cdb\u1cda\3\2\2\2\u1cdb\u1cdc\3\2\2"+
		"\2\u1cdc\u1cde\3\2\2\2\u1cdd\u1cdf\5\u0222\u0112\2\u1cde\u1cdd\3\2\2\2"+
		"\u1cde\u1cdf\3\2\2\2\u1cdf\u021f\3\2\2\2\u1ce0\u1ce2\7S\2\2\u1ce1\u1ce3"+
		"\5\f\7\2\u1ce2\u1ce1\3\2\2\2\u1ce3\u1ce4\3\2\2\2\u1ce4\u1ce2\3\2\2\2\u1ce4"+
		"\u1ce5\3\2\2\2\u1ce5\u1ce6\3\2\2\2\u1ce6\u1cea\7\u0147\2\2\u1ce7\u1ce9"+
		"\5\f\7\2\u1ce8\u1ce7\3\2\2\2\u1ce9\u1cec\3\2\2\2\u1cea\u1ce8\3\2\2\2\u1cea"+
		"\u1ceb\3\2\2\2\u1ceb\u1ced\3\2\2\2\u1cec\u1cea\3\2\2\2\u1ced\u1cf1\7\u01be"+
		"\2\2\u1cee\u1cf0\5\f\7\2\u1cef\u1cee\3\2\2\2\u1cf0\u1cf3\3\2\2\2\u1cf1"+
		"\u1cef\3\2\2\2\u1cf1\u1cf2\3\2\2\2\u1cf2\u1cf5\3\2\2\2\u1cf3\u1cf1\3\2"+
		"\2\2\u1cf4\u1cf6\5\u0224\u0113\2\u1cf5\u1cf4\3\2\2\2\u1cf5\u1cf6\3\2\2"+
		"\2\u1cf6\u1cfa\3\2\2\2\u1cf7\u1cf9\5\f\7\2\u1cf8\u1cf7\3\2\2\2\u1cf9\u1cfc"+
		"\3\2\2\2\u1cfa\u1cf8\3\2\2\2\u1cfa\u1cfb\3\2\2\2\u1cfb\u1cfe\3\2\2\2\u1cfc"+
		"\u1cfa\3\2\2\2\u1cfd\u1cff\5\u022a\u0116\2\u1cfe\u1cfd\3\2\2\2\u1cfe\u1cff"+
		"\3\2\2\2\u1cff\u1d03\3\2\2\2\u1d00\u1d02\5\f\7\2\u1d01\u1d00\3\2\2\2\u1d02"+
		"\u1d05\3\2\2\2\u1d03\u1d01\3\2\2\2\u1d03\u1d04\3\2\2\2\u1d04\u1d07\3\2"+
		"\2\2\u1d05\u1d03\3\2\2\2\u1d06\u1d08\5\u023a\u011e\2\u1d07\u1d06\3\2\2"+
		"\2\u1d07\u1d08\3\2\2\2\u1d08\u1d0c\3\2\2\2\u1d09\u1d0b\5\f\7\2\u1d0a\u1d09"+
		"\3\2\2\2\u1d0b\u1d0e\3\2\2\2\u1d0c\u1d0a\3\2\2\2\u1d0c\u1d0d\3\2\2\2\u1d0d"+
		"\u0221\3\2\2\2\u1d0e\u1d0c\3\2\2\2\u1d0f\u1d11\7\u00d1\2\2\u1d10\u1d12"+
		"\5\f\7\2\u1d11\u1d10\3\2\2\2\u1d12\u1d13\3\2\2\2\u1d13\u1d11\3\2\2\2\u1d13"+
		"\u1d14\3\2\2\2\u1d14\u1d15\3\2\2\2\u1d15\u1d19\7\u0147\2\2\u1d16\u1d18"+
		"\5\f\7\2\u1d17\u1d16\3\2\2\2\u1d18\u1d1b\3\2\2\2\u1d19\u1d17\3\2\2\2\u1d19"+
		"\u1d1a\3\2\2\2\u1d1a\u1d1c\3\2\2\2\u1d1b\u1d19\3\2\2\2\u1d1c\u1d20\7\u01be"+
		"\2\2\u1d1d\u1d1f\5\f\7\2\u1d1e\u1d1d\3\2\2\2\u1d1f\u1d22\3\2\2\2\u1d20"+
		"\u1d1e\3\2\2\2\u1d20\u1d21\3\2\2\2\u1d21\u1d24\3\2\2\2\u1d22\u1d20\3\2"+
		"\2\2\u1d23\u1d25\5\u027c\u013f\2\u1d24\u1d23\3\2\2\2\u1d24\u1d25\3\2\2"+
		"\2\u1d25\u1d27\3\2\2\2\u1d26\u1d28\5\u02aa\u0156\2\u1d27\u1d26\3\2\2\2"+
		"\u1d27\u1d28\3\2\2\2\u1d28\u0223\3\2\2\2\u1d29\u1d2d\7\u0156\2\2\u1d2a"+
		"\u1d2c\5\f\7\2\u1d2b\u1d2a\3\2\2\2\u1d2c\u1d2f\3\2\2\2\u1d2d\u1d2b\3\2"+
		"\2\2\u1d2d\u1d2e\3\2\2\2\u1d2e\u1d30\3\2\2\2\u1d2f\u1d2d\3\2\2\2\u1d30"+
		"\u1d34\7\u01be\2\2\u1d31\u1d33\5\f\7\2\u1d32\u1d31\3\2\2\2\u1d33\u1d36"+
		"\3\2\2\2\u1d34\u1d32\3\2\2\2\u1d34\u1d35\3\2\2\2\u1d35\u1d49\3\2\2\2\u1d36"+
		"\u1d34\3\2\2\2\u1d37\u1d3f\5\u0226\u0114\2\u1d38\u1d3a\5\f\7\2\u1d39\u1d38"+
		"\3\2\2\2\u1d3a\u1d3b\3\2\2\2\u1d3b\u1d39\3\2\2\2\u1d3b\u1d3c\3\2\2\2\u1d3c"+
		"\u1d3d\3\2\2\2\u1d3d\u1d3e\5\u0228\u0115\2\u1d3e\u1d40\3\2\2\2\u1d3f\u1d39"+
		"\3\2\2\2\u1d3f\u1d40\3\2\2\2\u1d40\u1d44\3\2\2\2\u1d41\u1d43\5\f\7\2\u1d42"+
		"\u1d41\3\2\2\2\u1d43\u1d46\3\2\2\2\u1d44\u1d42\3\2\2\2\u1d44\u1d45\3\2"+
		"\2\2\u1d45\u1d47\3\2\2\2\u1d46\u1d44\3\2\2\2\u1d47\u1d48\7\u01be\2\2\u1d48"+
		"\u1d4a\3\2\2\2\u1d49\u1d37\3\2\2\2\u1d49\u1d4a\3\2\2\2\u1d4a\u0225\3\2"+
		"\2\2\u1d4b\u1d4c\t\"\2\2\u1d4c\u0227\3\2\2\2\u1d4d\u1d4f\7\u018b\2\2\u1d4e"+
		"\u1d50\5\f\7\2\u1d4f\u1d4e\3\2\2\2\u1d50\u1d51\3\2\2\2\u1d51\u1d4f\3\2"+
		"\2\2\u1d51\u1d52\3\2\2\2\u1d52\u1d54\3\2\2\2\u1d53\u1d4d\3\2\2\2\u1d53"+
		"\u1d54\3\2\2\2\u1d54\u1d55\3\2\2\2\u1d55\u1d57\7l\2\2\u1d56\u1d58\5\f"+
		"\7\2\u1d57\u1d56\3\2\2\2\u1d58\u1d59\3\2\2\2\u1d59\u1d57\3\2\2\2\u1d59"+
		"\u1d5a\3\2\2\2\u1d5a\u1d5b\3\2\2\2\u1d5b\u1d5c\7\u00f1\2\2\u1d5c\u0229"+
		"\3\2\2\2\u1d5d\u1d61\7\u00fd\2\2\u1d5e\u1d60\5\f\7\2\u1d5f\u1d5e\3\2\2"+
		"\2\u1d60\u1d63\3\2\2\2\u1d61\u1d5f\3\2\2\2\u1d61\u1d62\3\2\2\2\u1d62\u1d64"+
		"\3\2\2\2\u1d63\u1d61\3\2\2\2\u1d64\u1d68\7\u01be\2\2\u1d65\u1d67\5\f\7"+
		"\2\u1d66\u1d65\3\2\2\2\u1d67\u1d6a\3\2\2\2\u1d68\u1d66\3\2\2\2\u1d68\u1d69"+
		"\3\2\2\2\u1d69\u1d8f\3\2\2\2\u1d6a\u1d68\3\2\2\2\u1d6b\u1d73\5\u0226\u0114"+
		"\2\u1d6c\u1d6e\5\f\7\2\u1d6d\u1d6c\3\2\2\2\u1d6e\u1d6f\3\2\2\2\u1d6f\u1d6d"+
		"\3\2\2\2\u1d6f\u1d70\3\2\2\2\u1d70\u1d71\3\2\2\2\u1d71\u1d72\5\u022c\u0117"+
		"\2\u1d72\u1d74\3\2\2\2\u1d73\u1d6d\3\2\2\2\u1d73\u1d74\3\2\2\2\u1d74\u1d7c"+
		"\3\2\2\2\u1d75\u1d77\5\f\7\2\u1d76\u1d75\3\2\2\2\u1d77\u1d78\3\2\2\2\u1d78"+
		"\u1d76\3\2\2\2\u1d78\u1d79\3\2\2\2\u1d79\u1d7a\3\2\2\2\u1d7a\u1d7b\5\u0232"+
		"\u011a\2\u1d7b\u1d7d\3\2\2\2\u1d7c\u1d76\3\2\2\2\u1d7c\u1d7d\3\2\2\2\u1d7d"+
		"\u1d85\3\2\2\2\u1d7e\u1d80\5\f\7\2\u1d7f\u1d7e\3\2\2\2\u1d80\u1d81\3\2"+
		"\2\2\u1d81\u1d7f\3\2\2\2\u1d81\u1d82\3\2\2\2\u1d82\u1d83\3\2\2\2\u1d83"+
		"\u1d84\5\u0236\u011c\2\u1d84\u1d86\3\2\2\2\u1d85\u1d7f\3\2\2\2\u1d85\u1d86"+
		"\3\2\2\2\u1d86\u1d8a\3\2\2\2\u1d87\u1d89\5\f\7\2\u1d88\u1d87\3\2\2\2\u1d89"+
		"\u1d8c\3\2\2\2\u1d8a\u1d88\3\2\2\2\u1d8a\u1d8b\3\2\2\2\u1d8b\u1d8d\3\2"+
		"\2\2\u1d8c\u1d8a\3\2\2\2\u1d8d\u1d8e\7\u01be\2\2\u1d8e\u1d90\3\2\2\2\u1d8f"+
		"\u1d6b\3\2\2\2\u1d8f\u1d90\3\2\2\2\u1d90\u022b\3\2\2\2\u1d91\u1d99\7\u00ef"+
		"\2\2\u1d92\u1d94\5\f\7\2\u1d93\u1d92\3\2\2\2\u1d94\u1d95\3\2\2\2\u1d95"+
		"\u1d93\3\2\2\2\u1d95\u1d96\3\2\2\2\u1d96\u1d97\3\2\2\2\u1d97\u1d98\7\u0152"+
		"\2\2\u1d98\u1d9a\3\2\2\2\u1d99\u1d93\3\2\2\2\u1d99\u1d9a\3\2\2\2\u1d9a"+
		"\u1d9c\3\2\2\2\u1d9b\u1d9d\5\f\7\2\u1d9c\u1d9b\3\2\2\2\u1d9d\u1d9e\3\2"+
		"\2\2\u1d9e\u1d9c\3\2\2\2\u1d9e\u1d9f\3\2\2\2\u1d9f\u1da0\3\2\2\2\u1da0"+
		"\u1da2\5\u022e\u0118\2\u1da1\u1da3\5\f\7\2\u1da2\u1da1\3\2\2\2\u1da3\u1da4"+
		"\3\2\2\2\u1da4\u1da2\3\2\2\2\u1da4\u1da5\3\2\2\2\u1da5\u1da6\3\2\2\2\u1da6"+
		"\u1da7\5\u0230\u0119\2\u1da7\u022d\3\2\2\2\u1da8\u1da9\7\u01c2\2\2\u1da9"+
		"\u022f\3\2\2\2\u1daa\u1dab\t#\2\2\u1dab\u0231\3\2\2\2\u1dac\u1dae\7\u011e"+
		"\2\2\u1dad\u1daf\5\f\7\2\u1dae\u1dad\3\2\2\2\u1daf\u1db0\3\2\2\2\u1db0"+
		"\u1dae\3\2\2\2\u1db0\u1db1\3\2\2\2\u1db1\u1db3\3\2\2\2\u1db2\u1dac\3\2"+
		"\2\2\u1db2\u1db3\3\2\2\2\u1db3\u1dba\3\2\2\2\u1db4\u1db6\7@\2\2\u1db5"+
		"\u1db7\5\f\7\2\u1db6\u1db5\3\2\2\2\u1db7\u1db8\3\2\2\2\u1db8\u1db6\3\2"+
		"\2\2\u1db8\u1db9\3\2\2\2\u1db9\u1dbb\3\2\2\2\u1dba\u1db4\3\2\2\2\u1dba"+
		"\u1dbb\3\2\2\2\u1dbb\u1dbc\3\2\2\2\u1dbc\u1dc4\7\u014d\2\2\u1dbd\u1dbf"+
		"\5\f\7\2\u1dbe\u1dbd\3\2\2\2\u1dbf\u1dc0\3\2\2\2\u1dc0\u1dbe\3\2\2\2\u1dc0"+
		"\u1dc1\3\2\2\2\u1dc1\u1dc2\3\2\2\2\u1dc2\u1dc3\7\u00d6\2\2\u1dc3\u1dc5"+
		"\3\2\2\2\u1dc4\u1dbe\3\2\2\2\u1dc4\u1dc5\3\2\2\2\u1dc5\u1dc7\3\2\2\2\u1dc6"+
		"\u1dc8\5\f\7\2\u1dc7\u1dc6\3\2\2\2\u1dc8\u1dc9\3\2\2\2\u1dc9\u1dc7\3\2"+
		"\2\2\u1dc9\u1dca\3\2\2\2\u1dca\u1dcb\3\2\2\2\u1dcb\u1dcc\5\u0234\u011b"+
		"\2\u1dcc\u0233\3\2\2\2\u1dcd\u1dce\7\u01c4\2\2\u1dce\u0235\3\2\2\2\u1dcf"+
		"\u1dd7\7\u014a\2\2\u1dd0\u1dd2\5\f\7\2\u1dd1\u1dd0\3\2\2\2\u1dd2\u1dd3"+
		"\3\2\2\2\u1dd3\u1dd1\3\2\2\2\u1dd3\u1dd4\3\2\2\2\u1dd4\u1dd5\3\2\2\2\u1dd5"+
		"\u1dd6\7\u00d6\2\2\u1dd6\u1dd8\3\2\2\2\u1dd7\u1dd1\3\2\2\2\u1dd7\u1dd8"+
		"\3\2\2\2\u1dd8\u1dd9\3\2\2\2\u1dd9\u1dda\5\u0238\u011d\2\u1dda\u0237\3"+
		"\2\2\2\u1ddb\u1ddc\7\u01c2\2\2\u1ddc\u0239\3\2\2\2\u1ddd\u1de1\7\u0159"+
		"\2\2\u1dde\u1de0\5\f\7\2\u1ddf\u1dde\3\2\2\2\u1de0\u1de3\3\2\2\2\u1de1"+
		"\u1ddf\3\2\2\2\u1de1\u1de2\3\2\2\2\u1de2\u1de4\3\2\2\2\u1de3\u1de1\3\2"+
		"\2\2\u1de4\u1de8\7\u01be\2\2\u1de5\u1de7\5\f\7\2\u1de6\u1de5\3\2\2\2\u1de7"+
		"\u1dea\3\2\2\2\u1de8\u1de6\3\2\2\2\u1de8\u1de9\3\2\2\2\u1de9\u1df8\3\2"+
		"\2\2\u1dea\u1de8\3\2\2\2\u1deb\u1def\5\u023c\u011f\2\u1dec\u1dee\5\f\7"+
		"\2\u1ded\u1dec\3\2\2\2\u1dee\u1df1\3\2\2\2\u1def\u1ded\3\2\2\2\u1def\u1df0"+
		"\3\2\2\2\u1df0\u1df3\3\2\2\2\u1df1\u1def\3\2\2\2\u1df2\u1deb\3\2\2\2\u1df3"+
		"\u1df4\3\2\2\2\u1df4\u1df2\3\2\2\2\u1df4\u1df5\3\2\2\2\u1df5\u1df6\3\2"+
		"\2\2\u1df6\u1df7\7\u01be\2\2\u1df7\u1df9\3\2\2\2\u1df8\u1df2\3\2\2\2\u1df8"+
		"\u1df9\3\2\2\2\u1df9\u023b\3\2\2\2\u1dfa\u1dfc\5\u0274\u013b\2\u1dfb\u1dfd"+
		"\5\f\7\2\u1dfc\u1dfb\3\2\2\2\u1dfd\u1dfe\3\2\2\2\u1dfe\u1dfc\3\2\2\2\u1dfe"+
		"\u1dff\3\2\2\2\u1dff\u1e06\3\2\2\2\u1e00\u1e02\7\u00d6\2\2\u1e01\u1e03"+
		"\5\f\7\2\u1e02\u1e01\3\2\2\2\u1e03\u1e04\3\2\2\2\u1e04\u1e02\3\2\2\2\u1e04"+
		"\u1e05\3\2\2\2\u1e05\u1e07\3\2\2\2\u1e06\u1e00\3\2\2\2\u1e06\u1e07\3\2"+
		"\2\2\u1e07\u1e08\3\2\2\2\u1e08\u1e09\5\u0276\u013c\2\u1e09\u1e66\3\2\2"+
		"\2\u1e0a\u1e0c\5\u0278\u013d\2\u1e0b\u1e0d\5\f\7\2\u1e0c\u1e0b\3\2\2\2"+
		"\u1e0d\u1e0e\3\2\2\2\u1e0e\u1e0c\3\2\2\2\u1e0e\u1e0f\3\2\2\2\u1e0f\u1e16"+
		"\3\2\2\2\u1e10\u1e12\7\u00d6\2\2\u1e11\u1e13\5\f\7\2\u1e12\u1e11\3\2\2"+
		"\2\u1e13\u1e14\3\2\2\2\u1e14\u1e12\3\2\2\2\u1e14\u1e15\3\2\2\2\u1e15\u1e17"+
		"\3\2\2\2\u1e16\u1e10\3\2\2\2\u1e16\u1e17\3\2\2\2\u1e17\u1e18\3\2\2\2\u1e18"+
		"\u1e19\5\u027a\u013e\2\u1e19\u1e66\3\2\2\2\u1e1a\u1e1c\7\63\2\2\u1e1b"+
		"\u1e1d\5\f\7\2\u1e1c\u1e1b\3\2\2\2\u1e1d\u1e1e\3\2\2\2\u1e1e\u1e1c\3\2"+
		"\2\2\u1e1e\u1e1f\3\2\2\2\u1e1f\u1e26\3\2\2\2\u1e20\u1e22\7\u00d6\2\2\u1e21"+
		"\u1e23\5\f\7\2\u1e22\u1e21\3\2\2\2\u1e23\u1e24\3\2\2\2\u1e24\u1e22\3\2"+
		"\2\2\u1e24\u1e25\3\2\2\2\u1e25\u1e27\3\2\2\2\u1e26\u1e20\3\2\2\2\u1e26"+
		"\u1e27\3\2\2\2\u1e27\u1e28\3\2\2\2\u1e28\u1e29\5\u0272\u013a\2\u1e29\u1e66"+
		"\3\2\2\2\u1e2a\u1e66\5\u0266\u0134\2\u1e2b\u1e66\5\u025a\u012e\2\u1e2c"+
		"\u1e66\5\u024e\u0128\2\u1e2d\u1e66\5\u0248\u0125\2\u1e2e\u1e66\5\u0240"+
		"\u0121\2\u1e2f\u1e31\7m\2\2\u1e30\u1e32\5\f\7\2\u1e31\u1e30\3\2\2\2\u1e32"+
		"\u1e33\3\2\2\2\u1e33\u1e31\3\2\2\2\u1e33\u1e34\3\2\2\2\u1e34\u1e3b\3\2"+
		"\2\2\u1e35\u1e37\7\u00d6\2\2\u1e36\u1e38\5\f\7\2\u1e37\u1e36\3\2\2\2\u1e38"+
		"\u1e39\3\2\2\2\u1e39\u1e37\3\2\2\2\u1e39\u1e3a\3\2\2\2\u1e3a\u1e3c\3\2"+
		"\2\2\u1e3b\u1e35\3\2\2\2\u1e3b\u1e3c\3\2\2\2\u1e3c\u1e3d\3\2\2\2\u1e3d"+
		"\u1e3e\7B\2\2\u1e3e\u1e66\3\2\2\2\u1e3f\u1e41\7d\2\2\u1e40\u1e42\5\f\7"+
		"\2\u1e41\u1e40\3\2\2\2\u1e42\u1e43\3\2\2\2\u1e43\u1e41\3\2\2\2\u1e43\u1e44"+
		"\3\2\2\2\u1e44\u1e4b\3\2\2\2\u1e45\u1e47\7\u00d6\2\2\u1e46\u1e48\5\f\7"+
		"\2\u1e47\u1e46\3\2\2\2\u1e48\u1e49\3\2\2\2\u1e49\u1e47\3\2\2\2\u1e49\u1e4a"+
		"\3\2\2\2\u1e4a\u1e4c\3\2\2\2\u1e4b\u1e45\3\2\2\2\u1e4b\u1e4c\3\2\2\2\u1e4c"+
		"\u1e4d\3\2\2\2\u1e4d\u1e4e\5\u023e\u0120\2\u1e4e\u1e66\3\2\2\2\u1e4f\u1e51"+
		"\7a\2\2\u1e50\u1e52\5\f\7\2\u1e51\u1e50\3\2\2\2\u1e52\u1e53\3\2\2\2\u1e53"+
		"\u1e51\3\2\2\2\u1e53\u1e54\3\2\2\2\u1e54\u1e55\3\2\2\2\u1e55\u1e57\7\u015e"+
		"\2\2\u1e56\u1e58\5\f\7\2\u1e57\u1e56\3\2\2\2\u1e58\u1e59\3\2\2\2\u1e59"+
		"\u1e57\3\2\2\2\u1e59\u1e5a\3\2\2\2\u1e5a\u1e61\3\2\2\2\u1e5b\u1e5d\7\u00d6"+
		"\2\2\u1e5c\u1e5e\5\f\7\2\u1e5d\u1e5c\3\2\2\2\u1e5e\u1e5f\3\2\2\2\u1e5f"+
		"\u1e5d\3\2\2\2\u1e5f\u1e60\3\2\2\2\u1e60\u1e62\3\2\2\2\u1e61\u1e5b\3\2"+
		"\2\2\u1e61\u1e62\3\2\2\2\u1e62\u1e63\3\2\2\2\u1e63\u1e64\5\u023e\u0120"+
		"\2\u1e64\u1e66\3\2\2\2\u1e65\u1dfa\3\2\2\2\u1e65\u1e0a\3\2\2\2\u1e65\u1e1a"+
		"\3\2\2\2\u1e65\u1e2a\3\2\2\2\u1e65\u1e2b\3\2\2\2\u1e65\u1e2c\3\2\2\2\u1e65"+
		"\u1e2d\3\2\2\2\u1e65\u1e2e\3\2\2\2\u1e65\u1e2f\3\2\2\2\u1e65\u1e3f\3\2"+
		"\2\2\u1e65\u1e4f\3\2\2\2\u1e66\u023d\3\2\2\2\u1e67\u1e77\7\u01c4\2\2\u1e68"+
		"\u1e6a\5\f\7\2\u1e69\u1e68\3\2\2\2\u1e6a\u1e6b\3\2\2\2\u1e6b\u1e69\3\2"+
		"\2\2\u1e6b\u1e6c\3\2\2\2\u1e6c\u1e6d\3\2\2\2\u1e6d\u1e6f\t$\2\2\u1e6e"+
		"\u1e70\5\f\7\2\u1e6f\u1e6e\3\2\2\2\u1e70\u1e71\3\2\2\2\u1e71\u1e6f\3\2"+
		"\2\2\u1e71\u1e72\3\2\2\2\u1e72\u1e73\3\2\2\2\u1e73\u1e74\7\u01c4\2\2\u1e74"+
		"\u1e76\3\2\2\2\u1e75\u1e69\3\2\2\2\u1e76\u1e79\3\2\2\2\u1e77\u1e75\3\2"+
		"\2\2\u1e77\u1e78\3\2\2\2\u1e78\u023f\3\2\2\2\u1e79\u1e77\3\2\2\2\u1e7a"+
		"\u1e7c\7b\2\2\u1e7b\u1e7d\5\f\7\2\u1e7c\u1e7b\3\2\2\2\u1e7d\u1e7e\3\2"+
		"\2\2\u1e7e\u1e7c\3\2\2\2\u1e7e\u1e7f\3\2\2\2\u1e7f\u1e86\3\2\2\2\u1e80"+
		"\u1e82\7\u0150\2\2\u1e81\u1e83\5\f\7\2\u1e82\u1e81\3\2\2\2\u1e83\u1e84"+
		"\3\2\2\2\u1e84\u1e82\3\2\2\2\u1e84\u1e85\3\2\2\2\u1e85\u1e87\3\2\2\2\u1e86"+
		"\u1e80\3\2\2\2\u1e86\u1e87\3\2\2\2\u1e87\u1e8e\3\2\2\2\u1e88\u1e8a\7\u00d6"+
		"\2\2\u1e89\u1e8b\5\f\7\2\u1e8a\u1e89\3\2\2\2\u1e8b\u1e8c\3\2\2\2\u1e8c"+
		"\u1e8a\3\2\2\2\u1e8c\u1e8d\3\2\2\2\u1e8d\u1e8f\3\2\2\2\u1e8e\u1e88\3\2"+
		"\2\2\u1e8e\u1e8f\3\2\2\2\u1e8f\u1e90\3\2\2\2\u1e90\u1e91\5\u0242\u0122"+
		"\2\u1e91\u0241\3\2\2\2\u1e92\u1e99\5\u0244\u0123\2\u1e93\u1e95\7\u018b"+
		"\2\2\u1e94\u1e96\5\f\7\2\u1e95\u1e94\3\2\2\2\u1e96\u1e97\3\2\2\2\u1e97"+
		"\u1e95\3\2\2\2\u1e97\u1e98\3\2\2\2\u1e98\u1e9a\3\2\2\2\u1e99\u1e93\3\2"+
		"\2\2\u1e99\u1e9a\3\2\2\2\u1e9a\u1e9b\3\2\2\2\u1e9b\u1e9d\7\u0113\2\2\u1e9c"+
		"\u1e9e\5\f\7\2\u1e9d\u1e9c\3\2\2\2\u1e9e\u1e9f\3\2\2\2\u1e9f\u1e9d\3\2"+
		"\2\2\u1e9f\u1ea0\3\2\2\2\u1ea0\u1ea1\3\2\2\2\u1ea1\u1ea3\7\u0166\2\2\u1ea2"+
		"\u1ea4\5\f\7\2\u1ea3\u1ea2\3\2\2\2\u1ea4\u1ea5\3\2\2\2\u1ea5\u1ea3\3\2"+
		"\2\2\u1ea5\u1ea6\3\2\2\2\u1ea6\u1ea7\3\2\2\2\u1ea7\u1ea8\5\u0246\u0124"+
		"\2\u1ea8\u1eab\3\2\2\2\u1ea9\u1eab\7\u01c1\2\2\u1eaa\u1e92\3\2\2\2\u1eaa"+
		"\u1ea9\3\2\2\2\u1eab\u0243\3\2\2\2\u1eac\u1ead\7\u01c1\2\2\u1ead\u0245"+
		"\3\2\2\2\u1eae\u1eaf\7\u01c1\2\2\u1eaf\u0247\3\2\2\2\u1eb0\u1eb2\7;\2"+
		"\2\u1eb1\u1eb3\5\f\7\2\u1eb2\u1eb1\3\2\2\2\u1eb3\u1eb4\3\2\2\2\u1eb4\u1eb2"+
		"\3\2\2\2\u1eb4\u1eb5\3\2\2\2\u1eb5\u1eb6\3\2\2\2\u1eb6\u1eb8\5\u024a\u0126"+
		"\2\u1eb7\u1eb9\5\f\7\2\u1eb8\u1eb7\3\2\2\2\u1eb9\u1eba\3\2\2\2\u1eba\u1eb8"+
		"\3\2\2\2\u1eba\u1ebb\3\2\2\2\u1ebb\u1ec2\3\2\2\2\u1ebc\u1ebe\7\u00d6\2"+
		"\2\u1ebd\u1ebf\5\f\7\2\u1ebe\u1ebd\3\2\2\2\u1ebf\u1ec0\3\2\2\2\u1ec0\u1ebe"+
		"\3\2\2\2\u1ec0\u1ec1\3\2\2\2\u1ec1\u1ec3\3\2\2\2\u1ec2\u1ebc\3\2\2\2\u1ec2"+
		"\u1ec3\3\2\2\2\u1ec3\u1ecb\3\2\2\2\u1ec4\u1ec8\5\u024c\u0127\2\u1ec5\u1ec7"+
		"\5\f\7\2\u1ec6\u1ec5\3\2\2\2\u1ec7\u1eca\3\2\2\2\u1ec8\u1ec6\3\2\2\2\u1ec8"+
		"\u1ec9\3\2\2\2\u1ec9\u1ecc\3\2\2\2\u1eca\u1ec8\3\2\2\2\u1ecb\u1ec4\3\2"+
		"\2\2\u1ecc\u1ecd\3\2\2\2\u1ecd\u1ecb\3\2\2\2\u1ecd\u1ece\3\2\2\2\u1ece"+
		"\u0249\3\2\2\2\u1ecf\u1ed0\7\u01c4\2\2\u1ed0\u024b\3\2\2\2\u1ed1\u1edf"+
		"\5\u0260\u0131\2\u1ed2\u1ed4\5\f\7\2\u1ed3\u1ed2\3\2\2\2\u1ed4\u1ed5\3"+
		"\2\2\2\u1ed5\u1ed3\3\2\2\2\u1ed5\u1ed6\3\2\2\2\u1ed6\u1ed7\3\2\2\2\u1ed7"+
		"\u1ed9\t\7\2\2\u1ed8\u1eda\5\f\7\2\u1ed9\u1ed8\3\2\2\2\u1eda\u1edb\3\2"+
		"\2\2\u1edb\u1ed9\3\2\2\2\u1edb\u1edc\3\2\2\2\u1edc\u1edd\3\2\2\2\u1edd"+
		"\u1ede\5\u0262\u0132\2\u1ede\u1ee0\3\2\2\2\u1edf\u1ed3\3\2\2\2\u1edf\u1ee0"+
		"\3\2\2\2\u1ee0\u024d\3\2\2\2\u1ee1\u1ee3\7\u0167\2\2\u1ee2\u1ee4\5\f\7"+
		"\2\u1ee3\u1ee2\3\2\2\2\u1ee4\u1ee5\3\2\2\2\u1ee5\u1ee3\3\2\2\2\u1ee5\u1ee6"+
		"\3\2\2\2\u1ee6\u1eed\3\2\2\2\u1ee7\u1ee9\7:\2\2\u1ee8\u1eea\5\f\7\2\u1ee9"+
		"\u1ee8\3\2\2\2\u1eea\u1eeb\3\2\2\2\u1eeb\u1ee9\3\2\2\2\u1eeb\u1eec\3\2"+
		"\2\2\u1eec\u1eee\3\2\2\2\u1eed\u1ee7\3\2\2\2\u1eed\u1eee\3\2\2\2\u1eee"+
		"\u1ef0\3\2\2\2\u1eef\u1ef1\5\u0250\u0129\2\u1ef0\u1eef\3\2\2\2\u1ef1\u1ef2"+
		"\3\2\2\2\u1ef2\u1ef0\3\2\2\2\u1ef2\u1ef3\3\2\2\2\u1ef3\u024f\3\2\2\2\u1ef4"+
		"\u1ef6\5\u0252\u012a\2\u1ef5\u1ef4\3\2\2\2\u1ef6\u1ef7\3\2\2\2\u1ef7\u1ef5"+
		"\3\2\2\2\u1ef7\u1ef8\3\2\2\2\u1ef8\u1efa\3\2\2\2\u1ef9\u1efb\5\u0254\u012b"+
		"\2\u1efa\u1ef9\3\2\2\2\u1efa\u1efb\3\2\2\2\u1efb\u0251\3\2\2\2\u1efc\u1efe"+
		"\5\u0256\u012c\2\u1efd\u1eff\5\f\7\2\u1efe\u1efd\3\2\2\2\u1eff\u1f00\3"+
		"\2\2\2\u1f00\u1efe\3\2\2\2\u1f00\u1f01\3\2\2\2\u1f01\u1f03\3\2\2\2\u1f02"+
		"\u1efc\3\2\2\2\u1f03\u1f04\3\2\2\2\u1f04\u1f02\3\2\2\2\u1f04\u1f05\3\2"+
		"\2\2\u1f05\u1f0c\3\2\2\2\u1f06\u1f08\t%\2\2\u1f07\u1f09\5\f\7\2\u1f08"+
		"\u1f07\3\2\2\2\u1f09\u1f0a\3\2\2\2\u1f0a\u1f08\3\2\2\2\u1f0a\u1f0b\3\2"+
		"\2\2\u1f0b\u1f0d\3\2\2\2\u1f0c\u1f06\3\2\2\2\u1f0c\u1f0d\3\2\2\2\u1f0d"+
		"\u1f14\3\2\2\2\u1f0e\u1f10\5\u0258\u012d\2\u1f0f\u1f11\5\f\7\2\u1f10\u1f0f"+
		"\3\2\2\2\u1f11\u1f12\3\2\2\2\u1f12\u1f10\3\2\2\2\u1f12\u1f13\3\2\2\2\u1f13"+
		"\u1f15\3\2\2\2\u1f14\u1f0e\3\2\2\2\u1f15\u1f16\3\2\2\2\u1f16\u1f14\3\2"+
		"\2\2\u1f16\u1f17\3\2\2\2\u1f17\u0253\3\2\2\2\u1f18\u1f1a\7\u00c9\2\2\u1f19"+
		"\u1f1b\5\f\7\2\u1f1a\u1f19\3\2\2\2\u1f1b\u1f1c\3\2\2\2\u1f1c\u1f1a\3\2"+
		"\2\2\u1f1c\u1f1d\3\2\2\2\u1f1d\u1f1e\3\2\2\2\u1f1e\u1f22\5\u0234\u011b"+
		"\2\u1f1f\u1f21\5\f\7\2\u1f20\u1f1f\3\2\2\2\u1f21\u1f24\3\2\2\2\u1f22\u1f20"+
		"\3\2\2\2\u1f22\u1f23\3\2\2\2\u1f23\u0255\3\2\2\2\u1f24\u1f22\3\2\2\2\u1f25"+
		"\u1f26\7\u01c4\2\2\u1f26\u0257\3\2\2\2\u1f27\u1f28\7\u01c2\2\2\u1f28\u0259"+
		"\3\2\2\2\u1f29\u1f2b\7\r\2\2\u1f2a\u1f2c\5\f\7\2\u1f2b\u1f2a\3\2\2\2\u1f2c"+
		"\u1f2d\3\2\2\2\u1f2d\u1f2b\3\2\2\2\u1f2d\u1f2e\3\2\2\2\u1f2e\u1f2f\3\2"+
		"\2\2\u1f2f\u1f31\5\u0234\u011b\2\u1f30\u1f32\5\f\7\2\u1f31\u1f30\3\2\2"+
		"\2\u1f32\u1f33\3\2\2\2\u1f33\u1f31\3\2\2\2\u1f33\u1f34\3\2\2\2\u1f34\u1f3b"+
		"\3\2\2\2\u1f35\u1f37\7\u00d6\2\2\u1f36\u1f38\5\f\7\2\u1f37\u1f36\3\2\2"+
		"\2\u1f38\u1f39\3\2\2\2\u1f39\u1f37\3\2\2\2\u1f39\u1f3a\3\2\2\2\u1f3a\u1f3c"+
		"\3\2\2\2\u1f3b\u1f35\3\2\2\2\u1f3b\u1f3c\3\2\2\2\u1f3c\u1f3d\3\2\2\2\u1f3d"+
		"\u1f3e\5\u025c\u012f\2\u1f3e\u025b\3\2\2\2\u1f3f\u1f50\7\35\2\2\u1f40"+
		"\u1f50\7\u015b\2\2\u1f41\u1f50\7\u015c\2\2\u1f42\u1f50\7\u00f6\2\2\u1f43"+
		"\u1f50\7~\2\2\u1f44\u1f48\5\u025e\u0130\2\u1f45\u1f47\5\f\7\2\u1f46\u1f45"+
		"\3\2\2\2\u1f47\u1f4a\3\2\2\2\u1f48\u1f46\3\2\2\2\u1f48\u1f49\3\2\2\2\u1f49"+
		"\u1f4c\3\2\2\2\u1f4a\u1f48\3\2\2\2\u1f4b\u1f44\3\2\2\2\u1f4c\u1f4d\3\2"+
		"\2\2\u1f4d\u1f4b\3\2\2\2\u1f4d\u1f4e\3\2\2\2\u1f4e\u1f50\3\2\2\2\u1f4f"+
		"\u1f3f\3\2\2\2\u1f4f\u1f40\3\2\2\2\u1f4f\u1f41\3\2\2\2\u1f4f\u1f42\3\2"+
		"\2\2\u1f4f\u1f43\3\2\2\2\u1f4f\u1f4b\3\2\2\2\u1f50\u025d\3\2\2\2\u1f51"+
		"\u1f5f\5\u0260\u0131\2\u1f52\u1f54\5\f\7\2\u1f53\u1f52\3\2\2\2\u1f54\u1f55"+
		"\3\2\2\2\u1f55\u1f53\3\2\2\2\u1f55\u1f56\3\2\2\2\u1f56\u1f57\3\2\2\2\u1f57"+
		"\u1f59\t\7\2\2\u1f58\u1f5a\5\f\7\2\u1f59\u1f58\3\2\2\2\u1f5a\u1f5b\3\2"+
		"\2\2\u1f5b\u1f59\3\2\2\2\u1f5b\u1f5c\3\2\2\2\u1f5c\u1f5d\3\2\2\2\u1f5d"+
		"\u1f5e\5\u0262\u0132\2\u1f5e\u1f60\3\2\2\2\u1f5f\u1f53\3\2\2\2\u1f5f\u1f60"+
		"\3\2\2\2\u1f60\u1f74\3\2\2\2\u1f61\u1f6f\5\u0260\u0131\2\u1f62\u1f64\5"+
		"\f\7\2\u1f63\u1f62\3\2\2\2\u1f64\u1f65\3\2\2\2\u1f65\u1f63\3\2\2\2\u1f65"+
		"\u1f66\3\2\2\2\u1f66\u1f67\3\2\2\2\u1f67\u1f69\7\21\2\2\u1f68\u1f6a\5"+
		"\f\7\2\u1f69\u1f68\3\2\2\2\u1f6a\u1f6b\3\2\2\2\u1f6b\u1f69\3\2\2\2\u1f6b"+
		"\u1f6c\3\2\2\2\u1f6c\u1f6d\3\2\2\2\u1f6d\u1f6e\5\u0264\u0133\2\u1f6e\u1f70"+
		"\3\2\2\2\u1f6f\u1f63\3\2\2\2\u1f70\u1f71\3\2\2\2\u1f71\u1f6f\3\2\2\2\u1f71"+
		"\u1f72\3\2\2\2\u1f72\u1f74\3\2\2\2\u1f73\u1f51\3\2\2\2\u1f73\u1f61\3\2"+
		"\2\2\u1f74\u025f\3\2\2\2\u1f75\u1f76\t\26\2\2\u1f76\u0261\3\2\2\2\u1f77"+
		"\u1f78\t\26\2\2\u1f78\u0263\3\2\2\2\u1f79\u1f7a\t\26\2\2\u1f7a\u0265\3"+
		"\2\2\2\u1f7b\u1f7d\7\u0165\2\2\u1f7c\u1f7e\5\f\7\2\u1f7d\u1f7c\3\2\2\2"+
		"\u1f7e\u1f7f\3\2\2\2\u1f7f\u1f7d\3\2\2\2\u1f7f\u1f80\3\2\2\2\u1f80\u1f81"+
		"\3\2\2\2\u1f81\u1f85\5\u0270\u0139\2\u1f82\u1f84\5\f\7\2\u1f83\u1f82\3"+
		"\2\2\2\u1f84\u1f87\3\2\2\2\u1f85\u1f83\3\2\2\2\u1f85\u1f86\3\2\2\2\u1f86"+
		"\u1f96\3\2\2\2\u1f87\u1f85\3\2\2\2\u1f88\u1f8a\7\u00d6\2\2\u1f89\u1f8b"+
		"\5\f\7\2\u1f8a\u1f89\3\2\2\2\u1f8b\u1f8c\3\2\2\2\u1f8c\u1f8a\3\2\2\2\u1f8c"+
		"\u1f8d\3\2\2\2\u1f8d\u1f8f\3\2\2\2\u1f8e\u1f88\3\2\2\2\u1f8e\u1f8f\3\2"+
		"\2\2\u1f8f\u1f90\3\2\2\2\u1f90\u1f92\5\u026e\u0138\2\u1f91\u1f93\5\f\7"+
		"\2\u1f92\u1f91\3\2\2\2\u1f93\u1f94\3\2\2\2\u1f94\u1f92\3\2\2\2\u1f94\u1f95"+
		"\3\2\2\2\u1f95\u1f97\3\2\2\2\u1f96\u1f8e\3\2\2\2\u1f96\u1f97\3\2\2\2\u1f97"+
		"\u1fac\3\2\2\2\u1f98\u1fa0\5\u0268\u0135\2\u1f99\u1f9b\5\f\7\2\u1f9a\u1f99"+
		"\3\2\2\2\u1f9b\u1f9c\3\2\2\2\u1f9c\u1f9a\3\2\2\2\u1f9c\u1f9d\3\2\2\2\u1f9d"+
		"\u1f9e\3\2\2\2\u1f9e\u1f9f\5\u026a\u0136\2\u1f9f\u1fa1\3\2\2\2\u1fa0\u1f9a"+
		"\3\2\2\2\u1fa0\u1fa1\3\2\2\2\u1fa1\u1fad\3\2\2\2\u1fa2\u1faa\5\u026a\u0136"+
		"\2\u1fa3\u1fa5\5\f\7\2\u1fa4\u1fa3\3\2\2\2\u1fa5\u1fa6\3\2\2\2\u1fa6\u1fa4"+
		"\3\2\2\2\u1fa6\u1fa7\3\2\2\2\u1fa7\u1fa8\3\2\2\2\u1fa8\u1fa9\5\u0268\u0135"+
		"\2\u1fa9\u1fab\3\2\2\2\u1faa\u1fa4\3\2\2\2\u1faa\u1fab\3\2\2\2\u1fab\u1fad"+
		"\3\2\2\2\u1fac\u1f98\3\2\2\2\u1fac\u1fa2\3\2\2\2\u1fac\u1fad\3\2\2\2\u1fad"+
		"\u1fb1\3\2\2\2\u1fae\u1fb0\5\f\7\2\u1faf\u1fae\3\2\2\2\u1fb0\u1fb3\3\2"+
		"\2\2\u1fb1\u1faf\3\2\2\2\u1fb1\u1fb2\3\2\2\2\u1fb2\u0267\3\2\2\2\u1fb3"+
		"\u1fb1\3\2\2\2\u1fb4\u1fb6\7\u0102\2\2\u1fb5\u1fb7\5\f\7\2\u1fb6\u1fb5"+
		"\3\2\2\2\u1fb7\u1fb8\3\2\2\2\u1fb8\u1fb6\3\2\2\2\u1fb8\u1fb9\3\2\2\2\u1fb9"+
		"\u1fc0\3\2\2\2\u1fba\u1fbc\7\u015e\2\2\u1fbb\u1fbd\5\f\7\2\u1fbc\u1fbb"+
		"\3\2\2\2\u1fbd\u1fbe\3\2\2\2\u1fbe\u1fbc\3\2\2\2\u1fbe\u1fbf\3\2\2\2\u1fbf"+
		"\u1fc1\3\2\2\2\u1fc0\u1fba\3\2\2\2\u1fc0\u1fc1\3\2\2\2\u1fc1\u1fc8\3\2"+
		"\2\2\u1fc2\u1fc4\7\u00d6\2\2\u1fc3\u1fc5\5\f\7\2\u1fc4\u1fc3\3\2\2\2\u1fc5"+
		"\u1fc6\3\2\2\2\u1fc6\u1fc4\3\2\2\2\u1fc6\u1fc7\3\2\2\2\u1fc7\u1fc9\3\2"+
		"\2\2\u1fc8\u1fc2\3\2\2\2\u1fc8\u1fc9\3\2\2\2\u1fc9\u1fca\3\2\2\2\u1fca"+
		"\u1fcb\5\u026c\u0137\2\u1fcb\u0269\3\2\2\2\u1fcc\u1fce\7\u0100\2\2\u1fcd"+
		"\u1fcf\5\f\7\2\u1fce\u1fcd\3\2\2\2\u1fcf\u1fd0\3\2\2\2\u1fd0\u1fce\3\2"+
		"\2\2\u1fd0\u1fd1\3\2\2\2\u1fd1\u1fd8\3\2\2\2\u1fd2\u1fd4\7\u015e\2\2\u1fd3"+
		"\u1fd5\5\f\7\2\u1fd4\u1fd3\3\2\2\2\u1fd5\u1fd6\3\2\2\2\u1fd6\u1fd4\3\2"+
		"\2\2\u1fd6\u1fd7\3\2\2\2\u1fd7\u1fd9\3\2\2\2\u1fd8\u1fd2\3\2\2\2\u1fd8"+
		"\u1fd9\3\2\2\2\u1fd9\u1fe0\3\2\2\2\u1fda\u1fdc\7\u00d6\2\2\u1fdb\u1fdd"+
		"\5\f\7\2\u1fdc\u1fdb\3\2\2\2\u1fdd\u1fde\3\2\2\2\u1fde\u1fdc\3\2\2\2\u1fde"+
		"\u1fdf\3\2\2\2\u1fdf\u1fe1\3\2\2\2\u1fe0\u1fda\3\2\2\2\u1fe0\u1fe1\3\2"+
		"\2\2\u1fe1\u1fe2\3\2\2\2\u1fe2\u1fe3\5\u026c\u0137\2\u1fe3\u026b\3\2\2"+
		"\2\u1fe4\u1fe5\7\u01c4\2\2\u1fe5\u026d\3\2\2\2\u1fe6\u1fe7\7\u01c4\2\2"+
		"\u1fe7\u026f\3\2\2\2\u1fe8\u1fe9\7\u01c2\2\2\u1fe9\u0271\3\2\2\2\u1fea"+
		"\u1feb\7\u01c4\2\2\u1feb\u0273\3\2\2\2\u1fec\u1fed\t&\2\2\u1fed\u0275"+
		"\3\2\2\2\u1fee\u1fef\7\u01c4\2\2\u1fef\u0277\3\2\2\2\u1ff0\u1ff1\t\'\2"+
		"\2\u1ff1\u0279\3\2\2\2\u1ff2\u1ff3\7\u01c4\2\2\u1ff3\u027b\3\2\2\2\u1ff4"+
		"\u1ff8\7\u00ab\2\2\u1ff5\u1ff7\5\f\7\2\u1ff6\u1ff5\3\2\2\2\u1ff7\u1ffa"+
		"\3\2\2\2\u1ff8\u1ff6\3\2\2\2\u1ff8\u1ff9\3\2\2\2\u1ff9\u1ffb\3\2\2\2\u1ffa"+
		"\u1ff8\3\2\2\2\u1ffb\u1fff\7\u01be\2\2\u1ffc\u1ffe\5\f\7\2\u1ffd\u1ffc"+
		"\3\2\2\2\u1ffe\u2001\3\2\2\2\u1fff\u1ffd\3\2\2\2\u1fff\u2000\3\2\2\2\u2000"+
		"\u200b\3\2\2\2\u2001\u1fff\3\2\2\2\u2002\u2006\5\u027e\u0140\2\u2003\u2005"+
		"\5\f\7\2\u2004\u2003\3\2\2\2\u2005\u2008\3\2\2\2\u2006\u2004\3\2\2\2\u2006"+
		"\u2007\3\2\2\2\u2007\u200a\3\2\2\2\u2008\u2006\3\2\2\2\u2009\u2002\3\2"+
		"\2\2\u200a\u200d\3\2\2\2\u200b\u2009\3\2\2\2\u200b\u200c\3\2\2\2\u200c"+
		"\u027d\3\2\2\2\u200d\u200b\3\2\2\2\u200e\u2010\7\u014b\2\2\u200f\u2011"+
		"\5\f\7\2\u2010\u200f\3\2\2\2\u2011\u2012\3\2\2\2\u2012\u2010\3\2\2\2\u2012"+
		"\u2013\3\2\2\2\u2013\u201a\3\2\2\2\u2014\u2016\7\u0104\2\2\u2015\u2017"+
		"\5\f\7\2\u2016\u2015\3\2\2\2\u2017\u2018\3\2\2\2\u2018\u2016\3\2\2\2\u2018"+
		"\u2019\3\2\2\2\u2019\u201b\3\2\2\2\u201a\u2014\3\2\2\2\u201a\u201b\3\2"+
		"\2\2\u201b\u201c\3\2\2\2\u201c\u2020\5\u02a8\u0155\2\u201d\u201f\5\f\7"+
		"\2\u201e\u201d\3\2\2\2\u201f\u2022\3\2\2\2\u2020\u201e\3\2\2\2\u2020\u2021"+
		"\3\2\2\2\u2021\u2023\3\2\2\2\u2022\u2020\3\2\2\2\u2023\u2027\5\u02a2\u0152"+
		"\2\u2024\u2026\5\f\7\2\u2025\u2024\3\2\2\2\u2026\u2029\3\2\2\2\u2027\u2025"+
		"\3\2\2\2\u2027\u2028\3\2\2\2\u2028\u2031\3\2\2\2\u2029\u2027\3\2\2\2\u202a"+
		"\u202e\5\u028a\u0146\2\u202b\u202d\5\f\7\2\u202c\u202b\3\2\2\2\u202d\u2030"+
		"\3\2\2\2\u202e\u202c\3\2\2\2\u202e\u202f\3\2\2\2\u202f\u2032\3\2\2\2\u2030"+
		"\u202e\3\2\2\2\u2031\u202a\3\2\2\2\u2031\u2032\3\2\2\2\u2032\u203a\3\2"+
		"\2\2\u2033\u2037\5\u0294\u014b\2\u2034\u2036\5\f\7\2\u2035\u2034\3\2\2"+
		"\2\u2036\u2039\3\2\2\2\u2037\u2035\3\2\2\2\u2037\u2038\3\2\2\2\u2038\u203b"+
		"\3\2\2\2\u2039\u2037\3\2\2\2\u203a\u2033\3\2\2\2\u203a\u203b\3\2\2\2\u203b"+
		"\u2043\3\2\2\2\u203c\u2040\5\u029c\u014f\2\u203d\u203f\5\f\7\2\u203e\u203d"+
		"\3\2\2\2\u203f\u2042\3\2\2\2\u2040\u203e\3\2\2\2\u2040\u2041\3\2\2\2\u2041"+
		"\u2044\3\2\2\2\u2042\u2040\3\2\2\2\u2043\u203c\3\2\2\2\u2043\u2044\3\2"+
		"\2\2\u2044\u204c\3\2\2\2\u2045\u2049\5\u029a\u014e\2\u2046\u2048\5\f\7"+
		"\2\u2047\u2046\3\2\2\2\u2048\u204b\3\2\2\2\u2049\u2047\3\2\2\2\u2049\u204a"+
		"\3\2\2\2\u204a\u204d\3\2\2\2\u204b\u2049\3\2\2\2\u204c\u2045\3\2\2\2\u204c"+
		"\u204d\3\2\2\2\u204d\u2055\3\2\2\2\u204e\u2052\5\u0290\u0149\2\u204f\u2051"+
		"\5\f\7\2\u2050\u204f\3\2\2\2\u2051\u2054\3\2\2\2\u2052\u2050\3\2\2\2\u2052"+
		"\u2053\3\2\2\2\u2053\u2056\3\2\2\2\u2054\u2052\3\2\2\2\u2055\u204e\3\2"+
		"\2\2\u2055\u2056\3\2\2\2\u2056\u205e\3\2\2\2\u2057\u205b\5\u028e\u0148"+
		"\2\u2058\u205a\5\f\7\2\u2059\u2058\3\2\2\2\u205a\u205d\3\2\2\2\u205b\u2059"+
		"\3\2\2\2\u205b\u205c\3\2\2\2\u205c\u205f\3\2\2\2\u205d\u205b\3\2\2\2\u205e"+
		"\u2057\3\2\2\2\u205e\u205f\3\2\2\2\u205f\u2067\3\2\2\2\u2060\u2064\5\u0288"+
		"\u0145\2\u2061\u2063\5\f\7\2\u2062\u2061\3\2\2\2\u2063\u2066\3\2\2\2\u2064"+
		"\u2062\3\2\2\2\u2064\u2065\3\2\2\2\u2065\u2068\3\2\2\2\u2066\u2064\3\2"+
		"\2\2\u2067\u2060\3\2\2\2\u2067\u2068\3\2\2\2\u2068\u2072\3\2\2\2\u2069"+
		"\u206d\5\u0284\u0143\2\u206a\u206c\5\f\7\2\u206b\u206a\3\2\2\2\u206c\u206f"+
		"\3\2\2\2\u206d\u206b\3\2\2\2\u206d\u206e\3\2\2\2\u206e\u2071\3\2\2\2\u206f"+
		"\u206d\3\2\2\2\u2070\u2069\3\2\2\2\u2071\u2074\3\2\2\2\u2072\u2070\3\2"+
		"\2\2\u2072\u2073\3\2\2\2\u2073\u207c\3\2\2\2\u2074\u2072\3\2\2\2\u2075"+
		"\u2079\5\u0296\u014c\2\u2076\u2078\5\f\7\2\u2077\u2076\3\2\2\2\u2078\u207b"+
		"\3\2\2\2\u2079\u2077\3\2\2\2\u2079\u207a\3\2\2\2\u207a\u207d\3\2\2\2\u207b"+
		"\u2079\3\2\2\2\u207c\u2075\3\2\2\2\u207c\u207d\3\2\2\2\u207d\u2085\3\2"+
		"\2\2\u207e\u2082\5\u0280\u0141\2\u207f\u2081\5\f\7\2\u2080\u207f\3\2\2"+
		"\2\u2081\u2084\3\2\2\2\u2082\u2080\3\2\2\2\u2082\u2083\3\2\2\2\u2083\u2086"+
		"\3\2\2\2\u2084\u2082\3\2\2\2\u2085\u207e\3\2\2\2\u2085\u2086\3\2\2\2\u2086"+
		"\u2087\3\2\2\2\u2087\u2088\7\u01be\2\2\u2088\u027f\3\2\2\2\u2089\u208b"+
		"\7\u00aa\2\2\u208a\u208c\5\f\7\2\u208b\u208a\3\2\2\2\u208c\u208d\3\2\2"+
		"\2\u208d\u208b\3\2\2\2\u208d\u208e\3\2\2\2\u208e\u2090\3\2\2\2\u208f\u2089"+
		"\3\2\2\2\u208f\u2090\3\2\2\2\u2090\u2091\3\2\2\2\u2091\u2093\7\u015e\2"+
		"\2\u2092\u2094\5\f\7\2\u2093\u2092\3\2\2\2\u2094\u2095\3\2\2\2\u2095\u2093"+
		"\3\2\2\2\u2095\u2096\3\2\2\2\u2096\u209d\3\2\2\2\u2097\u2099\7\u00d6\2"+
		"\2\u2098\u209a\5\f\7\2\u2099\u2098\3\2\2\2\u209a\u209b\3\2\2\2\u209b\u2099"+
		"\3\2\2\2\u209b\u209c\3\2\2\2\u209c\u209e\3\2\2\2\u209d\u2097\3\2\2\2\u209d"+
		"\u209e\3\2\2\2\u209e\u209f\3\2\2\2\u209f\u20a0\5\u0282\u0142\2\u20a0\u0281"+
		"\3\2\2\2\u20a1\u20a2\5\u023e\u0120\2\u20a2\u0283\3\2\2\2\u20a3\u20a5\7"+
		"\23\2\2\u20a4\u20a6\5\f\7\2\u20a5\u20a4\3\2\2\2\u20a6\u20a7\3\2\2\2\u20a7"+
		"\u20a5\3\2\2\2\u20a7\u20a8\3\2\2\2\u20a8\u20aa\3\2\2\2\u20a9\u20a3\3\2"+
		"\2\2\u20a9\u20aa\3\2\2\2\u20aa\u20ab\3\2\2\2\u20ab\u20ad\7\u0126\2\2\u20ac"+
		"\u20ae\5\f\7\2\u20ad\u20ac\3\2\2\2\u20ae\u20af\3\2\2\2\u20af\u20ad\3\2"+
		"\2\2\u20af\u20b0\3\2\2\2\u20b0\u20b7\3\2\2\2\u20b1\u20b3\7\u00db\2\2\u20b2"+
		"\u20b4\5\f\7\2\u20b3\u20b2\3\2\2\2\u20b4\u20b5\3\2\2\2\u20b5\u20b3\3\2"+
		"\2\2\u20b5\u20b6\3\2\2\2\u20b6\u20b8\3\2\2\2\u20b7\u20b1\3\2\2\2\u20b7"+
		"\u20b8\3\2\2\2\u20b8\u20bf\3\2\2\2\u20b9\u20bb\7\u00d6\2\2\u20ba\u20bc"+
		"\5\f\7\2\u20bb\u20ba\3\2\2\2\u20bc\u20bd\3\2\2\2\u20bd\u20bb\3\2\2\2\u20bd"+
		"\u20be\3\2\2\2\u20be\u20c0\3\2\2\2\u20bf\u20b9\3\2\2\2\u20bf\u20c0\3\2"+
		"\2\2\u20c0\u20c1\3\2\2\2\u20c1\u20d1\5\u0286\u0144\2\u20c2\u20c4\5\f\7"+
		"\2\u20c3\u20c2\3\2\2\2\u20c4\u20c5\3\2\2\2\u20c5\u20c3\3\2\2\2\u20c5\u20c6"+
		"\3\2\2\2\u20c6\u20cd\3\2\2\2\u20c7\u20c9\7\u018b\2\2\u20c8\u20ca\5\f\7"+
		"\2\u20c9\u20c8\3\2\2\2\u20ca\u20cb\3\2\2\2\u20cb\u20c9\3\2\2\2\u20cb\u20cc"+
		"\3\2\2\2\u20cc\u20ce\3\2\2\2\u20cd\u20c7\3\2\2\2\u20cd\u20ce\3\2\2\2\u20ce"+
		"\u20cf\3\2\2\2\u20cf\u20d0\7|\2\2\u20d0\u20d2\3\2\2\2\u20d1\u20c3\3\2"+
		"\2\2\u20d1\u20d2\3\2\2\2\u20d2\u20da\3\2\2\2\u20d3\u20d5\5\f\7\2\u20d4"+
		"\u20d3\3\2\2\2\u20d5\u20d6\3\2\2\2\u20d6\u20d4\3\2\2\2\u20d6\u20d7\3\2"+
		"\2\2\u20d7\u20d8\3\2\2\2\u20d8\u20d9\t\13\2\2\u20d9\u20db\3\2\2\2\u20da"+
		"\u20d4\3\2\2\2\u20da\u20db\3\2\2\2\u20db\u0285\3\2\2\2\u20dc\u20f9\5\u023e"+
		"\u0120\2\u20dd\u20e1\7\u01c4\2\2\u20de\u20e0\5\f\7\2\u20df\u20de\3\2\2"+
		"\2\u20e0\u20e3\3\2\2\2\u20e1\u20df\3\2\2\2\u20e1\u20e2\3\2\2\2\u20e2\u20e4"+
		"\3\2\2\2\u20e3\u20e1\3\2\2\2\u20e4\u20e8\7\u01b3\2\2\u20e5\u20e7\5\f\7"+
		"\2\u20e6\u20e5\3\2\2\2\u20e7\u20ea\3\2\2\2\u20e8\u20e6\3\2\2\2\u20e8\u20e9"+
		"\3\2\2\2\u20e9\u20eb\3\2\2\2\u20ea\u20e8\3\2\2\2\u20eb\u20f5\5\u023e\u0120"+
		"\2\u20ec\u20ee\5\f\7\2\u20ed\u20ec\3\2\2\2\u20ee\u20f1\3\2\2\2\u20ef\u20ed"+
		"\3\2\2\2\u20ef\u20f0\3\2\2\2\u20f0\u20f2\3\2\2\2\u20f1\u20ef\3\2\2\2\u20f2"+
		"\u20f4\5\u023e\u0120\2\u20f3\u20ef\3\2\2\2\u20f4\u20f7\3\2\2\2\u20f5\u20f3"+
		"\3\2\2\2\u20f5\u20f6\3\2\2\2\u20f6\u20f9\3\2\2\2\u20f7\u20f5\3\2\2\2\u20f8"+
		"\u20dc\3\2\2\2\u20f8\u20dd\3\2\2\2\u20f9\u0287\3\2\2\2\u20fa\u20fc\7\7"+
		"\2\2\u20fb\u20fd\5\f\7\2\u20fc\u20fb\3\2\2\2\u20fd\u20fe\3\2\2\2\u20fe"+
		"\u20fc\3\2\2\2\u20fe\u20ff\3\2\2\2\u20ff\u2106\3\2\2\2\u2100\u2102\7\u00f1"+
		"\2\2\u2101\u2103\5\f\7\2\u2102\u2101\3\2\2\2\u2103\u2104\3\2\2\2\u2104"+
		"\u2102\3\2\2\2\u2104\u2105\3\2\2\2\u2105\u2107\3\2\2\2\u2106\u2100\3\2"+
		"\2\2\u2106\u2107\3\2\2\2\u2107\u210e\3\2\2\2\u2108\u210a\7\u00d6\2\2\u2109"+
		"\u210b\5\f\7\2\u210a\u2109\3\2\2\2\u210b\u210c\3\2\2\2\u210c\u210a\3\2"+
		"\2\2\u210c\u210d\3\2\2\2\u210d\u210f\3\2\2\2\u210e\u2108\3\2\2\2\u210e"+
		"\u210f\3\2\2\2\u210f\u2111\3\2\2\2\u2110\u20fa\3\2\2\2\u2110\u2111\3\2"+
		"\2\2\u2111\u2112\3\2\2\2\u2112\u2130\t(\2\2\u2113\u2115\5\f\7\2\u2114"+
		"\u2113\3\2\2\2\u2115\u2116\3\2\2\2\u2116\u2114\3\2\2\2\u2116\u2117\3\2"+
		"\2\2\u2117\u2118\3\2\2\2\u2118\u211a\7\u012b\2\2\u2119\u211b\5\f\7\2\u211a"+
		"\u2119\3\2\2\2\u211b\u211c\3\2\2\2\u211c\u211a\3\2\2\2\u211c\u211d\3\2"+
		"\2\2\u211d\u2124\3\2\2\2\u211e\u2120\7\u00db\2\2\u211f\u2121\5\f\7\2\u2120"+
		"\u211f\3\2\2\2\u2121\u2122\3\2\2\2\u2122\u2120\3\2\2\2\u2122\u2123\3\2"+
		"\2\2\u2123\u2125\3\2\2\2\u2124\u211e\3\2\2\2\u2124\u2125\3\2\2\2\u2125"+
		"\u212c\3\2\2\2\u2126\u2128\7\u00d6\2\2\u2127\u2129\5\f\7\2\u2128\u2127"+
		"\3\2\2\2\u2129\u212a\3\2\2\2\u212a\u2128\3\2\2\2\u212a\u212b\3\2\2\2\u212b"+
		"\u212d\3\2\2\2\u212c\u2126\3\2\2\2\u212c\u212d\3\2\2\2\u212d\u212e\3\2"+
		"\2\2\u212e\u212f\5\u023e\u0120\2\u212f\u2131\3\2\2\2\u2130\u2114\3\2\2"+
		"\2\u2130\u2131\3\2\2\2\u2131\u0289\3\2\2\2\u2132\u2134\7\u0137\2\2\u2133"+
		"\u2135\5\f\7\2\u2134\u2133\3\2\2\2\u2135\u2136\3\2\2\2\u2136\u2134\3\2"+
		"\2\2\u2136\u2137\3\2\2\2\u2137\u2138\3\2\2\2\u2138\u2140\5\u028c\u0147"+
		"\2\u2139\u213b\5\f\7\2\u213a\u2139\3\2\2\2\u213b\u213c\3\2\2\2\u213c\u213a"+
		"\3\2\2\2\u213c\u213d\3\2\2\2\u213d\u213e\3\2\2\2\u213e\u213f\t)\2\2\u213f"+
		"\u2141\3\2\2\2\u2140\u213a\3\2\2\2\u2140\u2141\3\2\2\2\u2141\u028b\3\2"+
		"\2\2\u2142\u2143\7\u01c2\2\2\u2143\u028d\3\2\2\2\u2144\u2146\7\u0126\2"+
		"\2\u2145\u2147\5\f\7\2\u2146\u2145\3\2\2\2\u2147\u2148\3\2\2\2\u2148\u2146"+
		"\3\2\2\2\u2148\u2149\3\2\2\2\u2149\u214a\3\2\2\2\u214a\u214c\7r\2\2\u214b"+
		"\u214d\5\f\7\2\u214c\u214b\3\2\2\2\u214d\u214e\3\2\2\2\u214e\u214c\3\2"+
		"\2\2\u214e\u214f\3\2\2\2\u214f\u2156\3\2\2\2\u2150\u2152\7\u00d6\2\2\u2151"+
		"\u2153\5\f\7\2\u2152\u2151\3\2\2\2\u2153\u2154\3\2\2\2\u2154\u2152\3\2"+
		"\2\2\u2154\u2155\3\2\2\2\u2155\u2157\3\2\2\2\u2156\u2150\3\2\2\2\u2156"+
		"\u2157\3\2\2\2\u2157\u2158\3\2\2\2\u2158\u2159\7\u015b\2\2\u2159\u028f"+
		"\3\2\2\2\u215a\u215c\7\u010b\2\2\u215b\u215d\5\f\7\2\u215c\u215b\3\2\2"+
		"\2\u215d\u215e\3\2\2\2\u215e\u215c\3\2\2\2\u215e\u215f\3\2\2\2\u215f\u2166"+
		"\3\2\2\2\u2160\u2162\79\2\2\u2161\u2163\5\f\7\2\u2162\u2161\3\2\2\2\u2163"+
		"\u2164\3\2\2\2\u2164\u2162\3\2\2\2\u2164\u2165\3\2\2\2\u2165\u2167\3\2"+
		"\2\2\u2166\u2160\3\2\2\2\u2166\u2167\3\2\2\2\u2167\u216e\3\2\2\2\u2168"+
		"\u216a\7\u00d6\2\2\u2169\u216b\5\f\7\2\u216a\u2169\3\2\2\2\u216b\u216c"+
		"\3\2\2\2\u216c\u216a\3\2\2\2\u216c\u216d\3\2\2\2\u216d\u216f\3\2\2\2\u216e"+
		"\u2168\3\2\2\2\u216e\u216f\3\2\2\2\u216f\u2170\3\2\2\2\u2170\u2171\5\u0292"+
		"\u014a\2\u2171\u0291\3\2\2\2\u2172\u2173\7\u01c1\2\2\u2173\u0293\3\2\2"+
		"\2\u2174\u2176\7\u0107\2\2\u2175\u2177\5\f\7\2\u2176\u2175\3\2\2\2\u2177"+
		"\u2178\3\2\2\2\u2178\u2176\3\2\2\2\u2178\u2179\3\2\2\2\u2179\u2180\3\2"+
		"\2\2\u217a\u217c\7\u00d6\2\2\u217b\u217d\5\f\7\2\u217c\u217b\3\2\2\2\u217d"+
		"\u217e\3\2\2\2\u217e\u217c\3\2\2\2\u217e\u217f\3\2\2\2\u217f\u2181\3\2"+
		"\2\2\u2180\u217a\3\2\2\2\u2180\u2181\3\2\2\2\u2181\u2183\3\2\2\2\u2182"+
		"\u2174\3\2\2\2\u2182\u2183\3\2\2\2\u2183\u218f\3\2\2\2\u2184\u2190\7\u014e"+
		"\2\2\u2185\u2187\7\u00e4\2\2\u2186\u2188\5\f\7\2\u2187\u2186\3\2\2\2\u2188"+
		"\u2189\3\2\2\2\u2189\u2187\3\2\2\2\u2189\u218a\3\2\2\2\u218a\u218b\3\2"+
		"\2\2\u218b\u218c\7\u014e\2\2\u218c\u2190\3\2\2\2\u218d\u2190\7\u012b\2"+
		"\2\u218e\u2190\7\u00cb\2\2\u218f\u2184\3\2\2\2\u218f\u2185\3\2\2\2\u218f"+
		"\u218d\3\2\2\2\u218f\u218e\3\2\2\2\u2190\u0295\3\2\2\2\u2191\u2193\7\u00e8"+
		"\2\2\u2192\u2194\5\f\7\2\u2193\u2192\3\2\2\2\u2194\u2195\3\2\2\2\u2195"+
		"\u2193\3\2\2\2\u2195\u2196\3\2\2\2\u2196\u219d\3\2\2\2\u2197\u2199\7\u00f1"+
		"\2\2\u2198\u219a\5\f\7\2\u2199\u2198\3\2\2\2\u219a\u219b\3\2\2\2\u219b"+
		"\u2199\3\2\2\2\u219b\u219c\3\2\2\2\u219c\u219e\3\2\2\2\u219d\u2197\3\2"+
		"\2\2\u219d\u219e\3\2\2\2\u219e\u21a5\3\2\2\2\u219f\u21a1\7\u00d6\2\2\u21a0"+
		"\u21a2\5\f\7\2\u21a1\u21a0\3\2\2\2\u21a2\u21a3\3\2\2\2\u21a3\u21a1\3\2"+
		"\2\2\u21a3\u21a4\3\2\2\2\u21a4\u21a6\3\2\2\2\u21a5\u219f\3\2\2\2\u21a5"+
		"\u21a6\3\2\2\2\u21a6\u21a7\3\2\2\2\u21a7\u21a8\5\u0298\u014d\2\u21a8\u0297"+
		"\3\2\2\2\u21a9\u21ab\7\u00ed\2\2\u21aa\u21ac\5\f\7\2\u21ab\u21aa\3\2\2"+
		"\2\u21ac\u21ad\3\2\2\2\u21ad\u21ab\3\2\2\2\u21ad\u21ae\3\2\2\2\u21ae\u21b5"+
		"\3\2\2\2\u21af\u21b1\7\u018b\2\2\u21b0\u21b2\5\f\7\2\u21b1\u21b0\3\2\2"+
		"\2\u21b2\u21b3\3\2\2\2\u21b3\u21b1\3\2\2\2\u21b3\u21b4\3\2\2\2\u21b4\u21b6"+
		"\3\2\2\2\u21b5\u21af\3\2\2\2\u21b5\u21b6\3\2\2\2\u21b6\u21b7\3\2\2\2\u21b7"+
		"\u21b9\7\u00e8\2\2\u21b8\u21ba\5\f\7\2\u21b9\u21b8\3\2\2\2\u21ba\u21bb"+
		"\3\2\2\2\u21bb\u21b9\3\2\2\2\u21bb\u21bc\3\2\2\2\u21bc\u21bd\3\2\2\2\u21bd"+
		"\u21bf\7\u0102\2\2\u21be\u21c0\5\f\7\2\u21bf\u21be\3\2\2\2\u21c0\u21c1"+
		"\3\2\2\2\u21c1\u21bf\3\2\2\2\u21c1\u21c2\3\2\2\2\u21c2\u21c3\3\2\2\2\u21c3"+
		"\u21c5\7\u00f4\2\2\u21c4\u21c6\5\f\7\2\u21c5\u21c4\3\2\2\2\u21c6\u21c7"+
		"\3\2\2\2\u21c7\u21c5\3\2\2\2\u21c7\u21c8\3\2\2\2\u21c8\u21c9\3\2\2\2\u21c9"+
		"\u21ca\7\u0127\2\2\u21ca\u21ee\3\2\2\2\u21cb\u21ea\7\"\2\2\u21cc\u21ce"+
		"\5\f\7\2\u21cd\u21cc\3\2\2\2\u21ce\u21cf\3\2\2\2\u21cf\u21cd\3\2\2\2\u21cf"+
		"\u21d0\3\2\2\2\u21d0\u21d7\3\2\2\2\u21d1\u21d3\7\u018b\2\2\u21d2\u21d4"+
		"\5\f\7\2\u21d3\u21d2\3\2\2\2\u21d4\u21d5\3\2\2\2\u21d5\u21d3\3\2\2\2\u21d5"+
		"\u21d6\3\2\2\2\u21d6\u21d8\3\2\2\2\u21d7\u21d1\3\2\2\2\u21d7\u21d8\3\2"+
		"\2\2\u21d8\u21e8\3\2\2\2\u21d9\u21db\7\u00e8\2\2\u21da\u21dc\5\f\7\2\u21db"+
		"\u21da\3\2\2\2\u21dc\u21dd\3\2\2\2\u21dd\u21db\3\2\2\2\u21dd\u21de\3\2"+
		"\2\2\u21de\u21df\3\2\2\2\u21df\u21e1\7\u0102\2\2\u21e0\u21e2\5\f\7\2\u21e1"+
		"\u21e0\3\2\2\2\u21e2\u21e3\3\2\2\2\u21e3\u21e1\3\2\2\2\u21e3\u21e4\3\2"+
		"\2\2\u21e4\u21e5\3\2\2\2\u21e5\u21e6\7\u0126\2\2\u21e6\u21e9\3\2\2\2\u21e7"+
		"\u21e9\7\u0141\2\2\u21e8\u21d9\3\2\2\2\u21e8\u21e7\3\2\2\2\u21e9\u21eb"+
		"\3\2\2\2\u21ea\u21cd\3\2\2\2\u21ea\u21eb\3\2\2\2\u21eb\u21ee\3\2\2\2\u21ec"+
		"\u21ee\7\u00a2\2\2\u21ed\u21a9\3\2\2\2\u21ed\u21cb\3\2\2\2\u21ed\u21ec"+
		"\3\2\2\2\u21ee\u0299\3\2\2\2\u21ef\u21f1\7?\2\2\u21f0\u21f2\5\f\7\2\u21f1"+
		"\u21f0\3\2\2\2\u21f2\u21f3\3\2\2\2\u21f3\u21f1\3\2\2\2\u21f3\u21f4\3\2"+
		"\2\2\u21f4\u21fb\3\2\2\2\u21f5\u21f7\7\u00d6\2\2\u21f6\u21f8\5\f\7\2\u21f7"+
		"\u21f6\3\2\2\2\u21f8\u21f9\3\2\2\2\u21f9\u21f7\3\2\2\2\u21f9\u21fa\3\2"+
		"\2\2\u21fa\u21fc\3\2\2\2\u21fb\u21f5\3\2\2\2\u21fb\u21fc\3\2\2\2\u21fc"+
		"\u21fd\3\2\2\2\u21fd\u21fe\5\u0234\u011b\2\u21fe\u029b\3\2\2\2\u21ff\u2201"+
		"\7/\2\2\u2200\u2202\5\f\7\2\u2201\u2200\3\2\2\2\u2202\u2203\3\2\2\2\u2203"+
		"\u2201\3\2\2\2\u2203\u2204\3\2\2\2\u2204\u220b\3\2\2\2\u2205\u2207\7U"+
		"\2\2\u2206\u2208\5\f\7\2\u2207\u2206\3\2\2\2\u2208\u2209\3\2\2\2\u2209"+
		"\u2207\3\2\2\2\u2209\u220a\3\2\2\2\u220a\u220c\3\2\2\2\u220b\u2205\3\2"+
		"\2\2\u220b\u220c\3\2\2\2\u220c\u2219\3\2\2\2\u220d\u220f\5\u029e\u0150"+
		"\2\u220e\u2210\5\f\7\2\u220f\u220e\3\2\2\2\u2210\u2211\3\2\2\2\u2211\u220f"+
		"\3\2\2\2\u2211\u2212\3\2\2\2\u2212\u2213\3\2\2\2\u2213\u2215\7\u0175\2"+
		"\2\u2214\u2216\5\f\7\2\u2215\u2214\3\2\2\2\u2216\u2217\3\2\2\2\u2217\u2215"+
		"\3\2\2\2\u2217\u2218\3\2\2\2\u2218\u221a\3\2\2\2\u2219\u220d\3\2\2\2\u2219"+
		"\u221a\3\2\2\2\u221a\u221b\3\2\2\2\u221b\u221d\5\u02a0\u0151\2\u221c\u221e"+
		"\5\f\7\2\u221d\u221c\3\2\2\2\u221e\u221f\3\2\2\2\u221f\u221d\3\2\2\2\u221f"+
		"\u2220\3\2\2\2\u2220\u2221\3\2\2\2\u2221\u2222\t*\2\2\u2222\u029d\3\2"+
		"\2\2\u2223\u2224\7\u01c2\2\2\u2224\u029f\3\2\2\2\u2225\u2226\7\u01c2\2"+
		"\2\u2226\u02a1\3\2\2\2\u2227\u2229\7\36\2\2\u2228\u222a\5\f\7\2\u2229"+
		"\u2228\3\2\2\2\u222a\u222b\3\2\2\2\u222b\u2229\3\2\2\2\u222b\u222c\3\2"+
		"\2\2\u222c\u2233\3\2\2\2\u222d\u222f\7\u0175\2\2\u222e\u2230\5\f\7\2\u222f"+
		"\u222e\3\2\2\2\u2230\u2231\3\2\2\2\u2231\u222f\3\2\2\2\u2231\u2232\3\2"+
		"\2\2\u2232\u2234\3\2\2\2\u2233\u222d\3\2\2\2\u2233\u2234\3\2\2\2\u2234"+
		"\u2235\3\2\2\2\u2235\u2236\5\u02a4\u0153\2\u2236\u02a3\3\2\2\2\u2237\u2239"+
		"\t+\2\2\u2238\u223a\5\f\7\2\u2239\u2238\3\2\2\2\u223a\u223b\3\2\2\2\u223b"+
		"\u2239\3\2\2\2\u223b\u223c\3\2\2\2\u223c\u223e\3\2\2\2\u223d\u2237\3\2"+
		"\2\2\u223d\u223e\3\2\2\2\u223e\u223f\3\2\2\2\u223f\u2253\5\u02a6\u0154"+
		"\2\u2240\u2242\7\u00f4\2\2\u2241\u2243\5\f\7\2\u2242\u2241\3\2\2\2\u2243"+
		"\u2244\3\2\2\2\u2244\u2242\3\2\2\2\u2244\u2245\3\2\2\2\u2245\u2247\3\2"+
		"\2\2\u2246\u2240\3\2\2\2\u2246\u2247\3\2\2\2\u2247\u2248\3\2\2\2\u2248"+
		"\u2250\t\22\2\2\u2249\u224b\5\f\7\2\u224a\u2249\3\2\2\2\u224b\u224c\3"+
		"\2\2\2\u224c\u224a\3\2\2\2\u224c\u224d\3\2\2\2\u224d\u224e\3\2\2\2\u224e"+
		"\u224f\7\u00aa\2\2\u224f\u2251\3\2\2\2\u2250\u224a\3\2\2\2\u2250\u2251"+
		"\3\2\2\2\u2251\u2253\3\2\2\2\u2252\u223d\3\2\2\2\u2252\u2246\3\2\2\2\u2253"+
		"\u02a5\3\2\2\2\u2254\u2259\7\u01c1\2\2\u2255\u2259\5\u023e\u0120\2\u2256"+
		"\u2259\7w\2\2\u2257\u2259\7\u011a\2\2\u2258\u2254\3\2\2\2\u2258\u2255"+
		"\3\2\2\2\u2258\u2256\3\2\2\2\u2258\u2257\3\2\2\2\u2259\u02a7\3\2\2\2\u225a"+
		"\u225b\7\u01c4\2\2\u225b\u02a9\3\2\2\2\u225c\u2260\7\u00d8\2\2\u225d\u225f"+
		"\5\f\7\2\u225e\u225d\3\2\2\2\u225f\u2262\3\2\2\2\u2260\u225e\3\2\2\2\u2260"+
		"\u2261\3\2\2\2\u2261\u2263\3\2\2\2\u2262\u2260\3\2\2\2\u2263\u2267\7\u01be"+
		"\2\2\u2264\u2266\5\f\7\2\u2265\u2264\3\2\2\2\u2266\u2269\3\2\2\2\u2267"+
		"\u2265\3\2\2\2\u2267\u2268\3\2\2\2\u2268\u22a1\3\2\2\2\u2269\u2267\3\2"+
		"\2\2\u226a\u226e\5\u02c4\u0163\2\u226b\u226d\5\f\7\2\u226c\u226b\3\2\2"+
		"\2\u226d\u2270\3\2\2\2\u226e\u226c\3\2\2\2\u226e\u226f\3\2\2\2\u226f\u2272"+
		"\3\2\2\2\u2270\u226e\3\2\2\2\u2271\u226a\3\2\2\2\u2272\u2275\3\2\2\2\u2273"+
		"\u2271\3\2\2\2\u2273\u2274\3\2\2\2\u2274\u227f\3\2\2\2\u2275\u2273\3\2"+
		"\2\2\u2276\u227a\5\u02c0\u0161\2\u2277\u2279\5\f\7\2\u2278\u2277\3\2\2"+
		"\2\u2279\u227c\3\2\2\2\u227a\u2278\3\2\2\2\u227a\u227b\3\2\2\2\u227b\u227e"+
		"\3\2\2\2\u227c\u227a\3\2\2\2\u227d\u2276\3\2\2\2\u227e\u2281\3\2\2\2\u227f"+
		"\u227d\3\2\2\2\u227f\u2280\3\2\2\2\u2280\u228b\3\2\2\2\u2281\u227f\3\2"+
		"\2\2\u2282\u2286\5\u02b4\u015b\2\u2283\u2285\5\f\7\2\u2284\u2283\3\2\2"+
		"\2\u2285\u2288\3\2\2\2\u2286\u2284\3\2\2\2\u2286\u2287\3\2\2\2\u2287\u228a"+
		"\3\2\2\2\u2288\u2286\3\2\2\2\u2289\u2282\3\2\2\2\u228a\u228d\3\2\2\2\u228b"+
		"\u2289\3\2\2\2\u228b\u228c\3\2\2\2\u228c\u2297\3\2\2\2\u228d\u228b\3\2"+
		"\2\2\u228e\u2292\5\u02ac\u0157\2\u228f\u2291\5\f\7\2\u2290\u228f\3\2\2"+
		"\2\u2291\u2294\3\2\2\2\u2292\u2290\3\2\2\2\u2292\u2293\3\2\2\2\u2293\u2296"+
		"\3\2\2\2\u2294\u2292\3\2\2\2\u2295\u228e\3\2\2\2\u2296\u2299\3\2\2\2\u2297"+
		"\u2295\3\2\2\2\u2297\u2298\3\2\2\2\u2298\u229a\3\2\2\2\u2299\u2297\3\2"+
		"\2\2\u229a\u229e\7\u01be\2\2\u229b\u229d\5\f\7\2\u229c\u229b\3\2\2\2\u229d"+
		"\u22a0\3\2\2\2\u229e\u229c\3\2\2\2\u229e\u229f\3\2\2\2\u229f\u22a2\3\2"+
		"\2\2\u22a0\u229e\3\2\2\2\u22a1\u2273\3\2\2\2\u22a1\u22a2\3\2\2\2\u22a2"+
		"\u02ab\3\2\2\2\u22a3\u22a5\7\u00f4\2\2\u22a4\u22a6\5\f\7\2\u22a5\u22a4"+
		"\3\2\2\2\u22a6\u22a7\3\2\2\2\u22a7\u22a5\3\2\2\2\u22a7\u22a8\3\2\2\2\u22a8"+
		"\u22a9\3\2\2\2\u22a9\u22ab\7\u00aa\2\2\u22aa\u22ac\5\f\7\2\u22ab\u22aa"+
		"\3\2\2\2\u22ac\u22ad\3\2\2\2\u22ad\u22ab\3\2\2\2\u22ad\u22ae\3\2\2\2\u22ae"+
		"\u22b5\3\2\2\2\u22af\u22b1\7\u016e\2\2\u22b0\u22b2\5\f\7\2\u22b1\u22b0"+
		"\3\2\2\2\u22b2\u22b3\3\2\2\2\u22b3\u22b1\3\2\2\2\u22b3\u22b4\3\2\2\2\u22b4"+
		"\u22b6\3\2\2\2\u22b5\u22af\3\2\2\2\u22b5\u22b6\3\2\2\2\u22b6\u22bd\3\2"+
		"\2\2\u22b7\u22b9\7U\2\2\u22b8\u22ba\5\f\7\2\u22b9\u22b8\3\2\2\2\u22ba"+
		"\u22bb\3\2\2\2\u22bb\u22b9\3\2\2\2\u22bb\u22bc\3\2\2\2\u22bc\u22be\3\2"+
		"\2\2\u22bd\u22b7\3\2\2\2\u22bd\u22be\3\2\2\2\u22be\u22c6\3\2\2\2\u22bf"+
		"\u22c3\5\u02ae\u0158\2\u22c0\u22c2\5\f\7\2\u22c1\u22c0\3\2\2\2\u22c2\u22c5"+
		"\3\2\2\2\u22c3\u22c1\3\2\2\2\u22c3\u22c4\3\2\2\2\u22c4\u22c7\3\2\2\2\u22c5"+
		"\u22c3\3\2\2\2\u22c6\u22bf\3\2\2\2\u22c7\u22c8\3\2\2\2\u22c8\u22c6\3\2"+
		"\2\2\u22c8\u22c9\3\2\2\2\u22c9\u02ad\3\2\2\2\u22ca\u22d8\5\u02b0\u0159"+
		"\2\u22cb\u22cd\5\f\7\2\u22cc\u22cb\3\2\2\2\u22cd\u22ce\3\2\2\2\u22ce\u22cc"+
		"\3\2\2\2\u22ce\u22cf\3\2\2\2\u22cf\u22d0\3\2\2\2\u22d0\u22d2\7\u0117\2"+
		"\2\u22d1\u22d3\5\f\7\2\u22d2\u22d1\3\2\2\2\u22d3\u22d4\3\2\2\2\u22d4\u22d2"+
		"\3\2\2\2\u22d4\u22d5\3\2\2\2\u22d5\u22d6\3\2\2\2\u22d6\u22d7\5\u02b2\u015a"+
		"\2\u22d7\u22d9\3\2\2\2\u22d8\u22cc\3\2\2\2\u22d8\u22d9\3\2\2\2\u22d9\u02af"+
		"\3\2\2\2\u22da\u22db\7\u01c4\2\2\u22db\u02b1\3\2\2\2\u22dc\u22dd\7\u01c2"+
		"\2\2\u22dd\u02b3\3\2\2\2\u22de\u22e0\7\u0136\2\2\u22df\u22e1\5\f\7\2\u22e0"+
		"\u22df\3\2\2\2\u22e1\u22e2\3\2\2\2\u22e2\u22e0\3\2\2\2\u22e2\u22e3\3\2"+
		"\2\2\u22e3\u22f0\3\2\2\2\u22e4\u22e6\7\u0102\2\2\u22e5\u22e7\5\f\7\2\u22e6"+
		"\u22e5\3\2\2\2\u22e7\u22e8\3\2\2\2\u22e8\u22e6\3\2\2\2\u22e8\u22e9\3\2"+
		"\2\2\u22e9\u22ea\3\2\2\2\u22ea\u22ec\5\u02a8\u0155\2\u22eb\u22ed\5\f\7"+
		"\2\u22ec\u22eb\3\2\2\2\u22ed\u22ee\3\2\2\2\u22ee\u22ec\3\2\2\2\u22ee\u22ef"+
		"\3\2\2\2\u22ef\u22f1\3\2\2\2\u22f0\u22e4\3\2\2\2\u22f0\u22f1\3\2\2\2\u22f1"+
		"\u22f8\3\2\2\2\u22f2\u22f4\7\u00a0\2\2\u22f3\u22f5\5\f\7\2\u22f4\u22f3"+
		"\3\2\2\2\u22f5\u22f6\3\2\2\2\u22f6\u22f4\3\2\2\2\u22f6\u22f7\3\2\2\2\u22f7"+
		"\u22f9\3\2\2\2\u22f8\u22f2\3\2\2\2\u22f8\u22f9\3\2\2\2\u22f9\u22fa\3\2"+
		"\2\2\u22fa\u22fb\5\u02b6\u015c\2\u22fb\u02b5\3\2\2\2\u22fc\u22fe\5\u02bc"+
		"\u015f\2\u22fd\u22ff\5\f\7\2\u22fe\u22fd\3\2\2\2\u22ff\u2300\3\2\2\2\u2300"+
		"\u22fe\3\2\2\2\u2300\u2301\3\2\2\2\u2301\u2308\3\2\2\2\u2302\u2304\7\u00ff"+
		"\2\2\u2303\u2305\5\f\7\2\u2304\u2303\3\2\2\2\u2305\u2306\3\2\2\2\u2306"+
		"\u2304\3\2\2\2\u2306\u2307\3\2\2\2\u2307\u2309\3\2\2\2\u2308\u2302\3\2"+
		"\2\2\u2308\u2309\3\2\2\2\u2309\u230a\3\2\2\2\u230a\u230b\5\u02a8\u0155"+
		"\2\u230b\u2316\3\2\2\2\u230c\u230e\5\u02b8\u015d\2\u230d\u230f\5\f\7\2"+
		"\u230e\u230d\3\2\2\2\u230f\u2310\3\2\2\2\u2310\u230e\3\2\2\2\u2310\u2311"+
		"\3\2\2\2\u2311\u2312\3\2\2\2\u2312\u2313\7<\2\2\u2313\u2316\3\2\2\2\u2314"+
		"\u2316\5\u02ba\u015e\2\u2315\u22fc\3\2\2\2\u2315\u230c\3\2\2\2\u2315\u2314"+
		"\3\2\2\2\u2316\u02b7\3\2\2\2\u2317\u2318\7\u01c2\2\2\u2318\u02b9\3\2\2"+
		"\2\u2319\u231a\7\u01c4\2\2\u231a\u02bb\3\2\2\2\u231b\u231d\7\u0081\2\2"+
		"\u231c\u231e\5\f\7\2\u231d\u231c\3\2\2\2\u231e\u231f\3\2\2\2\u231f\u231d"+
		"\3\2\2\2\u231f\u2320\3\2\2\2\u2320\u2327\3\2\2\2\u2321\u2323\7\u00ff\2"+
		"\2\u2322\u2324\5\f\7\2\u2323\u2322\3\2\2\2\u2324\u2325\3\2\2\2\u2325\u2323"+
		"\3\2\2\2\u2325\u2326\3\2\2\2\u2326\u2328\3\2\2\2\u2327\u2321\3\2\2\2\u2327"+
		"\u2328\3\2\2\2\u2328\u232a\3\2\2\2\u2329\u231b\3\2\2\2\u2329\u232a\3\2"+
		"\2\2\u232a\u232b\3\2\2\2\u232b\u2335\t\22\2\2\u232c\u232e\5\u02be\u0160"+
		"\2\u232d\u232f\5\f\7\2\u232e\u232d\3\2\2\2\u232f\u2330\3\2\2\2\u2330\u232e"+
		"\3\2\2\2\u2330\u2331\3\2\2\2\u2331\u2332\3\2\2\2\u2332\u2333\7\u0127\2"+
		"\2\u2333\u2335\3\2\2\2\u2334\u2329\3\2\2\2\u2334\u232c\3\2\2\2\u2335\u02bd"+
		"\3\2\2\2\u2336\u2337\7\u01c2\2\2\u2337\u02bf\3\2\2\2\u2338\u233a\7\u0143"+
		"\2\2\u2339\u233b\5\f\7\2\u233a\u2339\3\2\2\2\u233b\u233c\3\2\2\2\u233c"+
		"\u233a\3\2\2\2\u233c\u233d\3\2\2\2\u233d\u2344\3\2\2\2\u233e\u2340\t,"+
		"\2\2\u233f\u2341\5\f\7\2\u2340\u233f\3\2\2\2\u2341\u2342\3\2\2\2\u2342"+
		"\u2340\3\2\2\2\u2342\u2343\3\2\2\2\u2343\u2345\3\2\2\2\u2344\u233e\3\2"+
		"\2\2\u2344\u2345\3\2\2\2\u2345\u234c\3\2\2\2\u2346\u2348\7\27\2\2\u2347"+
		"\u2349\5\f\7\2\u2348\u2347\3\2\2\2\u2349\u234a\3\2\2\2\u234a\u2348\3\2"+
		"\2\2\u234a\u234b\3\2\2\2\u234b\u234d\3\2\2\2\u234c\u2346\3\2\2\2\u234c"+
		"\u234d\3\2\2\2\u234d\u2354\3\2\2\2\u234e\u2350\7\u00b5\2\2\u234f\u2351"+
		"\5\f\7\2\u2350\u234f\3\2\2\2\u2351\u2352\3\2\2\2\u2352\u2350\3\2\2\2\u2352"+
		"\u2353\3\2\2\2\u2353\u2355\3\2\2\2\u2354\u234e\3\2\2\2\u2354\u2355\3\2"+
		"\2\2\u2355\u2356\3\2\2\2\u2356\u235e\5\u02c2\u0162\2\u2357\u2359\5\f\7"+
		"\2\u2358\u2357\3\2\2\2\u2359\u235a\3\2\2\2\u235a\u2358\3\2\2\2\u235a\u235b"+
		"\3\2\2\2\u235b\u235c\3\2\2\2\u235c\u235d\5\u02c2\u0162\2\u235d\u235f\3"+
		"\2\2\2\u235e\u2358\3\2\2\2\u235f\u2360\3\2\2\2\u2360\u235e\3\2\2\2\u2360"+
		"\u2361\3\2\2\2\u2361\u02c1\3\2\2\2\u2362\u2363\7\u01c4\2\2\u2363\u02c3"+
		"\3\2\2\2\u2364\u2366\7\25\2\2\u2365\u2367\5\f\7\2\u2366\u2365\3\2\2\2"+
		"\u2367\u2368\3\2\2\2\u2368\u2366\3\2\2\2\u2368\u2369\3\2\2\2\u2369\u2370"+
		"\3\2\2\2\u236a\u236c\5\u02c6\u0164\2\u236b\u236d\5\f\7\2\u236c\u236b\3"+
		"\2\2\2\u236d\u236e\3\2\2\2\u236e\u236c\3\2\2\2\u236e\u236f\3\2\2\2\u236f"+
		"\u2371\3\2\2\2\u2370\u236a\3\2\2\2\u2371\u2372\3\2\2\2\u2372\u2370\3\2"+
		"\2\2\u2372\u2373\3\2\2\2\u2373\u2374\3\2\2\2\u2374\u2376\7\u0102\2\2\u2375"+
		"\u2377\5\f\7\2\u2376\u2375\3\2\2\2\u2377\u2378\3\2\2\2\u2378\u2376\3\2"+
		"\2\2\u2378\u2379\3\2\2\2\u2379\u2381\3\2\2\2\u237a\u237e\5\u02a8\u0155"+
		"\2\u237b\u237d\5\f\7\2\u237c\u237b\3\2\2\2\u237d\u2380\3\2\2\2\u237e\u237c"+
		"\3\2\2\2\u237e\u237f\3\2\2\2\u237f\u2382\3\2\2\2\u2380\u237e\3\2\2\2\u2381"+
		"\u237a\3\2\2\2\u2382\u2383\3\2\2\2\u2383\u2381\3\2\2\2\u2383\u2384\3\2"+
		"\2\2\u2384\u02c5\3\2\2\2\u2385\u23ab\7p\2\2\u2386\u2388\7\u00a5\2\2\u2387"+
		"\u2389\5\f\7\2\u2388\u2387\3\2\2\2\u2389\u238a\3\2\2\2\u238a\u2388\3\2"+
		"\2\2\u238a\u238b\3\2\2\2\u238b\u238c\3\2\2\2\u238c\u238d\5\u02cc\u0167"+
		"\2\u238d\u23ab\3\2\2\2\u238e\u23ab\7\u00ae\2\2\u238f\u23ab\7\u00e9\2\2"+
		"\u2390\u23ab\7\u00ee\2\2\u2391\u2393\t-\2\2\u2392\u2394\5\f\7\2\u2393"+
		"\u2392\3\2\2\2\u2394\u2395\3\2\2\2\u2395\u2393\3\2\2\2\u2395\u2396\3\2"+
		"\2\2\u2396\u2398\3\2\2\2\u2397\u2391\3\2\2\2\u2397\u2398\3\2\2\2\u2398"+
		"\u2399\3\2\2\2\u2399\u239b\7\u0119\2\2\u239a\u239c\5\f\7\2\u239b\u239a"+
		"\3\2\2\2\u239c\u239d\3\2\2\2\u239d\u239b\3\2\2\2\u239d\u239e\3\2\2\2\u239e"+
		"\u239f\3\2\2\2\u239f\u23a0\5\u02ca\u0166\2\u23a0\u23ab\3\2\2\2\u23a1\u23ab"+
		"\7\u011b\2\2\u23a2\u23a4\7\u018a\2\2\u23a3\u23a5\5\f\7\2\u23a4\u23a3\3"+
		"\2\2\2\u23a5\u23a6\3\2\2\2\u23a6\u23a4\3\2\2\2\u23a6\u23a7\3\2\2\2\u23a7"+
		"\u23a8\3\2\2\2\u23a8\u23a9\5\u02c8\u0165\2\u23a9\u23ab\3\2\2\2\u23aa\u2385"+
		"\3\2\2\2\u23aa\u2386\3\2\2\2\u23aa\u238e\3\2\2\2\u23aa\u238f\3\2\2\2\u23aa"+
		"\u2390\3\2\2\2\u23aa\u2397\3\2\2\2\u23aa\u23a1\3\2\2\2\u23aa\u23a2\3\2"+
		"\2\2\u23ab\u02c7\3\2\2\2\u23ac\u23ad\7\u01c2\2\2\u23ad\u02c9\3\2\2\2\u23ae"+
		"\u23af\7\u01c2\2\2\u23af\u02cb\3\2\2\2\u23b0\u23b1\7\u01c2\2\2\u23b1\u02cd"+
		"\3\2\2\2\u23b2\u23b3\b\u0168\1\2\u23b3\u23b7\7\u01b8\2\2\u23b4\u23b6\5"+
		"\16\b\2\u23b5\u23b4\3\2\2\2\u23b6\u23b9\3\2\2\2\u23b7\u23b5\3\2\2\2\u23b7"+
		"\u23b8\3\2\2\2\u23b8\u23ba\3\2\2\2\u23b9\u23b7\3\2\2\2\u23ba\u23be\5\u02ce"+
		"\u0168\2\u23bb\u23bd\5\16\b\2\u23bc\u23bb\3\2\2\2\u23bd\u23c0\3\2\2\2"+
		"\u23be\u23bc\3\2\2\2\u23be\u23bf\3\2\2\2\u23bf\u23c1\3\2\2\2\u23c0\u23be"+
		"\3\2\2\2\u23c1\u23c2\7\u01b9\2\2\u23c2\u23cf\3\2\2\2\u23c3\u23c7\5\u02d4"+
		"\u016b\2\u23c4\u23c6\5\16\b\2\u23c5\u23c4\3\2\2\2\u23c6\u23c9\3\2\2\2"+
		"\u23c7\u23c5\3\2\2\2\u23c7\u23c8\3\2\2\2\u23c8\u23ca\3\2\2\2\u23c9\u23c7"+
		"\3\2\2\2\u23ca\u23cb\5\u02ce\u0168\5\u23cb\u23cf\3\2\2\2\u23cc\u23cf\5"+
		"\u02ea\u0176\2\u23cd\u23cf\5\u02d0\u0169\2\u23ce\u23b2\3\2\2\2\u23ce\u23c3"+
		"\3\2\2\2\u23ce\u23cc\3\2\2\2\u23ce\u23cd\3\2\2\2\u23cf\u23e2\3\2\2\2\u23d0"+
		"\u23d4\f\6\2\2\u23d1\u23d3\5\16\b\2\u23d2\u23d1\3\2\2\2\u23d3\u23d6\3"+
		"\2\2\2\u23d4\u23d2\3\2\2\2\u23d4\u23d5\3\2\2\2\u23d5\u23d7\3\2\2\2\u23d6"+
		"\u23d4\3\2\2\2\u23d7\u23db\5\u02d2\u016a\2\u23d8\u23da\5\16\b\2\u23d9"+
		"\u23d8\3\2\2\2\u23da\u23dd\3\2\2\2\u23db\u23d9\3\2\2\2\u23db\u23dc\3\2"+
		"\2\2\u23dc\u23de\3\2\2\2\u23dd\u23db\3\2\2\2\u23de\u23df\5\u02ce\u0168"+
		"\7\u23df\u23e1\3\2\2\2\u23e0\u23d0\3\2\2\2\u23e1\u23e4\3\2\2\2\u23e2\u23e0"+
		"\3\2\2\2\u23e2\u23e3\3\2\2\2\u23e3\u02cf\3\2\2\2\u23e4\u23e2\3\2\2\2\u23e5"+
		"\u23e9\7\u01c2\2\2\u23e6\u23e9\7\u01c1\2\2\u23e7\u23e9\5\n\6\2\u23e8\u23e5"+
		"\3\2\2\2\u23e8\u23e6\3\2\2\2\u23e8\u23e7\3\2\2\2\u23e9\u02d1\3\2\2\2\u23ea"+
		"\u23f1\7\u01ac\2\2\u23eb\u23f1\7\u01ad\2\2\u23ec\u23f1\7\u01ae\2\2\u23ed"+
		"\u23f1\7\u01af\2\2\u23ee\u23ef\7\u01ae\2\2\u23ef\u23f1\7\u01ae\2\2\u23f0"+
		"\u23ea\3\2\2\2\u23f0\u23eb\3\2\2\2\u23f0\u23ec\3\2\2\2\u23f0\u23ed\3\2"+
		"\2\2\u23f0\u23ee\3\2\2\2\u23f1\u02d3\3\2\2\2\u23f2\u23f3\t.\2\2\u23f3"+
		"\u02d5\3\2\2\2\u23f4\u23f5\b\u016c\1\2\u23f5\u23f9\7\u01b8\2\2\u23f6\u23f8"+
		"\5\16\b\2\u23f7\u23f6\3\2\2\2\u23f8\u23fb\3\2\2\2\u23f9\u23f7\3\2\2\2"+
		"\u23f9\u23fa\3\2\2\2\u23fa\u23fc\3\2\2\2\u23fb\u23f9\3\2\2\2\u23fc\u2400"+
		"\5\u02d6\u016c\2\u23fd\u23ff\5\16\b\2\u23fe\u23fd\3\2\2\2\u23ff\u2402"+
		"\3\2\2\2\u2400\u23fe\3\2\2\2\u2400\u2401\3\2\2\2\u2401\u2403\3\2\2\2\u2402"+
		"\u2400\3\2\2\2\u2403\u2404\7\u01b9\2\2\u2404\u2412\3\2\2\2\u2405\u2409"+
		"\7\u00fa\2\2\u2406\u2408\5\16\b\2\u2407\u2406\3\2\2\2\u2408\u240b\3\2"+
		"\2\2\u2409\u2407\3\2\2\2\u2409\u240a\3\2\2\2\u240a\u240c\3\2\2\2\u240b"+
		"\u2409\3\2\2\2\u240c\u2412\5\u02d6\u016c\7\u240d\u2412\5\u02e2\u0172\2"+
		"\u240e\u2412\5\u02da\u016e\2\u240f\u2412\5\u02de\u0170\2\u2410\u2412\5"+
		"\u02d8\u016d\2\u2411\u23f4\3\2\2\2\u2411\u2405\3\2\2\2\u2411\u240d\3\2"+
		"\2\2\u2411\u240e\3\2\2\2\u2411\u240f\3\2\2\2\u2411\u2410\3\2\2\2\u2412"+
		"\u2425\3\2\2\2\u2413\u2417\f\b\2\2\u2414\u2416\5\16\b\2\u2415\u2414\3"+
		"\2\2\2\u2416\u2419\3\2\2\2\u2417\u2415\3\2\2\2\u2417\u2418\3\2\2\2\u2418"+
		"\u241a\3\2\2\2\u2419\u2417\3\2\2\2\u241a\u241e\5\u02dc\u016f\2\u241b\u241d"+
		"\5\16\b\2\u241c\u241b\3\2\2\2\u241d\u2420\3\2\2\2\u241e\u241c\3\2\2\2"+
		"\u241e\u241f\3\2\2\2\u241f\u2421\3\2\2\2\u2420\u241e\3\2\2\2\u2421\u2422"+
		"\5\u02d6\u016c\t\u2422\u2424\3\2\2\2\u2423\u2413\3\2\2\2\u2424\u2427\3"+
		"\2\2\2\u2425\u2423\3\2\2\2\u2425\u2426\3\2\2\2\u2426\u02d7\3\2\2\2\u2427"+
		"\u2425\3\2\2\2\u2428\u2430\5\u023e\u0120\2\u2429\u242b\5\16\b\2\u242a"+
		"\u2429\3\2\2\2\u242b\u242c\3\2\2\2\u242c\u242a\3\2\2\2\u242c\u242d\3\2"+
		"\2\2\u242d\u242e\3\2\2\2\u242e\u242f\7\u00d6\2\2\u242f\u2431\3\2\2\2\u2430"+
		"\u242a\3\2\2\2\u2430\u2431\3\2\2\2\u2431\u2433\3\2\2\2\u2432\u2434\5\16"+
		"\b\2\u2433\u2432\3\2\2\2\u2434\u2435\3\2\2\2\u2435\u2433\3\2\2\2\u2435"+
		"\u2436\3\2\2\2\u2436\u2437\3\2\2\2\u2437\u2438\t/\2\2\u2438\u02d9\3\2"+
		"\2\2\u2439\u243a\b\u016e\1\2\u243a\u243e\5\u02ce\u0168\2\u243b\u243d\5"+
		"\16\b\2\u243c\u243b\3\2\2\2\u243d\u2440\3\2\2\2\u243e\u243c\3\2\2\2\u243e"+
		"\u243f\3\2\2\2\u243f\u2441\3\2\2\2\u2440\u243e\3\2\2\2\u2441\u2445\5\u02e6"+
		"\u0174\2\u2442\u2444\5\16\b\2\u2443\u2442\3\2\2\2\u2444\u2447\3\2\2\2"+
		"\u2445\u2443\3\2\2\2\u2445\u2446\3\2\2\2\u2446\u2448\3\2\2\2\u2447\u2445"+
		"\3\2\2\2\u2448\u2449\5\u02ce\u0168\2\u2449\u244d\3\2\2\2\u244a\u244d\5"+
		"\u02e2\u0172\2\u244b\u244d\5\u023e\u0120\2\u244c\u2439\3\2\2\2\u244c\u244a"+
		"\3\2\2\2\u244c\u244b\3\2\2\2\u244d\u2466\3\2\2\2\u244e\u2450\f\3\2\2\u244f"+
		"\u2451\5\16\b\2\u2450\u244f\3\2\2\2\u2451\u2452\3\2\2\2\u2452\u2450\3"+
		"\2\2\2\u2452\u2453\3\2\2\2\u2453\u2454\3\2\2\2\u2454\u2458\5\u02dc\u016f"+
		"\2\u2455\u2457\5\16\b\2\u2456\u2455\3\2\2\2\u2457\u245a\3\2\2\2\u2458"+
		"\u2456\3\2\2\2\u2458\u2459\3\2\2\2\u2459\u245b\3\2\2\2\u245a\u2458\3\2"+
		"\2\2\u245b\u245f\5\u02e6\u0174\2\u245c\u245e\5\16\b\2\u245d\u245c\3\2"+
		"\2\2\u245e\u2461\3\2\2\2\u245f\u245d\3\2\2\2\u245f\u2460\3\2\2\2\u2460"+
		"\u2462\3\2\2\2\u2461\u245f\3\2\2\2\u2462\u2463\5\u02ce\u0168\2\u2463\u2465"+
		"\3\2\2\2\u2464\u244e\3\2\2\2\u2465\u2468\3\2\2\2\u2466\u2464\3\2\2\2\u2466"+
		"\u2467\3\2\2\2\u2467\u02db\3\2\2\2\u2468\u2466\3\2\2\2\u2469\u246a\t\60"+
		"\2\2\u246a\u02dd\3\2\2\2\u246b\u2473\5\u02ce\u0168\2\u246c\u246e\5\16"+
		"\b\2\u246d\u246c\3\2\2\2\u246e\u246f\3\2\2\2\u246f\u246d\3\2\2\2\u246f"+
		"\u2470\3\2\2\2\u2470\u2471\3\2\2\2\u2471\u2472\7\u00d6\2\2\u2472\u2474"+
		"\3\2\2\2\u2473\u246d\3\2\2";
	private static final String _serializedATNSegment4 =
		"\2\u2473\u2474\3\2\2\2\u2474\u247c\3\2\2\2\u2475\u2477\5\16\b\2\u2476"+
		"\u2475\3\2\2\2\u2477\u2478\3\2\2\2\u2478\u2476\3\2\2\2\u2478\u2479\3\2"+
		"\2\2\u2479\u247a\3\2\2\2\u247a\u247b\7\u00fa\2\2\u247b\u247d\3\2\2\2\u247c"+
		"\u2476\3\2\2\2\u247c\u247d\3\2\2\2\u247d\u247f\3\2\2\2\u247e\u2480\5\16"+
		"\b\2\u247f\u247e\3\2\2\2\u2480\u2481\3\2\2\2\u2481\u247f\3\2\2\2\u2481"+
		"\u2482\3\2\2\2\u2482\u2483\3\2\2\2\u2483\u2484\5\u02e0\u0171\2\u2484\u02df"+
		"\3\2\2\2\u2485\u2486\t\61\2\2\u2486\u02e1\3\2\2\2\u2487\u248f\5\u02ea"+
		"\u0176\2\u2488\u248a\5\16\b\2\u2489\u2488\3\2\2\2\u248a\u248b\3\2\2\2"+
		"\u248b\u2489\3\2\2\2\u248b\u248c\3\2\2\2\u248c\u248d\3\2\2\2\u248d\u248e"+
		"\7\u00d6\2\2\u248e\u2490\3\2\2\2\u248f\u2489\3\2\2\2\u248f\u2490\3\2\2"+
		"\2\u2490\u2498\3\2\2\2\u2491\u2493\5\16\b\2\u2492\u2491\3\2\2\2\u2493"+
		"\u2494\3\2\2\2\u2494\u2492\3\2\2\2\u2494\u2495\3\2\2\2\u2495\u2496\3\2"+
		"\2\2\u2496\u2497\7\u00fa\2\2\u2497\u2499\3\2\2\2\u2498\u2492\3\2\2\2\u2498"+
		"\u2499\3\2\2\2\u2499\u249b\3\2\2\2\u249a\u249c\5\16\b\2\u249b\u249a\3"+
		"\2\2\2\u249c\u249d\3\2\2\2\u249d\u249b\3\2\2\2\u249d\u249e\3\2\2\2\u249e"+
		"\u249f\3\2\2\2\u249f\u24a0\5\u02e4\u0173\2\u24a0\u02e3\3\2\2\2\u24a1\u24a2"+
		"\t\62\2\2\u24a2\u02e5\3\2\2\2\u24a3\u24a7\7\u00d6\2\2\u24a4\u24a6\5\16"+
		"\b\2\u24a5\u24a4\3\2\2\2\u24a6\u24a9\3\2\2\2\u24a7\u24a5\3\2\2\2\u24a7"+
		"\u24a8\3\2\2\2\u24a8\u24ab\3\2\2\2\u24a9\u24a7\3\2\2\2\u24aa\u24a3\3\2"+
		"\2\2\u24aa\u24ab\3\2\2\2\u24ab\u2533\3\2\2\2\u24ac\u24b0\7\u00fa\2\2\u24ad"+
		"\u24af\5\16\b\2\u24ae\u24ad\3\2\2\2\u24af\u24b2\3\2\2\2\u24b0\u24ae\3"+
		"\2\2\2\u24b0\u24b1\3\2\2\2\u24b1\u24b4\3\2\2\2\u24b2\u24b0\3\2\2\2\u24b3"+
		"\u24ac\3\2\2\2\u24b3\u24b4\3\2\2\2\u24b4\u24f1\3\2\2\2\u24b5\u24bd\7\u00be"+
		"\2\2\u24b6\u24b8\5\16\b\2\u24b7\u24b6\3\2\2\2\u24b8\u24b9\3\2\2\2\u24b9"+
		"\u24b7\3\2\2\2\u24b9\u24ba\3\2\2\2\u24ba\u24bb\3\2\2\2\u24bb\u24bc\7\u0170"+
		"\2\2\u24bc\u24be\3\2\2\2\u24bd\u24b7\3\2\2\2\u24bd\u24be\3\2\2\2\u24be"+
		"\u24f2\3\2\2\2\u24bf\u24c7\7\u01b7\2\2\u24c0\u24c2\5\16\b\2\u24c1\u24c0"+
		"\3\2\2\2\u24c2\u24c3\3\2\2\2\u24c3\u24c1\3\2\2\2\u24c3\u24c4\3\2\2\2\u24c4"+
		"\u24c5\3\2\2\2\u24c5\u24c6\7\u0170\2\2\u24c6\u24c8\3\2\2\2\u24c7\u24c1"+
		"\3\2\2\2\u24c7\u24c8\3\2\2\2\u24c8\u24f2\3\2\2\2\u24c9\u24d1\7\u00e0\2"+
		"\2\u24ca\u24cc\5\16\b\2\u24cb\u24ca\3\2\2\2\u24cc\u24cd\3\2\2\2\u24cd"+
		"\u24cb\3\2\2\2\u24cd\u24ce\3\2\2\2\u24ce\u24cf\3\2\2\2\u24cf\u24d0\7\u0170"+
		"\2\2\u24d0\u24d2\3\2\2\2\u24d1\u24cb\3\2\2\2\u24d1\u24d2\3\2\2\2\u24d2"+
		"\u24f2\3\2\2\2\u24d3\u24db\7\u01b4\2\2\u24d4\u24d6\5\16\b\2\u24d5\u24d4"+
		"\3\2\2\2\u24d6\u24d7\3\2\2\2\u24d7\u24d5\3\2\2\2\u24d7\u24d8\3\2\2\2\u24d8"+
		"\u24d9\3\2\2\2\u24d9\u24da\7\u0170\2\2\u24da\u24dc\3\2\2\2\u24db\u24d5"+
		"\3\2\2\2\u24db\u24dc\3\2\2\2\u24dc\u24f2\3\2\2\2\u24dd\u24e5\7\u009c\2"+
		"\2\u24de\u24e0\5\16\b\2\u24df\u24de\3\2\2\2\u24e0\u24e1\3\2\2\2\u24e1"+
		"\u24df\3\2\2\2\u24e1\u24e2\3\2\2\2\u24e2\u24e3\3\2\2\2\u24e3\u24e4\7\u0175"+
		"\2\2\u24e4\u24e6\3\2\2\2\u24e5\u24df\3\2\2\2\u24e5\u24e6\3\2\2\2\u24e6"+
		"\u24f2\3\2\2\2\u24e7\u24ef\7\u01b3\2\2\u24e8\u24ea\5\16\b\2\u24e9\u24e8"+
		"\3\2\2\2\u24ea\u24eb\3\2\2\2\u24eb\u24e9\3\2\2\2\u24eb\u24ec\3\2\2\2\u24ec"+
		"\u24ed\3\2\2\2\u24ed\u24ee\7\u0175\2\2\u24ee\u24f0\3\2\2\2\u24ef\u24e9"+
		"\3\2\2\2\u24ef\u24f0\3\2\2\2\u24f0\u24f2\3\2\2\2\u24f1\u24b5\3\2\2\2\u24f1"+
		"\u24bf\3\2\2\2\u24f1\u24c9\3\2\2\2\u24f1\u24d3\3\2\2\2\u24f1\u24dd\3\2"+
		"\2\2\u24f1\u24e7\3\2\2\2\u24f2\u2534\3\2\2\2\u24f3\u24fb\7\u00be\2\2\u24f4"+
		"\u24f6\5\16\b\2\u24f5\u24f4\3\2\2\2\u24f6\u24f7\3\2\2\2\u24f7\u24f5\3"+
		"\2\2\2\u24f7\u24f8\3\2\2\2\u24f8\u24f9\3\2\2\2\u24f9\u24fa\7\u0170\2\2"+
		"\u24fa\u24fc\3\2\2\2\u24fb\u24f5\3\2\2\2\u24fb\u24fc\3\2\2\2\u24fc\u24fe"+
		"\3\2\2\2\u24fd\u24ff\5\16\b\2\u24fe\u24fd\3\2\2\2\u24ff\u2500\3\2\2\2"+
		"\u2500\u24fe\3\2\2\2\u2500\u2501\3\2\2\2\u2501\u2502\3\2\2\2\u2502\u2504"+
		"\7\u0106\2\2\u2503\u2505\5\16\b\2\u2504\u2503\3\2\2\2\u2505\u2506\3\2"+
		"\2\2\u2506\u2504\3\2\2\2\u2506\u2507\3\2\2\2\u2507\u2508\3\2\2\2\u2508"+
		"\u2510\7\u009c\2\2\u2509\u250b\5\16\b\2\u250a\u2509\3\2\2\2\u250b\u250c"+
		"\3\2\2\2\u250c\u250a\3\2\2\2\u250c\u250d\3\2\2\2\u250d\u250e\3\2\2\2\u250e"+
		"\u250f\7\u0175\2\2\u250f\u2511\3\2\2\2\u2510\u250a\3\2\2\2\u2510\u2511"+
		"\3\2\2\2\u2511\u2534\3\2\2\2\u2512\u2534\7\u01b6\2\2\u2513\u251b\7\u00e0"+
		"\2\2\u2514\u2516\5\16\b\2\u2515\u2514\3\2\2\2\u2516\u2517\3\2\2\2\u2517"+
		"\u2515\3\2\2\2\u2517\u2518\3\2\2\2\u2518\u2519\3\2\2\2\u2519\u251a\7\u0170"+
		"\2\2\u251a\u251c\3\2\2\2\u251b\u2515\3\2\2\2\u251b\u251c\3\2\2\2\u251c"+
		"\u251e\3\2\2\2\u251d\u251f\5\16\b\2\u251e\u251d\3\2\2\2\u251f\u2520\3"+
		"\2\2\2\u2520\u251e\3\2\2\2\u2520\u2521\3\2\2\2\u2521\u2522\3\2\2\2\u2522"+
		"\u2524\7\u0106\2\2\u2523\u2525\5\16\b\2\u2524\u2523\3\2\2\2\u2525\u2526"+
		"\3\2\2\2\u2526\u2524\3\2\2\2\u2526\u2527\3\2\2\2\u2527\u2528\3\2\2\2\u2528"+
		"\u2530\7\u009c\2\2\u2529\u252b\5\16\b\2\u252a\u2529\3\2\2\2\u252b\u252c"+
		"\3\2\2\2\u252c\u252a\3\2\2\2\u252c\u252d\3\2\2\2\u252d\u252e\3\2\2\2\u252e"+
		"\u252f\7\u0175\2\2\u252f\u2531\3\2\2\2\u2530\u252a\3\2\2\2\u2530\u2531"+
		"\3\2\2\2\u2531\u2534\3\2\2\2\u2532\u2534\7\u01b5\2\2\u2533\u24b3\3\2\2"+
		"\2\u2533\u24f3\3\2\2\2\u2533\u2512\3\2\2\2\u2533\u2513\3\2\2\2\u2533\u2532"+
		"\3\2\2\2\u2534\u02e7\3\2\2\2\u2535\u253d\5\u023e\u0120\2\u2536\u2538\5"+
		"\16\b\2\u2537\u2536\3\2\2\2\u2538\u253b\3\2\2\2\u2539\u2537\3\2\2\2\u2539"+
		"\u253a\3\2\2\2\u253a\u253c\3\2\2\2\u253b\u2539\3\2\2\2\u253c\u253e\5\u02ee"+
		"\u0178\2\u253d\u2539\3\2\2\2\u253d\u253e\3\2\2\2\u253e\u2546\3\2\2\2\u253f"+
		"\u2541\5\16\b\2\u2540\u253f\3\2\2\2\u2541\u2544\3\2\2\2\u2542\u2540\3"+
		"\2\2\2\u2542\u2543\3\2\2\2\u2543\u2545\3\2\2\2\u2544\u2542\3\2\2\2\u2545"+
		"\u2547\5\u02f0\u0179\2\u2546\u2542\3\2\2\2\u2546\u2547\3\2\2\2\u2547\u02e9"+
		"\3\2\2\2\u2548\u2564\5\u02e8\u0175\2\u2549\u254d\7\u00b9\2\2\u254a\u254c"+
		"\5\16\b\2\u254b\u254a\3\2\2\2\u254c\u254f\3\2\2\2\u254d\u254b\3\2\2\2"+
		"\u254d\u254e\3\2\2\2\u254e\u2550\3\2\2\2\u254f\u254d\3\2\2\2\u2550\u2558"+
		"\5\u02f6\u017c\2\u2551\u2553\5\16\b\2\u2552\u2551\3\2\2\2\u2553\u2556"+
		"\3\2\2\2\u2554\u2552\3\2\2\2\u2554\u2555\3\2\2\2\u2555\u2557\3\2\2\2\u2556"+
		"\u2554\3\2\2\2\u2557\u2559\5\u02ec\u0177\2\u2558\u2554\3\2\2\2\u2558\u2559"+
		"\3\2\2\2\u2559\u2561\3\2\2\2\u255a\u255c\5\16\b\2\u255b\u255a\3\2\2\2"+
		"\u255c\u255f\3\2\2\2\u255d\u255b\3\2\2\2\u255d\u255e\3\2\2\2\u255e\u2560"+
		"\3\2\2\2\u255f\u255d\3\2\2\2\u2560\u2562\5\u02f0\u0179\2\u2561\u255d\3"+
		"\2\2\2\u2561\u2562\3\2\2\2\u2562\u2564\3\2\2\2\u2563\u2548\3\2\2\2\u2563"+
		"\u2549\3\2\2\2\u2564\u02eb\3\2\2\2\u2565\u2566\5\u02ee\u0178\2\u2566\u02ed"+
		"\3\2\2\2\u2567\u256b\7\u01b8\2\2\u2568\u256a\5\16\b\2\u2569\u2568\3\2"+
		"\2\2\u256a\u256d\3\2\2\2\u256b\u2569\3\2\2\2\u256b\u256c\3\2\2\2\u256c"+
		"\u2570\3\2\2\2\u256d\u256b\3\2\2\2\u256e\u2571\5\u02ce\u0168\2\u256f\u2571"+
		"\7\13\2\2\u2570\u256e\3\2\2\2\u2570\u256f\3\2\2\2\u2571\u257e\3\2\2\2"+
		"\u2572\u2574\5\f\7\2\u2573\u2572\3\2\2\2\u2574\u2577\3\2\2\2\u2575\u2573"+
		"\3\2\2\2\u2575\u2576\3\2\2\2\u2576\u257a\3\2\2\2\u2577\u2575\3\2\2\2\u2578"+
		"\u257b\5\u02ce\u0168\2\u2579\u257b\7\13\2\2\u257a\u2578\3\2\2\2\u257a"+
		"\u2579\3\2\2\2\u257b\u257d\3\2\2\2\u257c\u2575\3\2\2\2\u257d\u2580\3\2"+
		"\2\2\u257e\u257c\3\2\2\2\u257e\u257f\3\2\2\2\u257f\u2584\3\2\2\2\u2580"+
		"\u257e\3\2\2\2\u2581\u2583\5\16\b\2\u2582\u2581\3\2\2\2\u2583\u2586\3"+
		"\2\2\2\u2584\u2582\3\2\2\2\u2584\u2585\3\2\2\2\u2585\u2587\3\2\2\2\u2586"+
		"\u2584\3\2\2\2\u2587\u2588\7\u01b9\2\2\u2588\u02ef\3\2\2\2\u2589\u258d"+
		"\7\u01b8\2\2\u258a\u258c\5\16\b\2\u258b\u258a\3\2\2\2\u258c\u258f\3\2"+
		"\2\2\u258d\u258b\3\2\2\2\u258d\u258e\3\2\2\2\u258e\u2590\3\2\2\2\u258f"+
		"\u258d\3\2\2\2\u2590\u2594\5\u02f2\u017a\2\u2591\u2593\5\16\b\2\u2592"+
		"\u2591\3\2\2\2\u2593\u2596\3\2\2\2\u2594\u2592\3\2\2\2\u2594\u2595\3\2"+
		"\2\2\u2595\u2597\3\2\2\2\u2596\u2594\3\2\2\2\u2597\u259f\7\u01b2\2\2\u2598"+
		"\u259a\5\16\b\2\u2599\u2598\3\2\2\2\u259a\u259d\3\2\2\2\u259b\u2599\3"+
		"\2\2\2\u259b\u259c\3\2\2\2\u259c\u259e\3\2\2\2\u259d\u259b\3\2\2\2\u259e"+
		"\u25a0\5\u02f4\u017b\2\u259f\u259b\3\2\2\2\u259f\u25a0\3\2\2\2\u25a0\u25a4"+
		"\3\2\2\2\u25a1\u25a3\5\16\b\2\u25a2\u25a1\3\2\2\2\u25a3\u25a6\3\2\2\2"+
		"\u25a4\u25a2\3\2\2\2\u25a4\u25a5\3\2\2\2\u25a5\u25a7\3\2\2\2\u25a6\u25a4"+
		"\3\2\2\2\u25a7\u25a8\7\u01b9\2\2\u25a8\u02f1\3\2\2\2\u25a9\u25aa\5\u02ce"+
		"\u0168\2\u25aa\u02f3\3\2\2\2\u25ab\u25ac\5\u02ce\u0168\2\u25ac\u02f5\3"+
		"\2\2\2\u25ad\u25ae\7\u01c4\2\2\u25ae\u02f7\3\2\2\2\u067a\u02fa\u02fc\u0305"+
		"\u030b\u030f\u0317\u031d\u0323\u032b\u032f\u0333\u0336\u0339\u033d\u0343"+
		"\u0348\u034f\u0354\u0357\u035c\u0360\u0365\u036c\u0371\u0378\u037e\u0382"+
		"\u0387\u038e\u0395\u039b\u039f\u03a4\u03a8\u03ad\u03b4\u03bd\u03c4\u03cb"+
		"\u03d0\u03d6\u03dc\u03e3\u03eb\u03f1\u03fa\u0401\u0408\u040d\u0414\u0419"+
		"\u041e\u0425\u0428\u042e\u0432\u0437\u043d\u0441\u0446\u044c\u0452\u0456"+
		"\u045b\u0461\u0468\u046f\u0475\u0479\u047e\u0485\u048e\u0494\u049b\u04a1"+
		"\u04a7\u04ab\u04b0\u04b7\u04c2\u04c8\u04ce\u04d5\u04dd\u04e6\u04ec\u050c"+
		"\u0512\u0518\u051e\u0522\u0527\u052d\u0533\u0537\u0539\u053e\u0542\u0547"+
		"\u054b\u0553\u0559\u055d\u0562\u0568\u056c\u0571\u0577\u057d\u0581\u0586"+
		"\u058a\u0592\u0598\u059e\u05a2\u05ac\u05b2\u05b8\u05be\u05c2\u05c7\u05cb"+
		"\u05d0\u05d6\u05d8\u05dc\u05e6\u05ec\u05f0\u05f5\u05f9\u05fe\u0604\u0608"+
		"\u060d\u0613\u0619\u061d\u0622\u0626\u062b\u0631\u0635\u063a\u0640\u0644"+
		"\u0646\u064b\u064f\u0651\u0656\u065a\u0660\u0662\u0668\u066a\u0671\u0675"+
		"\u067a\u067e\u0684\u068c\u0690\u0692\u0694\u069a\u06a0\u06a6\u06aa\u06ac"+
		"\u06b1\u06b6\u06b8\u06bd\u06c3\u06c8\u06cc\u06d0\u06d5\u06dd\u06df\u06e5"+
		"\u06ed\u06ef\u06f5\u06fd\u06ff\u0705\u070b\u0711\u0717\u071d\u0723\u0729"+
		"\u072f\u0736\u073c\u0742\u0748\u074e\u0752\u075a\u0760\u0766\u076c\u0772"+
		"\u0778\u077a\u0780\u0784\u0788\u078c\u078e\u0794\u079a\u07a0\u07a2\u07a8"+
		"\u07ac\u07b1\u07b5\u07b9\u07bf\u07c1\u07c8\u07ce\u07d2\u07d9\u07dd\u07e2"+
		"\u07e6\u07ec\u07f2\u07fa\u07fe\u0803\u0807\u080d\u0813\u081b\u081f\u0824"+
		"\u0828\u082e\u0834\u0838\u083a\u083c\u0842\u0848\u084e\u0854\u0858\u085d"+
		"\u0863\u0867\u086b\u0870\u0874\u0879\u087d\u0881\u0887\u088d\u0893\u0898"+
		"\u089e\u08a0\u08a6\u08ac\u08ae\u08b2\u08b7\u08bd\u08c3\u08c8\u08cc\u08d2"+
		"\u08d8\u08de\u08e0\u08e6\u08ec\u08f0\u08ff\u0901\u0907\u090b\u0910\u0916"+
		"\u0920\u0926\u092c\u0930\u0934\u093a\u0940\u0946\u094c\u0952\u095d\u0961"+
		"\u0965\u096b\u0971\u0977\u097d\u0983\u0988\u0990\u0996\u099c\u09a2\u09ab"+
		"\u09b1\u09b7\u09bd\u09c1\u09c5\u09cb\u09d1\u09d8\u09dc\u09e1\u09e9\u09ef"+
		"\u09f5\u09fa\u09ff\u0a0b\u0a11\u0a17\u0a1d\u0a22\u0a28\u0a2f\u0a35\u0a3b"+
		"\u0a3d\u0a43\u0a49\u0a4d\u0a55\u0a5b\u0a5d\u0a63\u0a69\u0a71\u0a77\u0a7b"+
		"\u0a80\u0a87\u0a8b\u0a90\u0a96\u0a9d\u0aa1\u0aa3\u0aa8\u0aac\u0ab2\u0abe"+
		"\u0ac6\u0aca\u0acf\u0ad3\u0ad9\u0add\u0ae2\u0ae8\u0aee\u0af2\u0af7\u0afb"+
		"\u0b03\u0b09\u0b0d\u0b12\u0b18\u0b1e\u0b24\u0b2a\u0b2e\u0b33\u0b39\u0b3f"+
		"\u0b45\u0b4a\u0b50\u0b56\u0b5a\u0b5f\u0b63\u0b6a\u0b6c\u0b72\u0b78\u0b7c"+
		"\u0b81\u0b87\u0b8b\u0b91\u0b97\u0b9d\u0ba3\u0ba7\u0bac\u0bb2\u0bb6\u0bba"+
		"\u0bbf\u0bc3\u0bc8\u0bcc\u0bd2\u0bd8\u0bde\u0be4\u0be8\u0bed\u0bf3\u0bf7"+
		"\u0bfc\u0c02\u0c08\u0c0c\u0c11\u0c15\u0c1b\u0c21\u0c27\u0c2d\u0c33\u0c38"+
		"\u0c3d\u0c41\u0c47\u0c4d\u0c53\u0c58\u0c5d\u0c61\u0c67\u0c6d\u0c73\u0c75"+
		"\u0c7b\u0c7f\u0c85\u0c89\u0c8b\u0c8d\u0c92\u0c96\u0c9c\u0ca2\u0ca8\u0cae"+
		"\u0cb2\u0cb7\u0cbb\u0cbf\u0cc7\u0ccb\u0cd0\u0cd4\u0cda\u0cde\u0ce3\u0ce7"+
		"\u0ced\u0cef\u0cf6\u0cfe\u0d00\u0d06\u0d0a\u0d0c\u0d15\u0d1b\u0d1d\u0d23"+
		"\u0d27\u0d29\u0d2e\u0d36\u0d38\u0d41\u0d43\u0d4b\u0d4d\u0d54\u0d56\u0d5c"+
		"\u0d60\u0d62\u0d68\u0d6a\u0d70\u0d74\u0d79\u0d81\u0d83\u0d89\u0d8d\u0d92"+
		"\u0d9c\u0da2\u0da6\u0dab\u0daf\u0db4\u0db8\u0dc0\u0dc6\u0dca\u0dce\u0dd3"+
		"\u0dd9\u0dde\u0de5\u0de8\u0dee\u0df2\u0df7\u0dfb\u0e01\u0e07\u0e0b\u0e0f"+
		"\u0e15\u0e1b\u0e1d\u0e24\u0e26\u0e2c\u0e30\u0e32\u0e38\u0e3a\u0e40\u0e45"+
		"\u0e47\u0e4d\u0e53\u0e59\u0e5f\u0e63\u0e68\u0e6c\u0e71\u0e75\u0e7a\u0e7e"+
		"\u0e84\u0e8c\u0e92\u0e99\u0e9b\u0ea1\u0ea7\u0eaa\u0eb0\u0eb2\u0eb9\u0ebb"+
		"\u0ec2\u0ec4\u0ecb\u0ecd\u0ed0\u0ed5\u0edd\u0ee3\u0ee9\u0eef\u0ef5\u0ef7"+
		"\u0efd\u0f07\u0f0d\u0f12\u0f18\u0f1e\u0f22\u0f26\u0f2c\u0f32\u0f38\u0f3c"+
		"\u0f41\u0f47\u0f4c\u0f52\u0f58\u0f5c\u0f60\u0f66\u0f6c\u0f72\u0f78\u0f7e"+
		"\u0f82\u0f84\u0f89\u0f8d\u0f92\u0f96\u0f9c\u0fa4\u0faa\u0fb0\u0fb4\u0fba"+
		"\u0fc0\u0fc4\u0fc6\u0fcc\u0fd2\u0fd6\u0fdc\u0fe2\u0fe6\u0fe8\u0fee\u0ff4"+
		"\u0ff8\u0ffe\u1004\u1008\u100a\u1010\u1016\u101a\u1020\u1026\u102a\u102c"+
		"\u1032\u1038\u103e\u1040\u1046\u104a\u104f\u1053\u105b\u1061\u1067\u106b"+
		"\u1070\u1076\u107a\u107f\u1083\u1088\u108c\u1092\u1098\u109e\u10a6\u10ac"+
		"\u10b2\u10b7\u10bb\u10bd\u10c2\u10c6\u10cc\u10d2\u10d4\u10da\u10e0\u10e2"+
		"\u10e8\u10ee\u10f3\u10f7\u10f9\u10fe\u1102\u1108\u110e\u1112\u1117\u111b"+
		"\u1120\u1124\u112a\u112c\u1132\u1136\u113c\u1140\u1142\u1148\u114e\u1150"+
		"\u1154\u115a\u1160\u1162\u1166\u116c\u116e\u1174\u1178\u117d\u1185\u1187"+
		"\u118d\u1191\u1196\u119e\u11a4\u11a6\u11ac\u11b0\u11b2\u11b7\u11bf\u11c1"+
		"\u11c4\u11cd\u11cf\u11d6\u11da\u11e0\u11e2\u11ea\u11ec\u11f2\u11fa\u1200"+
		"\u1202\u120a\u120c\u1212\u1216\u121b\u121f\u122a\u122e\u1230\u1236\u123e"+
		"\u1240\u1247\u1249\u124f\u1257\u1259\u1260\u1262\u1268\u126c\u1272\u1279"+
		"\u127f\u1283\u1285\u128b\u128f\u1291\u1297\u129b\u12a1\u12a5\u12a9\u12b3"+
		"\u12b5\u12bb\u12bf\u12c5\u12c7\u12cd\u12d1\u12d7\u12d9\u12df\u12e5\u12e9"+
		"\u12ef\u12f3\u12f8\u12fc\u1302\u1308\u130f\u1316\u1319\u131f\u1322\u1328"+
		"\u132b\u1331\u1334\u133a\u133d\u1343\u1349\u1350\u1357\u135d\u1365\u136b"+
		"\u136e\u1373\u1378\u137f\u1385\u138c\u1393\u1398\u139f\u13a5\u13ac\u13b3"+
		"\u13b8\u13bf\u13c5\u13cc\u13d3\u13d9\u13df\u13e4\u13eb\u13f1\u13f8\u13ff"+
		"\u1404\u140b\u1411\u1418\u141d\u1426\u142c\u1433\u1438\u1441\u1447\u144e"+
		"\u1453\u145c\u145e\u1465\u1467\u1475\u147b\u1481\u1488\u148c\u148e\u1493"+
		"\u1499\u149d\u14a2\u14a8\u14b3\u14b5\u14bc\u14be\u14c9\u14cd\u14d3\u14d7"+
		"\u14dd\u14e3\u14e5\u14eb\u14f1\u14f7\u14fd\u1501\u150b\u150f\u1515\u1519"+
		"\u151b\u1520\u1526\u152c\u1533\u1537\u153e\u1546\u154a\u1550\u155e\u1564"+
		"\u156a\u1570\u1574\u157a\u1580\u1582\u1588\u158e\u1597\u159d\u159f\u15a5"+
		"\u15a7\u15ad\u15b3\u15bc\u15c4\u15ca\u15d0\u15d6\u15dc\u15e2\u15e4\u15e8"+
		"\u15f4\u15fa\u1601\u1605\u160a\u1610\u1619\u161f\u1621\u1627\u1629\u1631"+
		"\u1637\u163d\u163f\u1647\u164d\u164f\u1657\u165d\u165f\u1661\u1668\u166e"+
		"\u1670\u1678\u167e\u1680\u1686\u1688\u1690\u1694\u169a\u169e\u16a6\u16ac"+
		"\u16ae\u16b6\u16bc\u16be\u16c3\u16c9\u16cd\u16d2\u16d4\u16da\u16e0\u16e4"+
		"\u16e6\u16ec\u16f2\u16f8\u16fe\u1702\u1707\u170d\u1712\u1717\u171e\u1724"+
		"\u1726\u172a\u173a\u1743\u174c\u1751\u1756\u1760\u1765\u176a\u1772\u177b"+
		"\u1780\u1789\u1791\u1795\u179b\u17a1\u17a3\u17a9\u17ad\u17b3\u17b7\u17bf"+
		"\u17c1\u17c8\u17d0\u17d4\u17da\u17de\u17e0\u17e5\u17eb\u17f1\u17f8\u17fe"+
		"\u1801\u1807\u180d\u1813\u1815\u181b\u1821\u1823\u1825\u182b\u182f\u1834"+
		"\u183a\u183e\u1843\u1849\u184f\u1853\u1858\u185e\u1864\u1868\u186d\u1873"+
		"\u1877\u1879\u188d\u1891\u1896\u1898\u18a1\u18a5\u18ab\u18af\u18b5\u18b9"+
		"\u18bf\u18c3\u18db\u18e1\u18e7\u18e9\u18f0\u18fa\u1900\u1904\u190a\u190e"+
		"\u1910\u1915\u191b\u1921\u192a\u1930\u1932\u1938\u193c\u1941\u1947\u1949"+
		"\u194f\u1955\u1957\u195b\u1960\u1966\u1968\u196e\u1970\u1976\u197a\u197f"+
		"\u1985\u1987\u198d\u198f\u1995\u1999\u199d\u19a1\u19a5\u19a9\u19af\u19b5"+
		"\u19b9\u19bf\u19c3\u19c5\u19cb\u19d1\u19da\u19e0\u19e6\u19ec\u19ee\u19f4"+
		"\u19fa\u1a00\u1a04\u1a0a\u1a0e\u1a10\u1a15\u1a1d\u1a25\u1a27\u1a2d\u1a33"+
		"\u1a35\u1a3b\u1a42\u1a45\u1a4b\u1a4d\u1a53\u1a59\u1a5b\u1a61\u1a64\u1a6a"+
		"\u1a6c\u1a6f\u1a75\u1a79\u1a7e\u1a85\u1a88\u1a8e\u1a94\u1a96\u1a9a\u1a9c"+
		"\u1aa8\u1aac\u1aae\u1ab3\u1ab9\u1ac4\u1acc\u1ad2\u1ad4\u1adc\u1ae2\u1ae4"+
		"\u1aef\u1af5\u1af7\u1af9\u1b04\u1b10\u1b16\u1b18\u1b1e\u1b20\u1b26\u1b28"+
		"\u1b30\u1b36\u1b38\u1b3e\u1b40\u1b46\u1b48\u1b50\u1b56\u1b58\u1b60\u1b66"+
		"\u1b68\u1b70\u1b74\u1b7a\u1b81\u1b85\u1b88\u1b8a\u1b90\u1b98\u1b9c\u1ba2"+
		"\u1baa\u1bb2\u1bb8\u1bbf\u1bc5\u1bd0\u1bd6\u1bdd\u1be4\u1be8\u1bed\u1bf1"+
		"\u1bf6\u1c01\u1c03\u1c09\u1c0d\u1c13\u1c15\u1c1b\u1c25\u1c2a\u1c30\u1c37"+
		"\u1c3e\u1c45\u1c4c\u1c53\u1c5a\u1c61\u1c68\u1c6f\u1c76\u1c7d\u1c84\u1c8b"+
		"\u1c92\u1c99\u1ca0\u1ca4\u1ca9\u1cad\u1cb3\u1cb9\u1cbb\u1cc1\u1cca\u1cd0"+
		"\u1cd7\u1cdb\u1cde\u1ce4\u1cea\u1cf1\u1cf5\u1cfa\u1cfe\u1d03\u1d07\u1d0c"+
		"\u1d13\u1d19\u1d20\u1d24\u1d27\u1d2d\u1d34\u1d3b\u1d3f\u1d44\u1d49\u1d51"+
		"\u1d53\u1d59\u1d61\u1d68\u1d6f\u1d73\u1d78\u1d7c\u1d81\u1d85\u1d8a\u1d8f"+
		"\u1d95\u1d99\u1d9e\u1da4\u1db0\u1db2\u1db8\u1dba\u1dc0\u1dc4\u1dc9\u1dd3"+
		"\u1dd7\u1de1\u1de8\u1def\u1df4\u1df8\u1dfe\u1e04\u1e06\u1e0e\u1e14\u1e16"+
		"\u1e1e\u1e24\u1e26\u1e33\u1e39\u1e3b\u1e43\u1e49\u1e4b\u1e53\u1e59\u1e5f"+
		"\u1e61\u1e65\u1e6b\u1e71\u1e77\u1e7e\u1e84\u1e86\u1e8c\u1e8e\u1e97\u1e99"+
		"\u1e9f\u1ea5\u1eaa\u1eb4\u1eba\u1ec0\u1ec2\u1ec8\u1ecd\u1ed5\u1edb\u1edf"+
		"\u1ee5\u1eeb\u1eed\u1ef2\u1ef7\u1efa\u1f00\u1f04\u1f0a\u1f0c\u1f12\u1f16"+
		"\u1f1c\u1f22\u1f2d\u1f33\u1f39\u1f3b\u1f48\u1f4d\u1f4f\u1f55\u1f5b\u1f5f"+
		"\u1f65\u1f6b\u1f71\u1f73\u1f7f\u1f85\u1f8c\u1f8e\u1f94\u1f96\u1f9c\u1fa0"+
		"\u1fa6\u1faa\u1fac\u1fb1\u1fb8\u1fbe\u1fc0\u1fc6\u1fc8\u1fd0\u1fd6\u1fd8"+
		"\u1fde\u1fe0\u1ff8\u1fff\u2006\u200b\u2012\u2018\u201a\u2020\u2027\u202e"+
		"\u2031\u2037\u203a\u2040\u2043\u2049\u204c\u2052\u2055\u205b\u205e\u2064"+
		"\u2067\u206d\u2072\u2079\u207c\u2082\u2085\u208d\u208f\u2095\u209b\u209d"+
		"\u20a7\u20a9\u20af\u20b5\u20b7\u20bd\u20bf\u20c5\u20cb\u20cd\u20d1\u20d6"+
		"\u20da\u20e1\u20e8\u20ef\u20f5\u20f8\u20fe\u2104\u2106\u210c\u210e\u2110"+
		"\u2116\u211c\u2122\u2124\u212a\u212c\u2130\u2136\u213c\u2140\u2148\u214e"+
		"\u2154\u2156\u215e\u2164\u2166\u216c\u216e\u2178\u217e\u2180\u2182\u2189"+
		"\u218f\u2195\u219b\u219d\u21a3\u21a5\u21ad\u21b3\u21b5\u21bb\u21c1\u21c7"+
		"\u21cf\u21d5\u21d7\u21dd\u21e3\u21e8\u21ea\u21ed\u21f3\u21f9\u21fb\u2203"+
		"\u2209\u220b\u2211\u2217\u2219\u221f\u222b\u2231\u2233\u223b\u223d\u2244"+
		"\u2246\u224c\u2250\u2252\u2258\u2260\u2267\u226e\u2273\u227a\u227f\u2286"+
		"\u228b\u2292\u2297\u229e\u22a1\u22a7\u22ad\u22b3\u22b5\u22bb\u22bd\u22c3"+
		"\u22c8\u22ce\u22d4\u22d8\u22e2\u22e8\u22ee\u22f0\u22f6\u22f8\u2300\u2306"+
		"\u2308\u2310\u2315\u231f\u2325\u2327\u2329\u2330\u2334\u233c\u2342\u2344"+
		"\u234a\u234c\u2352\u2354\u235a\u2360\u2368\u236e\u2372\u2378\u237e\u2383"+
		"\u238a\u2395\u2397\u239d\u23a6\u23aa\u23b7\u23be\u23c7\u23ce\u23d4\u23db"+
		"\u23e2\u23e8\u23f0\u23f9\u2400\u2409\u2411\u2417\u241e\u2425\u242c\u2430"+
		"\u2435\u243e\u2445\u244c\u2452\u2458\u245f\u2466\u246f\u2473\u2478\u247c"+
		"\u2481\u248b\u248f\u2494\u2498\u249d\u24a7\u24aa\u24b0\u24b3\u24b9\u24bd"+
		"\u24c3\u24c7\u24cd\u24d1\u24d7\u24db\u24e1\u24e5\u24eb\u24ef\u24f1\u24f7"+
		"\u24fb\u2500\u2506\u250c\u2510\u2517\u251b\u2520\u2526\u252c\u2530\u2533"+
		"\u2539\u253d\u2542\u2546\u254d\u2554\u2558\u255d\u2561\u2563\u256b\u2570"+
		"\u2575\u257a\u257e\u2584\u258d\u2594\u259b\u259f\u25a4";
	public static final String _serializedATN = Utils.join(
		new String[] {
			_serializedATNSegment0,
			_serializedATNSegment1,
			_serializedATNSegment2,
			_serializedATNSegment3,
			_serializedATNSegment4
		},
		""
	);
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}