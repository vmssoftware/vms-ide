// Generated from d:\vmssoftware.work\vms-ide\src\vms_cobol\parser\cobol.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.misc.*;
import org.antlr.v4.runtime.tree.*;
import java.util.List;
import java.util.Iterator;
import java.util.ArrayList;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class cobolParser extends Parser {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ACCEPT=1, ACCESS=2, ADD=3, AFTER=4, ALL=5, ALPHA=6, ALPHABET=7, ALPHABETIC=8, 
		ALPHABETIC_LOWER=9, ALPHABETIC_UPPER=10, ALSO=11, ALTER=12, ALTERNATE=13, 
		AND=14, APPLY=15, ARE=16, AREA=17, AREAS=18, ARGUMENT_NUMBER=19, ARGUMENT_VALUE=20, 
		ARITHMETIC=21, ASCENDING=22, ASCII=23, ASSIGN=24, AT=25, AUTHOR=26, AUTO=27, 
		AUTOMATIC=28, AUTOTERMINATE=29, BACKGROUND_COLOR=30, BEFORE=31, BELL=32, 
		BINARY=33, BINARY_CHAR=34, BINARY_DOUBLE=35, BINARY_LONG=36, BINARY_SHORT=37, 
		BLANK=38, BLINK=39, BLINKING=40, BLOCK=41, BOLD=42, BOTTOM=43, BY=44, 
		C01=45, CALL=46, CANCEL=47, CARD_READER=48, CF=49, CH=50, CHARACTER=51, 
		CHARACTERS=52, CLASS=53, CLOCK_UNITS=54, CLOSE=55, CODE=56, CODE_SET=57, 
		COLLATING=58, COLUMN=59, COMMA=60, COMMON=61, COMP=62, COMPUTATIONAL=63, 
		COMPUTATIONAL_1=64, COMPUTATIONAL_2=65, COMPUTATIONAL_3=66, COMPUTATIONAL_4=67, 
		COMPUTATIONAL_5=68, COMPUTATIONAL_X=69, COMPUTE=70, COMP_1=71, COMP_2=72, 
		COMP_3=73, COMP_4=74, COMP_5=75, COMP_X=76, CONFIGURATION=77, CONSOLE=78, 
		CONTAINS=79, CONTIGUOUS=80, CONTIGUOUS_BEST_TRY=81, CONTINUE=82, CONTROL=83, 
		CONTROLS=84, CONVERSION=85, CONVERTING=86, COPY=87, CRT=88, CURRENCY=89, 
		CURRENT=90, CURSOR=91, DATA=92, DATE=93, DATE_COMPILED=94, DATE_WRITTEN=95, 
		DAY=96, DAY_OF_WEEK=97, DE=98, DEBUGGING=99, DECIMAL_POINT=100, DECLARATIVES=101, 
		DECLARATIVES_IN_A_AREA=102, DEFAULT=103, DEFERRED_WRITE=104, DELETE=105, 
		DELIMITER=106, DEPENDING=107, DESCENDING=108, DETAIL=109, DISK=110, DISPLAY=111, 
		DIVIDE=112, DIVISION=113, DOWN=114, DUPLICATES=115, DYNAMIC=116, EBCDIC=117, 
		ECHO=118, EDITING=119, END=120, END_ACCEPT=121, END_ADD=122, END_CALL=123, 
		END_COMPUTE=124, END_DELETE=125, END_DIVIDE=126, END_EVALUATE=127, END_IF=128, 
		END_IN_A_AREA=129, END_MULTIPLY=130, END_OF_PAGE=131, END_PERFORM=132, 
		END_READ=133, END_RETURN=134, END_REWRITE=135, END_SEARCH=136, END_START=137, 
		END_STRING=138, END_SUBTRACT=139, END_UNSTRING=140, END_WRITE=141, ENVIRONMENT=142, 
		ENVIRONMENT_NAME=143, ENVIRONMENT_VALUE=144, EOL=145, EOS=146, EQUAL=147, 
		ERASE=148, ERROR=149, EVALUATE=150, EVERY=151, EXCEPTION=152, EXCLUSIVE=153, 
		EXIT=154, EXTEND=155, EXTENSION=156, EXTERNAL=157, FAILURE=158, FD=159, 
		FILE=160, FILE_CONTROL=161, FILE_ID=162, FILLER=163, FILL_SIZE=164, FINAL=165, 
		FIRST=166, FLOAT_EXTENDED=167, FLOAT_LONG=168, FLOAT_SHORT=169, FOOTING=170, 
		FOR=171, FOREGROUND_COLOR=172, FROM=173, FULL=174, FUNCTION=175, GENERATE=176, 
		GIVING=177, GLOBAL=178, GO=179, GREATER=180, GROUP=181, HEADING=182, HIGHLIGHT=183, 
		HIGH_VALUE=184, HIGH_VALUES=185, I64=186, ID=187, IDENT=188, IDENTIFICATION=189, 
		IDENTIFICATION_IN_A_AREA=190, IF=191, IN=192, INDEX=193, INDEXED=194, 
		INDICATE=195, INITIAL=196, INITIALIZE=197, INITIATE=198, INPUT=199, INPUT_OUTPUT=200, 
		INSPECT=201, INSTALLATION=202, INVALID=203, IS=204, I_O=205, I_O_CONTROL=206, 
		JUST=207, JUSTIFIED=208, KEY=209, LABEL=210, LAST=211, LEADING=212, LEFT=213, 
		LESS=214, LIMIT=215, LIMITS=216, LINAGE=217, LINE=218, LINES=219, LINE_PRINTER=220, 
		LINKAGE=221, LOCK=222, LOCK_HOLDING=223, LOWLIGHT=224, LOW_VALUE=225, 
		LOW_VALUES=226, MANUAL=227, MASS_INSERT=228, MEMORY=229, MERGE=230, MODE=231, 
		MODULES=232, MOVE=233, MULTIPLE=234, MULTIPLY=235, NATIVE=236, NEGATIVE=237, 
		NEXT=238, NO=239, NOT=240, NUMBER=241, NUMERIC=242, OBJECT_COMPUTER=243, 
		OCCURS=244, OF=245, OFF=246, OMITTED=247, ON=248, OPEN=249, OPTIONAL=250, 
		OPTIONS=251, OR=252, ORGANIZATION=253, OUTPUT=254, OVERFLOW=255, PACKED_DECIMAL=256, 
		PADDING=257, PAGE=258, PAPER_TAPE_PUNCH=259, PAPER_TAPE_READER=260, PERFORM=261, 
		PF=262, PH=263, PIC=264, PICTURE=265, PLUS=266, POINTER=267, POINTER_64=268, 
		POSITION=269, POSITIVE=270, PREALLOCATION=271, PRINTER=272, PRINT_CONTROL=273, 
		PROCEDURE=274, PROGRAM=275, PROGRAM_ID=276, PROTECTED=277, QUOTE=278, 
		QUOTES=279, RANDOM=280, RD=281, READ=282, RECORD=283, RECORDS=284, REDEFINES=285, 
		REEL=286, REFERENCE=287, RELATIVE=288, RELEASE=289, RENAMES=290, REPLACE=291, 
		REPLACING=292, REPORT=293, REPORTING=294, REPORTS=295, REQUIRED=296, RERUN=297, 
		RESERVE=298, RESET=299, RETURN=300, REVERSED=301, REVERSE_VIDEO=302, REWRITE=303, 
		RF=304, RH=305, RIGHT=306, ROLLBACK=307, SAME=308, SCREEN=309, SD=310, 
		SEARCH=311, SECTION=312, SECURE=313, SECURITY=314, SEGMENT_LIMIT=315, 
		SELECT=316, SEPARATE=317, SEQUENCE=318, SEQUENTIAL=319, SET=320, SIGN=321, 
		SIGNED=322, SIZE=323, SORT=324, SORT_MERGE=325, SOURCE=326, SOURCE_COMPUTER=327, 
		SPACE=328, SPACES=329, SPECIAL_NAMES=330, STANDARD=331, STANDARD_1=332, 
		STANDARD_2=333, START=334, STATUS=335, STOP=336, STRING=337, SUBTRACT=338, 
		SUCCESS=339, SUM=340, SUPPRESS=341, SWITCH=342, SYMBOL=343, SYMBOLIC=344, 
		SYNC=345, SYNCHRONIZED=346, SYSERR=347, SYSIN=348, SYSOUT=349, TALLYING=350, 
		TAPE=351, TERMINATE=352, THAN=353, THROUGH=354, THRU=355, TIME=356, TIMES=357, 
		TO=358, TOP=359, TRAILING=360, TRUE=361, TYPE=362, UNDERLINE=363, UNDERLINED=364, 
		UNIT=365, UNLOCK=366, UNSIGNED=367, UNSTRING=368, UP=369, UPON=370, USAGE=371, 
		USE=372, USING=373, VALUE=374, VALUES=375, VARYING=376, VAX=377, WHEN=378, 
		WINDOW=379, WITH=380, WORDS=381, WORKING_STORAGE=382, WRITE=383, YYYYDDD=384, 
		YYYYMMDD=385, ZERO=386, ZEROES=387, ZEROS=388, START_SLASH_=389, START_STAR_=390, 
		EXCLAM_=391, UNDER_=392, PLUS_=393, MINUS_=394, STAR_=395, SLASH_=396, 
		COMMA_=397, SEMI_=398, COLON_=399, EQUAL_=400, LT_=401, LE_=402, GE_=403, 
		GT_=404, LPAREN_=405, RPAREN_=406, LBRACK_=407, RBRACK_=408, POINTER_=409, 
		ATP_=410, DOT_=411, LCURLY_=412, RCURLY_=413, STRING_LITERAL=414, NUMERIC_LITERAL=415, 
		HEX_LITERAL=416, USER_DEFINED_WORD=417, START_FOUR_SPACES=418, WHITESPACE=419, 
		NEWLINE=420;
	public static final int
		RULE_cobol_source = 0, RULE_figurative_constant = 1, RULE_separator = 2, 
		RULE_arithmetic_separator = 3, RULE_line_comment = 4, RULE_program = 5, 
		RULE_procedure_division = 6, RULE_procedure_division_header = 7, RULE_section = 8, 
		RULE_declaratives = 9, RULE_declaratives_section = 10, RULE_declarative_paragraph = 11, 
		RULE_paragraph = 12, RULE_sentense = 13, RULE_use_statement = 14, RULE_group_data_name = 15, 
		RULE_use_on = 16, RULE_section_header = 17, RULE_paragraph_name = 18, 
		RULE_section_name = 19, RULE_using = 20, RULE_giving = 21, RULE_procedure_test_line = 22, 
		RULE_statement = 23, RULE_accept_statement = 24, RULE_on_exception_variants = 25, 
		RULE_at_end_variants = 26, RULE_accept_form6 = 27, RULE_accept6_item = 28, 
		RULE_accept_form1 = 29, RULE_accept_form2 = 30, RULE_accept_form3 = 31, 
		RULE_accept_form4 = 32, RULE_accept_form5 = 33, RULE_accept_at = 34, RULE_accept_at_line = 35, 
		RULE_accept_at_column = 36, RULE_accept_form4_clause = 37, RULE_accept_form3_clause = 38, 
		RULE_key_dest_item = 39, RULE_def_value = 40, RULE_protected_value = 41, 
		RULE_prot_fill_lit = 42, RULE_prot_size_value = 43, RULE_number_value = 44, 
		RULE_date_time = 45, RULE_dest_item = 46, RULE_input_source = 47, RULE_at_end = 48, 
		RULE_on_exception = 49, RULE_data_division = 50, RULE_file_section = 51, 
		RULE_working_storage_section = 52, RULE_linkage_section = 53, RULE_report_section = 54, 
		RULE_screen_section = 55, RULE_file_description_entry = 56, RULE_sort_merge_file_description_entry = 57, 
		RULE_report_description_entry = 58, RULE_fd_clause = 59, RULE_record_description_entry = 60, 
		RULE_data_description_entry = 61, RULE_level_number = 62, RULE_data_description_clause = 63, 
		RULE_renames = 64, RULE_rename_start = 65, RULE_rename_end = 66, RULE_value_is = 67, 
		RULE_value_is_definition = 68, RULE_value_is_definition_part = 69, RULE_value_is_definition_thru = 70, 
		RULE_external_name = 71, RULE_ref_data_name = 72, RULE_value_is_literal = 73, 
		RULE_occurs = 74, RULE_indexed_by = 75, RULE_ind_name = 76, RULE_key_is = 77, 
		RULE_key_name = 78, RULE_times_definition = 79, RULE_table_size = 80, 
		RULE_min_times = 81, RULE_max_times = 82, RULE_report_group_description_entry = 83, 
		RULE_report_group_data_description = 84, RULE_report_group_data_description_clause = 85, 
		RULE_sign_is = 86, RULE_sum = 87, RULE_control_foot_name = 88, RULE_detail_report_group_name = 89, 
		RULE_sum_name = 90, RULE_source_name = 91, RULE_column_number = 92, RULE_type_is_definition = 93, 
		RULE_type_control_name = 94, RULE_next_group_definition = 95, RULE_line_num_definition = 96, 
		RULE_line_num = 97, RULE_rd_clause = 98, RULE_footing_line_rd = 99, RULE_last_detail_line = 100, 
		RULE_first_detail_line = 101, RULE_heading_line = 102, RULE_page_size_rd = 103, 
		RULE_control_name = 104, RULE_report_code = 105, RULE_usage = 106, RULE_usage_definition = 107, 
		RULE_picture = 108, RULE_character_string = 109, RULE_char_str_part = 110, 
		RULE_other_data_item = 111, RULE_data_name = 112, RULE_sd_clause = 113, 
		RULE_report_is = 114, RULE_report_name = 115, RULE_linage = 116, RULE_bottom_lines = 117, 
		RULE_top_lines = 118, RULE_footing_line = 119, RULE_page_size = 120, RULE_data_rec = 121, 
		RULE_rec_name = 122, RULE_value_of_id = 123, RULE_value_of_id_definition = 124, 
		RULE_label = 125, RULE_record = 126, RULE_record_definition = 127, RULE_depending_item = 128, 
		RULE_shortest_rec = 129, RULE_longest_rec = 130, RULE_screen_description_entry = 131, 
		RULE_screen_name = 132, RULE_screen_description_clause = 133, RULE_scr_pic_using = 134, 
		RULE_scr_pic_from = 135, RULE_scr_pic_to = 136, RULE_nonnumeric_literal = 137, 
		RULE_src_number = 138, RULE_color_num = 139, RULE_identification_division = 140, 
		RULE_identification_division_paragraph = 141, RULE_program_id = 142, RULE_program_name = 143, 
		RULE_is_program = 144, RULE_with_ident = 145, RULE_ident_string = 146, 
		RULE_comment_entry = 147, RULE_author = 148, RULE_installation = 149, 
		RULE_date_written = 150, RULE_date_compiled = 151, RULE_security = 152, 
		RULE_options_ = 153, RULE_arithmetic = 154, RULE_environment_division = 155, 
		RULE_configuration_section = 156, RULE_input_output_section = 157, RULE_source_computer = 158, 
		RULE_computer_type = 159, RULE_with_debugging = 160, RULE_object_computer = 161, 
		RULE_memory_size = 162, RULE_memory_size_amount = 163, RULE_memory_size_unit = 164, 
		RULE_program_collating = 165, RULE_alpha_name = 166, RULE_segment_limit = 167, 
		RULE_segment_number = 168, RULE_special_names = 169, RULE_special_names_content = 170, 
		RULE_qualified_data_item = 171, RULE_currency = 172, RULE_currency_definition = 173, 
		RULE_literal_7 = 174, RULE_literal_8 = 175, RULE_class_ = 176, RULE_class_name = 177, 
		RULE_user_class = 178, RULE_symbolic_chars = 179, RULE_symb_ch_definition = 180, 
		RULE_symb_ch_def_clause = 181, RULE_symb_ch_def_in_alphabet = 182, RULE_symbol_char = 183, 
		RULE_char_val = 184, RULE_alphabet = 185, RULE_alpha_value = 186, RULE_user_alpha = 187, 
		RULE_first_literal = 188, RULE_last_literal = 189, RULE_same_literal = 190, 
		RULE_switch_ = 191, RULE_switch_clause_on = 192, RULE_switch_clause_off = 193, 
		RULE_cond_name = 194, RULE_switch_name = 195, RULE_switch_num = 196, RULE_top_of_page_name = 197, 
		RULE_predefined_device = 198, RULE_device_name = 199, RULE_arg_env = 200, 
		RULE_arg_env_name = 201, RULE_file_control = 202, RULE_select = 203, RULE_file_status = 204, 
		RULE_file_stat = 205, RULE_record_key = 206, RULE_record_key_definition = 207, 
		RULE_access_mode = 208, RULE_reserve = 209, RULE_reserve_num = 210, RULE_record_delimiter = 211, 
		RULE_padding = 212, RULE_pad_char = 213, RULE_organization = 214, RULE_lock_mode = 215, 
		RULE_lock_mode_definition = 216, RULE_code_set = 217, RULE_block_contains = 218, 
		RULE_smallest_block = 219, RULE_blocksize = 220, RULE_assign_to = 221, 
		RULE_assign_to_definition = 222, RULE_file_spec = 223, RULE_file_name = 224, 
		RULE_i_o_control = 225, RULE_multiple_file = 226, RULE_multiple_file_definition = 227, 
		RULE_multiple_file_name = 228, RULE_pos_integer = 229, RULE_rerun = 230, 
		RULE_rerun_definition = 231, RULE_clock_count = 232, RULE_condition_name = 233, 
		RULE_rerun_def_file = 234, RULE_rec_count = 235, RULE_same = 236, RULE_same_area_file = 237, 
		RULE_apply = 238, RULE_apply_definition = 239, RULE_window_ptrs = 240, 
		RULE_preall_amt = 241, RULE_extend_amt = 242, RULE_arithmetic_expression = 243, 
		RULE_binary_arithmetic_operator = 244, RULE_unary_arithmetic_operator = 245, 
		RULE_logic_expression = 246, RULE_success_failure_condition = 247, RULE_logic_condition = 248, 
		RULE_logic_operation = 249, RULE_sign_condition = 250, RULE_sign_condition_name = 251, 
		RULE_class_condition = 252, RULE_class_condition_name = 253, RULE_condition_operator = 254, 
		RULE_identifier_lvalue = 255, RULE_identifier = 256, RULE_arguments = 257, 
		RULE_subscripting = 258, RULE_reference_modification = 259, RULE_leftmost_character_position = 260, 
		RULE_length = 261, RULE_function_name = 262;
	public static final String[] ruleNames = {
		"cobol_source", "figurative_constant", "separator", "arithmetic_separator", 
		"line_comment", "program", "procedure_division", "procedure_division_header", 
		"section", "declaratives", "declaratives_section", "declarative_paragraph", 
		"paragraph", "sentense", "use_statement", "group_data_name", "use_on", 
		"section_header", "paragraph_name", "section_name", "using", "giving", 
		"procedure_test_line", "statement", "accept_statement", "on_exception_variants", 
		"at_end_variants", "accept_form6", "accept6_item", "accept_form1", "accept_form2", 
		"accept_form3", "accept_form4", "accept_form5", "accept_at", "accept_at_line", 
		"accept_at_column", "accept_form4_clause", "accept_form3_clause", "key_dest_item", 
		"def_value", "protected_value", "prot_fill_lit", "prot_size_value", "number_value", 
		"date_time", "dest_item", "input_source", "at_end", "on_exception", "data_division", 
		"file_section", "working_storage_section", "linkage_section", "report_section", 
		"screen_section", "file_description_entry", "sort_merge_file_description_entry", 
		"report_description_entry", "fd_clause", "record_description_entry", "data_description_entry", 
		"level_number", "data_description_clause", "renames", "rename_start", 
		"rename_end", "value_is", "value_is_definition", "value_is_definition_part", 
		"value_is_definition_thru", "external_name", "ref_data_name", "value_is_literal", 
		"occurs", "indexed_by", "ind_name", "key_is", "key_name", "times_definition", 
		"table_size", "min_times", "max_times", "report_group_description_entry", 
		"report_group_data_description", "report_group_data_description_clause", 
		"sign_is", "sum", "control_foot_name", "detail_report_group_name", "sum_name", 
		"source_name", "column_number", "type_is_definition", "type_control_name", 
		"next_group_definition", "line_num_definition", "line_num", "rd_clause", 
		"footing_line_rd", "last_detail_line", "first_detail_line", "heading_line", 
		"page_size_rd", "control_name", "report_code", "usage", "usage_definition", 
		"picture", "character_string", "char_str_part", "other_data_item", "data_name", 
		"sd_clause", "report_is", "report_name", "linage", "bottom_lines", "top_lines", 
		"footing_line", "page_size", "data_rec", "rec_name", "value_of_id", "value_of_id_definition", 
		"label", "record", "record_definition", "depending_item", "shortest_rec", 
		"longest_rec", "screen_description_entry", "screen_name", "screen_description_clause", 
		"scr_pic_using", "scr_pic_from", "scr_pic_to", "nonnumeric_literal", "src_number", 
		"color_num", "identification_division", "identification_division_paragraph", 
		"program_id", "program_name", "is_program", "with_ident", "ident_string", 
		"comment_entry", "author", "installation", "date_written", "date_compiled", 
		"security", "options_", "arithmetic", "environment_division", "configuration_section", 
		"input_output_section", "source_computer", "computer_type", "with_debugging", 
		"object_computer", "memory_size", "memory_size_amount", "memory_size_unit", 
		"program_collating", "alpha_name", "segment_limit", "segment_number", 
		"special_names", "special_names_content", "qualified_data_item", "currency", 
		"currency_definition", "literal_7", "literal_8", "class_", "class_name", 
		"user_class", "symbolic_chars", "symb_ch_definition", "symb_ch_def_clause", 
		"symb_ch_def_in_alphabet", "symbol_char", "char_val", "alphabet", "alpha_value", 
		"user_alpha", "first_literal", "last_literal", "same_literal", "switch_", 
		"switch_clause_on", "switch_clause_off", "cond_name", "switch_name", "switch_num", 
		"top_of_page_name", "predefined_device", "device_name", "arg_env", "arg_env_name", 
		"file_control", "select", "file_status", "file_stat", "record_key", "record_key_definition", 
		"access_mode", "reserve", "reserve_num", "record_delimiter", "padding", 
		"pad_char", "organization", "lock_mode", "lock_mode_definition", "code_set", 
		"block_contains", "smallest_block", "blocksize", "assign_to", "assign_to_definition", 
		"file_spec", "file_name", "i_o_control", "multiple_file", "multiple_file_definition", 
		"multiple_file_name", "pos_integer", "rerun", "rerun_definition", "clock_count", 
		"condition_name", "rerun_def_file", "rec_count", "same", "same_area_file", 
		"apply", "apply_definition", "window_ptrs", "preall_amt", "extend_amt", 
		"arithmetic_expression", "binary_arithmetic_operator", "unary_arithmetic_operator", 
		"logic_expression", "success_failure_condition", "logic_condition", "logic_operation", 
		"sign_condition", "sign_condition_name", "class_condition", "class_condition_name", 
		"condition_operator", "identifier_lvalue", "identifier", "arguments", 
		"subscripting", "reference_modification", "leftmost_character_position", 
		"length", "function_name"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "'!'", "'_'", "'+'", "'-'", 
		null, null, "','", "';'", "':'", "'='", "'<'", "'<='", "'>='", "'>'", 
		"'('", "')'", "'['", "']'", "'^'", "'@'", "'.'", "'{'", "'}'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "ACCEPT", "ACCESS", "ADD", "AFTER", "ALL", "ALPHA", "ALPHABET", 
		"ALPHABETIC", "ALPHABETIC_LOWER", "ALPHABETIC_UPPER", "ALSO", "ALTER", 
		"ALTERNATE", "AND", "APPLY", "ARE", "AREA", "AREAS", "ARGUMENT_NUMBER", 
		"ARGUMENT_VALUE", "ARITHMETIC", "ASCENDING", "ASCII", "ASSIGN", "AT", 
		"AUTHOR", "AUTO", "AUTOMATIC", "AUTOTERMINATE", "BACKGROUND_COLOR", "BEFORE", 
		"BELL", "BINARY", "BINARY_CHAR", "BINARY_DOUBLE", "BINARY_LONG", "BINARY_SHORT", 
		"BLANK", "BLINK", "BLINKING", "BLOCK", "BOLD", "BOTTOM", "BY", "C01", 
		"CALL", "CANCEL", "CARD_READER", "CF", "CH", "CHARACTER", "CHARACTERS", 
		"CLASS", "CLOCK_UNITS", "CLOSE", "CODE", "CODE_SET", "COLLATING", "COLUMN", 
		"COMMA", "COMMON", "COMP", "COMPUTATIONAL", "COMPUTATIONAL_1", "COMPUTATIONAL_2", 
		"COMPUTATIONAL_3", "COMPUTATIONAL_4", "COMPUTATIONAL_5", "COMPUTATIONAL_X", 
		"COMPUTE", "COMP_1", "COMP_2", "COMP_3", "COMP_4", "COMP_5", "COMP_X", 
		"CONFIGURATION", "CONSOLE", "CONTAINS", "CONTIGUOUS", "CONTIGUOUS_BEST_TRY", 
		"CONTINUE", "CONTROL", "CONTROLS", "CONVERSION", "CONVERTING", "COPY", 
		"CRT", "CURRENCY", "CURRENT", "CURSOR", "DATA", "DATE", "DATE_COMPILED", 
		"DATE_WRITTEN", "DAY", "DAY_OF_WEEK", "DE", "DEBUGGING", "DECIMAL_POINT", 
		"DECLARATIVES", "DECLARATIVES_IN_A_AREA", "DEFAULT", "DEFERRED_WRITE", 
		"DELETE", "DELIMITER", "DEPENDING", "DESCENDING", "DETAIL", "DISK", "DISPLAY", 
		"DIVIDE", "DIVISION", "DOWN", "DUPLICATES", "DYNAMIC", "EBCDIC", "ECHO", 
		"EDITING", "END", "END_ACCEPT", "END_ADD", "END_CALL", "END_COMPUTE", 
		"END_DELETE", "END_DIVIDE", "END_EVALUATE", "END_IF", "END_IN_A_AREA", 
		"END_MULTIPLY", "END_OF_PAGE", "END_PERFORM", "END_READ", "END_RETURN", 
		"END_REWRITE", "END_SEARCH", "END_START", "END_STRING", "END_SUBTRACT", 
		"END_UNSTRING", "END_WRITE", "ENVIRONMENT", "ENVIRONMENT_NAME", "ENVIRONMENT_VALUE", 
		"EOL", "EOS", "EQUAL", "ERASE", "ERROR", "EVALUATE", "EVERY", "EXCEPTION", 
		"EXCLUSIVE", "EXIT", "EXTEND", "EXTENSION", "EXTERNAL", "FAILURE", "FD", 
		"FILE", "FILE_CONTROL", "FILE_ID", "FILLER", "FILL_SIZE", "FINAL", "FIRST", 
		"FLOAT_EXTENDED", "FLOAT_LONG", "FLOAT_SHORT", "FOOTING", "FOR", "FOREGROUND_COLOR", 
		"FROM", "FULL", "FUNCTION", "GENERATE", "GIVING", "GLOBAL", "GO", "GREATER", 
		"GROUP", "HEADING", "HIGHLIGHT", "HIGH_VALUE", "HIGH_VALUES", "I64", "ID", 
		"IDENT", "IDENTIFICATION", "IDENTIFICATION_IN_A_AREA", "IF", "IN", "INDEX", 
		"INDEXED", "INDICATE", "INITIAL", "INITIALIZE", "INITIATE", "INPUT", "INPUT_OUTPUT", 
		"INSPECT", "INSTALLATION", "INVALID", "IS", "I_O", "I_O_CONTROL", "JUST", 
		"JUSTIFIED", "KEY", "LABEL", "LAST", "LEADING", "LEFT", "LESS", "LIMIT", 
		"LIMITS", "LINAGE", "LINE", "LINES", "LINE_PRINTER", "LINKAGE", "LOCK", 
		"LOCK_HOLDING", "LOWLIGHT", "LOW_VALUE", "LOW_VALUES", "MANUAL", "MASS_INSERT", 
		"MEMORY", "MERGE", "MODE", "MODULES", "MOVE", "MULTIPLE", "MULTIPLY", 
		"NATIVE", "NEGATIVE", "NEXT", "NO", "NOT", "NUMBER", "NUMERIC", "OBJECT_COMPUTER", 
		"OCCURS", "OF", "OFF", "OMITTED", "ON", "OPEN", "OPTIONAL", "OPTIONS", 
		"OR", "ORGANIZATION", "OUTPUT", "OVERFLOW", "PACKED_DECIMAL", "PADDING", 
		"PAGE", "PAPER_TAPE_PUNCH", "PAPER_TAPE_READER", "PERFORM", "PF", "PH", 
		"PIC", "PICTURE", "PLUS", "POINTER", "POINTER_64", "POSITION", "POSITIVE", 
		"PREALLOCATION", "PRINTER", "PRINT_CONTROL", "PROCEDURE", "PROGRAM", "PROGRAM_ID", 
		"PROTECTED", "QUOTE", "QUOTES", "RANDOM", "RD", "READ", "RECORD", "RECORDS", 
		"REDEFINES", "REEL", "REFERENCE", "RELATIVE", "RELEASE", "RENAMES", "REPLACE", 
		"REPLACING", "REPORT", "REPORTING", "REPORTS", "REQUIRED", "RERUN", "RESERVE", 
		"RESET", "RETURN", "REVERSED", "REVERSE_VIDEO", "REWRITE", "RF", "RH", 
		"RIGHT", "ROLLBACK", "SAME", "SCREEN", "SD", "SEARCH", "SECTION", "SECURE", 
		"SECURITY", "SEGMENT_LIMIT", "SELECT", "SEPARATE", "SEQUENCE", "SEQUENTIAL", 
		"SET", "SIGN", "SIGNED", "SIZE", "SORT", "SORT_MERGE", "SOURCE", "SOURCE_COMPUTER", 
		"SPACE", "SPACES", "SPECIAL_NAMES", "STANDARD", "STANDARD_1", "STANDARD_2", 
		"START", "STATUS", "STOP", "STRING", "SUBTRACT", "SUCCESS", "SUM", "SUPPRESS", 
		"SWITCH", "SYMBOL", "SYMBOLIC", "SYNC", "SYNCHRONIZED", "SYSERR", "SYSIN", 
		"SYSOUT", "TALLYING", "TAPE", "TERMINATE", "THAN", "THROUGH", "THRU", 
		"TIME", "TIMES", "TO", "TOP", "TRAILING", "TRUE", "TYPE", "UNDERLINE", 
		"UNDERLINED", "UNIT", "UNLOCK", "UNSIGNED", "UNSTRING", "UP", "UPON", 
		"USAGE", "USE", "USING", "VALUE", "VALUES", "VARYING", "VAX", "WHEN", 
		"WINDOW", "WITH", "WORDS", "WORKING_STORAGE", "WRITE", "YYYYDDD", "YYYYMMDD", 
		"ZERO", "ZEROES", "ZEROS", "START_SLASH_", "START_STAR_", "EXCLAM_", "UNDER_", 
		"PLUS_", "MINUS_", "STAR_", "SLASH_", "COMMA_", "SEMI_", "COLON_", "EQUAL_", 
		"LT_", "LE_", "GE_", "GT_", "LPAREN_", "RPAREN_", "LBRACK_", "RBRACK_", 
		"POINTER_", "ATP_", "DOT_", "LCURLY_", "RCURLY_", "STRING_LITERAL", "NUMERIC_LITERAL", 
		"HEX_LITERAL", "USER_DEFINED_WORD", "START_FOUR_SPACES", "WHITESPACE", 
		"NEWLINE"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	@Override
	public String getGrammarFileName() { return "cobol.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public ATN getATN() { return _ATN; }

	public cobolParser(TokenStream input) {
		super(input);
		_interp = new ParserATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}
	public static class Cobol_sourceContext extends ParserRuleContext {
		public TerminalNode EOF() { return getToken(cobolParser.EOF, 0); }
		public List<ProgramContext> program() {
			return getRuleContexts(ProgramContext.class);
		}
		public ProgramContext program(int i) {
			return getRuleContext(ProgramContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Cobol_sourceContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_cobol_source; }
	}

	public final Cobol_sourceContext cobol_source() throws RecognitionException {
		Cobol_sourceContext _localctx = new Cobol_sourceContext(_ctx, getState());
		enterRule(_localctx, 0, RULE_cobol_source);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(530);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==IDENTIFICATION_IN_A_AREA || ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				setState(528);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case IDENTIFICATION_IN_A_AREA:
					{
					setState(526);
					program();
					}
					break;
				case START_SLASH_:
				case START_STAR_:
				case COMMA_:
				case SEMI_:
				case START_FOUR_SPACES:
				case WHITESPACE:
				case NEWLINE:
					{
					setState(527);
					separator();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				setState(532);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(533);
			match(EOF);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Figurative_constantContext extends ParserRuleContext {
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode SPACE() { return getToken(cobolParser.SPACE, 0); }
		public TerminalNode SPACES() { return getToken(cobolParser.SPACES, 0); }
		public TerminalNode HIGH_VALUE() { return getToken(cobolParser.HIGH_VALUE, 0); }
		public TerminalNode HIGH_VALUES() { return getToken(cobolParser.HIGH_VALUES, 0); }
		public TerminalNode LOW_VALUE() { return getToken(cobolParser.LOW_VALUE, 0); }
		public TerminalNode LOW_VALUES() { return getToken(cobolParser.LOW_VALUES, 0); }
		public TerminalNode QUOTE() { return getToken(cobolParser.QUOTE, 0); }
		public TerminalNode QUOTES() { return getToken(cobolParser.QUOTES, 0); }
		public TerminalNode ALL() { return getToken(cobolParser.ALL, 0); }
		public TerminalNode WHITESPACE() { return getToken(cobolParser.WHITESPACE, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Figurative_constantContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_figurative_constant; }
	}

	public final Figurative_constantContext figurative_constant() throws RecognitionException {
		Figurative_constantContext _localctx = new Figurative_constantContext(_ctx, getState());
		enterRule(_localctx, 2, RULE_figurative_constant);
		try {
			setState(547);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ZERO:
				enterOuterAlt(_localctx, 1);
				{
				setState(535);
				match(ZERO);
				}
				break;
			case SPACE:
				enterOuterAlt(_localctx, 2);
				{
				setState(536);
				match(SPACE);
				}
				break;
			case SPACES:
				enterOuterAlt(_localctx, 3);
				{
				setState(537);
				match(SPACES);
				}
				break;
			case HIGH_VALUE:
				enterOuterAlt(_localctx, 4);
				{
				setState(538);
				match(HIGH_VALUE);
				}
				break;
			case HIGH_VALUES:
				enterOuterAlt(_localctx, 5);
				{
				setState(539);
				match(HIGH_VALUES);
				}
				break;
			case LOW_VALUE:
				enterOuterAlt(_localctx, 6);
				{
				setState(540);
				match(LOW_VALUE);
				}
				break;
			case LOW_VALUES:
				enterOuterAlt(_localctx, 7);
				{
				setState(541);
				match(LOW_VALUES);
				}
				break;
			case QUOTE:
				enterOuterAlt(_localctx, 8);
				{
				setState(542);
				match(QUOTE);
				}
				break;
			case QUOTES:
				enterOuterAlt(_localctx, 9);
				{
				setState(543);
				match(QUOTES);
				}
				break;
			case ALL:
				enterOuterAlt(_localctx, 10);
				{
				setState(544);
				match(ALL);
				setState(545);
				match(WHITESPACE);
				setState(546);
				match(STRING_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SeparatorContext extends ParserRuleContext {
		public TerminalNode WHITESPACE() { return getToken(cobolParser.WHITESPACE, 0); }
		public TerminalNode NEWLINE() { return getToken(cobolParser.NEWLINE, 0); }
		public TerminalNode START_FOUR_SPACES() { return getToken(cobolParser.START_FOUR_SPACES, 0); }
		public TerminalNode COMMA_() { return getToken(cobolParser.COMMA_, 0); }
		public TerminalNode SEMI_() { return getToken(cobolParser.SEMI_, 0); }
		public Line_commentContext line_comment() {
			return getRuleContext(Line_commentContext.class,0);
		}
		public SeparatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_separator; }
	}

	public final SeparatorContext separator() throws RecognitionException {
		SeparatorContext _localctx = new SeparatorContext(_ctx, getState());
		enterRule(_localctx, 4, RULE_separator);
		try {
			setState(555);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case WHITESPACE:
				enterOuterAlt(_localctx, 1);
				{
				setState(549);
				match(WHITESPACE);
				}
				break;
			case NEWLINE:
				enterOuterAlt(_localctx, 2);
				{
				setState(550);
				match(NEWLINE);
				}
				break;
			case START_FOUR_SPACES:
				enterOuterAlt(_localctx, 3);
				{
				setState(551);
				match(START_FOUR_SPACES);
				}
				break;
			case COMMA_:
				enterOuterAlt(_localctx, 4);
				{
				setState(552);
				match(COMMA_);
				}
				break;
			case SEMI_:
				enterOuterAlt(_localctx, 5);
				{
				setState(553);
				match(SEMI_);
				}
				break;
			case START_SLASH_:
			case START_STAR_:
				enterOuterAlt(_localctx, 6);
				{
				setState(554);
				line_comment();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arithmetic_separatorContext extends ParserRuleContext {
		public TerminalNode WHITESPACE() { return getToken(cobolParser.WHITESPACE, 0); }
		public TerminalNode NEWLINE() { return getToken(cobolParser.NEWLINE, 0); }
		public TerminalNode START_FOUR_SPACES() { return getToken(cobolParser.START_FOUR_SPACES, 0); }
		public Line_commentContext line_comment() {
			return getRuleContext(Line_commentContext.class,0);
		}
		public Arithmetic_separatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arithmetic_separator; }
	}

	public final Arithmetic_separatorContext arithmetic_separator() throws RecognitionException {
		Arithmetic_separatorContext _localctx = new Arithmetic_separatorContext(_ctx, getState());
		enterRule(_localctx, 6, RULE_arithmetic_separator);
		try {
			setState(561);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case WHITESPACE:
				enterOuterAlt(_localctx, 1);
				{
				setState(557);
				match(WHITESPACE);
				}
				break;
			case NEWLINE:
				enterOuterAlt(_localctx, 2);
				{
				setState(558);
				match(NEWLINE);
				}
				break;
			case START_FOUR_SPACES:
				enterOuterAlt(_localctx, 3);
				{
				setState(559);
				match(START_FOUR_SPACES);
				}
				break;
			case START_SLASH_:
			case START_STAR_:
				enterOuterAlt(_localctx, 4);
				{
				setState(560);
				line_comment();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Line_commentContext extends ParserRuleContext {
		public TerminalNode START_SLASH_() { return getToken(cobolParser.START_SLASH_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public TerminalNode START_STAR_() { return getToken(cobolParser.START_STAR_, 0); }
		public Line_commentContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_line_comment; }
	}

	public final Line_commentContext line_comment() throws RecognitionException {
		Line_commentContext _localctx = new Line_commentContext(_ctx, getState());
		enterRule(_localctx, 8, RULE_line_comment);
		int _la;
		try {
			setState(579);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case START_SLASH_:
				enterOuterAlt(_localctx, 1);
				{
				setState(563);
				match(START_SLASH_);
				setState(567);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA) | (1L << COMMON) | (1L << COMP) | (1L << COMPUTATIONAL))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DECLARATIVES_IN_A_AREA - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)) | (1L << (END_DIVIDE - 64)) | (1L << (END_EVALUATE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_IF - 128)) | (1L << (END_IN_A_AREA - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)) | (1L << (IDENTIFICATION_IN_A_AREA - 128)) | (1L << (IF - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)) | (1L << (OVERFLOW - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)) | (1L << (SEQUENTIAL - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)) | (1L << (WRITE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
					{
					{
					setState(564);
					_la = _input.LA(1);
					if ( _la <= 0 || (_la==NEWLINE) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					}
					setState(569);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(570);
				match(NEWLINE);
				}
				break;
			case START_STAR_:
				enterOuterAlt(_localctx, 2);
				{
				setState(571);
				match(START_STAR_);
				setState(575);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA) | (1L << COMMON) | (1L << COMP) | (1L << COMPUTATIONAL))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DECLARATIVES_IN_A_AREA - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)) | (1L << (END_DIVIDE - 64)) | (1L << (END_EVALUATE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_IF - 128)) | (1L << (END_IN_A_AREA - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)) | (1L << (IDENTIFICATION_IN_A_AREA - 128)) | (1L << (IF - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)) | (1L << (OVERFLOW - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)) | (1L << (SEQUENTIAL - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)) | (1L << (WRITE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
					{
					{
					setState(572);
					_la = _input.LA(1);
					if ( _la <= 0 || (_la==NEWLINE) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					}
					setState(577);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(578);
				match(NEWLINE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ProgramContext extends ParserRuleContext {
		public Identification_divisionContext identification_division() {
			return getRuleContext(Identification_divisionContext.class,0);
		}
		public Environment_divisionContext environment_division() {
			return getRuleContext(Environment_divisionContext.class,0);
		}
		public Data_divisionContext data_division() {
			return getRuleContext(Data_divisionContext.class,0);
		}
		public Procedure_divisionContext procedure_division() {
			return getRuleContext(Procedure_divisionContext.class,0);
		}
		public ProgramContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program; }
	}

	public final ProgramContext program() throws RecognitionException {
		ProgramContext _localctx = new ProgramContext(_ctx, getState());
		enterRule(_localctx, 10, RULE_program);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(581);
			identification_division();
			setState(583);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ENVIRONMENT) {
				{
				setState(582);
				environment_division();
				}
			}

			setState(586);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==DATA) {
				{
				setState(585);
				data_division();
				}
			}

			setState(589);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==PROCEDURE) {
				{
				setState(588);
				procedure_division();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Procedure_divisionContext extends ParserRuleContext {
		public Procedure_division_headerContext procedure_division_header() {
			return getRuleContext(Procedure_division_headerContext.class,0);
		}
		public DeclarativesContext declaratives() {
			return getRuleContext(DeclarativesContext.class,0);
		}
		public TerminalNode END_IN_A_AREA() { return getToken(cobolParser.END_IN_A_AREA, 0); }
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public Program_nameContext program_name() {
			return getRuleContext(Program_nameContext.class,0);
		}
		public List<Procedure_test_lineContext> procedure_test_line() {
			return getRuleContexts(Procedure_test_lineContext.class);
		}
		public Procedure_test_lineContext procedure_test_line(int i) {
			return getRuleContext(Procedure_test_lineContext.class,i);
		}
		public List<SectionContext> section() {
			return getRuleContexts(SectionContext.class);
		}
		public SectionContext section(int i) {
			return getRuleContext(SectionContext.class,i);
		}
		public List<ParagraphContext> paragraph() {
			return getRuleContexts(ParagraphContext.class);
		}
		public ParagraphContext paragraph(int i) {
			return getRuleContext(ParagraphContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Procedure_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_procedure_division; }
	}

	public final Procedure_divisionContext procedure_division() throws RecognitionException {
		Procedure_divisionContext _localctx = new Procedure_divisionContext(_ctx, getState());
		enterRule(_localctx, 12, RULE_procedure_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(591);
			procedure_division_header();
			setState(593);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==DECLARATIVES_IN_A_AREA) {
				{
				setState(592);
				declaratives();
				}
			}

			setState(619);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,16,_ctx) ) {
			case 1:
				{
				setState(604);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,13,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(595);
						section();
						setState(599);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,12,_ctx);
						while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
							if ( _alt==1 ) {
								{
								{
								setState(596);
								separator();
								}
								} 
							}
							setState(601);
							_errHandler.sync(this);
							_alt = getInterpreter().adaptivePredict(_input,12,_ctx);
						}
						}
						} 
					}
					setState(606);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,13,_ctx);
				}
				}
				break;
			case 2:
				{
				setState(616);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,15,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(607);
						paragraph();
						setState(611);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,14,_ctx);
						while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
							if ( _alt==1 ) {
								{
								{
								setState(608);
								separator();
								}
								} 
							}
							setState(613);
							_errHandler.sync(this);
							_alt = getInterpreter().adaptivePredict(_input,14,_ctx);
						}
						}
						} 
					}
					setState(618);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,15,_ctx);
				}
				}
				break;
			}
			setState(635);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==END_IN_A_AREA) {
				{
				setState(621);
				match(END_IN_A_AREA);
				setState(623); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(622);
					separator();
					}
					}
					setState(625); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(627);
				match(PROGRAM);
				setState(629); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(628);
					separator();
					}
					}
					setState(631); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(633);
				program_name();
				}
			}

			setState(640);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,20,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(637);
					procedure_test_line();
					}
					} 
				}
				setState(642);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,20,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Procedure_division_headerContext extends ParserRuleContext {
		public TerminalNode PROCEDURE() { return getToken(cobolParser.PROCEDURE, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public UsingContext using() {
			return getRuleContext(UsingContext.class,0);
		}
		public GivingContext giving() {
			return getRuleContext(GivingContext.class,0);
		}
		public Procedure_division_headerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_procedure_division_header; }
	}

	public final Procedure_division_headerContext procedure_division_header() throws RecognitionException {
		Procedure_division_headerContext _localctx = new Procedure_division_headerContext(_ctx, getState());
		enterRule(_localctx, 14, RULE_procedure_division_header);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(643);
			match(PROCEDURE);
			setState(645); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(644);
				separator();
				}
				}
				setState(647); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(649);
			match(DIVISION);
			setState(657);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,23,_ctx) ) {
			case 1:
				{
				setState(651); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(650);
					separator();
					}
					}
					setState(653); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(655);
				using();
				}
				break;
			}
			setState(666);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,25,_ctx) ) {
			case 1:
				{
				setState(660); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(659);
					separator();
					}
					}
					setState(662); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(664);
				giving();
				}
				break;
			}
			setState(671);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(668);
				separator();
				}
				}
				setState(673);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(674);
			match(DOT_);
			setState(678);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,27,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(675);
					separator();
					}
					} 
				}
				setState(680);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,27,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SectionContext extends ParserRuleContext {
		public Section_headerContext section_header() {
			return getRuleContext(Section_headerContext.class,0);
		}
		public SectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_section; }
	}

	public final SectionContext section() throws RecognitionException {
		SectionContext _localctx = new SectionContext(_ctx, getState());
		enterRule(_localctx, 16, RULE_section);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(681);
			section_header();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class DeclarativesContext extends ParserRuleContext {
		public TerminalNode DECLARATIVES_IN_A_AREA() { return getToken(cobolParser.DECLARATIVES_IN_A_AREA, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public TerminalNode END_IN_A_AREA() { return getToken(cobolParser.END_IN_A_AREA, 0); }
		public TerminalNode DECLARATIVES() { return getToken(cobolParser.DECLARATIVES, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Declaratives_sectionContext> declaratives_section() {
			return getRuleContexts(Declaratives_sectionContext.class);
		}
		public Declaratives_sectionContext declaratives_section(int i) {
			return getRuleContext(Declaratives_sectionContext.class,i);
		}
		public DeclarativesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_declaratives; }
	}

	public final DeclarativesContext declaratives() throws RecognitionException {
		DeclarativesContext _localctx = new DeclarativesContext(_ctx, getState());
		enterRule(_localctx, 18, RULE_declaratives);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(683);
			match(DECLARATIVES_IN_A_AREA);
			setState(687);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(684);
				separator();
				}
				}
				setState(689);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(690);
			match(DOT_);
			setState(694);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(691);
				separator();
				}
				}
				setState(696);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(704); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(697);
				declaratives_section();
				setState(701);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(698);
					separator();
					}
					}
					setState(703);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(706); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			setState(708);
			match(END_IN_A_AREA);
			setState(710); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(709);
				separator();
				}
				}
				setState(712); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(714);
			match(DECLARATIVES);
			setState(718);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(715);
				separator();
				}
				}
				setState(720);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(721);
			match(DOT_);
			setState(725);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,34,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(722);
					separator();
					}
					} 
				}
				setState(727);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,34,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Declaratives_sectionContext extends ParserRuleContext {
		public Section_headerContext section_header() {
			return getRuleContext(Section_headerContext.class,0);
		}
		public Use_statementContext use_statement() {
			return getRuleContext(Use_statementContext.class,0);
		}
		public List<Declarative_paragraphContext> declarative_paragraph() {
			return getRuleContexts(Declarative_paragraphContext.class);
		}
		public Declarative_paragraphContext declarative_paragraph(int i) {
			return getRuleContext(Declarative_paragraphContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Declaratives_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_declaratives_section; }
	}

	public final Declaratives_sectionContext declaratives_section() throws RecognitionException {
		Declaratives_sectionContext _localctx = new Declaratives_sectionContext(_ctx, getState());
		enterRule(_localctx, 20, RULE_declaratives_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(728);
			section_header();
			setState(729);
			use_statement();
			setState(739);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,36,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(731); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(730);
						separator();
						}
						}
						setState(733); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(735);
					declarative_paragraph();
					}
					} 
				}
				setState(741);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,36,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Declarative_paragraphContext extends ParserRuleContext {
		public ParagraphContext paragraph() {
			return getRuleContext(ParagraphContext.class,0);
		}
		public Declarative_paragraphContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_declarative_paragraph; }
	}

	public final Declarative_paragraphContext declarative_paragraph() throws RecognitionException {
		Declarative_paragraphContext _localctx = new Declarative_paragraphContext(_ctx, getState());
		enterRule(_localctx, 22, RULE_declarative_paragraph);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(742);
			paragraph();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ParagraphContext extends ParserRuleContext {
		public Paragraph_nameContext paragraph_name() {
			return getRuleContext(Paragraph_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<SentenseContext> sentense() {
			return getRuleContexts(SentenseContext.class);
		}
		public SentenseContext sentense(int i) {
			return getRuleContext(SentenseContext.class,i);
		}
		public ParagraphContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_paragraph; }
	}

	public final ParagraphContext paragraph() throws RecognitionException {
		ParagraphContext _localctx = new ParagraphContext(_ctx, getState());
		enterRule(_localctx, 24, RULE_paragraph);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(744);
			paragraph_name();
			setState(748);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(745);
				separator();
				}
				}
				setState(750);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(751);
			match(DOT_);
			setState(755);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,38,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(752);
					separator();
					}
					} 
				}
				setState(757);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,38,_ctx);
			}
			setState(767);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==ACCEPT) {
				{
				{
				setState(758);
				sentense();
				setState(762);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,39,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(759);
						separator();
						}
						} 
					}
					setState(764);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,39,_ctx);
				}
				}
				}
				setState(769);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SentenseContext extends ParserRuleContext {
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<StatementContext> statement() {
			return getRuleContexts(StatementContext.class);
		}
		public StatementContext statement(int i) {
			return getRuleContext(StatementContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public SentenseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sentense; }
	}

	public final SentenseContext sentense() throws RecognitionException {
		SentenseContext _localctx = new SentenseContext(_ctx, getState());
		enterRule(_localctx, 26, RULE_sentense);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(777); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(770);
				statement();
				setState(774);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,41,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(771);
						separator();
						}
						} 
					}
					setState(776);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,41,_ctx);
				}
				}
				}
				setState(779); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==ACCEPT );
			setState(784);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(781);
				separator();
				}
				}
				setState(786);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(787);
			match(DOT_);
			setState(791);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,44,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(788);
					separator();
					}
					} 
				}
				setState(793);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,44,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Use_statementContext extends ParserRuleContext {
		public TerminalNode USE() { return getToken(cobolParser.USE, 0); }
		public TerminalNode AFTER() { return getToken(cobolParser.AFTER, 0); }
		public TerminalNode PROCEDURE() { return getToken(cobolParser.PROCEDURE, 0); }
		public Use_onContext use_on() {
			return getRuleContext(Use_onContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode BEFORE() { return getToken(cobolParser.BEFORE, 0); }
		public TerminalNode REPORTING() { return getToken(cobolParser.REPORTING, 0); }
		public Group_data_nameContext group_data_name() {
			return getRuleContext(Group_data_nameContext.class,0);
		}
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode EXCEPTION() { return getToken(cobolParser.EXCEPTION, 0); }
		public TerminalNode ERROR() { return getToken(cobolParser.ERROR, 0); }
		public TerminalNode STANDARD() { return getToken(cobolParser.STANDARD, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Use_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_use_statement; }
	}

	public final Use_statementContext use_statement() throws RecognitionException {
		Use_statementContext _localctx = new Use_statementContext(_ctx, getState());
		enterRule(_localctx, 28, RULE_use_statement);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(794);
			match(USE);
			setState(802);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,46,_ctx) ) {
			case 1:
				{
				setState(796); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(795);
					separator();
					}
					}
					setState(798); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(800);
				match(GLOBAL);
				}
				break;
			}
			setState(805); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(804);
				separator();
				}
				}
				setState(807); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(873);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case AFTER:
				{
				setState(809);
				match(AFTER);
				setState(817);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,49,_ctx) ) {
				case 1:
					{
					setState(811); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(810);
						separator();
						}
						}
						setState(813); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(815);
					match(STANDARD);
					}
					break;
				}
				setState(820); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(819);
					separator();
					}
					}
					setState(822); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(824);
				_la = _input.LA(1);
				if ( !(_la==ERROR || _la==EXCEPTION) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(826); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(825);
					separator();
					}
					}
					setState(828); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(830);
				match(PROCEDURE);
				setState(838);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,53,_ctx) ) {
				case 1:
					{
					setState(832); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(831);
						separator();
						}
						}
						setState(834); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(836);
					match(ON);
					}
					break;
				}
				setState(841); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(840);
					separator();
					}
					}
					setState(843); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(845);
				use_on();
				setState(849);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(846);
					separator();
					}
					}
					setState(851);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(852);
				match(DOT_);
				setState(856);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,56,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(853);
						separator();
						}
						} 
					}
					setState(858);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,56,_ctx);
				}
				}
				break;
			case BEFORE:
				{
				setState(859);
				match(BEFORE);
				setState(861); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(860);
					separator();
					}
					}
					setState(863); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(865);
				match(REPORTING);
				setState(867); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(866);
					separator();
					}
					}
					setState(869); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(871);
				group_data_name();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Group_data_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Group_data_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_group_data_name; }
	}

	public final Group_data_nameContext group_data_name() throws RecognitionException {
		Group_data_nameContext _localctx = new Group_data_nameContext(_ctx, getState());
		enterRule(_localctx, 30, RULE_group_data_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(875);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Use_onContext extends ParserRuleContext {
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode INPUT() { return getToken(cobolParser.INPUT, 0); }
		public TerminalNode OUTPUT() { return getToken(cobolParser.OUTPUT, 0); }
		public TerminalNode I_O() { return getToken(cobolParser.I_O, 0); }
		public TerminalNode EXTEND() { return getToken(cobolParser.EXTEND, 0); }
		public Use_onContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_use_on; }
	}

	public final Use_onContext use_on() throws RecognitionException {
		Use_onContext _localctx = new Use_onContext(_ctx, getState());
		enterRule(_localctx, 32, RULE_use_on);
		int _la;
		try {
			int _alt;
			setState(894);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(877);
				file_name();
				setState(887);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,61,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(879); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(878);
							separator();
							}
							}
							setState(881); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(883);
						file_name();
						}
						} 
					}
					setState(889);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,61,_ctx);
				}
				}
				break;
			case INPUT:
				enterOuterAlt(_localctx, 2);
				{
				setState(890);
				match(INPUT);
				}
				break;
			case OUTPUT:
				enterOuterAlt(_localctx, 3);
				{
				setState(891);
				match(OUTPUT);
				}
				break;
			case I_O:
				enterOuterAlt(_localctx, 4);
				{
				setState(892);
				match(I_O);
				}
				break;
			case EXTEND:
				enterOuterAlt(_localctx, 5);
				{
				setState(893);
				match(EXTEND);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Section_headerContext extends ParserRuleContext {
		public Section_nameContext section_name() {
			return getRuleContext(Section_nameContext.class,0);
		}
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Segment_numberContext segment_number() {
			return getRuleContext(Segment_numberContext.class,0);
		}
		public Section_headerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_section_header; }
	}

	public final Section_headerContext section_header() throws RecognitionException {
		Section_headerContext _localctx = new Section_headerContext(_ctx, getState());
		enterRule(_localctx, 34, RULE_section_header);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(896);
			section_name();
			setState(898); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(897);
				separator();
				}
				}
				setState(900); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(902);
			match(SECTION);
			setState(910);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,65,_ctx) ) {
			case 1:
				{
				setState(904); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(903);
					separator();
					}
					}
					setState(906); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(908);
				segment_number();
				}
				break;
			}
			setState(915);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(912);
				separator();
				}
				}
				setState(917);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(918);
			match(DOT_);
			setState(922);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,67,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(919);
					separator();
					}
					} 
				}
				setState(924);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,67,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Paragraph_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Paragraph_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_paragraph_name; }
	}

	public final Paragraph_nameContext paragraph_name() throws RecognitionException {
		Paragraph_nameContext _localctx = new Paragraph_nameContext(_ctx, getState());
		enterRule(_localctx, 36, RULE_paragraph_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(925);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Section_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Section_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_section_name; }
	}

	public final Section_nameContext section_name() throws RecognitionException {
		Section_nameContext _localctx = new Section_nameContext(_ctx, getState());
		enterRule(_localctx, 38, RULE_section_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(927);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class UsingContext extends ParserRuleContext {
		public TerminalNode USING() { return getToken(cobolParser.USING, 0); }
		public List<Qualified_data_itemContext> qualified_data_item() {
			return getRuleContexts(Qualified_data_itemContext.class);
		}
		public Qualified_data_itemContext qualified_data_item(int i) {
			return getRuleContext(Qualified_data_itemContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public UsingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_using; }
	}

	public final UsingContext using() throws RecognitionException {
		UsingContext _localctx = new UsingContext(_ctx, getState());
		enterRule(_localctx, 40, RULE_using);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(929);
			match(USING);
			setState(931); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(930);
				separator();
				}
				}
				setState(933); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(935);
			qualified_data_item();
			setState(945);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,70,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(937); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(936);
						separator();
						}
						}
						setState(939); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(941);
					qualified_data_item();
					}
					} 
				}
				setState(947);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,70,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class GivingContext extends ParserRuleContext {
		public TerminalNode GIVING() { return getToken(cobolParser.GIVING, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public GivingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_giving; }
	}

	public final GivingContext giving() throws RecognitionException {
		GivingContext _localctx = new GivingContext(_ctx, getState());
		enterRule(_localctx, 42, RULE_giving);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(948);
			match(GIVING);
			setState(950); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(949);
				separator();
				}
				}
				setState(952); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(954);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Procedure_test_lineContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Logic_expressionContext logic_expression() {
			return getRuleContext(Logic_expressionContext.class,0);
		}
		public Procedure_test_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_procedure_test_line; }
	}

	public final Procedure_test_lineContext procedure_test_line() throws RecognitionException {
		Procedure_test_lineContext _localctx = new Procedure_test_lineContext(_ctx, getState());
		enterRule(_localctx, 44, RULE_procedure_test_line);
		int _la;
		try {
			setState(975);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,74,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(956);
				arithmetic_expression(0);
				setState(960);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(957);
					separator();
					}
					}
					setState(962);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(963);
				match(DOT_);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(965);
				logic_expression(0);
				setState(969);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(966);
					separator();
					}
					}
					setState(971);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(972);
				match(DOT_);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(974);
				separator();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class StatementContext extends ParserRuleContext {
		public Accept_statementContext accept_statement() {
			return getRuleContext(Accept_statementContext.class,0);
		}
		public StatementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_statement; }
	}

	public final StatementContext statement() throws RecognitionException {
		StatementContext _localctx = new StatementContext(_ctx, getState());
		enterRule(_localctx, 46, RULE_statement);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(977);
			accept_statement();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_statementContext extends ParserRuleContext {
		public Accept_form1Context accept_form1() {
			return getRuleContext(Accept_form1Context.class,0);
		}
		public Accept_form2Context accept_form2() {
			return getRuleContext(Accept_form2Context.class,0);
		}
		public Accept_form3Context accept_form3() {
			return getRuleContext(Accept_form3Context.class,0);
		}
		public Accept_form4Context accept_form4() {
			return getRuleContext(Accept_form4Context.class,0);
		}
		public Accept_form5Context accept_form5() {
			return getRuleContext(Accept_form5Context.class,0);
		}
		public Accept_form6Context accept_form6() {
			return getRuleContext(Accept_form6Context.class,0);
		}
		public Accept_statementContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_statement; }
	}

	public final Accept_statementContext accept_statement() throws RecognitionException {
		Accept_statementContext _localctx = new Accept_statementContext(_ctx, getState());
		enterRule(_localctx, 48, RULE_accept_statement);
		try {
			setState(985);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,75,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(979);
				accept_form1();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(980);
				accept_form2();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(981);
				accept_form3();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(982);
				accept_form4();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(983);
				accept_form5();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(984);
				accept_form6();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_exception_variantsContext extends ParserRuleContext {
		public List<On_exceptionContext> on_exception() {
			return getRuleContexts(On_exceptionContext.class);
		}
		public On_exceptionContext on_exception(int i) {
			return getRuleContext(On_exceptionContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_exception_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_exception_variants; }
	}

	public final On_exception_variantsContext on_exception_variants() throws RecognitionException {
		On_exception_variantsContext _localctx = new On_exception_variantsContext(_ctx, getState());
		enterRule(_localctx, 50, RULE_on_exception_variants);
		int _la;
		try {
			setState(1019);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case EXCEPTION:
			case ON:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(987);
				on_exception();
				setState(1001);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,78,_ctx) ) {
				case 1:
					{
					setState(989); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(988);
						separator();
						}
						}
						setState(991); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(993);
					match(NOT);
					setState(995); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(994);
						separator();
						}
						}
						setState(997); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(999);
					on_exception();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(1003);
				match(NOT);
				setState(1005); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1004);
					separator();
					}
					}
					setState(1007); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1009);
				on_exception();
				setState(1017);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,81,_ctx) ) {
				case 1:
					{
					setState(1011); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1010);
						separator();
						}
						}
						setState(1013); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1015);
					on_exception();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_end_variantsContext extends ParserRuleContext {
		public List<At_endContext> at_end() {
			return getRuleContexts(At_endContext.class);
		}
		public At_endContext at_end(int i) {
			return getRuleContext(At_endContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_end_variantsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_end_variants; }
	}

	public final At_end_variantsContext at_end_variants() throws RecognitionException {
		At_end_variantsContext _localctx = new At_end_variantsContext(_ctx, getState());
		enterRule(_localctx, 52, RULE_at_end_variants);
		int _la;
		try {
			setState(1053);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case AT:
			case END:
				enterOuterAlt(_localctx, 1);
				{
				{
				setState(1021);
				at_end();
				setState(1035);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,85,_ctx) ) {
				case 1:
					{
					setState(1023); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1022);
						separator();
						}
						}
						setState(1025); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1027);
					match(NOT);
					setState(1029); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1028);
						separator();
						}
						}
						setState(1031); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1033);
					at_end();
					}
					break;
				}
				}
				}
				break;
			case NOT:
				enterOuterAlt(_localctx, 2);
				{
				{
				setState(1037);
				match(NOT);
				setState(1039); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1038);
					separator();
					}
					}
					setState(1041); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1043);
				at_end();
				setState(1051);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,88,_ctx) ) {
				case 1:
					{
					setState(1045); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1044);
						separator();
						}
						}
						setState(1047); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1049);
					at_end();
					}
					break;
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form6Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public Accept6_itemContext accept6_item() {
			return getRuleContext(Accept6_itemContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public Accept_form6Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form6; }
	}

	public final Accept_form6Context accept_form6() throws RecognitionException {
		Accept_form6Context _localctx = new Accept_form6Context(_ctx, getState());
		enterRule(_localctx, 54, RULE_accept_form6);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1055);
			match(ACCEPT);
			setState(1057); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1056);
				separator();
				}
				}
				setState(1059); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1061);
			dest_item();
			setState(1063); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1062);
				separator();
				}
				}
				setState(1065); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			{
			setState(1067);
			match(FROM);
			setState(1069); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1068);
				separator();
				}
				}
				setState(1071); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			}
			setState(1073);
			accept6_item();
			setState(1081);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,94,_ctx) ) {
			case 1:
				{
				setState(1075); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1074);
					separator();
					}
					}
					setState(1077); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1079);
				on_exception_variants();
				}
				break;
			}
			setState(1090);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,96,_ctx) ) {
			case 1:
				{
				setState(1084); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1083);
					separator();
					}
					}
					setState(1086); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1088);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept6_itemContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Accept6_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept6_item; }
	}

	public final Accept6_itemContext accept6_item() throws RecognitionException {
		Accept6_itemContext _localctx = new Accept6_itemContext(_ctx, getState());
		enterRule(_localctx, 56, RULE_accept6_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1092);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form1Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Input_sourceContext input_source() {
			return getRuleContext(Input_sourceContext.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public Accept_form1Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form1; }
	}

	public final Accept_form1Context accept_form1() throws RecognitionException {
		Accept_form1Context _localctx = new Accept_form1Context(_ctx, getState());
		enterRule(_localctx, 58, RULE_accept_form1);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1094);
			match(ACCEPT);
			setState(1096); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1095);
				separator();
				}
				}
				setState(1098); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1100);
			dest_item();
			setState(1114);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,100,_ctx) ) {
			case 1:
				{
				setState(1102); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1101);
					separator();
					}
					}
					setState(1104); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1106);
				match(FROM);
				setState(1108); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1107);
					separator();
					}
					}
					setState(1110); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1112);
				input_source();
				}
				break;
			}
			setState(1129);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,103,_ctx) ) {
			case 1:
				{
				setState(1117); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1116);
					separator();
					}
					}
					setState(1119); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1121);
				match(WITH);
				setState(1123); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1122);
					separator();
					}
					}
					setState(1125); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1127);
				match(CONVERSION);
				}
				break;
			}
			setState(1138);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,105,_ctx) ) {
			case 1:
				{
				setState(1132); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1131);
					separator();
					}
					}
					setState(1134); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1136);
				at_end_variants();
				}
				break;
			}
			setState(1147);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,107,_ctx) ) {
			case 1:
				{
				setState(1141); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1140);
					separator();
					}
					}
					setState(1143); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1145);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form2Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Date_timeContext date_time() {
			return getRuleContext(Date_timeContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Accept_form2Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form2; }
	}

	public final Accept_form2Context accept_form2() throws RecognitionException {
		Accept_form2Context _localctx = new Accept_form2Context(_ctx, getState());
		enterRule(_localctx, 60, RULE_accept_form2);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1149);
			match(ACCEPT);
			setState(1151); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1150);
				separator();
				}
				}
				setState(1153); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1155);
			dest_item();
			setState(1157); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1156);
				separator();
				}
				}
				setState(1159); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1161);
			match(FROM);
			setState(1163); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1162);
				separator();
				}
				}
				setState(1165); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1167);
			date_time();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form3Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Dest_itemContext dest_item() {
			return getRuleContext(Dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Accept_form3_clauseContext> accept_form3_clause() {
			return getRuleContexts(Accept_form3_clauseContext.class);
		}
		public Accept_form3_clauseContext accept_form3_clause(int i) {
			return getRuleContext(Accept_form3_clauseContext.class,i);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public Accept_form3Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form3; }
	}

	public final Accept_form3Context accept_form3() throws RecognitionException {
		Accept_form3Context _localctx = new Accept_form3Context(_ctx, getState());
		enterRule(_localctx, 62, RULE_accept_form3);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1169);
			match(ACCEPT);
			setState(1171); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1170);
				separator();
				}
				}
				setState(1173); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1175);
			dest_item();
			setState(1183); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1177); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1176);
						separator();
						}
						}
						setState(1179); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1181);
					accept_form3_clause();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1185); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,113,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(1196);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,116,_ctx) ) {
			case 1:
				{
				setState(1188); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1187);
					separator();
					}
					}
					setState(1190); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1194);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,115,_ctx) ) {
				case 1:
					{
					setState(1192);
					on_exception_variants();
					}
					break;
				case 2:
					{
					setState(1193);
					at_end_variants();
					}
					break;
				}
				}
				break;
			}
			setState(1205);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,118,_ctx) ) {
			case 1:
				{
				setState(1199); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1198);
					separator();
					}
					}
					setState(1201); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1203);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form4Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Key_dest_itemContext key_dest_item() {
			return getRuleContext(Key_dest_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public List<Accept_form4_clauseContext> accept_form4_clause() {
			return getRuleContexts(Accept_form4_clauseContext.class);
		}
		public Accept_form4_clauseContext accept_form4_clause(int i) {
			return getRuleContext(Accept_form4_clauseContext.class,i);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public At_end_variantsContext at_end_variants() {
			return getRuleContext(At_end_variantsContext.class,0);
		}
		public Accept_form4Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form4; }
	}

	public final Accept_form4Context accept_form4() throws RecognitionException {
		Accept_form4Context _localctx = new Accept_form4Context(_ctx, getState());
		enterRule(_localctx, 64, RULE_accept_form4);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1207);
			match(ACCEPT);
			setState(1209); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1208);
				separator();
				}
				}
				setState(1211); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1219);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONTROL) {
				{
				setState(1213);
				match(CONTROL);
				setState(1215); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1214);
					separator();
					}
					}
					setState(1217); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(1221);
			match(KEY);
			setState(1223); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1222);
				separator();
				}
				}
				setState(1225); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1233);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IN) {
				{
				setState(1227);
				match(IN);
				setState(1229); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1228);
					separator();
					}
					}
					setState(1231); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(1235);
			key_dest_item();
			setState(1243); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(1237); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1236);
						separator();
						}
						}
						setState(1239); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1241);
					accept_form4_clause();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1245); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,126,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(1256);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,129,_ctx) ) {
			case 1:
				{
				setState(1248); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1247);
					separator();
					}
					}
					setState(1250); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1254);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,128,_ctx) ) {
				case 1:
					{
					setState(1252);
					on_exception_variants();
					}
					break;
				case 2:
					{
					setState(1253);
					at_end_variants();
					}
					break;
				}
				}
				break;
			}
			setState(1265);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,131,_ctx) ) {
			case 1:
				{
				setState(1259); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1258);
					separator();
					}
					}
					setState(1261); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1263);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form5Context extends ParserRuleContext {
		public TerminalNode ACCEPT() { return getToken(cobolParser.ACCEPT, 0); }
		public Screen_nameContext screen_name() {
			return getRuleContext(Screen_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Accept_atContext accept_at() {
			return getRuleContext(Accept_atContext.class,0);
		}
		public On_exception_variantsContext on_exception_variants() {
			return getRuleContext(On_exception_variantsContext.class,0);
		}
		public TerminalNode END_ACCEPT() { return getToken(cobolParser.END_ACCEPT, 0); }
		public Accept_form5Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form5; }
	}

	public final Accept_form5Context accept_form5() throws RecognitionException {
		Accept_form5Context _localctx = new Accept_form5Context(_ctx, getState());
		enterRule(_localctx, 66, RULE_accept_form5);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1267);
			match(ACCEPT);
			setState(1269); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1268);
				separator();
				}
				}
				setState(1271); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1273);
			screen_name();
			setState(1281);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,134,_ctx) ) {
			case 1:
				{
				setState(1275); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1274);
					separator();
					}
					}
					setState(1277); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1279);
				accept_at();
				}
				break;
			}
			setState(1290);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,136,_ctx) ) {
			case 1:
				{
				setState(1284); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1283);
					separator();
					}
					}
					setState(1286); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1288);
				on_exception_variants();
				}
				break;
			}
			setState(1299);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,138,_ctx) ) {
			case 1:
				{
				setState(1293); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1292);
					separator();
					}
					}
					setState(1295); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1297);
				match(END_ACCEPT);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_atContext extends ParserRuleContext {
		public Accept_at_lineContext accept_at_line() {
			return getRuleContext(Accept_at_lineContext.class,0);
		}
		public Accept_at_columnContext accept_at_column() {
			return getRuleContext(Accept_at_columnContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Accept_atContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_at; }
	}

	public final Accept_atContext accept_at() throws RecognitionException {
		Accept_atContext _localctx = new Accept_atContext(_ctx, getState());
		enterRule(_localctx, 68, RULE_accept_at);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1307);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(1301);
				match(AT);
				setState(1303); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1302);
					separator();
					}
					}
					setState(1305); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(1329);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LINE:
				{
				setState(1309);
				accept_at_line();
				setState(1317);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,142,_ctx) ) {
				case 1:
					{
					setState(1311); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1310);
						separator();
						}
						}
						setState(1313); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1315);
					accept_at_column();
					}
					break;
				}
				}
				break;
			case COLUMN:
				{
				setState(1319);
				accept_at_column();
				setState(1327);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,144,_ctx) ) {
				case 1:
					{
					setState(1321); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1320);
						separator();
						}
						}
						setState(1323); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1325);
					accept_at_line();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_at_lineContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public Accept_at_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_at_line; }
	}

	public final Accept_at_lineContext accept_at_line() throws RecognitionException {
		Accept_at_lineContext _localctx = new Accept_at_lineContext(_ctx, getState());
		enterRule(_localctx, 70, RULE_accept_at_line);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1331);
			match(LINE);
			setState(1333); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1332);
				separator();
				}
				}
				setState(1335); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1343);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==NUMBER) {
				{
				setState(1337);
				match(NUMBER);
				setState(1339); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1338);
					separator();
					}
					}
					setState(1341); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(1347);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				{
				setState(1345);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				{
				setState(1346);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_at_columnContext extends ParserRuleContext {
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public Accept_at_columnContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_at_column; }
	}

	public final Accept_at_columnContext accept_at_column() throws RecognitionException {
		Accept_at_columnContext _localctx = new Accept_at_columnContext(_ctx, getState());
		enterRule(_localctx, 72, RULE_accept_at_column);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1349);
			match(COLUMN);
			setState(1351); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1350);
				separator();
				}
				}
				setState(1353); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1361);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==NUMBER) {
				{
				setState(1355);
				match(NUMBER);
				setState(1357); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1356);
					separator();
					}
					}
					setState(1359); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(1365);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				{
				setState(1363);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				{
				setState(1364);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form4_clauseContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public Number_valueContext number_value() {
			return getRuleContext(Number_valueContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode ERASE() { return getToken(cobolParser.ERASE, 0); }
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public TerminalNode BELL() { return getToken(cobolParser.BELL, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public Accept_form4_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form4_clause; }
	}

	public final Accept_form4_clauseContext accept_form4_clause() throws RecognitionException {
		Accept_form4_clauseContext _localctx = new Accept_form4_clauseContext(_ctx, getState());
		enterRule(_localctx, 74, RULE_accept_form4_clause);
		int _la;
		try {
			setState(1459);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,173,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1373);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==FROM) {
					{
					setState(1367);
					match(FROM);
					setState(1369); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1368);
						separator();
						}
						}
						setState(1371); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(1375);
				match(LINE);
				setState(1383);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,157,_ctx) ) {
				case 1:
					{
					setState(1377); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1376);
						separator();
						}
						}
						setState(1379); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1381);
					match(NUMBER);
					}
					break;
				}
				setState(1386); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1385);
					separator();
					}
					}
					setState(1388); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1390);
				number_value();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1398);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==FROM) {
					{
					setState(1392);
					match(FROM);
					setState(1394); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1393);
						separator();
						}
						}
						setState(1396); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(1400);
				match(COLUMN);
				setState(1408);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,162,_ctx) ) {
				case 1:
					{
					setState(1402); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1401);
						separator();
						}
						}
						setState(1404); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1406);
					match(NUMBER);
					}
					break;
				}
				setState(1411); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1410);
					separator();
					}
					}
					setState(1413); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1415);
				number_value();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1417);
				match(ERASE);
				setState(1441);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,169,_ctx) ) {
				case 1:
					{
					setState(1419); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1418);
						separator();
						}
						}
						setState(1421); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1429);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==TO) {
						{
						setState(1423);
						match(TO);
						setState(1425); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1424);
							separator();
							}
							}
							setState(1427); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						}
					}

					setState(1431);
					match(END);
					setState(1439);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,168,_ctx) ) {
					case 1:
						{
						setState(1433); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1432);
							separator();
							}
							}
							setState(1435); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(1437);
						match(OF);
						}
						break;
					}
					}
					break;
				}
				setState(1444); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1443);
					separator();
					}
					}
					setState(1446); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1448);
				_la = _input.LA(1);
				if ( !(_la==LINE || _la==SCREEN) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(1456);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1450);
					match(WITH);
					setState(1452); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1451);
						separator();
						}
						}
						setState(1454); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(1458);
				match(BELL);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Accept_form3_clauseContext extends ParserRuleContext {
		public Accept_form4_clauseContext accept_form4_clause() {
			return getRuleContext(Accept_form4_clauseContext.class,0);
		}
		public TerminalNode UNDERLINED() { return getToken(cobolParser.UNDERLINED, 0); }
		public TerminalNode BOLD() { return getToken(cobolParser.BOLD, 0); }
		public TerminalNode BLINKING() { return getToken(cobolParser.BLINKING, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode PROTECTED() { return getToken(cobolParser.PROTECTED, 0); }
		public Protected_valueContext protected_value() {
			return getRuleContext(Protected_valueContext.class,0);
		}
		public TerminalNode CONVERSION() { return getToken(cobolParser.CONVERSION, 0); }
		public TerminalNode REVERSED() { return getToken(cobolParser.REVERSED, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode ECHO() { return getToken(cobolParser.ECHO, 0); }
		public TerminalNode DEFAULT() { return getToken(cobolParser.DEFAULT, 0); }
		public Def_valueContext def_value() {
			return getRuleContext(Def_valueContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Key_dest_itemContext key_dest_item() {
			return getRuleContext(Key_dest_itemContext.class,0);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public Accept_form3_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_accept_form3_clause; }
	}

	public final Accept_form3_clauseContext accept_form3_clause() throws RecognitionException {
		Accept_form3_clauseContext _localctx = new Accept_form3_clauseContext(_ctx, getState());
		enterRule(_localctx, 76, RULE_accept_form3_clause);
		int _la;
		try {
			setState(1550);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,191,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1461);
				accept_form4_clause();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1462);
				match(UNDERLINED);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1463);
				match(BOLD);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(1470);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1464);
					match(WITH);
					setState(1466); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1465);
						separator();
						}
						}
						setState(1468); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(1472);
				match(BLINKING);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(1473);
				match(PROTECTED);
				setState(1481);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,177,_ctx) ) {
				case 1:
					{
					setState(1475); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1474);
						separator();
						}
						}
						setState(1477); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1479);
					protected_value();
					}
					break;
				}
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(1489);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1483);
					match(WITH);
					setState(1485); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1484);
						separator();
						}
						}
						setState(1487); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(1491);
				match(CONVERSION);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(1492);
				match(REVERSED);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(1499);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1493);
					match(WITH);
					setState(1495); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1494);
						separator();
						}
						}
						setState(1497); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(1501);
				match(NO);
				setState(1503); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1502);
					separator();
					}
					}
					setState(1505); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1507);
				match(ECHO);
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(1509);
				match(DEFAULT);
				setState(1511); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1510);
					separator();
					}
					}
					setState(1513); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1521);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(1515);
					match(IS);
					setState(1517); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1516);
						separator();
						}
						}
						setState(1519); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(1523);
				def_value();
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(1531);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CONTROL) {
					{
					setState(1525);
					match(CONTROL);
					setState(1527); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1526);
						separator();
						}
						}
						setState(1529); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(1533);
				match(KEY);
				setState(1541);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,189,_ctx) ) {
				case 1:
					{
					setState(1535); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1534);
						separator();
						}
						}
						setState(1537); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1539);
					match(IN);
					}
					break;
				}
				setState(1544); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1543);
					separator();
					}
					}
					setState(1546); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1548);
				key_dest_item();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Key_dest_itemContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Key_dest_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_key_dest_item; }
	}

	public final Key_dest_itemContext key_dest_item() throws RecognitionException {
		Key_dest_itemContext _localctx = new Key_dest_itemContext(_ctx, getState());
		enterRule(_localctx, 78, RULE_key_dest_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1552);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Def_valueContext extends ParserRuleContext {
		public Figurative_constantContext figurative_constant() {
			return getRuleContext(Figurative_constantContext.class,0);
		}
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode CURRENT() { return getToken(cobolParser.CURRENT, 0); }
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Def_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_def_value; }
	}

	public final Def_valueContext def_value() throws RecognitionException {
		Def_valueContext _localctx = new Def_valueContext(_ctx, getState());
		enterRule(_localctx, 80, RULE_def_value);
		int _la;
		try {
			setState(1567);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ALL:
			case HIGH_VALUE:
			case HIGH_VALUES:
			case LOW_VALUE:
			case LOW_VALUES:
			case QUOTE:
			case QUOTES:
			case SPACE:
			case SPACES:
			case ZERO:
				enterOuterAlt(_localctx, 1);
				{
				setState(1554);
				figurative_constant();
				}
				break;
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(1555);
				match(STRING_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 3);
				{
				setState(1556);
				qualified_data_item();
				}
				break;
			case CURRENT:
				enterOuterAlt(_localctx, 4);
				{
				setState(1557);
				match(CURRENT);
				setState(1565);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,193,_ctx) ) {
				case 1:
					{
					setState(1559); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1558);
						separator();
						}
						}
						setState(1561); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1563);
					match(VALUE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Protected_valueContext extends ParserRuleContext {
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public Prot_size_valueContext prot_size_value() {
			return getRuleContext(Prot_size_valueContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode AUTOTERMINATE() { return getToken(cobolParser.AUTOTERMINATE, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode NO() { return getToken(cobolParser.NO, 0); }
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode EDITING() { return getToken(cobolParser.EDITING, 0); }
		public TerminalNode FILLER() { return getToken(cobolParser.FILLER, 0); }
		public Prot_fill_litContext prot_fill_lit() {
			return getRuleContext(Prot_fill_litContext.class,0);
		}
		public Protected_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_protected_value; }
	}

	public final Protected_valueContext protected_value() throws RecognitionException {
		Protected_valueContext _localctx = new Protected_valueContext(_ctx, getState());
		enterRule(_localctx, 82, RULE_protected_value);
		int _la;
		try {
			setState(1627);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,206,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(1569);
				match(SIZE);
				setState(1571); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1570);
					separator();
					}
					}
					setState(1573); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1575);
				prot_size_value();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(1583);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1577);
					match(WITH);
					setState(1579); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1578);
						separator();
						}
						}
						setState(1581); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(1585);
				match(AUTOTERMINATE);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(1592);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1586);
					match(WITH);
					setState(1588); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1587);
						separator();
						}
						}
						setState(1590); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(1594);
				match(NO);
				setState(1596); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1595);
					separator();
					}
					}
					setState(1598); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1600);
				match(BLANK);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(1608);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1602);
					match(WITH);
					setState(1604); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1603);
						separator();
						}
						}
						setState(1606); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(1610);
				match(EDITING);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(1617);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(1611);
					match(WITH);
					setState(1613); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1612);
						separator();
						}
						}
						setState(1615); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(1619);
				match(FILLER);
				setState(1621); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1620);
					separator();
					}
					}
					setState(1623); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(1625);
				prot_fill_lit();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Prot_fill_litContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Prot_fill_litContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prot_fill_lit; }
	}

	public final Prot_fill_litContext prot_fill_lit() throws RecognitionException {
		Prot_fill_litContext _localctx = new Prot_fill_litContext(_ctx, getState());
		enterRule(_localctx, 84, RULE_prot_fill_lit);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1629);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Prot_size_valueContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Prot_size_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prot_size_value; }
	}

	public final Prot_size_valueContext prot_size_value() throws RecognitionException {
		Prot_size_valueContext _localctx = new Prot_size_valueContext(_ctx, getState());
		enterRule(_localctx, 86, RULE_prot_size_value);
		try {
			setState(1633);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(1631);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(1632);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Number_valueContext extends ParserRuleContext {
		public Line_numContext line_num() {
			return getRuleContext(Line_numContext.class,0);
		}
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Number_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_number_value; }
	}

	public final Number_valueContext number_value() throws RecognitionException {
		Number_valueContext _localctx = new Number_valueContext(_ctx, getState());
		enterRule(_localctx, 88, RULE_number_value);
		int _la;
		try {
			setState(1664);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(1635);
				line_num();
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(1636);
				qualified_data_item();
				setState(1652);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,211,_ctx) ) {
				case 1:
					{
					setState(1638); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1637);
						separator();
						}
						}
						setState(1640); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1642);
					match(PLUS);
					setState(1650);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,210,_ctx) ) {
					case 1:
						{
						setState(1644); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(1643);
							separator();
							}
							}
							setState(1646); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(1648);
						line_num();
						}
						break;
					}
					}
					break;
				}
				}
				break;
			case PLUS:
				enterOuterAlt(_localctx, 3);
				{
				setState(1654);
				match(PLUS);
				setState(1662);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,213,_ctx) ) {
				case 1:
					{
					setState(1656); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1655);
						separator();
						}
						}
						setState(1658); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1660);
					line_num();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Date_timeContext extends ParserRuleContext {
		public TerminalNode DATE() { return getToken(cobolParser.DATE, 0); }
		public TerminalNode YYYYMMDD() { return getToken(cobolParser.YYYYMMDD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode DAY() { return getToken(cobolParser.DAY, 0); }
		public TerminalNode YYYYDDD() { return getToken(cobolParser.YYYYDDD, 0); }
		public TerminalNode DAY_OF_WEEK() { return getToken(cobolParser.DAY_OF_WEEK, 0); }
		public TerminalNode TIME() { return getToken(cobolParser.TIME, 0); }
		public Date_timeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_date_time; }
	}

	public final Date_timeContext date_time() throws RecognitionException {
		Date_timeContext _localctx = new Date_timeContext(_ctx, getState());
		enterRule(_localctx, 90, RULE_date_time);
		int _la;
		try {
			setState(1688);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DATE:
				enterOuterAlt(_localctx, 1);
				{
				setState(1666);
				match(DATE);
				setState(1674);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,216,_ctx) ) {
				case 1:
					{
					setState(1668); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1667);
						separator();
						}
						}
						setState(1670); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1672);
					match(YYYYMMDD);
					}
					break;
				}
				}
				break;
			case DAY:
				enterOuterAlt(_localctx, 2);
				{
				setState(1676);
				match(DAY);
				setState(1684);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,218,_ctx) ) {
				case 1:
					{
					setState(1678); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(1677);
						separator();
						}
						}
						setState(1680); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(1682);
					match(YYYYDDD);
					}
					break;
				}
				}
				break;
			case DAY_OF_WEEK:
				enterOuterAlt(_localctx, 3);
				{
				setState(1686);
				match(DAY_OF_WEEK);
				}
				break;
			case TIME:
				enterOuterAlt(_localctx, 4);
				{
				setState(1687);
				match(TIME);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Dest_itemContext extends ParserRuleContext {
		public Identifier_lvalueContext identifier_lvalue() {
			return getRuleContext(Identifier_lvalueContext.class,0);
		}
		public Dest_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_dest_item; }
	}

	public final Dest_itemContext dest_item() throws RecognitionException {
		Dest_itemContext _localctx = new Dest_itemContext(_ctx, getState());
		enterRule(_localctx, 92, RULE_dest_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1690);
			identifier_lvalue();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Input_sourceContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Input_sourceContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_input_source; }
	}

	public final Input_sourceContext input_source() throws RecognitionException {
		Input_sourceContext _localctx = new Input_sourceContext(_ctx, getState());
		enterRule(_localctx, 94, RULE_input_source);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1692);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class At_endContext extends ParserRuleContext {
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public StatementContext statement() {
			return getRuleContext(StatementContext.class,0);
		}
		public TerminalNode AT() { return getToken(cobolParser.AT, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public At_endContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_at_end; }
	}

	public final At_endContext at_end() throws RecognitionException {
		At_endContext _localctx = new At_endContext(_ctx, getState());
		enterRule(_localctx, 96, RULE_at_end);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1700);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AT) {
				{
				setState(1694);
				match(AT);
				setState(1696); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1695);
					separator();
					}
					}
					setState(1698); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(1702);
			match(END);
			setState(1704); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1703);
				separator();
				}
				}
				setState(1706); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1708);
			statement();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class On_exceptionContext extends ParserRuleContext {
		public TerminalNode EXCEPTION() { return getToken(cobolParser.EXCEPTION, 0); }
		public StatementContext statement() {
			return getRuleContext(StatementContext.class,0);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public On_exceptionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_on_exception; }
	}

	public final On_exceptionContext on_exception() throws RecognitionException {
		On_exceptionContext _localctx = new On_exceptionContext(_ctx, getState());
		enterRule(_localctx, 98, RULE_on_exception);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1716);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ON) {
				{
				setState(1710);
				match(ON);
				setState(1712); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(1711);
					separator();
					}
					}
					setState(1714); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(1718);
			match(EXCEPTION);
			setState(1720); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1719);
				separator();
				}
				}
				setState(1722); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1724);
			statement();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_divisionContext extends ParserRuleContext {
		public TerminalNode DATA() { return getToken(cobolParser.DATA, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public File_sectionContext file_section() {
			return getRuleContext(File_sectionContext.class,0);
		}
		public Working_storage_sectionContext working_storage_section() {
			return getRuleContext(Working_storage_sectionContext.class,0);
		}
		public Linkage_sectionContext linkage_section() {
			return getRuleContext(Linkage_sectionContext.class,0);
		}
		public Report_sectionContext report_section() {
			return getRuleContext(Report_sectionContext.class,0);
		}
		public Screen_sectionContext screen_section() {
			return getRuleContext(Screen_sectionContext.class,0);
		}
		public Data_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_division; }
	}

	public final Data_divisionContext data_division() throws RecognitionException {
		Data_divisionContext _localctx = new Data_divisionContext(_ctx, getState());
		enterRule(_localctx, 100, RULE_data_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1726);
			match(DATA);
			setState(1728); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1727);
				separator();
				}
				}
				setState(1730); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1732);
			match(DIVISION);
			setState(1736);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(1733);
				separator();
				}
				}
				setState(1738);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1739);
			match(DOT_);
			setState(1743);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,228,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1740);
					separator();
					}
					} 
				}
				setState(1745);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,228,_ctx);
			}
			setState(1753);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE) {
				{
				setState(1746);
				file_section();
				setState(1750);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,229,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1747);
						separator();
						}
						} 
					}
					setState(1752);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,229,_ctx);
				}
				}
			}

			setState(1762);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WORKING_STORAGE) {
				{
				setState(1755);
				working_storage_section();
				setState(1759);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,231,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1756);
						separator();
						}
						} 
					}
					setState(1761);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,231,_ctx);
				}
				}
			}

			setState(1771);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==LINKAGE) {
				{
				setState(1764);
				linkage_section();
				setState(1768);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,233,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1765);
						separator();
						}
						} 
					}
					setState(1770);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,233,_ctx);
				}
				}
			}

			setState(1780);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==REPORT) {
				{
				setState(1773);
				report_section();
				setState(1777);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,235,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1774);
						separator();
						}
						} 
					}
					setState(1779);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,235,_ctx);
				}
				}
			}

			setState(1789);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SCREEN) {
				{
				setState(1782);
				screen_section();
				setState(1786);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,237,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1783);
						separator();
						}
						} 
					}
					setState(1788);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,237,_ctx);
				}
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_sectionContext extends ParserRuleContext {
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<File_description_entryContext> file_description_entry() {
			return getRuleContexts(File_description_entryContext.class);
		}
		public File_description_entryContext file_description_entry(int i) {
			return getRuleContext(File_description_entryContext.class,i);
		}
		public List<Report_description_entryContext> report_description_entry() {
			return getRuleContexts(Report_description_entryContext.class);
		}
		public Report_description_entryContext report_description_entry(int i) {
			return getRuleContext(Report_description_entryContext.class,i);
		}
		public List<Sort_merge_file_description_entryContext> sort_merge_file_description_entry() {
			return getRuleContexts(Sort_merge_file_description_entryContext.class);
		}
		public Sort_merge_file_description_entryContext sort_merge_file_description_entry(int i) {
			return getRuleContext(Sort_merge_file_description_entryContext.class,i);
		}
		public List<Record_description_entryContext> record_description_entry() {
			return getRuleContexts(Record_description_entryContext.class);
		}
		public Record_description_entryContext record_description_entry(int i) {
			return getRuleContext(Record_description_entryContext.class,i);
		}
		public File_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_section; }
	}

	public final File_sectionContext file_section() throws RecognitionException {
		File_sectionContext _localctx = new File_sectionContext(_ctx, getState());
		enterRule(_localctx, 102, RULE_file_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1791);
			match(FILE);
			setState(1793); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1792);
				separator();
				}
				}
				setState(1795); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1797);
			match(SECTION);
			setState(1801);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(1798);
				separator();
				}
				}
				setState(1803);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1804);
			match(DOT_);
			setState(1808);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,241,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1805);
					separator();
					}
					} 
				}
				setState(1810);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,241,_ctx);
			}
			setState(1848);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==FD || _la==RD || _la==SD) {
				{
				{
				setState(1838);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case FD:
					{
					setState(1811);
					file_description_entry();
					setState(1821);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,243,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(1815);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
								{
								{
								setState(1812);
								separator();
								}
								}
								setState(1817);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(1818);
							record_description_entry();
							}
							} 
						}
						setState(1823);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,243,_ctx);
					}
					}
					break;
				case RD:
					{
					setState(1824);
					report_description_entry();
					}
					break;
				case SD:
					{
					setState(1825);
					sort_merge_file_description_entry();
					setState(1835);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,245,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(1829);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
								{
								{
								setState(1826);
								separator();
								}
								}
								setState(1831);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(1832);
							record_description_entry();
							}
							} 
						}
						setState(1837);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,245,_ctx);
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(1843);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,247,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1840);
						separator();
						}
						} 
					}
					setState(1845);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,247,_ctx);
				}
				}
				}
				setState(1850);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Working_storage_sectionContext extends ParserRuleContext {
		public TerminalNode WORKING_STORAGE() { return getToken(cobolParser.WORKING_STORAGE, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Record_description_entryContext> record_description_entry() {
			return getRuleContexts(Record_description_entryContext.class);
		}
		public Record_description_entryContext record_description_entry(int i) {
			return getRuleContext(Record_description_entryContext.class,i);
		}
		public Working_storage_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_working_storage_section; }
	}

	public final Working_storage_sectionContext working_storage_section() throws RecognitionException {
		Working_storage_sectionContext _localctx = new Working_storage_sectionContext(_ctx, getState());
		enterRule(_localctx, 104, RULE_working_storage_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1851);
			match(WORKING_STORAGE);
			setState(1853); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1852);
				separator();
				}
				}
				setState(1855); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1857);
			match(SECTION);
			setState(1861);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(1858);
				separator();
				}
				}
				setState(1863);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1864);
			match(DOT_);
			setState(1868);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,251,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1865);
					separator();
					}
					} 
				}
				setState(1870);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,251,_ctx);
			}
			setState(1880);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==NUMERIC_LITERAL) {
				{
				{
				setState(1871);
				record_description_entry();
				setState(1875);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,252,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1872);
						separator();
						}
						} 
					}
					setState(1877);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,252,_ctx);
				}
				}
				}
				setState(1882);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Linkage_sectionContext extends ParserRuleContext {
		public TerminalNode LINKAGE() { return getToken(cobolParser.LINKAGE, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Record_description_entryContext> record_description_entry() {
			return getRuleContexts(Record_description_entryContext.class);
		}
		public Record_description_entryContext record_description_entry(int i) {
			return getRuleContext(Record_description_entryContext.class,i);
		}
		public Linkage_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_linkage_section; }
	}

	public final Linkage_sectionContext linkage_section() throws RecognitionException {
		Linkage_sectionContext _localctx = new Linkage_sectionContext(_ctx, getState());
		enterRule(_localctx, 106, RULE_linkage_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1883);
			match(LINKAGE);
			setState(1885); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1884);
				separator();
				}
				}
				setState(1887); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1889);
			match(SECTION);
			setState(1893);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(1890);
				separator();
				}
				}
				setState(1895);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1896);
			match(DOT_);
			setState(1900);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,256,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1897);
					separator();
					}
					} 
				}
				setState(1902);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,256,_ctx);
			}
			setState(1912);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==NUMERIC_LITERAL) {
				{
				{
				setState(1903);
				record_description_entry();
				setState(1907);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,257,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1904);
						separator();
						}
						} 
					}
					setState(1909);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,257,_ctx);
				}
				}
				}
				setState(1914);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_sectionContext extends ParserRuleContext {
		public TerminalNode REPORT() { return getToken(cobolParser.REPORT, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Report_description_entryContext> report_description_entry() {
			return getRuleContexts(Report_description_entryContext.class);
		}
		public Report_description_entryContext report_description_entry(int i) {
			return getRuleContext(Report_description_entryContext.class,i);
		}
		public List<Report_group_description_entryContext> report_group_description_entry() {
			return getRuleContexts(Report_group_description_entryContext.class);
		}
		public Report_group_description_entryContext report_group_description_entry(int i) {
			return getRuleContext(Report_group_description_entryContext.class,i);
		}
		public Report_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_section; }
	}

	public final Report_sectionContext report_section() throws RecognitionException {
		Report_sectionContext _localctx = new Report_sectionContext(_ctx, getState());
		enterRule(_localctx, 108, RULE_report_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1915);
			match(REPORT);
			setState(1917); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1916);
				separator();
				}
				}
				setState(1919); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1921);
			match(SECTION);
			setState(1925);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(1922);
				separator();
				}
				}
				setState(1927);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1928);
			match(DOT_);
			setState(1932);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,261,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1929);
					separator();
					}
					} 
				}
				setState(1934);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,261,_ctx);
			}
			setState(1956);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==RD) {
				{
				{
				setState(1935);
				report_description_entry();
				setState(1945);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,263,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1939);
						_errHandler.sync(this);
						_la = _input.LA(1);
						while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
							{
							{
							setState(1936);
							separator();
							}
							}
							setState(1941);
							_errHandler.sync(this);
							_la = _input.LA(1);
						}
						setState(1942);
						report_group_description_entry();
						}
						} 
					}
					setState(1947);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,263,_ctx);
				}
				setState(1951);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,264,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1948);
						separator();
						}
						} 
					}
					setState(1953);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,264,_ctx);
				}
				}
				}
				setState(1958);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_sectionContext extends ParserRuleContext {
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Screen_description_entryContext> screen_description_entry() {
			return getRuleContexts(Screen_description_entryContext.class);
		}
		public Screen_description_entryContext screen_description_entry(int i) {
			return getRuleContext(Screen_description_entryContext.class,i);
		}
		public Screen_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_section; }
	}

	public final Screen_sectionContext screen_section() throws RecognitionException {
		Screen_sectionContext _localctx = new Screen_sectionContext(_ctx, getState());
		enterRule(_localctx, 110, RULE_screen_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(1959);
			match(SCREEN);
			setState(1961); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1960);
				separator();
				}
				}
				setState(1963); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1965);
			match(SECTION);
			setState(1969);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(1966);
				separator();
				}
				}
				setState(1971);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(1972);
			match(DOT_);
			setState(1976);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,268,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(1973);
					separator();
					}
					} 
				}
				setState(1978);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,268,_ctx);
			}
			setState(1988);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==NUMERIC_LITERAL) {
				{
				{
				setState(1979);
				screen_description_entry();
				setState(1983);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,269,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(1980);
						separator();
						}
						} 
					}
					setState(1985);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,269,_ctx);
				}
				}
				}
				setState(1990);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_description_entryContext extends ParserRuleContext {
		public TerminalNode FD() { return getToken(cobolParser.FD, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Fd_clauseContext> fd_clause() {
			return getRuleContexts(Fd_clauseContext.class);
		}
		public Fd_clauseContext fd_clause(int i) {
			return getRuleContext(Fd_clauseContext.class,i);
		}
		public File_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_description_entry; }
	}

	public final File_description_entryContext file_description_entry() throws RecognitionException {
		File_description_entryContext _localctx = new File_description_entryContext(_ctx, getState());
		enterRule(_localctx, 112, RULE_file_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(1991);
			match(FD);
			setState(1993); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(1992);
				separator();
				}
				}
				setState(1995); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(1997);
			file_name();
			setState(2001);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(1998);
				separator();
				}
				}
				setState(2003);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(2013);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCESS) | (1L << ALTERNATE) | (1L << BLOCK) | (1L << CODE_SET))) != 0) || _la==DATA || _la==DYNAMIC || ((((_la - 157)) & ~0x3f) == 0 && ((1L << (_la - 157)) & ((1L << (EXTERNAL - 157)) | (1L << (FILE - 157)) | (1L << (GLOBAL - 157)) | (1L << (IS - 157)) | (1L << (LABEL - 157)) | (1L << (LINAGE - 157)))) != 0) || ((((_la - 280)) & ~0x3f) == 0 && ((1L << (_la - 280)) & ((1L << (RANDOM - 280)) | (1L << (RECORD - 280)) | (1L << (REPORT - 280)) | (1L << (REPORTS - 280)) | (1L << (SEQUENTIAL - 280)) | (1L << (STATUS - 280)))) != 0) || _la==VALUE) {
				{
				{
				setState(2004);
				fd_clause();
				setState(2008);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(2005);
					separator();
					}
					}
					setState(2010);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(2015);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(2016);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sort_merge_file_description_entryContext extends ParserRuleContext {
		public TerminalNode SD() { return getToken(cobolParser.SD, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Sd_clauseContext> sd_clause() {
			return getRuleContexts(Sd_clauseContext.class);
		}
		public Sd_clauseContext sd_clause(int i) {
			return getRuleContext(Sd_clauseContext.class,i);
		}
		public Sort_merge_file_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sort_merge_file_description_entry; }
	}

	public final Sort_merge_file_description_entryContext sort_merge_file_description_entry() throws RecognitionException {
		Sort_merge_file_description_entryContext _localctx = new Sort_merge_file_description_entryContext(_ctx, getState());
		enterRule(_localctx, 114, RULE_sort_merge_file_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2018);
			match(SD);
			setState(2020); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2019);
				separator();
				}
				}
				setState(2022); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(2024);
			file_name();
			setState(2028);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(2025);
				separator();
				}
				}
				setState(2030);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(2040);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==DATA || _la==RECORD) {
				{
				{
				setState(2031);
				sd_clause();
				setState(2035);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(2032);
					separator();
					}
					}
					setState(2037);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(2042);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(2043);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_description_entryContext extends ParserRuleContext {
		public TerminalNode RD() { return getToken(cobolParser.RD, 0); }
		public Report_nameContext report_name() {
			return getRuleContext(Report_nameContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Rd_clauseContext> rd_clause() {
			return getRuleContexts(Rd_clauseContext.class);
		}
		public Rd_clauseContext rd_clause(int i) {
			return getRuleContext(Rd_clauseContext.class,i);
		}
		public Report_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_description_entry; }
	}

	public final Report_description_entryContext report_description_entry() throws RecognitionException {
		Report_description_entryContext _localctx = new Report_description_entryContext(_ctx, getState());
		enterRule(_localctx, 116, RULE_report_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2045);
			match(RD);
			setState(2047); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2046);
				separator();
				}
				}
				setState(2049); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(2051);
			report_name();
			setState(2055);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(2052);
				separator();
				}
				}
				setState(2057);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(2067);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 56)) & ~0x3f) == 0 && ((1L << (_la - 56)) & ((1L << (CODE - 56)) | (1L << (CONTROL - 56)) | (1L << (CONTROLS - 56)))) != 0) || _la==GLOBAL || _la==IS || _la==PAGE) {
				{
				{
				setState(2058);
				rd_clause();
				setState(2062);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(2059);
					separator();
					}
					}
					setState(2064);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(2069);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(2070);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Fd_clauseContext extends ParserRuleContext {
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public Block_containsContext block_contains() {
			return getRuleContext(Block_containsContext.class,0);
		}
		public RecordContext record() {
			return getRuleContext(RecordContext.class,0);
		}
		public LabelContext label() {
			return getRuleContext(LabelContext.class,0);
		}
		public Value_of_idContext value_of_id() {
			return getRuleContext(Value_of_idContext.class,0);
		}
		public Data_recContext data_rec() {
			return getRuleContext(Data_recContext.class,0);
		}
		public LinageContext linage() {
			return getRuleContext(LinageContext.class,0);
		}
		public Report_isContext report_is() {
			return getRuleContext(Report_isContext.class,0);
		}
		public Code_setContext code_set() {
			return getRuleContext(Code_setContext.class,0);
		}
		public Access_modeContext access_mode() {
			return getRuleContext(Access_modeContext.class,0);
		}
		public Record_keyContext record_key() {
			return getRuleContext(Record_keyContext.class,0);
		}
		public File_statusContext file_status() {
			return getRuleContext(File_statusContext.class,0);
		}
		public Fd_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_fd_clause; }
	}

	public final Fd_clauseContext fd_clause() throws RecognitionException {
		Fd_clauseContext _localctx = new Fd_clauseContext(_ctx, getState());
		enterRule(_localctx, 118, RULE_fd_clause);
		int _la;
		try {
			setState(2101);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,287,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2078);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2072);
					match(IS);
					setState(2074); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2073);
						separator();
						}
						}
						setState(2076); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2080);
				match(EXTERNAL);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2087);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2081);
					match(IS);
					setState(2083); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2082);
						separator();
						}
						}
						setState(2085); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2089);
				match(GLOBAL);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(2090);
				block_contains();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(2091);
				record();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(2092);
				label();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(2093);
				value_of_id();
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(2094);
				data_rec();
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(2095);
				linage();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(2096);
				report_is();
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(2097);
				code_set();
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(2098);
				access_mode();
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(2099);
				record_key();
				}
				break;
			case 13:
				enterOuterAlt(_localctx, 13);
				{
				setState(2100);
				file_status();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_description_entryContext extends ParserRuleContext {
		public List<Data_description_entryContext> data_description_entry() {
			return getRuleContexts(Data_description_entryContext.class);
		}
		public Data_description_entryContext data_description_entry(int i) {
			return getRuleContext(Data_description_entryContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Record_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_description_entry; }
	}

	public final Record_description_entryContext record_description_entry() throws RecognitionException {
		Record_description_entryContext _localctx = new Record_description_entryContext(_ctx, getState());
		enterRule(_localctx, 120, RULE_record_description_entry);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2103);
			data_description_entry();
			setState(2113);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,289,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(2107);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(2104);
						separator();
						}
						}
						setState(2109);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(2110);
					data_description_entry();
					}
					} 
				}
				setState(2115);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,289,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_description_entryContext extends ParserRuleContext {
		public Level_numberContext level_number() {
			return getRuleContext(Level_numberContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode REDEFINES() { return getToken(cobolParser.REDEFINES, 0); }
		public Other_data_itemContext other_data_item() {
			return getRuleContext(Other_data_itemContext.class,0);
		}
		public List<Data_description_clauseContext> data_description_clause() {
			return getRuleContexts(Data_description_clauseContext.class);
		}
		public Data_description_clauseContext data_description_clause(int i) {
			return getRuleContext(Data_description_clauseContext.class,i);
		}
		public Data_nameContext data_name() {
			return getRuleContext(Data_nameContext.class,0);
		}
		public TerminalNode FILLER() { return getToken(cobolParser.FILLER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Data_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_description_entry; }
	}

	public final Data_description_entryContext data_description_entry() throws RecognitionException {
		Data_description_entryContext _localctx = new Data_description_entryContext(_ctx, getState());
		enterRule(_localctx, 122, RULE_data_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2116);
			level_number();
			setState(2126);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,292,_ctx) ) {
			case 1:
				{
				setState(2118); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2117);
					separator();
					}
					}
					setState(2120); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2124);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USER_DEFINED_WORD:
					{
					setState(2122);
					data_name();
					}
					break;
				case FILLER:
					{
					setState(2123);
					match(FILLER);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(2141);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,295,_ctx) ) {
			case 1:
				{
				setState(2129); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2128);
					separator();
					}
					}
					setState(2131); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2133);
				match(REDEFINES);
				setState(2135); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2134);
					separator();
					}
					}
					setState(2137); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2139);
				other_data_item();
				}
				break;
			}
			setState(2152);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(2144); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2143);
					separator();
					}
					}
					setState(2146); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2148);
				data_description_clause();
				}
				}
				setState(2154);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(2155);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Level_numberContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Level_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_level_number; }
	}

	public final Level_numberContext level_number() throws RecognitionException {
		Level_numberContext _localctx = new Level_numberContext(_ctx, getState());
		enterRule(_localctx, 124, RULE_level_number);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2157);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_description_clauseContext extends ParserRuleContext {
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public PictureContext picture() {
			return getRuleContext(PictureContext.class,0);
		}
		public UsageContext usage() {
			return getRuleContext(UsageContext.class,0);
		}
		public Sign_isContext sign_is() {
			return getRuleContext(Sign_isContext.class,0);
		}
		public OccursContext occurs() {
			return getRuleContext(OccursContext.class,0);
		}
		public TerminalNode SYNCHRONIZED() { return getToken(cobolParser.SYNCHRONIZED, 0); }
		public TerminalNode SYNC() { return getToken(cobolParser.SYNC, 0); }
		public TerminalNode LEFT() { return getToken(cobolParser.LEFT, 0); }
		public TerminalNode RIGHT() { return getToken(cobolParser.RIGHT, 0); }
		public TerminalNode JUSTIFIED() { return getToken(cobolParser.JUSTIFIED, 0); }
		public TerminalNode JUST() { return getToken(cobolParser.JUST, 0); }
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode WHEN() { return getToken(cobolParser.WHEN, 0); }
		public Value_isContext value_is() {
			return getRuleContext(Value_isContext.class,0);
		}
		public RenamesContext renames() {
			return getRuleContext(RenamesContext.class,0);
		}
		public Data_description_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_description_clause; }
	}

	public final Data_description_clauseContext data_description_clause() throws RecognitionException {
		Data_description_clauseContext _localctx = new Data_description_clauseContext(_ctx, getState());
		enterRule(_localctx, 126, RULE_data_description_clause);
		int _la;
		try {
			setState(2219);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,309,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2165);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2159);
					match(IS);
					setState(2161); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2160);
						separator();
						}
						}
						setState(2163); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2167);
				match(EXTERNAL);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2174);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2168);
					match(IS);
					setState(2170); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2169);
						separator();
						}
						}
						setState(2172); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2176);
				match(GLOBAL);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(2177);
				picture();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(2178);
				usage();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(2179);
				sign_is();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(2180);
				occurs();
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(2181);
				_la = _input.LA(1);
				if ( !(_la==SYNC || _la==SYNCHRONIZED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(2189);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,303,_ctx) ) {
				case 1:
					{
					setState(2183); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2182);
						separator();
						}
						}
						setState(2185); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2187);
					_la = _input.LA(1);
					if ( !(_la==LEFT || _la==RIGHT) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(2191);
				_la = _input.LA(1);
				if ( !(_la==JUST || _la==JUSTIFIED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(2199);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,305,_ctx) ) {
				case 1:
					{
					setState(2193); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2192);
						separator();
						}
						}
						setState(2195); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2197);
					match(RIGHT);
					}
					break;
				}
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(2201);
				match(BLANK);
				setState(2203); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2202);
					separator();
					}
					}
					setState(2205); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2213);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WHEN) {
					{
					setState(2207);
					match(WHEN);
					setState(2209); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2208);
						separator();
						}
						}
						setState(2211); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2215);
				match(ZERO);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(2217);
				value_is();
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(2218);
				renames();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RenamesContext extends ParserRuleContext {
		public TerminalNode RENAMES() { return getToken(cobolParser.RENAMES, 0); }
		public Rename_startContext rename_start() {
			return getRuleContext(Rename_startContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Rename_endContext rename_end() {
			return getRuleContext(Rename_endContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public RenamesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_renames; }
	}

	public final RenamesContext renames() throws RecognitionException {
		RenamesContext _localctx = new RenamesContext(_ctx, getState());
		enterRule(_localctx, 128, RULE_renames);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2221);
			match(RENAMES);
			setState(2223); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2222);
				separator();
				}
				}
				setState(2225); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(2227);
			rename_start();
			setState(2241);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,313,_ctx) ) {
			case 1:
				{
				setState(2229); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2228);
					separator();
					}
					}
					setState(2231); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2233);
				_la = _input.LA(1);
				if ( !(_la==THROUGH || _la==THRU) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(2235); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2234);
					separator();
					}
					}
					setState(2237); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2239);
				rename_end();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rename_startContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Rename_startContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rename_start; }
	}

	public final Rename_startContext rename_start() throws RecognitionException {
		Rename_startContext _localctx = new Rename_startContext(_ctx, getState());
		enterRule(_localctx, 130, RULE_rename_start);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2243);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rename_endContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Rename_endContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rename_end; }
	}

	public final Rename_endContext rename_end() throws RecognitionException {
		Rename_endContext _localctx = new Rename_endContext(_ctx, getState());
		enterRule(_localctx, 132, RULE_rename_end);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2245);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_isContext extends ParserRuleContext {
		public List<Value_is_definitionContext> value_is_definition() {
			return getRuleContexts(Value_is_definitionContext.class);
		}
		public Value_is_definitionContext value_is_definition(int i) {
			return getRuleContext(Value_is_definitionContext.class,i);
		}
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public TerminalNode VALUES() { return getToken(cobolParser.VALUES, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public Value_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is; }
	}

	public final Value_isContext value_is() throws RecognitionException {
		Value_isContext _localctx = new Value_isContext(_ctx, getState());
		enterRule(_localctx, 134, RULE_value_is);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2267);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case VALUE:
				{
				setState(2247);
				match(VALUE);
				setState(2255);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,315,_ctx) ) {
				case 1:
					{
					setState(2249); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2248);
						separator();
						}
						}
						setState(2251); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2253);
					match(IS);
					}
					break;
				}
				}
				break;
			case VALUES:
				{
				setState(2257);
				match(VALUES);
				setState(2265);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,317,_ctx) ) {
				case 1:
					{
					setState(2259); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2258);
						separator();
						}
						}
						setState(2261); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2263);
					match(ARE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(2270); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2269);
				separator();
				}
				}
				setState(2272); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(2274);
			value_is_definition();
			setState(2284);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,321,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(2276); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2275);
						separator();
						}
						}
						setState(2278); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2280);
					value_is_definition();
					}
					} 
				}
				setState(2286);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,321,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_definitionContext extends ParserRuleContext {
		public Value_is_definition_partContext value_is_definition_part() {
			return getRuleContext(Value_is_definition_partContext.class,0);
		}
		public Value_is_definition_thruContext value_is_definition_thru() {
			return getRuleContext(Value_is_definition_thruContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Value_is_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_definition; }
	}

	public final Value_is_definitionContext value_is_definition() throws RecognitionException {
		Value_is_definitionContext _localctx = new Value_is_definitionContext(_ctx, getState());
		enterRule(_localctx, 136, RULE_value_is_definition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2287);
			value_is_definition_part();
			setState(2295);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,323,_ctx) ) {
			case 1:
				{
				setState(2289); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2288);
					separator();
					}
					}
					setState(2291); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2293);
				value_is_definition_thru();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_definition_partContext extends ParserRuleContext {
		public Value_is_literalContext value_is_literal() {
			return getRuleContext(Value_is_literalContext.class,0);
		}
		public TerminalNode REFERENCE() { return getToken(cobolParser.REFERENCE, 0); }
		public Ref_data_nameContext ref_data_name() {
			return getRuleContext(Ref_data_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public External_nameContext external_name() {
			return getRuleContext(External_nameContext.class,0);
		}
		public Value_is_definition_partContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_definition_part; }
	}

	public final Value_is_definition_partContext value_is_definition_part() throws RecognitionException {
		Value_is_definition_partContext _localctx = new Value_is_definition_partContext(_ctx, getState());
		enterRule(_localctx, 138, RULE_value_is_definition_part);
		int _la;
		try {
			setState(2314);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(2297);
				value_is_literal();
				}
				break;
			case REFERENCE:
				enterOuterAlt(_localctx, 2);
				{
				setState(2298);
				match(REFERENCE);
				setState(2300); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2299);
					separator();
					}
					}
					setState(2302); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2304);
				ref_data_name();
				}
				break;
			case EXTERNAL:
				enterOuterAlt(_localctx, 3);
				{
				setState(2306);
				match(EXTERNAL);
				setState(2308); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2307);
					separator();
					}
					}
					setState(2310); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2312);
				external_name();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_definition_thruContext extends ParserRuleContext {
		public Value_is_definition_partContext value_is_definition_part() {
			return getRuleContext(Value_is_definition_partContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Value_is_definition_thruContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_definition_thru; }
	}

	public final Value_is_definition_thruContext value_is_definition_thru() throws RecognitionException {
		Value_is_definition_thruContext _localctx = new Value_is_definition_thruContext(_ctx, getState());
		enterRule(_localctx, 140, RULE_value_is_definition_thru);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2316);
			_la = _input.LA(1);
			if ( !(_la==THROUGH || _la==THRU) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(2318); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2317);
				separator();
				}
				}
				setState(2320); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(2322);
			value_is_definition_part();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class External_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public External_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_external_name; }
	}

	public final External_nameContext external_name() throws RecognitionException {
		External_nameContext _localctx = new External_nameContext(_ctx, getState());
		enterRule(_localctx, 142, RULE_external_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2324);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Ref_data_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Ref_data_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_ref_data_name; }
	}

	public final Ref_data_nameContext ref_data_name() throws RecognitionException {
		Ref_data_nameContext _localctx = new Ref_data_nameContext(_ctx, getState());
		enterRule(_localctx, 144, RULE_ref_data_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2326);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_is_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Value_is_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_is_literal; }
	}

	public final Value_is_literalContext value_is_literal() throws RecognitionException {
		Value_is_literalContext _localctx = new Value_is_literalContext(_ctx, getState());
		enterRule(_localctx, 146, RULE_value_is_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2328);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class OccursContext extends ParserRuleContext {
		public TerminalNode OCCURS() { return getToken(cobolParser.OCCURS, 0); }
		public Times_definitionContext times_definition() {
			return getRuleContext(Times_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Key_isContext> key_is() {
			return getRuleContexts(Key_isContext.class);
		}
		public Key_isContext key_is(int i) {
			return getRuleContext(Key_isContext.class,i);
		}
		public Indexed_byContext indexed_by() {
			return getRuleContext(Indexed_byContext.class,0);
		}
		public OccursContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_occurs; }
	}

	public final OccursContext occurs() throws RecognitionException {
		OccursContext _localctx = new OccursContext(_ctx, getState());
		enterRule(_localctx, 148, RULE_occurs);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2330);
			match(OCCURS);
			setState(2332); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2331);
				separator();
				}
				}
				setState(2334); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(2336);
			times_definition();
			setState(2346);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,330,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(2338); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2337);
						separator();
						}
						}
						setState(2340); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2342);
					key_is();
					}
					} 
				}
				setState(2348);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,330,_ctx);
			}
			setState(2356);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,332,_ctx) ) {
			case 1:
				{
				setState(2350); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2349);
					separator();
					}
					}
					setState(2352); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2354);
				indexed_by();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Indexed_byContext extends ParserRuleContext {
		public TerminalNode INDEXED() { return getToken(cobolParser.INDEXED, 0); }
		public List<Ind_nameContext> ind_name() {
			return getRuleContexts(Ind_nameContext.class);
		}
		public Ind_nameContext ind_name(int i) {
			return getRuleContext(Ind_nameContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode BY() { return getToken(cobolParser.BY, 0); }
		public Indexed_byContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_indexed_by; }
	}

	public final Indexed_byContext indexed_by() throws RecognitionException {
		Indexed_byContext _localctx = new Indexed_byContext(_ctx, getState());
		enterRule(_localctx, 150, RULE_indexed_by);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2358);
			match(INDEXED);
			setState(2360); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2359);
				separator();
				}
				}
				setState(2362); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(2370);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==BY) {
				{
				setState(2364);
				match(BY);
				setState(2366); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2365);
					separator();
					}
					}
					setState(2368); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(2372);
			ind_name();
			setState(2382);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,337,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(2374); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2373);
						separator();
						}
						}
						setState(2376); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2378);
					ind_name();
					}
					} 
				}
				setState(2384);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,337,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Ind_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Ind_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_ind_name; }
	}

	public final Ind_nameContext ind_name() throws RecognitionException {
		Ind_nameContext _localctx = new Ind_nameContext(_ctx, getState());
		enterRule(_localctx, 152, RULE_ind_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2385);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Key_isContext extends ParserRuleContext {
		public List<Key_nameContext> key_name() {
			return getRuleContexts(Key_nameContext.class);
		}
		public Key_nameContext key_name(int i) {
			return getRuleContext(Key_nameContext.class,i);
		}
		public TerminalNode ASCENDING() { return getToken(cobolParser.ASCENDING, 0); }
		public TerminalNode DESCENDING() { return getToken(cobolParser.DESCENDING, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Key_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_key_is; }
	}

	public final Key_isContext key_is() throws RecognitionException {
		Key_isContext _localctx = new Key_isContext(_ctx, getState());
		enterRule(_localctx, 154, RULE_key_is);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2387);
			_la = _input.LA(1);
			if ( !(_la==ASCENDING || _la==DESCENDING) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(2389); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2388);
				separator();
				}
				}
				setState(2391); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(2399);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==KEY) {
				{
				setState(2393);
				match(KEY);
				setState(2395); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2394);
					separator();
					}
					}
					setState(2397); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(2407);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(2401);
				match(IS);
				setState(2403); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2402);
					separator();
					}
					}
					setState(2405); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(2409);
			key_name();
			setState(2419);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,344,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(2411); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2410);
						separator();
						}
						}
						setState(2413); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2415);
					key_name();
					}
					} 
				}
				setState(2421);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,344,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Key_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Key_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_key_name; }
	}

	public final Key_nameContext key_name() throws RecognitionException {
		Key_nameContext _localctx = new Key_nameContext(_ctx, getState());
		enterRule(_localctx, 156, RULE_key_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2422);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Times_definitionContext extends ParserRuleContext {
		public Table_sizeContext table_size() {
			return getRuleContext(Table_sizeContext.class,0);
		}
		public TerminalNode TIMES() { return getToken(cobolParser.TIMES, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Min_timesContext min_times() {
			return getRuleContext(Min_timesContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Max_timesContext max_times() {
			return getRuleContext(Max_timesContext.class,0);
		}
		public TerminalNode DEPENDING() { return getToken(cobolParser.DEPENDING, 0); }
		public Depending_itemContext depending_item() {
			return getRuleContext(Depending_itemContext.class,0);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Times_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_times_definition; }
	}

	public final Times_definitionContext times_definition() throws RecognitionException {
		Times_definitionContext _localctx = new Times_definitionContext(_ctx, getState());
		enterRule(_localctx, 158, RULE_times_definition);
		int _la;
		try {
			setState(2472);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,353,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2424);
				table_size();
				setState(2426); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2425);
					separator();
					}
					}
					setState(2428); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2430);
				match(TIMES);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2432);
				min_times();
				setState(2434); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2433);
					separator();
					}
					}
					setState(2436); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2438);
				match(TO);
				setState(2440); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2439);
					separator();
					}
					}
					setState(2442); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2444);
				max_times();
				setState(2446); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2445);
					separator();
					}
					}
					setState(2448); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2450);
				match(TIMES);
				setState(2452); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2451);
					separator();
					}
					}
					setState(2454); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2456);
				match(DEPENDING);
				setState(2458); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2457);
					separator();
					}
					}
					setState(2460); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2468);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==ON) {
					{
					setState(2462);
					match(ON);
					setState(2464); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2463);
						separator();
						}
						}
						setState(2466); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2470);
				depending_item();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Table_sizeContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Table_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_table_size; }
	}

	public final Table_sizeContext table_size() throws RecognitionException {
		Table_sizeContext _localctx = new Table_sizeContext(_ctx, getState());
		enterRule(_localctx, 160, RULE_table_size);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2474);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Min_timesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Min_timesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_min_times; }
	}

	public final Min_timesContext min_times() throws RecognitionException {
		Min_timesContext _localctx = new Min_timesContext(_ctx, getState());
		enterRule(_localctx, 162, RULE_min_times);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2476);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Max_timesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Max_timesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_max_times; }
	}

	public final Max_timesContext max_times() throws RecognitionException {
		Max_timesContext _localctx = new Max_timesContext(_ctx, getState());
		enterRule(_localctx, 164, RULE_max_times);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2478);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_group_description_entryContext extends ParserRuleContext {
		public List<Report_group_data_descriptionContext> report_group_data_description() {
			return getRuleContexts(Report_group_data_descriptionContext.class);
		}
		public Report_group_data_descriptionContext report_group_data_description(int i) {
			return getRuleContext(Report_group_data_descriptionContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Report_group_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_group_description_entry; }
	}

	public final Report_group_description_entryContext report_group_description_entry() throws RecognitionException {
		Report_group_description_entryContext _localctx = new Report_group_description_entryContext(_ctx, getState());
		enterRule(_localctx, 166, RULE_report_group_description_entry);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2480);
			report_group_data_description();
			setState(2490);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,355,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(2484);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(2481);
						separator();
						}
						}
						setState(2486);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(2487);
					report_group_data_description();
					}
					} 
				}
				setState(2492);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,355,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_group_data_descriptionContext extends ParserRuleContext {
		public Level_numberContext level_number() {
			return getRuleContext(Level_numberContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public Data_nameContext data_name() {
			return getRuleContext(Data_nameContext.class,0);
		}
		public List<Report_group_data_description_clauseContext> report_group_data_description_clause() {
			return getRuleContexts(Report_group_data_description_clauseContext.class);
		}
		public Report_group_data_description_clauseContext report_group_data_description_clause(int i) {
			return getRuleContext(Report_group_data_description_clauseContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Report_group_data_descriptionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_group_data_description; }
	}

	public final Report_group_data_descriptionContext report_group_data_description() throws RecognitionException {
		Report_group_data_descriptionContext _localctx = new Report_group_data_descriptionContext(_ctx, getState());
		enterRule(_localctx, 168, RULE_report_group_data_description);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2493);
			level_number();
			setState(2501);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,357,_ctx) ) {
			case 1:
				{
				setState(2495); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2494);
					separator();
					}
					}
					setState(2497); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2499);
				data_name();
				}
				break;
			}
			setState(2512);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(2504); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2503);
					separator();
					}
					}
					setState(2506); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2508);
				report_group_data_description_clause();
				}
				}
				setState(2514);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(2515);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_group_data_description_clauseContext extends ParserRuleContext {
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public Line_num_definitionContext line_num_definition() {
			return getRuleContext(Line_num_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode GROUP() { return getToken(cobolParser.GROUP, 0); }
		public Next_group_definitionContext next_group_definition() {
			return getRuleContext(Next_group_definitionContext.class,0);
		}
		public TerminalNode TYPE() { return getToken(cobolParser.TYPE, 0); }
		public Type_is_definitionContext type_is_definition() {
			return getRuleContext(Type_is_definitionContext.class,0);
		}
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public TerminalNode USAGE() { return getToken(cobolParser.USAGE, 0); }
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode WHEN() { return getToken(cobolParser.WHEN, 0); }
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public Column_numberContext column_number() {
			return getRuleContext(Column_numberContext.class,0);
		}
		public TerminalNode INDICATE() { return getToken(cobolParser.INDICATE, 0); }
		public TerminalNode JUSTIFIED() { return getToken(cobolParser.JUSTIFIED, 0); }
		public TerminalNode JUST() { return getToken(cobolParser.JUST, 0); }
		public TerminalNode RIGHT() { return getToken(cobolParser.RIGHT, 0); }
		public PictureContext picture() {
			return getRuleContext(PictureContext.class,0);
		}
		public Sign_isContext sign_is() {
			return getRuleContext(Sign_isContext.class,0);
		}
		public TerminalNode SOURCE() { return getToken(cobolParser.SOURCE, 0); }
		public Source_nameContext source_name() {
			return getRuleContext(Source_nameContext.class,0);
		}
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public Value_is_literalContext value_is_literal() {
			return getRuleContext(Value_is_literalContext.class,0);
		}
		public SumContext sum() {
			return getRuleContext(SumContext.class,0);
		}
		public Report_group_data_description_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_group_data_description_clause; }
	}

	public final Report_group_data_description_clauseContext report_group_data_description_clause() throws RecognitionException {
		Report_group_data_description_clauseContext _localctx = new Report_group_data_description_clauseContext(_ctx, getState());
		enterRule(_localctx, 170, RULE_report_group_data_description_clause);
		int _la;
		try {
			setState(2691);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LINE:
				enterOuterAlt(_localctx, 1);
				{
				setState(2517);
				match(LINE);
				setState(2519); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2518);
					separator();
					}
					}
					setState(2521); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2529);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(2523);
					match(NUMBER);
					setState(2525); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2524);
						separator();
						}
						}
						setState(2527); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2537);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2531);
					match(IS);
					setState(2533); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2532);
						separator();
						}
						}
						setState(2535); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2539);
				line_num_definition();
				}
				break;
			case NEXT:
				enterOuterAlt(_localctx, 2);
				{
				setState(2541);
				match(NEXT);
				setState(2543); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2542);
					separator();
					}
					}
					setState(2545); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2547);
				match(GROUP);
				setState(2549); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2548);
					separator();
					}
					}
					setState(2551); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2559);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2553);
					match(IS);
					setState(2555); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2554);
						separator();
						}
						}
						setState(2557); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2561);
				next_group_definition();
				}
				break;
			case TYPE:
				enterOuterAlt(_localctx, 3);
				{
				setState(2563);
				match(TYPE);
				setState(2565); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2564);
					separator();
					}
					}
					setState(2567); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2575);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2569);
					match(IS);
					setState(2571); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2570);
						separator();
						}
						}
						setState(2573); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2577);
				type_is_definition();
				}
				break;
			case DISPLAY:
			case USAGE:
				enterOuterAlt(_localctx, 4);
				{
				setState(2593);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==USAGE) {
					{
					setState(2579);
					match(USAGE);
					setState(2581); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2580);
						separator();
						}
						}
						setState(2583); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2591);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==IS) {
						{
						setState(2585);
						match(IS);
						setState(2587); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2586);
							separator();
							}
							}
							setState(2589); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						}
					}

					}
				}

				setState(2595);
				match(DISPLAY);
				}
				break;
			case BLANK:
				enterOuterAlt(_localctx, 5);
				{
				setState(2596);
				match(BLANK);
				setState(2598); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2597);
					separator();
					}
					}
					setState(2600); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2608);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WHEN) {
					{
					setState(2602);
					match(WHEN);
					setState(2604); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2603);
						separator();
						}
						}
						setState(2606); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2610);
				match(ZERO);
				}
				break;
			case COLUMN:
				enterOuterAlt(_localctx, 6);
				{
				setState(2612);
				match(COLUMN);
				setState(2614); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2613);
					separator();
					}
					}
					setState(2616); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2624);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(2618);
					match(NUMBER);
					setState(2620); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2619);
						separator();
						}
						}
						setState(2622); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2632);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2626);
					match(IS);
					setState(2628); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2627);
						separator();
						}
						}
						setState(2630); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2634);
				column_number();
				}
				break;
			case GROUP:
				enterOuterAlt(_localctx, 7);
				{
				setState(2636);
				match(GROUP);
				setState(2644);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,385,_ctx) ) {
				case 1:
					{
					setState(2638); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2637);
						separator();
						}
						}
						setState(2640); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2642);
					match(INDICATE);
					}
					break;
				}
				}
				break;
			case JUST:
			case JUSTIFIED:
				enterOuterAlt(_localctx, 8);
				{
				setState(2646);
				_la = _input.LA(1);
				if ( !(_la==JUST || _la==JUSTIFIED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(2654);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,387,_ctx) ) {
				case 1:
					{
					setState(2648); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2647);
						separator();
						}
						}
						setState(2650); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2652);
					match(RIGHT);
					}
					break;
				}
				}
				break;
			case PIC:
			case PICTURE:
				enterOuterAlt(_localctx, 9);
				{
				setState(2656);
				picture();
				}
				break;
			case LEADING:
			case SIGN:
			case TRAILING:
				enterOuterAlt(_localctx, 10);
				{
				setState(2657);
				sign_is();
				}
				break;
			case SOURCE:
				enterOuterAlt(_localctx, 11);
				{
				setState(2658);
				match(SOURCE);
				setState(2660); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2659);
					separator();
					}
					}
					setState(2662); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2670);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2664);
					match(IS);
					setState(2666); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2665);
						separator();
						}
						}
						setState(2668); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2672);
				source_name();
				}
				break;
			case VALUE:
				enterOuterAlt(_localctx, 12);
				{
				setState(2674);
				match(VALUE);
				setState(2676); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2675);
					separator();
					}
					}
					setState(2678); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2686);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2680);
					match(IS);
					setState(2682); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2681);
						separator();
						}
						}
						setState(2684); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2688);
				value_is_literal();
				}
				break;
			case SUM:
				enterOuterAlt(_localctx, 13);
				{
				setState(2690);
				sum();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sign_isContext extends ParserRuleContext {
		public TerminalNode LEADING() { return getToken(cobolParser.LEADING, 0); }
		public TerminalNode TRAILING() { return getToken(cobolParser.TRAILING, 0); }
		public TerminalNode SIGN() { return getToken(cobolParser.SIGN, 0); }
		public TerminalNode SEPARATE() { return getToken(cobolParser.SEPARATE, 0); }
		public TerminalNode CHARACTER() { return getToken(cobolParser.CHARACTER, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Sign_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sign_is; }
	}

	public final Sign_isContext sign_is() throws RecognitionException {
		Sign_isContext _localctx = new Sign_isContext(_ctx, getState());
		enterRule(_localctx, 172, RULE_sign_is);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2708);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SIGN) {
				{
				setState(2693);
				match(SIGN);
				setState(2701);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,396,_ctx) ) {
				case 1:
					{
					setState(2695); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2694);
						separator();
						}
						}
						setState(2697); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2699);
					match(IS);
					}
					break;
				}
				setState(2704); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2703);
					separator();
					}
					}
					setState(2706); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(2710);
			_la = _input.LA(1);
			if ( !(_la==LEADING || _la==TRAILING) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(2724);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,401,_ctx) ) {
			case 1:
				{
				setState(2712); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2711);
					separator();
					}
					}
					setState(2714); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2716);
				match(SEPARATE);
				{
				setState(2718); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2717);
					separator();
					}
					}
					setState(2720); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2722);
				match(CHARACTER);
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SumContext extends ParserRuleContext {
		public List<TerminalNode> SUM() { return getTokens(cobolParser.SUM); }
		public TerminalNode SUM(int i) {
			return getToken(cobolParser.SUM, i);
		}
		public List<Sum_nameContext> sum_name() {
			return getRuleContexts(Sum_nameContext.class);
		}
		public Sum_nameContext sum_name(int i) {
			return getRuleContext(Sum_nameContext.class,i);
		}
		public TerminalNode RESET() { return getToken(cobolParser.RESET, 0); }
		public Control_foot_nameContext control_foot_name() {
			return getRuleContext(Control_foot_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> UPON() { return getTokens(cobolParser.UPON); }
		public TerminalNode UPON(int i) {
			return getToken(cobolParser.UPON, i);
		}
		public List<Detail_report_group_nameContext> detail_report_group_name() {
			return getRuleContexts(Detail_report_group_nameContext.class);
		}
		public Detail_report_group_nameContext detail_report_group_name(int i) {
			return getRuleContext(Detail_report_group_nameContext.class,i);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public SumContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sum; }
	}

	public final SumContext sum() throws RecognitionException {
		SumContext _localctx = new SumContext(_ctx, getState());
		enterRule(_localctx, 174, RULE_sum);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(2766); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(2726);
				match(SUM);
				setState(2728); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2727);
					separator();
					}
					}
					setState(2730); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2732);
				sum_name();
				setState(2742);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,404,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(2734); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2733);
							separator();
							}
							}
							setState(2736); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(2738);
						sum_name();
						}
						} 
					}
					setState(2744);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,404,_ctx);
				}
				setState(2752);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,406,_ctx) ) {
				case 1:
					{
					setState(2746); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2745);
						separator();
						}
						}
						setState(2748); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2750);
					match(UPON);
					}
					break;
				}
				setState(2763);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,408,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(2755); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2754);
							separator();
							}
							}
							setState(2757); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(2759);
						detail_report_group_name();
						}
						} 
					}
					setState(2765);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,408,_ctx);
				}
				}
				}
				setState(2768); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==SUM );
			setState(2792);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,414,_ctx) ) {
			case 1:
				{
				setState(2773);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(2770);
					separator();
					}
					}
					setState(2775);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(2776);
				match(RESET);
				setState(2778); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2777);
					separator();
					}
					}
					setState(2780); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2788);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==ON) {
					{
					setState(2782);
					match(ON);
					setState(2784); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2783);
						separator();
						}
						}
						setState(2786); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2790);
				control_foot_name();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Control_foot_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode FINAL() { return getToken(cobolParser.FINAL, 0); }
		public Control_foot_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_control_foot_name; }
	}

	public final Control_foot_nameContext control_foot_name() throws RecognitionException {
		Control_foot_nameContext _localctx = new Control_foot_nameContext(_ctx, getState());
		enterRule(_localctx, 176, RULE_control_foot_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2794);
			_la = _input.LA(1);
			if ( !(_la==FINAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Detail_report_group_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Detail_report_group_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_detail_report_group_name; }
	}

	public final Detail_report_group_nameContext detail_report_group_name() throws RecognitionException {
		Detail_report_group_nameContext _localctx = new Detail_report_group_nameContext(_ctx, getState());
		enterRule(_localctx, 178, RULE_detail_report_group_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2796);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sum_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Sum_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sum_name; }
	}

	public final Sum_nameContext sum_name() throws RecognitionException {
		Sum_nameContext _localctx = new Sum_nameContext(_ctx, getState());
		enterRule(_localctx, 180, RULE_sum_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2798);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Source_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Source_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_source_name; }
	}

	public final Source_nameContext source_name() throws RecognitionException {
		Source_nameContext _localctx = new Source_nameContext(_ctx, getState());
		enterRule(_localctx, 182, RULE_source_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2800);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Column_numberContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Column_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_column_number; }
	}

	public final Column_numberContext column_number() throws RecognitionException {
		Column_numberContext _localctx = new Column_numberContext(_ctx, getState());
		enterRule(_localctx, 184, RULE_column_number);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2802);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Type_is_definitionContext extends ParserRuleContext {
		public TerminalNode REPORT() { return getToken(cobolParser.REPORT, 0); }
		public TerminalNode HEADING() { return getToken(cobolParser.HEADING, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode RH() { return getToken(cobolParser.RH, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public TerminalNode PH() { return getToken(cobolParser.PH, 0); }
		public Type_control_nameContext type_control_name() {
			return getRuleContext(Type_control_nameContext.class,0);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode CH() { return getToken(cobolParser.CH, 0); }
		public TerminalNode DETAIL() { return getToken(cobolParser.DETAIL, 0); }
		public TerminalNode DE() { return getToken(cobolParser.DE, 0); }
		public TerminalNode FOOTING() { return getToken(cobolParser.FOOTING, 0); }
		public TerminalNode CF() { return getToken(cobolParser.CF, 0); }
		public TerminalNode PF() { return getToken(cobolParser.PF, 0); }
		public TerminalNode RF() { return getToken(cobolParser.RF, 0); }
		public Type_is_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_type_is_definition; }
	}

	public final Type_is_definitionContext type_is_definition() throws RecognitionException {
		Type_is_definitionContext _localctx = new Type_is_definitionContext(_ctx, getState());
		enterRule(_localctx, 186, RULE_type_is_definition);
		int _la;
		try {
			setState(2878);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,425,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(2804);
				match(REPORT);
				setState(2806); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2805);
					separator();
					}
					}
					setState(2808); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2810);
				match(HEADING);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(2812);
				match(RH);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(2813);
				match(PAGE);
				setState(2815); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2814);
					separator();
					}
					}
					setState(2817); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2819);
				match(HEADING);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(2821);
				match(PH);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(2831);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case CONTROL:
					{
					setState(2822);
					match(CONTROL);
					setState(2824); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2823);
						separator();
						}
						}
						setState(2826); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2828);
					match(HEADING);
					}
					break;
				case CH:
					{
					setState(2830);
					match(CH);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2834); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2833);
					separator();
					}
					}
					setState(2836); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2838);
				type_control_name();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(2840);
				match(DETAIL);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(2841);
				match(DE);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(2851);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case CONTROL:
					{
					setState(2842);
					match(CONTROL);
					setState(2844); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2843);
						separator();
						}
						}
						setState(2846); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2848);
					match(FOOTING);
					}
					break;
				case CF:
					{
					setState(2850);
					match(CF);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2854); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2853);
					separator();
					}
					}
					setState(2856); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2858);
				type_control_name();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(2860);
				match(PAGE);
				setState(2862); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2861);
					separator();
					}
					}
					setState(2864); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2866);
				match(FOOTING);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(2868);
				match(PF);
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(2869);
				match(REPORT);
				setState(2871); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2870);
					separator();
					}
					}
					setState(2873); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2875);
				match(FOOTING);
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(2877);
				match(RF);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Type_control_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode FINAL() { return getToken(cobolParser.FINAL, 0); }
		public Type_control_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_type_control_name; }
	}

	public final Type_control_nameContext type_control_name() throws RecognitionException {
		Type_control_nameContext _localctx = new Type_control_nameContext(_ctx, getState());
		enterRule(_localctx, 188, RULE_type_control_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2880);
			_la = _input.LA(1);
			if ( !(_la==FINAL || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Next_group_definitionContext extends ParserRuleContext {
		public Line_numContext line_num() {
			return getRuleContext(Line_numContext.class,0);
		}
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public Next_group_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_next_group_definition; }
	}

	public final Next_group_definitionContext next_group_definition() throws RecognitionException {
		Next_group_definitionContext _localctx = new Next_group_definitionContext(_ctx, getState());
		enterRule(_localctx, 190, RULE_next_group_definition);
		int _la;
		try {
			setState(2899);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(2882);
				line_num();
				}
				break;
			case PLUS:
				enterOuterAlt(_localctx, 2);
				{
				setState(2883);
				match(PLUS);
				setState(2885); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2884);
					separator();
					}
					}
					setState(2887); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2889);
				line_num();
				}
				break;
			case NEXT:
				enterOuterAlt(_localctx, 3);
				{
				setState(2891);
				match(NEXT);
				setState(2893); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2892);
					separator();
					}
					}
					setState(2895); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2897);
				match(PAGE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Line_num_definitionContext extends ParserRuleContext {
		public Line_numContext line_num() {
			return getRuleContext(Line_numContext.class,0);
		}
		public TerminalNode NEXT() { return getToken(cobolParser.NEXT, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public Line_num_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_line_num_definition; }
	}

	public final Line_num_definitionContext line_num_definition() throws RecognitionException {
		Line_num_definitionContext _localctx = new Line_num_definitionContext(_ctx, getState());
		enterRule(_localctx, 192, RULE_line_num_definition);
		int _la;
		try {
			setState(2933);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(2901);
				line_num();
				setState(2923);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,433,_ctx) ) {
				case 1:
					{
					setState(2903); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2902);
						separator();
						}
						}
						setState(2905); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2913);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==ON) {
						{
						setState(2907);
						match(ON);
						setState(2909); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2908);
							separator();
							}
							}
							setState(2911); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						}
					}

					setState(2915);
					match(NEXT);
					setState(2917); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2916);
						separator();
						}
						}
						setState(2919); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(2921);
					match(PAGE);
					}
					break;
				}
				}
				break;
			case PLUS:
				enterOuterAlt(_localctx, 2);
				{
				setState(2925);
				match(PLUS);
				setState(2927); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2926);
					separator();
					}
					}
					setState(2929); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2931);
				line_num();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Line_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Line_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_line_num; }
	}

	public final Line_numContext line_num() throws RecognitionException {
		Line_numContext _localctx = new Line_numContext(_ctx, getState());
		enterRule(_localctx, 194, RULE_line_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(2935);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rd_clauseContext extends ParserRuleContext {
		public TerminalNode GLOBAL() { return getToken(cobolParser.GLOBAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CODE() { return getToken(cobolParser.CODE, 0); }
		public Report_codeContext report_code() {
			return getRuleContext(Report_codeContext.class,0);
		}
		public TerminalNode CONTROL() { return getToken(cobolParser.CONTROL, 0); }
		public TerminalNode CONTROLS() { return getToken(cobolParser.CONTROLS, 0); }
		public List<Control_nameContext> control_name() {
			return getRuleContexts(Control_nameContext.class);
		}
		public Control_nameContext control_name(int i) {
			return getRuleContext(Control_nameContext.class,i);
		}
		public TerminalNode FINAL() { return getToken(cobolParser.FINAL, 0); }
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode PAGE() { return getToken(cobolParser.PAGE, 0); }
		public Page_size_rdContext page_size_rd() {
			return getRuleContext(Page_size_rdContext.class,0);
		}
		public TerminalNode LIMIT() { return getToken(cobolParser.LIMIT, 0); }
		public TerminalNode LIMITS() { return getToken(cobolParser.LIMITS, 0); }
		public TerminalNode HEADING() { return getToken(cobolParser.HEADING, 0); }
		public Heading_lineContext heading_line() {
			return getRuleContext(Heading_lineContext.class,0);
		}
		public TerminalNode FIRST() { return getToken(cobolParser.FIRST, 0); }
		public List<TerminalNode> DETAIL() { return getTokens(cobolParser.DETAIL); }
		public TerminalNode DETAIL(int i) {
			return getToken(cobolParser.DETAIL, i);
		}
		public First_detail_lineContext first_detail_line() {
			return getRuleContext(First_detail_lineContext.class,0);
		}
		public TerminalNode LAST() { return getToken(cobolParser.LAST, 0); }
		public Last_detail_lineContext last_detail_line() {
			return getRuleContext(Last_detail_lineContext.class,0);
		}
		public TerminalNode FOOTING() { return getToken(cobolParser.FOOTING, 0); }
		public Footing_line_rdContext footing_line_rd() {
			return getRuleContext(Footing_line_rdContext.class,0);
		}
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode LINES() { return getToken(cobolParser.LINES, 0); }
		public Rd_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rd_clause; }
	}

	public final Rd_clauseContext rd_clause() throws RecognitionException {
		Rd_clauseContext _localctx = new Rd_clauseContext(_ctx, getState());
		enterRule(_localctx, 196, RULE_rd_clause);
		int _la;
		try {
			int _alt;
			setState(3127);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case GLOBAL:
			case IS:
				enterOuterAlt(_localctx, 1);
				{
				setState(2943);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(2937);
					match(IS);
					setState(2939); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(2938);
						separator();
						}
						}
						setState(2941); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(2945);
				match(GLOBAL);
				}
				break;
			case CODE:
				enterOuterAlt(_localctx, 2);
				{
				setState(2946);
				match(CODE);
				setState(2948); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2947);
					separator();
					}
					}
					setState(2950); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(2952);
				report_code();
				}
				break;
			case CONTROL:
			case CONTROLS:
				enterOuterAlt(_localctx, 3);
				{
				setState(2974);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case CONTROL:
					{
					setState(2954);
					match(CONTROL);
					setState(2962);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,440,_ctx) ) {
					case 1:
						{
						setState(2956); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2955);
							separator();
							}
							}
							setState(2958); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(2960);
						match(IS);
						}
						break;
					}
					}
					break;
				case CONTROLS:
					{
					setState(2964);
					match(CONTROLS);
					setState(2972);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,442,_ctx) ) {
					case 1:
						{
						setState(2966); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(2965);
							separator();
							}
							}
							setState(2968); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(2970);
						match(ARE);
						}
						break;
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(2977); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(2976);
					separator();
					}
					}
					setState(2979); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3007);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USER_DEFINED_WORD:
					{
					setState(2981);
					control_name();
					setState(2991);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,446,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(2985);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
								{
								{
								setState(2982);
								separator();
								}
								}
								setState(2987);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(2988);
							control_name();
							}
							} 
						}
						setState(2993);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,446,_ctx);
					}
					}
					break;
				case FINAL:
					{
					setState(2994);
					match(FINAL);
					setState(3004);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,448,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(2998);
							_errHandler.sync(this);
							_la = _input.LA(1);
							while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
								{
								{
								setState(2995);
								separator();
								}
								}
								setState(3000);
								_errHandler.sync(this);
								_la = _input.LA(1);
							}
							setState(3001);
							control_name();
							}
							} 
						}
						setState(3006);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,448,_ctx);
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			case PAGE:
				enterOuterAlt(_localctx, 4);
				{
				setState(3009);
				match(PAGE);
				setState(3011); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3010);
					separator();
					}
					}
					setState(3013); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3043);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case LIMIT:
					{
					setState(3015);
					match(LIMIT);
					setState(3017); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3016);
						separator();
						}
						}
						setState(3019); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3027);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==IS) {
						{
						setState(3021);
						match(IS);
						setState(3023); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3022);
							separator();
							}
							}
							setState(3025); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						}
					}

					}
					break;
				case LIMITS:
					{
					setState(3029);
					match(LIMITS);
					setState(3031); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3030);
						separator();
						}
						}
						setState(3033); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3041);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==ARE) {
						{
						setState(3035);
						match(ARE);
						setState(3037); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3036);
							separator();
							}
							}
							setState(3039); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						}
					}

					}
					break;
				case NUMERIC_LITERAL:
					break;
				default:
					break;
				}
				setState(3045);
				page_size_rd();
				setState(3053);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,459,_ctx) ) {
				case 1:
					{
					setState(3047); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3046);
						separator();
						}
						}
						setState(3049); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3051);
					_la = _input.LA(1);
					if ( !(_la==LINE || _la==LINES) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				setState(3068);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,462,_ctx) ) {
				case 1:
					{
					setState(3056); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3055);
						separator();
						}
						}
						setState(3058); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3060);
					match(HEADING);
					setState(3062); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3061);
						separator();
						}
						}
						setState(3064); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3066);
					heading_line();
					}
					break;
				}
				setState(3089);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,466,_ctx) ) {
				case 1:
					{
					setState(3071); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3070);
						separator();
						}
						}
						setState(3073); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3075);
					match(FIRST);
					setState(3077); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3076);
						separator();
						}
						}
						setState(3079); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3081);
					match(DETAIL);
					setState(3083); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3082);
						separator();
						}
						}
						setState(3085); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3087);
					first_detail_line();
					}
					break;
				}
				setState(3110);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,470,_ctx) ) {
				case 1:
					{
					setState(3092); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3091);
						separator();
						}
						}
						setState(3094); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3096);
					match(LAST);
					setState(3098); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3097);
						separator();
						}
						}
						setState(3100); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3102);
					match(DETAIL);
					setState(3104); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3103);
						separator();
						}
						}
						setState(3106); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3108);
					last_detail_line();
					}
					break;
				}
				setState(3125);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,473,_ctx) ) {
				case 1:
					{
					setState(3113); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3112);
						separator();
						}
						}
						setState(3115); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3117);
					match(FOOTING);
					setState(3119); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3118);
						separator();
						}
						}
						setState(3121); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3123);
					footing_line_rd();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Footing_line_rdContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Footing_line_rdContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_footing_line_rd; }
	}

	public final Footing_line_rdContext footing_line_rd() throws RecognitionException {
		Footing_line_rdContext _localctx = new Footing_line_rdContext(_ctx, getState());
		enterRule(_localctx, 198, RULE_footing_line_rd);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3129);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Last_detail_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Last_detail_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_last_detail_line; }
	}

	public final Last_detail_lineContext last_detail_line() throws RecognitionException {
		Last_detail_lineContext _localctx = new Last_detail_lineContext(_ctx, getState());
		enterRule(_localctx, 200, RULE_last_detail_line);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3131);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class First_detail_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public First_detail_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_first_detail_line; }
	}

	public final First_detail_lineContext first_detail_line() throws RecognitionException {
		First_detail_lineContext _localctx = new First_detail_lineContext(_ctx, getState());
		enterRule(_localctx, 202, RULE_first_detail_line);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3133);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Heading_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Heading_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_heading_line; }
	}

	public final Heading_lineContext heading_line() throws RecognitionException {
		Heading_lineContext _localctx = new Heading_lineContext(_ctx, getState());
		enterRule(_localctx, 204, RULE_heading_line);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3135);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Page_size_rdContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Page_size_rdContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_page_size_rd; }
	}

	public final Page_size_rdContext page_size_rd() throws RecognitionException {
		Page_size_rdContext _localctx = new Page_size_rdContext(_ctx, getState());
		enterRule(_localctx, 206, RULE_page_size_rd);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3137);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Control_nameContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Control_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_control_name; }
	}

	public final Control_nameContext control_name() throws RecognitionException {
		Control_nameContext _localctx = new Control_nameContext(_ctx, getState());
		enterRule(_localctx, 208, RULE_control_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3139);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_codeContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Report_codeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_code; }
	}

	public final Report_codeContext report_code() throws RecognitionException {
		Report_codeContext _localctx = new Report_codeContext(_ctx, getState());
		enterRule(_localctx, 210, RULE_report_code);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3141);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class UsageContext extends ParserRuleContext {
		public Usage_definitionContext usage_definition() {
			return getRuleContext(Usage_definitionContext.class,0);
		}
		public TerminalNode USAGE() { return getToken(cobolParser.USAGE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public UsageContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_usage; }
	}

	public final UsageContext usage() throws RecognitionException {
		UsageContext _localctx = new UsageContext(_ctx, getState());
		enterRule(_localctx, 212, RULE_usage);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3158);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==USAGE) {
				{
				setState(3143);
				match(USAGE);
				setState(3151);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,476,_ctx) ) {
				case 1:
					{
					setState(3145); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3144);
						separator();
						}
						}
						setState(3147); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3149);
					match(IS);
					}
					break;
				}
				setState(3154); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3153);
					separator();
					}
					}
					setState(3156); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(3160);
			usage_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Usage_definitionContext extends ParserRuleContext {
		public TerminalNode BINARY() { return getToken(cobolParser.BINARY, 0); }
		public TerminalNode BINARY_CHAR() { return getToken(cobolParser.BINARY_CHAR, 0); }
		public TerminalNode SIGNED() { return getToken(cobolParser.SIGNED, 0); }
		public TerminalNode UNSIGNED() { return getToken(cobolParser.UNSIGNED, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode BINARY_SHORT() { return getToken(cobolParser.BINARY_SHORT, 0); }
		public TerminalNode BINARY_LONG() { return getToken(cobolParser.BINARY_LONG, 0); }
		public TerminalNode BINARY_DOUBLE() { return getToken(cobolParser.BINARY_DOUBLE, 0); }
		public TerminalNode COMPUTATIONAL() { return getToken(cobolParser.COMPUTATIONAL, 0); }
		public TerminalNode COMPUTATIONAL_1() { return getToken(cobolParser.COMPUTATIONAL_1, 0); }
		public TerminalNode COMPUTATIONAL_2() { return getToken(cobolParser.COMPUTATIONAL_2, 0); }
		public TerminalNode COMPUTATIONAL_3() { return getToken(cobolParser.COMPUTATIONAL_3, 0); }
		public TerminalNode COMPUTATIONAL_4() { return getToken(cobolParser.COMPUTATIONAL_4, 0); }
		public TerminalNode COMPUTATIONAL_5() { return getToken(cobolParser.COMPUTATIONAL_5, 0); }
		public TerminalNode COMPUTATIONAL_X() { return getToken(cobolParser.COMPUTATIONAL_X, 0); }
		public TerminalNode COMP() { return getToken(cobolParser.COMP, 0); }
		public TerminalNode COMP_1() { return getToken(cobolParser.COMP_1, 0); }
		public TerminalNode COMP_2() { return getToken(cobolParser.COMP_2, 0); }
		public TerminalNode COMP_3() { return getToken(cobolParser.COMP_3, 0); }
		public TerminalNode COMP_4() { return getToken(cobolParser.COMP_4, 0); }
		public TerminalNode COMP_5() { return getToken(cobolParser.COMP_5, 0); }
		public TerminalNode COMP_X() { return getToken(cobolParser.COMP_X, 0); }
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public TerminalNode FLOAT_SHORT() { return getToken(cobolParser.FLOAT_SHORT, 0); }
		public TerminalNode FLOAT_LONG() { return getToken(cobolParser.FLOAT_LONG, 0); }
		public TerminalNode FLOAT_EXTENDED() { return getToken(cobolParser.FLOAT_EXTENDED, 0); }
		public TerminalNode INDEX() { return getToken(cobolParser.INDEX, 0); }
		public TerminalNode PACKED_DECIMAL() { return getToken(cobolParser.PACKED_DECIMAL, 0); }
		public TerminalNode POINTER() { return getToken(cobolParser.POINTER, 0); }
		public TerminalNode POINTER_64() { return getToken(cobolParser.POINTER_64, 0); }
		public Usage_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_usage_definition; }
	}

	public final Usage_definitionContext usage_definition() throws RecognitionException {
		Usage_definitionContext _localctx = new Usage_definitionContext(_ctx, getState());
		enterRule(_localctx, 214, RULE_usage_definition);
		int _la;
		try {
			setState(3225);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case BINARY:
				enterOuterAlt(_localctx, 1);
				{
				setState(3162);
				match(BINARY);
				}
				break;
			case BINARY_CHAR:
				enterOuterAlt(_localctx, 2);
				{
				setState(3163);
				match(BINARY_CHAR);
				setState(3171);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,480,_ctx) ) {
				case 1:
					{
					setState(3165); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3164);
						separator();
						}
						}
						setState(3167); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3169);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case BINARY_SHORT:
				enterOuterAlt(_localctx, 3);
				{
				setState(3173);
				match(BINARY_SHORT);
				setState(3181);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,482,_ctx) ) {
				case 1:
					{
					setState(3175); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3174);
						separator();
						}
						}
						setState(3177); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3179);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case BINARY_LONG:
				enterOuterAlt(_localctx, 4);
				{
				setState(3183);
				match(BINARY_LONG);
				setState(3191);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,484,_ctx) ) {
				case 1:
					{
					setState(3185); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3184);
						separator();
						}
						}
						setState(3187); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3189);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case BINARY_DOUBLE:
				enterOuterAlt(_localctx, 5);
				{
				setState(3193);
				match(BINARY_DOUBLE);
				setState(3201);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,486,_ctx) ) {
				case 1:
					{
					setState(3195); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3194);
						separator();
						}
						}
						setState(3197); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3199);
					_la = _input.LA(1);
					if ( !(_la==SIGNED || _la==UNSIGNED) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					break;
				}
				}
				break;
			case COMPUTATIONAL:
				enterOuterAlt(_localctx, 6);
				{
				setState(3203);
				match(COMPUTATIONAL);
				}
				break;
			case COMPUTATIONAL_1:
				enterOuterAlt(_localctx, 7);
				{
				setState(3204);
				match(COMPUTATIONAL_1);
				}
				break;
			case COMPUTATIONAL_2:
				enterOuterAlt(_localctx, 8);
				{
				setState(3205);
				match(COMPUTATIONAL_2);
				}
				break;
			case COMPUTATIONAL_3:
				enterOuterAlt(_localctx, 9);
				{
				setState(3206);
				match(COMPUTATIONAL_3);
				}
				break;
			case COMPUTATIONAL_4:
				enterOuterAlt(_localctx, 10);
				{
				setState(3207);
				match(COMPUTATIONAL_4);
				}
				break;
			case COMPUTATIONAL_5:
				enterOuterAlt(_localctx, 11);
				{
				setState(3208);
				match(COMPUTATIONAL_5);
				}
				break;
			case COMPUTATIONAL_X:
				enterOuterAlt(_localctx, 12);
				{
				setState(3209);
				match(COMPUTATIONAL_X);
				}
				break;
			case COMP:
				enterOuterAlt(_localctx, 13);
				{
				setState(3210);
				match(COMP);
				}
				break;
			case COMP_1:
				enterOuterAlt(_localctx, 14);
				{
				setState(3211);
				match(COMP_1);
				}
				break;
			case COMP_2:
				enterOuterAlt(_localctx, 15);
				{
				setState(3212);
				match(COMP_2);
				}
				break;
			case COMP_3:
				enterOuterAlt(_localctx, 16);
				{
				setState(3213);
				match(COMP_3);
				}
				break;
			case COMP_4:
				enterOuterAlt(_localctx, 17);
				{
				setState(3214);
				match(COMP_4);
				}
				break;
			case COMP_5:
				enterOuterAlt(_localctx, 18);
				{
				setState(3215);
				match(COMP_5);
				}
				break;
			case COMP_X:
				enterOuterAlt(_localctx, 19);
				{
				setState(3216);
				match(COMP_X);
				}
				break;
			case DISPLAY:
				enterOuterAlt(_localctx, 20);
				{
				setState(3217);
				match(DISPLAY);
				}
				break;
			case FLOAT_SHORT:
				enterOuterAlt(_localctx, 21);
				{
				setState(3218);
				match(FLOAT_SHORT);
				}
				break;
			case FLOAT_LONG:
				enterOuterAlt(_localctx, 22);
				{
				setState(3219);
				match(FLOAT_LONG);
				}
				break;
			case FLOAT_EXTENDED:
				enterOuterAlt(_localctx, 23);
				{
				setState(3220);
				match(FLOAT_EXTENDED);
				}
				break;
			case INDEX:
				enterOuterAlt(_localctx, 24);
				{
				setState(3221);
				match(INDEX);
				}
				break;
			case PACKED_DECIMAL:
				enterOuterAlt(_localctx, 25);
				{
				setState(3222);
				match(PACKED_DECIMAL);
				}
				break;
			case POINTER:
				enterOuterAlt(_localctx, 26);
				{
				setState(3223);
				match(POINTER);
				}
				break;
			case POINTER_64:
				enterOuterAlt(_localctx, 27);
				{
				setState(3224);
				match(POINTER_64);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class PictureContext extends ParserRuleContext {
		public Character_stringContext character_string() {
			return getRuleContext(Character_stringContext.class,0);
		}
		public TerminalNode PICTURE() { return getToken(cobolParser.PICTURE, 0); }
		public TerminalNode PIC() { return getToken(cobolParser.PIC, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public PictureContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_picture; }
	}

	public final PictureContext picture() throws RecognitionException {
		PictureContext _localctx = new PictureContext(_ctx, getState());
		enterRule(_localctx, 216, RULE_picture);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3227);
			_la = _input.LA(1);
			if ( !(_la==PIC || _la==PICTURE) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(3229); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(3228);
					separator();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(3231); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,488,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(3239);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(3233);
				match(IS);
				setState(3235); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(3234);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(3237); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,489,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
			}

			setState(3241);
			character_string();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Character_stringContext extends ParserRuleContext {
		public List<Char_str_partContext> char_str_part() {
			return getRuleContexts(Char_str_partContext.class);
		}
		public Char_str_partContext char_str_part(int i) {
			return getRuleContext(Char_str_partContext.class,i);
		}
		public Character_stringContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_character_string; }
	}

	public final Character_stringContext character_string() throws RecognitionException {
		Character_stringContext _localctx = new Character_stringContext(_ctx, getState());
		enterRule(_localctx, 218, RULE_character_string);
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3244); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(3243);
					char_str_part();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(3246); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,491,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Char_str_partContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode COMMA_() { return getToken(cobolParser.COMMA_, 0); }
		public TerminalNode SLASH_() { return getToken(cobolParser.SLASH_, 0); }
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Char_str_partContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_char_str_part; }
	}

	public final Char_str_partContext char_str_part() throws RecognitionException {
		Char_str_partContext _localctx = new Char_str_partContext(_ctx, getState());
		enterRule(_localctx, 220, RULE_char_str_part);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3248);
			_la = _input.LA(1);
			if ( !(((((_la - 396)) & ~0x3f) == 0 && ((1L << (_la - 396)) & ((1L << (SLASH_ - 396)) | (1L << (COMMA_ - 396)) | (1L << (LPAREN_ - 396)) | (1L << (RPAREN_ - 396)) | (1L << (DOT_ - 396)) | (1L << (NUMERIC_LITERAL - 396)) | (1L << (USER_DEFINED_WORD - 396)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Other_data_itemContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Other_data_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_other_data_item; }
	}

	public final Other_data_itemContext other_data_item() throws RecognitionException {
		Other_data_itemContext _localctx = new Other_data_itemContext(_ctx, getState());
		enterRule(_localctx, 222, RULE_other_data_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3250);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Data_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_name; }
	}

	public final Data_nameContext data_name() throws RecognitionException {
		Data_nameContext _localctx = new Data_nameContext(_ctx, getState());
		enterRule(_localctx, 224, RULE_data_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3252);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sd_clauseContext extends ParserRuleContext {
		public RecordContext record() {
			return getRuleContext(RecordContext.class,0);
		}
		public Data_recContext data_rec() {
			return getRuleContext(Data_recContext.class,0);
		}
		public Sd_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sd_clause; }
	}

	public final Sd_clauseContext sd_clause() throws RecognitionException {
		Sd_clauseContext _localctx = new Sd_clauseContext(_ctx, getState());
		enterRule(_localctx, 226, RULE_sd_clause);
		try {
			setState(3256);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case RECORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(3254);
				record();
				}
				break;
			case DATA:
				enterOuterAlt(_localctx, 2);
				{
				setState(3255);
				data_rec();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_isContext extends ParserRuleContext {
		public List<Report_nameContext> report_name() {
			return getRuleContexts(Report_nameContext.class);
		}
		public Report_nameContext report_name(int i) {
			return getRuleContext(Report_nameContext.class,i);
		}
		public TerminalNode REPORT() { return getToken(cobolParser.REPORT, 0); }
		public TerminalNode REPORTS() { return getToken(cobolParser.REPORTS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public Report_isContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_is; }
	}

	public final Report_isContext report_is() throws RecognitionException {
		Report_isContext _localctx = new Report_isContext(_ctx, getState());
		enterRule(_localctx, 228, RULE_report_is);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3278);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case REPORT:
				{
				setState(3258);
				match(REPORT);
				setState(3266);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,494,_ctx) ) {
				case 1:
					{
					setState(3260); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3259);
						separator();
						}
						}
						setState(3262); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3264);
					match(IS);
					}
					break;
				}
				}
				break;
			case REPORTS:
				{
				setState(3268);
				match(REPORTS);
				setState(3276);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,496,_ctx) ) {
				case 1:
					{
					setState(3270); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3269);
						separator();
						}
						}
						setState(3272); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3274);
					match(ARE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(3281); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3280);
				separator();
				}
				}
				setState(3283); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3285);
			report_name();
			setState(3295);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,500,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3289);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(3286);
						separator();
						}
						}
						setState(3291);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(3292);
					report_name();
					}
					} 
				}
				setState(3297);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,500,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Report_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Report_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_report_name; }
	}

	public final Report_nameContext report_name() throws RecognitionException {
		Report_nameContext _localctx = new Report_nameContext(_ctx, getState());
		enterRule(_localctx, 230, RULE_report_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3298);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class LinageContext extends ParserRuleContext {
		public TerminalNode LINAGE() { return getToken(cobolParser.LINAGE, 0); }
		public Page_sizeContext page_size() {
			return getRuleContext(Page_sizeContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<TerminalNode> LINES() { return getTokens(cobolParser.LINES); }
		public TerminalNode LINES(int i) {
			return getToken(cobolParser.LINES, i);
		}
		public TerminalNode FOOTING() { return getToken(cobolParser.FOOTING, 0); }
		public Footing_lineContext footing_line() {
			return getRuleContext(Footing_lineContext.class,0);
		}
		public TerminalNode TOP() { return getToken(cobolParser.TOP, 0); }
		public Top_linesContext top_lines() {
			return getRuleContext(Top_linesContext.class,0);
		}
		public TerminalNode BOTTOM() { return getToken(cobolParser.BOTTOM, 0); }
		public Bottom_linesContext bottom_lines() {
			return getRuleContext(Bottom_linesContext.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<TerminalNode> AT() { return getTokens(cobolParser.AT); }
		public TerminalNode AT(int i) {
			return getToken(cobolParser.AT, i);
		}
		public LinageContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_linage; }
	}

	public final LinageContext linage() throws RecognitionException {
		LinageContext _localctx = new LinageContext(_ctx, getState());
		enterRule(_localctx, 232, RULE_linage);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3300);
			match(LINAGE);
			setState(3302); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3301);
				separator();
				}
				}
				setState(3304); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3312);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(3306);
				match(IS);
				setState(3308); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3307);
					separator();
					}
					}
					setState(3310); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(3314);
			page_size();
			setState(3322);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,505,_ctx) ) {
			case 1:
				{
				setState(3316); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3315);
					separator();
					}
					}
					setState(3318); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3320);
				match(LINES);
				}
				break;
			}
			setState(3353);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,512,_ctx) ) {
			case 1:
				{
				setState(3325); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3324);
					separator();
					}
					}
					setState(3327); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3335);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(3329);
					match(WITH);
					setState(3331); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3330);
						separator();
						}
						}
						setState(3333); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3337);
				match(FOOTING);
				setState(3339); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3338);
					separator();
					}
					}
					setState(3341); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3349);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(3343);
					match(AT);
					setState(3345); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3344);
						separator();
						}
						}
						setState(3347); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3351);
				footing_line();
				}
				break;
			}
			setState(3384);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,519,_ctx) ) {
			case 1:
				{
				setState(3356); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3355);
					separator();
					}
					}
					setState(3358); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3366);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==LINES) {
					{
					setState(3360);
					match(LINES);
					setState(3362); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3361);
						separator();
						}
						}
						setState(3364); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3374);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(3368);
					match(AT);
					setState(3370); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3369);
						separator();
						}
						}
						setState(3372); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3376);
				match(TOP);
				setState(3378); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3377);
					separator();
					}
					}
					setState(3380); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3382);
				top_lines();
				}
				break;
			}
			setState(3415);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,526,_ctx) ) {
			case 1:
				{
				setState(3387); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3386);
					separator();
					}
					}
					setState(3389); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3397);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==LINES) {
					{
					setState(3391);
					match(LINES);
					setState(3393); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3392);
						separator();
						}
						}
						setState(3395); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3405);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==AT) {
					{
					setState(3399);
					match(AT);
					setState(3401); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3400);
						separator();
						}
						}
						setState(3403); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3407);
				match(BOTTOM);
				setState(3409); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3408);
					separator();
					}
					}
					setState(3411); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3413);
				bottom_lines();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Bottom_linesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Bottom_linesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_bottom_lines; }
	}

	public final Bottom_linesContext bottom_lines() throws RecognitionException {
		Bottom_linesContext _localctx = new Bottom_linesContext(_ctx, getState());
		enterRule(_localctx, 234, RULE_bottom_lines);
		try {
			setState(3419);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(3417);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(3418);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Top_linesContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Top_linesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_top_lines; }
	}

	public final Top_linesContext top_lines() throws RecognitionException {
		Top_linesContext _localctx = new Top_linesContext(_ctx, getState());
		enterRule(_localctx, 236, RULE_top_lines);
		try {
			setState(3423);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(3421);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(3422);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Footing_lineContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Footing_lineContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_footing_line; }
	}

	public final Footing_lineContext footing_line() throws RecognitionException {
		Footing_lineContext _localctx = new Footing_lineContext(_ctx, getState());
		enterRule(_localctx, 238, RULE_footing_line);
		try {
			setState(3427);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(3425);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(3426);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Page_sizeContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Page_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_page_size; }
	}

	public final Page_sizeContext page_size() throws RecognitionException {
		Page_sizeContext _localctx = new Page_sizeContext(_ctx, getState());
		enterRule(_localctx, 240, RULE_page_size);
		try {
			setState(3431);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(3429);
				match(NUMERIC_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(3430);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Data_recContext extends ParserRuleContext {
		public TerminalNode DATA() { return getToken(cobolParser.DATA, 0); }
		public List<Rec_nameContext> rec_name() {
			return getRuleContexts(Rec_nameContext.class);
		}
		public Rec_nameContext rec_name(int i) {
			return getRuleContext(Rec_nameContext.class,i);
		}
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Data_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_data_rec; }
	}

	public final Data_recContext data_rec() throws RecognitionException {
		Data_recContext _localctx = new Data_recContext(_ctx, getState());
		enterRule(_localctx, 242, RULE_data_rec);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3433);
			match(DATA);
			setState(3435); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3434);
				separator();
				}
				}
				setState(3437); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3459);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case RECORDS:
				{
				setState(3439);
				match(RECORDS);
				setState(3447);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					setState(3441); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3440);
						separator();
						}
						}
						setState(3443); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3445);
					match(ARE);
					}
				}

				}
				break;
			case RECORD:
				{
				setState(3449);
				match(RECORD);
				setState(3457);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					setState(3451); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3450);
						separator();
						}
						}
						setState(3453); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3455);
					match(IS);
					}
				}

				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(3461);
			rec_name();
			setState(3471);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,538,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3463); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3462);
						separator();
						}
						}
						setState(3465); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3467);
					rec_name();
					}
					} 
				}
				setState(3473);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,538,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rec_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Rec_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rec_name; }
	}

	public final Rec_nameContext rec_name() throws RecognitionException {
		Rec_nameContext _localctx = new Rec_nameContext(_ctx, getState());
		enterRule(_localctx, 244, RULE_rec_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3474);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_of_idContext extends ParserRuleContext {
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public Value_of_id_definitionContext value_of_id_definition() {
			return getRuleContext(Value_of_id_definitionContext.class,0);
		}
		public TerminalNode ID() { return getToken(cobolParser.ID, 0); }
		public TerminalNode FILE_ID() { return getToken(cobolParser.FILE_ID, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Value_of_idContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_of_id; }
	}

	public final Value_of_idContext value_of_id() throws RecognitionException {
		Value_of_idContext _localctx = new Value_of_idContext(_ctx, getState());
		enterRule(_localctx, 246, RULE_value_of_id);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3476);
			match(VALUE);
			setState(3478); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3477);
				separator();
				}
				}
				setState(3480); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3482);
			match(OF);
			setState(3484); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3483);
				separator();
				}
				}
				setState(3486); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3488);
			_la = _input.LA(1);
			if ( !(_la==FILE_ID || _la==ID) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(3490); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3489);
				separator();
				}
				}
				setState(3492); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3500);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(3494);
				match(IS);
				setState(3496); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3495);
					separator();
					}
					}
					setState(3498); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(3502);
			value_of_id_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Value_of_id_definitionContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Value_of_id_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_value_of_id_definition; }
	}

	public final Value_of_id_definitionContext value_of_id_definition() throws RecognitionException {
		Value_of_id_definitionContext _localctx = new Value_of_id_definitionContext(_ctx, getState());
		enterRule(_localctx, 248, RULE_value_of_id_definition);
		try {
			setState(3506);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(3504);
				match(STRING_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(3505);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class LabelContext extends ParserRuleContext {
		public TerminalNode LABEL() { return getToken(cobolParser.LABEL, 0); }
		public TerminalNode STANDARD() { return getToken(cobolParser.STANDARD, 0); }
		public TerminalNode OMITTED() { return getToken(cobolParser.OMITTED, 0); }
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public LabelContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_label; }
	}

	public final LabelContext label() throws RecognitionException {
		LabelContext _localctx = new LabelContext(_ctx, getState());
		enterRule(_localctx, 250, RULE_label);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3508);
			match(LABEL);
			setState(3510); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3509);
				separator();
				}
				}
				setState(3512); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3534);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case RECORDS:
				{
				setState(3514);
				match(RECORDS);
				setState(3522);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,547,_ctx) ) {
				case 1:
					{
					setState(3516); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3515);
						separator();
						}
						}
						setState(3518); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3520);
					match(ARE);
					}
					break;
				}
				}
				break;
			case RECORD:
				{
				setState(3524);
				match(RECORD);
				setState(3532);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,549,_ctx) ) {
				case 1:
					{
					setState(3526); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3525);
						separator();
						}
						}
						setState(3528); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3530);
					match(IS);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(3537); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3536);
				separator();
				}
				}
				setState(3539); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3541);
			_la = _input.LA(1);
			if ( !(_la==OMITTED || _la==STANDARD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RecordContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public Record_definitionContext record_definition() {
			return getRuleContext(Record_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public RecordContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record; }
	}

	public final RecordContext record() throws RecognitionException {
		RecordContext _localctx = new RecordContext(_ctx, getState());
		enterRule(_localctx, 252, RULE_record);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3543);
			match(RECORD);
			setState(3545); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3544);
				separator();
				}
				}
				setState(3547); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3549);
			record_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_definitionContext extends ParserRuleContext {
		public Longest_recContext longest_rec() {
			return getRuleContext(Longest_recContext.class,0);
		}
		public TerminalNode CONTAINS() { return getToken(cobolParser.CONTAINS, 0); }
		public Shortest_recContext shortest_rec() {
			return getRuleContext(Shortest_recContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public TerminalNode VARYING() { return getToken(cobolParser.VARYING, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public TerminalNode DEPENDING() { return getToken(cobolParser.DEPENDING, 0); }
		public Depending_itemContext depending_item() {
			return getRuleContext(Depending_itemContext.class,0);
		}
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Record_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_definition; }
	}

	public final Record_definitionContext record_definition() throws RecognitionException {
		Record_definitionContext _localctx = new Record_definitionContext(_ctx, getState());
		enterRule(_localctx, 254, RULE_record_definition);
		int _la;
		try {
			int _alt;
			setState(3674);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case CONTAINS:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(3557);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CONTAINS) {
					{
					setState(3551);
					match(CONTAINS);
					setState(3553); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3552);
						separator();
						}
						}
						setState(3555); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3571);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,557,_ctx) ) {
				case 1:
					{
					setState(3559);
					shortest_rec();
					setState(3561); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3560);
						separator();
						}
						}
						setState(3563); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3565);
					match(TO);
					setState(3567); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3566);
						separator();
						}
						}
						setState(3569); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
					break;
				}
				setState(3573);
				longest_rec();
				setState(3577);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,558,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(3574);
						separator();
						}
						} 
					}
					setState(3579);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,558,_ctx);
				}
				setState(3587);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CHARACTERS) {
					{
					setState(3580);
					match(CHARACTERS);
					setState(3584);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,559,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(3581);
							separator();
							}
							} 
						}
						setState(3586);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,559,_ctx);
					}
					}
				}

				}
				break;
			case IS:
			case VARYING:
				enterOuterAlt(_localctx, 2);
				{
				setState(3595);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3589);
					match(IS);
					setState(3591); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3590);
						separator();
						}
						}
						setState(3593); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3597);
				match(VARYING);
				setState(3599); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(3598);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(3601); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,563,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				setState(3609);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IN) {
					{
					setState(3603);
					match(IN);
					setState(3605); 
					_errHandler.sync(this);
					_alt = 1;
					do {
						switch (_alt) {
						case 1:
							{
							{
							setState(3604);
							separator();
							}
							}
							break;
						default:
							throw new NoViableAltException(this);
						}
						setState(3607); 
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,564,_ctx);
					} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
					}
				}

				setState(3618);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==SIZE) {
					{
					setState(3611);
					match(SIZE);
					setState(3615);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,566,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(3612);
							separator();
							}
							} 
						}
						setState(3617);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,566,_ctx);
					}
					}
				}

				setState(3629);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==FROM || _la==NUMERIC_LITERAL) {
					{
					setState(3626);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==FROM) {
						{
						setState(3620);
						match(FROM);
						setState(3622); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3621);
							separator();
							}
							}
							setState(3624); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						}
					}

					setState(3628);
					shortest_rec();
					}
				}

				setState(3639);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==TO) {
					{
					setState(3631);
					match(TO);
					setState(3633); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3632);
						separator();
						}
						}
						setState(3635); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3637);
					longest_rec();
					}
				}

				setState(3654);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,575,_ctx) ) {
				case 1:
					{
					setState(3644);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(3641);
						separator();
						}
						}
						setState(3646);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(3647);
					match(CHARACTERS);
					setState(3651);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,574,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(3648);
							separator();
							}
							} 
						}
						setState(3653);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,574,_ctx);
					}
					}
					break;
				}
				setState(3672);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==DEPENDING) {
					{
					setState(3656);
					match(DEPENDING);
					setState(3658); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3657);
						separator();
						}
						}
						setState(3660); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3668);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==ON) {
						{
						setState(3662);
						match(ON);
						setState(3664); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3663);
							separator();
							}
							}
							setState(3666); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						}
					}

					setState(3670);
					depending_item();
					}
				}

				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Depending_itemContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Depending_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_depending_item; }
	}

	public final Depending_itemContext depending_item() throws RecognitionException {
		Depending_itemContext _localctx = new Depending_itemContext(_ctx, getState());
		enterRule(_localctx, 256, RULE_depending_item);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3676);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Shortest_recContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Shortest_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_shortest_rec; }
	}

	public final Shortest_recContext shortest_rec() throws RecognitionException {
		Shortest_recContext _localctx = new Shortest_recContext(_ctx, getState());
		enterRule(_localctx, 258, RULE_shortest_rec);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3678);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Longest_recContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Longest_recContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_longest_rec; }
	}

	public final Longest_recContext longest_rec() throws RecognitionException {
		Longest_recContext _localctx = new Longest_recContext(_ctx, getState());
		enterRule(_localctx, 260, RULE_longest_rec);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3680);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_description_entryContext extends ParserRuleContext {
		public Level_numberContext level_number() {
			return getRuleContext(Level_numberContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<Screen_description_clauseContext> screen_description_clause() {
			return getRuleContexts(Screen_description_clauseContext.class);
		}
		public Screen_description_clauseContext screen_description_clause(int i) {
			return getRuleContext(Screen_description_clauseContext.class,i);
		}
		public Screen_nameContext screen_name() {
			return getRuleContext(Screen_nameContext.class,0);
		}
		public TerminalNode FILLER() { return getToken(cobolParser.FILLER, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Screen_description_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_description_entry; }
	}

	public final Screen_description_entryContext screen_description_entry() throws RecognitionException {
		Screen_description_entryContext _localctx = new Screen_description_entryContext(_ctx, getState());
		enterRule(_localctx, 262, RULE_screen_description_entry);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3682);
			level_number();
			setState(3692);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,583,_ctx) ) {
			case 1:
				{
				setState(3684); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3683);
					separator();
					}
					}
					setState(3686); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3690);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USER_DEFINED_WORD:
					{
					setState(3688);
					screen_name();
					}
					break;
				case FILLER:
					{
					setState(3689);
					match(FILLER);
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
			setState(3703);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(3695); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3694);
					separator();
					}
					}
					setState(3697); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3699);
				screen_description_clause();
				}
				}
				setState(3705);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3706);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Screen_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_name; }
	}

	public final Screen_nameContext screen_name() throws RecognitionException {
		Screen_nameContext _localctx = new Screen_nameContext(_ctx, getState());
		enterRule(_localctx, 264, RULE_screen_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3708);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Screen_description_clauseContext extends ParserRuleContext {
		public TerminalNode BLANK() { return getToken(cobolParser.BLANK, 0); }
		public TerminalNode SCREEN() { return getToken(cobolParser.SCREEN, 0); }
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FOREGROUND_COLOR() { return getToken(cobolParser.FOREGROUND_COLOR, 0); }
		public Color_numContext color_num() {
			return getRuleContext(Color_numContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode BACKGROUND_COLOR() { return getToken(cobolParser.BACKGROUND_COLOR, 0); }
		public TerminalNode AUTO() { return getToken(cobolParser.AUTO, 0); }
		public TerminalNode SECURE() { return getToken(cobolParser.SECURE, 0); }
		public TerminalNode REQUIRED() { return getToken(cobolParser.REQUIRED, 0); }
		public TerminalNode DISPLAY() { return getToken(cobolParser.DISPLAY, 0); }
		public TerminalNode USAGE() { return getToken(cobolParser.USAGE, 0); }
		public Sign_isContext sign_is() {
			return getRuleContext(Sign_isContext.class,0);
		}
		public TerminalNode FULL() { return getToken(cobolParser.FULL, 0); }
		public TerminalNode BELL() { return getToken(cobolParser.BELL, 0); }
		public TerminalNode BLINK() { return getToken(cobolParser.BLINK, 0); }
		public TerminalNode ERASE() { return getToken(cobolParser.ERASE, 0); }
		public TerminalNode EOL() { return getToken(cobolParser.EOL, 0); }
		public TerminalNode EOS() { return getToken(cobolParser.EOS, 0); }
		public TerminalNode HIGHLIGHT() { return getToken(cobolParser.HIGHLIGHT, 0); }
		public TerminalNode LOWLIGHT() { return getToken(cobolParser.LOWLIGHT, 0); }
		public TerminalNode REVERSE_VIDEO() { return getToken(cobolParser.REVERSE_VIDEO, 0); }
		public TerminalNode UNDERLINE() { return getToken(cobolParser.UNDERLINE, 0); }
		public Src_numberContext src_number() {
			return getRuleContext(Src_numberContext.class,0);
		}
		public TerminalNode NUMBER() { return getToken(cobolParser.NUMBER, 0); }
		public TerminalNode PLUS() { return getToken(cobolParser.PLUS, 0); }
		public TerminalNode COLUMN() { return getToken(cobolParser.COLUMN, 0); }
		public TerminalNode VALUE() { return getToken(cobolParser.VALUE, 0); }
		public Nonnumeric_literalContext nonnumeric_literal() {
			return getRuleContext(Nonnumeric_literalContext.class,0);
		}
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode WHEN() { return getToken(cobolParser.WHEN, 0); }
		public TerminalNode JUSTIFIED() { return getToken(cobolParser.JUSTIFIED, 0); }
		public TerminalNode JUST() { return getToken(cobolParser.JUST, 0); }
		public TerminalNode RIGHT() { return getToken(cobolParser.RIGHT, 0); }
		public PictureContext picture() {
			return getRuleContext(PictureContext.class,0);
		}
		public Scr_pic_usingContext scr_pic_using() {
			return getRuleContext(Scr_pic_usingContext.class,0);
		}
		public Scr_pic_fromContext scr_pic_from() {
			return getRuleContext(Scr_pic_fromContext.class,0);
		}
		public Scr_pic_toContext scr_pic_to() {
			return getRuleContext(Scr_pic_toContext.class,0);
		}
		public Screen_description_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_screen_description_clause; }
	}

	public final Screen_description_clauseContext screen_description_clause() throws RecognitionException {
		Screen_description_clauseContext _localctx = new Screen_description_clauseContext(_ctx, getState());
		enterRule(_localctx, 266, RULE_screen_description_clause);
		int _la;
		try {
			setState(3912);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,624,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(3710);
				match(BLANK);
				setState(3712); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3711);
					separator();
					}
					}
					setState(3714); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3716);
				_la = _input.LA(1);
				if ( !(_la==LINE || _la==SCREEN) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(3718);
				match(FOREGROUND_COLOR);
				setState(3720); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3719);
					separator();
					}
					}
					setState(3722); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3730);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3724);
					match(IS);
					setState(3726); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3725);
						separator();
						}
						}
						setState(3728); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3732);
				color_num();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(3734);
				match(BACKGROUND_COLOR);
				setState(3736); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3735);
					separator();
					}
					}
					setState(3738); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3746);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3740);
					match(IS);
					setState(3742); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3741);
						separator();
						}
						}
						setState(3744); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3748);
				color_num();
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(3750);
				match(AUTO);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(3751);
				match(SECURE);
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(3752);
				match(REQUIRED);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(3767);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==USAGE) {
					{
					setState(3753);
					match(USAGE);
					setState(3755); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3754);
						separator();
						}
						}
						setState(3757); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3765);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==IS) {
						{
						setState(3759);
						match(IS);
						setState(3761); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3760);
							separator();
							}
							}
							setState(3763); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						}
					}

					}
				}

				setState(3769);
				match(DISPLAY);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(3770);
				sign_is();
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(3771);
				match(FULL);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(3772);
				match(BELL);
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(3773);
				match(BLINK);
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(3774);
				match(ERASE);
				setState(3776); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3775);
					separator();
					}
					}
					setState(3778); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3780);
				_la = _input.LA(1);
				if ( !(_la==EOL || _la==EOS) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 13:
				enterOuterAlt(_localctx, 13);
				{
				setState(3782);
				match(HIGHLIGHT);
				}
				break;
			case 14:
				enterOuterAlt(_localctx, 14);
				{
				setState(3783);
				match(LOWLIGHT);
				}
				break;
			case 15:
				enterOuterAlt(_localctx, 15);
				{
				setState(3784);
				match(REVERSE_VIDEO);
				}
				break;
			case 16:
				enterOuterAlt(_localctx, 16);
				{
				setState(3785);
				match(UNDERLINE);
				}
				break;
			case 17:
				enterOuterAlt(_localctx, 17);
				{
				setState(3786);
				match(LINE);
				setState(3788); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3787);
					separator();
					}
					}
					setState(3790); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3798);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(3792);
					match(NUMBER);
					setState(3794); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3793);
						separator();
						}
						}
						setState(3796); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3806);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3800);
					match(IS);
					setState(3802); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3801);
						separator();
						}
						}
						setState(3804); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3814);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==PLUS) {
					{
					setState(3808);
					match(PLUS);
					setState(3810); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3809);
						separator();
						}
						}
						setState(3812); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3816);
				src_number();
				}
				break;
			case 18:
				enterOuterAlt(_localctx, 18);
				{
				setState(3818);
				match(COLUMN);
				setState(3820); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3819);
					separator();
					}
					}
					setState(3822); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3830);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NUMBER) {
					{
					setState(3824);
					match(NUMBER);
					setState(3826); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3825);
						separator();
						}
						}
						setState(3828); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3838);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3832);
					match(IS);
					setState(3834); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3833);
						separator();
						}
						}
						setState(3836); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3846);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==PLUS) {
					{
					setState(3840);
					match(PLUS);
					setState(3842); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3841);
						separator();
						}
						}
						setState(3844); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3848);
				src_number();
				}
				break;
			case 19:
				enterOuterAlt(_localctx, 19);
				{
				setState(3850);
				match(VALUE);
				setState(3852); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3851);
					separator();
					}
					}
					setState(3854); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3862);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(3856);
					match(IS);
					setState(3858); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3857);
						separator();
						}
						}
						setState(3860); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3864);
				nonnumeric_literal();
				}
				break;
			case 20:
				enterOuterAlt(_localctx, 20);
				{
				setState(3866);
				match(BLANK);
				setState(3868); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3867);
					separator();
					}
					}
					setState(3870); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3878);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WHEN) {
					{
					setState(3872);
					match(WHEN);
					setState(3874); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3873);
						separator();
						}
						}
						setState(3876); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(3880);
				match(ZERO);
				}
				break;
			case 21:
				enterOuterAlt(_localctx, 21);
				{
				setState(3882);
				_la = _input.LA(1);
				if ( !(_la==JUST || _la==JUSTIFIED) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(3890);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,619,_ctx) ) {
				case 1:
					{
					setState(3884); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(3883);
						separator();
						}
						}
						setState(3886); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(3888);
					match(RIGHT);
					}
					break;
				}
				}
				break;
			case 22:
				enterOuterAlt(_localctx, 22);
				{
				setState(3892);
				picture();
				setState(3894); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(3893);
					separator();
					}
					}
					setState(3896); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(3910);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case USING:
					{
					setState(3898);
					scr_pic_using();
					}
					break;
				case FROM:
					{
					setState(3899);
					scr_pic_from();
					setState(3907);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,622,_ctx) ) {
					case 1:
						{
						setState(3901); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(3900);
							separator();
							}
							}
							setState(3903); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(3905);
						scr_pic_to();
						}
						break;
					}
					}
					break;
				case TO:
					{
					setState(3909);
					scr_pic_to();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Scr_pic_usingContext extends ParserRuleContext {
		public TerminalNode USING() { return getToken(cobolParser.USING, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Scr_pic_usingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_scr_pic_using; }
	}

	public final Scr_pic_usingContext scr_pic_using() throws RecognitionException {
		Scr_pic_usingContext _localctx = new Scr_pic_usingContext(_ctx, getState());
		enterRule(_localctx, 268, RULE_scr_pic_using);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3914);
			match(USING);
			setState(3916); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3915);
				separator();
				}
				}
				setState(3918); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3920);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Scr_pic_fromContext extends ParserRuleContext {
		public TerminalNode FROM() { return getToken(cobolParser.FROM, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Nonnumeric_literalContext nonnumeric_literal() {
			return getRuleContext(Nonnumeric_literalContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Scr_pic_fromContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_scr_pic_from; }
	}

	public final Scr_pic_fromContext scr_pic_from() throws RecognitionException {
		Scr_pic_fromContext _localctx = new Scr_pic_fromContext(_ctx, getState());
		enterRule(_localctx, 270, RULE_scr_pic_from);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3922);
			match(FROM);
			setState(3924); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3923);
				separator();
				}
				}
				setState(3926); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3930);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				{
				setState(3928);
				qualified_data_item();
				}
				break;
			case STRING_LITERAL:
				{
				setState(3929);
				nonnumeric_literal();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Scr_pic_toContext extends ParserRuleContext {
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Scr_pic_toContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_scr_pic_to; }
	}

	public final Scr_pic_toContext scr_pic_to() throws RecognitionException {
		Scr_pic_toContext _localctx = new Scr_pic_toContext(_ctx, getState());
		enterRule(_localctx, 272, RULE_scr_pic_to);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3932);
			match(TO);
			setState(3934); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3933);
				separator();
				}
				}
				setState(3936); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3938);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Nonnumeric_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Nonnumeric_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_nonnumeric_literal; }
	}

	public final Nonnumeric_literalContext nonnumeric_literal() throws RecognitionException {
		Nonnumeric_literalContext _localctx = new Nonnumeric_literalContext(_ctx, getState());
		enterRule(_localctx, 274, RULE_nonnumeric_literal);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3940);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Src_numberContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Src_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_src_number; }
	}

	public final Src_numberContext src_number() throws RecognitionException {
		Src_numberContext _localctx = new Src_numberContext(_ctx, getState());
		enterRule(_localctx, 276, RULE_src_number);
		try {
			setState(3944);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(3942);
				qualified_data_item();
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(3943);
				match(NUMERIC_LITERAL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Color_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Color_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_color_num; }
	}

	public final Color_numContext color_num() throws RecognitionException {
		Color_numContext _localctx = new Color_numContext(_ctx, getState());
		enterRule(_localctx, 278, RULE_color_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(3946);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Identification_divisionContext extends ParserRuleContext {
		public TerminalNode IDENTIFICATION_IN_A_AREA() { return getToken(cobolParser.IDENTIFICATION_IN_A_AREA, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Identification_division_paragraphContext> identification_division_paragraph() {
			return getRuleContexts(Identification_division_paragraphContext.class);
		}
		public Identification_division_paragraphContext identification_division_paragraph(int i) {
			return getRuleContext(Identification_division_paragraphContext.class,i);
		}
		public Identification_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identification_division; }
	}

	public final Identification_divisionContext identification_division() throws RecognitionException {
		Identification_divisionContext _localctx = new Identification_divisionContext(_ctx, getState());
		enterRule(_localctx, 280, RULE_identification_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3948);
			match(IDENTIFICATION_IN_A_AREA);
			setState(3950); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(3949);
				separator();
				}
				}
				setState(3952); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(3954);
			match(DIVISION);
			setState(3958);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(3955);
				separator();
				}
				}
				setState(3960);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3961);
			match(DOT_);
			setState(3965);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,632,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3962);
					separator();
					}
					} 
				}
				setState(3967);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,632,_ctx);
			}
			setState(3971);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,633,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3968);
					identification_division_paragraph();
					}
					} 
				}
				setState(3973);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,633,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Identification_division_paragraphContext extends ParserRuleContext {
		public Program_idContext program_id() {
			return getRuleContext(Program_idContext.class,0);
		}
		public AuthorContext author() {
			return getRuleContext(AuthorContext.class,0);
		}
		public InstallationContext installation() {
			return getRuleContext(InstallationContext.class,0);
		}
		public Date_writtenContext date_written() {
			return getRuleContext(Date_writtenContext.class,0);
		}
		public Date_compiledContext date_compiled() {
			return getRuleContext(Date_compiledContext.class,0);
		}
		public SecurityContext security() {
			return getRuleContext(SecurityContext.class,0);
		}
		public Options_Context options_() {
			return getRuleContext(Options_Context.class,0);
		}
		public SeparatorContext separator() {
			return getRuleContext(SeparatorContext.class,0);
		}
		public Identification_division_paragraphContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identification_division_paragraph; }
	}

	public final Identification_division_paragraphContext identification_division_paragraph() throws RecognitionException {
		Identification_division_paragraphContext _localctx = new Identification_division_paragraphContext(_ctx, getState());
		enterRule(_localctx, 282, RULE_identification_division_paragraph);
		try {
			setState(3982);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case PROGRAM_ID:
				enterOuterAlt(_localctx, 1);
				{
				setState(3974);
				program_id();
				}
				break;
			case AUTHOR:
				enterOuterAlt(_localctx, 2);
				{
				setState(3975);
				author();
				}
				break;
			case INSTALLATION:
				enterOuterAlt(_localctx, 3);
				{
				setState(3976);
				installation();
				}
				break;
			case DATE_WRITTEN:
				enterOuterAlt(_localctx, 4);
				{
				setState(3977);
				date_written();
				}
				break;
			case DATE_COMPILED:
				enterOuterAlt(_localctx, 5);
				{
				setState(3978);
				date_compiled();
				}
				break;
			case SECURITY:
				enterOuterAlt(_localctx, 6);
				{
				setState(3979);
				security();
				}
				break;
			case OPTIONS:
				enterOuterAlt(_localctx, 7);
				{
				setState(3980);
				options_();
				}
				break;
			case START_SLASH_:
			case START_STAR_:
			case COMMA_:
			case SEMI_:
			case START_FOUR_SPACES:
			case WHITESPACE:
			case NEWLINE:
				enterOuterAlt(_localctx, 8);
				{
				setState(3981);
				separator();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Program_idContext extends ParserRuleContext {
		public TerminalNode PROGRAM_ID() { return getToken(cobolParser.PROGRAM_ID, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public Program_nameContext program_name() {
			return getRuleContext(Program_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Is_programContext is_program() {
			return getRuleContext(Is_programContext.class,0);
		}
		public With_identContext with_ident() {
			return getRuleContext(With_identContext.class,0);
		}
		public Program_idContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program_id; }
	}

	public final Program_idContext program_id() throws RecognitionException {
		Program_idContext _localctx = new Program_idContext(_ctx, getState());
		enterRule(_localctx, 284, RULE_program_id);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(3984);
			match(PROGRAM_ID);
			setState(3988);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(3985);
				separator();
				}
				}
				setState(3990);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3991);
			match(DOT_);
			setState(3995);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(3992);
				separator();
				}
				}
				setState(3997);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(3998);
			program_name();
			setState(4002);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,637,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(3999);
					separator();
					}
					} 
				}
				setState(4004);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,637,_ctx);
			}
			setState(4006);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==COMMON || _la==INITIAL || _la==IS) {
				{
				setState(4005);
				is_program();
				}
			}

			setState(4011);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,639,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4008);
					separator();
					}
					} 
				}
				setState(4013);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,639,_ctx);
			}
			setState(4015);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IDENT || _la==WITH) {
				{
				setState(4014);
				with_ident();
				}
			}

			setState(4020);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4017);
				separator();
				}
				}
				setState(4022);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4023);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Program_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Program_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program_name; }
	}

	public final Program_nameContext program_name() throws RecognitionException {
		Program_nameContext _localctx = new Program_nameContext(_ctx, getState());
		enterRule(_localctx, 286, RULE_program_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4025);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Is_programContext extends ParserRuleContext {
		public TerminalNode COMMON() { return getToken(cobolParser.COMMON, 0); }
		public TerminalNode INITIAL() { return getToken(cobolParser.INITIAL, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Is_programContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_is_program; }
	}

	public final Is_programContext is_program() throws RecognitionException {
		Is_programContext _localctx = new Is_programContext(_ctx, getState());
		enterRule(_localctx, 288, RULE_is_program);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4033);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(4027);
				match(IS);
				setState(4029); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4028);
					separator();
					}
					}
					setState(4031); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4035);
			_la = _input.LA(1);
			if ( !(_la==COMMON || _la==INITIAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(4043);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,645,_ctx) ) {
			case 1:
				{
				setState(4037); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4036);
					separator();
					}
					}
					setState(4039); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4041);
				match(PROGRAM);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class With_identContext extends ParserRuleContext {
		public TerminalNode IDENT() { return getToken(cobolParser.IDENT, 0); }
		public Ident_stringContext ident_string() {
			return getRuleContext(Ident_stringContext.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public With_identContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_with_ident; }
	}

	public final With_identContext with_ident() throws RecognitionException {
		With_identContext _localctx = new With_identContext(_ctx, getState());
		enterRule(_localctx, 290, RULE_with_ident);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4051);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WITH) {
				{
				setState(4045);
				match(WITH);
				setState(4047); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4046);
					separator();
					}
					}
					setState(4049); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4053);
			match(IDENT);
			setState(4055); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4054);
				separator();
				}
				}
				setState(4057); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4059);
			ident_string();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Ident_stringContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Ident_stringContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_ident_string; }
	}

	public final Ident_stringContext ident_string() throws RecognitionException {
		Ident_stringContext _localctx = new Ident_stringContext(_ctx, getState());
		enterRule(_localctx, 292, RULE_ident_string);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4061);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Comment_entryContext extends ParserRuleContext {
		public TerminalNode START_FOUR_SPACES() { return getToken(cobolParser.START_FOUR_SPACES, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public Line_commentContext line_comment() {
			return getRuleContext(Line_commentContext.class,0);
		}
		public Comment_entryContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_comment_entry; }
	}

	public final Comment_entryContext comment_entry() throws RecognitionException {
		Comment_entryContext _localctx = new Comment_entryContext(_ctx, getState());
		enterRule(_localctx, 294, RULE_comment_entry);
		int _la;
		try {
			setState(4072);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case START_FOUR_SPACES:
				enterOuterAlt(_localctx, 1);
				{
				setState(4063);
				match(START_FOUR_SPACES);
				setState(4067);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA) | (1L << COMMON) | (1L << COMP) | (1L << COMPUTATIONAL))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DECLARATIVES_IN_A_AREA - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)) | (1L << (END_DIVIDE - 64)) | (1L << (END_EVALUATE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_IF - 128)) | (1L << (END_IN_A_AREA - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)) | (1L << (IDENTIFICATION_IN_A_AREA - 128)) | (1L << (IF - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)) | (1L << (OVERFLOW - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)) | (1L << (SEQUENTIAL - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)) | (1L << (WRITE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
					{
					{
					setState(4064);
					_la = _input.LA(1);
					if ( _la <= 0 || (_la==NEWLINE) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					}
					setState(4069);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(4070);
				match(NEWLINE);
				}
				break;
			case START_SLASH_:
			case START_STAR_:
				enterOuterAlt(_localctx, 2);
				{
				setState(4071);
				line_comment();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class AuthorContext extends ParserRuleContext {
		public TerminalNode AUTHOR() { return getToken(cobolParser.AUTHOR, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public AuthorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_author; }
	}

	public final AuthorContext author() throws RecognitionException {
		AuthorContext _localctx = new AuthorContext(_ctx, getState());
		enterRule(_localctx, 296, RULE_author);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4074);
			match(AUTHOR);
			setState(4078);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4075);
				separator();
				}
				}
				setState(4080);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4081);
			match(DOT_);
			setState(4085);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA) | (1L << COMMON) | (1L << COMP) | (1L << COMPUTATIONAL))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DECLARATIVES_IN_A_AREA - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)) | (1L << (END_DIVIDE - 64)) | (1L << (END_EVALUATE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_IF - 128)) | (1L << (END_IN_A_AREA - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)) | (1L << (IDENTIFICATION_IN_A_AREA - 128)) | (1L << (IF - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)) | (1L << (OVERFLOW - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)) | (1L << (SEQUENTIAL - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)) | (1L << (WRITE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(4082);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(4087);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4088);
			match(NEWLINE);
			setState(4092);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,653,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4089);
					comment_entry();
					}
					} 
				}
				setState(4094);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,653,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class InstallationContext extends ParserRuleContext {
		public TerminalNode INSTALLATION() { return getToken(cobolParser.INSTALLATION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public InstallationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_installation; }
	}

	public final InstallationContext installation() throws RecognitionException {
		InstallationContext _localctx = new InstallationContext(_ctx, getState());
		enterRule(_localctx, 298, RULE_installation);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4095);
			match(INSTALLATION);
			setState(4099);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4096);
				separator();
				}
				}
				setState(4101);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4102);
			match(DOT_);
			setState(4106);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA) | (1L << COMMON) | (1L << COMP) | (1L << COMPUTATIONAL))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DECLARATIVES_IN_A_AREA - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)) | (1L << (END_DIVIDE - 64)) | (1L << (END_EVALUATE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_IF - 128)) | (1L << (END_IN_A_AREA - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)) | (1L << (IDENTIFICATION_IN_A_AREA - 128)) | (1L << (IF - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)) | (1L << (OVERFLOW - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)) | (1L << (SEQUENTIAL - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)) | (1L << (WRITE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(4103);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(4108);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4109);
			match(NEWLINE);
			setState(4113);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,656,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4110);
					comment_entry();
					}
					} 
				}
				setState(4115);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,656,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Date_writtenContext extends ParserRuleContext {
		public TerminalNode DATE_WRITTEN() { return getToken(cobolParser.DATE_WRITTEN, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public Date_writtenContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_date_written; }
	}

	public final Date_writtenContext date_written() throws RecognitionException {
		Date_writtenContext _localctx = new Date_writtenContext(_ctx, getState());
		enterRule(_localctx, 300, RULE_date_written);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4116);
			match(DATE_WRITTEN);
			setState(4120);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4117);
				separator();
				}
				}
				setState(4122);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4123);
			match(DOT_);
			setState(4127);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA) | (1L << COMMON) | (1L << COMP) | (1L << COMPUTATIONAL))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DECLARATIVES_IN_A_AREA - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)) | (1L << (END_DIVIDE - 64)) | (1L << (END_EVALUATE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_IF - 128)) | (1L << (END_IN_A_AREA - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)) | (1L << (IDENTIFICATION_IN_A_AREA - 128)) | (1L << (IF - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)) | (1L << (OVERFLOW - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)) | (1L << (SEQUENTIAL - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)) | (1L << (WRITE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(4124);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(4129);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4130);
			match(NEWLINE);
			setState(4134);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,659,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4131);
					comment_entry();
					}
					} 
				}
				setState(4136);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,659,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Date_compiledContext extends ParserRuleContext {
		public TerminalNode DATE_COMPILED() { return getToken(cobolParser.DATE_COMPILED, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public Date_compiledContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_date_compiled; }
	}

	public final Date_compiledContext date_compiled() throws RecognitionException {
		Date_compiledContext _localctx = new Date_compiledContext(_ctx, getState());
		enterRule(_localctx, 302, RULE_date_compiled);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4137);
			match(DATE_COMPILED);
			setState(4141);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4138);
				separator();
				}
				}
				setState(4143);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4144);
			match(DOT_);
			setState(4148);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA) | (1L << COMMON) | (1L << COMP) | (1L << COMPUTATIONAL))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DECLARATIVES_IN_A_AREA - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)) | (1L << (END_DIVIDE - 64)) | (1L << (END_EVALUATE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_IF - 128)) | (1L << (END_IN_A_AREA - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)) | (1L << (IDENTIFICATION_IN_A_AREA - 128)) | (1L << (IF - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)) | (1L << (OVERFLOW - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)) | (1L << (SEQUENTIAL - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)) | (1L << (WRITE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(4145);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(4150);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4151);
			match(NEWLINE);
			setState(4155);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,662,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4152);
					comment_entry();
					}
					} 
				}
				setState(4157);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,662,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SecurityContext extends ParserRuleContext {
		public TerminalNode SECURITY() { return getToken(cobolParser.SECURITY, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<TerminalNode> NEWLINE() { return getTokens(cobolParser.NEWLINE); }
		public TerminalNode NEWLINE(int i) {
			return getToken(cobolParser.NEWLINE, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Comment_entryContext> comment_entry() {
			return getRuleContexts(Comment_entryContext.class);
		}
		public Comment_entryContext comment_entry(int i) {
			return getRuleContext(Comment_entryContext.class,i);
		}
		public SecurityContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_security; }
	}

	public final SecurityContext security() throws RecognitionException {
		SecurityContext _localctx = new SecurityContext(_ctx, getState());
		enterRule(_localctx, 304, RULE_security);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4158);
			match(SECURITY);
			setState(4162);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4159);
				separator();
				}
				}
				setState(4164);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4165);
			match(DOT_);
			setState(4169);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ACCEPT) | (1L << ACCESS) | (1L << ADD) | (1L << AFTER) | (1L << ALL) | (1L << ALPHA) | (1L << ALPHABET) | (1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER) | (1L << ALSO) | (1L << ALTER) | (1L << ALTERNATE) | (1L << AND) | (1L << APPLY) | (1L << ARE) | (1L << AREA) | (1L << AREAS) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << ARITHMETIC) | (1L << ASCENDING) | (1L << ASCII) | (1L << ASSIGN) | (1L << AT) | (1L << AUTHOR) | (1L << AUTO) | (1L << AUTOMATIC) | (1L << AUTOTERMINATE) | (1L << BACKGROUND_COLOR) | (1L << BEFORE) | (1L << BELL) | (1L << BINARY) | (1L << BINARY_CHAR) | (1L << BINARY_DOUBLE) | (1L << BINARY_LONG) | (1L << BINARY_SHORT) | (1L << BLANK) | (1L << BLINK) | (1L << BLINKING) | (1L << BLOCK) | (1L << BOLD) | (1L << BOTTOM) | (1L << BY) | (1L << C01) | (1L << CALL) | (1L << CANCEL) | (1L << CARD_READER) | (1L << CF) | (1L << CH) | (1L << CHARACTER) | (1L << CHARACTERS) | (1L << CLASS) | (1L << CLOCK_UNITS) | (1L << CLOSE) | (1L << CODE) | (1L << CODE_SET) | (1L << COLLATING) | (1L << COLUMN) | (1L << COMMA) | (1L << COMMON) | (1L << COMP) | (1L << COMPUTATIONAL))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (COMPUTATIONAL_1 - 64)) | (1L << (COMPUTATIONAL_2 - 64)) | (1L << (COMPUTATIONAL_3 - 64)) | (1L << (COMPUTATIONAL_4 - 64)) | (1L << (COMPUTATIONAL_5 - 64)) | (1L << (COMPUTATIONAL_X - 64)) | (1L << (COMPUTE - 64)) | (1L << (COMP_1 - 64)) | (1L << (COMP_2 - 64)) | (1L << (COMP_3 - 64)) | (1L << (COMP_4 - 64)) | (1L << (COMP_5 - 64)) | (1L << (COMP_X - 64)) | (1L << (CONFIGURATION - 64)) | (1L << (CONSOLE - 64)) | (1L << (CONTAINS - 64)) | (1L << (CONTIGUOUS - 64)) | (1L << (CONTIGUOUS_BEST_TRY - 64)) | (1L << (CONTINUE - 64)) | (1L << (CONTROL - 64)) | (1L << (CONTROLS - 64)) | (1L << (CONVERSION - 64)) | (1L << (CONVERTING - 64)) | (1L << (COPY - 64)) | (1L << (CRT - 64)) | (1L << (CURRENCY - 64)) | (1L << (CURRENT - 64)) | (1L << (CURSOR - 64)) | (1L << (DATA - 64)) | (1L << (DATE - 64)) | (1L << (DATE_COMPILED - 64)) | (1L << (DATE_WRITTEN - 64)) | (1L << (DAY - 64)) | (1L << (DAY_OF_WEEK - 64)) | (1L << (DE - 64)) | (1L << (DEBUGGING - 64)) | (1L << (DECIMAL_POINT - 64)) | (1L << (DECLARATIVES - 64)) | (1L << (DECLARATIVES_IN_A_AREA - 64)) | (1L << (DEFAULT - 64)) | (1L << (DEFERRED_WRITE - 64)) | (1L << (DELETE - 64)) | (1L << (DELIMITER - 64)) | (1L << (DEPENDING - 64)) | (1L << (DESCENDING - 64)) | (1L << (DETAIL - 64)) | (1L << (DISK - 64)) | (1L << (DISPLAY - 64)) | (1L << (DIVIDE - 64)) | (1L << (DIVISION - 64)) | (1L << (DOWN - 64)) | (1L << (DUPLICATES - 64)) | (1L << (DYNAMIC - 64)) | (1L << (EBCDIC - 64)) | (1L << (ECHO - 64)) | (1L << (EDITING - 64)) | (1L << (END - 64)) | (1L << (END_ACCEPT - 64)) | (1L << (END_ADD - 64)) | (1L << (END_CALL - 64)) | (1L << (END_COMPUTE - 64)) | (1L << (END_DELETE - 64)) | (1L << (END_DIVIDE - 64)) | (1L << (END_EVALUATE - 64)))) != 0) || ((((_la - 128)) & ~0x3f) == 0 && ((1L << (_la - 128)) & ((1L << (END_IF - 128)) | (1L << (END_IN_A_AREA - 128)) | (1L << (END_MULTIPLY - 128)) | (1L << (END_OF_PAGE - 128)) | (1L << (END_PERFORM - 128)) | (1L << (END_READ - 128)) | (1L << (END_RETURN - 128)) | (1L << (END_REWRITE - 128)) | (1L << (END_SEARCH - 128)) | (1L << (END_START - 128)) | (1L << (END_STRING - 128)) | (1L << (END_SUBTRACT - 128)) | (1L << (END_UNSTRING - 128)) | (1L << (END_WRITE - 128)) | (1L << (ENVIRONMENT - 128)) | (1L << (ENVIRONMENT_NAME - 128)) | (1L << (ENVIRONMENT_VALUE - 128)) | (1L << (EOL - 128)) | (1L << (EOS - 128)) | (1L << (EQUAL - 128)) | (1L << (ERASE - 128)) | (1L << (ERROR - 128)) | (1L << (EVALUATE - 128)) | (1L << (EVERY - 128)) | (1L << (EXCEPTION - 128)) | (1L << (EXCLUSIVE - 128)) | (1L << (EXIT - 128)) | (1L << (EXTEND - 128)) | (1L << (EXTENSION - 128)) | (1L << (EXTERNAL - 128)) | (1L << (FAILURE - 128)) | (1L << (FD - 128)) | (1L << (FILE - 128)) | (1L << (FILE_CONTROL - 128)) | (1L << (FILE_ID - 128)) | (1L << (FILLER - 128)) | (1L << (FILL_SIZE - 128)) | (1L << (FINAL - 128)) | (1L << (FIRST - 128)) | (1L << (FLOAT_EXTENDED - 128)) | (1L << (FLOAT_LONG - 128)) | (1L << (FLOAT_SHORT - 128)) | (1L << (FOOTING - 128)) | (1L << (FOR - 128)) | (1L << (FOREGROUND_COLOR - 128)) | (1L << (FROM - 128)) | (1L << (FULL - 128)) | (1L << (FUNCTION - 128)) | (1L << (GENERATE - 128)) | (1L << (GIVING - 128)) | (1L << (GLOBAL - 128)) | (1L << (GO - 128)) | (1L << (GREATER - 128)) | (1L << (GROUP - 128)) | (1L << (HEADING - 128)) | (1L << (HIGHLIGHT - 128)) | (1L << (HIGH_VALUE - 128)) | (1L << (HIGH_VALUES - 128)) | (1L << (I64 - 128)) | (1L << (ID - 128)) | (1L << (IDENT - 128)) | (1L << (IDENTIFICATION - 128)) | (1L << (IDENTIFICATION_IN_A_AREA - 128)) | (1L << (IF - 128)))) != 0) || ((((_la - 192)) & ~0x3f) == 0 && ((1L << (_la - 192)) & ((1L << (IN - 192)) | (1L << (INDEX - 192)) | (1L << (INDEXED - 192)) | (1L << (INDICATE - 192)) | (1L << (INITIAL - 192)) | (1L << (INITIALIZE - 192)) | (1L << (INITIATE - 192)) | (1L << (INPUT - 192)) | (1L << (INPUT_OUTPUT - 192)) | (1L << (INSPECT - 192)) | (1L << (INSTALLATION - 192)) | (1L << (INVALID - 192)) | (1L << (IS - 192)) | (1L << (I_O - 192)) | (1L << (I_O_CONTROL - 192)) | (1L << (JUST - 192)) | (1L << (JUSTIFIED - 192)) | (1L << (KEY - 192)) | (1L << (LABEL - 192)) | (1L << (LAST - 192)) | (1L << (LEADING - 192)) | (1L << (LEFT - 192)) | (1L << (LESS - 192)) | (1L << (LIMIT - 192)) | (1L << (LIMITS - 192)) | (1L << (LINAGE - 192)) | (1L << (LINE - 192)) | (1L << (LINES - 192)) | (1L << (LINE_PRINTER - 192)) | (1L << (LINKAGE - 192)) | (1L << (LOCK - 192)) | (1L << (LOCK_HOLDING - 192)) | (1L << (LOWLIGHT - 192)) | (1L << (LOW_VALUE - 192)) | (1L << (LOW_VALUES - 192)) | (1L << (MANUAL - 192)) | (1L << (MASS_INSERT - 192)) | (1L << (MEMORY - 192)) | (1L << (MERGE - 192)) | (1L << (MODE - 192)) | (1L << (MODULES - 192)) | (1L << (MOVE - 192)) | (1L << (MULTIPLE - 192)) | (1L << (MULTIPLY - 192)) | (1L << (NATIVE - 192)) | (1L << (NEGATIVE - 192)) | (1L << (NEXT - 192)) | (1L << (NO - 192)) | (1L << (NOT - 192)) | (1L << (NUMBER - 192)) | (1L << (NUMERIC - 192)) | (1L << (OBJECT_COMPUTER - 192)) | (1L << (OCCURS - 192)) | (1L << (OF - 192)) | (1L << (OFF - 192)) | (1L << (OMITTED - 192)) | (1L << (ON - 192)) | (1L << (OPEN - 192)) | (1L << (OPTIONAL - 192)) | (1L << (OPTIONS - 192)) | (1L << (OR - 192)) | (1L << (ORGANIZATION - 192)) | (1L << (OUTPUT - 192)) | (1L << (OVERFLOW - 192)))) != 0) || ((((_la - 256)) & ~0x3f) == 0 && ((1L << (_la - 256)) & ((1L << (PACKED_DECIMAL - 256)) | (1L << (PADDING - 256)) | (1L << (PAGE - 256)) | (1L << (PAPER_TAPE_PUNCH - 256)) | (1L << (PAPER_TAPE_READER - 256)) | (1L << (PERFORM - 256)) | (1L << (PF - 256)) | (1L << (PH - 256)) | (1L << (PIC - 256)) | (1L << (PICTURE - 256)) | (1L << (PLUS - 256)) | (1L << (POINTER - 256)) | (1L << (POINTER_64 - 256)) | (1L << (POSITION - 256)) | (1L << (POSITIVE - 256)) | (1L << (PREALLOCATION - 256)) | (1L << (PRINTER - 256)) | (1L << (PRINT_CONTROL - 256)) | (1L << (PROCEDURE - 256)) | (1L << (PROGRAM - 256)) | (1L << (PROGRAM_ID - 256)) | (1L << (PROTECTED - 256)) | (1L << (QUOTE - 256)) | (1L << (QUOTES - 256)) | (1L << (RANDOM - 256)) | (1L << (RD - 256)) | (1L << (READ - 256)) | (1L << (RECORD - 256)) | (1L << (RECORDS - 256)) | (1L << (REDEFINES - 256)) | (1L << (REEL - 256)) | (1L << (REFERENCE - 256)) | (1L << (RELATIVE - 256)) | (1L << (RELEASE - 256)) | (1L << (RENAMES - 256)) | (1L << (REPLACE - 256)) | (1L << (REPLACING - 256)) | (1L << (REPORT - 256)) | (1L << (REPORTING - 256)) | (1L << (REPORTS - 256)) | (1L << (REQUIRED - 256)) | (1L << (RERUN - 256)) | (1L << (RESERVE - 256)) | (1L << (RESET - 256)) | (1L << (RETURN - 256)) | (1L << (REVERSED - 256)) | (1L << (REVERSE_VIDEO - 256)) | (1L << (REWRITE - 256)) | (1L << (RF - 256)) | (1L << (RH - 256)) | (1L << (RIGHT - 256)) | (1L << (ROLLBACK - 256)) | (1L << (SAME - 256)) | (1L << (SCREEN - 256)) | (1L << (SD - 256)) | (1L << (SEARCH - 256)) | (1L << (SECTION - 256)) | (1L << (SECURE - 256)) | (1L << (SECURITY - 256)) | (1L << (SEGMENT_LIMIT - 256)) | (1L << (SELECT - 256)) | (1L << (SEPARATE - 256)) | (1L << (SEQUENCE - 256)) | (1L << (SEQUENTIAL - 256)))) != 0) || ((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (SET - 320)) | (1L << (SIGN - 320)) | (1L << (SIGNED - 320)) | (1L << (SIZE - 320)) | (1L << (SORT - 320)) | (1L << (SORT_MERGE - 320)) | (1L << (SOURCE - 320)) | (1L << (SOURCE_COMPUTER - 320)) | (1L << (SPACE - 320)) | (1L << (SPACES - 320)) | (1L << (SPECIAL_NAMES - 320)) | (1L << (STANDARD - 320)) | (1L << (STANDARD_1 - 320)) | (1L << (STANDARD_2 - 320)) | (1L << (START - 320)) | (1L << (STATUS - 320)) | (1L << (STOP - 320)) | (1L << (STRING - 320)) | (1L << (SUBTRACT - 320)) | (1L << (SUCCESS - 320)) | (1L << (SUM - 320)) | (1L << (SUPPRESS - 320)) | (1L << (SWITCH - 320)) | (1L << (SYMBOL - 320)) | (1L << (SYMBOLIC - 320)) | (1L << (SYNC - 320)) | (1L << (SYNCHRONIZED - 320)) | (1L << (SYSERR - 320)) | (1L << (SYSIN - 320)) | (1L << (SYSOUT - 320)) | (1L << (TALLYING - 320)) | (1L << (TAPE - 320)) | (1L << (TERMINATE - 320)) | (1L << (THAN - 320)) | (1L << (THROUGH - 320)) | (1L << (THRU - 320)) | (1L << (TIME - 320)) | (1L << (TIMES - 320)) | (1L << (TO - 320)) | (1L << (TOP - 320)) | (1L << (TRAILING - 320)) | (1L << (TRUE - 320)) | (1L << (TYPE - 320)) | (1L << (UNDERLINE - 320)) | (1L << (UNDERLINED - 320)) | (1L << (UNIT - 320)) | (1L << (UNLOCK - 320)) | (1L << (UNSIGNED - 320)) | (1L << (UNSTRING - 320)) | (1L << (UP - 320)) | (1L << (UPON - 320)) | (1L << (USAGE - 320)) | (1L << (USE - 320)) | (1L << (USING - 320)) | (1L << (VALUE - 320)) | (1L << (VALUES - 320)) | (1L << (VARYING - 320)) | (1L << (VAX - 320)) | (1L << (WHEN - 320)) | (1L << (WINDOW - 320)) | (1L << (WITH - 320)) | (1L << (WORDS - 320)) | (1L << (WORKING_STORAGE - 320)) | (1L << (WRITE - 320)))) != 0) || ((((_la - 384)) & ~0x3f) == 0 && ((1L << (_la - 384)) & ((1L << (YYYYDDD - 384)) | (1L << (YYYYMMDD - 384)) | (1L << (ZERO - 384)) | (1L << (ZEROES - 384)) | (1L << (ZEROS - 384)) | (1L << (START_SLASH_ - 384)) | (1L << (START_STAR_ - 384)) | (1L << (EXCLAM_ - 384)) | (1L << (UNDER_ - 384)) | (1L << (PLUS_ - 384)) | (1L << (MINUS_ - 384)) | (1L << (STAR_ - 384)) | (1L << (SLASH_ - 384)) | (1L << (COMMA_ - 384)) | (1L << (SEMI_ - 384)) | (1L << (COLON_ - 384)) | (1L << (EQUAL_ - 384)) | (1L << (LT_ - 384)) | (1L << (LE_ - 384)) | (1L << (GE_ - 384)) | (1L << (GT_ - 384)) | (1L << (LPAREN_ - 384)) | (1L << (RPAREN_ - 384)) | (1L << (LBRACK_ - 384)) | (1L << (RBRACK_ - 384)) | (1L << (POINTER_ - 384)) | (1L << (ATP_ - 384)) | (1L << (DOT_ - 384)) | (1L << (LCURLY_ - 384)) | (1L << (RCURLY_ - 384)) | (1L << (STRING_LITERAL - 384)) | (1L << (NUMERIC_LITERAL - 384)) | (1L << (HEX_LITERAL - 384)) | (1L << (USER_DEFINED_WORD - 384)) | (1L << (START_FOUR_SPACES - 384)) | (1L << (WHITESPACE - 384)))) != 0)) {
				{
				{
				setState(4166);
				_la = _input.LA(1);
				if ( _la <= 0 || (_la==NEWLINE) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				}
				setState(4171);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4172);
			match(NEWLINE);
			setState(4176);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,665,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4173);
					comment_entry();
					}
					} 
				}
				setState(4178);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,665,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Options_Context extends ParserRuleContext {
		public TerminalNode OPTIONS() { return getToken(cobolParser.OPTIONS, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public ArithmeticContext arithmetic() {
			return getRuleContext(ArithmeticContext.class,0);
		}
		public Options_Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_options_; }
	}

	public final Options_Context options_() throws RecognitionException {
		Options_Context _localctx = new Options_Context(_ctx, getState());
		enterRule(_localctx, 306, RULE_options_);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4179);
			match(OPTIONS);
			setState(4183);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4180);
				separator();
				}
				}
				setState(4185);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4186);
			match(DOT_);
			setState(4190);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,667,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4187);
					separator();
					}
					} 
				}
				setState(4192);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,667,_ctx);
			}
			setState(4194);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ARITHMETIC) {
				{
				setState(4193);
				arithmetic();
				}
			}

			setState(4199);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,669,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4196);
					separator();
					}
					} 
				}
				setState(4201);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,669,_ctx);
			}
			setState(4203);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==DOT_) {
				{
				setState(4202);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArithmeticContext extends ParserRuleContext {
		public TerminalNode ARITHMETIC() { return getToken(cobolParser.ARITHMETIC, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public TerminalNode NATIVE() { return getToken(cobolParser.NATIVE, 0); }
		public TerminalNode STANDARD() { return getToken(cobolParser.STANDARD, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public ArithmeticContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arithmetic; }
	}

	public final ArithmeticContext arithmetic() throws RecognitionException {
		ArithmeticContext _localctx = new ArithmeticContext(_ctx, getState());
		enterRule(_localctx, 308, RULE_arithmetic);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4205);
			match(ARITHMETIC);
			setState(4207); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4206);
				separator();
				}
				}
				setState(4209); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4217);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(4211);
				match(IS);
				setState(4213); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4212);
					separator();
					}
					}
					setState(4215); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4219);
			_la = _input.LA(1);
			if ( !(_la==NATIVE || _la==STANDARD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(4223);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4220);
				separator();
				}
				}
				setState(4225);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4226);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Environment_divisionContext extends ParserRuleContext {
		public TerminalNode ENVIRONMENT() { return getToken(cobolParser.ENVIRONMENT, 0); }
		public TerminalNode DIVISION() { return getToken(cobolParser.DIVISION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Configuration_sectionContext configuration_section() {
			return getRuleContext(Configuration_sectionContext.class,0);
		}
		public Input_output_sectionContext input_output_section() {
			return getRuleContext(Input_output_sectionContext.class,0);
		}
		public Environment_divisionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_environment_division; }
	}

	public final Environment_divisionContext environment_division() throws RecognitionException {
		Environment_divisionContext _localctx = new Environment_divisionContext(_ctx, getState());
		enterRule(_localctx, 310, RULE_environment_division);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4228);
			match(ENVIRONMENT);
			setState(4230); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4229);
				separator();
				}
				}
				setState(4232); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4234);
			match(DIVISION);
			setState(4238);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4235);
				separator();
				}
				}
				setState(4240);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4241);
			match(DOT_);
			setState(4245);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,677,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4242);
					separator();
					}
					} 
				}
				setState(4247);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,677,_ctx);
			}
			setState(4249);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONFIGURATION) {
				{
				setState(4248);
				configuration_section();
				}
			}

			setState(4252);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==INPUT_OUTPUT) {
				{
				setState(4251);
				input_output_section();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Configuration_sectionContext extends ParserRuleContext {
		public TerminalNode CONFIGURATION() { return getToken(cobolParser.CONFIGURATION, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Source_computerContext source_computer() {
			return getRuleContext(Source_computerContext.class,0);
		}
		public Object_computerContext object_computer() {
			return getRuleContext(Object_computerContext.class,0);
		}
		public Special_namesContext special_names() {
			return getRuleContext(Special_namesContext.class,0);
		}
		public Configuration_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_configuration_section; }
	}

	public final Configuration_sectionContext configuration_section() throws RecognitionException {
		Configuration_sectionContext _localctx = new Configuration_sectionContext(_ctx, getState());
		enterRule(_localctx, 312, RULE_configuration_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4254);
			match(CONFIGURATION);
			setState(4256); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4255);
				separator();
				}
				}
				setState(4258); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4260);
			match(SECTION);
			setState(4264);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4261);
				separator();
				}
				}
				setState(4266);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4267);
			match(DOT_);
			setState(4271);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,682,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4268);
					separator();
					}
					} 
				}
				setState(4273);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,682,_ctx);
			}
			setState(4275);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SOURCE_COMPUTER) {
				{
				setState(4274);
				source_computer();
				}
			}

			setState(4280);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,684,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4277);
					separator();
					}
					} 
				}
				setState(4282);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,684,_ctx);
			}
			setState(4284);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==OBJECT_COMPUTER) {
				{
				setState(4283);
				object_computer();
				}
			}

			setState(4289);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,686,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4286);
					separator();
					}
					} 
				}
				setState(4291);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,686,_ctx);
			}
			setState(4293);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SPECIAL_NAMES) {
				{
				setState(4292);
				special_names();
				}
			}

			setState(4298);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,688,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4295);
					separator();
					}
					} 
				}
				setState(4300);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,688,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Input_output_sectionContext extends ParserRuleContext {
		public TerminalNode INPUT_OUTPUT() { return getToken(cobolParser.INPUT_OUTPUT, 0); }
		public TerminalNode SECTION() { return getToken(cobolParser.SECTION, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public File_controlContext file_control() {
			return getRuleContext(File_controlContext.class,0);
		}
		public I_o_controlContext i_o_control() {
			return getRuleContext(I_o_controlContext.class,0);
		}
		public Input_output_sectionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_input_output_section; }
	}

	public final Input_output_sectionContext input_output_section() throws RecognitionException {
		Input_output_sectionContext _localctx = new Input_output_sectionContext(_ctx, getState());
		enterRule(_localctx, 314, RULE_input_output_section);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4301);
			match(INPUT_OUTPUT);
			setState(4303); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4302);
				separator();
				}
				}
				setState(4305); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4307);
			match(SECTION);
			setState(4311);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4308);
				separator();
				}
				}
				setState(4313);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4314);
			match(DOT_);
			setState(4318);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,691,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4315);
					separator();
					}
					} 
				}
				setState(4320);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,691,_ctx);
			}
			setState(4322);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE_CONTROL) {
				{
				setState(4321);
				file_control();
				}
			}

			setState(4325);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==I_O_CONTROL) {
				{
				setState(4324);
				i_o_control();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Source_computerContext extends ParserRuleContext {
		public TerminalNode SOURCE_COMPUTER() { return getToken(cobolParser.SOURCE_COMPUTER, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Computer_typeContext computer_type() {
			return getRuleContext(Computer_typeContext.class,0);
		}
		public With_debuggingContext with_debugging() {
			return getRuleContext(With_debuggingContext.class,0);
		}
		public Source_computerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_source_computer; }
	}

	public final Source_computerContext source_computer() throws RecognitionException {
		Source_computerContext _localctx = new Source_computerContext(_ctx, getState());
		enterRule(_localctx, 316, RULE_source_computer);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4327);
			match(SOURCE_COMPUTER);
			setState(4331);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4328);
				separator();
				}
				}
				setState(4333);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4334);
			match(DOT_);
			setState(4338);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,695,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4335);
					separator();
					}
					} 
				}
				setState(4340);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,695,_ctx);
			}
			setState(4359);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ALPHA || _la==I64 || _la==VAX || _la==USER_DEFINED_WORD) {
				{
				setState(4341);
				computer_type();
				setState(4349);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,697,_ctx) ) {
				case 1:
					{
					setState(4343); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4342);
						separator();
						}
						}
						setState(4345); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(4347);
					with_debugging();
					}
					break;
				}
				setState(4354);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(4351);
					separator();
					}
					}
					setState(4356);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(4357);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Computer_typeContext extends ParserRuleContext {
		public TerminalNode ALPHA() { return getToken(cobolParser.ALPHA, 0); }
		public TerminalNode I64() { return getToken(cobolParser.I64, 0); }
		public TerminalNode VAX() { return getToken(cobolParser.VAX, 0); }
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Computer_typeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_computer_type; }
	}

	public final Computer_typeContext computer_type() throws RecognitionException {
		Computer_typeContext _localctx = new Computer_typeContext(_ctx, getState());
		enterRule(_localctx, 318, RULE_computer_type);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4361);
			_la = _input.LA(1);
			if ( !(_la==ALPHA || _la==I64 || _la==VAX || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class With_debuggingContext extends ParserRuleContext {
		public TerminalNode DEBUGGING() { return getToken(cobolParser.DEBUGGING, 0); }
		public TerminalNode MODE() { return getToken(cobolParser.MODE, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public With_debuggingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_with_debugging; }
	}

	public final With_debuggingContext with_debugging() throws RecognitionException {
		With_debuggingContext _localctx = new With_debuggingContext(_ctx, getState());
		enterRule(_localctx, 320, RULE_with_debugging);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4369);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==WITH) {
				{
				setState(4363);
				match(WITH);
				setState(4365); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4364);
					separator();
					}
					}
					setState(4367); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4371);
			match(DEBUGGING);
			setState(4373); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4372);
				separator();
				}
				}
				setState(4375); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4377);
			match(MODE);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Object_computerContext extends ParserRuleContext {
		public TerminalNode OBJECT_COMPUTER() { return getToken(cobolParser.OBJECT_COMPUTER, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Computer_typeContext computer_type() {
			return getRuleContext(Computer_typeContext.class,0);
		}
		public Memory_sizeContext memory_size() {
			return getRuleContext(Memory_sizeContext.class,0);
		}
		public Program_collatingContext program_collating() {
			return getRuleContext(Program_collatingContext.class,0);
		}
		public Segment_limitContext segment_limit() {
			return getRuleContext(Segment_limitContext.class,0);
		}
		public Object_computerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_object_computer; }
	}

	public final Object_computerContext object_computer() throws RecognitionException {
		Object_computerContext _localctx = new Object_computerContext(_ctx, getState());
		enterRule(_localctx, 322, RULE_object_computer);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4379);
			match(OBJECT_COMPUTER);
			setState(4383);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4380);
				separator();
				}
				}
				setState(4385);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4386);
			match(DOT_);
			setState(4390);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,704,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4387);
					separator();
					}
					} 
				}
				setState(4392);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,704,_ctx);
			}
			setState(4429);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ALPHA || _la==I64 || _la==VAX || _la==USER_DEFINED_WORD) {
				{
				setState(4393);
				computer_type();
				setState(4401);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,706,_ctx) ) {
				case 1:
					{
					setState(4395); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4394);
						separator();
						}
						}
						setState(4397); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(4399);
					memory_size();
					}
					break;
				}
				setState(4410);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,708,_ctx) ) {
				case 1:
					{
					setState(4404); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4403);
						separator();
						}
						}
						setState(4406); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(4408);
					program_collating();
					}
					break;
				}
				setState(4419);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,710,_ctx) ) {
				case 1:
					{
					setState(4413); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4412);
						separator();
						}
						}
						setState(4415); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(4417);
					segment_limit();
					}
					break;
				}
				setState(4424);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(4421);
					separator();
					}
					}
					setState(4426);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(4427);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Memory_sizeContext extends ParserRuleContext {
		public TerminalNode MEMORY() { return getToken(cobolParser.MEMORY, 0); }
		public Memory_size_amountContext memory_size_amount() {
			return getRuleContext(Memory_size_amountContext.class,0);
		}
		public Memory_size_unitContext memory_size_unit() {
			return getRuleContext(Memory_size_unitContext.class,0);
		}
		public TerminalNode SIZE() { return getToken(cobolParser.SIZE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Memory_sizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_memory_size; }
	}

	public final Memory_sizeContext memory_size() throws RecognitionException {
		Memory_sizeContext _localctx = new Memory_sizeContext(_ctx, getState());
		enterRule(_localctx, 324, RULE_memory_size);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4431);
			match(MEMORY);
			setState(4439);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,714,_ctx) ) {
			case 1:
				{
				setState(4433); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4432);
					separator();
					}
					}
					setState(4435); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4437);
				match(SIZE);
				}
				break;
			}
			setState(4442); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4441);
				separator();
				}
				}
				setState(4444); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4446);
			memory_size_amount();
			setState(4448); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4447);
				separator();
				}
				}
				setState(4450); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4452);
			memory_size_unit();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Memory_size_amountContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Memory_size_amountContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_memory_size_amount; }
	}

	public final Memory_size_amountContext memory_size_amount() throws RecognitionException {
		Memory_size_amountContext _localctx = new Memory_size_amountContext(_ctx, getState());
		enterRule(_localctx, 326, RULE_memory_size_amount);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4454);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Memory_size_unitContext extends ParserRuleContext {
		public TerminalNode WORDS() { return getToken(cobolParser.WORDS, 0); }
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public TerminalNode MODULES() { return getToken(cobolParser.MODULES, 0); }
		public Memory_size_unitContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_memory_size_unit; }
	}

	public final Memory_size_unitContext memory_size_unit() throws RecognitionException {
		Memory_size_unitContext _localctx = new Memory_size_unitContext(_ctx, getState());
		enterRule(_localctx, 328, RULE_memory_size_unit);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4456);
			_la = _input.LA(1);
			if ( !(_la==CHARACTERS || _la==MODULES || _la==WORDS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Program_collatingContext extends ParserRuleContext {
		public TerminalNode SEQUENCE() { return getToken(cobolParser.SEQUENCE, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public TerminalNode PROGRAM() { return getToken(cobolParser.PROGRAM, 0); }
		public TerminalNode COLLATING() { return getToken(cobolParser.COLLATING, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Program_collatingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_program_collating; }
	}

	public final Program_collatingContext program_collating() throws RecognitionException {
		Program_collatingContext _localctx = new Program_collatingContext(_ctx, getState());
		enterRule(_localctx, 330, RULE_program_collating);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4464);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==PROGRAM) {
				{
				setState(4458);
				match(PROGRAM);
				setState(4460); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4459);
					separator();
					}
					}
					setState(4462); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4472);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==COLLATING) {
				{
				setState(4466);
				match(COLLATING);
				setState(4468); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4467);
					separator();
					}
					}
					setState(4470); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4474);
			match(SEQUENCE);
			setState(4482);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,722,_ctx) ) {
			case 1:
				{
				setState(4476); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4475);
					separator();
					}
					}
					setState(4478); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4480);
				match(IS);
				}
				break;
			}
			setState(4485); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4484);
				separator();
				}
				}
				setState(4487); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4489);
			alpha_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alpha_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Alpha_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alpha_name; }
	}

	public final Alpha_nameContext alpha_name() throws RecognitionException {
		Alpha_nameContext _localctx = new Alpha_nameContext(_ctx, getState());
		enterRule(_localctx, 332, RULE_alpha_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4491);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Segment_limitContext extends ParserRuleContext {
		public TerminalNode SEGMENT_LIMIT() { return getToken(cobolParser.SEGMENT_LIMIT, 0); }
		public Segment_numberContext segment_number() {
			return getRuleContext(Segment_numberContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Segment_limitContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_segment_limit; }
	}

	public final Segment_limitContext segment_limit() throws RecognitionException {
		Segment_limitContext _localctx = new Segment_limitContext(_ctx, getState());
		enterRule(_localctx, 334, RULE_segment_limit);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4493);
			match(SEGMENT_LIMIT);
			setState(4501);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				setState(4495); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4494);
					separator();
					}
					}
					setState(4497); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4499);
				match(IS);
				}
			}

			setState(4503);
			segment_number();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Segment_numberContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Segment_numberContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_segment_number; }
	}

	public final Segment_numberContext segment_number() throws RecognitionException {
		Segment_numberContext _localctx = new Segment_numberContext(_ctx, getState());
		enterRule(_localctx, 336, RULE_segment_number);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4505);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Special_namesContext extends ParserRuleContext {
		public TerminalNode SPECIAL_NAMES() { return getToken(cobolParser.SPECIAL_NAMES, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Special_names_contentContext> special_names_content() {
			return getRuleContexts(Special_names_contentContext.class);
		}
		public Special_names_contentContext special_names_content(int i) {
			return getRuleContext(Special_names_contentContext.class,i);
		}
		public Special_namesContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_special_names; }
	}

	public final Special_namesContext special_names() throws RecognitionException {
		Special_namesContext _localctx = new Special_namesContext(_ctx, getState());
		enterRule(_localctx, 338, RULE_special_names);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4507);
			match(SPECIAL_NAMES);
			setState(4511);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(4508);
				separator();
				}
				}
				setState(4513);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(4514);
			match(DOT_);
			setState(4518);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,727,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4515);
					separator();
					}
					} 
				}
				setState(4520);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,727,_ctx);
			}
			setState(4534);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ALPHABET) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << C01) | (1L << CARD_READER) | (1L << CLASS))) != 0) || ((((_la - 78)) & ~0x3f) == 0 && ((1L << (_la - 78)) & ((1L << (CONSOLE - 78)) | (1L << (CRT - 78)) | (1L << (CURRENCY - 78)) | (1L << (CURSOR - 78)) | (1L << (DECIMAL_POINT - 78)))) != 0) || _la==ENVIRONMENT_NAME || _la==ENVIRONMENT_VALUE || ((((_la - 220)) & ~0x3f) == 0 && ((1L << (_la - 220)) & ((1L << (LINE_PRINTER - 220)) | (1L << (PAPER_TAPE_PUNCH - 220)) | (1L << (PAPER_TAPE_READER - 220)))) != 0) || ((((_la - 342)) & ~0x3f) == 0 && ((1L << (_la - 342)) & ((1L << (SWITCH - 342)) | (1L << (SYMBOLIC - 342)) | (1L << (SYSERR - 342)) | (1L << (SYSIN - 342)) | (1L << (SYSOUT - 342)))) != 0)) {
				{
				setState(4528); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4521);
					special_names_content();
					setState(4525);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(4522);
						separator();
						}
						}
						setState(4527);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(4530); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ALPHABET) | (1L << ARGUMENT_NUMBER) | (1L << ARGUMENT_VALUE) | (1L << C01) | (1L << CARD_READER) | (1L << CLASS))) != 0) || ((((_la - 78)) & ~0x3f) == 0 && ((1L << (_la - 78)) & ((1L << (CONSOLE - 78)) | (1L << (CRT - 78)) | (1L << (CURRENCY - 78)) | (1L << (CURSOR - 78)) | (1L << (DECIMAL_POINT - 78)))) != 0) || _la==ENVIRONMENT_NAME || _la==ENVIRONMENT_VALUE || ((((_la - 220)) & ~0x3f) == 0 && ((1L << (_la - 220)) & ((1L << (LINE_PRINTER - 220)) | (1L << (PAPER_TAPE_PUNCH - 220)) | (1L << (PAPER_TAPE_READER - 220)))) != 0) || ((((_la - 342)) & ~0x3f) == 0 && ((1L << (_la - 342)) & ((1L << (SWITCH - 342)) | (1L << (SYMBOLIC - 342)) | (1L << (SYSERR - 342)) | (1L << (SYSIN - 342)) | (1L << (SYSOUT - 342)))) != 0) );
				setState(4532);
				match(DOT_);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Special_names_contentContext extends ParserRuleContext {
		public Predefined_deviceContext predefined_device() {
			return getRuleContext(Predefined_deviceContext.class,0);
		}
		public Device_nameContext device_name() {
			return getRuleContext(Device_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Arg_envContext arg_env() {
			return getRuleContext(Arg_envContext.class,0);
		}
		public Arg_env_nameContext arg_env_name() {
			return getRuleContext(Arg_env_nameContext.class,0);
		}
		public TerminalNode C01() { return getToken(cobolParser.C01, 0); }
		public Top_of_page_nameContext top_of_page_name() {
			return getRuleContext(Top_of_page_nameContext.class,0);
		}
		public Switch_Context switch_() {
			return getRuleContext(Switch_Context.class,0);
		}
		public AlphabetContext alphabet() {
			return getRuleContext(AlphabetContext.class,0);
		}
		public Symbolic_charsContext symbolic_chars() {
			return getRuleContext(Symbolic_charsContext.class,0);
		}
		public Class_Context class_() {
			return getRuleContext(Class_Context.class,0);
		}
		public CurrencyContext currency() {
			return getRuleContext(CurrencyContext.class,0);
		}
		public TerminalNode DECIMAL_POINT() { return getToken(cobolParser.DECIMAL_POINT, 0); }
		public TerminalNode COMMA() { return getToken(cobolParser.COMMA, 0); }
		public TerminalNode CURSOR() { return getToken(cobolParser.CURSOR, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode CRT() { return getToken(cobolParser.CRT, 0); }
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public Special_names_contentContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_special_names_content; }
	}

	public final Special_names_contentContext special_names_content() throws RecognitionException {
		Special_names_contentContext _localctx = new Special_names_contentContext(_ctx, getState());
		enterRule(_localctx, 340, RULE_special_names_content);
		int _la;
		try {
			setState(4643);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case CARD_READER:
			case CONSOLE:
			case LINE_PRINTER:
			case PAPER_TAPE_PUNCH:
			case PAPER_TAPE_READER:
			case SYSERR:
			case SYSIN:
			case SYSOUT:
				enterOuterAlt(_localctx, 1);
				{
				setState(4536);
				predefined_device();
				setState(4538); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4537);
					separator();
					}
					}
					setState(4540); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4548);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4542);
					match(IS);
					setState(4544); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4543);
						separator();
						}
						}
						setState(4546); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(4550);
				device_name();
				}
				break;
			case ARGUMENT_NUMBER:
			case ARGUMENT_VALUE:
			case ENVIRONMENT_NAME:
			case ENVIRONMENT_VALUE:
				enterOuterAlt(_localctx, 2);
				{
				setState(4552);
				arg_env();
				setState(4554); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4553);
					separator();
					}
					}
					setState(4556); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4564);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4558);
					match(IS);
					setState(4560); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4559);
						separator();
						}
						}
						setState(4562); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(4566);
				arg_env_name();
				}
				break;
			case C01:
				enterOuterAlt(_localctx, 3);
				{
				setState(4568);
				match(C01);
				setState(4570); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4569);
					separator();
					}
					}
					setState(4572); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4580);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4574);
					match(IS);
					setState(4576); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4575);
						separator();
						}
						}
						setState(4578); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(4582);
				top_of_page_name();
				}
				break;
			case SWITCH:
				enterOuterAlt(_localctx, 4);
				{
				setState(4584);
				switch_();
				}
				break;
			case ALPHABET:
				enterOuterAlt(_localctx, 5);
				{
				setState(4585);
				alphabet();
				}
				break;
			case SYMBOLIC:
				enterOuterAlt(_localctx, 6);
				{
				setState(4586);
				symbolic_chars();
				}
				break;
			case CLASS:
				enterOuterAlt(_localctx, 7);
				{
				setState(4587);
				class_();
				}
				break;
			case CURRENCY:
				enterOuterAlt(_localctx, 8);
				{
				setState(4588);
				currency();
				}
				break;
			case DECIMAL_POINT:
				enterOuterAlt(_localctx, 9);
				{
				setState(4589);
				match(DECIMAL_POINT);
				setState(4591); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4590);
					separator();
					}
					}
					setState(4593); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4601);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4595);
					match(IS);
					setState(4597); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4596);
						separator();
						}
						}
						setState(4599); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(4603);
				match(COMMA);
				}
				break;
			case CURSOR:
				enterOuterAlt(_localctx, 10);
				{
				setState(4605);
				match(CURSOR);
				setState(4607); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4606);
					separator();
					}
					}
					setState(4609); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4617);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4611);
					match(IS);
					setState(4613); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4612);
						separator();
						}
						}
						setState(4615); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(4619);
				qualified_data_item();
				}
				break;
			case CRT:
				enterOuterAlt(_localctx, 11);
				{
				setState(4621);
				match(CRT);
				setState(4623); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4622);
					separator();
					}
					}
					setState(4625); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4627);
				match(STATUS);
				setState(4629); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4628);
					separator();
					}
					}
					setState(4631); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4639);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4633);
					match(IS);
					setState(4635); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4634);
						separator();
						}
						}
						setState(4637); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(4641);
				qualified_data_item();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Qualified_data_itemContext extends ParserRuleContext {
		public List<TerminalNode> USER_DEFINED_WORD() { return getTokens(cobolParser.USER_DEFINED_WORD); }
		public TerminalNode USER_DEFINED_WORD(int i) {
			return getToken(cobolParser.USER_DEFINED_WORD, i);
		}
		public List<TerminalNode> IN() { return getTokens(cobolParser.IN); }
		public TerminalNode IN(int i) {
			return getToken(cobolParser.IN, i);
		}
		public List<TerminalNode> OF() { return getTokens(cobolParser.OF); }
		public TerminalNode OF(int i) {
			return getToken(cobolParser.OF, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Qualified_data_itemContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_qualified_data_item; }
	}

	public final Qualified_data_itemContext qualified_data_item() throws RecognitionException {
		Qualified_data_itemContext _localctx = new Qualified_data_itemContext(_ctx, getState());
		enterRule(_localctx, 342, RULE_qualified_data_item);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4645);
			match(USER_DEFINED_WORD);
			setState(4661);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,753,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4647); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4646);
						separator();
						}
						}
						setState(4649); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(4651);
					_la = _input.LA(1);
					if ( !(_la==IN || _la==OF) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(4653); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4652);
						separator();
						}
						}
						setState(4655); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(4657);
					match(USER_DEFINED_WORD);
					}
					} 
				}
				setState(4663);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,753,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class CurrencyContext extends ParserRuleContext {
		public TerminalNode CURRENCY() { return getToken(cobolParser.CURRENCY, 0); }
		public Currency_definitionContext currency_definition() {
			return getRuleContext(Currency_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode SIGN() { return getToken(cobolParser.SIGN, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public CurrencyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_currency; }
	}

	public final CurrencyContext currency() throws RecognitionException {
		CurrencyContext _localctx = new CurrencyContext(_ctx, getState());
		enterRule(_localctx, 344, RULE_currency);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4664);
			match(CURRENCY);
			setState(4666); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4665);
				separator();
				}
				}
				setState(4668); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4676);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==SIGN) {
				{
				setState(4670);
				match(SIGN);
				setState(4672); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4671);
					separator();
					}
					}
					setState(4674); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4684);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(4678);
				match(IS);
				setState(4680); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4679);
					separator();
					}
					}
					setState(4682); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4686);
			currency_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Currency_definitionContext extends ParserRuleContext {
		public Literal_7Context literal_7() {
			return getRuleContext(Literal_7Context.class,0);
		}
		public TerminalNode PICTURE() { return getToken(cobolParser.PICTURE, 0); }
		public TerminalNode SYMBOL() { return getToken(cobolParser.SYMBOL, 0); }
		public Literal_8Context literal_8() {
			return getRuleContext(Literal_8Context.class,0);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Currency_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_currency_definition; }
	}

	public final Currency_definitionContext currency_definition() throws RecognitionException {
		Currency_definitionContext _localctx = new Currency_definitionContext(_ctx, getState());
		enterRule(_localctx, 346, RULE_currency_definition);
		int _la;
		try {
			setState(4712);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,763,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(4688);
				literal_7();
				setState(4695);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(4689);
					match(WITH);
					setState(4691); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4690);
						separator();
						}
						}
						setState(4693); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(4697);
				match(PICTURE);
				setState(4699); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4698);
					separator();
					}
					}
					setState(4701); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4703);
				match(SYMBOL);
				setState(4705); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4704);
					separator();
					}
					}
					setState(4707); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4709);
				literal_8();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(4711);
				match(STRING_LITERAL);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Literal_7Context extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Literal_7Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_literal_7; }
	}

	public final Literal_7Context literal_7() throws RecognitionException {
		Literal_7Context _localctx = new Literal_7Context(_ctx, getState());
		enterRule(_localctx, 348, RULE_literal_7);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4714);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Literal_8Context extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Literal_8Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_literal_8; }
	}

	public final Literal_8Context literal_8() throws RecognitionException {
		Literal_8Context _localctx = new Literal_8Context(_ctx, getState());
		enterRule(_localctx, 350, RULE_literal_8);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4716);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_Context extends ParserRuleContext {
		public TerminalNode CLASS() { return getToken(cobolParser.CLASS, 0); }
		public Class_nameContext class_name() {
			return getRuleContext(Class_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<User_classContext> user_class() {
			return getRuleContexts(User_classContext.class);
		}
		public User_classContext user_class(int i) {
			return getRuleContext(User_classContext.class,i);
		}
		public Class_Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_; }
	}

	public final Class_Context class_() throws RecognitionException {
		Class_Context _localctx = new Class_Context(_ctx, getState());
		enterRule(_localctx, 352, RULE_class_);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4718);
			match(CLASS);
			setState(4720); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4719);
				separator();
				}
				}
				setState(4722); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4724);
			class_name();
			setState(4726); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4725);
				separator();
				}
				}
				setState(4728); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4736);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(4730);
				match(IS);
				setState(4732); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4731);
					separator();
					}
					}
					setState(4734); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4745); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4738);
				user_class();
				setState(4742);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,768,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(4739);
						separator();
						}
						} 
					}
					setState(4744);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,768,_ctx);
				}
				}
				}
				setState(4747); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==STRING_LITERAL || _la==NUMERIC_LITERAL );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Class_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_name; }
	}

	public final Class_nameContext class_name() throws RecognitionException {
		Class_nameContext _localctx = new Class_nameContext(_ctx, getState());
		enterRule(_localctx, 354, RULE_class_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4749);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class User_classContext extends ParserRuleContext {
		public First_literalContext first_literal() {
			return getRuleContext(First_literalContext.class,0);
		}
		public Last_literalContext last_literal() {
			return getRuleContext(Last_literalContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public User_classContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_user_class; }
	}

	public final User_classContext user_class() throws RecognitionException {
		User_classContext _localctx = new User_classContext(_ctx, getState());
		enterRule(_localctx, 356, RULE_user_class);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4751);
			first_literal();
			setState(4765);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,772,_ctx) ) {
			case 1:
				{
				setState(4753); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4752);
					separator();
					}
					}
					setState(4755); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4757);
				_la = _input.LA(1);
				if ( !(_la==THROUGH || _la==THRU) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(4759); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4758);
					separator();
					}
					}
					setState(4761); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(4763);
				last_literal();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symbolic_charsContext extends ParserRuleContext {
		public TerminalNode SYMBOLIC() { return getToken(cobolParser.SYMBOLIC, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public List<Symb_ch_definitionContext> symb_ch_definition() {
			return getRuleContexts(Symb_ch_definitionContext.class);
		}
		public Symb_ch_definitionContext symb_ch_definition(int i) {
			return getRuleContext(Symb_ch_definitionContext.class,i);
		}
		public Symbolic_charsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symbolic_chars; }
	}

	public final Symbolic_charsContext symbolic_chars() throws RecognitionException {
		Symbolic_charsContext _localctx = new Symbolic_charsContext(_ctx, getState());
		enterRule(_localctx, 358, RULE_symbolic_chars);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4767);
			match(SYMBOLIC);
			setState(4769); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4768);
				separator();
				}
				}
				setState(4771); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4779);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CHARACTERS) {
				{
				setState(4773);
				match(CHARACTERS);
				setState(4775); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4774);
					separator();
					}
					}
					setState(4777); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4782); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4781);
				symb_ch_definition();
				}
				}
				setState(4784); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symb_ch_definitionContext extends ParserRuleContext {
		public List<Symb_ch_def_clauseContext> symb_ch_def_clause() {
			return getRuleContexts(Symb_ch_def_clauseContext.class);
		}
		public Symb_ch_def_clauseContext symb_ch_def_clause(int i) {
			return getRuleContext(Symb_ch_def_clauseContext.class,i);
		}
		public Symb_ch_def_in_alphabetContext symb_ch_def_in_alphabet() {
			return getRuleContext(Symb_ch_def_in_alphabetContext.class,0);
		}
		public Symb_ch_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symb_ch_definition; }
	}

	public final Symb_ch_definitionContext symb_ch_definition() throws RecognitionException {
		Symb_ch_definitionContext _localctx = new Symb_ch_definitionContext(_ctx, getState());
		enterRule(_localctx, 360, RULE_symb_ch_definition);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4787); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(4786);
					symb_ch_def_clause();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(4789); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,777,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			setState(4792);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IN) {
				{
				setState(4791);
				symb_ch_def_in_alphabet();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symb_ch_def_clauseContext extends ParserRuleContext {
		public List<Symbol_charContext> symbol_char() {
			return getRuleContexts(Symbol_charContext.class);
		}
		public Symbol_charContext symbol_char(int i) {
			return getRuleContext(Symbol_charContext.class,i);
		}
		public List<Char_valContext> char_val() {
			return getRuleContexts(Char_valContext.class);
		}
		public Char_valContext char_val(int i) {
			return getRuleContext(Char_valContext.class,i);
		}
		public TerminalNode ARE() { return getToken(cobolParser.ARE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Symb_ch_def_clauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symb_ch_def_clause; }
	}

	public final Symb_ch_def_clauseContext symb_ch_def_clause() throws RecognitionException {
		Symb_ch_def_clauseContext _localctx = new Symb_ch_def_clauseContext(_ctx, getState());
		enterRule(_localctx, 362, RULE_symb_ch_def_clause);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4800); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4794);
				symbol_char();
				setState(4796); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4795);
					separator();
					}
					}
					setState(4798); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
				}
				setState(4802); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			setState(4810);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ARE || _la==IS) {
				{
				setState(4804);
				_la = _input.LA(1);
				if ( !(_la==ARE || _la==IS) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(4806); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4805);
					separator();
					}
					}
					setState(4808); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4818); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4812);
				char_val();
				setState(4814); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(4813);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(4816); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,783,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				}
				setState(4820); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==NUMERIC_LITERAL );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symb_ch_def_in_alphabetContext extends ParserRuleContext {
		public TerminalNode IN() { return getToken(cobolParser.IN, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Symb_ch_def_in_alphabetContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symb_ch_def_in_alphabet; }
	}

	public final Symb_ch_def_in_alphabetContext symb_ch_def_in_alphabet() throws RecognitionException {
		Symb_ch_def_in_alphabetContext _localctx = new Symb_ch_def_in_alphabetContext(_ctx, getState());
		enterRule(_localctx, 364, RULE_symb_ch_def_in_alphabet);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4822);
			match(IN);
			setState(4824); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4823);
				separator();
				}
				}
				setState(4826); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4828);
			alpha_name();
			setState(4832);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,786,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4829);
					separator();
					}
					} 
				}
				setState(4834);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,786,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Symbol_charContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Symbol_charContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_symbol_char; }
	}

	public final Symbol_charContext symbol_char() throws RecognitionException {
		Symbol_charContext _localctx = new Symbol_charContext(_ctx, getState());
		enterRule(_localctx, 366, RULE_symbol_char);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4835);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Char_valContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Char_valContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_char_val; }
	}

	public final Char_valContext char_val() throws RecognitionException {
		Char_valContext _localctx = new Char_valContext(_ctx, getState());
		enterRule(_localctx, 368, RULE_char_val);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4837);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class AlphabetContext extends ParserRuleContext {
		public TerminalNode ALPHABET() { return getToken(cobolParser.ALPHABET, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public Alpha_valueContext alpha_value() {
			return getRuleContext(Alpha_valueContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public AlphabetContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alphabet; }
	}

	public final AlphabetContext alphabet() throws RecognitionException {
		AlphabetContext _localctx = new AlphabetContext(_ctx, getState());
		enterRule(_localctx, 370, RULE_alphabet);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4839);
			match(ALPHABET);
			setState(4841); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4840);
				separator();
				}
				}
				setState(4843); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4845);
			alpha_name();
			setState(4847); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4846);
				separator();
				}
				}
				setState(4849); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4857);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(4851);
				match(IS);
				setState(4853); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4852);
					separator();
					}
					}
					setState(4855); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4859);
			alpha_value();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Alpha_valueContext extends ParserRuleContext {
		public TerminalNode ASCII() { return getToken(cobolParser.ASCII, 0); }
		public TerminalNode STANDARD_1() { return getToken(cobolParser.STANDARD_1, 0); }
		public TerminalNode STANDARD_2() { return getToken(cobolParser.STANDARD_2, 0); }
		public TerminalNode NATIVE() { return getToken(cobolParser.NATIVE, 0); }
		public TerminalNode EBCDIC() { return getToken(cobolParser.EBCDIC, 0); }
		public List<User_alphaContext> user_alpha() {
			return getRuleContexts(User_alphaContext.class);
		}
		public User_alphaContext user_alpha(int i) {
			return getRuleContext(User_alphaContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Alpha_valueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_alpha_value; }
	}

	public final Alpha_valueContext alpha_value() throws RecognitionException {
		Alpha_valueContext _localctx = new Alpha_valueContext(_ctx, getState());
		enterRule(_localctx, 372, RULE_alpha_value);
		int _la;
		try {
			int _alt;
			setState(4877);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ASCII:
				enterOuterAlt(_localctx, 1);
				{
				setState(4861);
				match(ASCII);
				}
				break;
			case STANDARD_1:
				enterOuterAlt(_localctx, 2);
				{
				setState(4862);
				match(STANDARD_1);
				}
				break;
			case STANDARD_2:
				enterOuterAlt(_localctx, 3);
				{
				setState(4863);
				match(STANDARD_2);
				}
				break;
			case NATIVE:
				enterOuterAlt(_localctx, 4);
				{
				setState(4864);
				match(NATIVE);
				}
				break;
			case EBCDIC:
				enterOuterAlt(_localctx, 5);
				{
				setState(4865);
				match(EBCDIC);
				}
				break;
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 6);
				{
				setState(4873); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4866);
					user_alpha();
					setState(4870);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,791,_ctx);
					while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
						if ( _alt==1 ) {
							{
							{
							setState(4867);
							separator();
							}
							} 
						}
						setState(4872);
						_errHandler.sync(this);
						_alt = getInterpreter().adaptivePredict(_input,791,_ctx);
					}
					}
					}
					setState(4875); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( _la==STRING_LITERAL || _la==NUMERIC_LITERAL );
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class User_alphaContext extends ParserRuleContext {
		public First_literalContext first_literal() {
			return getRuleContext(First_literalContext.class,0);
		}
		public Last_literalContext last_literal() {
			return getRuleContext(Last_literalContext.class,0);
		}
		public TerminalNode THRU() { return getToken(cobolParser.THRU, 0); }
		public TerminalNode THROUGH() { return getToken(cobolParser.THROUGH, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<TerminalNode> ALSO() { return getTokens(cobolParser.ALSO); }
		public TerminalNode ALSO(int i) {
			return getToken(cobolParser.ALSO, i);
		}
		public List<Same_literalContext> same_literal() {
			return getRuleContexts(Same_literalContext.class);
		}
		public Same_literalContext same_literal(int i) {
			return getRuleContext(Same_literalContext.class,i);
		}
		public User_alphaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_user_alpha; }
	}

	public final User_alphaContext user_alpha() throws RecognitionException {
		User_alphaContext _localctx = new User_alphaContext(_ctx, getState());
		enterRule(_localctx, 374, RULE_user_alpha);
		int _la;
		try {
			int _alt;
			setState(4913);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,800,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(4879);
				first_literal();
				setState(4893);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,796,_ctx) ) {
				case 1:
					{
					setState(4881); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4880);
						separator();
						}
						}
						setState(4883); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(4885);
					_la = _input.LA(1);
					if ( !(_la==THROUGH || _la==THRU) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(4887); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4886);
						separator();
						}
						}
						setState(4889); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(4891);
					last_literal();
					}
					break;
				}
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(4895);
				first_literal();
				setState(4909); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(4897); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4896);
							separator();
							}
							}
							setState(4899); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(4901);
						match(ALSO);
						setState(4903); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(4902);
							separator();
							}
							}
							setState(4905); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(4907);
						same_literal();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(4911); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,799,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class First_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public First_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_first_literal; }
	}

	public final First_literalContext first_literal() throws RecognitionException {
		First_literalContext _localctx = new First_literalContext(_ctx, getState());
		enterRule(_localctx, 376, RULE_first_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4915);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Last_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Last_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_last_literal; }
	}

	public final Last_literalContext last_literal() throws RecognitionException {
		Last_literalContext _localctx = new Last_literalContext(_ctx, getState());
		enterRule(_localctx, 378, RULE_last_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4917);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Same_literalContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Same_literalContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_same_literal; }
	}

	public final Same_literalContext same_literal() throws RecognitionException {
		Same_literalContext _localctx = new Same_literalContext(_ctx, getState());
		enterRule(_localctx, 380, RULE_same_literal);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4919);
			_la = _input.LA(1);
			if ( !(_la==STRING_LITERAL || _la==NUMERIC_LITERAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_Context extends ParserRuleContext {
		public TerminalNode SWITCH() { return getToken(cobolParser.SWITCH, 0); }
		public Switch_numContext switch_num() {
			return getRuleContext(Switch_numContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Switch_nameContext switch_name() {
			return getRuleContext(Switch_nameContext.class,0);
		}
		public Switch_clause_onContext switch_clause_on() {
			return getRuleContext(Switch_clause_onContext.class,0);
		}
		public Switch_clause_offContext switch_clause_off() {
			return getRuleContext(Switch_clause_offContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Switch_Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_; }
	}

	public final Switch_Context switch_() throws RecognitionException {
		Switch_Context _localctx = new Switch_Context(_ctx, getState());
		enterRule(_localctx, 382, RULE_switch_);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(4921);
			match(SWITCH);
			setState(4923); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4922);
				separator();
				}
				}
				setState(4925); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4927);
			switch_num();
			setState(4931);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,802,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4928);
					separator();
					}
					} 
				}
				setState(4933);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,802,_ctx);
			}
			setState(4948);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS || _la==USER_DEFINED_WORD) {
				{
				setState(4940);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(4934);
					match(IS);
					setState(4936); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4935);
						separator();
						}
						}
						setState(4938); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(4942);
				switch_name();
				setState(4944); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(4943);
						separator();
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(4946); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,805,_ctx);
				} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
				}
			}

			setState(4970);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case ON:
				{
				setState(4950);
				switch_clause_on();
				setState(4958);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,808,_ctx) ) {
				case 1:
					{
					setState(4952); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4951);
						separator();
						}
						}
						setState(4954); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(4956);
					switch_clause_off();
					}
					break;
				}
				}
				break;
			case OFF:
				{
				setState(4960);
				switch_clause_off();
				setState(4968);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,810,_ctx) ) {
				case 1:
					{
					setState(4962); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(4961);
						separator();
						}
						}
						setState(4964); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(4966);
					switch_clause_on();
					}
					break;
				}
				}
				break;
			case ALPHABET:
			case ARGUMENT_NUMBER:
			case ARGUMENT_VALUE:
			case C01:
			case CARD_READER:
			case CLASS:
			case CONSOLE:
			case CRT:
			case CURRENCY:
			case CURSOR:
			case DECIMAL_POINT:
			case ENVIRONMENT_NAME:
			case ENVIRONMENT_VALUE:
			case LINE_PRINTER:
			case PAPER_TAPE_PUNCH:
			case PAPER_TAPE_READER:
			case SWITCH:
			case SYMBOLIC:
			case SYSERR:
			case SYSIN:
			case SYSOUT:
			case START_SLASH_:
			case START_STAR_:
			case COMMA_:
			case SEMI_:
			case DOT_:
			case START_FOUR_SPACES:
			case WHITESPACE:
			case NEWLINE:
				break;
			default:
				break;
			}
			setState(4975);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,812,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(4972);
					separator();
					}
					} 
				}
				setState(4977);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,812,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_clause_onContext extends ParserRuleContext {
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public Cond_nameContext cond_name() {
			return getRuleContext(Cond_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Switch_clause_onContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_clause_on; }
	}

	public final Switch_clause_onContext switch_clause_on() throws RecognitionException {
		Switch_clause_onContext _localctx = new Switch_clause_onContext(_ctx, getState());
		enterRule(_localctx, 384, RULE_switch_clause_on);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(4978);
			match(ON);
			setState(4980); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(4979);
				separator();
				}
				}
				setState(4982); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(4990);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==STATUS) {
				{
				setState(4984);
				match(STATUS);
				setState(4986); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4985);
					separator();
					}
					}
					setState(4988); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(4998);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(4992);
				match(IS);
				setState(4994); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(4993);
					separator();
					}
					}
					setState(4996); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5000);
			cond_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_clause_offContext extends ParserRuleContext {
		public TerminalNode OFF() { return getToken(cobolParser.OFF, 0); }
		public Cond_nameContext cond_name() {
			return getRuleContext(Cond_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Switch_clause_offContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_clause_off; }
	}

	public final Switch_clause_offContext switch_clause_off() throws RecognitionException {
		Switch_clause_offContext _localctx = new Switch_clause_offContext(_ctx, getState());
		enterRule(_localctx, 386, RULE_switch_clause_off);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5002);
			match(OFF);
			setState(5004); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5003);
				separator();
				}
				}
				setState(5006); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5014);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==STATUS) {
				{
				setState(5008);
				match(STATUS);
				setState(5010); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5009);
					separator();
					}
					}
					setState(5012); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5022);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5016);
				match(IS);
				setState(5018); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5017);
					separator();
					}
					}
					setState(5020); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5024);
			cond_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Cond_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Cond_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_cond_name; }
	}

	public final Cond_nameContext cond_name() throws RecognitionException {
		Cond_nameContext _localctx = new Cond_nameContext(_ctx, getState());
		enterRule(_localctx, 388, RULE_cond_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5026);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Switch_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_name; }
	}

	public final Switch_nameContext switch_name() throws RecognitionException {
		Switch_nameContext _localctx = new Switch_nameContext(_ctx, getState());
		enterRule(_localctx, 390, RULE_switch_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5028);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Switch_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Switch_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_switch_num; }
	}

	public final Switch_numContext switch_num() throws RecognitionException {
		Switch_numContext _localctx = new Switch_numContext(_ctx, getState());
		enterRule(_localctx, 392, RULE_switch_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5030);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Top_of_page_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Top_of_page_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_top_of_page_name; }
	}

	public final Top_of_page_nameContext top_of_page_name() throws RecognitionException {
		Top_of_page_nameContext _localctx = new Top_of_page_nameContext(_ctx, getState());
		enterRule(_localctx, 394, RULE_top_of_page_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5032);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Predefined_deviceContext extends ParserRuleContext {
		public TerminalNode CARD_READER() { return getToken(cobolParser.CARD_READER, 0); }
		public TerminalNode PAPER_TAPE_READER() { return getToken(cobolParser.PAPER_TAPE_READER, 0); }
		public TerminalNode CONSOLE() { return getToken(cobolParser.CONSOLE, 0); }
		public TerminalNode LINE_PRINTER() { return getToken(cobolParser.LINE_PRINTER, 0); }
		public TerminalNode PAPER_TAPE_PUNCH() { return getToken(cobolParser.PAPER_TAPE_PUNCH, 0); }
		public TerminalNode SYSIN() { return getToken(cobolParser.SYSIN, 0); }
		public TerminalNode SYSOUT() { return getToken(cobolParser.SYSOUT, 0); }
		public TerminalNode SYSERR() { return getToken(cobolParser.SYSERR, 0); }
		public Predefined_deviceContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_predefined_device; }
	}

	public final Predefined_deviceContext predefined_device() throws RecognitionException {
		Predefined_deviceContext _localctx = new Predefined_deviceContext(_ctx, getState());
		enterRule(_localctx, 396, RULE_predefined_device);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5034);
			_la = _input.LA(1);
			if ( !(_la==CARD_READER || _la==CONSOLE || ((((_la - 220)) & ~0x3f) == 0 && ((1L << (_la - 220)) & ((1L << (LINE_PRINTER - 220)) | (1L << (PAPER_TAPE_PUNCH - 220)) | (1L << (PAPER_TAPE_READER - 220)))) != 0) || ((((_la - 347)) & ~0x3f) == 0 && ((1L << (_la - 347)) & ((1L << (SYSERR - 347)) | (1L << (SYSIN - 347)) | (1L << (SYSOUT - 347)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Device_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Device_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_device_name; }
	}

	public final Device_nameContext device_name() throws RecognitionException {
		Device_nameContext _localctx = new Device_nameContext(_ctx, getState());
		enterRule(_localctx, 398, RULE_device_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5036);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arg_envContext extends ParserRuleContext {
		public TerminalNode ARGUMENT_NUMBER() { return getToken(cobolParser.ARGUMENT_NUMBER, 0); }
		public TerminalNode ARGUMENT_VALUE() { return getToken(cobolParser.ARGUMENT_VALUE, 0); }
		public TerminalNode ENVIRONMENT_NAME() { return getToken(cobolParser.ENVIRONMENT_NAME, 0); }
		public TerminalNode ENVIRONMENT_VALUE() { return getToken(cobolParser.ENVIRONMENT_VALUE, 0); }
		public Arg_envContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arg_env; }
	}

	public final Arg_envContext arg_env() throws RecognitionException {
		Arg_envContext _localctx = new Arg_envContext(_ctx, getState());
		enterRule(_localctx, 400, RULE_arg_env);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5038);
			_la = _input.LA(1);
			if ( !(_la==ARGUMENT_NUMBER || _la==ARGUMENT_VALUE || _la==ENVIRONMENT_NAME || _la==ENVIRONMENT_VALUE) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arg_env_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Arg_env_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arg_env_name; }
	}

	public final Arg_env_nameContext arg_env_name() throws RecognitionException {
		Arg_env_nameContext _localctx = new Arg_env_nameContext(_ctx, getState());
		enterRule(_localctx, 402, RULE_arg_env_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5040);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_controlContext extends ParserRuleContext {
		public TerminalNode FILE_CONTROL() { return getToken(cobolParser.FILE_CONTROL, 0); }
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<SelectContext> select() {
			return getRuleContexts(SelectContext.class);
		}
		public SelectContext select(int i) {
			return getRuleContext(SelectContext.class,i);
		}
		public File_controlContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_control; }
	}

	public final File_controlContext file_control() throws RecognitionException {
		File_controlContext _localctx = new File_controlContext(_ctx, getState());
		enterRule(_localctx, 404, RULE_file_control);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5042);
			match(FILE_CONTROL);
			setState(5046);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(5043);
				separator();
				}
				}
				setState(5048);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5049);
			match(DOT_);
			setState(5053);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,824,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5050);
					separator();
					}
					} 
				}
				setState(5055);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,824,_ctx);
			}
			setState(5065);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==SELECT) {
				{
				{
				setState(5056);
				select();
				setState(5060);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,825,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5057);
						separator();
						}
						} 
					}
					setState(5062);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,825,_ctx);
				}
				}
				}
				setState(5067);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SelectContext extends ParserRuleContext {
		public TerminalNode SELECT() { return getToken(cobolParser.SELECT, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public Assign_toContext assign_to() {
			return getRuleContext(Assign_toContext.class,0);
		}
		public TerminalNode DOT_() { return getToken(cobolParser.DOT_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode OPTIONAL() { return getToken(cobolParser.OPTIONAL, 0); }
		public ReserveContext reserve() {
			return getRuleContext(ReserveContext.class,0);
		}
		public OrganizationContext organization() {
			return getRuleContext(OrganizationContext.class,0);
		}
		public Block_containsContext block_contains() {
			return getRuleContext(Block_containsContext.class,0);
		}
		public Code_setContext code_set() {
			return getRuleContext(Code_setContext.class,0);
		}
		public PaddingContext padding() {
			return getRuleContext(PaddingContext.class,0);
		}
		public Record_delimiterContext record_delimiter() {
			return getRuleContext(Record_delimiterContext.class,0);
		}
		public Access_modeContext access_mode() {
			return getRuleContext(Access_modeContext.class,0);
		}
		public List<Record_keyContext> record_key() {
			return getRuleContexts(Record_keyContext.class);
		}
		public Record_keyContext record_key(int i) {
			return getRuleContext(Record_keyContext.class,i);
		}
		public Lock_modeContext lock_mode() {
			return getRuleContext(Lock_modeContext.class,0);
		}
		public File_statusContext file_status() {
			return getRuleContext(File_statusContext.class,0);
		}
		public SelectContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_select; }
	}

	public final SelectContext select() throws RecognitionException {
		SelectContext _localctx = new SelectContext(_ctx, getState());
		enterRule(_localctx, 406, RULE_select);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5068);
			match(SELECT);
			setState(5070); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5069);
				separator();
				}
				}
				setState(5072); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5080);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==OPTIONAL) {
				{
				setState(5074);
				match(OPTIONAL);
				setState(5076); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5075);
					separator();
					}
					}
					setState(5078); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5082);
			file_name();
			setState(5086);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(5083);
				separator();
				}
				}
				setState(5088);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5089);
			assign_to();
			setState(5093);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(5090);
				separator();
				}
				}
				setState(5095);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5103);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==RESERVE) {
				{
				setState(5096);
				reserve();
				setState(5100);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(5097);
					separator();
					}
					}
					setState(5102);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(5112);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,835,_ctx) ) {
			case 1:
				{
				setState(5105);
				organization();
				setState(5109);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(5106);
					separator();
					}
					}
					setState(5111);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				break;
			}
			setState(5121);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==BLOCK) {
				{
				setState(5114);
				block_contains();
				setState(5118);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(5115);
					separator();
					}
					}
					setState(5120);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(5130);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CODE_SET) {
				{
				setState(5123);
				code_set();
				setState(5127);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(5124);
					separator();
					}
					}
					setState(5129);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(5139);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==PADDING) {
				{
				setState(5132);
				padding();
				setState(5136);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(5133);
					separator();
					}
					}
					setState(5138);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(5148);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,843,_ctx) ) {
			case 1:
				{
				setState(5141);
				record_delimiter();
				setState(5145);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(5142);
					separator();
					}
					}
					setState(5147);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				break;
			}
			setState(5157);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ACCESS || _la==DYNAMIC || _la==RANDOM || _la==SEQUENTIAL) {
				{
				setState(5150);
				access_mode();
				setState(5154);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(5151);
					separator();
					}
					}
					setState(5156);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(5168);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==ALTERNATE || _la==RECORD) {
				{
				{
				setState(5159);
				record_key();
				setState(5163);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(5160);
					separator();
					}
					}
					setState(5165);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
				}
				setState(5170);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5178);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==LOCK) {
				{
				setState(5171);
				lock_mode();
				setState(5175);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(5172);
					separator();
					}
					}
					setState(5177);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(5187);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE || _la==STATUS) {
				{
				setState(5180);
				file_status();
				setState(5184);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(5181);
					separator();
					}
					}
					setState(5186);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(5189);
			match(DOT_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_statusContext extends ParserRuleContext {
		public TerminalNode STATUS() { return getToken(cobolParser.STATUS, 0); }
		public File_statContext file_stat() {
			return getRuleContext(File_statContext.class,0);
		}
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public File_statusContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_status; }
	}

	public final File_statusContext file_status() throws RecognitionException {
		File_statusContext _localctx = new File_statusContext(_ctx, getState());
		enterRule(_localctx, 408, RULE_file_status);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5197);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FILE) {
				{
				setState(5191);
				match(FILE);
				setState(5193); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5192);
					separator();
					}
					}
					setState(5195); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5199);
			match(STATUS);
			setState(5201); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5200);
				separator();
				}
				}
				setState(5203); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5211);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5205);
				match(IS);
				setState(5207); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5206);
					separator();
					}
					}
					setState(5209); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5213);
			file_stat();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_statContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public File_statContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_stat; }
	}

	public final File_statContext file_stat() throws RecognitionException {
		File_statContext _localctx = new File_statContext(_ctx, getState());
		enterRule(_localctx, 410, RULE_file_stat);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5215);
			qualified_data_item();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_keyContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public Record_key_definitionContext record_key_definition() {
			return getRuleContext(Record_key_definitionContext.class,0);
		}
		public TerminalNode ALTERNATE() { return getToken(cobolParser.ALTERNATE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode DUPLICATES() { return getToken(cobolParser.DUPLICATES, 0); }
		public TerminalNode ASCENDING() { return getToken(cobolParser.ASCENDING, 0); }
		public TerminalNode DESCENDING() { return getToken(cobolParser.DESCENDING, 0); }
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public Record_keyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_key; }
	}

	public final Record_keyContext record_key() throws RecognitionException {
		Record_keyContext _localctx = new Record_keyContext(_ctx, getState());
		enterRule(_localctx, 412, RULE_record_key);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5223);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ALTERNATE) {
				{
				setState(5217);
				match(ALTERNATE);
				setState(5219); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5218);
					separator();
					}
					}
					setState(5221); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5225);
			match(RECORD);
			setState(5227); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5226);
				separator();
				}
				}
				setState(5229); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5237);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==KEY) {
				{
				setState(5231);
				match(KEY);
				setState(5233); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5232);
					separator();
					}
					}
					setState(5235); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5245);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5239);
				match(IS);
				setState(5241); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5240);
					separator();
					}
					}
					setState(5243); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5247);
			record_key_definition();
			setState(5263);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,867,_ctx) ) {
			case 1:
				{
				setState(5249); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5248);
					separator();
					}
					}
					setState(5251); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5259);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(5253);
					match(WITH);
					setState(5255); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5254);
						separator();
						}
						}
						setState(5257); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(5261);
				match(DUPLICATES);
				}
				break;
			}
			setState(5272);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,869,_ctx) ) {
			case 1:
				{
				setState(5266); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5265);
					separator();
					}
					}
					setState(5268); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5270);
				_la = _input.LA(1);
				if ( !(_la==ASCENDING || _la==DESCENDING) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_key_definitionContext extends ParserRuleContext {
		public List<Qualified_data_itemContext> qualified_data_item() {
			return getRuleContexts(Qualified_data_itemContext.class);
		}
		public Qualified_data_itemContext qualified_data_item(int i) {
			return getRuleContext(Qualified_data_itemContext.class,i);
		}
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public TerminalNode EQUAL_() { return getToken(cobolParser.EQUAL_, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Record_key_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_key_definition; }
	}

	public final Record_key_definitionContext record_key_definition() throws RecognitionException {
		Record_key_definitionContext _localctx = new Record_key_definitionContext(_ctx, getState());
		enterRule(_localctx, 414, RULE_record_key_definition);
		int _la;
		try {
			int _alt;
			setState(5302);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,874,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(5274);
				qualified_data_item();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(5275);
				match(USER_DEFINED_WORD);
				setState(5279);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(5276);
					separator();
					}
					}
					setState(5281);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(5282);
				match(EQUAL_);
				setState(5286);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(5283);
					separator();
					}
					}
					setState(5288);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(5289);
				qualified_data_item();
				setState(5299);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,873,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5293);
						_errHandler.sync(this);
						_la = _input.LA(1);
						while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
							{
							{
							setState(5290);
							separator();
							}
							}
							setState(5295);
							_errHandler.sync(this);
							_la = _input.LA(1);
						}
						setState(5296);
						qualified_data_item();
						}
						} 
					}
					setState(5301);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,873,_ctx);
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Access_modeContext extends ParserRuleContext {
		public TerminalNode SEQUENTIAL() { return getToken(cobolParser.SEQUENTIAL, 0); }
		public TerminalNode RANDOM() { return getToken(cobolParser.RANDOM, 0); }
		public TerminalNode DYNAMIC() { return getToken(cobolParser.DYNAMIC, 0); }
		public TerminalNode ACCESS() { return getToken(cobolParser.ACCESS, 0); }
		public TerminalNode RELATIVE() { return getToken(cobolParser.RELATIVE, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode MODE() { return getToken(cobolParser.MODE, 0); }
		public List<TerminalNode> IS() { return getTokens(cobolParser.IS); }
		public TerminalNode IS(int i) {
			return getToken(cobolParser.IS, i);
		}
		public TerminalNode KEY() { return getToken(cobolParser.KEY, 0); }
		public Access_modeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_access_mode; }
	}

	public final Access_modeContext access_mode() throws RecognitionException {
		Access_modeContext _localctx = new Access_modeContext(_ctx, getState());
		enterRule(_localctx, 416, RULE_access_mode);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5326);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ACCESS) {
				{
				setState(5304);
				match(ACCESS);
				setState(5306); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5305);
					separator();
					}
					}
					setState(5308); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5316);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==MODE) {
					{
					setState(5310);
					match(MODE);
					setState(5312); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5311);
						separator();
						}
						}
						setState(5314); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(5324);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5318);
					match(IS);
					setState(5320); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5319);
						separator();
						}
						}
						setState(5322); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				}
			}

			setState(5328);
			_la = _input.LA(1);
			if ( !(_la==DYNAMIC || _la==RANDOM || _la==SEQUENTIAL) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			setState(5358);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,887,_ctx) ) {
			case 1:
				{
				setState(5330); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5329);
					separator();
					}
					}
					setState(5332); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5334);
				match(RELATIVE);
				setState(5336); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5335);
					separator();
					}
					}
					setState(5338); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5346);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==KEY) {
					{
					setState(5340);
					match(KEY);
					setState(5342); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5341);
						separator();
						}
						}
						setState(5344); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(5354);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5348);
					match(IS);
					setState(5350); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5349);
						separator();
						}
						}
						setState(5352); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(5356);
				qualified_data_item();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ReserveContext extends ParserRuleContext {
		public TerminalNode RESERVE() { return getToken(cobolParser.RESERVE, 0); }
		public Reserve_numContext reserve_num() {
			return getRuleContext(Reserve_numContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode AREA() { return getToken(cobolParser.AREA, 0); }
		public TerminalNode AREAS() { return getToken(cobolParser.AREAS, 0); }
		public ReserveContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_reserve; }
	}

	public final ReserveContext reserve() throws RecognitionException {
		ReserveContext _localctx = new ReserveContext(_ctx, getState());
		enterRule(_localctx, 418, RULE_reserve);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5360);
			match(RESERVE);
			setState(5362); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5361);
				separator();
				}
				}
				setState(5364); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5366);
			reserve_num();
			setState(5374);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,890,_ctx) ) {
			case 1:
				{
				setState(5368); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5367);
					separator();
					}
					}
					setState(5370); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5372);
				_la = _input.LA(1);
				if ( !(_la==AREA || _la==AREAS) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Reserve_numContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Reserve_numContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_reserve_num; }
	}

	public final Reserve_numContext reserve_num() throws RecognitionException {
		Reserve_numContext _localctx = new Reserve_numContext(_ctx, getState());
		enterRule(_localctx, 420, RULE_reserve_num);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5376);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Record_delimiterContext extends ParserRuleContext {
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode DELIMITER() { return getToken(cobolParser.DELIMITER, 0); }
		public TerminalNode STANDARD_1() { return getToken(cobolParser.STANDARD_1, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Record_delimiterContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_record_delimiter; }
	}

	public final Record_delimiterContext record_delimiter() throws RecognitionException {
		Record_delimiterContext _localctx = new Record_delimiterContext(_ctx, getState());
		enterRule(_localctx, 422, RULE_record_delimiter);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5378);
			match(RECORD);
			setState(5380); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5379);
				separator();
				}
				}
				setState(5382); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5384);
			match(DELIMITER);
			setState(5386); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5385);
				separator();
				}
				}
				setState(5388); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5396);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5390);
				match(IS);
				setState(5392); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5391);
					separator();
					}
					}
					setState(5394); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5398);
			match(STANDARD_1);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class PaddingContext extends ParserRuleContext {
		public TerminalNode PADDING() { return getToken(cobolParser.PADDING, 0); }
		public Pad_charContext pad_char() {
			return getRuleContext(Pad_charContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CHARACTER() { return getToken(cobolParser.CHARACTER, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public PaddingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_padding; }
	}

	public final PaddingContext padding() throws RecognitionException {
		PaddingContext _localctx = new PaddingContext(_ctx, getState());
		enterRule(_localctx, 424, RULE_padding);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5400);
			match(PADDING);
			setState(5402); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5401);
				separator();
				}
				}
				setState(5404); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5412);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CHARACTER) {
				{
				setState(5406);
				match(CHARACTER);
				setState(5408); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5407);
					separator();
					}
					}
					setState(5410); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5420);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5414);
				match(IS);
				setState(5416); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5415);
					separator();
					}
					}
					setState(5418); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5422);
			pad_char();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Pad_charContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Pad_charContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_pad_char; }
	}

	public final Pad_charContext pad_char() throws RecognitionException {
		Pad_charContext _localctx = new Pad_charContext(_ctx, getState());
		enterRule(_localctx, 426, RULE_pad_char);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5424);
			match(STRING_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class OrganizationContext extends ParserRuleContext {
		public TerminalNode SEQUENTIAL() { return getToken(cobolParser.SEQUENTIAL, 0); }
		public TerminalNode LINE() { return getToken(cobolParser.LINE, 0); }
		public TerminalNode RELATIVE() { return getToken(cobolParser.RELATIVE, 0); }
		public TerminalNode INDEXED() { return getToken(cobolParser.INDEXED, 0); }
		public TerminalNode ORGANIZATION() { return getToken(cobolParser.ORGANIZATION, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public OrganizationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_organization; }
	}

	public final OrganizationContext organization() throws RecognitionException {
		OrganizationContext _localctx = new OrganizationContext(_ctx, getState());
		enterRule(_localctx, 428, RULE_organization);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5440);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ORGANIZATION) {
				{
				setState(5426);
				match(ORGANIZATION);
				setState(5428); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5427);
					separator();
					}
					}
					setState(5430); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5438);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==IS) {
					{
					setState(5432);
					match(IS);
					setState(5434); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5433);
						separator();
						}
						}
						setState(5436); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				}
			}

			setState(5453);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case SEQUENTIAL:
				{
				setState(5442);
				match(SEQUENTIAL);
				}
				break;
			case LINE:
				{
				setState(5443);
				match(LINE);
				setState(5445); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5444);
					separator();
					}
					}
					setState(5447); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5449);
				match(SEQUENTIAL);
				}
				break;
			case RELATIVE:
				{
				setState(5451);
				match(RELATIVE);
				}
				break;
			case INDEXED:
				{
				setState(5452);
				match(INDEXED);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Lock_modeContext extends ParserRuleContext {
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public Lock_mode_definitionContext lock_mode_definition() {
			return getRuleContext(Lock_mode_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode MODE() { return getToken(cobolParser.MODE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Lock_modeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_lock_mode; }
	}

	public final Lock_modeContext lock_mode() throws RecognitionException {
		Lock_modeContext _localctx = new Lock_modeContext(_ctx, getState());
		enterRule(_localctx, 430, RULE_lock_mode);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5455);
			match(LOCK);
			setState(5457); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5456);
				separator();
				}
				}
				setState(5459); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5467);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==MODE) {
				{
				setState(5461);
				match(MODE);
				setState(5463); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5462);
					separator();
					}
					}
					setState(5465); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5475);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5469);
				match(IS);
				setState(5471); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5470);
					separator();
					}
					}
					setState(5473); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5477);
			lock_mode_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Lock_mode_definitionContext extends ParserRuleContext {
		public TerminalNode MANUAL() { return getToken(cobolParser.MANUAL, 0); }
		public TerminalNode LOCK() { return getToken(cobolParser.LOCK, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public TerminalNode MULTIPLE() { return getToken(cobolParser.MULTIPLE, 0); }
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode WITH() { return getToken(cobolParser.WITH, 0); }
		public TerminalNode AUTOMATIC() { return getToken(cobolParser.AUTOMATIC, 0); }
		public TerminalNode ROLLBACK() { return getToken(cobolParser.ROLLBACK, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode EXCLUSIVE() { return getToken(cobolParser.EXCLUSIVE, 0); }
		public Lock_mode_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_lock_mode_definition; }
	}

	public final Lock_mode_definitionContext lock_mode_definition() throws RecognitionException {
		Lock_mode_definitionContext _localctx = new Lock_mode_definitionContext(_ctx, getState());
		enterRule(_localctx, 432, RULE_lock_mode_definition);
		int _la;
		try {
			setState(5547);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case MANUAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(5479);
				match(MANUAL);
				setState(5481); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5480);
					separator();
					}
					}
					setState(5483); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5491);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==WITH) {
					{
					setState(5485);
					match(WITH);
					setState(5487); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5486);
						separator();
						}
						}
						setState(5489); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(5493);
				match(LOCK);
				setState(5495); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5494);
					separator();
					}
					}
					setState(5497); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5499);
				match(ON);
				setState(5501); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5500);
					separator();
					}
					}
					setState(5503); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5505);
				match(MULTIPLE);
				setState(5507); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5506);
					separator();
					}
					}
					setState(5509); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5511);
				match(RECORDS);
				}
				break;
			case AUTOMATIC:
				enterOuterAlt(_localctx, 2);
				{
				setState(5513);
				match(AUTOMATIC);
				setState(5544);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,923,_ctx) ) {
				case 1:
					{
					setState(5515); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5514);
						separator();
						}
						}
						setState(5517); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(5525);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==WITH) {
						{
						setState(5519);
						match(WITH);
						setState(5521); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5520);
							separator();
							}
							}
							setState(5523); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						}
					}

					setState(5542);
					_errHandler.sync(this);
					switch (_input.LA(1)) {
					case LOCK:
						{
						{
						setState(5527);
						match(LOCK);
						setState(5529); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5528);
							separator();
							}
							}
							setState(5531); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(5533);
						match(ON);
						setState(5535); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5534);
							separator();
							}
							}
							setState(5537); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(5539);
						match(RECORD);
						}
						}
						break;
					case ROLLBACK:
						{
						setState(5541);
						match(ROLLBACK);
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					}
					break;
				}
				}
				break;
			case EXCLUSIVE:
				enterOuterAlt(_localctx, 3);
				{
				setState(5546);
				match(EXCLUSIVE);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Code_setContext extends ParserRuleContext {
		public TerminalNode CODE_SET() { return getToken(cobolParser.CODE_SET, 0); }
		public Alpha_nameContext alpha_name() {
			return getRuleContext(Alpha_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public Code_setContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_code_set; }
	}

	public final Code_setContext code_set() throws RecognitionException {
		Code_setContext _localctx = new Code_setContext(_ctx, getState());
		enterRule(_localctx, 434, RULE_code_set);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5549);
			match(CODE_SET);
			setState(5551); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5550);
				separator();
				}
				}
				setState(5553); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5561);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(5555);
				match(IS);
				setState(5557); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5556);
					separator();
					}
					}
					setState(5559); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5563);
			alpha_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Block_containsContext extends ParserRuleContext {
		public TerminalNode BLOCK() { return getToken(cobolParser.BLOCK, 0); }
		public BlocksizeContext blocksize() {
			return getRuleContext(BlocksizeContext.class,0);
		}
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public TerminalNode CHARACTERS() { return getToken(cobolParser.CHARACTERS, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode CONTAINS() { return getToken(cobolParser.CONTAINS, 0); }
		public Smallest_blockContext smallest_block() {
			return getRuleContext(Smallest_blockContext.class,0);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Block_containsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_block_contains; }
	}

	public final Block_containsContext block_contains() throws RecognitionException {
		Block_containsContext _localctx = new Block_containsContext(_ctx, getState());
		enterRule(_localctx, 436, RULE_block_contains);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5565);
			match(BLOCK);
			setState(5567); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5566);
				separator();
				}
				}
				setState(5569); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5577);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONTAINS) {
				{
				setState(5571);
				match(CONTAINS);
				setState(5573); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5572);
					separator();
					}
					}
					setState(5575); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5591);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,933,_ctx) ) {
			case 1:
				{
				setState(5579);
				smallest_block();
				setState(5581); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5580);
					separator();
					}
					}
					setState(5583); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5585);
				match(TO);
				setState(5587); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5586);
					separator();
					}
					}
					setState(5589); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
				break;
			}
			setState(5593);
			blocksize();
			setState(5595); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5594);
				separator();
				}
				}
				setState(5597); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5599);
			_la = _input.LA(1);
			if ( !(_la==CHARACTERS || _la==RECORDS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Smallest_blockContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Smallest_blockContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_smallest_block; }
	}

	public final Smallest_blockContext smallest_block() throws RecognitionException {
		Smallest_blockContext _localctx = new Smallest_blockContext(_ctx, getState());
		enterRule(_localctx, 438, RULE_smallest_block);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5601);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class BlocksizeContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public BlocksizeContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_blocksize; }
	}

	public final BlocksizeContext blocksize() throws RecognitionException {
		BlocksizeContext _localctx = new BlocksizeContext(_ctx, getState());
		enterRule(_localctx, 440, RULE_blocksize);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5603);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Assign_toContext extends ParserRuleContext {
		public TerminalNode ASSIGN() { return getToken(cobolParser.ASSIGN, 0); }
		public Assign_to_definitionContext assign_to_definition() {
			return getRuleContext(Assign_to_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Assign_toContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_assign_to; }
	}

	public final Assign_toContext assign_to() throws RecognitionException {
		Assign_toContext _localctx = new Assign_toContext(_ctx, getState());
		enterRule(_localctx, 442, RULE_assign_to);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5605);
			match(ASSIGN);
			setState(5607); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5606);
				separator();
				}
				}
				setState(5609); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5617);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==TO) {
				{
				setState(5611);
				match(TO);
				setState(5613); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5612);
					separator();
					}
					}
					setState(5615); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5619);
			assign_to_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Assign_to_definitionContext extends ParserRuleContext {
		public File_specContext file_spec() {
			return getRuleContext(File_specContext.class,0);
		}
		public TerminalNode EXTERNAL() { return getToken(cobolParser.EXTERNAL, 0); }
		public TerminalNode DYNAMIC() { return getToken(cobolParser.DYNAMIC, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode REEL() { return getToken(cobolParser.REEL, 0); }
		public TerminalNode UNIT() { return getToken(cobolParser.UNIT, 0); }
		public TerminalNode MULTIPLE() { return getToken(cobolParser.MULTIPLE, 0); }
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public Assign_to_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_assign_to_definition; }
	}

	public final Assign_to_definitionContext assign_to_definition() throws RecognitionException {
		Assign_to_definitionContext _localctx = new Assign_to_definitionContext(_ctx, getState());
		enterRule(_localctx, 444, RULE_assign_to_definition);
		int _la;
		try {
			setState(5648);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DISK:
			case DYNAMIC:
			case EXTERNAL:
			case PRINTER:
			case STRING_LITERAL:
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(5627);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==DYNAMIC || _la==EXTERNAL) {
					{
					setState(5621);
					_la = _input.LA(1);
					if ( !(_la==DYNAMIC || _la==EXTERNAL) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(5623); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5622);
						separator();
						}
						}
						setState(5625); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(5629);
				file_spec();
				}
				break;
			case MULTIPLE:
			case REEL:
			case UNIT:
				enterOuterAlt(_localctx, 2);
				{
				setState(5636);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==MULTIPLE) {
					{
					setState(5630);
					match(MULTIPLE);
					setState(5632); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5631);
						separator();
						}
						}
						setState(5634); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(5638);
				_la = _input.LA(1);
				if ( !(_la==REEL || _la==UNIT) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(5646);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,943,_ctx) ) {
				case 1:
					{
					setState(5640); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5639);
						separator();
						}
						}
						setState(5642); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(5644);
					match(FILE);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_specContext extends ParserRuleContext {
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode DISK() { return getToken(cobolParser.DISK, 0); }
		public TerminalNode PRINTER() { return getToken(cobolParser.PRINTER, 0); }
		public File_specContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_spec; }
	}

	public final File_specContext file_spec() throws RecognitionException {
		File_specContext _localctx = new File_specContext(_ctx, getState());
		enterRule(_localctx, 446, RULE_file_spec);
		try {
			setState(5654);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case STRING_LITERAL:
				enterOuterAlt(_localctx, 1);
				{
				setState(5650);
				match(STRING_LITERAL);
				}
				break;
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 2);
				{
				setState(5651);
				qualified_data_item();
				}
				break;
			case DISK:
				enterOuterAlt(_localctx, 3);
				{
				setState(5652);
				match(DISK);
				}
				break;
			case PRINTER:
				enterOuterAlt(_localctx, 4);
				{
				setState(5653);
				match(PRINTER);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class File_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public File_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_file_name; }
	}

	public final File_nameContext file_name() throws RecognitionException {
		File_nameContext _localctx = new File_nameContext(_ctx, getState());
		enterRule(_localctx, 448, RULE_file_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5656);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class I_o_controlContext extends ParserRuleContext {
		public TerminalNode I_O_CONTROL() { return getToken(cobolParser.I_O_CONTROL, 0); }
		public List<TerminalNode> DOT_() { return getTokens(cobolParser.DOT_); }
		public TerminalNode DOT_(int i) {
			return getToken(cobolParser.DOT_, i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<ApplyContext> apply() {
			return getRuleContexts(ApplyContext.class);
		}
		public ApplyContext apply(int i) {
			return getRuleContext(ApplyContext.class,i);
		}
		public List<SameContext> same() {
			return getRuleContexts(SameContext.class);
		}
		public SameContext same(int i) {
			return getRuleContext(SameContext.class,i);
		}
		public List<RerunContext> rerun() {
			return getRuleContexts(RerunContext.class);
		}
		public RerunContext rerun(int i) {
			return getRuleContext(RerunContext.class,i);
		}
		public List<Multiple_fileContext> multiple_file() {
			return getRuleContexts(Multiple_fileContext.class);
		}
		public Multiple_fileContext multiple_file(int i) {
			return getRuleContext(Multiple_fileContext.class,i);
		}
		public I_o_controlContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_i_o_control; }
	}

	public final I_o_controlContext i_o_control() throws RecognitionException {
		I_o_controlContext _localctx = new I_o_controlContext(_ctx, getState());
		enterRule(_localctx, 450, RULE_i_o_control);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5658);
			match(I_O_CONTROL);
			setState(5662);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(5659);
				separator();
				}
				}
				setState(5664);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(5665);
			match(DOT_);
			setState(5669);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,947,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(5666);
					separator();
					}
					} 
				}
				setState(5671);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,947,_ctx);
			}
			setState(5727);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==APPLY || _la==MULTIPLE || _la==RERUN || _la==SAME || _la==DOT_) {
				{
				setState(5681);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==APPLY) {
					{
					{
					setState(5672);
					apply();
					setState(5676);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(5673);
						separator();
						}
						}
						setState(5678);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(5683);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(5693);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==SAME) {
					{
					{
					setState(5684);
					same();
					setState(5688);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(5685);
						separator();
						}
						}
						setState(5690);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(5695);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(5705);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==RERUN) {
					{
					{
					setState(5696);
					rerun();
					setState(5700);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(5697);
						separator();
						}
						}
						setState(5702);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(5707);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(5717);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (_la==MULTIPLE) {
					{
					{
					setState(5708);
					multiple_file();
					setState(5712);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(5709);
						separator();
						}
						}
						setState(5714);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
					}
					setState(5719);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(5720);
				match(DOT_);
				setState(5724);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,956,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5721);
						separator();
						}
						} 
					}
					setState(5726);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,956,_ctx);
				}
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiple_fileContext extends ParserRuleContext {
		public TerminalNode MULTIPLE() { return getToken(cobolParser.MULTIPLE, 0); }
		public TerminalNode FILE() { return getToken(cobolParser.FILE, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode TAPE() { return getToken(cobolParser.TAPE, 0); }
		public TerminalNode CONTAINS() { return getToken(cobolParser.CONTAINS, 0); }
		public List<Multiple_file_definitionContext> multiple_file_definition() {
			return getRuleContexts(Multiple_file_definitionContext.class);
		}
		public Multiple_file_definitionContext multiple_file_definition(int i) {
			return getRuleContext(Multiple_file_definitionContext.class,i);
		}
		public Multiple_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiple_file; }
	}

	public final Multiple_fileContext multiple_file() throws RecognitionException {
		Multiple_fileContext _localctx = new Multiple_fileContext(_ctx, getState());
		enterRule(_localctx, 452, RULE_multiple_file);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5729);
			match(MULTIPLE);
			setState(5731); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5730);
				separator();
				}
				}
				setState(5733); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5735);
			match(FILE);
			setState(5737); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5736);
				separator();
				}
				}
				setState(5739); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5747);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==TAPE) {
				{
				setState(5741);
				match(TAPE);
				setState(5743); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5742);
					separator();
					}
					}
					setState(5745); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5755);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CONTAINS) {
				{
				setState(5749);
				match(CONTAINS);
				setState(5751); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5750);
					separator();
					}
					}
					setState(5753); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5764); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5757);
				multiple_file_definition();
				setState(5761);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,964,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5758);
						separator();
						}
						} 
					}
					setState(5763);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,964,_ctx);
				}
				}
				}
				setState(5766); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiple_file_definitionContext extends ParserRuleContext {
		public Multiple_file_nameContext multiple_file_name() {
			return getRuleContext(Multiple_file_nameContext.class,0);
		}
		public TerminalNode POSITION() { return getToken(cobolParser.POSITION, 0); }
		public Pos_integerContext pos_integer() {
			return getRuleContext(Pos_integerContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public Multiple_file_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiple_file_definition; }
	}

	public final Multiple_file_definitionContext multiple_file_definition() throws RecognitionException {
		Multiple_file_definitionContext _localctx = new Multiple_file_definitionContext(_ctx, getState());
		enterRule(_localctx, 454, RULE_multiple_file_definition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5768);
			multiple_file_name();
			setState(5782);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,968,_ctx) ) {
			case 1:
				{
				setState(5770); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5769);
					separator();
					}
					}
					setState(5772); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5774);
				match(POSITION);
				setState(5776); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5775);
					separator();
					}
					}
					setState(5778); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5780);
				pos_integer();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Multiple_file_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Multiple_file_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multiple_file_name; }
	}

	public final Multiple_file_nameContext multiple_file_name() throws RecognitionException {
		Multiple_file_nameContext _localctx = new Multiple_file_nameContext(_ctx, getState());
		enterRule(_localctx, 456, RULE_multiple_file_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5784);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Pos_integerContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Pos_integerContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_pos_integer; }
	}

	public final Pos_integerContext pos_integer() throws RecognitionException {
		Pos_integerContext _localctx = new Pos_integerContext(_ctx, getState());
		enterRule(_localctx, 458, RULE_pos_integer);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5786);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class RerunContext extends ParserRuleContext {
		public TerminalNode RERUN() { return getToken(cobolParser.RERUN, 0); }
		public Rerun_definitionContext rerun_definition() {
			return getRuleContext(Rerun_definitionContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public TerminalNode EVERY() { return getToken(cobolParser.EVERY, 0); }
		public RerunContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rerun; }
	}

	public final RerunContext rerun() throws RecognitionException {
		RerunContext _localctx = new RerunContext(_ctx, getState());
		enterRule(_localctx, 460, RULE_rerun);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5788);
			match(RERUN);
			setState(5790); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5789);
				separator();
				}
				}
				setState(5792); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5806);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==ON) {
				{
				setState(5794);
				match(ON);
				setState(5796); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5795);
					separator();
					}
					}
					setState(5798); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5800);
				file_name();
				setState(5802); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5801);
					separator();
					}
					}
					setState(5804); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5814);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==EVERY) {
				{
				setState(5808);
				match(EVERY);
				setState(5810); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5809);
					separator();
					}
					}
					setState(5812); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5816);
			rerun_definition();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rerun_definitionContext extends ParserRuleContext {
		public Rerun_def_fileContext rerun_def_file() {
			return getRuleContext(Rerun_def_fileContext.class,0);
		}
		public File_nameContext file_name() {
			return getRuleContext(File_nameContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public Clock_countContext clock_count() {
			return getRuleContext(Clock_countContext.class,0);
		}
		public TerminalNode CLOCK_UNITS() { return getToken(cobolParser.CLOCK_UNITS, 0); }
		public Condition_nameContext condition_name() {
			return getRuleContext(Condition_nameContext.class,0);
		}
		public Rerun_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rerun_definition; }
	}

	public final Rerun_definitionContext rerun_definition() throws RecognitionException {
		Rerun_definitionContext _localctx = new Rerun_definitionContext(_ctx, getState());
		enterRule(_localctx, 462, RULE_rerun_definition);
		int _la;
		try {
			setState(5843);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,979,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(5818);
				rerun_def_file();
				setState(5820); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5819);
					separator();
					}
					}
					setState(5822); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5830);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==OF) {
					{
					setState(5824);
					match(OF);
					setState(5826); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5825);
						separator();
						}
						}
						setState(5828); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(5832);
				file_name();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(5834);
				clock_count();
				setState(5836); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5835);
					separator();
					}
					}
					setState(5838); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5840);
				match(CLOCK_UNITS);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(5842);
				condition_name();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Clock_countContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Clock_countContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_clock_count; }
	}

	public final Clock_countContext clock_count() throws RecognitionException {
		Clock_countContext _localctx = new Clock_countContext(_ctx, getState());
		enterRule(_localctx, 464, RULE_clock_count);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5845);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Condition_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Condition_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_condition_name; }
	}

	public final Condition_nameContext condition_name() throws RecognitionException {
		Condition_nameContext _localctx = new Condition_nameContext(_ctx, getState());
		enterRule(_localctx, 466, RULE_condition_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5847);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rerun_def_fileContext extends ParserRuleContext {
		public TerminalNode REEL() { return getToken(cobolParser.REEL, 0); }
		public TerminalNode UNIT() { return getToken(cobolParser.UNIT, 0); }
		public TerminalNode END() { return getToken(cobolParser.END, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode OF() { return getToken(cobolParser.OF, 0); }
		public Rec_countContext rec_count() {
			return getRuleContext(Rec_countContext.class,0);
		}
		public TerminalNode RECORDS() { return getToken(cobolParser.RECORDS, 0); }
		public Rerun_def_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rerun_def_file; }
	}

	public final Rerun_def_fileContext rerun_def_file() throws RecognitionException {
		Rerun_def_fileContext _localctx = new Rerun_def_fileContext(_ctx, getState());
		enterRule(_localctx, 468, RULE_rerun_def_file);
		int _la;
		try {
			setState(5874);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case END:
			case REEL:
			case UNIT:
				enterOuterAlt(_localctx, 1);
				{
				setState(5863);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==END) {
					{
					setState(5849);
					match(END);
					setState(5851); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5850);
						separator();
						}
						}
						setState(5853); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(5861);
					_errHandler.sync(this);
					_la = _input.LA(1);
					if (_la==OF) {
						{
						setState(5855);
						match(OF);
						setState(5857); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(5856);
							separator();
							}
							}
							setState(5859); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						}
					}

					}
				}

				setState(5865);
				_la = _input.LA(1);
				if ( !(_la==REEL || _la==UNIT) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case NUMERIC_LITERAL:
				enterOuterAlt(_localctx, 2);
				{
				setState(5866);
				rec_count();
				setState(5868); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5867);
					separator();
					}
					}
					setState(5870); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5872);
				match(RECORDS);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Rec_countContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Rec_countContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_rec_count; }
	}

	public final Rec_countContext rec_count() throws RecognitionException {
		Rec_countContext _localctx = new Rec_countContext(_ctx, getState());
		enterRule(_localctx, 470, RULE_rec_count);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5876);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SameContext extends ParserRuleContext {
		public TerminalNode SAME() { return getToken(cobolParser.SAME, 0); }
		public List<Same_area_fileContext> same_area_file() {
			return getRuleContexts(Same_area_fileContext.class);
		}
		public Same_area_fileContext same_area_file(int i) {
			return getRuleContext(Same_area_fileContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode AREA() { return getToken(cobolParser.AREA, 0); }
		public TerminalNode FOR() { return getToken(cobolParser.FOR, 0); }
		public TerminalNode RECORD() { return getToken(cobolParser.RECORD, 0); }
		public TerminalNode SORT() { return getToken(cobolParser.SORT, 0); }
		public TerminalNode SORT_MERGE() { return getToken(cobolParser.SORT_MERGE, 0); }
		public SameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_same; }
	}

	public final SameContext same() throws RecognitionException {
		SameContext _localctx = new SameContext(_ctx, getState());
		enterRule(_localctx, 472, RULE_same);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5878);
			match(SAME);
			setState(5880); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5879);
				separator();
				}
				}
				setState(5882); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5890);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (((((_la - 283)) & ~0x3f) == 0 && ((1L << (_la - 283)) & ((1L << (RECORD - 283)) | (1L << (SORT - 283)) | (1L << (SORT_MERGE - 283)))) != 0)) {
				{
				setState(5884);
				_la = _input.LA(1);
				if ( !(((((_la - 283)) & ~0x3f) == 0 && ((1L << (_la - 283)) & ((1L << (RECORD - 283)) | (1L << (SORT - 283)) | (1L << (SORT_MERGE - 283)))) != 0)) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(5886); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5885);
					separator();
					}
					}
					setState(5888); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5898);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==AREA) {
				{
				setState(5892);
				match(AREA);
				setState(5894); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5893);
					separator();
					}
					}
					setState(5896); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5906);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==FOR) {
				{
				setState(5900);
				match(FOR);
				setState(5902); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5901);
					separator();
					}
					}
					setState(5904); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
			}

			setState(5908);
			same_area_file();
			setState(5916); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(5910); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5909);
						separator();
						}
						}
						setState(5912); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(5914);
					same_area_file();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(5918); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,994,_ctx);
			} while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Same_area_fileContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Same_area_fileContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_same_area_file; }
	}

	public final Same_area_fileContext same_area_file() throws RecognitionException {
		Same_area_fileContext _localctx = new Same_area_fileContext(_ctx, getState());
		enterRule(_localctx, 474, RULE_same_area_file);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5920);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ApplyContext extends ParserRuleContext {
		public TerminalNode APPLY() { return getToken(cobolParser.APPLY, 0); }
		public TerminalNode ON() { return getToken(cobolParser.ON, 0); }
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public List<Apply_definitionContext> apply_definition() {
			return getRuleContexts(Apply_definitionContext.class);
		}
		public Apply_definitionContext apply_definition(int i) {
			return getRuleContext(Apply_definitionContext.class,i);
		}
		public List<File_nameContext> file_name() {
			return getRuleContexts(File_nameContext.class);
		}
		public File_nameContext file_name(int i) {
			return getRuleContext(File_nameContext.class,i);
		}
		public ApplyContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_apply; }
	}

	public final ApplyContext apply() throws RecognitionException {
		ApplyContext _localctx = new ApplyContext(_ctx, getState());
		enterRule(_localctx, 476, RULE_apply);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(5922);
			match(APPLY);
			setState(5924); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5923);
				separator();
				}
				}
				setState(5926); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5934); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5928);
				apply_definition();
				setState(5930); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5929);
					separator();
					}
					}
					setState(5932); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				}
				}
				setState(5936); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 80)) & ~0x3f) == 0 && ((1L << (_la - 80)) & ((1L << (CONTIGUOUS - 80)) | (1L << (CONTIGUOUS_BEST_TRY - 80)) | (1L << (DEFERRED_WRITE - 80)))) != 0) || _la==EXTENSION || _la==FILL_SIZE || ((((_la - 223)) & ~0x3f) == 0 && ((1L << (_la - 223)) & ((1L << (LOCK_HOLDING - 223)) | (1L << (MASS_INSERT - 223)) | (1L << (PREALLOCATION - 223)) | (1L << (PRINT_CONTROL - 223)))) != 0) || _la==WINDOW );
			setState(5938);
			match(ON);
			setState(5940); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5939);
				separator();
				}
				}
				setState(5942); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(5951); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(5944);
				file_name();
				setState(5948);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,999,_ctx);
				while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1 ) {
						{
						{
						setState(5945);
						separator();
						}
						} 
					}
					setState(5950);
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,999,_ctx);
				}
				}
				}
				setState(5953); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( _la==USER_DEFINED_WORD );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Apply_definitionContext extends ParserRuleContext {
		public TerminalNode DEFERRED_WRITE() { return getToken(cobolParser.DEFERRED_WRITE, 0); }
		public TerminalNode EXTENSION() { return getToken(cobolParser.EXTENSION, 0); }
		public Extend_amtContext extend_amt() {
			return getRuleContext(Extend_amtContext.class,0);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public TerminalNode FILL_SIZE() { return getToken(cobolParser.FILL_SIZE, 0); }
		public TerminalNode LOCK_HOLDING() { return getToken(cobolParser.LOCK_HOLDING, 0); }
		public TerminalNode MASS_INSERT() { return getToken(cobolParser.MASS_INSERT, 0); }
		public TerminalNode PREALLOCATION() { return getToken(cobolParser.PREALLOCATION, 0); }
		public Preall_amtContext preall_amt() {
			return getRuleContext(Preall_amtContext.class,0);
		}
		public TerminalNode CONTIGUOUS() { return getToken(cobolParser.CONTIGUOUS, 0); }
		public TerminalNode CONTIGUOUS_BEST_TRY() { return getToken(cobolParser.CONTIGUOUS_BEST_TRY, 0); }
		public TerminalNode PRINT_CONTROL() { return getToken(cobolParser.PRINT_CONTROL, 0); }
		public TerminalNode WINDOW() { return getToken(cobolParser.WINDOW, 0); }
		public Window_ptrsContext window_ptrs() {
			return getRuleContext(Window_ptrsContext.class,0);
		}
		public Apply_definitionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_apply_definition; }
	}

	public final Apply_definitionContext apply_definition() throws RecognitionException {
		Apply_definitionContext _localctx = new Apply_definitionContext(_ctx, getState());
		enterRule(_localctx, 478, RULE_apply_definition);
		int _la;
		try {
			setState(5992);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DEFERRED_WRITE:
				enterOuterAlt(_localctx, 1);
				{
				setState(5955);
				match(DEFERRED_WRITE);
				}
				break;
			case EXTENSION:
				enterOuterAlt(_localctx, 2);
				{
				setState(5956);
				match(EXTENSION);
				setState(5958); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5957);
					separator();
					}
					}
					setState(5960); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5962);
				extend_amt();
				}
				break;
			case FILL_SIZE:
				enterOuterAlt(_localctx, 3);
				{
				setState(5964);
				match(FILL_SIZE);
				}
				break;
			case LOCK_HOLDING:
				enterOuterAlt(_localctx, 4);
				{
				setState(5965);
				match(LOCK_HOLDING);
				}
				break;
			case MASS_INSERT:
				enterOuterAlt(_localctx, 5);
				{
				setState(5966);
				match(MASS_INSERT);
				}
				break;
			case CONTIGUOUS:
			case CONTIGUOUS_BEST_TRY:
			case PREALLOCATION:
				enterOuterAlt(_localctx, 6);
				{
				setState(5973);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CONTIGUOUS || _la==CONTIGUOUS_BEST_TRY) {
					{
					setState(5967);
					_la = _input.LA(1);
					if ( !(_la==CONTIGUOUS || _la==CONTIGUOUS_BEST_TRY) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					setState(5969); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(5968);
						separator();
						}
						}
						setState(5971); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					}
				}

				setState(5975);
				match(PREALLOCATION);
				setState(5977); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5976);
					separator();
					}
					}
					setState(5979); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5981);
				preall_amt();
				}
				break;
			case PRINT_CONTROL:
				enterOuterAlt(_localctx, 7);
				{
				setState(5983);
				match(PRINT_CONTROL);
				}
				break;
			case WINDOW:
				enterOuterAlt(_localctx, 8);
				{
				setState(5984);
				match(WINDOW);
				setState(5986); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(5985);
					separator();
					}
					}
					setState(5988); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(5990);
				window_ptrs();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Window_ptrsContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Window_ptrsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_window_ptrs; }
	}

	public final Window_ptrsContext window_ptrs() throws RecognitionException {
		Window_ptrsContext _localctx = new Window_ptrsContext(_ctx, getState());
		enterRule(_localctx, 480, RULE_window_ptrs);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5994);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Preall_amtContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Preall_amtContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_preall_amt; }
	}

	public final Preall_amtContext preall_amt() throws RecognitionException {
		Preall_amtContext _localctx = new Preall_amtContext(_ctx, getState());
		enterRule(_localctx, 482, RULE_preall_amt);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5996);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Extend_amtContext extends ParserRuleContext {
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public Extend_amtContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_extend_amt; }
	}

	public final Extend_amtContext extend_amt() throws RecognitionException {
		Extend_amtContext _localctx = new Extend_amtContext(_ctx, getState());
		enterRule(_localctx, 484, RULE_extend_amt);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(5998);
			match(NUMERIC_LITERAL);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Arithmetic_expressionContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Unary_arithmetic_operatorContext unary_arithmetic_operator() {
			return getRuleContext(Unary_arithmetic_operatorContext.class,0);
		}
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public TerminalNode NUMERIC_LITERAL() { return getToken(cobolParser.NUMERIC_LITERAL, 0); }
		public TerminalNode STRING_LITERAL() { return getToken(cobolParser.STRING_LITERAL, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public TerminalNode ZEROS() { return getToken(cobolParser.ZEROS, 0); }
		public TerminalNode ZEROES() { return getToken(cobolParser.ZEROES, 0); }
		public Binary_arithmetic_operatorContext binary_arithmetic_operator() {
			return getRuleContext(Binary_arithmetic_operatorContext.class,0);
		}
		public Arithmetic_expressionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arithmetic_expression; }
	}

	public final Arithmetic_expressionContext arithmetic_expression() throws RecognitionException {
		return arithmetic_expression(0);
	}

	private Arithmetic_expressionContext arithmetic_expression(int _p) throws RecognitionException {
		ParserRuleContext _parentctx = _ctx;
		int _parentState = getState();
		Arithmetic_expressionContext _localctx = new Arithmetic_expressionContext(_ctx, _parentState);
		Arithmetic_expressionContext _prevctx = _localctx;
		int _startState = 486;
		enterRecursionRule(_localctx, 486, RULE_arithmetic_expression, _p);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6032);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case LPAREN_:
				{
				setState(6001);
				match(LPAREN_);
				setState(6005);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6002);
					arithmetic_separator();
					}
					}
					setState(6007);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6008);
				arithmetic_expression(0);
				setState(6012);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6009);
					arithmetic_separator();
					}
					}
					setState(6014);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6015);
				match(RPAREN_);
				}
				break;
			case PLUS_:
			case MINUS_:
				{
				setState(6017);
				unary_arithmetic_operator();
				setState(6021);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6018);
					arithmetic_separator();
					}
					}
					setState(6023);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6024);
				arithmetic_expression(7);
				}
				break;
			case FUNCTION:
			case USER_DEFINED_WORD:
				{
				setState(6026);
				identifier();
				}
				break;
			case NUMERIC_LITERAL:
				{
				setState(6027);
				match(NUMERIC_LITERAL);
				}
				break;
			case STRING_LITERAL:
				{
				setState(6028);
				match(STRING_LITERAL);
				}
				break;
			case ZERO:
				{
				setState(6029);
				match(ZERO);
				}
				break;
			case ZEROS:
				{
				setState(6030);
				match(ZEROS);
				}
				break;
			case ZEROES:
				{
				setState(6031);
				match(ZEROES);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			_ctx.stop = _input.LT(-1);
			setState(6052);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1013,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( _parseListeners!=null ) triggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Arithmetic_expressionContext(_parentctx, _parentState);
					pushNewRecursionContext(_localctx, _startState, RULE_arithmetic_expression);
					setState(6034);
					if (!(precpred(_ctx, 8))) throw new FailedPredicateException(this, "precpred(_ctx, 8)");
					setState(6038);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(6035);
						arithmetic_separator();
						}
						}
						setState(6040);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(6041);
					binary_arithmetic_operator();
					setState(6045);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(6042);
						arithmetic_separator();
						}
						}
						setState(6047);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(6048);
					arithmetic_expression(9);
					}
					} 
				}
				setState(6054);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1013,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public static class Binary_arithmetic_operatorContext extends ParserRuleContext {
		public TerminalNode PLUS_() { return getToken(cobolParser.PLUS_, 0); }
		public TerminalNode MINUS_() { return getToken(cobolParser.MINUS_, 0); }
		public List<TerminalNode> STAR_() { return getTokens(cobolParser.STAR_); }
		public TerminalNode STAR_(int i) {
			return getToken(cobolParser.STAR_, i);
		}
		public TerminalNode SLASH_() { return getToken(cobolParser.SLASH_, 0); }
		public Binary_arithmetic_operatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_binary_arithmetic_operator; }
	}

	public final Binary_arithmetic_operatorContext binary_arithmetic_operator() throws RecognitionException {
		Binary_arithmetic_operatorContext _localctx = new Binary_arithmetic_operatorContext(_ctx, getState());
		enterRule(_localctx, 488, RULE_binary_arithmetic_operator);
		try {
			setState(6061);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1014,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(6055);
				match(PLUS_);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(6056);
				match(MINUS_);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(6057);
				match(STAR_);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(6058);
				match(SLASH_);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(6059);
				match(STAR_);
				setState(6060);
				match(STAR_);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Unary_arithmetic_operatorContext extends ParserRuleContext {
		public TerminalNode PLUS_() { return getToken(cobolParser.PLUS_, 0); }
		public TerminalNode MINUS_() { return getToken(cobolParser.MINUS_, 0); }
		public Unary_arithmetic_operatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_unary_arithmetic_operator; }
	}

	public final Unary_arithmetic_operatorContext unary_arithmetic_operator() throws RecognitionException {
		Unary_arithmetic_operatorContext _localctx = new Unary_arithmetic_operatorContext(_ctx, getState());
		enterRule(_localctx, 490, RULE_unary_arithmetic_operator);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6063);
			_la = _input.LA(1);
			if ( !(_la==PLUS_ || _la==MINUS_) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Logic_expressionContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public List<Logic_expressionContext> logic_expression() {
			return getRuleContexts(Logic_expressionContext.class);
		}
		public Logic_expressionContext logic_expression(int i) {
			return getRuleContext(Logic_expressionContext.class,i);
		}
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public Class_conditionContext class_condition() {
			return getRuleContext(Class_conditionContext.class,0);
		}
		public Logic_conditionContext logic_condition() {
			return getRuleContext(Logic_conditionContext.class,0);
		}
		public Sign_conditionContext sign_condition() {
			return getRuleContext(Sign_conditionContext.class,0);
		}
		public Success_failure_conditionContext success_failure_condition() {
			return getRuleContext(Success_failure_conditionContext.class,0);
		}
		public Logic_operationContext logic_operation() {
			return getRuleContext(Logic_operationContext.class,0);
		}
		public Logic_expressionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_logic_expression; }
	}

	public final Logic_expressionContext logic_expression() throws RecognitionException {
		return logic_expression(0);
	}

	private Logic_expressionContext logic_expression(int _p) throws RecognitionException {
		ParserRuleContext _parentctx = _ctx;
		int _parentState = getState();
		Logic_expressionContext _localctx = new Logic_expressionContext(_ctx, _parentState);
		Logic_expressionContext _prevctx = _localctx;
		int _startState = 492;
		enterRecursionRule(_localctx, 492, RULE_logic_expression, _p);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6094);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1018,_ctx) ) {
			case 1:
				{
				setState(6066);
				match(LPAREN_);
				setState(6070);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6067);
					arithmetic_separator();
					}
					}
					setState(6072);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6073);
				logic_expression(0);
				setState(6077);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6074);
					arithmetic_separator();
					}
					}
					setState(6079);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6080);
				match(RPAREN_);
				}
				break;
			case 2:
				{
				setState(6082);
				match(NOT);
				setState(6086);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6083);
					arithmetic_separator();
					}
					}
					setState(6088);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6089);
				logic_expression(5);
				}
				break;
			case 3:
				{
				setState(6090);
				class_condition();
				}
				break;
			case 4:
				{
				setState(6091);
				logic_condition(0);
				}
				break;
			case 5:
				{
				setState(6092);
				sign_condition();
				}
				break;
			case 6:
				{
				setState(6093);
				success_failure_condition();
				}
				break;
			}
			_ctx.stop = _input.LT(-1);
			setState(6114);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1021,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( _parseListeners!=null ) triggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Logic_expressionContext(_parentctx, _parentState);
					pushNewRecursionContext(_localctx, _startState, RULE_logic_expression);
					setState(6096);
					if (!(precpred(_ctx, 6))) throw new FailedPredicateException(this, "precpred(_ctx, 6)");
					setState(6100);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(6097);
						arithmetic_separator();
						}
						}
						setState(6102);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(6103);
					logic_operation();
					setState(6107);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(6104);
						arithmetic_separator();
						}
						}
						setState(6109);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(6110);
					logic_expression(7);
					}
					} 
				}
				setState(6116);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1021,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public static class Success_failure_conditionContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public TerminalNode SUCCESS() { return getToken(cobolParser.SUCCESS, 0); }
		public TerminalNode FAILURE() { return getToken(cobolParser.FAILURE, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Success_failure_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_success_failure_condition; }
	}

	public final Success_failure_conditionContext success_failure_condition() throws RecognitionException {
		Success_failure_conditionContext _localctx = new Success_failure_conditionContext(_ctx, getState());
		enterRule(_localctx, 494, RULE_success_failure_condition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6117);
			qualified_data_item();
			setState(6125);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1023,_ctx) ) {
			case 1:
				{
				setState(6119); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6118);
					arithmetic_separator();
					}
					}
					setState(6121); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(6123);
				match(IS);
				}
				break;
			}
			setState(6128); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6127);
				arithmetic_separator();
				}
				}
				setState(6130); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(6132);
			_la = _input.LA(1);
			if ( !(_la==FAILURE || _la==SUCCESS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Logic_conditionContext extends ParserRuleContext {
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public Condition_operatorContext condition_operator() {
			return getRuleContext(Condition_operatorContext.class,0);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Class_conditionContext class_condition() {
			return getRuleContext(Class_conditionContext.class,0);
		}
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public Logic_conditionContext logic_condition() {
			return getRuleContext(Logic_conditionContext.class,0);
		}
		public Logic_operationContext logic_operation() {
			return getRuleContext(Logic_operationContext.class,0);
		}
		public Logic_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_logic_condition; }
	}

	public final Logic_conditionContext logic_condition() throws RecognitionException {
		return logic_condition(0);
	}

	private Logic_conditionContext logic_condition(int _p) throws RecognitionException {
		ParserRuleContext _parentctx = _ctx;
		int _parentState = getState();
		Logic_conditionContext _localctx = new Logic_conditionContext(_ctx, _parentState);
		Logic_conditionContext _prevctx = _localctx;
		int _startState = 496;
		enterRecursionRule(_localctx, 496, RULE_logic_condition, _p);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6153);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1027,_ctx) ) {
			case 1:
				{
				setState(6135);
				arithmetic_expression(0);
				setState(6139);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6136);
					arithmetic_separator();
					}
					}
					setState(6141);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6142);
				condition_operator();
				setState(6146);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6143);
					arithmetic_separator();
					}
					}
					setState(6148);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6149);
				arithmetic_expression(0);
				}
				break;
			case 2:
				{
				setState(6151);
				class_condition();
				}
				break;
			case 3:
				{
				setState(6152);
				qualified_data_item();
				}
				break;
			}
			_ctx.stop = _input.LT(-1);
			setState(6179);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1031,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( _parseListeners!=null ) triggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Logic_conditionContext(_parentctx, _parentState);
					pushNewRecursionContext(_localctx, _startState, RULE_logic_condition);
					setState(6155);
					if (!(precpred(_ctx, 1))) throw new FailedPredicateException(this, "precpred(_ctx, 1)");
					setState(6157); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6156);
						arithmetic_separator();
						}
						}
						setState(6159); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(6161);
					logic_operation();
					setState(6165);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(6162);
						arithmetic_separator();
						}
						}
						setState(6167);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(6168);
					condition_operator();
					setState(6172);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(6169);
						arithmetic_separator();
						}
						}
						setState(6174);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(6175);
					arithmetic_expression(0);
					}
					} 
				}
				setState(6181);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1031,_ctx);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			unrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public static class Logic_operationContext extends ParserRuleContext {
		public TerminalNode AND() { return getToken(cobolParser.AND, 0); }
		public TerminalNode OR() { return getToken(cobolParser.OR, 0); }
		public Logic_operationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_logic_operation; }
	}

	public final Logic_operationContext logic_operation() throws RecognitionException {
		Logic_operationContext _localctx = new Logic_operationContext(_ctx, getState());
		enterRule(_localctx, 498, RULE_logic_operation);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6182);
			_la = _input.LA(1);
			if ( !(_la==AND || _la==OR) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sign_conditionContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public Sign_condition_nameContext sign_condition_name() {
			return getRuleContext(Sign_condition_nameContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Sign_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sign_condition; }
	}

	public final Sign_conditionContext sign_condition() throws RecognitionException {
		Sign_conditionContext _localctx = new Sign_conditionContext(_ctx, getState());
		enterRule(_localctx, 500, RULE_sign_condition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6184);
			arithmetic_expression(0);
			setState(6192);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1033,_ctx) ) {
			case 1:
				{
				setState(6186); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6185);
					arithmetic_separator();
					}
					}
					setState(6188); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(6190);
				match(IS);
				}
				break;
			}
			setState(6201);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1035,_ctx) ) {
			case 1:
				{
				setState(6195); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6194);
					arithmetic_separator();
					}
					}
					setState(6197); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(6199);
				match(NOT);
				}
				break;
			}
			setState(6204); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6203);
				arithmetic_separator();
				}
				}
				setState(6206); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(6208);
			sign_condition_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Sign_condition_nameContext extends ParserRuleContext {
		public TerminalNode POSITIVE() { return getToken(cobolParser.POSITIVE, 0); }
		public TerminalNode NEGATIVE() { return getToken(cobolParser.NEGATIVE, 0); }
		public TerminalNode ZERO() { return getToken(cobolParser.ZERO, 0); }
		public Sign_condition_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_sign_condition_name; }
	}

	public final Sign_condition_nameContext sign_condition_name() throws RecognitionException {
		Sign_condition_nameContext _localctx = new Sign_condition_nameContext(_ctx, getState());
		enterRule(_localctx, 502, RULE_sign_condition_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6210);
			_la = _input.LA(1);
			if ( !(_la==NEGATIVE || _la==POSITIVE || _la==ZERO) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_conditionContext extends ParserRuleContext {
		public IdentifierContext identifier() {
			return getRuleContext(IdentifierContext.class,0);
		}
		public Class_condition_nameContext class_condition_name() {
			return getRuleContext(Class_condition_nameContext.class,0);
		}
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Class_conditionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_condition; }
	}

	public final Class_conditionContext class_condition() throws RecognitionException {
		Class_conditionContext _localctx = new Class_conditionContext(_ctx, getState());
		enterRule(_localctx, 504, RULE_class_condition);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6212);
			identifier();
			setState(6220);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1038,_ctx) ) {
			case 1:
				{
				setState(6214); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6213);
					arithmetic_separator();
					}
					}
					setState(6216); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(6218);
				match(IS);
				}
				break;
			}
			setState(6229);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1040,_ctx) ) {
			case 1:
				{
				setState(6223); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6222);
					arithmetic_separator();
					}
					}
					setState(6225); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(6227);
				match(NOT);
				}
				break;
			}
			setState(6232); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(6231);
				arithmetic_separator();
				}
				}
				setState(6234); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
			setState(6236);
			class_condition_name();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Class_condition_nameContext extends ParserRuleContext {
		public TerminalNode NUMERIC() { return getToken(cobolParser.NUMERIC, 0); }
		public TerminalNode ALPHABETIC() { return getToken(cobolParser.ALPHABETIC, 0); }
		public TerminalNode ALPHABETIC_LOWER() { return getToken(cobolParser.ALPHABETIC_LOWER, 0); }
		public TerminalNode ALPHABETIC_UPPER() { return getToken(cobolParser.ALPHABETIC_UPPER, 0); }
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Class_condition_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_class_condition_name; }
	}

	public final Class_condition_nameContext class_condition_name() throws RecognitionException {
		Class_condition_nameContext _localctx = new Class_condition_nameContext(_ctx, getState());
		enterRule(_localctx, 506, RULE_class_condition_name);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6238);
			_la = _input.LA(1);
			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ALPHABETIC) | (1L << ALPHABETIC_LOWER) | (1L << ALPHABETIC_UPPER))) != 0) || _la==NUMERIC || _la==USER_DEFINED_WORD) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Condition_operatorContext extends ParserRuleContext {
		public TerminalNode GREATER() { return getToken(cobolParser.GREATER, 0); }
		public TerminalNode OR() { return getToken(cobolParser.OR, 0); }
		public TerminalNode EQUAL() { return getToken(cobolParser.EQUAL, 0); }
		public TerminalNode GE_() { return getToken(cobolParser.GE_, 0); }
		public TerminalNode LESS() { return getToken(cobolParser.LESS, 0); }
		public TerminalNode LE_() { return getToken(cobolParser.LE_, 0); }
		public TerminalNode IS() { return getToken(cobolParser.IS, 0); }
		public TerminalNode GT_() { return getToken(cobolParser.GT_, 0); }
		public TerminalNode LT_() { return getToken(cobolParser.LT_, 0); }
		public TerminalNode EQUAL_() { return getToken(cobolParser.EQUAL_, 0); }
		public TerminalNode NOT() { return getToken(cobolParser.NOT, 0); }
		public TerminalNode THAN() { return getToken(cobolParser.THAN, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public TerminalNode TO() { return getToken(cobolParser.TO, 0); }
		public Condition_operatorContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_condition_operator; }
	}

	public final Condition_operatorContext condition_operator() throws RecognitionException {
		Condition_operatorContext _localctx = new Condition_operatorContext(_ctx, getState());
		enterRule(_localctx, 508, RULE_condition_operator);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6247);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==IS) {
				{
				setState(6240);
				match(IS);
				setState(6244);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6241);
					arithmetic_separator();
					}
					}
					setState(6246);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				}
			}

			setState(6384);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1071,_ctx) ) {
			case 1:
				{
				setState(6256);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==NOT) {
					{
					setState(6249);
					match(NOT);
					setState(6253);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(6250);
						arithmetic_separator();
						}
						}
						setState(6255);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					}
				}

				setState(6318);
				_errHandler.sync(this);
				switch (_input.LA(1)) {
				case GREATER:
					{
					setState(6258);
					match(GREATER);
					setState(6266);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1047,_ctx) ) {
					case 1:
						{
						setState(6260); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6259);
							arithmetic_separator();
							}
							}
							setState(6262); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(6264);
						match(THAN);
						}
						break;
					}
					}
					break;
				case GT_:
					{
					setState(6268);
					match(GT_);
					setState(6276);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1049,_ctx) ) {
					case 1:
						{
						setState(6270); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6269);
							arithmetic_separator();
							}
							}
							setState(6272); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(6274);
						match(THAN);
						}
						break;
					}
					}
					break;
				case LESS:
					{
					setState(6278);
					match(LESS);
					setState(6286);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1051,_ctx) ) {
					case 1:
						{
						setState(6280); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6279);
							arithmetic_separator();
							}
							}
							setState(6282); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(6284);
						match(THAN);
						}
						break;
					}
					}
					break;
				case LT_:
					{
					setState(6288);
					match(LT_);
					setState(6296);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1053,_ctx) ) {
					case 1:
						{
						setState(6290); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6289);
							arithmetic_separator();
							}
							}
							setState(6292); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(6294);
						match(THAN);
						}
						break;
					}
					}
					break;
				case EQUAL:
					{
					setState(6298);
					match(EQUAL);
					setState(6306);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1055,_ctx) ) {
					case 1:
						{
						setState(6300); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6299);
							arithmetic_separator();
							}
							}
							setState(6302); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(6304);
						match(TO);
						}
						break;
					}
					}
					break;
				case EQUAL_:
					{
					setState(6308);
					match(EQUAL_);
					setState(6316);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,1057,_ctx) ) {
					case 1:
						{
						setState(6310); 
						_errHandler.sync(this);
						_la = _input.LA(1);
						do {
							{
							{
							setState(6309);
							arithmetic_separator();
							}
							}
							setState(6312); 
							_errHandler.sync(this);
							_la = _input.LA(1);
						} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
						setState(6314);
						match(TO);
						}
						break;
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			case 2:
				{
				setState(6320);
				match(GREATER);
				setState(6328);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1060,_ctx) ) {
				case 1:
					{
					setState(6322); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6321);
						arithmetic_separator();
						}
						}
						setState(6324); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(6326);
					match(THAN);
					}
					break;
				}
				setState(6331); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6330);
					arithmetic_separator();
					}
					}
					setState(6333); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(6335);
				match(OR);
				setState(6337); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6336);
					arithmetic_separator();
					}
					}
					setState(6339); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(6341);
				match(EQUAL);
				setState(6349);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1064,_ctx) ) {
				case 1:
					{
					setState(6343); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6342);
						arithmetic_separator();
						}
						}
						setState(6345); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(6347);
					match(TO);
					}
					break;
				}
				}
				break;
			case 3:
				{
				setState(6351);
				match(GE_);
				}
				break;
			case 4:
				{
				setState(6352);
				match(LESS);
				setState(6360);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1066,_ctx) ) {
				case 1:
					{
					setState(6354); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6353);
						arithmetic_separator();
						}
						}
						setState(6356); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(6358);
					match(THAN);
					}
					break;
				}
				setState(6363); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6362);
					arithmetic_separator();
					}
					}
					setState(6365); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(6367);
				match(OR);
				setState(6369); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					{
					setState(6368);
					arithmetic_separator();
					}
					}
					setState(6371); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
				setState(6373);
				match(EQUAL);
				setState(6381);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1070,_ctx) ) {
				case 1:
					{
					setState(6375); 
					_errHandler.sync(this);
					_la = _input.LA(1);
					do {
						{
						{
						setState(6374);
						arithmetic_separator();
						}
						}
						setState(6377); 
						_errHandler.sync(this);
						_la = _input.LA(1);
					} while ( ((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0) );
					setState(6379);
					match(TO);
					}
					break;
				}
				}
				break;
			case 5:
				{
				setState(6383);
				match(LE_);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Identifier_lvalueContext extends ParserRuleContext {
		public Qualified_data_itemContext qualified_data_item() {
			return getRuleContext(Qualified_data_itemContext.class,0);
		}
		public SubscriptingContext subscripting() {
			return getRuleContext(SubscriptingContext.class,0);
		}
		public Reference_modificationContext reference_modification() {
			return getRuleContext(Reference_modificationContext.class,0);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public Identifier_lvalueContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identifier_lvalue; }
	}

	public final Identifier_lvalueContext identifier_lvalue() throws RecognitionException {
		Identifier_lvalueContext _localctx = new Identifier_lvalueContext(_ctx, getState());
		enterRule(_localctx, 510, RULE_identifier_lvalue);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6386);
			qualified_data_item();
			setState(6394);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1073,_ctx) ) {
			case 1:
				{
				setState(6390);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6387);
					arithmetic_separator();
					}
					}
					setState(6392);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6393);
				subscripting();
				}
				break;
			}
			setState(6403);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1075,_ctx) ) {
			case 1:
				{
				setState(6399);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6396);
					arithmetic_separator();
					}
					}
					setState(6401);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6402);
				reference_modification();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class IdentifierContext extends ParserRuleContext {
		public Identifier_lvalueContext identifier_lvalue() {
			return getRuleContext(Identifier_lvalueContext.class,0);
		}
		public TerminalNode FUNCTION() { return getToken(cobolParser.FUNCTION, 0); }
		public Function_nameContext function_name() {
			return getRuleContext(Function_nameContext.class,0);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public ArgumentsContext arguments() {
			return getRuleContext(ArgumentsContext.class,0);
		}
		public Reference_modificationContext reference_modification() {
			return getRuleContext(Reference_modificationContext.class,0);
		}
		public IdentifierContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_identifier; }
	}

	public final IdentifierContext identifier() throws RecognitionException {
		IdentifierContext _localctx = new IdentifierContext(_ctx, getState());
		enterRule(_localctx, 512, RULE_identifier);
		int _la;
		try {
			setState(6432);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case USER_DEFINED_WORD:
				enterOuterAlt(_localctx, 1);
				{
				setState(6405);
				identifier_lvalue();
				}
				break;
			case FUNCTION:
				enterOuterAlt(_localctx, 2);
				{
				setState(6406);
				match(FUNCTION);
				setState(6410);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6407);
					arithmetic_separator();
					}
					}
					setState(6412);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6413);
				function_name();
				setState(6421);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1078,_ctx) ) {
				case 1:
					{
					setState(6417);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(6414);
						arithmetic_separator();
						}
						}
						setState(6419);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(6420);
					arguments();
					}
					break;
				}
				setState(6430);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,1080,_ctx) ) {
				case 1:
					{
					setState(6426);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(6423);
						arithmetic_separator();
						}
						}
						setState(6428);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(6429);
					reference_modification();
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArgumentsContext extends ParserRuleContext {
		public SubscriptingContext subscripting() {
			return getRuleContext(SubscriptingContext.class,0);
		}
		public ArgumentsContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arguments; }
	}

	public final ArgumentsContext arguments() throws RecognitionException {
		ArgumentsContext _localctx = new ArgumentsContext(_ctx, getState());
		enterRule(_localctx, 514, RULE_arguments);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6434);
			subscripting();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SubscriptingContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_expressionContext> arithmetic_expression() {
			return getRuleContexts(Arithmetic_expressionContext.class);
		}
		public Arithmetic_expressionContext arithmetic_expression(int i) {
			return getRuleContext(Arithmetic_expressionContext.class,i);
		}
		public List<TerminalNode> ALL() { return getTokens(cobolParser.ALL); }
		public TerminalNode ALL(int i) {
			return getToken(cobolParser.ALL, i);
		}
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public List<SeparatorContext> separator() {
			return getRuleContexts(SeparatorContext.class);
		}
		public SeparatorContext separator(int i) {
			return getRuleContext(SeparatorContext.class,i);
		}
		public SubscriptingContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_subscripting; }
	}

	public final SubscriptingContext subscripting() throws RecognitionException {
		SubscriptingContext _localctx = new SubscriptingContext(_ctx, getState());
		enterRule(_localctx, 516, RULE_subscripting);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(6436);
			match(LPAREN_);
			setState(6440);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(6437);
				arithmetic_separator();
				}
				}
				setState(6442);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6445);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case FUNCTION:
			case ZERO:
			case ZEROES:
			case ZEROS:
			case PLUS_:
			case MINUS_:
			case LPAREN_:
			case STRING_LITERAL:
			case NUMERIC_LITERAL:
			case USER_DEFINED_WORD:
				{
				setState(6443);
				arithmetic_expression(0);
				}
				break;
			case ALL:
				{
				setState(6444);
				match(ALL);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			setState(6459);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,1086,_ctx);
			while ( _alt!=2 && _alt!=org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(6450);
					_errHandler.sync(this);
					_la = _input.LA(1);
					while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (COMMA_ - 389)) | (1L << (SEMI_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
						{
						{
						setState(6447);
						separator();
						}
						}
						setState(6452);
						_errHandler.sync(this);
						_la = _input.LA(1);
					}
					setState(6455);
					_errHandler.sync(this);
					switch (_input.LA(1)) {
					case FUNCTION:
					case ZERO:
					case ZEROES:
					case ZEROS:
					case PLUS_:
					case MINUS_:
					case LPAREN_:
					case STRING_LITERAL:
					case NUMERIC_LITERAL:
					case USER_DEFINED_WORD:
						{
						setState(6453);
						arithmetic_expression(0);
						}
						break;
					case ALL:
						{
						setState(6454);
						match(ALL);
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					}
					} 
				}
				setState(6461);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,1086,_ctx);
			}
			setState(6465);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(6462);
				arithmetic_separator();
				}
				}
				setState(6467);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6468);
			match(RPAREN_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Reference_modificationContext extends ParserRuleContext {
		public TerminalNode LPAREN_() { return getToken(cobolParser.LPAREN_, 0); }
		public Leftmost_character_positionContext leftmost_character_position() {
			return getRuleContext(Leftmost_character_positionContext.class,0);
		}
		public TerminalNode COLON_() { return getToken(cobolParser.COLON_, 0); }
		public TerminalNode RPAREN_() { return getToken(cobolParser.RPAREN_, 0); }
		public List<Arithmetic_separatorContext> arithmetic_separator() {
			return getRuleContexts(Arithmetic_separatorContext.class);
		}
		public Arithmetic_separatorContext arithmetic_separator(int i) {
			return getRuleContext(Arithmetic_separatorContext.class,i);
		}
		public LengthContext length() {
			return getRuleContext(LengthContext.class,0);
		}
		public Reference_modificationContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_reference_modification; }
	}

	public final Reference_modificationContext reference_modification() throws RecognitionException {
		Reference_modificationContext _localctx = new Reference_modificationContext(_ctx, getState());
		enterRule(_localctx, 518, RULE_reference_modification);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6470);
			match(LPAREN_);
			setState(6474);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(6471);
				arithmetic_separator();
				}
				}
				setState(6476);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6477);
			leftmost_character_position();
			setState(6481);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(6478);
				arithmetic_separator();
				}
				}
				setState(6483);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6484);
			match(COLON_);
			setState(6492);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1091,_ctx) ) {
			case 1:
				{
				setState(6488);
				_errHandler.sync(this);
				_la = _input.LA(1);
				while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
					{
					{
					setState(6485);
					arithmetic_separator();
					}
					}
					setState(6490);
					_errHandler.sync(this);
					_la = _input.LA(1);
				}
				setState(6491);
				length();
				}
				break;
			}
			setState(6497);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 389)) & ~0x3f) == 0 && ((1L << (_la - 389)) & ((1L << (START_SLASH_ - 389)) | (1L << (START_STAR_ - 389)) | (1L << (START_FOUR_SPACES - 389)) | (1L << (WHITESPACE - 389)) | (1L << (NEWLINE - 389)))) != 0)) {
				{
				{
				setState(6494);
				arithmetic_separator();
				}
				}
				setState(6499);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(6500);
			match(RPAREN_);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Leftmost_character_positionContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public Leftmost_character_positionContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_leftmost_character_position; }
	}

	public final Leftmost_character_positionContext leftmost_character_position() throws RecognitionException {
		Leftmost_character_positionContext _localctx = new Leftmost_character_positionContext(_ctx, getState());
		enterRule(_localctx, 520, RULE_leftmost_character_position);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6502);
			arithmetic_expression(0);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class LengthContext extends ParserRuleContext {
		public Arithmetic_expressionContext arithmetic_expression() {
			return getRuleContext(Arithmetic_expressionContext.class,0);
		}
		public LengthContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_length; }
	}

	public final LengthContext length() throws RecognitionException {
		LengthContext _localctx = new LengthContext(_ctx, getState());
		enterRule(_localctx, 522, RULE_length);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6504);
			arithmetic_expression(0);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class Function_nameContext extends ParserRuleContext {
		public TerminalNode USER_DEFINED_WORD() { return getToken(cobolParser.USER_DEFINED_WORD, 0); }
		public Function_nameContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_function_name; }
	}

	public final Function_nameContext function_name() throws RecognitionException {
		Function_nameContext _localctx = new Function_nameContext(_ctx, getState());
		enterRule(_localctx, 524, RULE_function_name);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(6506);
			match(USER_DEFINED_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 243:
			return arithmetic_expression_sempred((Arithmetic_expressionContext)_localctx, predIndex);
		case 246:
			return logic_expression_sempred((Logic_expressionContext)_localctx, predIndex);
		case 248:
			return logic_condition_sempred((Logic_conditionContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean arithmetic_expression_sempred(Arithmetic_expressionContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0:
			return precpred(_ctx, 8);
		}
		return true;
	}
	private boolean logic_expression_sempred(Logic_expressionContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1:
			return precpred(_ctx, 6);
		}
		return true;
	}
	private boolean logic_condition_sempred(Logic_conditionContext _localctx, int predIndex) {
		switch (predIndex) {
		case 2:
			return precpred(_ctx, 1);
		}
		return true;
	}

	private static final int _serializedATNSegments = 3;
	private static final String _serializedATNSegment0 =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\3\u01a6\u196f\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4"+
		"`\t`\4a\ta\4b\tb\4c\tc\4d\td\4e\te\4f\tf\4g\tg\4h\th\4i\ti\4j\tj\4k\t"+
		"k\4l\tl\4m\tm\4n\tn\4o\to\4p\tp\4q\tq\4r\tr\4s\ts\4t\tt\4u\tu\4v\tv\4"+
		"w\tw\4x\tx\4y\ty\4z\tz\4{\t{\4|\t|\4}\t}\4~\t~\4\177\t\177\4\u0080\t\u0080"+
		"\4\u0081\t\u0081\4\u0082\t\u0082\4\u0083\t\u0083\4\u0084\t\u0084\4\u0085"+
		"\t\u0085\4\u0086\t\u0086\4\u0087\t\u0087\4\u0088\t\u0088\4\u0089\t\u0089"+
		"\4\u008a\t\u008a\4\u008b\t\u008b\4\u008c\t\u008c\4\u008d\t\u008d\4\u008e"+
		"\t\u008e\4\u008f\t\u008f\4\u0090\t\u0090\4\u0091\t\u0091\4\u0092\t\u0092"+
		"\4\u0093\t\u0093\4\u0094\t\u0094\4\u0095\t\u0095\4\u0096\t\u0096\4\u0097"+
		"\t\u0097\4\u0098\t\u0098\4\u0099\t\u0099\4\u009a\t\u009a\4\u009b\t\u009b"+
		"\4\u009c\t\u009c\4\u009d\t\u009d\4\u009e\t\u009e\4\u009f\t\u009f\4\u00a0"+
		"\t\u00a0\4\u00a1\t\u00a1\4\u00a2\t\u00a2\4\u00a3\t\u00a3\4\u00a4\t\u00a4"+
		"\4\u00a5\t\u00a5\4\u00a6\t\u00a6\4\u00a7\t\u00a7\4\u00a8\t\u00a8\4\u00a9"+
		"\t\u00a9\4\u00aa\t\u00aa\4\u00ab\t\u00ab\4\u00ac\t\u00ac\4\u00ad\t\u00ad"+
		"\4\u00ae\t\u00ae\4\u00af\t\u00af\4\u00b0\t\u00b0\4\u00b1\t\u00b1\4\u00b2"+
		"\t\u00b2\4\u00b3\t\u00b3\4\u00b4\t\u00b4\4\u00b5\t\u00b5\4\u00b6\t\u00b6"+
		"\4\u00b7\t\u00b7\4\u00b8\t\u00b8\4\u00b9\t\u00b9\4\u00ba\t\u00ba\4\u00bb"+
		"\t\u00bb\4\u00bc\t\u00bc\4\u00bd\t\u00bd\4\u00be\t\u00be\4\u00bf\t\u00bf"+
		"\4\u00c0\t\u00c0\4\u00c1\t\u00c1\4\u00c2\t\u00c2\4\u00c3\t\u00c3\4\u00c4"+
		"\t\u00c4\4\u00c5\t\u00c5\4\u00c6\t\u00c6\4\u00c7\t\u00c7\4\u00c8\t\u00c8"+
		"\4\u00c9\t\u00c9\4\u00ca\t\u00ca\4\u00cb\t\u00cb\4\u00cc\t\u00cc\4\u00cd"+
		"\t\u00cd\4\u00ce\t\u00ce\4\u00cf\t\u00cf\4\u00d0\t\u00d0\4\u00d1\t\u00d1"+
		"\4\u00d2\t\u00d2\4\u00d3\t\u00d3\4\u00d4\t\u00d4\4\u00d5\t\u00d5\4\u00d6"+
		"\t\u00d6\4\u00d7\t\u00d7\4\u00d8\t\u00d8\4\u00d9\t\u00d9\4\u00da\t\u00da"+
		"\4\u00db\t\u00db\4\u00dc\t\u00dc\4\u00dd\t\u00dd\4\u00de\t\u00de\4\u00df"+
		"\t\u00df\4\u00e0\t\u00e0\4\u00e1\t\u00e1\4\u00e2\t\u00e2\4\u00e3\t\u00e3"+
		"\4\u00e4\t\u00e4\4\u00e5\t\u00e5\4\u00e6\t\u00e6\4\u00e7\t\u00e7\4\u00e8"+
		"\t\u00e8\4\u00e9\t\u00e9\4\u00ea\t\u00ea\4\u00eb\t\u00eb\4\u00ec\t\u00ec"+
		"\4\u00ed\t\u00ed\4\u00ee\t\u00ee\4\u00ef\t\u00ef\4\u00f0\t\u00f0\4\u00f1"+
		"\t\u00f1\4\u00f2\t\u00f2\4\u00f3\t\u00f3\4\u00f4\t\u00f4\4\u00f5\t\u00f5"+
		"\4\u00f6\t\u00f6\4\u00f7\t\u00f7\4\u00f8\t\u00f8\4\u00f9\t\u00f9\4\u00fa"+
		"\t\u00fa\4\u00fb\t\u00fb\4\u00fc\t\u00fc\4\u00fd\t\u00fd\4\u00fe\t\u00fe"+
		"\4\u00ff\t\u00ff\4\u0100\t\u0100\4\u0101\t\u0101\4\u0102\t\u0102\4\u0103"+
		"\t\u0103\4\u0104\t\u0104\4\u0105\t\u0105\4\u0106\t\u0106\4\u0107\t\u0107"+
		"\4\u0108\t\u0108\3\2\3\2\7\2\u0213\n\2\f\2\16\2\u0216\13\2\3\2\3\2\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\5\3\u0226\n\3\3\4\3\4\3\4"+
		"\3\4\3\4\3\4\5\4\u022e\n\4\3\5\3\5\3\5\3\5\5\5\u0234\n\5\3\6\3\6\7\6\u0238"+
		"\n\6\f\6\16\6\u023b\13\6\3\6\3\6\3\6\7\6\u0240\n\6\f\6\16\6\u0243\13\6"+
		"\3\6\5\6\u0246\n\6\3\7\3\7\5\7\u024a\n\7\3\7\5\7\u024d\n\7\3\7\5\7\u0250"+
		"\n\7\3\b\3\b\5\b\u0254\n\b\3\b\3\b\7\b\u0258\n\b\f\b\16\b\u025b\13\b\7"+
		"\b\u025d\n\b\f\b\16\b\u0260\13\b\3\b\3\b\7\b\u0264\n\b\f\b\16\b\u0267"+
		"\13\b\7\b\u0269\n\b\f\b\16\b\u026c\13\b\5\b\u026e\n\b\3\b\3\b\6\b\u0272"+
		"\n\b\r\b\16\b\u0273\3\b\3\b\6\b\u0278\n\b\r\b\16\b\u0279\3\b\3\b\5\b\u027e"+
		"\n\b\3\b\7\b\u0281\n\b\f\b\16\b\u0284\13\b\3\t\3\t\6\t\u0288\n\t\r\t\16"+
		"\t\u0289\3\t\3\t\6\t\u028e\n\t\r\t\16\t\u028f\3\t\3\t\5\t\u0294\n\t\3"+
		"\t\6\t\u0297\n\t\r\t\16\t\u0298\3\t\3\t\5\t\u029d\n\t\3\t\7\t\u02a0\n"+
		"\t\f\t\16\t\u02a3\13\t\3\t\3\t\7\t\u02a7\n\t\f\t\16\t\u02aa\13\t\3\n\3"+
		"\n\3\13\3\13\7\13\u02b0\n\13\f\13\16\13\u02b3\13\13\3\13\3\13\7\13\u02b7"+
		"\n\13\f\13\16\13\u02ba\13\13\3\13\3\13\7\13\u02be\n\13\f\13\16\13\u02c1"+
		"\13\13\6\13\u02c3\n\13\r\13\16\13\u02c4\3\13\3\13\6\13\u02c9\n\13\r\13"+
		"\16\13\u02ca\3\13\3\13\7\13\u02cf\n\13\f\13\16\13\u02d2\13\13\3\13\3\13"+
		"\7\13\u02d6\n\13\f\13\16\13\u02d9\13\13\3\f\3\f\3\f\6\f\u02de\n\f\r\f"+
		"\16\f\u02df\3\f\3\f\7\f\u02e4\n\f\f\f\16\f\u02e7\13\f\3\r\3\r\3\16\3\16"+
		"\7\16\u02ed\n\16\f\16\16\16\u02f0\13\16\3\16\3\16\7\16\u02f4\n\16\f\16"+
		"\16\16\u02f7\13\16\3\16\3\16\7\16\u02fb\n\16\f\16\16\16\u02fe\13\16\7"+
		"\16\u0300\n\16\f\16\16\16\u0303\13\16\3\17\3\17\7\17\u0307\n\17\f\17\16"+
		"\17\u030a\13\17\6\17\u030c\n\17\r\17\16\17\u030d\3\17\7\17\u0311\n\17"+
		"\f\17\16\17\u0314\13\17\3\17\3\17\7\17\u0318\n\17\f\17\16\17\u031b\13"+
		"\17\3\20\3\20\6\20\u031f\n\20\r\20\16\20\u0320\3\20\3\20\5\20\u0325\n"+
		"\20\3\20\6\20\u0328\n\20\r\20\16\20\u0329\3\20\3\20\6\20\u032e\n\20\r"+
		"\20\16\20\u032f\3\20\3\20\5\20\u0334\n\20\3\20\6\20\u0337\n\20\r\20\16"+
		"\20\u0338\3\20\3\20\6\20\u033d\n\20\r\20\16\20\u033e\3\20\3\20\6\20\u0343"+
		"\n\20\r\20\16\20\u0344\3\20\3\20\5\20\u0349\n\20\3\20\6\20\u034c\n\20"+
		"\r\20\16\20\u034d\3\20\3\20\7\20\u0352\n\20\f\20\16\20\u0355\13\20\3\20"+
		"\3\20\7\20\u0359\n\20\f\20\16\20\u035c\13\20\3\20\3\20\6\20\u0360\n\20"+
		"\r\20\16\20\u0361\3\20\3\20\6\20\u0366\n\20\r\20\16\20\u0367\3\20\3\20"+
		"\5\20\u036c\n\20\3\21\3\21\3\22\3\22\6\22\u0372\n\22\r\22\16\22\u0373"+
		"\3\22\3\22\7\22\u0378\n\22\f\22\16\22\u037b\13\22\3\22\3\22\3\22\3\22"+
		"\5\22\u0381\n\22\3\23\3\23\6\23\u0385\n\23\r\23\16\23\u0386\3\23\3\23"+
		"\6\23\u038b\n\23\r\23\16\23\u038c\3\23\3\23\5\23\u0391\n\23\3\23\7\23"+
		"\u0394\n\23\f\23\16\23\u0397\13\23\3\23\3\23\7\23\u039b\n\23\f\23\16\23"+
		"\u039e\13\23\3\24\3\24\3\25\3\25\3\26\3\26\6\26\u03a6\n\26\r\26\16\26"+
		"\u03a7\3\26\3\26\6\26\u03ac\n\26\r\26\16\26\u03ad\3\26\3\26\7\26\u03b2"+
		"\n\26\f\26\16\26\u03b5\13\26\3\27\3\27\6\27\u03b9\n\27\r\27\16\27\u03ba"+
		"\3\27\3\27\3\30\3\30\7\30\u03c1\n\30\f\30\16\30\u03c4\13\30\3\30\3\30"+
		"\3\30\3\30\7\30\u03ca\n\30\f\30\16\30\u03cd\13\30\3\30\3\30\3\30\5\30"+
		"\u03d2\n\30\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\5\32\u03dc\n\32\3"+
		"\33\3\33\6\33\u03e0\n\33\r\33\16\33\u03e1\3\33\3\33\6\33\u03e6\n\33\r"+
		"\33\16\33\u03e7\3\33\3\33\5\33\u03ec\n\33\3\33\3\33\6\33\u03f0\n\33\r"+
		"\33\16\33\u03f1\3\33\3\33\6\33\u03f6\n\33\r\33\16\33\u03f7\3\33\3\33\5"+
		"\33\u03fc\n\33\5\33\u03fe\n\33\3\34\3\34\6\34\u0402\n\34\r\34\16\34\u0403"+
		"\3\34\3\34\6\34\u0408\n\34\r\34\16\34\u0409\3\34\3\34\5\34\u040e\n\34"+
		"\3\34\3\34\6\34\u0412\n\34\r\34\16\34\u0413\3\34\3\34\6\34\u0418\n\34"+
		"\r\34\16\34\u0419\3\34\3\34\5\34\u041e\n\34\5\34\u0420\n\34\3\35\3\35"+
		"\6\35\u0424\n\35\r\35\16\35\u0425\3\35\3\35\6\35\u042a\n\35\r\35\16\35"+
		"\u042b\3\35\3\35\6\35\u0430\n\35\r\35\16\35\u0431\3\35\3\35\6\35\u0436"+
		"\n\35\r\35\16\35\u0437\3\35\3\35\5\35\u043c\n\35\3\35\6\35\u043f\n\35"+
		"\r\35\16\35\u0440\3\35\3\35\5\35\u0445\n\35\3\36\3\36\3\37\3\37\6\37\u044b"+
		"\n\37\r\37\16\37\u044c\3\37\3\37\6\37\u0451\n\37\r\37\16\37\u0452\3\37"+
		"\3\37\6\37\u0457\n\37\r\37\16\37\u0458\3\37\3\37\5\37\u045d\n\37\3\37"+
		"\6\37\u0460\n\37\r\37\16\37\u0461\3\37\3\37\6\37\u0466\n\37\r\37\16\37"+
		"\u0467\3\37\3\37\5\37\u046c\n\37\3\37\6\37\u046f\n\37\r\37\16\37\u0470"+
		"\3\37\3\37\5\37\u0475\n\37\3\37\6\37\u0478\n\37\r\37\16\37\u0479\3\37"+
		"\3\37\5\37\u047e\n\37\3 \3 \6 \u0482\n \r \16 \u0483\3 \3 \6 \u0488\n"+
		" \r \16 \u0489\3 \3 \6 \u048e\n \r \16 \u048f\3 \3 \3!\3!\6!\u0496\n!"+
		"\r!\16!\u0497\3!\3!\6!\u049c\n!\r!\16!\u049d\3!\3!\6!\u04a2\n!\r!\16!"+
		"\u04a3\3!\6!\u04a7\n!\r!\16!\u04a8\3!\3!\5!\u04ad\n!\5!\u04af\n!\3!\6"+
		"!\u04b2\n!\r!\16!\u04b3\3!\3!\5!\u04b8\n!\3\"\3\"\6\"\u04bc\n\"\r\"\16"+
		"\"\u04bd\3\"\3\"\6\"\u04c2\n\"\r\"\16\"\u04c3\5\"\u04c6\n\"\3\"\3\"\6"+
		"\"\u04ca\n\"\r\"\16\"\u04cb\3\"\3\"\6\"\u04d0\n\"\r\"\16\"\u04d1\5\"\u04d4"+
		"\n\"\3\"\3\"\6\"\u04d8\n\"\r\"\16\"\u04d9\3\"\3\"\6\"\u04de\n\"\r\"\16"+
		"\"\u04df\3\"\6\"\u04e3\n\"\r\"\16\"\u04e4\3\"\3\"\5\"\u04e9\n\"\5\"\u04eb"+
		"\n\"\3\"\6\"\u04ee\n\"\r\"\16\"\u04ef\3\"\3\"\5\"\u04f4\n\"\3#\3#\6#\u04f8"+
		"\n#\r#\16#\u04f9\3#\3#\6#\u04fe\n#\r#\16#\u04ff\3#\3#\5#\u0504\n#\3#\6"+
		"#\u0507\n#\r#\16#\u0508\3#\3#\5#\u050d\n#\3#\6#\u0510\n#\r#\16#\u0511"+
		"\3#\3#\5#\u0516\n#\3$\3$\6$\u051a\n$\r$\16$\u051b\5$\u051e\n$\3$\3$\6"+
		"$\u0522\n$\r$\16$\u0523\3$\3$\5$\u0528\n$\3$\3$\6$\u052c\n$\r$\16$\u052d"+
		"\3$\3$\5$\u0532\n$\5$\u0534\n$\3%\3%\6%\u0538\n%\r%\16%\u0539\3%\3%\6"+
		"%\u053e\n%\r%\16%\u053f\5%\u0542\n%\3%\3%\5%\u0546\n%\3&\3&\6&\u054a\n"+
		"&\r&\16&\u054b\3&\3&\6&\u0550\n&\r&\16&\u0551\5&\u0554\n&\3&\3&\5&\u0558"+
		"\n&\3\'\3\'\6\'\u055c\n\'\r\'\16\'\u055d\5\'\u0560\n\'\3\'\3\'\6\'\u0564"+
		"\n\'\r\'\16\'\u0565\3\'\3\'\5\'\u056a\n\'\3\'\6\'\u056d\n\'\r\'\16\'\u056e"+
		"\3\'\3\'\3\'\3\'\6\'\u0575\n\'\r\'\16\'\u0576\5\'\u0579\n\'\3\'\3\'\6"+
		"\'\u057d\n\'\r\'\16\'\u057e\3\'\3\'\5\'\u0583\n\'\3\'\6\'\u0586\n\'\r"+
		"\'\16\'\u0587\3\'\3\'\3\'\3\'\6\'\u058e\n\'\r\'\16\'\u058f\3\'\3\'\6\'"+
		"\u0594\n\'\r\'\16\'\u0595\5\'\u0598\n\'\3\'\3\'\6\'\u059c\n\'\r\'\16\'"+
		"\u059d\3\'\3\'\5\'\u05a2\n\'\5\'\u05a4\n\'\3\'\6\'\u05a7\n\'\r\'\16\'"+
		"\u05a8\3\'\3\'\3\'\3\'\6\'\u05af\n\'\r\'\16\'\u05b0\5\'\u05b3\n\'\3\'"+
		"\5\'\u05b6\n\'\3(\3(\3(\3(\3(\6(\u05bd\n(\r(\16(\u05be\5(\u05c1\n(\3("+
		"\3(\3(\6(\u05c6\n(\r(\16(\u05c7\3(\3(\5(\u05cc\n(\3(\3(\6(\u05d0\n(\r"+
		"(\16(\u05d1\5(\u05d4\n(\3(\3(\3(\3(\6(\u05da\n(\r(\16(\u05db\5(\u05de"+
		"\n(\3(\3(\6(\u05e2\n(\r(\16(\u05e3\3(\3(\3(\3(\6(\u05ea\n(\r(\16(\u05eb"+
		"\3(\3(\6(\u05f0\n(\r(\16(\u05f1\5(\u05f4\n(\3(\3(\3(\3(\6(\u05fa\n(\r"+
		"(\16(\u05fb\5(\u05fe\n(\3(\3(\6(\u0602\n(\r(\16(\u0603\3(\3(\5(\u0608"+
		"\n(\3(\6(\u060b\n(\r(\16(\u060c\3(\3(\5(\u0611\n(\3)\3)\3*\3*\3*\3*\3"+
		"*\6*\u061a\n*\r*\16*\u061b\3*\3*\5*\u0620\n*\5*\u0622\n*\3+\3+\6+\u0626"+
		"\n+\r+\16+\u0627\3+\3+\3+\3+\6+\u062e\n+\r+\16+\u062f\5+\u0632\n+\3+\3"+
		"+\3+\6+\u0637\n+\r+\16+\u0638\5+\u063b\n+\3+\3+\6+\u063f\n+\r+\16+\u0640"+
		"\3+\3+\3+\3+\6+\u0647\n+\r+\16+\u0648\5+\u064b\n+\3+\3+\3+\6+\u0650\n"+
		"+\r+\16+\u0651\5+\u0654\n+\3+\3+\6+\u0658\n+\r+\16+\u0659\3+\3+\5+\u065e"+
		"\n+\3,\3,\3-\3-\5-\u0664\n-\3.\3.\3.\6.\u0669\n.\r.\16.\u066a\3.\3.\6"+
		".\u066f\n.\r.\16.\u0670\3.\3.\5.\u0675\n.\5.\u0677\n.\3.\3.\6.\u067b\n"+
		".\r.\16.\u067c\3.\3.\5.\u0681\n.\5.\u0683\n.\3/\3/\6/\u0687\n/\r/\16/"+
		"\u0688\3/\3/\5/\u068d\n/\3/\3/\6/\u0691\n/\r/\16/\u0692\3/\3/\5/\u0697"+
		"\n/\3/\3/\5/\u069b\n/\3\60\3\60\3\61\3\61\3\62\3\62\6\62\u06a3\n\62\r"+
		"\62\16\62\u06a4\5\62\u06a7\n\62\3\62\3\62\6\62\u06ab\n\62\r\62\16\62\u06ac"+
		"\3\62\3\62\3\63\3\63\6\63\u06b3\n\63\r\63\16\63\u06b4\5\63\u06b7\n\63"+
		"\3\63\3\63\6\63\u06bb\n\63\r\63\16\63\u06bc\3\63\3\63\3\64\3\64\6\64\u06c3"+
		"\n\64\r\64\16\64\u06c4\3\64\3\64\7\64\u06c9\n\64\f\64\16\64\u06cc\13\64"+
		"\3\64\3\64\7\64\u06d0\n\64\f\64\16\64\u06d3\13\64\3\64\3\64\7\64\u06d7"+
		"\n\64\f\64\16\64\u06da\13\64\5\64\u06dc\n\64\3\64\3\64\7\64\u06e0\n\64"+
		"\f\64\16\64\u06e3\13\64\5\64\u06e5\n\64\3\64\3\64\7\64\u06e9\n\64\f\64"+
		"\16\64\u06ec\13\64\5\64\u06ee\n\64\3\64\3\64\7\64\u06f2\n\64\f\64\16\64"+
		"\u06f5\13\64\5\64\u06f7\n\64\3\64\3\64\7\64\u06fb\n\64\f\64\16\64\u06fe"+
		"\13\64\5\64\u0700\n\64\3\65\3\65\6\65\u0704\n\65\r\65\16\65\u0705\3\65"+
		"\3\65\7\65\u070a\n\65\f\65\16\65\u070d\13\65\3\65\3\65\7\65\u0711\n\65"+
		"\f\65\16\65\u0714\13\65\3\65\3\65\7\65\u0718\n\65\f\65\16\65\u071b\13"+
		"\65\3\65\7\65\u071e\n\65\f\65\16\65\u0721\13\65\3\65\3\65\3\65\7\65\u0726"+
		"\n\65\f\65\16\65\u0729\13\65\3\65\7\65\u072c\n\65\f\65\16\65\u072f\13"+
		"\65\5\65\u0731\n\65\3\65\7\65\u0734\n\65\f\65\16\65\u0737\13\65\7\65\u0739"+
		"\n\65\f\65\16\65\u073c\13\65\3\66\3\66\6\66\u0740\n\66\r\66\16\66\u0741"+
		"\3\66\3\66\7\66\u0746\n\66\f\66\16\66\u0749\13\66\3\66\3\66\7\66\u074d"+
		"\n\66\f\66\16\66\u0750\13\66\3\66\3\66\7\66\u0754\n\66\f\66\16\66\u0757"+
		"\13\66\7\66\u0759\n\66\f\66\16\66\u075c\13\66\3\67\3\67\6\67\u0760\n\67"+
		"\r\67\16\67\u0761\3\67\3\67\7\67\u0766\n\67\f\67\16\67\u0769\13\67\3\67"+
		"\3\67\7\67\u076d\n\67\f\67\16\67\u0770\13\67\3\67\3\67\7\67\u0774\n\67"+
		"\f\67\16\67\u0777\13\67\7\67\u0779\n\67\f\67\16\67\u077c\13\67\38\38\6"+
		"8\u0780\n8\r8\168\u0781\38\38\78\u0786\n8\f8\168\u0789\138\38\38\78\u078d"+
		"\n8\f8\168\u0790\138\38\38\78\u0794\n8\f8\168\u0797\138\38\78\u079a\n"+
		"8\f8\168\u079d\138\38\78\u07a0\n8\f8\168\u07a3\138\78\u07a5\n8\f8\168"+
		"\u07a8\138\39\39\69\u07ac\n9\r9\169\u07ad\39\39\79\u07b2\n9\f9\169\u07b5"+
		"\139\39\39\79\u07b9\n9\f9\169\u07bc\139\39\39\79\u07c0\n9\f9\169\u07c3"+
		"\139\79\u07c5\n9\f9\169\u07c8\139\3:\3:\6:\u07cc\n:\r:\16:\u07cd\3:\3"+
		":\7:\u07d2\n:\f:\16:\u07d5\13:\3:\3:\7:\u07d9\n:\f:\16:\u07dc\13:\7:\u07de"+
		"\n:\f:\16:\u07e1\13:\3:\3:\3;\3;\6;\u07e7\n;\r;\16;\u07e8\3;\3;\7;\u07ed"+
		"\n;\f;\16;\u07f0\13;\3;\3;\7;\u07f4\n;\f;\16;\u07f7\13;\7;\u07f9\n;\f"+
		";\16;\u07fc\13;\3;\3;\3<\3<\6<\u0802\n<\r<\16<\u0803\3<\3<\7<\u0808\n"+
		"<\f<\16<\u080b\13<\3<\3<\7<\u080f\n<\f<\16<\u0812\13<\7<\u0814\n<\f<\16"+
		"<\u0817\13<\3<\3<\3=\3=\6=\u081d\n=\r=\16=\u081e\5=\u0821\n=\3=\3=\3="+
		"\6=\u0826\n=\r=\16=\u0827\5=\u082a\n=\3=\3=\3=\3=\3=\3=\3=\3=\3=\3=\3"+
		"=\3=\5=\u0838\n=\3>\3>\7>\u083c\n>\f>\16>\u083f\13>\3>\7>\u0842\n>\f>"+
		"\16>\u0845\13>\3?\3?\6?\u0849\n?\r?\16?\u084a\3?\3?\5?\u084f\n?\5?\u0851"+
		"\n?\3?\6?\u0854\n?\r?\16?\u0855\3?\3?\6?\u085a\n?\r?\16?\u085b\3?\3?\5"+
		"?\u0860\n?\3?\6?\u0863\n?\r?\16?\u0864\3?\3?\7?\u0869\n?\f?\16?\u086c"+
		"\13?\3?\3?\3@\3@\3A\3A\6A\u0874\nA\rA\16A\u0875\5A\u0878\nA\3A\3A\3A\6"+
		"A\u087d\nA\rA\16A\u087e\5A\u0881\nA\3A\3A\3A\3A\3A\3A\3A\6A\u088a\nA\r"+
		"A\16A\u088b\3A\3A\5A\u0890\nA\3A\3A\6A\u0894\nA\rA\16A\u0895\3A\3A\5A"+
		"\u089a\nA\3A\3A\6A\u089e\nA\rA\16A\u089f\3A\3A\6A\u08a4\nA\rA\16A\u08a5"+
		"\5A\u08a8\nA\3A\3A\3A\3A\5A\u08ae\nA\3B\3B\6B\u08b2\nB\rB\16B\u08b3\3"+
		"B\3B\6B\u08b8\nB\rB\16B\u08b9\3B\3B\6B\u08be\nB\rB\16B\u08bf\3B\3B\5B"+
		"\u08c4\nB\3C\3C\3D\3D\3E\3E\6E\u08cc\nE\rE\16E\u08cd\3E\3E\5E\u08d2\n"+
		"E\3E\3E\6E\u08d6\nE\rE\16E\u08d7\3E\3E\5E\u08dc\nE\5E\u08de\nE\3E\6E\u08e1"+
		"\nE\rE\16E\u08e2\3E\3E\6E\u08e7\nE\rE\16E\u08e8\3E\3E\7E\u08ed\nE\fE\16"+
		"E\u08f0\13E\3F\3F\6F\u08f4\nF\rF\16F\u08f5\3F\3F\5F\u08fa\nF\3G\3G\3G"+
		"\6G\u08ff\nG\rG\16G\u0900\3G\3G\3G\3G\6G\u0907\nG\rG\16G\u0908\3G\3G\5"+
		"G\u090d\nG\3H\3H\6H\u0911\nH\rH\16H\u0912\3H\3H\3I\3I\3J\3J\3K\3K\3L\3"+
		"L\6L\u091f\nL\rL\16L\u0920\3L\3L\6L\u0925\nL\rL\16L\u0926\3L\3L\7L\u092b"+
		"\nL\fL\16L\u092e\13L\3L\6L\u0931\nL\rL\16L\u0932\3L\3L\5L\u0937\nL\3M"+
		"\3M\6M\u093b\nM\rM\16M\u093c\3M\3M\6M\u0941\nM\rM\16M\u0942\5M\u0945\n"+
		"M\3M\3M\6M\u0949\nM\rM\16M\u094a\3M\3M\7M\u094f\nM\fM\16M\u0952\13M\3"+
		"N\3N\3O\3O\6O\u0958\nO\rO\16O\u0959\3O\3O\6O\u095e\nO\rO\16O\u095f\5O"+
		"\u0962\nO\3O\3O\6O\u0966\nO\rO\16O\u0967\5O\u096a\nO\3O\3O\6O\u096e\n"+
		"O\rO\16O\u096f\3O\3O\7O\u0974\nO\fO\16O\u0977\13O\3P\3P\3Q\3Q\6Q\u097d"+
		"\nQ\rQ\16Q\u097e\3Q\3Q\3Q\3Q\6Q\u0985\nQ\rQ\16Q\u0986\3Q\3Q\6Q\u098b\n"+
		"Q\rQ\16Q\u098c\3Q\3Q\6Q\u0991\nQ\rQ\16Q\u0992\3Q\3Q\6Q\u0997\nQ\rQ\16"+
		"Q\u0998\3Q\3Q\6Q\u099d\nQ\rQ\16Q\u099e\3Q\3Q\6Q\u09a3\nQ\rQ\16Q\u09a4"+
		"\5Q\u09a7\nQ\3Q\3Q\5Q\u09ab\nQ\3R\3R\3S\3S\3T\3T\3U\3U\7U\u09b5\nU\fU"+
		"\16U\u09b8\13U\3U\7U\u09bb\nU\fU\16U\u09be\13U\3V\3V\6V\u09c2\nV\rV\16"+
		"V\u09c3\3V\3V\5V\u09c8\nV\3V\6V\u09cb\nV\rV\16V\u09cc\3V\3V\7V\u09d1\n"+
		"V\fV\16V\u09d4\13V\3V\3V\3W\3W\6W\u09da\nW\rW\16W\u09db\3W\3W\6W\u09e0"+
		"\nW\rW\16W\u09e1\5W\u09e4\nW\3W\3W\6W\u09e8\nW\rW\16W\u09e9\5W\u09ec\n"+
		"W\3W\3W\3W\3W\6W\u09f2\nW\rW\16W\u09f3\3W\3W\6W\u09f8\nW\rW\16W\u09f9"+
		"\3W\3W\6W\u09fe\nW\rW\16W\u09ff\5W\u0a02\nW\3W\3W\3W\3W\6W\u0a08\nW\r"+
		"W\16W\u0a09\3W\3W\6W\u0a0e\nW\rW\16W\u0a0f\5W\u0a12\nW\3W\3W\3W\3W\6W"+
		"\u0a18\nW\rW\16W\u0a19\3W\3W\6W\u0a1e\nW\rW\16W\u0a1f\5W\u0a22\nW\5W\u0a24"+
		"\nW\3W\3W\3W\6W\u0a29\nW\rW\16W\u0a2a\3W\3W\6W\u0a2f\nW\rW\16W\u0a30\5"+
		"W\u0a33\nW\3W\3W\3W\3W\6W\u0a39\nW\rW\16W\u0a3a\3W\3W\6W\u0a3f\nW\rW\16"+
		"W\u0a40\5W\u0a43\nW\3W\3W\6W\u0a47\nW\rW\16W\u0a48\5W\u0a4b\nW\3W\3W\3"+
		"W\3W\6W\u0a51\nW\rW\16W\u0a52\3W\3W\5W\u0a57\nW\3W\3W\6W\u0a5b\nW\rW\16"+
		"W\u0a5c\3W\3W\5W\u0a61\nW\3W\3W\3W\3W\6W\u0a67\nW\rW\16W\u0a68\3W\3W\6"+
		"W\u0a6d\nW\rW\16W\u0a6e\5W\u0a71\nW\3W\3W\3W\3W\6W\u0a77\nW\rW\16W\u0a78"+
		"\3W\3W\6W\u0a7d\nW\rW\16W\u0a7e\5W\u0a81\nW\3W\3W\3W\5W\u0a86\nW\3X\3"+
		"X\6X\u0a8a\nX\rX\16X\u0a8b\3X\3X\5X\u0a90\nX\3X\6X\u0a93\nX\rX\16X\u0a94"+
		"\5X\u0a97\nX\3X\3X\6X\u0a9b\nX\rX\16X\u0a9c\3X\3X\6X\u0aa1\nX\rX\16X\u0aa2"+
		"\3X\3X\5X\u0aa7\nX\3Y\3Y\6Y\u0aab\nY\rY\16Y\u0aac\3Y\3Y\6Y\u0ab1\nY\r"+
		"Y\16Y\u0ab2\3Y\3Y\7Y\u0ab7\nY\fY\16Y\u0aba\13Y\3Y\6Y\u0abd\nY\rY\16Y\u0abe"+
		"\3Y\3Y\5Y\u0ac3\nY\3Y\6Y\u0ac6\nY\rY\16Y\u0ac7\3Y\3Y\7Y\u0acc\nY\fY\16"+
		"Y\u0acf\13Y\6Y\u0ad1\nY\rY\16Y\u0ad2\3Y\7Y\u0ad6\nY\fY\16Y\u0ad9\13Y\3"+
		"Y\3Y\6Y\u0add\nY\rY\16Y\u0ade\3Y\3Y\6Y\u0ae3\nY\rY\16Y\u0ae4\5Y\u0ae7"+
		"\nY\3Y\3Y\5Y\u0aeb\nY\3Z\3Z\3[\3[\3\\\3\\\3]\3]\3^\3^\3_\3_\6_\u0af9\n"+
		"_\r_\16_\u0afa\3_\3_\3_\3_\3_\6_\u0b02\n_\r_\16_\u0b03\3_\3_\3_\3_\3_"+
		"\6_\u0b0b\n_\r_\16_\u0b0c\3_\3_\3_\5_\u0b12\n_\3_\6_\u0b15\n_\r_\16_\u0b16"+
		"\3_\3_\3_\3_\3_\3_\6_\u0b1f\n_\r_\16_\u0b20\3_\3_\3_\5_\u0b26\n_\3_\6"+
		"_\u0b29\n_\r_\16_\u0b2a\3_\3_\3_\3_\6_\u0b31\n_\r_\16_\u0b32\3_\3_\3_"+
		"\3_\3_\6_\u0b3a\n_\r_\16_\u0b3b\3_\3_\3_\5_\u0b41\n_\3`\3`\3a\3a\3a\6"+
		"a\u0b48\na\ra\16a\u0b49\3a\3a\3a\3a\6a\u0b50\na\ra\16a\u0b51\3a\3a\5a"+
		"\u0b56\na\3b\3b\6b\u0b5a\nb\rb\16b\u0b5b\3b\3b\6b\u0b60\nb\rb\16b\u0b61"+
		"\5b\u0b64\nb\3b\3b\6b\u0b68\nb\rb\16b\u0b69\3b\3b\5b\u0b6e\nb\3b\3b\6"+
		"b\u0b72\nb\rb\16b\u0b73\3b\3b\5b\u0b78\nb\3c\3c\3d\3d\6d\u0b7e\nd\rd\16"+
		"d\u0b7f\5d\u0b82\nd\3d\3d\3d\6d\u0b87\nd\rd\16d\u0b88\3d\3d\3d\3d\6d\u0b8f"+
		"\nd\rd\16d\u0b90\3d\3d\5d\u0b95\nd\3d\3d\6d\u0b99\nd\rd\16d\u0b9a\3d\3"+
		"d\5d\u0b9f\nd\5d\u0ba1\nd\3d\6d\u0ba4\nd\rd\16d\u0ba5\3d\3d\7d\u0baa\n"+
		"d\fd\16d\u0bad\13d\3d\7d\u0bb0\nd\fd\16d\u0bb3\13d\3d\3d\7d\u0bb7\nd\f"+
		"d\16d\u0bba\13d\3d\7d\u0bbd\nd\fd\16d\u0bc0\13d\5d\u0bc2\nd\3d\3d\6d\u0bc6"+
		"\nd\rd\16d\u0bc7\3d\3d\6d\u0bcc\nd\rd\16d\u0bcd\3d\3d\6d\u0bd2\nd\rd\16"+
		"d\u0bd3\5d\u0bd6\nd\3d\3d\6d\u0bda\nd\rd\16d\u0bdb\3d\3d\6d\u0be0\nd\r"+
		"d\16d\u0be1\5d\u0be4\nd\5d\u0be6\nd\3d\3d\6d\u0bea\nd\rd\16d\u0beb\3d"+
		"\3d\5d\u0bf0\nd\3d\6d\u0bf3\nd\rd\16d\u0bf4\3d\3d\6d\u0bf9\nd\rd\16d\u0bfa"+
		"\3d\3d\5d\u0bff\nd\3d\6d\u0c02\nd\rd\16d\u0c03\3d\3d\6d\u0c08\nd\rd\16"+
		"d\u0c09\3d\3d\6d\u0c0e\nd\rd\16d\u0c0f\3d\3d\5d\u0c14\nd\3d\6d\u0c17\n"+
		"d\rd\16d\u0c18\3d\3d\6d\u0c1d\nd\rd\16d\u0c1e\3d\3d\6d\u0c23\nd\rd\16"+
		"d\u0c24\3d\3d\5d\u0c29\nd\3d\6d\u0c2c\nd\rd\16d\u0c2d\3d\3d\6d\u0c32\n"+
		"d\rd\16d\u0c33\3d\3d\5d\u0c38\nd\5d\u0c3a\nd\3e\3e\3f\3f\3g\3g\3h\3h\3"+
		"i\3i\3j\3j\3k\3k\3l\3l\6l\u0c4c\nl\rl\16l\u0c4d\3l\3l\5l\u0c52\nl\3l\6"+
		"l\u0c55\nl\rl\16l\u0c56\5l\u0c59\nl\3l\3l\3m\3m\3m\6m\u0c60\nm\rm\16m"+
		"\u0c61\3m\3m\5m\u0c66\nm\3m\3m\6m\u0c6a\nm\rm\16m\u0c6b\3m\3m\5m\u0c70"+
		"\nm\3m\3m\6m\u0c74\nm\rm\16m\u0c75\3m\3m\5m\u0c7a\nm\3m\3m\6m\u0c7e\n"+
		"m\rm\16m\u0c7f\3m\3m\5m\u0c84\nm\3m\3m\3m\3m\3m\3m\3m\3m\3m\3m\3m\3m\3"+
		"m\3m\3m\3m\3m\3m\3m\3m\3m\3m\5m\u0c9c\nm\3n\3n\6n\u0ca0\nn\rn\16n\u0ca1"+
		"\3n\3n\6n\u0ca6\nn\rn\16n\u0ca7\5n\u0caa\nn\3n\3n\3o\6o\u0caf\no\ro\16"+
		"o\u0cb0\3p\3p\3q\3q\3r\3r\3s\3s\5s\u0cbb\ns\3t\3t\6t\u0cbf\nt\rt\16t\u0cc0"+
		"\3t\3t\5t\u0cc5\nt\3t\3t\6t\u0cc9\nt\rt\16t\u0cca\3t\3t\5t\u0ccf\nt\5"+
		"t\u0cd1\nt\3t\6t\u0cd4\nt\rt\16t\u0cd5\3t\3t\7t\u0cda\nt\ft\16t\u0cdd"+
		"\13t\3t\7t\u0ce0\nt\ft\16t\u0ce3\13t\3u\3u\3v\3v\6v\u0ce9\nv\rv\16v\u0cea"+
		"\3v\3v\6v\u0cef\nv\rv\16v\u0cf0\5v\u0cf3\nv\3v\3v\6v\u0cf7\nv\rv\16v\u0cf8"+
		"\3v\3v\5v\u0cfd\nv\3v\6v\u0d00\nv\rv\16v\u0d01\3v\3v\6v\u0d06\nv\rv\16"+
		"v\u0d07\5v\u0d0a\nv\3v\3v\6v\u0d0e\nv\rv\16v\u0d0f\3v\3v\6v\u0d14\nv\r"+
		"v\16v\u0d15\5v\u0d18\nv\3v\3v\5v\u0d1c\nv\3v\6v\u0d1f\nv\rv\16v\u0d20"+
		"\3v\3v\6v\u0d25\nv\rv\16v\u0d26\5v\u0d29\nv\3v\3v\6v\u0d2d\nv\rv\16v\u0d2e"+
		"\5v\u0d31\nv\3v\3v\6v\u0d35\nv\rv\16v\u0d36\3v\3v\5v\u0d3b\nv\3v\6v\u0d3e"+
		"\nv\rv\16v\u0d3f\3v\3v\6v\u0d44\nv\rv\16v\u0d45\5v\u0d48\nv\3v\3v\6v\u0d4c"+
		"\nv\rv\16v\u0d4d\5v\u0d50\nv\3v\3v\6v\u0d54\nv\rv\16v\u0d55\3v\3v\5v\u0d5a"+
		"\nv\3w\3w\5w\u0d5e\nw\3x\3x\5x\u0d62\nx\3y\3y\5y\u0d66\ny\3z\3z\5z\u0d6a"+
		"\nz\3{\3{\6{\u0d6e\n{\r{\16{\u0d6f\3{\3{\6{\u0d74\n{\r{\16{\u0d75\3{\3"+
		"{\5{\u0d7a\n{\3{\3{\6{\u0d7e\n{\r{\16{\u0d7f\3{\3{\5{\u0d84\n{\5{\u0d86"+
		"\n{\3{\3{\6{\u0d8a\n{\r{\16{\u0d8b\3{\3{\7{\u0d90\n{\f{\16{\u0d93\13{"+
		"\3|\3|\3}\3}\6}\u0d99\n}\r}\16}\u0d9a\3}\3}\6}\u0d9f\n}\r}\16}\u0da0\3"+
		"}\3}\6}\u0da5\n}\r}\16}\u0da6\3}\3}\6}\u0dab\n}\r}\16}\u0dac\5}\u0daf"+
		"\n}\3}\3}\3~\3~\5~\u0db5\n~\3\177\3\177\6\177\u0db9\n\177\r\177\16\177"+
		"\u0dba\3\177\3\177\6\177\u0dbf\n\177\r\177\16\177\u0dc0\3\177\3\177\5"+
		"\177\u0dc5\n\177\3\177\3\177\6\177\u0dc9\n\177\r\177\16\177\u0dca\3\177"+
		"\3\177\5\177\u0dcf\n\177\5\177\u0dd1\n\177\3\177\6\177\u0dd4\n\177\r\177"+
		"\16\177\u0dd5\3\177\3\177\3\u0080\3\u0080\6\u0080\u0ddc\n\u0080\r\u0080"+
		"\16\u0080\u0ddd\3\u0080\3\u0080\3\u0081\3\u0081\6\u0081\u0de4\n\u0081"+
		"\r\u0081\16\u0081\u0de5\5\u0081\u0de8\n\u0081\3\u0081\3\u0081\6\u0081"+
		"\u0dec\n\u0081\r\u0081\16\u0081\u0ded\3\u0081\3\u0081\6\u0081\u0df2\n"+
		"\u0081\r\u0081\16\u0081\u0df3\5\u0081\u0df6\n\u0081\3\u0081\3\u0081\7"+
		"\u0081\u0dfa\n\u0081\f\u0081\16\u0081\u0dfd\13\u0081\3\u0081\3\u0081\7"+
		"\u0081\u0e01\n\u0081\f\u0081\16\u0081\u0e04\13\u0081\5\u0081\u0e06\n\u0081"+
		"\3\u0081\3\u0081\6\u0081\u0e0a\n\u0081\r\u0081\16\u0081\u0e0b\5\u0081"+
		"\u0e0e\n\u0081\3\u0081\3\u0081\6\u0081\u0e12\n\u0081\r\u0081\16\u0081"+
		"\u0e13\3\u0081\3\u0081\6\u0081\u0e18\n\u0081\r\u0081\16\u0081\u0e19\5"+
		"\u0081\u0e1c\n\u0081\3\u0081\3\u0081\7\u0081\u0e20\n\u0081\f\u0081\16"+
		"\u0081\u0e23\13\u0081\5\u0081\u0e25\n\u0081\3\u0081\3\u0081\6\u0081\u0e29"+
		"\n\u0081\r\u0081\16\u0081\u0e2a\5\u0081\u0e2d\n\u0081\3\u0081\5\u0081"+
		"\u0e30\n\u0081\3\u0081\3\u0081\6\u0081\u0e34\n\u0081\r\u0081\16\u0081"+
		"\u0e35\3\u0081\3\u0081\5\u0081\u0e3a\n\u0081\3\u0081\7\u0081\u0e3d\n\u0081"+
		"\f\u0081\16\u0081\u0e40\13\u0081\3\u0081\3\u0081\7\u0081\u0e44\n\u0081"+
		"\f\u0081\16\u0081\u0e47\13\u0081\5\u0081\u0e49\n\u0081\3\u0081\3\u0081"+
		"\6\u0081\u0e4d\n\u0081\r\u0081\16\u0081\u0e4e\3\u0081\3\u0081\6\u0081"+
		"\u0e53\n\u0081\r\u0081\16\u0081\u0e54\5\u0081\u0e57\n\u0081\3\u0081\3"+
		"\u0081\5\u0081\u0e5b\n\u0081\5\u0081\u0e5d\n\u0081\3\u0082\3\u0082\3\u0083"+
		"\3\u0083\3\u0084\3\u0084\3\u0085\3\u0085\6\u0085\u0e67\n\u0085\r\u0085"+
		"\16\u0085\u0e68\3\u0085\3\u0085\5\u0085\u0e6d\n\u0085\5\u0085\u0e6f\n"+
		"\u0085\3\u0085\6\u0085\u0e72\n\u0085\r\u0085\16\u0085\u0e73\3\u0085\3"+
		"\u0085\7\u0085\u0e78\n\u0085\f\u0085\16\u0085\u0e7b\13\u0085\3\u0085\3"+
		"\u0085\3\u0086\3\u0086\3\u0087\3\u0087\6\u0087\u0e83\n\u0087\r\u0087\16"+
		"\u0087\u0e84\3\u0087\3\u0087\3\u0087\3\u0087\6\u0087\u0e8b\n\u0087\r\u0087"+
		"\16\u0087\u0e8c\3\u0087\3\u0087\6\u0087\u0e91\n\u0087\r\u0087\16\u0087"+
		"\u0e92\5\u0087\u0e95\n\u0087\3\u0087\3\u0087\3\u0087\3\u0087\6\u0087\u0e9b"+
		"\n\u0087\r\u0087\16\u0087\u0e9c\3\u0087\3\u0087\6\u0087\u0ea1\n\u0087"+
		"\r\u0087\16\u0087\u0ea2\5\u0087\u0ea5\n\u0087\3\u0087\3\u0087\3\u0087"+
		"\3\u0087\3\u0087\3\u0087\3\u0087\6\u0087\u0eae\n\u0087\r\u0087\16\u0087"+
		"\u0eaf\3\u0087\3\u0087\6\u0087\u0eb4\n\u0087\r\u0087\16\u0087\u0eb5\5"+
		"\u0087\u0eb8\n\u0087\5\u0087\u0eba\n\u0087\3\u0087\3\u0087\3\u0087\3\u0087"+
		"\3\u0087\3\u0087\3\u0087\6\u0087\u0ec3\n\u0087\r\u0087\16\u0087\u0ec4"+
		"\3\u0087\3\u0087\3\u0087\3\u0087\3\u0087\3\u0087\3\u0087\3\u0087\6\u0087"+
		"\u0ecf\n\u0087\r\u0087\16\u0087\u0ed0\3\u0087\3\u0087\6\u0087\u0ed5\n"+
		"\u0087\r\u0087\16\u0087\u0ed6\5\u0087\u0ed9\n\u0087\3\u0087\3\u0087\6"+
		"\u0087\u0edd\n\u0087\r\u0087\16\u0087\u0ede\5\u0087\u0ee1\n\u0087\3\u0087"+
		"\3\u0087\6\u0087\u0ee5\n\u0087\r\u0087\16\u0087\u0ee6\5\u0087\u0ee9\n"+
		"\u0087\3\u0087\3\u0087\3\u0087\3\u0087\6\u0087\u0eef\n\u0087\r\u0087\16"+
		"\u0087\u0ef0\3\u0087\3\u0087\6\u0087\u0ef5\n\u0087\r\u0087\16\u0087\u0ef6"+
		"\5\u0087\u0ef9\n\u0087\3\u0087\3\u0087\6\u0087\u0efd\n\u0087\r\u0087\16"+
		"\u0087\u0efe\5\u0087\u0f01\n\u0087\3\u0087\3\u0087\6\u0087\u0f05\n\u0087"+
		"\r\u0087\16\u0087\u0f06\5\u0087\u0f09\n\u0087\3\u0087\3\u0087\3\u0087"+
		"\3\u0087\6\u0087\u0f0f\n\u0087\r\u0087\16\u0087\u0f10\3\u0087\3\u0087"+
		"\6\u0087\u0f15\n\u0087\r\u0087\16\u0087\u0f16\5\u0087\u0f19\n\u0087\3"+
		"\u0087\3\u0087\3\u0087\3\u0087\6\u0087\u0f1f\n\u0087\r\u0087\16\u0087"+
		"\u0f20\3\u0087\3\u0087\6\u0087\u0f25\n\u0087\r\u0087\16\u0087\u0f26\5"+
		"\u0087\u0f29\n\u0087\3\u0087\3\u0087\3\u0087\3\u0087\6\u0087\u0f2f\n\u0087"+
		"\r\u0087\16\u0087\u0f30\3\u0087\3\u0087\5\u0087\u0f35\n\u0087\3\u0087"+
		"\3\u0087\6\u0087\u0f39\n\u0087\r\u0087\16\u0087\u0f3a\3\u0087\3\u0087"+
		"\3\u0087\6\u0087\u0f40\n\u0087\r\u0087\16\u0087\u0f41\3\u0087\3\u0087"+
		"\5\u0087\u0f46\n\u0087\3\u0087\5\u0087\u0f49\n\u0087\5\u0087\u0f4b\n\u0087"+
		"\3\u0088\3\u0088\6\u0088\u0f4f\n\u0088\r\u0088\16\u0088\u0f50\3\u0088"+
		"\3\u0088\3\u0089\3\u0089\6\u0089\u0f57\n\u0089\r\u0089\16\u0089\u0f58"+
		"\3\u0089\3\u0089\5\u0089\u0f5d\n\u0089\3\u008a\3\u008a\6\u008a\u0f61\n"+
		"\u008a\r\u008a\16\u008a\u0f62\3\u008a\3\u008a\3\u008b\3\u008b\3\u008c"+
		"\3\u008c\5\u008c\u0f6b\n\u008c\3\u008d\3\u008d\3\u008e\3\u008e\6\u008e"+
		"\u0f71\n\u008e\r\u008e\16\u008e\u0f72\3\u008e\3\u008e\7\u008e\u0f77\n"+
		"\u008e\f\u008e\16\u008e\u0f7a\13\u008e\3\u008e\3\u008e\7\u008e\u0f7e\n"+
		"\u008e\f\u008e\16\u008e\u0f81\13\u008e\3\u008e\7\u008e\u0f84\n\u008e\f"+
		"\u008e\16\u008e\u0f87\13\u008e\3\u008f\3\u008f\3\u008f\3\u008f\3\u008f"+
		"\3\u008f\3\u008f\3\u008f\5\u008f\u0f91\n\u008f\3\u0090\3\u0090\7\u0090"+
		"\u0f95\n\u0090\f\u0090\16\u0090\u0f98\13\u0090\3\u0090\3\u0090\7\u0090"+
		"\u0f9c\n\u0090\f\u0090\16\u0090\u0f9f\13\u0090\3\u0090\3\u0090\7\u0090"+
		"\u0fa3\n\u0090\f\u0090\16\u0090\u0fa6\13\u0090\3\u0090\5\u0090\u0fa9\n"+
		"\u0090\3\u0090\7\u0090\u0fac\n\u0090\f\u0090\16\u0090\u0faf\13\u0090\3"+
		"\u0090\5\u0090\u0fb2\n\u0090\3\u0090\7\u0090\u0fb5\n\u0090\f\u0090\16"+
		"\u0090\u0fb8\13\u0090\3\u0090\3\u0090\3\u0091\3\u0091\3\u0092\3\u0092"+
		"\6\u0092\u0fc0\n\u0092\r\u0092\16\u0092\u0fc1\5\u0092\u0fc4\n\u0092\3"+
		"\u0092\3\u0092\6\u0092\u0fc8\n\u0092\r\u0092\16\u0092\u0fc9\3\u0092\3"+
		"\u0092\5\u0092\u0fce\n\u0092\3\u0093\3\u0093\6\u0093\u0fd2\n\u0093\r\u0093"+
		"\16\u0093\u0fd3\5\u0093\u0fd6\n\u0093\3\u0093\3\u0093\6\u0093\u0fda\n"+
		"\u0093\r\u0093\16\u0093\u0fdb\3\u0093\3\u0093\3\u0094\3\u0094\3\u0095"+
		"\3\u0095\7\u0095\u0fe4\n\u0095\f\u0095\16\u0095\u0fe7\13\u0095\3\u0095"+
		"\3\u0095\5\u0095\u0feb\n\u0095\3\u0096\3\u0096\7\u0096\u0fef\n\u0096\f"+
		"\u0096\16\u0096\u0ff2\13\u0096\3\u0096\3\u0096\7\u0096\u0ff6\n\u0096\f"+
		"\u0096\16\u0096\u0ff9\13\u0096\3\u0096\3\u0096\7\u0096\u0ffd\n\u0096\f"+
		"\u0096\16\u0096\u1000\13\u0096\3\u0097\3\u0097\7\u0097\u1004\n\u0097\f"+
		"\u0097\16\u0097\u1007\13\u0097\3\u0097\3\u0097\7\u0097\u100b\n\u0097\f"+
		"\u0097\16\u0097\u100e\13\u0097\3\u0097\3\u0097\7\u0097\u1012\n\u0097\f"+
		"\u0097\16\u0097\u1015\13\u0097\3\u0098\3\u0098\7\u0098\u1019\n\u0098\f"+
		"\u0098\16\u0098\u101c\13\u0098\3\u0098\3\u0098\7\u0098\u1020\n\u0098\f"+
		"\u0098\16\u0098\u1023\13\u0098\3\u0098\3\u0098\7\u0098\u1027\n\u0098\f"+
		"\u0098\16\u0098\u102a\13\u0098\3\u0099\3\u0099\7\u0099\u102e\n\u0099\f"+
		"\u0099\16\u0099\u1031\13\u0099\3\u0099\3\u0099\7\u0099\u1035\n\u0099\f"+
		"\u0099\16\u0099\u1038\13\u0099\3\u0099\3\u0099\7\u0099\u103c\n\u0099\f"+
		"\u0099\16\u0099\u103f\13\u0099\3\u009a\3\u009a\7\u009a\u1043\n\u009a\f"+
		"\u009a\16\u009a\u1046\13\u009a\3\u009a\3\u009a\7\u009a\u104a\n\u009a\f"+
		"\u009a\16\u009a\u104d\13\u009a\3\u009a\3\u009a\7\u009a\u1051\n\u009a\f"+
		"\u009a\16\u009a\u1054\13\u009a\3\u009b\3\u009b\7\u009b\u1058\n\u009b\f"+
		"\u009b\16\u009b\u105b\13\u009b\3\u009b\3\u009b\7\u009b\u105f\n\u009b\f"+
		"\u009b\16\u009b\u1062\13\u009b\3\u009b\5\u009b\u1065\n\u009b\3\u009b\7"+
		"\u009b\u1068\n\u009b\f\u009b\16\u009b\u106b\13\u009b\3\u009b\5\u009b\u106e"+
		"\n\u009b\3\u009c\3\u009c\6\u009c\u1072\n\u009c\r\u009c\16\u009c\u1073"+
		"\3\u009c\3\u009c\6\u009c\u1078\n\u009c\r\u009c\16\u009c\u1079\5\u009c"+
		"\u107c\n\u009c\3\u009c\3\u009c\7\u009c\u1080\n\u009c\f\u009c\16\u009c"+
		"\u1083\13\u009c\3\u009c\3\u009c\3\u009d\3\u009d\6\u009d\u1089\n\u009d"+
		"\r\u009d\16\u009d\u108a\3\u009d\3\u009d\7\u009d\u108f\n\u009d\f\u009d"+
		"\16\u009d\u1092\13\u009d\3\u009d\3\u009d\7\u009d\u1096\n\u009d\f\u009d"+
		"\16\u009d\u1099\13\u009d\3\u009d\5\u009d\u109c\n\u009d\3\u009d\5\u009d"+
		"\u109f\n\u009d\3\u009e\3\u009e\6\u009e\u10a3\n\u009e\r\u009e\16\u009e"+
		"\u10a4\3\u009e\3\u009e\7\u009e\u10a9\n\u009e\f\u009e\16\u009e\u10ac\13"+
		"\u009e\3\u009e\3\u009e\7\u009e\u10b0\n\u009e\f\u009e\16\u009e\u10b3\13"+
		"\u009e\3\u009e\5\u009e\u10b6\n\u009e\3\u009e\7\u009e\u10b9\n\u009e\f\u009e"+
		"\16\u009e\u10bc\13\u009e\3\u009e\5\u009e\u10bf\n\u009e\3\u009e\7\u009e"+
		"\u10c2\n\u009e\f\u009e\16\u009e\u10c5\13\u009e\3\u009e\5\u009e\u10c8\n"+
		"\u009e\3\u009e\7\u009e\u10cb\n\u009e\f\u009e\16\u009e\u10ce\13\u009e\3"+
		"\u009f\3\u009f\6\u009f\u10d2\n\u009f\r\u009f\16\u009f\u10d3\3\u009f\3"+
		"\u009f\7\u009f\u10d8\n\u009f\f\u009f\16\u009f\u10db\13\u009f\3\u009f\3"+
		"\u009f\7\u009f\u10df\n\u009f\f\u009f\16\u009f\u10e2\13\u009f\3\u009f\5"+
		"\u009f\u10e5\n\u009f\3\u009f\5\u009f\u10e8\n\u009f\3\u00a0\3\u00a0\7\u00a0"+
		"\u10ec\n\u00a0\f\u00a0\16\u00a0\u10ef\13\u00a0\3\u00a0\3\u00a0\7\u00a0"+
		"\u10f3\n\u00a0\f\u00a0\16\u00a0\u10f6\13\u00a0\3\u00a0\3\u00a0\6\u00a0"+
		"\u10fa\n\u00a0\r\u00a0\16\u00a0\u10fb\3\u00a0\3\u00a0\5\u00a0\u1100\n"+
		"\u00a0\3\u00a0\7\u00a0\u1103\n\u00a0\f\u00a0\16\u00a0\u1106\13\u00a0\3"+
		"\u00a0\3\u00a0\5\u00a0\u110a\n\u00a0\3\u00a1\3\u00a1\3\u00a2\3\u00a2\6"+
		"\u00a2\u1110\n\u00a2\r\u00a2\16\u00a2\u1111\5\u00a2\u1114\n\u00a2\3\u00a2"+
		"\3\u00a2\6\u00a2\u1118\n\u00a2\r\u00a2\16\u00a2\u1119\3\u00a2\3\u00a2"+
		"\3\u00a3\3\u00a3\7\u00a3\u1120\n\u00a3\f\u00a3\16\u00a3\u1123\13\u00a3"+
		"\3\u00a3\3\u00a3\7\u00a3\u1127\n\u00a3\f\u00a3\16\u00a3\u112a\13\u00a3"+
		"\3\u00a3\3\u00a3\6\u00a3\u112e\n\u00a3\r\u00a3\16\u00a3\u112f\3\u00a3"+
		"\3\u00a3\5\u00a3\u1134\n\u00a3\3\u00a3\6\u00a3\u1137\n\u00a3\r\u00a3\16"+
		"\u00a3\u1138\3\u00a3\3\u00a3\5\u00a3\u113d\n\u00a3\3\u00a3\6\u00a3\u1140"+
		"\n\u00a3\r\u00a3\16\u00a3\u1141\3\u00a3\3\u00a3\5\u00a3\u1146\n\u00a3"+
		"\3\u00a3\7\u00a3\u1149\n\u00a3\f\u00a3\16\u00a3\u114c\13\u00a3\3\u00a3"+
		"\3\u00a3\5\u00a3\u1150\n\u00a3\3\u00a4\3\u00a4\6\u00a4\u1154\n\u00a4\r"+
		"\u00a4\16\u00a4\u1155\3\u00a4\3\u00a4\5\u00a4\u115a\n\u00a4\3\u00a4\6"+
		"\u00a4\u115d\n\u00a4\r\u00a4\16\u00a4\u115e\3\u00a4\3\u00a4\6\u00a4\u1163"+
		"\n\u00a4\r\u00a4\16\u00a4\u1164\3\u00a4\3\u00a4\3\u00a5\3\u00a5\3\u00a6"+
		"\3\u00a6\3\u00a7\3\u00a7\6\u00a7\u116f\n\u00a7\r\u00a7\16\u00a7\u1170"+
		"\5\u00a7\u1173\n\u00a7\3\u00a7\3\u00a7\6\u00a7\u1177\n\u00a7\r\u00a7\16"+
		"\u00a7\u1178\5\u00a7\u117b\n\u00a7\3\u00a7\3\u00a7\6\u00a7\u117f\n\u00a7"+
		"\r\u00a7\16\u00a7\u1180\3\u00a7\3\u00a7\5\u00a7\u1185\n\u00a7\3\u00a7"+
		"\6\u00a7\u1188\n\u00a7\r\u00a7\16\u00a7\u1189\3\u00a7\3\u00a7\3\u00a8"+
		"\3\u00a8\3\u00a9\3\u00a9\6\u00a9\u1192\n\u00a9\r\u00a9\16\u00a9\u1193"+
		"\3\u00a9\3\u00a9\5\u00a9\u1198\n\u00a9\3\u00a9\3\u00a9\3\u00aa\3\u00aa"+
		"\3\u00ab\3\u00ab\7\u00ab\u11a0\n\u00ab\f\u00ab\16\u00ab\u11a3\13\u00ab"+
		"\3\u00ab\3\u00ab\7\u00ab\u11a7\n\u00ab\f\u00ab\16\u00ab\u11aa\13\u00ab"+
		"\3\u00ab\3\u00ab\7\u00ab\u11ae\n\u00ab\f\u00ab\16\u00ab\u11b1\13\u00ab"+
		"\6\u00ab\u11b3\n\u00ab\r\u00ab\16\u00ab\u11b4\3\u00ab\3\u00ab\5\u00ab"+
		"\u11b9\n\u00ab\3\u00ac\3\u00ac\6\u00ac\u11bd\n\u00ac\r\u00ac\16\u00ac"+
		"\u11be\3\u00ac\3\u00ac\6\u00ac\u11c3\n\u00ac\r\u00ac\16\u00ac\u11c4\5"+
		"\u00ac\u11c7\n\u00ac\3\u00ac\3\u00ac\3\u00ac\3\u00ac\6\u00ac\u11cd\n\u00ac"+
		"\r\u00ac\16\u00ac\u11ce\3\u00ac\3\u00ac\6\u00ac\u11d3\n\u00ac\r\u00ac"+
		"\16\u00ac\u11d4\5\u00ac\u11d7\n\u00ac\3\u00ac\3\u00ac\3\u00ac\3\u00ac"+
		"\6\u00ac\u11dd\n\u00ac\r\u00ac\16\u00ac\u11de\3\u00ac\3\u00ac\6\u00ac"+
		"\u11e3\n\u00ac\r\u00ac\16\u00ac\u11e4\5\u00ac\u11e7\n\u00ac\3\u00ac\3"+
		"\u00ac\3\u00ac\3\u00ac\3\u00ac\3\u00ac\3\u00ac\3\u00ac\3\u00ac\6\u00ac"+
		"\u11f2\n\u00ac\r\u00ac\16\u00ac\u11f3\3\u00ac\3\u00ac\6\u00ac\u11f8\n"+
		"\u00ac\r\u00ac\16\u00ac\u11f9\5\u00ac\u11fc\n\u00ac\3\u00ac\3\u00ac\3"+
		"\u00ac\3\u00ac\6\u00ac\u1202\n\u00ac\r\u00ac\16\u00ac\u1203\3\u00ac\3"+
		"\u00ac\6\u00ac\u1208\n\u00ac\r\u00ac\16\u00ac\u1209\5\u00ac\u120c\n\u00ac"+
		"\3\u00ac\3\u00ac\3\u00ac\3\u00ac\6\u00ac\u1212\n\u00ac\r\u00ac\16\u00ac"+
		"\u1213\3\u00ac\3\u00ac\6\u00ac\u1218\n\u00ac\r\u00ac\16\u00ac\u1219\3"+
		"\u00ac\3\u00ac\6\u00ac\u121e\n\u00ac\r\u00ac\16\u00ac\u121f\5\u00ac\u1222"+
		"\n\u00ac\3\u00ac\3\u00ac\5\u00ac\u1226\n\u00ac\3\u00ad\3\u00ad\6\u00ad"+
		"\u122a\n\u00ad\r\u00ad\16\u00ad\u122b\3\u00ad\3\u00ad\6\u00ad\u1230\n"+
		"\u00ad\r\u00ad\16\u00ad\u1231\3\u00ad\3\u00ad\7\u00ad\u1236\n\u00ad\f"+
		"\u00ad\16\u00ad\u1239\13\u00ad\3\u00ae\3\u00ae\6\u00ae\u123d\n\u00ae\r"+
		"\u00ae\16\u00ae\u123e\3\u00ae\3\u00ae\6\u00ae\u1243\n\u00ae\r\u00ae\16"+
		"\u00ae\u1244\5\u00ae\u1247\n\u00ae\3\u00ae\3\u00ae\6\u00ae\u124b\n\u00ae"+
		"\r\u00ae\16\u00ae\u124c\5\u00ae\u124f\n\u00ae\3\u00ae\3\u00ae\3\u00af"+
		"\3\u00af\3\u00af\6\u00af\u1256\n\u00af\r\u00af\16\u00af\u1257\5\u00af"+
		"\u125a\n\u00af\3\u00af\3\u00af\6\u00af\u125e\n\u00af\r\u00af\16\u00af"+
		"\u125f\3\u00af\3\u00af\6\u00af\u1264\n\u00af\r\u00af\16\u00af\u1265\3"+
		"\u00af\3\u00af\3\u00af\5\u00af\u126b\n\u00af\3\u00b0\3\u00b0\3\u00b1\3"+
		"\u00b1\3\u00b2\3\u00b2\6\u00b2\u1273\n\u00b2\r\u00b2\16\u00b2\u1274\3"+
		"\u00b2\3\u00b2\6\u00b2\u1279\n\u00b2\r\u00b2\16\u00b2\u127a\3\u00b2\3"+
		"\u00b2\6\u00b2\u127f\n\u00b2\r\u00b2\16\u00b2\u1280\5\u00b2\u1283\n\u00b2"+
		"\3\u00b2\3\u00b2\7\u00b2\u1287\n\u00b2\f\u00b2\16\u00b2\u128a\13\u00b2"+
		"\6\u00b2\u128c\n\u00b2\r\u00b2\16\u00b2\u128d\3\u00b3\3\u00b3\3\u00b4"+
		"\3\u00b4\6\u00b4\u1294\n\u00b4\r\u00b4\16\u00b4\u1295\3\u00b4\3\u00b4"+
		"\6\u00b4\u129a\n\u00b4\r\u00b4\16\u00b4\u129b\3\u00b4\3\u00b4\5\u00b4"+
		"\u12a0\n\u00b4\3\u00b5\3\u00b5\6\u00b5\u12a4\n\u00b5\r\u00b5\16\u00b5"+
		"\u12a5\3\u00b5\3\u00b5\6\u00b5\u12aa\n\u00b5\r\u00b5\16\u00b5\u12ab\5"+
		"\u00b5\u12ae\n\u00b5\3\u00b5\6\u00b5\u12b1\n\u00b5\r\u00b5\16\u00b5\u12b2"+
		"\3\u00b6\6\u00b6\u12b6\n\u00b6\r\u00b6\16\u00b6\u12b7\3\u00b6\5\u00b6"+
		"\u12bb\n\u00b6\3\u00b7\3\u00b7\6\u00b7\u12bf\n\u00b7\r\u00b7\16\u00b7"+
		"\u12c0\6\u00b7\u12c3\n\u00b7\r\u00b7\16\u00b7\u12c4\3\u00b7\3\u00b7\6"+
		"\u00b7\u12c9\n\u00b7\r\u00b7\16\u00b7\u12ca\5\u00b7\u12cd\n\u00b7\3\u00b7"+
		"\3\u00b7\6\u00b7\u12d1\n\u00b7\r\u00b7\16\u00b7\u12d2\6\u00b7\u12d5\n"+
		"\u00b7\r\u00b7\16\u00b7\u12d6\3\u00b8\3\u00b8\6\u00b8\u12db\n\u00b8\r"+
		"\u00b8\16\u00b8\u12dc\3\u00b8\3\u00b8\7\u00b8\u12e1\n\u00b8\f\u00b8\16"+
		"\u00b8\u12e4\13\u00b8\3\u00b9\3\u00b9\3\u00ba\3\u00ba\3\u00bb\3\u00bb"+
		"\6\u00bb\u12ec\n\u00bb\r\u00bb\16\u00bb\u12ed\3\u00bb\3\u00bb\6\u00bb"+
		"\u12f2\n\u00bb\r\u00bb\16\u00bb\u12f3\3\u00bb\3\u00bb\6\u00bb\u12f8\n"+
		"\u00bb\r\u00bb\16\u00bb\u12f9\5\u00bb\u12fc\n\u00bb\3\u00bb\3\u00bb\3"+
		"\u00bc\3\u00bc\3\u00bc\3\u00bc\3\u00bc\3\u00bc\3\u00bc\7\u00bc\u1307\n"+
		"\u00bc\f\u00bc\16\u00bc\u130a\13\u00bc\6\u00bc\u130c\n\u00bc\r\u00bc\16"+
		"\u00bc\u130d\5\u00bc\u1310\n\u00bc\3\u00bd\3\u00bd\6\u00bd\u1314\n\u00bd"+
		"\r\u00bd\16\u00bd\u1315\3\u00bd\3\u00bd\6\u00bd\u131a\n\u00bd\r\u00bd"+
		"\16\u00bd\u131b\3\u00bd\3\u00bd\5\u00bd\u1320\n\u00bd\3\u00bd\3\u00bd"+
		"\6\u00bd\u1324\n\u00bd\r\u00bd\16\u00bd\u1325\3\u00bd\3\u00bd\6\u00bd"+
		"\u132a\n\u00bd\r\u00bd\16\u00bd\u132b\3\u00bd\3\u00bd\6\u00bd\u1330\n"+
		"\u00bd\r\u00bd\16\u00bd\u1331\5\u00bd\u1334\n\u00bd\3\u00be\3\u00be\3"+
		"\u00bf\3\u00bf\3\u00c0\3\u00c0\3\u00c1\3\u00c1\6\u00c1\u133e\n\u00c1\r"+
		"\u00c1\16\u00c1\u133f\3\u00c1\3\u00c1\7\u00c1\u1344\n\u00c1\f\u00c1\16"+
		"\u00c1\u1347\13\u00c1\3\u00c1\3\u00c1\6\u00c1\u134b\n\u00c1\r\u00c1\16"+
		"\u00c1\u134c\5\u00c1\u134f\n\u00c1\3\u00c1\3\u00c1\6\u00c1\u1353\n\u00c1"+
		"\r\u00c1\16\u00c1\u1354\5\u00c1\u1357\n\u00c1\3\u00c1\3\u00c1\6\u00c1"+
		"\u135b\n\u00c1\r\u00c1\16\u00c1\u135c\3\u00c1\3\u00c1\5\u00c1\u1361\n"+
		"\u00c1\3\u00c1\3\u00c1\6\u00c1\u1365\n\u00c1\r\u00c1\16\u00c1\u1366\3"+
		"\u00c1\3\u00c1\5\u00c1\u136b\n\u00c1\5\u00c1\u136d\n\u00c1\3\u00c1\7\u00c1"+
		"\u1370\n\u00c1\f\u00c1\16\u00c1\u1373\13\u00c1\3\u00c2\3\u00c2\6\u00c2"+
		"\u1377\n\u00c2\r\u00c2\16\u00c2\u1378\3\u00c2\3\u00c2\6\u00c2\u137d\n"+
		"\u00c2\r\u00c2\16\u00c2\u137e\5\u00c2\u1381\n\u00c2\3\u00c2\3\u00c2\6"+
		"\u00c2\u1385\n\u00c2\r\u00c2\16\u00c2\u1386\5\u00c2\u1389\n\u00c2\3\u00c2"+
		"\3\u00c2\3\u00c3\3\u00c3\6\u00c3\u138f\n\u00c3\r\u00c3\16\u00c3\u1390"+
		"\3\u00c3\3\u00c3\6\u00c3\u1395\n\u00c3\r\u00c3\16\u00c3\u1396\5\u00c3"+
		"\u1399\n\u00c3\3\u00c3\3\u00c3\6\u00c3\u139d\n\u00c3\r\u00c3\16\u00c3"+
		"\u139e\5\u00c3\u13a1\n\u00c3\3\u00c3\3\u00c3\3\u00c4\3\u00c4\3\u00c5\3"+
		"\u00c5\3\u00c6\3\u00c6\3\u00c7\3\u00c7\3\u00c8\3\u00c8\3\u00c9\3\u00c9"+
		"\3\u00ca\3\u00ca\3\u00cb\3\u00cb\3\u00cc\3\u00cc\7\u00cc\u13b7\n\u00cc"+
		"\f\u00cc\16\u00cc\u13ba\13\u00cc\3\u00cc\3\u00cc\7\u00cc\u13be\n\u00cc"+
		"\f\u00cc\16\u00cc\u13c1\13\u00cc\3\u00cc\3\u00cc\7\u00cc\u13c5\n\u00cc"+
		"\f\u00cc\16\u00cc\u13c8\13\u00cc\7\u00cc\u13ca\n\u00cc\f\u00cc\16\u00cc"+
		"\u13cd\13\u00cc\3\u00cd\3\u00cd\6\u00cd\u13d1\n\u00cd\r\u00cd\16\u00cd"+
		"\u13d2\3\u00cd\3\u00cd\6\u00cd\u13d7\n\u00cd\r\u00cd\16\u00cd\u13d8\5"+
		"\u00cd\u13db\n\u00cd\3\u00cd\3\u00cd\7\u00cd\u13df\n\u00cd\f\u00cd\16"+
		"\u00cd\u13e2\13\u00cd\3\u00cd\3\u00cd\7\u00cd\u13e6\n\u00cd\f\u00cd\16"+
		"\u00cd\u13e9\13\u00cd\3\u00cd\3\u00cd\7\u00cd\u13ed\n\u00cd\f\u00cd\16"+
		"\u00cd\u13f0\13\u00cd\5\u00cd\u13f2\n\u00cd\3\u00cd\3\u00cd\7\u00cd\u13f6"+
		"\n\u00cd\f\u00cd\16\u00cd\u13f9\13\u00cd\5\u00cd\u13fb\n\u00cd\3\u00cd"+
		"\3\u00cd\7\u00cd\u13ff\n\u00cd\f\u00cd\16\u00cd\u1402\13\u00cd\5\u00cd"+
		"\u1404\n\u00cd\3\u00cd\3\u00cd\7\u00cd\u1408\n\u00cd\f\u00cd\16\u00cd"+
		"\u140b\13\u00cd\5\u00cd\u140d\n\u00cd\3\u00cd\3\u00cd\7\u00cd\u1411\n"+
		"\u00cd\f\u00cd\16\u00cd\u1414\13\u00cd\5\u00cd\u1416\n\u00cd\3\u00cd\3"+
		"\u00cd\7\u00cd\u141a\n\u00cd\f\u00cd\16\u00cd\u141d\13\u00cd\5\u00cd\u141f"+
		"\n\u00cd\3\u00cd\3\u00cd\7\u00cd\u1423\n\u00cd\f\u00cd\16\u00cd\u1426"+
		"\13\u00cd\5\u00cd\u1428\n\u00cd\3\u00cd\3\u00cd\7\u00cd\u142c\n\u00cd"+
		"\f\u00cd\16\u00cd\u142f\13\u00cd\7\u00cd\u1431\n\u00cd\f\u00cd\16\u00cd"+
		"\u1434\13\u00cd\3\u00cd\3\u00cd\7\u00cd\u1438\n\u00cd\f\u00cd\16\u00cd"+
		"\u143b\13\u00cd\5\u00cd\u143d\n\u00cd\3\u00cd\3\u00cd\7\u00cd\u1441\n"+
		"\u00cd\f\u00cd\16\u00cd\u1444\13\u00cd\5\u00cd\u1446\n\u00cd\3\u00cd\3"+
		"\u00cd\3\u00ce\3\u00ce\6\u00ce\u144c\n\u00ce\r\u00ce\16\u00ce\u144d\5"+
		"\u00ce\u1450\n\u00ce\3\u00ce\3\u00ce\6\u00ce\u1454\n\u00ce\r\u00ce\16"+
		"\u00ce\u1455\3\u00ce\3\u00ce\6\u00ce\u145a\n\u00ce\r\u00ce\16\u00ce\u145b"+
		"\5\u00ce\u145e\n\u00ce\3\u00ce\3\u00ce\3\u00cf\3\u00cf\3\u00d0\3\u00d0"+
		"\6\u00d0\u1466\n\u00d0\r\u00d0\16\u00d0\u1467\5\u00d0\u146a\n\u00d0\3"+
		"\u00d0\3\u00d0\6\u00d0\u146e\n\u00d0\r\u00d0\16\u00d0\u146f\3\u00d0\3"+
		"\u00d0\6\u00d0\u1474\n\u00d0\r\u00d0\16\u00d0\u1475\5\u00d0\u1478\n\u00d0"+
		"\3\u00d0\3\u00d0\6\u00d0\u147c\n\u00d0\r\u00d0\16\u00d0\u147d\5\u00d0"+
		"\u1480\n\u00d0\3\u00d0\3\u00d0\6\u00d0\u1484\n\u00d0\r\u00d0\16\u00d0"+
		"\u1485\3\u00d0\3\u00d0\6\u00d0\u148a\n\u00d0\r\u00d0\16\u00d0\u148b\5"+
		"\u00d0\u148e\n\u00d0\3\u00d0\3\u00d0\5\u00d0\u1492\n\u00d0\3\u00d0\6\u00d0"+
		"\u1495\n\u00d0\r\u00d0\16\u00d0\u1496\3\u00d0\3\u00d0\5\u00d0\u149b\n"+
		"\u00d0\3\u00d1\3\u00d1\3\u00d1\7\u00d1\u14a0\n\u00d1\f\u00d1\16\u00d1"+
		"\u14a3\13\u00d1\3\u00d1\3\u00d1\7\u00d1\u14a7\n\u00d1\f\u00d1\16\u00d1"+
		"\u14aa\13\u00d1\3\u00d1\3\u00d1\7\u00d1\u14ae\n\u00d1\f\u00d1\16\u00d1"+
		"\u14b1\13\u00d1\3\u00d1\7\u00d1\u14b4\n\u00d1\f\u00d1\16\u00d1\u14b7\13"+
		"\u00d1\5\u00d1\u14b9\n\u00d1\3\u00d2\3\u00d2\6\u00d2\u14bd\n\u00d2\r\u00d2"+
		"\16\u00d2\u14be\3\u00d2\3\u00d2\6\u00d2\u14c3\n\u00d2\r\u00d2\16\u00d2"+
		"\u14c4\5\u00d2\u14c7\n\u00d2\3\u00d2\3\u00d2\6\u00d2\u14cb\n\u00d2\r\u00d2"+
		"\16\u00d2\u14cc\5\u00d2\u14cf\n\u00d2\5\u00d2\u14d1\n\u00d2\3\u00d2\3"+
		"\u00d2\6\u00d2\u14d5\n\u00d2\r\u00d2\16\u00d2\u14d6\3\u00d2\3\u00d2\6"+
		"\u00d2\u14db\n\u00d2\r\u00d2\16\u00d2\u14dc\3\u00d2\3\u00d2\6\u00d2\u14e1"+
		"\n\u00d2\r\u00d2\16\u00d2\u14e2\5\u00d2\u14e5\n\u00d2\3\u00d2\3\u00d2"+
		"\6\u00d2\u14e9\n\u00d2\r\u00d2\16\u00d2\u14ea\5\u00d2\u14ed\n\u00d2\3"+
		"\u00d2\3\u00d2\5\u00d2\u14f1\n\u00d2\3\u00d3\3\u00d3\6\u00d3\u14f5\n\u00d3"+
		"\r\u00d3\16\u00d3\u14f6\3\u00d3\3\u00d3\6\u00d3\u14fb\n\u00d3\r\u00d3"+
		"\16\u00d3\u14fc\3\u00d3\3\u00d3\5\u00d3\u1501\n\u00d3\3\u00d4\3\u00d4"+
		"\3\u00d5\3\u00d5\6\u00d5\u1507\n\u00d5\r\u00d5\16\u00d5\u1508\3\u00d5"+
		"\3\u00d5\6\u00d5\u150d\n\u00d5\r\u00d5\16\u00d5\u150e\3\u00d5\3\u00d5"+
		"\6\u00d5\u1513\n\u00d5\r\u00d5\16\u00d5\u1514\5\u00d5\u1517\n\u00d5\3"+
		"\u00d5\3\u00d5\3\u00d6\3\u00d6\6\u00d6\u151d\n\u00d6\r\u00d6\16\u00d6"+
		"\u151e\3\u00d6\3\u00d6\6\u00d6\u1523\n\u00d6\r\u00d6\16\u00d6\u1524\5"+
		"\u00d6\u1527\n\u00d6\3\u00d6\3\u00d6\6\u00d6\u152b\n\u00d6\r\u00d6\16"+
		"\u00d6\u152c\5\u00d6\u152f\n\u00d6\3\u00d6\3\u00d6\3\u00d7\3\u00d7\3\u00d8"+
		"\3\u00d8\6\u00d8\u1537\n\u00d8\r\u00d8\16\u00d8\u1538\3\u00d8\3\u00d8"+
		"\6\u00d8\u153d\n\u00d8\r\u00d8\16\u00d8\u153e\5\u00d8\u1541\n\u00d8\5"+
		"\u00d8\u1543\n\u00d8\3\u00d8\3\u00d8\3\u00d8\6\u00d8\u1548\n\u00d8\r\u00d8"+
		"\16\u00d8\u1549\3\u00d8\3\u00d8\3\u00d8\3\u00d8\5\u00d8\u1550\n\u00d8"+
		"\3\u00d9\3\u00d9\6\u00d9\u1554\n\u00d9\r\u00d9\16\u00d9\u1555\3\u00d9"+
		"\3\u00d9\6\u00d9\u155a\n\u00d9\r\u00d9\16\u00d9\u155b\5\u00d9\u155e\n"+
		"\u00d9\3\u00d9\3\u00d9\6\u00d9\u1562\n\u00d9\r\u00d9\16\u00d9\u1563\5"+
		"\u00d9\u1566\n\u00d9\3\u00d9\3\u00d9\3\u00da\3\u00da\6\u00da\u156c\n\u00da"+
		"\r\u00da\16\u00da\u156d\3\u00da\3\u00da\6\u00da\u1572\n\u00da\r\u00da"+
		"\16\u00da\u1573\5\u00da\u1576\n\u00da\3\u00da\3\u00da\6\u00da\u157a\n"+
		"\u00da\r\u00da\16\u00da\u157b\3\u00da\3\u00da\6\u00da\u1580\n\u00da\r"+
		"\u00da\16\u00da\u1581\3\u00da\3\u00da\6\u00da\u1586\n\u00da\r\u00da\16"+
		"\u00da\u1587\3\u00da\3\u00da\3\u00da\3\u00da\6\u00da\u158e\n\u00da\r\u00da"+
		"\16\u00da\u158f\3\u00da\3\u00da\6\u00da\u1594\n\u00da\r\u00da\16\u00da"+
		"\u1595\5\u00da\u1598\n\u00da\3\u00da\3\u00da\6\u00da\u159c\n\u00da\r\u00da"+
		"\16\u00da\u159d\3\u00da\3\u00da\6\u00da\u15a2\n\u00da\r\u00da\16\u00da"+
		"\u15a3\3\u00da\3\u00da\3\u00da\5\u00da\u15a9\n\u00da\5\u00da\u15ab\n\u00da"+
		"\3\u00da\5\u00da\u15ae\n\u00da\3\u00db\3\u00db\6\u00db\u15b2\n\u00db\r"+
		"\u00db\16\u00db\u15b3\3\u00db\3\u00db\6\u00db\u15b8\n\u00db\r\u00db\16"+
		"\u00db\u15b9\5\u00db\u15bc\n\u00db\3\u00db\3\u00db\3\u00dc\3\u00dc\6\u00dc"+
		"\u15c2\n\u00dc\r\u00dc\16\u00dc\u15c3\3\u00dc\3\u00dc\6\u00dc\u15c8\n"+
		"\u00dc\r\u00dc\16\u00dc\u15c9\5\u00dc\u15cc\n\u00dc\3\u00dc\3\u00dc\6"+
		"\u00dc\u15d0\n\u00dc\r\u00dc\16\u00dc\u15d1\3\u00dc\3\u00dc\6\u00dc\u15d6"+
		"\n\u00dc\r\u00dc\16\u00dc\u15d7\5\u00dc\u15da\n\u00dc\3\u00dc\3\u00dc"+
		"\6\u00dc\u15de\n\u00dc\r\u00dc\16\u00dc\u15df\3\u00dc\3\u00dc\3\u00dd"+
		"\3\u00dd\3\u00de\3\u00de\3\u00df\3\u00df\6\u00df\u15ea\n\u00df\r\u00df"+
		"\16\u00df\u15eb\3\u00df\3\u00df\6\u00df\u15f0\n\u00df\r\u00df\16\u00df"+
		"\u15f1\5\u00df\u15f4\n\u00df\3\u00df\3\u00df\3\u00e0\3\u00e0\6\u00e0\u15fa"+
		"\n\u00e0\r\u00e0\16\u00e0\u15fb\5\u00e0\u15fe\n\u00e0\3\u00e0\3\u00e0"+
		"\3\u00e0\6\u00e0\u1603\n\u00e0\r\u00e0\16\u00e0\u1604\5\u00e0\u1607\n"+
		"\u00e0\3\u00e0\3\u00e0\6\u00e0\u160b\n\u00e0\r\u00e0\16\u00e0\u160c\3"+
		"\u00e0\3\u00e0\5\u00e0\u1611\n\u00e0\5\u00e0\u1613\n\u00e0\3\u00e1\3\u00e1"+
		"\3\u00e1\3\u00e1\5\u00e1\u1619\n\u00e1\3\u00e2\3\u00e2\3\u00e3\3\u00e3"+
		"\7\u00e3\u161f\n\u00e3\f\u00e3\16\u00e3\u1622\13\u00e3\3\u00e3\3\u00e3"+
		"\7\u00e3\u1626\n\u00e3\f\u00e3\16\u00e3\u1629\13\u00e3\3\u00e3\3\u00e3"+
		"\7\u00e3\u162d\n\u00e3\f\u00e3\16\u00e3\u1630\13\u00e3\7\u00e3\u1632\n"+
		"\u00e3\f\u00e3\16\u00e3\u1635\13\u00e3\3\u00e3\3\u00e3\7\u00e3\u1639\n"+
		"\u00e3\f\u00e3\16\u00e3\u163c\13\u00e3\7\u00e3\u163e\n\u00e3\f\u00e3\16"+
		"\u00e3\u1641\13\u00e3\3\u00e3\3\u00e3\7\u00e3\u1645\n\u00e3\f\u00e3\16"+
		"\u00e3\u1648\13\u00e3\7\u00e3\u164a\n\u00e3\f\u00e3\16\u00e3\u164d\13"+
		"\u00e3\3\u00e3\3\u00e3\7\u00e3\u1651\n\u00e3\f\u00e3\16\u00e3\u1654\13"+
		"\u00e3\7\u00e3\u1656\n\u00e3\f\u00e3\16\u00e3\u1659\13\u00e3\3\u00e3\3"+
		"\u00e3\7\u00e3\u165d\n\u00e3\f\u00e3\16\u00e3\u1660\13\u00e3\5\u00e3\u1662"+
		"\n\u00e3\3\u00e4\3\u00e4\6\u00e4\u1666\n\u00e4\r\u00e4\16\u00e4\u1667"+
		"\3\u00e4\3\u00e4\6\u00e4\u166c\n\u00e4\r\u00e4\16\u00e4\u166d\3\u00e4"+
		"\3\u00e4\6\u00e4\u1672\n\u00e4\r\u00e4\16\u00e4\u1673\5\u00e4\u1676\n"+
		"\u00e4\3\u00e4\3\u00e4\6\u00e4\u167a\n\u00e4\r\u00e4\16\u00e4\u167b\5"+
		"\u00e4\u167e\n\u00e4\3\u00e4\3\u00e4\7\u00e4\u1682\n\u00e4\f\u00e4\16"+
		"\u00e4\u1685\13\u00e4\6\u00e4\u1687\n\u00e4\r\u00e4\16\u00e4\u1688\3\u00e5"+
		"\3\u00e5\6\u00e5\u168d\n\u00e5\r\u00e5\16\u00e5\u168e\3\u00e5\3\u00e5"+
		"\6\u00e5\u1693\n\u00e5\r\u00e5\16\u00e5\u1694\3\u00e5\3\u00e5\5\u00e5"+
		"\u1699\n\u00e5\3\u00e6\3\u00e6\3\u00e7\3\u00e7\3\u00e8\3\u00e8\6\u00e8"+
		"\u16a1\n\u00e8\r\u00e8\16\u00e8\u16a2\3\u00e8\3\u00e8\6\u00e8\u16a7\n"+
		"\u00e8\r\u00e8\16\u00e8\u16a8\3\u00e8\3\u00e8\6\u00e8\u16ad\n\u00e8\r"+
		"\u00e8\16\u00e8\u16ae\5\u00e8\u16b1\n\u00e8\3\u00e8\3\u00e8\6\u00e8\u16b5"+
		"\n\u00e8\r\u00e8\16\u00e8\u16b6\5\u00e8\u16b9\n\u00e8\3\u00e8\3\u00e8"+
		"\3\u00e9\3\u00e9\6\u00e9\u16bf\n\u00e9\r\u00e9\16\u00e9\u16c0\3\u00e9"+
		"\3\u00e9\6\u00e9\u16c5\n\u00e9\r\u00e9\16\u00e9\u16c6\5\u00e9\u16c9\n"+
		"\u00e9\3\u00e9\3\u00e9\3\u00e9\3\u00e9\6\u00e9\u16cf\n\u00e9\r\u00e9\16"+
		"\u00e9\u16d0\3\u00e9\3\u00e9\3\u00e9\5\u00e9\u16d6\n\u00e9\3\u00ea\3\u00ea"+
		"\3\u00eb\3\u00eb\3\u00ec\3\u00ec\6\u00ec\u16de\n\u00ec\r\u00ec\16\u00ec"+
		"\u16df\3\u00ec\3\u00ec\6\u00ec\u16e4\n\u00ec\r\u00ec\16\u00ec\u16e5\5"+
		"\u00ec\u16e8\n\u00ec\5\u00ec\u16ea\n\u00ec\3\u00ec\3\u00ec\3\u00ec\6\u00ec"+
		"\u16ef\n\u00ec\r\u00ec\16\u00ec\u16f0\3\u00ec\3\u00ec\5\u00ec\u16f5\n"+
		"\u00ec\3\u00ed\3\u00ed\3\u00ee\3\u00ee\6\u00ee\u16fb\n\u00ee\r\u00ee\16"+
		"\u00ee\u16fc\3\u00ee\3\u00ee\6\u00ee\u1701\n\u00ee\r\u00ee\16\u00ee\u1702"+
		"\5\u00ee\u1705\n\u00ee\3\u00ee\3\u00ee\6\u00ee\u1709\n\u00ee\r\u00ee\16"+
		"\u00ee\u170a\5\u00ee\u170d\n\u00ee\3\u00ee\3\u00ee\6\u00ee\u1711\n\u00ee"+
		"\r\u00ee\16\u00ee\u1712\5\u00ee\u1715\n\u00ee\3\u00ee\3\u00ee\6\u00ee"+
		"\u1719\n\u00ee\r\u00ee\16\u00ee\u171a\3\u00ee\3\u00ee\6\u00ee\u171f\n"+
		"\u00ee\r\u00ee\16\u00ee\u1720\3\u00ef\3\u00ef\3\u00f0\3\u00f0\6\u00f0"+
		"\u1727\n\u00f0\r\u00f0\16\u00f0\u1728\3\u00f0\3\u00f0\6\u00f0\u172d\n"+
		"\u00f0\r\u00f0\16\u00f0\u172e\6\u00f0\u1731\n\u00f0\r\u00f0\16\u00f0\u1732"+
		"\3\u00f0\3\u00f0\6\u00f0\u1737\n\u00f0\r\u00f0\16\u00f0\u1738\3\u00f0"+
		"\3\u00f0\7\u00f0\u173d\n\u00f0\f\u00f0\16\u00f0\u1740\13\u00f0\6\u00f0"+
		"\u1742\n\u00f0\r\u00f0\16\u00f0\u1743\3\u00f1\3\u00f1\3\u00f1\6\u00f1"+
		"\u1749\n\u00f1\r\u00f1\16\u00f1\u174a\3\u00f1\3\u00f1\3\u00f1\3\u00f1"+
		"\3\u00f1\3\u00f1\3\u00f1\6\u00f1\u1754\n\u00f1\r\u00f1\16\u00f1\u1755"+
		"\5\u00f1\u1758\n\u00f1\3\u00f1\3\u00f1\6\u00f1\u175c\n\u00f1\r\u00f1\16"+
		"\u00f1\u175d\3\u00f1\3\u00f1\3\u00f1\3\u00f1\3\u00f1\6\u00f1\u1765\n\u00f1"+
		"\r\u00f1\16\u00f1\u1766\3\u00f1\3\u00f1\5\u00f1\u176b\n\u00f1\3\u00f2"+
		"\3\u00f2\3\u00f3\3\u00f3\3\u00f4\3\u00f4\3\u00f5\3\u00f5\3\u00f5\7\u00f5"+
		"\u1776\n\u00f5\f\u00f5\16\u00f5\u1779\13\u00f5\3\u00f5\3\u00f5\7\u00f5"+
		"\u177d\n\u00f5\f\u00f5\16\u00f5\u1780\13\u00f5\3\u00f5\3\u00f5\3\u00f5"+
		"\3\u00f5\7\u00f5\u1786\n\u00f5\f\u00f5\16\u00f5\u1789\13\u00f5\3\u00f5"+
		"\3\u00f5\3\u00f5\3\u00f5\3\u00f5\3\u00f5\3\u00f5\3\u00f5\5\u00f5\u1793"+
		"\n\u00f5\3\u00f5\3\u00f5\7\u00f5\u1797\n\u00f5\f\u00f5\16\u00f5\u179a"+
		"\13\u00f5\3\u00f5\3\u00f5\7\u00f5\u179e\n\u00f5\f\u00f5\16\u00f5\u17a1"+
		"\13\u00f5\3\u00f5\3\u00f5\7\u00f5\u17a5\n\u00f5\f\u00f5\16\u00f5\u17a8"+
		"\13\u00f5\3\u00f6\3\u00f6\3\u00f6\3\u00f6\3\u00f6\3\u00f6\5\u00f6\u17b0"+
		"\n\u00f6\3\u00f7\3\u00f7\3\u00f8\3\u00f8\3\u00f8\7\u00f8\u17b7\n\u00f8"+
		"\f\u00f8\16\u00f8\u17ba\13\u00f8\3\u00f8\3\u00f8\7\u00f8\u17be\n\u00f8"+
		"\f\u00f8\16\u00f8\u17c1\13\u00f8\3\u00f8\3\u00f8\3\u00f8\3\u00f8\7\u00f8"+
		"\u17c7\n\u00f8\f\u00f8\16\u00f8\u17ca\13\u00f8\3\u00f8\3\u00f8\3\u00f8"+
		"\3\u00f8\3\u00f8\5\u00f8\u17d1\n\u00f8\3\u00f8\3\u00f8\7\u00f8\u17d5\n"+
		"\u00f8\f\u00f8\16\u00f8\u17d8\13\u00f8\3\u00f8\3\u00f8\7\u00f8\u17dc\n"+
		"\u00f8\f\u00f8\16\u00f8\u17df\13\u00f8\3\u00f8\3\u00f8\7\u00f8\u17e3\n"+
		"\u00f8\f\u00f8\16\u00f8\u17e6\13\u00f8\3\u00f9\3\u00f9\6\u00f9\u17ea\n"+
		"\u00f9\r\u00f9\16\u00f9\u17eb\3\u00f9\3\u00f9\5\u00f9\u17f0\n\u00f9\3"+
		"\u00f9\6\u00f9\u17f3\n\u00f9\r\u00f9\16\u00f9\u17f4\3\u00f9\3\u00f9\3"+
		"\u00fa\3\u00fa\3\u00fa\7\u00fa\u17fc\n\u00fa\f\u00fa\16\u00fa\u17ff\13"+
		"\u00fa\3\u00fa\3\u00fa\7\u00fa\u1803\n\u00fa\f\u00fa\16\u00fa\u1806\13"+
		"\u00fa\3\u00fa\3\u00fa\3\u00fa\3\u00fa\5\u00fa\u180c\n\u00fa\3\u00fa\3"+
		"\u00fa\6\u00fa\u1810\n\u00fa\r\u00fa\16\u00fa\u1811\3\u00fa\3\u00fa\7"+
		"\u00fa\u1816\n\u00fa\f\u00fa\16\u00fa\u1819\13\u00fa\3\u00fa\3\u00fa\7"+
		"\u00fa\u181d\n\u00fa\f\u00fa\16\u00fa\u1820\13\u00fa\3\u00fa\3\u00fa\7"+
		"\u00fa\u1824\n\u00fa\f\u00fa\16\u00fa\u1827\13\u00fa\3\u00fb\3\u00fb\3"+
		"\u00fc\3\u00fc\6\u00fc\u182d\n\u00fc\r\u00fc\16\u00fc\u182e\3\u00fc\3"+
		"\u00fc\5\u00fc\u1833\n\u00fc\3\u00fc\6\u00fc\u1836\n\u00fc\r\u00fc\16"+
		"\u00fc\u1837\3\u00fc\3\u00fc\5\u00fc\u183c\n\u00fc\3\u00fc\6\u00fc\u183f"+
		"\n\u00fc\r\u00fc\16\u00fc\u1840\3\u00fc\3\u00fc\3\u00fd\3\u00fd\3\u00fe"+
		"\3\u00fe\6\u00fe\u1849\n\u00fe\r\u00fe\16\u00fe\u184a\3\u00fe\3\u00fe"+
		"\5\u00fe\u184f\n\u00fe\3\u00fe\6\u00fe\u1852\n\u00fe\r\u00fe\16\u00fe"+
		"\u1853\3\u00fe\3\u00fe\5\u00fe\u1858\n\u00fe\3\u00fe\6\u00fe\u185b\n\u00fe"+
		"\r\u00fe\16\u00fe\u185c\3\u00fe\3\u00fe\3\u00ff\3\u00ff\3\u0100\3\u0100"+
		"\7\u0100\u1865\n\u0100\f\u0100\16\u0100\u1868\13\u0100\5\u0100\u186a\n"+
		"\u0100\3\u0100\3\u0100\7\u0100\u186e\n\u0100\f\u0100\16\u0100\u1871\13"+
		"\u0100\5\u0100\u1873\n\u0100\3\u0100\3\u0100\6\u0100\u1877\n\u0100\r\u0100"+
		"\16\u0100\u1878\3\u0100\3\u0100\5\u0100\u187d\n\u0100\3\u0100\3\u0100"+
		"\6\u0100\u1881\n\u0100\r\u0100\16\u0100\u1882\3\u0100\3\u0100\5\u0100"+
		"\u1887\n\u0100\3\u0100\3\u0100\6\u0100\u188b\n\u0100\r\u0100\16\u0100"+
		"\u188c\3\u0100\3\u0100\5\u0100\u1891\n\u0100\3\u0100\3\u0100\6\u0100\u1895"+
		"\n\u0100\r\u0100\16\u0100\u1896\3\u0100\3\u0100\5\u0100\u189b\n\u0100"+
		"\3\u0100\3\u0100\6\u0100\u189f\n\u0100\r\u0100\16\u0100\u18a0\3\u0100"+
		"\3\u0100\5\u0100\u18a5\n\u0100\3\u0100\3\u0100\6\u0100\u18a9\n\u0100\r"+
		"\u0100\16\u0100\u18aa\3\u0100\3\u0100\5\u0100\u18af\n\u0100\5\u0100\u18b1"+
		"\n\u0100\3\u0100\3\u0100\6\u0100\u18b5\n\u0100\r\u0100\16\u0100\u18b6"+
		"\3\u0100\3\u0100\5\u0100\u18bb\n\u0100\3\u0100\6\u0100\u18be\n\u0100\r"+
		"\u0100\16\u0100\u18bf\3\u0100\3\u0100\6\u0100\u18c4\n\u0100\r\u0100\16"+
		"\u0100\u18c5\3\u0100\3\u0100\6\u0100\u18ca\n\u0100\r\u0100\16\u0100\u18cb"+
		"\3\u0100\3\u0100\5\u0100\u18d0\n\u0100\3\u0100\3\u0100\3\u0100\6\u0100"+
		"\u18d5\n\u0100\r\u0100\16\u0100\u18d6\3\u0100\3\u0100\5\u0100\u18db\n"+
		"\u0100\3\u0100\6\u0100\u18de\n\u0100\r\u0100\16\u0100\u18df\3\u0100\3"+
		"\u0100\6\u0100\u18e4\n\u0100\r\u0100\16\u0100\u18e5\3\u0100\3\u0100\6"+
		"\u0100\u18ea\n\u0100\r\u0100\16\u0100\u18eb\3\u0100\3\u0100\5\u0100\u18f0"+
		"\n\u0100\3\u0100\5\u0100\u18f3\n\u0100\3\u0101\3\u0101\7\u0101\u18f7\n"+
		"\u0101\f\u0101\16\u0101\u18fa\13\u0101\3\u0101\5\u0101\u18fd\n\u0101\3"+
		"\u0101\7\u0101\u1900\n\u0101\f\u0101\16\u0101\u1903\13\u0101\3\u0101\5"+
		"\u0101\u1906\n\u0101\3\u0102\3\u0102\3\u0102\7\u0102\u190b\n\u0102\f\u0102"+
		"\16\u0102\u190e\13\u0102\3\u0102\3\u0102\7\u0102\u1912\n\u0102\f\u0102"+
		"\16\u0102\u1915\13\u0102\3\u0102\5\u0102\u1918\n\u0102\3\u0102\7\u0102"+
		"\u191b\n\u0102\f\u0102\16\u0102\u191e\13\u0102\3\u0102\5\u0102\u1921\n"+
		"\u0102\5\u0102\u1923\n\u0102\3\u0103\3\u0103\3\u0104\3\u0104\7\u0104\u1929"+
		"\n\u0104\f\u0104\16\u0104\u192c\13\u0104\3\u0104\3\u0104\5\u0104\u1930"+
		"\n\u0104\3\u0104\7\u0104\u1933\n\u0104\f\u0104\16\u0104\u1936\13\u0104"+
		"\3\u0104\3\u0104\5\u0104\u193a\n\u0104\7\u0104\u193c\n\u0104\f\u0104\16"+
		"\u0104\u193f\13\u0104\3\u0104\7\u0104\u1942\n\u0104\f\u0104\16\u0104\u1945"+
		"\13\u0104\3\u0104\3\u0104\3\u0105\3\u0105\7\u0105\u194b\n\u0105\f\u0105"+
		"\16\u0105\u194e\13\u0105\3\u0105\3\u0105\7\u0105\u1952\n\u0105\f\u0105"+
		"\16\u0105\u1955\13\u0105\3\u0105\3\u0105\7\u0105\u1959\n\u0105\f\u0105"+
		"\16\u0105\u195c\13\u0105\3\u0105\5\u0105\u195f\n\u0105\3\u0105\7\u0105"+
		"\u1962\n\u0105\f\u0105\16\u0105\u1965\13\u0105\3\u0105\3\u0105\3\u0106"+
		"\3\u0106\3\u0107\3\u0107\3\u0108\3\u0108\3\u0108\2\5\u01e8\u01ee\u01f2"+
		"\u0109\2\4\6\b\n\f\16\20\22\24\26\30\32\34\36 \"$&(*,.\60\62\64\668:<"+
		">@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084\u0086\u0088\u008a"+
		"\u008c\u008e\u0090\u0092\u0094\u0096\u0098\u009a\u009c\u009e\u00a0\u00a2"+
		"\u00a4\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4\u00b6\u00b8\u00ba"+
		"\u00bc\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca\u00cc\u00ce\u00d0\u00d2"+
		"\u00d4\u00d6\u00d8\u00da\u00dc\u00de\u00e0\u00e2\u00e4\u00e6\u00e8\u00ea"+
		"\u00ec\u00ee\u00f0\u00f2\u00f4\u00f6\u00f8\u00fa\u00fc\u00fe\u0100\u0102"+
		"\u0104\u0106\u0108\u010a\u010c\u010e\u0110\u0112\u0114\u0116\u0118\u011a"+
		"\u011c\u011e\u0120\u0122\u0124\u0126\u0128\u012a\u012c\u012e\u0130\u0132"+
		"\u0134\u0136\u0138\u013a\u013c\u013e\u0140\u0142\u0144\u0146\u0148\u014a"+
		"\u014c\u014e\u0150\u0152\u0154\u0156\u0158\u015a\u015c\u015e\u0160\u0162"+
		"\u0164\u0166\u0168\u016a\u016c\u016e\u0170\u0172\u0174\u0176\u0178\u017a"+
		"\u017c\u017e\u0180\u0182\u0184\u0186\u0188\u018a\u018c\u018e\u0190\u0192"+
		"\u0194\u0196\u0198\u019a\u019c\u019e\u01a0\u01a2\u01a4\u01a6\u01a8\u01aa"+
		"\u01ac\u01ae\u01b0\u01b2\u01b4\u01b6\u01b8\u01ba\u01bc\u01be\u01c0\u01c2"+
		"\u01c4\u01c6\u01c8\u01ca\u01cc\u01ce\u01d0\u01d2\u01d4\u01d6\u01d8\u01da"+
		"\u01dc\u01de\u01e0\u01e2\u01e4\u01e6\u01e8\u01ea\u01ec\u01ee\u01f0\u01f2"+
		"\u01f4\u01f6\u01f8\u01fa\u01fc\u01fe\u0200\u0202\u0204\u0206\u0208\u020a"+
		"\u020c\u020e\2(\3\2\u01a6\u01a6\4\2\u0097\u0097\u009a\u009a\4\2\u00dc"+
		"\u00dc\u0137\u0137\3\2\u015b\u015c\4\2\u00d7\u00d7\u0134\u0134\3\2\u00d1"+
		"\u00d2\3\2\u0164\u0165\3\2\u01a0\u01a1\4\2\30\30nn\4\2\u00d6\u00d6\u016a"+
		"\u016a\4\2\u00a7\u00a7\u01a3\u01a3\3\2\u00dc\u00dd\4\2\u0144\u0144\u0171"+
		"\u0171\3\2\u010a\u010b\7\2\u018e\u018f\u0197\u0198\u019d\u019d\u01a1\u01a1"+
		"\u01a3\u01a3\4\2\u00a4\u00a4\u00bd\u00bd\4\2\u00f9\u00f9\u014d\u014d\3"+
		"\2\u0093\u0094\4\2??\u00c6\u00c6\4\2\u00ee\u00ee\u014d\u014d\6\2\b\b\u00bc"+
		"\u00bc\u017b\u017b\u01a3\u01a3\5\2\66\66\u00ea\u00ea\u017f\u017f\4\2\u00c2"+
		"\u00c2\u00f7\u00f7\4\2\22\22\u00ce\u00ce\7\2\62\62PP\u00de\u00de\u0105"+
		"\u0106\u015d\u015f\4\2\25\26\u0091\u0092\5\2vv\u011a\u011a\u0141\u0141"+
		"\3\2\23\24\4\2\66\66\u011e\u011e\4\2vv\u009f\u009f\4\2\u0120\u0120\u016f"+
		"\u016f\4\2\u011d\u011d\u0146\u0147\3\2RS\3\2\u018b\u018c\4\2\u00a0\u00a0"+
		"\u0155\u0155\4\2\20\20\u00fe\u00fe\5\2\u00ef\u00ef\u0110\u0110\u0184\u0184"+
		"\5\2\n\f\u00f4\u00f4\u01a3\u01a3\2\u1d66\2\u0214\3\2\2\2\4\u0225\3\2\2"+
		"\2\6\u022d\3\2\2\2\b\u0233\3\2\2\2\n\u0245\3\2\2\2\f\u0247\3\2\2\2\16"+
		"\u0251\3\2\2\2\20\u0285\3\2\2\2\22\u02ab\3\2\2\2\24\u02ad\3\2\2\2\26\u02da"+
		"\3\2\2\2\30\u02e8\3\2\2\2\32\u02ea\3\2\2\2\34\u030b\3\2\2\2\36\u031c\3"+
		"\2\2\2 \u036d\3\2\2\2\"\u0380\3\2\2\2$\u0382\3\2\2\2&\u039f\3\2\2\2(\u03a1"+
		"\3\2\2\2*\u03a3\3\2\2\2,\u03b6\3\2\2\2.\u03d1\3\2\2\2\60\u03d3\3\2\2\2"+
		"\62\u03db\3\2\2\2\64\u03fd\3\2\2\2\66\u041f\3\2\2\28\u0421\3\2\2\2:\u0446"+
		"\3\2\2\2<\u0448\3\2\2\2>\u047f\3\2\2\2@\u0493\3\2\2\2B\u04b9\3\2\2\2D"+
		"\u04f5\3\2\2\2F\u051d\3\2\2\2H\u0535\3\2\2\2J\u0547\3\2\2\2L\u05b5\3\2"+
		"\2\2N\u0610\3\2\2\2P\u0612\3\2\2\2R\u0621\3\2\2\2T\u065d\3\2\2\2V\u065f"+
		"\3\2\2\2X\u0663\3\2\2\2Z\u0682\3\2\2\2\\\u069a\3\2\2\2^\u069c\3\2\2\2"+
		"`\u069e\3\2\2\2b\u06a6\3\2\2\2d\u06b6\3\2\2\2f\u06c0\3\2\2\2h\u0701\3"+
		"\2\2\2j\u073d\3\2\2\2l\u075d\3\2\2\2n\u077d\3\2\2\2p\u07a9\3\2\2\2r\u07c9"+
		"\3\2\2\2t\u07e4\3\2\2\2v\u07ff\3\2\2\2x\u0837\3\2\2\2z\u0839\3\2\2\2|"+
		"\u0846\3\2\2\2~\u086f\3\2\2\2\u0080\u08ad\3\2\2\2\u0082\u08af\3\2\2\2"+
		"\u0084\u08c5\3\2\2\2\u0086\u08c7\3\2\2\2\u0088\u08dd\3\2\2\2\u008a\u08f1"+
		"\3\2\2\2\u008c\u090c\3\2\2\2\u008e\u090e\3\2\2\2\u0090\u0916\3\2\2\2\u0092"+
		"\u0918\3\2\2\2\u0094\u091a\3\2\2\2\u0096\u091c\3\2\2\2\u0098\u0938\3\2"+
		"\2\2\u009a\u0953\3\2\2\2\u009c\u0955\3\2\2\2\u009e\u0978\3\2\2\2\u00a0"+
		"\u09aa\3\2\2\2\u00a2\u09ac\3\2\2\2\u00a4\u09ae\3\2\2\2\u00a6\u09b0\3\2"+
		"\2\2\u00a8\u09b2\3\2\2\2\u00aa\u09bf\3\2\2\2\u00ac\u0a85\3\2\2\2\u00ae"+
		"\u0a96\3\2\2\2\u00b0\u0ad0\3\2\2\2\u00b2\u0aec\3\2\2\2\u00b4\u0aee\3\2"+
		"\2\2\u00b6\u0af0\3\2\2\2\u00b8\u0af2\3\2\2\2\u00ba\u0af4\3\2\2\2\u00bc"+
		"\u0b40\3\2\2\2\u00be\u0b42\3\2\2\2\u00c0\u0b55\3\2\2\2\u00c2\u0b77\3\2"+
		"\2\2\u00c4\u0b79\3\2\2\2\u00c6\u0c39\3\2\2\2\u00c8\u0c3b\3\2\2\2\u00ca"+
		"\u0c3d\3\2\2\2\u00cc\u0c3f\3\2\2\2\u00ce\u0c41\3\2\2\2\u00d0\u0c43\3\2"+
		"\2\2\u00d2\u0c45\3\2\2\2\u00d4\u0c47\3\2\2\2\u00d6\u0c58\3\2\2\2\u00d8"+
		"\u0c9b\3\2\2\2\u00da\u0c9d\3\2\2\2\u00dc\u0cae\3\2\2\2\u00de\u0cb2\3\2"+
		"\2\2\u00e0\u0cb4\3\2\2\2\u00e2\u0cb6\3\2\2\2\u00e4\u0cba\3\2\2\2\u00e6"+
		"\u0cd0\3\2\2\2\u00e8\u0ce4\3\2\2\2\u00ea\u0ce6\3\2\2\2\u00ec\u0d5d\3\2"+
		"\2\2\u00ee\u0d61\3\2\2\2\u00f0\u0d65\3\2\2\2\u00f2\u0d69\3\2\2\2\u00f4"+
		"\u0d6b\3\2\2\2\u00f6\u0d94\3\2\2\2\u00f8\u0d96\3\2\2\2\u00fa\u0db4\3\2"+
		"\2\2\u00fc\u0db6\3\2\2\2\u00fe\u0dd9\3\2\2\2\u0100\u0e5c\3\2\2\2\u0102"+
		"\u0e5e\3\2\2\2\u0104\u0e60\3\2\2\2\u0106\u0e62\3\2\2\2\u0108\u0e64\3\2"+
		"\2\2\u010a\u0e7e\3\2\2\2\u010c\u0f4a\3\2\2\2\u010e\u0f4c\3\2\2\2\u0110"+
		"\u0f54\3\2\2\2\u0112\u0f5e\3\2\2\2\u0114\u0f66\3\2\2\2\u0116\u0f6a\3\2"+
		"\2\2\u0118\u0f6c\3\2\2\2\u011a\u0f6e\3\2\2\2\u011c\u0f90\3\2\2\2\u011e"+
		"\u0f92\3\2\2\2\u0120\u0fbb\3\2\2\2\u0122\u0fc3\3\2\2\2\u0124\u0fd5\3\2"+
		"\2\2\u0126\u0fdf\3\2\2\2\u0128\u0fea\3\2\2\2\u012a\u0fec\3\2\2\2\u012c"+
		"\u1001\3\2\2\2\u012e\u1016\3\2\2\2\u0130\u102b\3\2\2\2\u0132\u1040\3\2"+
		"\2\2\u0134\u1055\3\2\2\2\u0136\u106f\3\2\2\2\u0138\u1086\3\2\2\2\u013a"+
		"\u10a0\3\2\2\2\u013c\u10cf\3\2\2\2\u013e\u10e9\3\2\2\2\u0140\u110b\3\2"+
		"\2\2\u0142\u1113\3\2\2\2\u0144\u111d\3\2\2\2\u0146\u1151\3\2\2\2\u0148"+
		"\u1168\3\2\2\2\u014a\u116a\3\2\2\2\u014c\u1172\3\2\2\2\u014e\u118d\3\2"+
		"\2\2\u0150\u118f\3\2\2\2\u0152\u119b\3\2\2\2\u0154\u119d\3\2\2\2\u0156"+
		"\u1225\3\2\2\2\u0158\u1227\3\2\2\2\u015a\u123a\3\2\2\2\u015c\u126a\3\2"+
		"\2\2\u015e\u126c\3\2\2\2\u0160\u126e\3\2\2\2\u0162\u1270\3\2\2\2\u0164"+
		"\u128f\3\2\2\2\u0166\u1291\3\2\2\2\u0168\u12a1\3\2\2\2\u016a\u12b5\3\2"+
		"\2\2\u016c\u12c2\3\2\2\2\u016e\u12d8\3\2\2\2\u0170\u12e5\3\2\2\2\u0172"+
		"\u12e7\3\2\2\2\u0174\u12e9\3\2\2\2\u0176\u130f\3\2\2\2\u0178\u1333\3\2"+
		"\2\2\u017a\u1335\3\2\2\2\u017c\u1337\3\2\2\2\u017e\u1339\3\2\2\2\u0180"+
		"\u133b\3\2\2\2\u0182\u1374\3\2\2\2\u0184\u138c\3\2\2\2\u0186\u13a4\3\2"+
		"\2\2\u0188\u13a6\3\2\2\2\u018a\u13a8\3\2\2\2\u018c\u13aa\3\2\2\2\u018e"+
		"\u13ac\3\2\2\2\u0190\u13ae\3\2\2\2\u0192\u13b0\3\2\2\2\u0194\u13b2\3\2"+
		"\2\2\u0196\u13b4\3\2\2\2\u0198\u13ce\3\2\2\2\u019a\u144f\3\2\2\2\u019c"+
		"\u1461\3\2\2\2\u019e\u1469\3\2\2\2\u01a0\u14b8\3\2\2\2\u01a2\u14d0\3\2"+
		"\2\2\u01a4\u14f2\3\2\2\2\u01a6\u1502\3\2\2\2\u01a8\u1504\3\2\2\2\u01aa"+
		"\u151a\3\2\2\2\u01ac\u1532\3\2\2\2\u01ae\u1542\3\2\2\2\u01b0\u1551\3\2"+
		"\2\2\u01b2\u15ad\3\2\2\2\u01b4\u15af\3\2\2\2\u01b6\u15bf\3\2\2\2\u01b8"+
		"\u15e3\3\2\2\2\u01ba\u15e5\3\2\2\2\u01bc\u15e7\3\2\2\2\u01be\u1612\3\2"+
		"\2\2\u01c0\u1618\3\2\2\2\u01c2\u161a\3\2\2\2\u01c4\u161c\3\2\2\2\u01c6"+
		"\u1663\3\2\2\2\u01c8\u168a\3\2\2\2\u01ca\u169a\3\2\2\2\u01cc\u169c\3\2"+
		"\2\2\u01ce\u169e\3\2\2\2\u01d0\u16d5\3\2\2\2\u01d2\u16d7\3\2\2\2\u01d4"+
		"\u16d9\3\2\2\2\u01d6\u16f4\3\2\2\2\u01d8\u16f6\3\2\2\2\u01da\u16f8\3\2"+
		"\2\2\u01dc\u1722\3\2\2\2\u01de\u1724\3\2\2\2\u01e0\u176a\3\2\2\2\u01e2"+
		"\u176c\3\2\2\2\u01e4\u176e\3\2\2\2\u01e6\u1770\3\2\2\2\u01e8\u1792\3\2"+
		"\2\2\u01ea\u17af\3\2\2\2\u01ec\u17b1\3\2\2\2\u01ee\u17d0\3\2\2\2\u01f0"+
		"\u17e7\3\2\2\2\u01f2\u180b\3\2\2\2\u01f4\u1828\3\2\2\2\u01f6\u182a\3\2"+
		"\2\2\u01f8\u1844\3\2\2\2\u01fa\u1846\3\2\2\2\u01fc\u1860\3\2\2\2\u01fe"+
		"\u1869\3\2\2\2\u0200\u18f4\3\2\2\2\u0202\u1922\3\2\2\2\u0204\u1924\3\2"+
		"\2\2\u0206\u1926\3\2\2\2\u0208\u1948\3\2\2\2\u020a\u1968\3\2\2\2\u020c"+
		"\u196a\3\2\2\2\u020e\u196c\3\2\2\2\u0210\u0213\5\f\7\2\u0211\u0213\5\6"+
		"\4\2\u0212\u0210\3\2\2\2\u0212\u0211\3\2\2\2\u0213\u0216\3\2\2\2\u0214"+
		"\u0212\3\2\2\2\u0214\u0215\3\2\2\2\u0215\u0217\3\2\2\2\u0216\u0214\3\2"+
		"\2\2\u0217\u0218\7\2\2\3\u0218\3\3\2\2\2\u0219\u0226\7\u0184\2\2\u021a"+
		"\u0226\7\u014a\2\2\u021b\u0226\7\u014b\2\2\u021c\u0226\7\u00ba\2\2\u021d"+
		"\u0226\7\u00bb\2\2\u021e\u0226\7\u00e3\2\2\u021f\u0226\7\u00e4\2\2\u0220"+
		"\u0226\7\u0118\2\2\u0221\u0226\7\u0119\2\2\u0222\u0223\7\7\2\2\u0223\u0224"+
		"\7\u01a5\2\2\u0224\u0226\7\u01a0\2\2\u0225\u0219\3\2\2\2\u0225\u021a\3"+
		"\2\2\2\u0225\u021b\3\2\2\2\u0225\u021c\3\2\2\2\u0225\u021d\3\2\2\2\u0225"+
		"\u021e\3\2\2\2\u0225\u021f\3\2\2\2\u0225\u0220\3\2\2\2\u0225\u0221\3\2"+
		"\2\2\u0225\u0222\3\2\2\2\u0226\5\3\2\2\2\u0227\u022e\7\u01a5\2\2\u0228"+
		"\u022e\7\u01a6\2\2\u0229\u022e\7\u01a4\2\2\u022a\u022e\7\u018f\2\2\u022b"+
		"\u022e\7\u0190\2\2\u022c\u022e\5\n\6\2\u022d\u0227\3\2\2\2\u022d\u0228"+
		"\3\2\2\2\u022d\u0229\3\2\2\2\u022d\u022a\3\2\2\2\u022d\u022b\3\2\2\2\u022d"+
		"\u022c\3\2\2\2\u022e\7\3\2\2\2\u022f\u0234\7\u01a5\2\2\u0230\u0234\7\u01a6"+
		"\2\2\u0231\u0234\7\u01a4\2\2\u0232\u0234\5\n\6\2\u0233\u022f\3\2\2\2\u0233"+
		"\u0230\3\2\2\2\u0233\u0231\3\2\2\2\u0233\u0232\3\2\2\2\u0234\t\3\2\2\2"+
		"\u0235\u0239\7\u0187\2\2\u0236\u0238\n\2\2\2\u0237\u0236\3\2\2\2\u0238"+
		"\u023b\3\2\2\2\u0239\u0237\3\2\2\2\u0239\u023a\3\2\2\2\u023a\u023c\3\2"+
		"\2\2\u023b\u0239\3\2\2\2\u023c\u0246\7\u01a6\2\2\u023d\u0241\7\u0188\2"+
		"\2\u023e\u0240\n\2\2\2\u023f\u023e\3\2\2\2\u0240\u0243\3\2\2\2\u0241\u023f"+
		"\3\2\2\2\u0241\u0242\3\2\2\2\u0242\u0244\3\2\2\2\u0243\u0241\3\2\2\2\u0244"+
		"\u0246\7\u01a6\2\2\u0245\u0235\3\2\2\2\u0245\u023d\3\2\2\2\u0246\13\3"+
		"\2\2\2\u0247\u0249\5\u011a\u008e\2\u0248\u024a\5\u0138\u009d\2\u0249\u0248"+
		"\3\2\2\2\u0249\u024a\3\2\2\2\u024a\u024c\3\2\2\2\u024b\u024d\5f\64\2\u024c"+
		"\u024b\3\2\2\2\u024c\u024d\3\2\2\2\u024d\u024f\3\2\2\2\u024e\u0250\5\16"+
		"\b\2\u024f\u024e\3\2\2\2\u024f\u0250\3\2\2\2\u0250\r\3\2\2\2\u0251\u0253"+
		"\5\20\t\2\u0252\u0254\5\24\13\2\u0253\u0252\3\2\2\2\u0253\u0254\3\2\2"+
		"\2\u0254\u026d\3\2\2\2\u0255\u0259\5\22\n\2\u0256\u0258\5\6\4\2\u0257"+
		"\u0256\3\2\2\2\u0258\u025b\3\2\2\2\u0259\u0257\3\2\2\2\u0259\u025a\3\2"+
		"\2\2\u025a\u025d\3\2\2\2\u025b\u0259\3\2\2\2\u025c\u0255\3\2\2\2\u025d"+
		"\u0260\3\2\2\2\u025e\u025c\3\2\2\2\u025e\u025f\3\2\2\2\u025f\u026e\3\2"+
		"\2\2\u0260\u025e\3\2\2\2\u0261\u0265\5\32\16\2\u0262\u0264\5\6\4\2\u0263"+
		"\u0262\3\2\2\2\u0264\u0267\3\2\2\2\u0265\u0263\3\2\2\2\u0265\u0266\3\2"+
		"\2\2\u0266\u0269\3\2\2\2\u0267\u0265\3\2\2\2\u0268\u0261\3\2\2\2\u0269"+
		"\u026c\3\2\2\2\u026a\u0268\3\2\2\2\u026a\u026b\3\2\2\2\u026b\u026e\3\2"+
		"\2\2\u026c\u026a\3\2\2\2\u026d\u025e\3\2\2\2\u026d\u026a\3\2\2\2\u026e"+
		"\u027d\3\2\2\2\u026f\u0271\7\u0083\2\2\u0270\u0272\5\6\4\2\u0271\u0270"+
		"\3\2\2\2\u0272\u0273\3\2\2\2\u0273\u0271\3\2\2\2\u0273\u0274\3\2\2\2\u0274"+
		"\u0275\3\2\2\2\u0275\u0277\7\u0115\2\2\u0276\u0278\5\6\4\2\u0277\u0276"+
		"\3\2\2\2\u0278\u0279\3\2\2\2\u0279\u0277\3\2\2\2\u0279\u027a\3\2\2\2\u027a"+
		"\u027b\3\2\2\2\u027b\u027c\5\u0120\u0091\2\u027c\u027e\3\2\2\2\u027d\u026f"+
		"\3\2\2\2\u027d\u027e\3\2\2\2\u027e\u0282\3\2\2\2\u027f\u0281\5.\30\2\u0280"+
		"\u027f\3\2\2\2\u0281\u0284\3\2\2\2\u0282\u0280\3\2\2\2\u0282\u0283\3\2"+
		"\2\2\u0283\17\3\2\2\2\u0284\u0282\3\2\2\2\u0285\u0287\7\u0114\2\2\u0286"+
		"\u0288\5\6\4\2\u0287\u0286\3\2\2\2\u0288\u0289\3\2\2\2\u0289\u0287\3\2"+
		"\2\2\u0289\u028a\3\2\2\2\u028a\u028b\3\2\2\2\u028b\u0293\7s\2\2\u028c"+
		"\u028e\5\6\4\2\u028d\u028c\3\2\2\2\u028e\u028f\3\2\2\2\u028f\u028d\3\2"+
		"\2\2\u028f\u0290\3\2\2\2\u0290\u0291\3\2\2\2\u0291\u0292\5*\26\2\u0292"+
		"\u0294\3\2\2\2\u0293\u028d\3\2\2\2\u0293\u0294\3\2\2\2\u0294\u029c\3\2"+
		"\2\2\u0295\u0297\5\6\4\2\u0296\u0295\3\2\2\2\u0297\u0298\3\2\2\2\u0298"+
		"\u0296\3\2\2\2\u0298\u0299\3\2\2\2\u0299\u029a\3\2\2\2\u029a\u029b\5,"+
		"\27\2\u029b\u029d\3\2\2\2\u029c\u0296\3\2\2\2\u029c\u029d\3\2\2\2\u029d"+
		"\u02a1\3\2\2\2\u029e\u02a0\5\6\4\2\u029f\u029e\3\2\2\2\u02a0\u02a3\3\2"+
		"\2\2\u02a1\u029f\3\2\2\2\u02a1\u02a2\3\2\2\2\u02a2\u02a4\3\2\2\2\u02a3"+
		"\u02a1\3\2\2\2\u02a4\u02a8\7\u019d\2\2\u02a5\u02a7\5\6\4\2\u02a6\u02a5"+
		"\3\2\2\2\u02a7\u02aa\3\2\2\2\u02a8\u02a6\3\2\2\2\u02a8\u02a9\3\2\2\2\u02a9"+
		"\21\3\2\2\2\u02aa\u02a8\3\2\2\2\u02ab\u02ac\5$\23\2\u02ac\23\3\2\2\2\u02ad"+
		"\u02b1\7h\2\2\u02ae\u02b0\5\6\4\2\u02af\u02ae\3\2\2\2\u02b0\u02b3\3\2"+
		"\2\2\u02b1\u02af\3\2\2\2\u02b1\u02b2\3\2\2\2\u02b2\u02b4\3\2\2\2\u02b3"+
		"\u02b1\3\2\2\2\u02b4\u02b8\7\u019d\2\2\u02b5\u02b7\5\6\4\2\u02b6\u02b5"+
		"\3\2\2\2\u02b7\u02ba\3\2\2\2\u02b8\u02b6\3\2\2\2\u02b8\u02b9\3\2\2\2\u02b9"+
		"\u02c2\3\2\2\2\u02ba\u02b8\3\2\2\2\u02bb\u02bf\5\26\f\2\u02bc\u02be\5"+
		"\6\4\2\u02bd\u02bc\3\2\2\2\u02be\u02c1\3\2\2\2\u02bf\u02bd\3\2\2\2\u02bf"+
		"\u02c0\3\2\2\2\u02c0\u02c3\3\2\2\2\u02c1\u02bf\3\2\2\2\u02c2\u02bb\3\2"+
		"\2\2\u02c3\u02c4\3\2\2\2\u02c4\u02c2\3\2\2\2\u02c4\u02c5\3\2\2\2\u02c5"+
		"\u02c6\3\2\2\2\u02c6\u02c8\7\u0083\2\2\u02c7\u02c9\5\6\4\2\u02c8\u02c7"+
		"\3\2\2\2\u02c9\u02ca\3\2\2\2\u02ca\u02c8\3\2\2\2\u02ca\u02cb\3\2\2\2\u02cb"+
		"\u02cc\3\2\2\2\u02cc\u02d0\7g\2\2\u02cd\u02cf\5\6\4\2\u02ce\u02cd\3\2"+
		"\2\2\u02cf\u02d2\3\2\2\2\u02d0\u02ce\3\2\2\2\u02d0\u02d1\3\2\2\2\u02d1"+
		"\u02d3\3\2\2\2\u02d2\u02d0\3\2\2\2\u02d3\u02d7\7\u019d\2\2\u02d4\u02d6"+
		"\5\6\4\2\u02d5\u02d4\3\2\2\2\u02d6\u02d9\3\2\2\2\u02d7\u02d5\3\2\2\2\u02d7"+
		"\u02d8\3\2\2\2\u02d8\25\3\2\2\2\u02d9\u02d7\3\2\2\2\u02da\u02db\5$\23"+
		"\2\u02db\u02e5\5\36\20\2\u02dc\u02de\5\6\4\2\u02dd\u02dc\3\2\2\2\u02de"+
		"\u02df\3\2\2\2\u02df\u02dd\3\2\2\2\u02df\u02e0\3\2\2\2\u02e0\u02e1\3\2"+
		"\2\2\u02e1\u02e2\5\30\r\2\u02e2\u02e4\3\2\2\2\u02e3\u02dd\3\2\2\2\u02e4"+
		"\u02e7\3\2\2\2\u02e5\u02e3\3\2\2\2\u02e5\u02e6\3\2\2\2\u02e6\27\3\2\2"+
		"\2\u02e7\u02e5\3\2\2\2\u02e8\u02e9\5\32\16\2\u02e9\31\3\2\2\2\u02ea\u02ee"+
		"\5&\24\2\u02eb\u02ed\5\6\4\2\u02ec\u02eb\3\2\2\2\u02ed\u02f0\3\2\2\2\u02ee"+
		"\u02ec\3\2\2\2\u02ee\u02ef\3\2\2\2\u02ef\u02f1\3\2\2\2\u02f0\u02ee\3\2"+
		"\2\2\u02f1\u02f5\7\u019d\2\2\u02f2\u02f4\5\6\4\2\u02f3\u02f2\3\2\2\2\u02f4"+
		"\u02f7\3\2\2\2\u02f5\u02f3\3\2\2\2\u02f5\u02f6\3\2\2\2\u02f6\u0301\3\2"+
		"\2\2\u02f7\u02f5\3\2\2\2\u02f8\u02fc\5\34\17\2\u02f9\u02fb\5\6\4\2\u02fa"+
		"\u02f9\3\2\2\2\u02fb\u02fe\3\2\2\2\u02fc\u02fa\3\2\2\2\u02fc\u02fd\3\2"+
		"\2\2\u02fd\u0300\3\2\2\2\u02fe\u02fc\3\2\2\2\u02ff\u02f8\3\2\2\2\u0300"+
		"\u0303\3\2\2\2\u0301\u02ff\3\2\2\2\u0301\u0302\3\2\2\2\u0302\33\3\2\2"+
		"\2\u0303\u0301\3\2\2\2\u0304\u0308\5\60\31\2\u0305\u0307\5\6\4\2\u0306"+
		"\u0305\3\2\2\2\u0307\u030a\3\2\2\2\u0308\u0306\3\2\2\2\u0308\u0309\3\2"+
		"\2\2\u0309\u030c\3\2\2\2\u030a\u0308\3\2\2\2\u030b\u0304\3\2\2\2\u030c"+
		"\u030d\3\2\2\2\u030d\u030b\3\2\2\2\u030d\u030e\3\2\2\2\u030e\u0312\3\2"+
		"\2\2\u030f\u0311\5\6\4\2\u0310\u030f\3\2\2\2\u0311\u0314\3\2\2\2\u0312"+
		"\u0310\3\2\2\2\u0312\u0313\3\2\2\2\u0313\u0315\3\2\2\2\u0314\u0312\3\2"+
		"\2\2\u0315\u0319\7\u019d\2\2\u0316\u0318\5\6\4\2\u0317\u0316\3\2\2\2\u0318"+
		"\u031b\3\2\2\2\u0319\u0317\3\2\2\2\u0319\u031a\3\2\2\2\u031a\35\3\2\2"+
		"\2\u031b\u0319\3\2\2\2\u031c\u0324\7\u0176\2\2\u031d\u031f\5\6\4\2\u031e"+
		"\u031d\3\2\2\2\u031f\u0320\3\2\2\2\u0320\u031e\3\2\2\2\u0320\u0321\3\2"+
		"\2\2\u0321\u0322\3\2\2\2\u0322\u0323\7\u00b4\2\2\u0323\u0325\3\2\2\2\u0324"+
		"\u031e\3\2\2\2\u0324\u0325\3\2\2\2\u0325\u0327\3\2\2\2\u0326\u0328\5\6"+
		"\4\2\u0327\u0326\3\2\2\2\u0328\u0329\3\2\2\2\u0329\u0327\3\2\2\2\u0329"+
		"\u032a\3\2\2\2\u032a\u036b\3\2\2\2\u032b\u0333\7\6\2\2\u032c\u032e\5\6"+
		"\4\2\u032d\u032c\3\2\2\2\u032e\u032f\3\2\2\2\u032f\u032d\3\2\2\2\u032f"+
		"\u0330\3\2\2\2\u0330\u0331\3\2\2\2\u0331\u0332\7\u014d\2\2\u0332\u0334"+
		"\3\2\2\2\u0333\u032d\3\2\2\2\u0333\u0334\3\2\2\2\u0334\u0336\3\2\2\2\u0335"+
		"\u0337\5\6\4\2\u0336\u0335\3\2\2\2\u0337\u0338\3\2\2\2\u0338\u0336\3\2"+
		"\2\2\u0338\u0339\3\2\2\2\u0339\u033a\3\2\2\2\u033a\u033c\t\3\2\2\u033b"+
		"\u033d\5\6\4\2\u033c\u033b\3\2\2\2\u033d\u033e\3\2\2\2\u033e\u033c\3\2"+
		"\2\2\u033e\u033f\3\2\2\2\u033f\u0340\3\2\2\2\u0340\u0348\7\u0114\2\2\u0341"+
		"\u0343\5\6\4\2\u0342\u0341\3\2\2\2\u0343\u0344\3\2\2\2\u0344\u0342\3\2"+
		"\2\2\u0344\u0345\3\2\2\2\u0345\u0346\3\2\2\2\u0346\u0347\7\u00fa\2\2\u0347"+
		"\u0349\3\2\2\2\u0348\u0342\3\2\2\2\u0348\u0349\3\2\2\2\u0349\u034b\3\2"+
		"\2\2\u034a\u034c\5\6\4\2\u034b\u034a\3\2\2\2\u034c\u034d\3\2\2\2\u034d"+
		"\u034b\3\2\2\2\u034d\u034e\3\2\2\2\u034e\u034f\3\2\2\2\u034f\u0353\5\""+
		"\22\2\u0350\u0352\5\6\4\2\u0351\u0350\3\2\2\2\u0352\u0355\3\2\2\2\u0353"+
		"\u0351\3\2\2\2\u0353\u0354\3\2\2\2\u0354\u0356\3\2\2\2\u0355\u0353\3\2"+
		"\2\2\u0356\u035a\7\u019d\2\2\u0357\u0359\5\6\4\2\u0358\u0357\3\2\2\2\u0359"+
		"\u035c\3\2\2\2\u035a\u0358\3\2\2\2\u035a\u035b\3\2\2\2\u035b\u036c\3\2"+
		"\2\2\u035c\u035a\3\2\2\2\u035d\u035f\7!\2\2\u035e\u0360\5\6\4\2\u035f"+
		"\u035e\3\2\2\2\u0360\u0361\3\2\2\2\u0361\u035f\3\2\2\2\u0361\u0362\3\2"+
		"\2\2\u0362\u0363\3\2\2\2\u0363\u0365\7\u0128\2\2\u0364\u0366\5\6\4\2\u0365"+
		"\u0364\3\2\2\2\u0366\u0367\3\2\2\2\u0367\u0365\3\2\2\2\u0367\u0368\3\2"+
		"\2\2\u0368\u0369\3\2\2\2\u0369\u036a\5 \21\2\u036a\u036c\3\2\2\2\u036b"+
		"\u032b\3\2\2\2\u036b\u035d\3\2\2\2\u036c\37\3\2\2\2\u036d\u036e\5\u0158"+
		"\u00ad\2\u036e!\3\2\2\2\u036f\u0379\5\u01c2\u00e2\2\u0370\u0372\5\6\4"+
		"\2\u0371\u0370\3\2\2\2\u0372\u0373\3\2\2\2\u0373\u0371\3\2\2\2\u0373\u0374"+
		"\3\2\2\2\u0374\u0375\3\2\2\2\u0375\u0376\5\u01c2\u00e2\2\u0376\u0378\3"+
		"\2\2\2\u0377\u0371\3\2\2\2\u0378\u037b\3\2\2\2\u0379\u0377\3\2\2\2\u0379"+
		"\u037a\3\2\2\2\u037a\u0381\3\2\2\2\u037b\u0379\3\2\2\2\u037c\u0381\7\u00c9"+
		"\2\2\u037d\u0381\7\u0100\2\2\u037e\u0381\7\u00cf\2\2\u037f\u0381\7\u009d"+
		"\2\2\u0380\u036f\3\2\2\2\u0380\u037c\3\2\2\2\u0380\u037d\3\2\2\2\u0380"+
		"\u037e\3\2\2\2\u0380\u037f\3\2\2\2\u0381#\3\2\2\2\u0382\u0384\5(\25\2"+
		"\u0383\u0385\5\6\4\2\u0384\u0383\3\2\2\2\u0385\u0386\3\2\2\2\u0386\u0384"+
		"\3\2\2\2\u0386\u0387\3\2\2\2\u0387\u0388\3\2\2\2\u0388\u0390\7\u013a\2"+
		"\2\u0389\u038b\5\6\4\2\u038a\u0389\3\2\2\2\u038b\u038c\3\2\2\2\u038c\u038a"+
		"\3\2\2\2\u038c\u038d\3\2\2\2\u038d\u038e\3\2\2\2\u038e\u038f\5\u0152\u00aa"+
		"\2\u038f\u0391\3\2\2\2\u0390\u038a\3\2\2\2\u0390\u0391\3\2\2\2\u0391\u0395"+
		"\3\2\2\2\u0392\u0394\5\6\4\2\u0393\u0392\3\2\2\2\u0394\u0397\3\2\2\2\u0395"+
		"\u0393\3\2\2\2\u0395\u0396\3\2\2\2\u0396\u0398\3\2\2\2\u0397\u0395\3\2"+
		"\2\2\u0398\u039c\7\u019d\2\2\u0399\u039b\5\6\4\2\u039a\u0399\3\2\2\2\u039b"+
		"\u039e\3\2\2\2\u039c\u039a\3\2\2\2\u039c\u039d\3\2\2\2\u039d%\3\2\2\2"+
		"\u039e\u039c\3\2\2\2\u039f\u03a0\7\u01a3\2\2\u03a0\'\3\2\2\2\u03a1\u03a2"+
		"\7\u01a3\2\2\u03a2)\3\2\2\2\u03a3\u03a5\7\u0177\2\2\u03a4\u03a6\5\6\4"+
		"\2\u03a5\u03a4\3\2\2\2\u03a6\u03a7\3\2\2\2\u03a7\u03a5\3\2\2\2\u03a7\u03a8"+
		"\3\2\2\2\u03a8\u03a9\3\2\2\2\u03a9\u03b3\5\u0158\u00ad\2\u03aa\u03ac\5"+
		"\6\4\2\u03ab\u03aa\3\2\2\2\u03ac\u03ad\3\2\2\2\u03ad\u03ab\3\2\2\2\u03ad"+
		"\u03ae\3\2\2\2\u03ae\u03af\3\2\2\2\u03af\u03b0\5\u0158\u00ad\2\u03b0\u03b2"+
		"\3\2\2\2\u03b1\u03ab\3\2\2\2\u03b2\u03b5\3\2\2\2\u03b3\u03b1\3\2\2\2\u03b3"+
		"\u03b4\3\2\2\2\u03b4+\3\2\2\2\u03b5\u03b3\3\2\2\2\u03b6\u03b8\7\u00b3"+
		"\2\2\u03b7\u03b9\5\6\4\2\u03b8\u03b7\3\2\2\2\u03b9\u03ba\3\2\2\2\u03ba"+
		"\u03b8\3\2\2\2\u03ba\u03bb\3\2\2\2\u03bb\u03bc\3\2\2\2\u03bc\u03bd\5\u0158"+
		"\u00ad\2\u03bd-\3\2\2\2\u03be\u03c2\5\u01e8\u00f5\2\u03bf\u03c1\5\6\4"+
		"\2\u03c0\u03bf\3\2\2\2\u03c1\u03c4\3\2\2\2\u03c2\u03c0\3\2\2\2\u03c2\u03c3"+
		"\3\2\2\2\u03c3\u03c5\3\2\2\2\u03c4\u03c2\3\2\2\2\u03c5\u03c6\7\u019d\2"+
		"\2\u03c6\u03d2\3\2\2\2\u03c7\u03cb\5\u01ee\u00f8\2\u03c8\u03ca\5\6\4\2"+
		"\u03c9\u03c8\3\2\2\2\u03ca\u03cd\3\2\2\2\u03cb\u03c9\3\2\2\2\u03cb\u03cc"+
		"\3\2\2\2\u03cc\u03ce\3\2\2\2\u03cd\u03cb\3\2\2\2\u03ce\u03cf\7\u019d\2"+
		"\2\u03cf\u03d2\3\2\2\2\u03d0\u03d2\5\6\4\2\u03d1\u03be\3\2\2\2\u03d1\u03c7"+
		"\3\2\2\2\u03d1\u03d0\3\2\2\2\u03d2/\3\2\2\2\u03d3\u03d4\5\62\32\2\u03d4"+
		"\61\3\2\2\2\u03d5\u03dc\5<\37\2\u03d6\u03dc\5> \2\u03d7\u03dc\5@!\2\u03d8"+
		"\u03dc\5B\"\2\u03d9\u03dc\5D#\2\u03da\u03dc\58\35\2\u03db\u03d5\3\2\2"+
		"\2\u03db\u03d6\3\2\2\2\u03db\u03d7\3\2\2\2\u03db\u03d8\3\2\2\2\u03db\u03d9"+
		"\3\2\2\2\u03db\u03da\3\2\2\2\u03dc\63\3\2\2\2\u03dd\u03eb\5d\63\2\u03de"+
		"\u03e0\5\6\4\2\u03df\u03de\3\2\2\2\u03e0\u03e1\3\2\2\2\u03e1\u03df\3\2"+
		"\2\2\u03e1\u03e2\3\2\2\2\u03e2\u03e3\3\2\2\2\u03e3\u03e5\7\u00f2\2\2\u03e4"+
		"\u03e6\5\6\4\2\u03e5\u03e4\3\2\2\2\u03e6\u03e7\3\2\2\2\u03e7\u03e5\3\2"+
		"\2\2\u03e7\u03e8\3\2\2\2\u03e8\u03e9\3\2\2\2\u03e9\u03ea\5d\63\2\u03ea"+
		"\u03ec\3\2\2\2\u03eb\u03df\3\2\2\2\u03eb\u03ec\3\2\2\2\u03ec\u03fe\3\2"+
		"\2\2\u03ed\u03ef\7\u00f2\2\2\u03ee\u03f0\5\6\4\2\u03ef\u03ee\3\2\2\2\u03f0"+
		"\u03f1\3\2\2\2\u03f1\u03ef\3\2\2\2\u03f1\u03f2\3\2\2\2\u03f2\u03f3\3\2"+
		"\2\2\u03f3\u03fb\5d\63\2\u03f4\u03f6\5\6\4\2\u03f5\u03f4\3\2\2\2\u03f6"+
		"\u03f7\3\2\2\2\u03f7\u03f5\3\2\2\2\u03f7\u03f8\3\2\2\2\u03f8\u03f9\3\2"+
		"\2\2\u03f9\u03fa\5d\63\2\u03fa\u03fc\3\2\2\2\u03fb\u03f5\3\2\2\2\u03fb"+
		"\u03fc\3\2\2\2\u03fc\u03fe\3\2\2\2\u03fd\u03dd\3\2\2\2\u03fd\u03ed\3\2"+
		"\2\2\u03fe\65\3\2\2\2\u03ff\u040d\5b\62\2\u0400\u0402\5\6\4\2\u0401\u0400"+
		"\3\2\2\2\u0402\u0403\3\2\2\2\u0403\u0401\3\2\2\2\u0403\u0404\3\2\2\2\u0404"+
		"\u0405\3\2\2\2\u0405\u0407\7\u00f2\2\2\u0406\u0408\5\6\4\2\u0407\u0406"+
		"\3\2\2\2\u0408\u0409\3\2\2\2\u0409\u0407\3\2\2\2\u0409\u040a\3\2\2\2\u040a"+
		"\u040b\3\2\2\2\u040b\u040c\5b\62\2\u040c\u040e\3\2\2\2\u040d\u0401\3\2"+
		"\2\2\u040d\u040e\3\2\2\2\u040e\u0420\3\2\2\2\u040f\u0411\7\u00f2\2\2\u0410"+
		"\u0412\5\6\4\2\u0411\u0410\3\2\2\2\u0412\u0413\3\2\2\2\u0413\u0411\3\2"+
		"\2\2\u0413\u0414\3\2\2\2\u0414\u0415\3\2\2\2\u0415\u041d\5b\62\2\u0416"+
		"\u0418\5\6\4\2\u0417\u0416\3\2\2\2\u0418\u0419\3\2\2\2\u0419\u0417\3\2"+
		"\2\2\u0419\u041a\3\2\2\2\u041a\u041b\3\2\2\2\u041b\u041c\5b\62\2\u041c"+
		"\u041e\3\2\2\2\u041d\u0417\3\2\2\2\u041d\u041e\3\2\2\2\u041e\u0420\3\2"+
		"\2\2\u041f\u03ff\3\2\2\2\u041f\u040f\3\2\2\2\u0420\67\3\2\2\2\u0421\u0423"+
		"\7\3\2\2\u0422\u0424\5\6\4\2\u0423\u0422\3\2\2\2\u0424\u0425\3\2\2\2\u0425"+
		"\u0423\3\2\2\2\u0425\u0426\3\2\2\2\u0426\u0427\3\2\2\2\u0427\u0429\5^"+
		"\60\2\u0428\u042a\5\6\4\2\u0429\u0428\3\2\2\2\u042a\u042b\3\2\2\2\u042b"+
		"\u0429\3\2\2\2\u042b\u042c\3\2\2\2\u042c\u042d\3\2\2\2\u042d\u042f\7\u00af"+
		"\2\2\u042e\u0430\5\6\4\2\u042f\u042e\3\2\2\2\u0430\u0431\3\2\2\2\u0431"+
		"\u042f\3\2\2\2\u0431\u0432\3\2\2\2\u0432\u0433\3\2\2\2\u0433\u043b\5:"+
		"\36\2\u0434\u0436\5\6\4\2\u0435\u0434\3\2\2\2\u0436\u0437\3\2\2\2\u0437"+
		"\u0435\3\2\2\2\u0437\u0438\3\2\2\2\u0438\u0439\3\2\2\2\u0439\u043a\5\64"+
		"\33\2\u043a\u043c\3\2\2\2\u043b\u0435\3\2\2\2\u043b\u043c\3\2\2\2\u043c"+
		"\u0444\3\2\2\2\u043d\u043f\5\6\4\2\u043e\u043d\3\2\2\2\u043f\u0440\3\2"+
		"\2\2\u0440\u043e\3\2\2\2\u0440\u0441\3\2\2\2\u0441\u0442\3\2\2\2\u0442"+
		"\u0443\7{\2\2\u0443\u0445\3\2\2\2\u0444\u043e\3\2\2\2\u0444\u0445\3\2"+
		"\2\2\u04459\3\2\2\2\u0446\u0447\7\u01a3\2\2\u0447;\3\2\2\2\u0448\u044a"+
		"\7\3\2\2\u0449\u044b\5\6\4\2\u044a\u0449\3\2\2\2\u044b\u044c\3\2\2\2\u044c"+
		"\u044a\3\2\2\2\u044c\u044d\3\2\2\2\u044d\u044e\3\2\2\2\u044e\u045c\5^"+
		"\60\2\u044f\u0451\5\6\4\2\u0450\u044f\3\2\2\2\u0451\u0452\3\2\2\2\u0452"+
		"\u0450\3\2\2\2\u0452\u0453\3\2\2\2\u0453\u0454\3\2\2\2\u0454\u0456\7\u00af"+
		"\2\2\u0455\u0457\5\6\4\2\u0456\u0455\3\2\2\2\u0457\u0458\3\2\2\2\u0458"+
		"\u0456\3\2\2\2\u0458\u0459\3\2\2\2\u0459\u045a\3\2\2\2\u045a\u045b\5`"+
		"\61\2\u045b\u045d\3\2\2\2\u045c\u0450\3\2\2\2\u045c\u045d\3\2\2\2\u045d"+
		"\u046b\3\2\2\2\u045e\u0460\5\6\4\2\u045f\u045e\3\2\2\2\u0460\u0461\3\2"+
		"\2\2\u0461\u045f\3\2\2\2\u0461\u0462\3\2\2\2\u0462\u0463\3\2\2\2\u0463"+
		"\u0465\7\u017e\2\2\u0464\u0466\5\6\4\2\u0465\u0464\3\2\2\2\u0466\u0467"+
		"\3\2\2\2\u0467\u0465\3\2\2\2\u0467\u0468\3\2\2\2\u0468\u0469\3\2\2\2\u0469"+
		"\u046a\7W\2\2\u046a\u046c\3\2\2\2\u046b\u045f\3\2\2\2\u046b\u046c\3\2"+
		"\2\2\u046c\u0474\3\2\2\2\u046d\u046f\5\6\4\2\u046e\u046d\3\2\2\2\u046f"+
		"\u0470\3\2\2\2\u0470\u046e\3\2\2\2\u0470\u0471\3\2\2\2\u0471\u0472\3\2"+
		"\2\2\u0472\u0473\5\66\34\2\u0473\u0475\3\2\2\2\u0474\u046e\3\2\2\2\u0474"+
		"\u0475\3\2\2\2\u0475\u047d\3\2\2\2\u0476\u0478\5\6\4\2\u0477\u0476\3\2"+
		"\2\2\u0478\u0479\3\2\2\2\u0479\u0477\3\2\2\2\u0479\u047a\3\2\2\2\u047a"+
		"\u047b\3\2\2\2\u047b\u047c\7{\2\2\u047c\u047e\3\2\2\2\u047d\u0477\3\2"+
		"\2\2\u047d\u047e\3\2\2\2\u047e=\3\2\2\2\u047f\u0481\7\3\2\2\u0480\u0482"+
		"\5\6\4\2\u0481\u0480\3\2\2\2\u0482\u0483\3\2\2\2\u0483\u0481\3\2\2\2\u0483"+
		"\u0484\3\2\2\2\u0484\u0485\3\2\2\2\u0485\u0487\5^\60\2\u0486\u0488\5\6"+
		"\4\2\u0487\u0486\3\2\2\2\u0488\u0489\3\2\2\2\u0489\u0487\3\2\2\2\u0489"+
		"\u048a\3\2\2\2\u048a\u048b\3\2\2\2\u048b\u048d\7\u00af\2\2\u048c\u048e"+
		"\5\6\4\2\u048d\u048c\3\2\2\2\u048e\u048f\3\2\2\2\u048f\u048d\3\2\2\2\u048f"+
		"\u0490\3\2\2\2\u0490\u0491\3\2\2\2\u0491\u0492\5\\/\2\u0492?\3\2\2\2\u0493"+
		"\u0495\7\3\2\2\u0494\u0496\5\6\4\2\u0495\u0494\3\2\2\2\u0496\u0497\3\2"+
		"\2\2\u0497\u0495\3\2\2\2\u0497\u0498\3\2\2\2\u0498\u0499\3\2\2\2\u0499"+
		"\u04a1\5^\60\2\u049a\u049c\5\6\4\2\u049b\u049a\3\2\2\2\u049c\u049d\3\2"+
		"\2\2\u049d\u049b\3\2\2\2\u049d\u049e\3\2\2\2\u049e\u049f\3\2\2\2\u049f"+
		"\u04a0\5N(\2\u04a0\u04a2\3\2\2\2\u04a1\u049b\3\2\2\2\u04a2\u04a3\3\2\2"+
		"\2\u04a3\u04a1\3\2\2\2\u04a3\u04a4\3\2\2\2\u04a4\u04ae\3\2\2\2\u04a5\u04a7"+
		"\5\6\4\2\u04a6\u04a5\3\2\2\2\u04a7\u04a8\3\2\2\2\u04a8\u04a6\3\2\2\2\u04a8"+
		"\u04a9\3\2\2\2\u04a9\u04ac\3\2\2\2\u04aa\u04ad\5\64\33\2\u04ab\u04ad\5"+
		"\66\34\2\u04ac\u04aa\3\2\2\2\u04ac\u04ab\3\2\2\2\u04ad\u04af\3\2\2\2\u04ae"+
		"\u04a6\3\2\2\2\u04ae\u04af\3\2\2\2\u04af\u04b7\3\2\2\2\u04b0\u04b2\5\6"+
		"\4\2\u04b1\u04b0\3\2\2\2\u04b2\u04b3\3\2\2\2\u04b3\u04b1\3\2\2\2\u04b3"+
		"\u04b4\3\2\2\2\u04b4\u04b5\3\2\2\2\u04b5\u04b6\7{\2\2\u04b6\u04b8\3\2"+
		"\2\2\u04b7\u04b1\3\2\2\2\u04b7\u04b8\3\2\2\2\u04b8A\3";
	private static final String _serializedATNSegment1 =
		"\2\2\2\u04b9\u04bb\7\3\2\2\u04ba\u04bc\5\6\4\2\u04bb\u04ba\3\2\2\2\u04bc"+
		"\u04bd\3\2\2\2\u04bd\u04bb\3\2\2\2\u04bd\u04be\3\2\2\2\u04be\u04c5\3\2"+
		"\2\2\u04bf\u04c1\7U\2\2\u04c0\u04c2\5\6\4\2\u04c1\u04c0\3\2\2\2\u04c2"+
		"\u04c3\3\2\2\2\u04c3\u04c1\3\2\2\2\u04c3\u04c4\3\2\2\2\u04c4\u04c6\3\2"+
		"\2\2\u04c5\u04bf\3\2\2\2\u04c5\u04c6\3\2\2\2\u04c6\u04c7\3\2\2\2\u04c7"+
		"\u04c9\7\u00d3\2\2\u04c8\u04ca\5\6\4\2\u04c9\u04c8\3\2\2\2\u04ca\u04cb"+
		"\3\2\2\2\u04cb\u04c9\3\2\2\2\u04cb\u04cc\3\2\2\2\u04cc\u04d3\3\2\2\2\u04cd"+
		"\u04cf\7\u00c2\2\2\u04ce\u04d0\5\6\4\2\u04cf\u04ce\3\2\2\2\u04d0\u04d1"+
		"\3\2\2\2\u04d1\u04cf\3\2\2\2\u04d1\u04d2\3\2\2\2\u04d2\u04d4\3\2\2\2\u04d3"+
		"\u04cd\3\2\2\2\u04d3\u04d4\3\2\2\2\u04d4\u04d5\3\2\2\2\u04d5\u04dd\5P"+
		")\2\u04d6\u04d8\5\6\4\2\u04d7\u04d6\3\2\2\2\u04d8\u04d9\3\2\2\2\u04d9"+
		"\u04d7\3\2\2\2\u04d9\u04da\3\2\2\2\u04da\u04db\3\2\2\2\u04db\u04dc\5L"+
		"\'\2\u04dc\u04de\3\2\2\2\u04dd\u04d7\3\2\2\2\u04de\u04df\3\2\2\2\u04df"+
		"\u04dd\3\2\2\2\u04df\u04e0\3\2\2\2\u04e0\u04ea\3\2\2\2\u04e1\u04e3\5\6"+
		"\4\2\u04e2\u04e1\3\2\2\2\u04e3\u04e4\3\2\2\2\u04e4\u04e2\3\2\2\2\u04e4"+
		"\u04e5\3\2\2\2\u04e5\u04e8\3\2\2\2\u04e6\u04e9\5\64\33\2\u04e7\u04e9\5"+
		"\66\34\2\u04e8\u04e6\3\2\2\2\u04e8\u04e7\3\2\2\2\u04e9\u04eb\3\2\2\2\u04ea"+
		"\u04e2\3\2\2\2\u04ea\u04eb\3\2\2\2\u04eb\u04f3\3\2\2\2\u04ec\u04ee\5\6"+
		"\4\2\u04ed\u04ec\3\2\2\2\u04ee\u04ef\3\2\2\2\u04ef\u04ed\3\2\2\2\u04ef"+
		"\u04f0\3\2\2\2\u04f0\u04f1\3\2\2\2\u04f1\u04f2\7{\2\2\u04f2\u04f4\3\2"+
		"\2\2\u04f3\u04ed\3\2\2\2\u04f3\u04f4\3\2\2\2\u04f4C\3\2\2\2\u04f5\u04f7"+
		"\7\3\2\2\u04f6\u04f8\5\6\4\2\u04f7\u04f6\3\2\2\2\u04f8\u04f9\3\2\2\2\u04f9"+
		"\u04f7\3\2\2\2\u04f9\u04fa\3\2\2\2\u04fa\u04fb\3\2\2\2\u04fb\u0503\5\u010a"+
		"\u0086\2\u04fc\u04fe\5\6\4\2\u04fd\u04fc\3\2\2\2\u04fe\u04ff\3\2\2\2\u04ff"+
		"\u04fd\3\2\2\2\u04ff\u0500\3\2\2\2\u0500\u0501\3\2\2\2\u0501\u0502\5F"+
		"$\2\u0502\u0504\3\2\2\2\u0503\u04fd\3\2\2\2\u0503\u0504\3\2\2\2\u0504"+
		"\u050c\3\2\2\2\u0505\u0507\5\6\4\2\u0506\u0505\3\2\2\2\u0507\u0508\3\2"+
		"\2\2\u0508\u0506\3\2\2\2\u0508\u0509\3\2\2\2\u0509\u050a\3\2\2\2\u050a"+
		"\u050b\5\64\33\2\u050b\u050d\3\2\2\2\u050c\u0506\3\2\2\2\u050c\u050d\3"+
		"\2\2\2\u050d\u0515\3\2\2\2\u050e\u0510\5\6\4\2\u050f\u050e\3\2\2\2\u0510"+
		"\u0511\3\2\2\2\u0511\u050f\3\2\2\2\u0511\u0512\3\2\2\2\u0512\u0513\3\2"+
		"\2\2\u0513\u0514\7{\2\2\u0514\u0516\3\2\2\2\u0515\u050f\3\2\2\2\u0515"+
		"\u0516\3\2\2\2\u0516E\3\2\2\2\u0517\u0519\7\33\2\2\u0518\u051a\5\6\4\2"+
		"\u0519\u0518\3\2\2\2\u051a\u051b\3\2\2\2\u051b\u0519\3\2\2\2\u051b\u051c"+
		"\3\2\2\2\u051c\u051e\3\2\2\2\u051d\u0517\3\2\2\2\u051d\u051e\3\2\2\2\u051e"+
		"\u0533\3\2\2\2\u051f\u0527\5H%\2\u0520\u0522\5\6\4\2\u0521\u0520\3\2\2"+
		"\2\u0522\u0523\3\2\2\2\u0523\u0521\3\2\2\2\u0523\u0524\3\2\2\2\u0524\u0525"+
		"\3\2\2\2\u0525\u0526\5J&\2\u0526\u0528\3\2\2\2\u0527\u0521\3\2\2\2\u0527"+
		"\u0528\3\2\2\2\u0528\u0534\3\2\2\2\u0529\u0531\5J&\2\u052a\u052c\5\6\4"+
		"\2\u052b\u052a\3\2\2\2\u052c\u052d\3\2\2\2\u052d\u052b\3\2\2\2\u052d\u052e"+
		"\3\2\2\2\u052e\u052f\3\2\2\2\u052f\u0530\5H%\2\u0530\u0532\3\2\2\2\u0531"+
		"\u052b\3\2\2\2\u0531\u0532\3\2\2\2\u0532\u0534\3\2\2\2\u0533\u051f\3\2"+
		"\2\2\u0533\u0529\3\2\2\2\u0534G\3\2\2\2\u0535\u0537\7\u00dc\2\2\u0536"+
		"\u0538\5\6\4\2\u0537\u0536\3\2\2\2\u0538\u0539\3\2\2\2\u0539\u0537\3\2"+
		"\2\2\u0539\u053a\3\2\2\2\u053a\u0541\3\2\2\2\u053b\u053d\7\u00f3\2\2\u053c"+
		"\u053e\5\6\4\2\u053d\u053c\3\2\2\2\u053e\u053f\3\2\2\2\u053f\u053d\3\2"+
		"\2\2\u053f\u0540\3\2\2\2\u0540\u0542\3\2\2\2\u0541\u053b\3\2\2\2\u0541"+
		"\u0542\3\2\2\2\u0542\u0545\3\2\2\2\u0543\u0546\7\u01a1\2\2\u0544\u0546"+
		"\5\u0158\u00ad\2\u0545\u0543\3\2\2\2\u0545\u0544\3\2\2\2\u0546I\3\2\2"+
		"\2\u0547\u0549\7=\2\2\u0548\u054a\5\6\4\2\u0549\u0548\3\2\2\2\u054a\u054b"+
		"\3\2\2\2\u054b\u0549\3\2\2\2\u054b\u054c\3\2\2\2\u054c\u0553\3\2\2\2\u054d"+
		"\u054f\7\u00f3\2\2\u054e\u0550\5\6\4\2\u054f\u054e\3\2\2\2\u0550\u0551"+
		"\3\2\2\2\u0551\u054f\3\2\2\2\u0551\u0552\3\2\2\2\u0552\u0554\3\2\2\2\u0553"+
		"\u054d\3\2\2\2\u0553\u0554\3\2\2\2\u0554\u0557\3\2\2\2\u0555\u0558\7\u01a1"+
		"\2\2\u0556\u0558\5\u0158\u00ad\2\u0557\u0555\3\2\2\2\u0557\u0556\3\2\2"+
		"\2\u0558K\3\2\2\2\u0559\u055b\7\u00af\2\2\u055a\u055c\5\6\4\2\u055b\u055a"+
		"\3\2\2\2\u055c\u055d\3\2\2\2\u055d\u055b\3\2\2\2\u055d\u055e\3\2\2\2\u055e"+
		"\u0560\3\2\2\2\u055f\u0559\3\2\2\2\u055f\u0560\3\2\2\2\u0560\u0561\3\2"+
		"\2\2\u0561\u0569\7\u00dc\2\2\u0562\u0564\5\6\4\2\u0563\u0562\3\2\2\2\u0564"+
		"\u0565\3\2\2\2\u0565\u0563\3\2\2\2\u0565\u0566\3\2\2\2\u0566\u0567\3\2"+
		"\2\2\u0567\u0568\7\u00f3\2\2\u0568\u056a\3\2\2\2\u0569\u0563\3\2\2\2\u0569"+
		"\u056a\3\2\2\2\u056a\u056c\3\2\2\2\u056b\u056d\5\6\4\2\u056c\u056b\3\2"+
		"\2\2\u056d\u056e\3\2\2\2\u056e\u056c\3\2\2\2\u056e\u056f\3\2\2\2\u056f"+
		"\u0570\3\2\2\2\u0570\u0571\5Z.\2\u0571\u05b6\3\2\2\2\u0572\u0574\7\u00af"+
		"\2\2\u0573\u0575\5\6\4\2\u0574\u0573\3\2\2\2\u0575\u0576\3\2\2\2\u0576"+
		"\u0574\3\2\2\2\u0576\u0577\3\2\2\2\u0577\u0579\3\2\2\2\u0578\u0572\3\2"+
		"\2\2\u0578\u0579\3\2\2\2\u0579\u057a\3\2\2\2\u057a\u0582\7=\2\2\u057b"+
		"\u057d\5\6\4\2\u057c\u057b\3\2\2\2\u057d\u057e\3\2\2\2\u057e\u057c\3\2"+
		"\2\2\u057e\u057f\3\2\2\2\u057f\u0580\3\2\2\2\u0580\u0581\7\u00f3\2\2\u0581"+
		"\u0583\3\2\2\2\u0582\u057c\3\2\2\2\u0582\u0583\3\2\2\2\u0583\u0585\3\2"+
		"\2\2\u0584\u0586\5\6\4\2\u0585\u0584\3\2\2\2\u0586\u0587\3\2\2\2\u0587"+
		"\u0585\3\2\2\2\u0587\u0588\3\2\2\2\u0588\u0589\3\2\2\2\u0589\u058a\5Z"+
		".\2\u058a\u05b6\3\2\2\2\u058b\u05a3\7\u0096\2\2\u058c\u058e\5\6\4\2\u058d"+
		"\u058c\3\2\2\2\u058e\u058f\3\2\2\2\u058f\u058d\3\2\2\2\u058f\u0590\3\2"+
		"\2\2\u0590\u0597\3\2\2\2\u0591\u0593\7\u0168\2\2\u0592\u0594\5\6\4\2\u0593"+
		"\u0592\3\2\2\2\u0594\u0595\3\2\2\2\u0595\u0593\3\2\2\2\u0595\u0596\3\2"+
		"\2\2\u0596\u0598\3\2\2\2\u0597\u0591\3\2\2\2\u0597\u0598\3\2\2\2\u0598"+
		"\u0599\3\2\2\2\u0599\u05a1\7z\2\2\u059a\u059c\5\6\4\2\u059b\u059a\3\2"+
		"\2\2\u059c\u059d\3\2\2\2\u059d\u059b\3\2\2\2\u059d\u059e\3\2\2\2\u059e"+
		"\u059f\3\2\2\2\u059f\u05a0\7\u00f7\2\2\u05a0\u05a2\3\2\2\2\u05a1\u059b"+
		"\3\2\2\2\u05a1\u05a2\3\2\2\2\u05a2\u05a4\3\2\2\2\u05a3\u058d\3\2\2\2\u05a3"+
		"\u05a4\3\2\2\2\u05a4\u05a6\3\2\2\2\u05a5\u05a7\5\6\4\2\u05a6\u05a5\3\2"+
		"\2\2\u05a7\u05a8\3\2\2\2\u05a8\u05a6\3\2\2\2\u05a8\u05a9\3\2\2\2\u05a9"+
		"\u05aa\3\2\2\2\u05aa\u05ab\t\4\2\2\u05ab\u05b6\3\2\2\2\u05ac\u05ae\7\u017e"+
		"\2\2\u05ad\u05af\5\6\4\2\u05ae\u05ad\3\2\2\2\u05af\u05b0\3\2\2\2\u05b0"+
		"\u05ae\3\2\2\2\u05b0\u05b1\3\2\2\2\u05b1\u05b3\3\2\2\2\u05b2\u05ac\3\2"+
		"\2\2\u05b2\u05b3\3\2\2\2\u05b3\u05b4\3\2\2\2\u05b4\u05b6\7\"\2\2\u05b5"+
		"\u055f\3\2\2\2\u05b5\u0578\3\2\2\2\u05b5\u058b\3\2\2\2\u05b5\u05b2\3\2"+
		"\2\2\u05b6M\3\2\2\2\u05b7\u0611\5L\'\2\u05b8\u0611\7\u016e\2\2\u05b9\u0611"+
		"\7,\2\2\u05ba\u05bc\7\u017e\2\2\u05bb\u05bd\5\6\4\2\u05bc\u05bb\3\2\2"+
		"\2\u05bd\u05be\3\2\2\2\u05be\u05bc\3\2\2\2\u05be\u05bf\3\2\2\2\u05bf\u05c1"+
		"\3\2\2\2\u05c0\u05ba\3\2\2\2\u05c0\u05c1\3\2\2\2\u05c1\u05c2\3\2\2\2\u05c2"+
		"\u0611\7*\2\2\u05c3\u05cb\7\u0117\2\2\u05c4\u05c6\5\6\4\2\u05c5\u05c4"+
		"\3\2\2\2\u05c6\u05c7\3\2\2\2\u05c7\u05c5\3\2\2\2\u05c7\u05c8\3\2\2\2\u05c8"+
		"\u05c9\3\2\2\2\u05c9\u05ca\5T+\2\u05ca\u05cc\3\2\2\2\u05cb\u05c5\3\2\2"+
		"\2\u05cb\u05cc\3\2\2\2\u05cc\u0611\3\2\2\2\u05cd\u05cf\7\u017e\2\2\u05ce"+
		"\u05d0\5\6\4\2\u05cf\u05ce\3\2\2\2\u05d0\u05d1\3\2\2\2\u05d1\u05cf\3\2"+
		"\2\2\u05d1\u05d2\3\2\2\2\u05d2\u05d4\3\2\2\2\u05d3\u05cd\3\2\2\2\u05d3"+
		"\u05d4\3\2\2\2\u05d4\u05d5\3\2\2\2\u05d5\u0611\7W\2\2\u05d6\u0611\7\u012f"+
		"\2\2\u05d7\u05d9\7\u017e\2\2\u05d8\u05da\5\6\4\2\u05d9\u05d8\3\2\2\2\u05da"+
		"\u05db\3\2\2\2\u05db\u05d9\3\2\2\2\u05db\u05dc\3\2\2\2\u05dc\u05de\3\2"+
		"\2\2\u05dd\u05d7\3\2\2\2\u05dd\u05de\3\2\2\2\u05de\u05df\3\2\2\2\u05df"+
		"\u05e1\7\u00f1\2\2\u05e0\u05e2\5\6\4\2\u05e1\u05e0\3\2\2\2\u05e2\u05e3"+
		"\3\2\2\2\u05e3\u05e1\3\2\2\2\u05e3\u05e4\3\2\2\2\u05e4\u05e5\3\2\2\2\u05e5"+
		"\u05e6\7x\2\2\u05e6\u0611\3\2\2\2\u05e7\u05e9\7i\2\2\u05e8\u05ea\5\6\4"+
		"\2\u05e9\u05e8\3\2\2\2\u05ea\u05eb\3\2\2\2\u05eb\u05e9\3\2\2\2\u05eb\u05ec"+
		"\3\2\2\2\u05ec\u05f3\3\2\2\2\u05ed\u05ef\7\u00ce\2\2\u05ee\u05f0\5\6\4"+
		"\2\u05ef\u05ee\3\2\2\2\u05f0\u05f1\3\2\2\2\u05f1\u05ef\3\2\2\2\u05f1\u05f2"+
		"\3\2\2\2\u05f2\u05f4\3\2\2\2\u05f3\u05ed\3\2\2\2\u05f3\u05f4\3\2\2\2\u05f4"+
		"\u05f5\3\2\2\2\u05f5\u05f6\5R*\2\u05f6\u0611\3\2\2\2\u05f7\u05f9\7U\2"+
		"\2\u05f8\u05fa\5\6\4\2\u05f9\u05f8\3\2\2\2\u05fa\u05fb\3\2\2\2\u05fb\u05f9"+
		"\3\2\2\2\u05fb\u05fc\3\2\2\2\u05fc\u05fe\3\2\2\2\u05fd\u05f7\3\2\2\2\u05fd"+
		"\u05fe\3\2\2\2\u05fe\u05ff\3\2\2\2\u05ff\u0607\7\u00d3\2\2\u0600\u0602"+
		"\5\6\4\2\u0601\u0600\3\2\2\2\u0602\u0603\3\2\2\2\u0603\u0601\3\2\2\2\u0603"+
		"\u0604\3\2\2\2\u0604\u0605\3\2\2\2\u0605\u0606\7\u00c2\2\2\u0606\u0608"+
		"\3\2\2\2\u0607\u0601\3\2\2\2\u0607\u0608\3\2\2\2\u0608\u060a\3\2\2\2\u0609"+
		"\u060b\5\6\4\2\u060a\u0609\3\2\2\2\u060b\u060c\3\2\2\2\u060c\u060a\3\2"+
		"\2\2\u060c\u060d\3\2\2\2\u060d\u060e\3\2\2\2\u060e\u060f\5P)\2\u060f\u0611"+
		"\3\2\2\2\u0610\u05b7\3\2\2\2\u0610\u05b8\3\2\2\2\u0610\u05b9\3\2\2\2\u0610"+
		"\u05c0\3\2\2\2\u0610\u05c3\3\2\2\2\u0610\u05d3\3\2\2\2\u0610\u05d6\3\2"+
		"\2\2\u0610\u05dd\3\2\2\2\u0610\u05e7\3\2\2\2\u0610\u05fd\3\2\2\2\u0611"+
		"O\3\2\2\2\u0612\u0613\5\u0158\u00ad\2\u0613Q\3\2\2\2\u0614\u0622\5\4\3"+
		"\2\u0615\u0622\7\u01a0\2\2\u0616\u0622\5\u0158\u00ad\2\u0617\u061f\7\\"+
		"\2\2\u0618\u061a\5\6\4\2\u0619\u0618\3\2\2\2\u061a\u061b\3\2\2\2\u061b"+
		"\u0619\3\2\2\2\u061b\u061c\3\2\2\2\u061c\u061d\3\2\2\2\u061d\u061e\7\u0178"+
		"\2\2\u061e\u0620\3\2\2\2\u061f\u0619\3\2\2\2\u061f\u0620\3\2\2\2\u0620"+
		"\u0622\3\2\2\2\u0621\u0614\3\2\2\2\u0621\u0615\3\2\2\2\u0621\u0616\3\2"+
		"\2\2\u0621\u0617\3\2\2\2\u0622S\3\2\2\2\u0623\u0625\7\u0145\2\2\u0624"+
		"\u0626\5\6\4\2\u0625\u0624\3\2\2\2\u0626\u0627\3\2\2\2\u0627\u0625\3\2"+
		"\2\2\u0627\u0628\3\2\2\2\u0628\u0629\3\2\2\2\u0629\u062a\5X-\2\u062a\u065e"+
		"\3\2\2\2\u062b\u062d\7\u017e\2\2\u062c\u062e\5\6\4\2\u062d\u062c\3\2\2"+
		"\2\u062e\u062f\3\2\2\2\u062f\u062d\3\2\2\2\u062f\u0630\3\2\2\2\u0630\u0632"+
		"\3\2\2\2\u0631\u062b\3\2\2\2\u0631\u0632\3\2\2\2\u0632\u0633\3\2\2\2\u0633"+
		"\u065e\7\37\2\2\u0634\u0636\7\u017e\2\2\u0635\u0637\5\6\4\2\u0636\u0635"+
		"\3\2\2\2\u0637\u0638\3\2\2\2\u0638\u0636\3\2\2\2\u0638\u0639\3\2\2\2\u0639"+
		"\u063b\3\2\2\2\u063a\u0634\3\2\2\2\u063a\u063b\3\2\2\2\u063b\u063c\3\2"+
		"\2\2\u063c\u063e\7\u00f1\2\2\u063d\u063f\5\6\4\2\u063e\u063d\3\2\2\2\u063f"+
		"\u0640\3\2\2\2\u0640\u063e\3\2\2\2\u0640\u0641\3\2\2\2\u0641\u0642\3\2"+
		"\2\2\u0642\u0643\7(\2\2\u0643\u065e\3\2\2\2\u0644\u0646\7\u017e\2\2\u0645"+
		"\u0647\5\6\4\2\u0646\u0645\3\2\2\2\u0647\u0648\3\2\2\2\u0648\u0646\3\2"+
		"\2\2\u0648\u0649\3\2\2\2\u0649\u064b\3\2\2\2\u064a\u0644\3\2\2\2\u064a"+
		"\u064b\3\2\2\2\u064b\u064c\3\2\2\2\u064c\u065e\7y\2\2\u064d\u064f\7\u017e"+
		"\2\2\u064e\u0650\5\6\4\2\u064f\u064e\3\2\2\2\u0650\u0651\3\2\2\2\u0651"+
		"\u064f\3\2\2\2\u0651\u0652\3\2\2\2\u0652\u0654\3\2\2\2\u0653\u064d\3\2"+
		"\2\2\u0653\u0654\3\2\2\2\u0654\u0655\3\2\2\2\u0655\u0657\7\u00a5\2\2\u0656"+
		"\u0658\5\6\4\2\u0657\u0656\3\2\2\2\u0658\u0659\3\2\2\2\u0659\u0657\3\2"+
		"\2\2\u0659\u065a\3\2\2\2\u065a\u065b\3\2\2\2\u065b\u065c\5V,\2\u065c\u065e"+
		"\3\2\2\2\u065d\u0623\3\2\2\2\u065d\u0631\3\2\2\2\u065d\u063a\3\2\2\2\u065d"+
		"\u064a\3\2\2\2\u065d\u0653\3\2\2\2\u065eU\3\2\2\2\u065f\u0660\7\u01a0"+
		"\2\2\u0660W\3\2\2\2\u0661\u0664\7\u01a1\2\2\u0662\u0664\5\u0158\u00ad"+
		"\2\u0663\u0661\3\2\2\2\u0663\u0662\3\2\2\2\u0664Y\3\2\2\2\u0665\u0683"+
		"\5\u00c4c\2\u0666\u0676\5\u0158\u00ad\2\u0667\u0669\5\6\4\2\u0668\u0667"+
		"\3\2\2\2\u0669\u066a\3\2\2\2\u066a\u0668\3\2\2\2\u066a\u066b\3\2\2\2\u066b"+
		"\u066c\3\2\2\2\u066c\u0674\7\u010c\2\2\u066d\u066f\5\6\4\2\u066e\u066d"+
		"\3\2\2\2\u066f\u0670\3\2\2\2\u0670\u066e\3\2\2\2\u0670\u0671\3\2\2\2\u0671"+
		"\u0672\3\2\2\2\u0672\u0673\5\u00c4c\2\u0673\u0675\3\2\2\2\u0674\u066e"+
		"\3\2\2\2\u0674\u0675\3\2\2\2\u0675\u0677\3\2\2\2\u0676\u0668\3\2\2\2\u0676"+
		"\u0677\3\2\2\2\u0677\u0683\3\2\2\2\u0678\u0680\7\u010c\2\2\u0679\u067b"+
		"\5\6\4\2\u067a\u0679\3\2\2\2\u067b\u067c\3\2\2\2\u067c\u067a\3\2\2\2\u067c"+
		"\u067d\3\2\2\2\u067d\u067e\3\2\2\2\u067e\u067f\5\u00c4c\2\u067f\u0681"+
		"\3\2\2\2\u0680\u067a\3\2\2\2\u0680\u0681\3\2\2\2\u0681\u0683\3\2\2\2\u0682"+
		"\u0665\3\2\2\2\u0682\u0666\3\2\2\2\u0682\u0678\3\2\2\2\u0683[\3\2\2\2"+
		"\u0684\u068c\7_\2\2\u0685\u0687\5\6\4\2\u0686\u0685\3\2\2\2\u0687\u0688"+
		"\3\2\2\2\u0688\u0686\3\2\2\2\u0688\u0689\3\2\2\2\u0689\u068a\3\2\2\2\u068a"+
		"\u068b\7\u0183\2\2\u068b\u068d\3\2\2\2\u068c\u0686\3\2\2\2\u068c\u068d"+
		"\3\2\2\2\u068d\u069b\3\2\2\2\u068e\u0696\7b\2\2\u068f\u0691\5\6\4\2\u0690"+
		"\u068f\3\2\2\2\u0691\u0692\3\2\2\2\u0692\u0690\3\2\2\2\u0692\u0693\3\2"+
		"\2\2\u0693\u0694\3\2\2\2\u0694\u0695\7\u0182\2\2\u0695\u0697\3\2\2\2\u0696"+
		"\u0690\3\2\2\2\u0696\u0697\3\2\2\2\u0697\u069b\3\2\2\2\u0698\u069b\7c"+
		"\2\2\u0699\u069b\7\u0166\2\2\u069a\u0684\3\2\2\2\u069a\u068e\3\2\2\2\u069a"+
		"\u0698\3\2\2\2\u069a\u0699\3\2\2\2\u069b]\3\2\2\2\u069c\u069d\5\u0200"+
		"\u0101\2\u069d_\3\2\2\2\u069e\u069f\7\u01a3\2\2\u069fa\3\2\2\2\u06a0\u06a2"+
		"\7\33\2\2\u06a1\u06a3\5\6\4\2\u06a2\u06a1\3\2\2\2\u06a3\u06a4\3\2\2\2"+
		"\u06a4\u06a2\3\2\2\2\u06a4\u06a5\3\2\2\2\u06a5\u06a7\3\2\2\2\u06a6\u06a0"+
		"\3\2\2\2\u06a6\u06a7\3\2\2\2\u06a7\u06a8\3\2\2\2\u06a8\u06aa\7z\2\2\u06a9"+
		"\u06ab\5\6\4\2\u06aa\u06a9\3\2\2\2\u06ab\u06ac\3\2\2\2\u06ac\u06aa\3\2"+
		"\2\2\u06ac\u06ad\3\2\2\2\u06ad\u06ae\3\2\2\2\u06ae\u06af\5\60\31\2\u06af"+
		"c\3\2\2\2\u06b0\u06b2\7\u00fa\2\2\u06b1\u06b3\5\6\4\2\u06b2\u06b1\3\2"+
		"\2\2\u06b3\u06b4\3\2\2\2\u06b4\u06b2\3\2\2\2\u06b4\u06b5\3\2\2\2\u06b5"+
		"\u06b7\3\2\2\2\u06b6\u06b0\3\2\2\2\u06b6\u06b7\3\2\2\2\u06b7\u06b8\3\2"+
		"\2\2\u06b8\u06ba\7\u009a\2\2\u06b9\u06bb\5\6\4\2\u06ba\u06b9\3\2\2\2\u06bb"+
		"\u06bc\3\2\2\2\u06bc\u06ba\3\2\2\2\u06bc\u06bd\3\2\2\2\u06bd\u06be\3\2"+
		"\2\2\u06be\u06bf\5\60\31\2\u06bfe\3\2\2\2\u06c0\u06c2\7^\2\2\u06c1\u06c3"+
		"\5\6\4\2\u06c2\u06c1\3\2\2\2\u06c3\u06c4\3\2\2\2\u06c4\u06c2\3\2\2\2\u06c4"+
		"\u06c5\3\2\2\2\u06c5\u06c6\3\2\2\2\u06c6\u06ca\7s\2\2\u06c7\u06c9\5\6"+
		"\4\2\u06c8\u06c7\3\2\2\2\u06c9\u06cc\3\2\2\2\u06ca\u06c8\3\2\2\2\u06ca"+
		"\u06cb\3\2\2\2\u06cb\u06cd\3\2\2\2\u06cc\u06ca\3\2\2\2\u06cd\u06d1\7\u019d"+
		"\2\2\u06ce\u06d0\5\6\4\2\u06cf\u06ce\3\2\2\2\u06d0\u06d3\3\2\2\2\u06d1"+
		"\u06cf\3\2\2\2\u06d1\u06d2\3\2\2\2\u06d2\u06db\3\2\2\2\u06d3\u06d1\3\2"+
		"\2\2\u06d4\u06d8\5h\65\2\u06d5\u06d7\5\6\4\2\u06d6\u06d5\3\2\2\2\u06d7"+
		"\u06da\3\2\2\2\u06d8\u06d6\3\2\2\2\u06d8\u06d9\3\2\2\2\u06d9\u06dc\3\2"+
		"\2\2\u06da\u06d8\3\2\2\2\u06db\u06d4\3\2\2\2\u06db\u06dc\3\2\2\2\u06dc"+
		"\u06e4\3\2\2\2\u06dd\u06e1\5j\66\2\u06de\u06e0\5\6\4\2\u06df\u06de\3\2"+
		"\2\2\u06e0\u06e3\3\2\2\2\u06e1\u06df\3\2\2\2\u06e1\u06e2\3\2\2\2\u06e2"+
		"\u06e5\3\2\2\2\u06e3\u06e1\3\2\2\2\u06e4\u06dd\3\2\2\2\u06e4\u06e5\3\2"+
		"\2\2\u06e5\u06ed\3\2\2\2\u06e6\u06ea\5l\67\2\u06e7\u06e9\5\6\4\2\u06e8"+
		"\u06e7\3\2\2\2\u06e9\u06ec\3\2\2\2\u06ea\u06e8\3\2\2\2\u06ea\u06eb\3\2"+
		"\2\2\u06eb\u06ee\3\2\2\2\u06ec\u06ea\3\2\2\2\u06ed\u06e6\3\2\2\2\u06ed"+
		"\u06ee\3\2\2\2\u06ee\u06f6\3\2\2\2\u06ef\u06f3\5n8\2\u06f0\u06f2\5\6\4"+
		"\2\u06f1\u06f0\3\2\2\2\u06f2\u06f5\3\2\2\2\u06f3\u06f1\3\2\2\2\u06f3\u06f4"+
		"\3\2\2\2\u06f4\u06f7\3\2\2\2\u06f5\u06f3\3\2\2\2\u06f6\u06ef\3\2\2\2\u06f6"+
		"\u06f7\3\2\2\2\u06f7\u06ff\3\2\2\2\u06f8\u06fc\5p9\2\u06f9\u06fb\5\6\4"+
		"\2\u06fa\u06f9\3\2\2\2\u06fb\u06fe\3\2\2\2\u06fc\u06fa\3\2\2\2\u06fc\u06fd"+
		"\3\2\2\2\u06fd\u0700\3\2\2\2\u06fe\u06fc\3\2\2\2\u06ff\u06f8\3\2\2\2\u06ff"+
		"\u0700\3\2\2\2\u0700g\3\2\2\2\u0701\u0703\7\u00a2\2\2\u0702\u0704\5\6"+
		"\4\2\u0703\u0702\3\2\2\2\u0704\u0705\3\2\2\2\u0705\u0703\3\2\2\2\u0705"+
		"\u0706\3\2\2\2\u0706\u0707\3\2\2\2\u0707\u070b\7\u013a\2\2\u0708\u070a"+
		"\5\6\4\2\u0709\u0708\3\2\2\2\u070a\u070d\3\2\2\2\u070b\u0709\3\2\2\2\u070b"+
		"\u070c\3\2\2\2\u070c\u070e\3\2\2\2\u070d\u070b\3\2\2\2\u070e\u0712\7\u019d"+
		"\2\2\u070f\u0711\5\6\4\2\u0710\u070f\3\2\2\2\u0711\u0714\3\2\2\2\u0712"+
		"\u0710\3\2\2\2\u0712\u0713\3\2\2\2\u0713\u073a\3\2\2\2\u0714\u0712\3\2"+
		"\2\2\u0715\u071f\5r:\2\u0716\u0718\5\6\4\2\u0717\u0716\3\2\2\2\u0718\u071b"+
		"\3\2\2\2\u0719\u0717\3\2\2\2\u0719\u071a\3\2\2\2\u071a\u071c\3\2\2\2\u071b"+
		"\u0719\3\2\2\2\u071c\u071e\5z>\2\u071d\u0719\3\2\2\2\u071e\u0721\3\2\2"+
		"\2\u071f\u071d\3\2\2\2\u071f\u0720\3\2\2\2\u0720\u0731\3\2\2\2\u0721\u071f"+
		"\3\2\2\2\u0722\u0731\5v<\2\u0723\u072d\5t;\2\u0724\u0726\5\6\4\2\u0725"+
		"\u0724\3\2\2\2\u0726\u0729\3\2\2\2\u0727\u0725\3\2\2\2\u0727\u0728\3\2"+
		"\2\2\u0728\u072a\3\2\2\2\u0729\u0727\3\2\2\2\u072a\u072c\5z>\2\u072b\u0727"+
		"\3\2\2\2\u072c\u072f\3\2\2\2\u072d\u072b\3\2\2\2\u072d\u072e\3\2\2\2\u072e"+
		"\u0731\3\2\2\2\u072f\u072d\3\2\2\2\u0730\u0715\3\2\2\2\u0730\u0722\3\2"+
		"\2\2\u0730\u0723\3\2\2\2\u0731\u0735\3\2\2\2\u0732\u0734\5\6\4\2\u0733"+
		"\u0732\3\2\2\2\u0734\u0737\3\2\2\2\u0735\u0733\3\2\2\2\u0735\u0736\3\2"+
		"\2\2\u0736\u0739\3\2\2\2\u0737\u0735\3\2\2\2\u0738\u0730\3\2\2\2\u0739"+
		"\u073c\3\2\2\2\u073a\u0738\3\2\2\2\u073a\u073b\3\2\2\2\u073bi\3\2\2\2"+
		"\u073c\u073a\3\2\2\2\u073d\u073f\7\u0180\2\2\u073e\u0740\5\6\4\2\u073f"+
		"\u073e\3\2\2\2\u0740\u0741\3\2\2\2\u0741\u073f\3\2\2\2\u0741\u0742\3\2"+
		"\2\2\u0742\u0743\3\2\2\2\u0743\u0747\7\u013a\2\2\u0744\u0746\5\6\4\2\u0745"+
		"\u0744\3\2\2\2\u0746\u0749\3\2\2\2\u0747\u0745\3\2\2\2\u0747\u0748\3\2"+
		"\2\2\u0748\u074a\3\2\2\2\u0749\u0747\3\2\2\2\u074a\u074e\7\u019d\2\2\u074b"+
		"\u074d\5\6\4\2\u074c\u074b\3\2\2\2\u074d\u0750\3\2\2\2\u074e\u074c\3\2"+
		"\2\2\u074e\u074f\3\2\2\2\u074f\u075a\3\2\2\2\u0750\u074e\3\2\2\2\u0751"+
		"\u0755\5z>\2\u0752\u0754\5\6\4\2\u0753\u0752\3\2\2\2\u0754\u0757\3\2\2"+
		"\2\u0755\u0753\3\2\2\2\u0755\u0756\3\2\2\2\u0756\u0759\3\2\2\2\u0757\u0755"+
		"\3\2\2\2\u0758\u0751\3\2\2\2\u0759\u075c\3\2\2\2\u075a\u0758\3\2\2\2\u075a"+
		"\u075b\3\2\2\2\u075bk\3\2\2\2\u075c\u075a\3\2\2\2\u075d\u075f\7\u00df"+
		"\2\2\u075e\u0760\5\6\4\2\u075f\u075e\3\2\2\2\u0760\u0761\3\2\2\2\u0761"+
		"\u075f\3\2\2\2\u0761\u0762\3\2\2\2\u0762\u0763\3\2\2\2\u0763\u0767\7\u013a"+
		"\2\2\u0764\u0766\5\6\4\2\u0765\u0764\3\2\2\2\u0766\u0769\3\2\2\2\u0767"+
		"\u0765\3\2\2\2\u0767\u0768\3\2\2\2\u0768\u076a\3\2\2\2\u0769\u0767\3\2"+
		"\2\2\u076a\u076e\7\u019d\2\2\u076b\u076d\5\6\4\2\u076c\u076b\3\2\2\2\u076d"+
		"\u0770\3\2\2\2\u076e\u076c\3\2\2\2\u076e\u076f\3\2\2\2\u076f\u077a\3\2"+
		"\2\2\u0770\u076e\3\2\2\2\u0771\u0775\5z>\2\u0772\u0774\5\6\4\2\u0773\u0772"+
		"\3\2\2\2\u0774\u0777\3\2\2\2\u0775\u0773\3\2\2\2\u0775\u0776\3\2\2\2\u0776"+
		"\u0779\3\2\2\2\u0777\u0775\3\2\2\2\u0778\u0771\3\2\2\2\u0779\u077c\3\2"+
		"\2\2\u077a\u0778\3\2\2\2\u077a\u077b\3\2\2\2\u077bm\3\2\2\2\u077c\u077a"+
		"\3\2\2\2\u077d\u077f\7\u0127\2\2\u077e\u0780\5\6\4\2\u077f\u077e\3\2\2"+
		"\2\u0780\u0781\3\2\2\2\u0781\u077f\3\2\2\2\u0781\u0782\3\2\2\2\u0782\u0783"+
		"\3\2\2\2\u0783\u0787\7\u013a\2\2\u0784\u0786\5\6\4\2\u0785\u0784\3\2\2"+
		"\2\u0786\u0789\3\2\2\2\u0787\u0785\3\2\2\2\u0787\u0788\3\2\2\2\u0788\u078a"+
		"\3\2\2\2\u0789\u0787\3\2\2\2\u078a\u078e\7\u019d\2\2\u078b\u078d\5\6\4"+
		"\2\u078c\u078b\3\2\2\2\u078d\u0790\3\2\2\2\u078e\u078c\3\2\2\2\u078e\u078f"+
		"\3\2\2\2\u078f\u07a6\3\2\2\2\u0790\u078e\3\2\2\2\u0791\u079b\5v<\2\u0792"+
		"\u0794\5\6\4\2\u0793\u0792\3\2\2\2\u0794\u0797\3\2\2\2\u0795\u0793\3\2"+
		"\2\2\u0795\u0796\3\2\2\2\u0796\u0798\3\2\2\2\u0797\u0795\3\2\2\2\u0798"+
		"\u079a\5\u00a8U\2\u0799\u0795\3\2\2\2\u079a\u079d\3\2\2\2\u079b\u0799"+
		"\3\2\2\2\u079b\u079c\3\2\2\2\u079c\u07a1\3\2\2\2\u079d\u079b\3\2\2\2\u079e"+
		"\u07a0\5\6\4\2\u079f\u079e\3\2\2\2\u07a0\u07a3\3\2\2\2\u07a1\u079f\3\2"+
		"\2\2\u07a1\u07a2\3\2\2\2\u07a2\u07a5\3\2\2\2\u07a3\u07a1\3\2\2\2\u07a4"+
		"\u0791\3\2\2\2\u07a5\u07a8\3\2\2\2\u07a6\u07a4\3\2\2\2\u07a6\u07a7\3\2"+
		"\2\2\u07a7o\3\2\2\2\u07a8\u07a6\3\2\2\2\u07a9\u07ab\7\u0137\2\2\u07aa"+
		"\u07ac\5\6\4\2\u07ab\u07aa\3\2\2\2\u07ac\u07ad\3\2\2\2\u07ad\u07ab\3\2"+
		"\2\2\u07ad\u07ae\3\2\2\2\u07ae\u07af\3\2\2\2\u07af\u07b3\7\u013a\2\2\u07b0"+
		"\u07b2\5\6\4\2\u07b1\u07b0\3\2\2\2\u07b2\u07b5\3\2\2\2\u07b3\u07b1\3\2"+
		"\2\2\u07b3\u07b4\3\2\2\2\u07b4\u07b6\3\2\2\2\u07b5\u07b3\3\2\2\2\u07b6"+
		"\u07ba\7\u019d\2\2\u07b7\u07b9\5\6\4\2\u07b8\u07b7\3\2\2\2\u07b9\u07bc"+
		"\3\2\2\2\u07ba\u07b8\3\2\2\2\u07ba\u07bb\3\2\2\2\u07bb\u07c6\3\2\2\2\u07bc"+
		"\u07ba\3\2\2\2\u07bd\u07c1\5\u0108\u0085\2\u07be\u07c0\5\6\4\2\u07bf\u07be"+
		"\3\2\2\2\u07c0\u07c3\3\2\2\2\u07c1\u07bf\3\2\2\2\u07c1\u07c2\3\2\2\2\u07c2"+
		"\u07c5\3\2\2\2\u07c3\u07c1\3\2\2\2\u07c4\u07bd\3\2\2\2\u07c5\u07c8\3\2"+
		"\2\2\u07c6\u07c4\3\2\2\2\u07c6\u07c7\3\2\2\2\u07c7q\3\2\2\2\u07c8\u07c6"+
		"\3\2\2\2\u07c9\u07cb\7\u00a1\2\2\u07ca\u07cc\5\6\4\2\u07cb\u07ca\3\2\2"+
		"\2\u07cc\u07cd\3\2\2\2\u07cd\u07cb\3\2\2\2\u07cd\u07ce\3\2\2\2\u07ce\u07cf"+
		"\3\2\2\2\u07cf\u07d3\5\u01c2\u00e2\2\u07d0\u07d2\5\6\4\2\u07d1\u07d0\3"+
		"\2\2\2\u07d2\u07d5\3\2\2\2\u07d3\u07d1\3\2\2\2\u07d3\u07d4\3\2\2\2\u07d4"+
		"\u07df\3\2\2\2\u07d5\u07d3\3\2\2\2\u07d6\u07da\5x=\2\u07d7\u07d9\5\6\4"+
		"\2\u07d8\u07d7\3\2\2\2\u07d9\u07dc\3\2\2\2\u07da\u07d8\3\2\2\2\u07da\u07db"+
		"\3\2\2\2\u07db\u07de\3\2\2\2\u07dc\u07da\3\2\2\2\u07dd\u07d6\3\2\2\2\u07de"+
		"\u07e1\3\2\2\2\u07df\u07dd\3\2\2\2\u07df\u07e0\3\2\2\2\u07e0\u07e2\3\2"+
		"\2\2\u07e1\u07df\3\2\2\2\u07e2\u07e3\7\u019d\2\2\u07e3s\3\2\2\2\u07e4"+
		"\u07e6\7\u0138\2\2\u07e5\u07e7\5\6\4\2\u07e6\u07e5\3\2\2\2\u07e7\u07e8"+
		"\3\2\2\2\u07e8\u07e6\3\2\2\2\u07e8\u07e9\3\2\2\2\u07e9\u07ea\3\2\2\2\u07ea"+
		"\u07ee\5\u01c2\u00e2\2\u07eb\u07ed\5\6\4\2\u07ec\u07eb\3\2\2\2\u07ed\u07f0"+
		"\3\2\2\2\u07ee\u07ec\3\2\2\2\u07ee\u07ef\3\2\2\2\u07ef\u07fa\3\2\2\2\u07f0"+
		"\u07ee\3\2\2\2\u07f1\u07f5\5\u00e4s\2\u07f2\u07f4\5\6\4\2\u07f3\u07f2"+
		"\3\2\2\2\u07f4\u07f7\3\2\2\2\u07f5\u07f3\3\2\2\2\u07f5\u07f6\3\2\2\2\u07f6"+
		"\u07f9\3\2\2\2\u07f7\u07f5\3\2\2\2\u07f8\u07f1\3\2\2\2\u07f9\u07fc\3\2"+
		"\2\2\u07fa\u07f8\3\2\2\2\u07fa\u07fb\3\2\2\2\u07fb\u07fd\3\2\2\2\u07fc"+
		"\u07fa\3\2\2\2\u07fd\u07fe\7\u019d\2\2\u07feu\3\2\2\2\u07ff\u0801\7\u011b"+
		"\2\2\u0800\u0802\5\6\4\2\u0801\u0800\3\2\2\2\u0802\u0803\3\2\2\2\u0803"+
		"\u0801\3\2\2\2\u0803\u0804\3\2\2\2\u0804\u0805\3\2\2\2\u0805\u0809\5\u00e8"+
		"u\2\u0806\u0808\5\6\4\2\u0807\u0806\3\2\2\2\u0808\u080b\3\2\2\2\u0809"+
		"\u0807\3\2\2\2\u0809\u080a\3\2\2\2\u080a\u0815\3\2\2\2\u080b\u0809\3\2"+
		"\2\2\u080c\u0810\5\u00c6d\2\u080d\u080f\5\6\4\2\u080e\u080d\3\2\2\2\u080f"+
		"\u0812\3\2\2\2\u0810\u080e\3\2\2\2\u0810\u0811\3\2\2\2\u0811\u0814\3\2"+
		"\2\2\u0812\u0810\3\2\2\2\u0813\u080c\3\2\2\2\u0814\u0817\3\2\2\2\u0815"+
		"\u0813\3\2\2\2\u0815\u0816\3\2\2\2\u0816\u0818\3\2\2\2\u0817\u0815\3\2"+
		"\2\2\u0818\u0819\7\u019d\2\2\u0819w\3\2\2\2\u081a\u081c\7\u00ce\2\2\u081b"+
		"\u081d\5\6\4\2\u081c\u081b\3\2\2\2\u081d\u081e\3\2\2\2\u081e\u081c\3\2"+
		"\2\2\u081e\u081f\3\2\2\2\u081f\u0821\3\2\2\2\u0820\u081a\3\2\2\2\u0820"+
		"\u0821\3\2\2\2\u0821\u0822\3\2\2\2\u0822\u0838\7\u009f\2\2\u0823\u0825"+
		"\7\u00ce\2\2\u0824\u0826\5\6\4\2\u0825\u0824\3\2\2\2\u0826\u0827\3\2\2"+
		"\2\u0827\u0825\3\2\2\2\u0827\u0828\3\2\2\2\u0828\u082a\3\2\2\2\u0829\u0823"+
		"\3\2\2\2\u0829\u082a\3\2\2\2\u082a\u082b\3\2\2\2\u082b\u0838\7\u00b4\2"+
		"\2\u082c\u0838\5\u01b6\u00dc\2\u082d\u0838\5\u00fe\u0080\2\u082e\u0838"+
		"\5\u00fc\177\2\u082f\u0838\5\u00f8}\2\u0830\u0838\5\u00f4{\2\u0831\u0838"+
		"\5\u00eav\2\u0832\u0838\5\u00e6t\2\u0833\u0838\5\u01b4\u00db\2\u0834\u0838"+
		"\5\u01a2\u00d2\2\u0835\u0838\5\u019e\u00d0\2\u0836\u0838\5\u019a\u00ce"+
		"\2\u0837\u0820\3\2\2\2\u0837\u0829\3\2\2\2\u0837\u082c\3\2\2\2\u0837\u082d"+
		"\3\2\2\2\u0837\u082e\3\2\2\2\u0837\u082f\3\2\2\2\u0837\u0830\3\2\2\2\u0837"+
		"\u0831\3\2\2\2\u0837\u0832\3\2\2\2\u0837\u0833\3\2\2\2\u0837\u0834\3\2"+
		"\2\2\u0837\u0835\3\2\2\2\u0837\u0836\3\2\2\2\u0838y\3\2\2\2\u0839\u0843"+
		"\5|?\2\u083a\u083c\5\6\4\2\u083b\u083a\3\2\2\2\u083c\u083f\3\2\2\2\u083d"+
		"\u083b\3\2\2\2\u083d\u083e\3\2\2\2\u083e\u0840\3\2\2\2\u083f\u083d\3\2"+
		"\2\2\u0840\u0842\5|?\2\u0841\u083d\3\2\2\2\u0842\u0845\3\2\2\2\u0843\u0841"+
		"\3\2\2\2\u0843\u0844\3\2\2\2\u0844{\3\2\2\2\u0845\u0843\3\2\2\2\u0846"+
		"\u0850\5~@\2\u0847\u0849\5\6\4\2\u0848\u0847\3\2\2\2\u0849\u084a\3\2\2"+
		"\2\u084a\u0848\3\2\2\2\u084a\u084b\3\2\2\2\u084b\u084e\3\2\2\2\u084c\u084f"+
		"\5\u00e2r\2\u084d\u084f\7\u00a5\2\2\u084e\u084c\3\2\2\2\u084e\u084d\3"+
		"\2\2\2\u084f\u0851\3\2\2\2\u0850\u0848\3\2\2\2\u0850\u0851\3\2\2\2\u0851"+
		"\u085f\3\2\2\2\u0852\u0854\5\6\4\2\u0853\u0852\3\2\2\2\u0854\u0855\3\2"+
		"\2\2\u0855\u0853\3\2\2\2\u0855\u0856\3\2\2\2\u0856\u0857\3\2\2\2\u0857"+
		"\u0859\7\u011f\2\2\u0858\u085a\5\6\4\2\u0859\u0858\3\2\2\2\u085a\u085b"+
		"\3\2\2\2\u085b\u0859\3\2\2\2\u085b\u085c\3\2\2\2\u085c\u085d\3\2\2\2\u085d"+
		"\u085e\5\u00e0q\2\u085e\u0860\3\2\2\2\u085f\u0853\3\2\2\2\u085f\u0860"+
		"\3\2\2\2\u0860\u086a\3\2\2\2\u0861\u0863\5\6\4\2\u0862\u0861\3\2\2\2\u0863"+
		"\u0864\3\2\2\2\u0864\u0862\3\2\2\2\u0864\u0865\3\2\2\2\u0865\u0866\3\2"+
		"\2\2\u0866\u0867\5\u0080A\2\u0867\u0869\3\2\2\2\u0868\u0862\3\2\2\2\u0869"+
		"\u086c\3\2\2\2\u086a\u0868\3\2\2\2\u086a\u086b\3\2\2\2\u086b\u086d\3\2"+
		"\2\2\u086c\u086a\3\2\2\2\u086d\u086e\7\u019d\2\2\u086e}\3\2\2\2\u086f"+
		"\u0870\7\u01a1\2\2\u0870\177\3\2\2\2\u0871\u0873\7\u00ce\2\2\u0872\u0874"+
		"\5\6\4\2\u0873\u0872\3\2\2\2\u0874\u0875\3\2\2\2\u0875\u0873\3\2\2\2\u0875"+
		"\u0876\3\2\2\2\u0876\u0878\3\2\2\2\u0877\u0871\3\2\2\2\u0877\u0878\3\2"+
		"\2\2\u0878\u0879\3\2\2\2\u0879\u08ae\7\u009f\2\2\u087a\u087c\7\u00ce\2"+
		"\2\u087b\u087d\5\6\4\2\u087c\u087b\3\2\2\2\u087d\u087e\3\2\2\2\u087e\u087c"+
		"\3\2\2\2\u087e\u087f\3\2\2\2\u087f\u0881\3\2\2\2\u0880\u087a\3\2\2\2\u0880"+
		"\u0881\3\2\2\2\u0881\u0882\3\2\2\2\u0882\u08ae\7\u00b4\2\2\u0883\u08ae"+
		"\5\u00dan\2\u0884\u08ae\5\u00d6l\2\u0885\u08ae\5\u00aeX\2\u0886\u08ae"+
		"\5\u0096L\2\u0887\u088f\t\5\2\2\u0888\u088a\5\6\4\2\u0889\u0888\3\2\2"+
		"\2\u088a\u088b\3\2\2\2\u088b\u0889\3\2\2\2\u088b\u088c\3\2\2\2\u088c\u088d"+
		"\3\2\2\2\u088d\u088e\t\6\2\2\u088e\u0890\3\2\2\2\u088f\u0889\3\2\2\2\u088f"+
		"\u0890\3\2\2\2\u0890\u08ae\3\2\2\2\u0891\u0899\t\7\2\2\u0892\u0894\5\6"+
		"\4\2\u0893\u0892\3\2\2\2\u0894\u0895\3\2\2\2\u0895\u0893\3\2\2\2\u0895"+
		"\u0896\3\2\2\2\u0896\u0897\3\2\2\2\u0897\u0898\7\u0134\2\2\u0898\u089a"+
		"\3\2\2\2\u0899\u0893\3\2\2\2\u0899\u089a\3\2\2\2\u089a\u08ae\3\2\2\2\u089b"+
		"\u089d\7(\2\2\u089c\u089e\5\6\4\2\u089d\u089c\3\2\2\2\u089e\u089f\3\2"+
		"\2\2\u089f\u089d\3\2\2\2\u089f\u08a0\3\2\2\2\u08a0\u08a7\3\2\2\2\u08a1"+
		"\u08a3\7\u017c\2\2\u08a2\u08a4\5\6\4\2\u08a3\u08a2\3\2\2\2\u08a4\u08a5"+
		"\3\2\2\2\u08a5\u08a3\3\2\2\2\u08a5\u08a6\3\2\2\2\u08a6\u08a8\3\2\2\2\u08a7"+
		"\u08a1\3\2\2\2\u08a7\u08a8\3\2\2\2\u08a8\u08a9\3\2\2\2\u08a9\u08aa\7\u0184"+
		"\2\2\u08aa\u08ae\3\2\2\2\u08ab\u08ae\5\u0088E\2\u08ac\u08ae\5\u0082B\2"+
		"\u08ad\u0877\3\2\2\2\u08ad\u0880\3\2\2\2\u08ad\u0883\3\2\2\2\u08ad\u0884"+
		"\3\2\2\2\u08ad\u0885\3\2\2\2\u08ad\u0886\3\2\2\2\u08ad\u0887\3\2\2\2\u08ad"+
		"\u0891\3\2\2\2\u08ad\u089b\3\2\2\2\u08ad\u08ab\3\2\2\2\u08ad\u08ac\3\2"+
		"\2\2\u08ae\u0081\3\2\2\2\u08af\u08b1\7\u0124\2\2\u08b0\u08b2\5\6\4\2\u08b1"+
		"\u08b0\3\2\2\2\u08b2\u08b3\3\2\2\2\u08b3\u08b1\3\2\2\2\u08b3\u08b4\3\2"+
		"\2\2\u08b4\u08b5\3\2\2\2\u08b5\u08c3\5\u0084C\2\u08b6\u08b8\5\6\4\2\u08b7"+
		"\u08b6\3\2\2\2\u08b8\u08b9\3\2\2\2\u08b9\u08b7\3\2\2\2\u08b9\u08ba\3\2"+
		"\2\2\u08ba\u08bb\3\2\2\2\u08bb\u08bd\t\b\2\2\u08bc\u08be\5\6\4\2\u08bd"+
		"\u08bc\3\2\2\2\u08be\u08bf\3\2\2\2\u08bf\u08bd\3\2\2\2\u08bf\u08c0\3\2"+
		"\2\2\u08c0\u08c1\3\2\2\2\u08c1\u08c2\5\u0086D\2\u08c2\u08c4\3\2\2\2\u08c3"+
		"\u08b7\3\2\2\2\u08c3\u08c4\3\2\2\2\u08c4\u0083\3\2\2\2\u08c5\u08c6\5\u0158"+
		"\u00ad\2\u08c6\u0085\3\2\2\2\u08c7\u08c8\5\u0158\u00ad\2\u08c8\u0087\3"+
		"\2\2\2\u08c9\u08d1\7\u0178\2\2\u08ca\u08cc\5\6\4\2\u08cb\u08ca\3\2\2\2"+
		"\u08cc\u08cd\3\2\2\2\u08cd\u08cb\3\2\2\2\u08cd\u08ce\3\2\2\2\u08ce\u08cf"+
		"\3\2\2\2\u08cf\u08d0\7\u00ce\2\2\u08d0\u08d2\3\2\2\2\u08d1\u08cb\3\2\2"+
		"\2\u08d1\u08d2\3\2\2\2\u08d2\u08de\3\2\2\2\u08d3\u08db\7\u0179\2\2\u08d4"+
		"\u08d6\5\6\4\2\u08d5\u08d4\3\2\2\2\u08d6\u08d7\3\2\2\2\u08d7\u08d5\3\2"+
		"\2\2\u08d7\u08d8\3\2\2\2\u08d8\u08d9\3\2\2\2\u08d9\u08da\7\22\2\2\u08da"+
		"\u08dc\3\2\2\2\u08db\u08d5\3\2\2\2\u08db\u08dc\3\2\2\2\u08dc\u08de\3\2"+
		"\2\2\u08dd\u08c9\3\2\2\2\u08dd\u08d3\3\2\2\2\u08de\u08e0\3\2\2\2\u08df"+
		"\u08e1\5\6\4\2\u08e0\u08df\3\2\2\2\u08e1\u08e2\3\2\2\2\u08e2\u08e0\3\2"+
		"\2\2\u08e2\u08e3\3\2\2\2\u08e3\u08e4\3\2\2\2\u08e4\u08ee\5\u008aF\2\u08e5"+
		"\u08e7\5\6\4\2\u08e6\u08e5\3\2\2\2\u08e7\u08e8\3\2\2\2\u08e8\u08e6\3\2"+
		"\2\2\u08e8\u08e9\3\2\2\2\u08e9\u08ea\3\2\2\2\u08ea\u08eb\5\u008aF\2\u08eb"+
		"\u08ed\3\2\2\2\u08ec\u08e6\3\2\2\2\u08ed\u08f0\3\2\2\2\u08ee\u08ec\3\2"+
		"\2\2\u08ee\u08ef\3\2\2\2\u08ef\u0089\3\2\2\2\u08f0\u08ee\3\2\2\2\u08f1"+
		"\u08f9\5\u008cG\2\u08f2\u08f4\5\6\4\2\u08f3\u08f2\3\2\2\2\u08f4\u08f5"+
		"\3\2\2\2\u08f5\u08f3\3\2\2\2\u08f5\u08f6\3\2\2\2\u08f6\u08f7\3\2\2\2\u08f7"+
		"\u08f8\5\u008eH\2\u08f8\u08fa\3\2\2\2\u08f9\u08f3\3\2\2\2\u08f9\u08fa"+
		"\3\2\2\2\u08fa\u008b\3\2\2\2\u08fb\u090d\5\u0094K\2\u08fc\u08fe\7\u0121"+
		"\2\2\u08fd\u08ff\5\6\4\2\u08fe\u08fd\3\2\2\2\u08ff\u0900\3\2\2\2\u0900"+
		"\u08fe\3\2\2\2\u0900\u0901\3\2\2\2\u0901\u0902\3\2\2\2\u0902\u0903\5\u0092"+
		"J\2\u0903\u090d\3\2\2\2\u0904\u0906\7\u009f\2\2\u0905\u0907\5\6\4\2\u0906"+
		"\u0905\3\2\2\2\u0907\u0908\3\2\2\2\u0908\u0906\3\2\2\2\u0908\u0909\3\2"+
		"\2\2\u0909\u090a\3\2\2\2\u090a\u090b\5\u0090I\2\u090b\u090d\3\2\2\2\u090c"+
		"\u08fb\3\2\2\2\u090c\u08fc\3\2\2\2\u090c\u0904\3\2\2\2\u090d\u008d\3\2"+
		"\2\2\u090e\u0910\t\b\2\2\u090f\u0911\5\6\4\2\u0910\u090f\3\2\2\2\u0911"+
		"\u0912\3\2\2\2\u0912\u0910\3\2\2\2\u0912\u0913\3\2\2\2\u0913\u0914\3\2"+
		"\2\2\u0914\u0915\5\u008cG\2\u0915\u008f\3\2\2\2\u0916\u0917\7\u01a3\2"+
		"\2\u0917\u0091\3\2\2\2\u0918\u0919\5\u0158\u00ad\2\u0919\u0093\3\2\2\2"+
		"\u091a\u091b\t\t\2\2\u091b\u0095\3\2\2\2\u091c\u091e\7\u00f6\2\2\u091d"+
		"\u091f\5\6\4\2\u091e\u091d\3\2\2\2\u091f\u0920\3\2\2\2\u0920\u091e\3\2"+
		"\2\2\u0920\u0921\3\2\2\2\u0921\u0922\3\2\2\2\u0922\u092c\5\u00a0Q\2\u0923"+
		"\u0925\5\6\4\2\u0924\u0923\3\2\2\2\u0925\u0926\3\2\2\2\u0926\u0924\3\2"+
		"\2\2\u0926\u0927\3\2\2\2\u0927\u0928\3\2\2\2\u0928\u0929\5\u009cO\2\u0929"+
		"\u092b\3\2\2\2\u092a\u0924\3\2\2\2\u092b\u092e\3\2\2\2\u092c\u092a\3\2"+
		"\2\2\u092c\u092d\3\2\2\2\u092d\u0936\3\2\2\2\u092e\u092c\3\2\2\2\u092f"+
		"\u0931\5\6\4\2\u0930\u092f\3\2\2\2\u0931\u0932\3\2\2\2\u0932\u0930\3\2"+
		"\2\2\u0932\u0933\3\2\2\2\u0933\u0934\3\2\2\2\u0934\u0935\5\u0098M\2\u0935"+
		"\u0937\3\2\2\2\u0936\u0930\3\2\2\2\u0936\u0937\3\2\2\2\u0937\u0097\3\2"+
		"\2\2\u0938\u093a\7\u00c4\2\2\u0939\u093b\5\6\4\2\u093a\u0939\3\2\2\2\u093b"+
		"\u093c\3\2\2\2\u093c\u093a\3\2\2\2\u093c\u093d\3\2\2\2\u093d\u0944\3\2"+
		"\2\2\u093e\u0940\7.\2\2\u093f\u0941\5\6\4\2\u0940\u093f\3\2\2\2\u0941"+
		"\u0942\3\2\2\2\u0942\u0940\3\2\2\2\u0942\u0943\3\2\2\2\u0943\u0945\3\2"+
		"\2\2\u0944\u093e\3\2\2\2\u0944\u0945\3\2\2\2\u0945\u0946\3\2\2\2\u0946"+
		"\u0950\5\u009aN\2\u0947\u0949\5\6\4\2\u0948\u0947\3\2\2\2\u0949\u094a"+
		"\3\2\2\2\u094a\u0948\3\2\2\2\u094a\u094b\3\2\2\2\u094b\u094c\3\2\2\2\u094c"+
		"\u094d\5\u009aN\2\u094d\u094f\3\2\2\2\u094e\u0948\3\2\2\2\u094f\u0952"+
		"\3\2\2\2\u0950\u094e\3\2\2\2\u0950\u0951\3\2\2\2\u0951\u0099\3\2\2\2\u0952"+
		"\u0950\3\2\2\2\u0953\u0954\7\u01a3\2\2\u0954\u009b\3\2\2\2\u0955\u0957"+
		"\t\n\2\2\u0956\u0958\5\6\4\2\u0957\u0956\3\2\2\2\u0958\u0959\3\2\2\2\u0959"+
		"\u0957\3\2\2\2\u0959\u095a\3\2\2\2\u095a\u0961\3\2\2\2\u095b\u095d\7\u00d3"+
		"\2\2\u095c\u095e\5\6\4\2\u095d\u095c\3\2\2\2\u095e\u095f\3\2\2\2\u095f"+
		"\u095d\3\2\2\2\u095f\u0960\3\2\2\2\u0960\u0962\3\2\2\2\u0961\u095b\3\2"+
		"\2\2\u0961\u0962\3\2\2\2\u0962\u0969\3\2\2\2\u0963\u0965\7\u00ce\2\2\u0964"+
		"\u0966\5\6\4\2\u0965\u0964\3\2\2\2\u0966\u0967\3\2\2\2\u0967\u0965\3\2"+
		"\2\2\u0967\u0968\3\2\2\2\u0968\u096a\3\2\2\2\u0969\u0963\3\2\2\2\u0969"+
		"\u096a\3\2\2\2\u096a\u096b\3\2\2\2\u096b\u0975\5\u009eP\2\u096c\u096e"+
		"\5\6\4\2\u096d\u096c\3\2\2\2\u096e\u096f\3\2\2\2\u096f\u096d\3\2\2\2\u096f"+
		"\u0970\3\2\2\2\u0970\u0971\3\2\2\2\u0971\u0972\5\u009eP\2\u0972\u0974"+
		"\3\2\2\2\u0973\u096d\3\2\2\2\u0974\u0977\3\2\2\2\u0975\u0973\3\2\2\2\u0975"+
		"\u0976\3\2\2\2\u0976\u009d\3\2\2\2\u0977\u0975\3\2\2\2\u0978\u0979\5\u0158"+
		"\u00ad\2\u0979\u009f\3\2\2\2\u097a\u097c\5\u00a2R\2\u097b\u097d\5\6\4"+
		"\2\u097c\u097b\3\2\2\2\u097d\u097e\3\2\2\2\u097e\u097c\3\2\2\2\u097e\u097f"+
		"\3\2\2\2\u097f\u0980\3\2\2\2\u0980\u0981\7\u0167\2\2\u0981\u09ab\3\2\2"+
		"\2\u0982\u0984\5\u00a4S\2\u0983\u0985\5\6\4\2\u0984\u0983\3\2\2\2\u0985"+
		"\u0986\3\2\2\2\u0986\u0984\3\2\2\2\u0986\u0987\3\2\2\2\u0987\u0988\3\2"+
		"\2\2\u0988\u098a\7\u0168\2\2\u0989\u098b\5\6\4\2\u098a\u0989\3\2\2\2\u098b"+
		"\u098c\3\2\2\2\u098c\u098a\3\2\2\2\u098c\u098d\3\2\2\2\u098d\u098e\3\2"+
		"\2\2\u098e\u0990\5\u00a6T\2\u098f\u0991\5\6\4\2\u0990\u098f\3\2\2\2\u0991"+
		"\u0992\3\2\2\2\u0992\u0990\3\2\2\2\u0992\u0993\3\2\2\2\u0993\u0994\3\2"+
		"\2\2\u0994\u0996\7\u0167\2\2\u0995\u0997\5\6\4\2\u0996\u0995\3\2\2\2\u0997"+
		"\u0998\3\2\2\2\u0998\u0996\3\2\2\2\u0998\u0999\3\2\2\2\u0999\u099a\3\2"+
		"\2\2\u099a\u099c\7m\2\2\u099b\u099d\5\6\4\2\u099c\u099b\3\2\2\2\u099d"+
		"\u099e\3\2\2\2\u099e\u099c\3\2\2\2\u099e\u099f\3\2\2\2\u099f\u09a6\3\2"+
		"\2\2\u09a0\u09a2\7\u00fa\2\2\u09a1\u09a3\5\6\4\2\u09a2\u09a1\3\2\2\2\u09a3"+
		"\u09a4\3\2\2\2\u09a4\u09a2\3\2\2\2\u09a4\u09a5\3\2\2\2\u09a5\u09a7\3\2"+
		"\2\2\u09a6\u09a0\3\2\2\2\u09a6\u09a7\3\2\2\2\u09a7\u09a8\3\2\2\2\u09a8"+
		"\u09a9\5\u0102\u0082\2\u09a9\u09ab\3\2\2\2\u09aa\u097a\3\2\2\2\u09aa\u0982"+
		"\3\2\2\2\u09ab\u00a1\3\2\2\2\u09ac\u09ad\7\u01a1\2\2\u09ad\u00a3\3\2\2"+
		"\2\u09ae\u09af\7\u01a1\2\2\u09af\u00a5\3\2\2\2\u09b0\u09b1\7\u01a1\2\2"+
		"\u09b1\u00a7\3\2\2\2\u09b2\u09bc\5\u00aaV\2\u09b3\u09b5\5\6\4\2\u09b4"+
		"\u09b3\3\2\2\2\u09b5\u09b8\3\2\2\2\u09b6\u09b4\3\2\2\2\u09b6\u09b7\3\2"+
		"\2\2\u09b7\u09b9\3\2\2\2\u09b8\u09b6\3\2\2\2\u09b9\u09bb\5\u00aaV\2\u09ba"+
		"\u09b6\3\2\2\2\u09bb\u09be\3\2\2\2\u09bc\u09ba\3\2\2\2\u09bc\u09bd\3\2"+
		"\2\2\u09bd\u00a9\3\2\2\2\u09be\u09bc\3\2\2\2\u09bf\u09c7\5~@\2\u09c0\u09c2"+
		"\5\6\4\2\u09c1\u09c0\3\2\2\2\u09c2\u09c3\3\2\2\2\u09c3\u09c1\3\2\2\2\u09c3"+
		"\u09c4\3\2\2\2\u09c4\u09c5\3\2\2\2\u09c5\u09c6\5\u00e2r\2\u09c6\u09c8"+
		"\3\2\2\2\u09c7\u09c1\3\2\2\2\u09c7\u09c8\3\2\2\2\u09c8\u09d2\3\2\2\2\u09c9"+
		"\u09cb\5\6\4\2\u09ca\u09c9\3\2\2\2\u09cb\u09cc\3\2\2\2\u09cc\u09ca\3\2"+
		"\2\2\u09cc\u09cd\3\2\2\2\u09cd\u09ce\3\2\2\2\u09ce\u09cf\5\u00acW\2\u09cf"+
		"\u09d1\3\2\2\2\u09d0\u09ca\3\2\2\2\u09d1\u09d4\3\2\2\2\u09d2\u09d0\3\2"+
		"\2\2\u09d2\u09d3\3\2\2\2\u09d3\u09d5\3\2\2\2\u09d4\u09d2\3\2\2\2\u09d5"+
		"\u09d6\7\u019d\2\2\u09d6\u00ab\3\2\2\2\u09d7\u09d9\7\u00dc\2\2\u09d8\u09da"+
		"\5\6\4\2\u09d9\u09d8\3\2\2\2\u09da\u09db\3\2\2\2\u09db\u09d9\3\2\2\2\u09db"+
		"\u09dc\3\2\2\2\u09dc\u09e3\3\2\2\2\u09dd\u09df\7\u00f3\2\2\u09de\u09e0"+
		"\5\6\4\2\u09df\u09de\3\2\2\2\u09e0\u09e1\3\2\2\2\u09e1\u09df\3\2\2\2\u09e1"+
		"\u09e2\3\2\2\2\u09e2\u09e4\3\2\2\2\u09e3\u09dd\3\2\2\2\u09e3\u09e4\3\2"+
		"\2\2\u09e4\u09eb\3\2\2\2\u09e5\u09e7\7\u00ce\2\2\u09e6\u09e8\5\6\4\2\u09e7"+
		"\u09e6\3\2\2\2\u09e8\u09e9\3\2\2\2\u09e9\u09e7\3\2\2\2\u09e9\u09ea\3\2"+
		"\2\2\u09ea\u09ec\3\2\2\2\u09eb\u09e5\3\2\2\2\u09eb\u09ec\3\2\2\2\u09ec"+
		"\u09ed\3\2\2\2\u09ed\u09ee\5\u00c2b\2\u09ee\u0a86\3\2\2\2\u09ef\u09f1"+
		"\7\u00f0\2\2\u09f0\u09f2\5\6\4\2\u09f1\u09f0\3\2\2\2\u09f2\u09f3\3\2\2"+
		"\2\u09f3\u09f1\3\2\2\2\u09f3\u09f4\3\2\2\2\u09f4\u09f5\3\2\2\2\u09f5\u09f7"+
		"\7\u00b7\2\2\u09f6\u09f8\5\6\4\2\u09f7\u09f6\3\2\2\2\u09f8\u09f9\3\2\2"+
		"\2\u09f9\u09f7\3\2\2\2\u09f9\u09fa\3\2\2\2\u09fa\u0a01\3\2\2\2\u09fb\u09fd"+
		"\7\u00ce\2\2\u09fc\u09fe\5\6\4\2\u09fd\u09fc\3\2\2\2\u09fe\u09ff\3\2\2"+
		"\2\u09ff\u09fd\3\2\2\2\u09ff\u0a00\3\2\2\2\u0a00\u0a02\3\2\2\2\u0a01\u09fb"+
		"\3\2\2\2\u0a01\u0a02\3\2\2\2\u0a02\u0a03\3\2\2\2\u0a03\u0a04\5\u00c0a"+
		"\2\u0a04\u0a86\3\2\2\2\u0a05\u0a07\7\u016c\2\2\u0a06\u0a08\5\6\4\2\u0a07"+
		"\u0a06\3\2\2\2\u0a08\u0a09\3\2\2\2\u0a09\u0a07\3\2\2\2\u0a09\u0a0a\3\2"+
		"\2\2\u0a0a\u0a11\3\2\2\2\u0a0b\u0a0d\7\u00ce\2\2\u0a0c\u0a0e\5\6\4\2\u0a0d"+
		"\u0a0c\3\2\2\2\u0a0e\u0a0f\3\2\2\2\u0a0f\u0a0d\3\2\2\2\u0a0f\u0a10\3\2"+
		"\2\2\u0a10\u0a12\3\2\2\2\u0a11\u0a0b\3\2\2\2\u0a11\u0a12\3\2\2\2\u0a12"+
		"\u0a13\3\2\2\2\u0a13\u0a14\5\u00bc_\2\u0a14\u0a86\3\2\2\2\u0a15\u0a17"+
		"\7\u0175\2\2\u0a16\u0a18\5\6\4\2\u0a17\u0a16\3\2\2\2\u0a18\u0a19\3\2\2"+
		"\2\u0a19\u0a17\3\2\2\2\u0a19\u0a1a\3\2\2\2\u0a1a\u0a21\3\2\2\2\u0a1b\u0a1d"+
		"\7\u00ce\2\2\u0a1c\u0a1e\5\6\4\2\u0a1d\u0a1c\3\2\2\2\u0a1e\u0a1f\3\2\2"+
		"\2\u0a1f\u0a1d\3\2\2\2\u0a1f\u0a20\3\2\2\2\u0a20\u0a22\3\2\2\2\u0a21\u0a1b"+
		"\3\2\2\2\u0a21\u0a22\3\2\2\2\u0a22\u0a24\3\2\2\2\u0a23\u0a15\3\2\2\2\u0a23"+
		"\u0a24\3\2\2\2\u0a24\u0a25\3\2\2\2\u0a25\u0a86\7q\2\2\u0a26\u0a28\7(\2"+
		"\2\u0a27\u0a29\5\6\4\2\u0a28\u0a27\3\2\2\2\u0a29\u0a2a\3\2\2\2\u0a2a\u0a28"+
		"\3\2\2\2\u0a2a\u0a2b\3\2\2\2\u0a2b\u0a32\3\2\2\2\u0a2c\u0a2e\7\u017c\2"+
		"\2\u0a2d\u0a2f\5\6\4\2\u0a2e\u0a2d\3\2\2\2\u0a2f\u0a30\3\2\2\2\u0a30\u0a2e"+
		"\3\2\2\2\u0a30\u0a31\3\2\2\2\u0a31\u0a33\3\2\2\2\u0a32\u0a2c\3\2\2\2\u0a32"+
		"\u0a33\3\2\2\2\u0a33\u0a34\3\2\2\2\u0a34\u0a35\7\u0184\2\2\u0a35\u0a86"+
		"\3\2\2\2\u0a36\u0a38\7=\2\2\u0a37\u0a39\5\6\4\2\u0a38\u0a37\3\2\2\2\u0a39"+
		"\u0a3a\3\2\2\2\u0a3a\u0a38\3\2\2\2\u0a3a\u0a3b\3\2\2\2\u0a3b\u0a42\3\2"+
		"\2\2\u0a3c\u0a3e\7\u00f3\2\2\u0a3d\u0a3f\5\6\4\2\u0a3e\u0a3d\3\2\2\2\u0a3f"+
		"\u0a40\3\2\2\2\u0a40\u0a3e\3\2\2\2\u0a40\u0a41\3\2\2\2\u0a41\u0a43\3\2"+
		"\2\2\u0a42\u0a3c\3\2\2\2\u0a42\u0a43\3\2\2\2\u0a43\u0a4a\3\2\2\2\u0a44"+
		"\u0a46\7\u00ce\2\2\u0a45\u0a47\5\6\4\2\u0a46\u0a45\3\2\2\2\u0a47\u0a48"+
		"\3\2\2\2\u0a48\u0a46\3\2\2\2\u0a48\u0a49\3\2\2\2\u0a49\u0a4b\3\2\2\2\u0a4a"+
		"\u0a44\3\2\2\2\u0a4a\u0a4b\3\2\2\2\u0a4b\u0a4c\3\2\2\2\u0a4c\u0a4d\5\u00ba"+
		"^\2\u0a4d\u0a86\3\2\2\2\u0a4e\u0a56\7\u00b7\2\2\u0a4f\u0a51\5\6\4\2\u0a50"+
		"\u0a4f\3\2\2\2\u0a51\u0a52\3\2\2\2\u0a52\u0a50\3\2\2\2\u0a52\u0a53\3\2"+
		"\2\2\u0a53\u0a54\3\2\2\2\u0a54\u0a55\7\u00c5\2\2\u0a55\u0a57\3\2\2\2\u0a56"+
		"\u0a50\3\2\2\2\u0a56\u0a57\3\2\2\2\u0a57\u0a86\3\2\2\2\u0a58\u0a60\t\7"+
		"\2\2\u0a59\u0a5b\5\6\4\2\u0a5a\u0a59\3\2\2\2\u0a5b\u0a5c\3\2\2\2\u0a5c"+
		"\u0a5a\3\2\2\2\u0a5c\u0a5d\3\2\2\2\u0a5d\u0a5e\3\2\2\2\u0a5e\u0a5f\7\u0134"+
		"\2\2\u0a5f\u0a61\3\2\2\2\u0a60\u0a5a\3\2\2\2\u0a60\u0a61\3\2\2\2\u0a61"+
		"\u0a86\3\2\2\2\u0a62\u0a86\5\u00dan\2\u0a63\u0a86\5\u00aeX\2\u0a64\u0a66"+
		"\7\u0148\2\2\u0a65\u0a67\5\6\4\2\u0a66\u0a65\3\2\2\2\u0a67\u0a68\3\2\2"+
		"\2\u0a68\u0a66\3\2\2\2\u0a68\u0a69\3\2\2\2\u0a69\u0a70\3\2\2\2\u0a6a\u0a6c"+
		"\7\u00ce\2\2\u0a6b\u0a6d\5\6\4\2\u0a6c\u0a6b\3\2\2\2\u0a6d\u0a6e\3\2\2"+
		"\2\u0a6e\u0a6c\3\2\2\2\u0a6e\u0a6f\3\2\2\2\u0a6f\u0a71\3\2\2\2\u0a70\u0a6a"+
		"\3\2\2\2\u0a70\u0a71\3\2\2\2\u0a71\u0a72\3\2\2\2\u0a72\u0a73\5\u00b8]"+
		"\2\u0a73\u0a86\3\2\2\2\u0a74\u0a76\7\u0178\2\2\u0a75\u0a77\5\6\4\2\u0a76"+
		"\u0a75\3\2\2\2\u0a77\u0a78\3\2\2\2\u0a78\u0a76\3\2\2\2\u0a78\u0a79\3\2"+
		"\2\2\u0a79\u0a80\3\2\2\2\u0a7a\u0a7c\7\u00ce\2\2\u0a7b\u0a7d\5\6\4\2\u0a7c"+
		"\u0a7b\3\2\2\2\u0a7d\u0a7e\3\2\2\2\u0a7e\u0a7c\3\2\2\2\u0a7e\u0a7f\3\2"+
		"\2\2\u0a7f\u0a81\3\2\2\2\u0a80\u0a7a\3\2\2\2\u0a80\u0a81\3\2\2\2\u0a81"+
		"\u0a82\3\2\2\2\u0a82\u0a83\5\u0094K\2\u0a83\u0a86\3\2\2\2\u0a84\u0a86"+
		"\5\u00b0Y\2\u0a85\u09d7\3\2\2\2\u0a85\u09ef\3\2\2\2\u0a85\u0a05\3\2\2"+
		"\2\u0a85\u0a23\3\2\2\2\u0a85\u0a26\3\2\2\2\u0a85\u0a36\3\2\2\2\u0a85\u0a4e"+
		"\3\2\2\2\u0a85\u0a58\3\2\2\2\u0a85\u0a62\3\2\2\2\u0a85\u0a63\3\2\2\2\u0a85"+
		"\u0a64\3\2\2\2\u0a85\u0a74\3\2\2\2\u0a85\u0a84\3\2\2\2\u0a86\u00ad\3\2"+
		"\2\2\u0a87\u0a8f\7\u0143\2\2\u0a88\u0a8a\5\6\4\2\u0a89\u0a88\3\2\2\2\u0a8a"+
		"\u0a8b\3\2\2\2\u0a8b\u0a89\3\2\2\2\u0a8b\u0a8c\3\2\2\2\u0a8c\u0a8d\3\2"+
		"\2\2\u0a8d\u0a8e\7\u00ce\2\2\u0a8e\u0a90\3\2\2\2\u0a8f\u0a89\3\2\2\2\u0a8f"+
		"\u0a90\3\2\2\2\u0a90\u0a92\3\2\2\2\u0a91\u0a93\5\6\4\2\u0a92\u0a91\3\2"+
		"\2\2\u0a93\u0a94\3\2\2\2\u0a94\u0a92\3\2\2\2\u0a94\u0a95\3\2\2\2\u0a95"+
		"\u0a97\3\2\2\2\u0a96\u0a87\3\2\2\2\u0a96\u0a97\3\2\2\2\u0a97\u0a98\3\2"+
		"\2\2\u0a98\u0aa6\t\13\2\2\u0a99\u0a9b\5\6\4\2\u0a9a\u0a99\3\2\2\2\u0a9b"+
		"\u0a9c\3\2\2\2\u0a9c\u0a9a\3\2\2\2\u0a9c\u0a9d\3\2\2\2\u0a9d\u0a9e\3\2"+
		"\2\2\u0a9e\u0aa0\7\u013f\2\2\u0a9f\u0aa1\5\6\4\2\u0aa0\u0a9f\3\2\2\2\u0aa1"+
		"\u0aa2\3\2\2\2\u0aa2\u0aa0\3\2\2\2\u0aa2\u0aa3\3\2\2\2\u0aa3\u0aa4\3\2"+
		"\2\2\u0aa4\u0aa5\7\65\2\2\u0aa5\u0aa7\3\2\2\2\u0aa6\u0a9a\3\2\2\2\u0aa6"+
		"\u0aa7\3\2\2\2\u0aa7\u00af\3\2\2\2\u0aa8\u0aaa\7\u0156\2\2\u0aa9\u0aab"+
		"\5\6\4\2\u0aaa\u0aa9\3\2\2\2\u0aab\u0aac\3\2\2\2\u0aac\u0aaa\3\2\2\2\u0aac"+
		"\u0aad\3\2\2\2\u0aad\u0aae\3\2\2\2\u0aae\u0ab8\5\u00b6\\\2\u0aaf\u0ab1"+
		"\5\6\4\2\u0ab0\u0aaf\3\2\2\2\u0ab1\u0ab2\3\2\2\2\u0ab2\u0ab0\3\2\2\2\u0ab2"+
		"\u0ab3\3\2\2\2\u0ab3\u0ab4\3\2\2\2\u0ab4\u0ab5\5\u00b6\\\2\u0ab5\u0ab7"+
		"\3\2\2\2\u0ab6\u0ab0\3\2\2\2\u0ab7\u0aba\3\2\2\2\u0ab8\u0ab6\3\2\2\2\u0ab8"+
		"\u0ab9\3\2\2\2\u0ab9\u0ac2\3\2\2\2\u0aba\u0ab8\3\2\2\2\u0abb\u0abd\5\6"+
		"\4\2\u0abc\u0abb\3\2\2\2\u0abd\u0abe\3\2\2\2\u0abe\u0abc\3\2\2\2\u0abe"+
		"\u0abf\3\2\2\2\u0abf\u0ac0\3\2\2\2\u0ac0\u0ac1\7\u0174\2\2\u0ac1\u0ac3"+
		"\3\2\2\2\u0ac2\u0abc\3\2\2\2\u0ac2\u0ac3\3\2\2\2\u0ac3\u0acd\3\2\2\2\u0ac4"+
		"\u0ac6\5\6\4\2\u0ac5\u0ac4\3\2\2\2\u0ac6\u0ac7\3\2\2\2\u0ac7\u0ac5\3\2"+
		"\2\2\u0ac7\u0ac8\3\2\2\2\u0ac8\u0ac9\3\2\2\2\u0ac9\u0aca\5\u00b4[\2\u0aca"+
		"\u0acc\3\2\2\2\u0acb\u0ac5\3\2\2\2\u0acc\u0acf\3\2\2\2\u0acd\u0acb\3\2"+
		"\2\2\u0acd\u0ace\3\2\2\2\u0ace\u0ad1\3\2\2\2\u0acf\u0acd\3\2\2\2\u0ad0"+
		"\u0aa8\3\2\2\2\u0ad1\u0ad2\3\2\2\2\u0ad2\u0ad0\3\2\2\2\u0ad2\u0ad3\3\2"+
		"\2\2\u0ad3\u0aea\3\2\2\2\u0ad4\u0ad6\5\6\4\2\u0ad5\u0ad4\3\2\2\2\u0ad6"+
		"\u0ad9\3\2\2\2\u0ad7\u0ad5\3\2\2\2\u0ad7\u0ad8\3\2\2\2\u0ad8\u0ada\3\2"+
		"\2\2\u0ad9\u0ad7\3\2\2\2\u0ada\u0adc\7\u012d\2\2\u0adb\u0add\5\6\4\2\u0adc"+
		"\u0adb\3\2\2\2\u0add\u0ade\3\2\2\2\u0ade\u0adc\3\2\2\2\u0ade\u0adf\3\2"+
		"\2\2\u0adf\u0ae6\3\2\2\2\u0ae0\u0ae2\7\u00fa\2\2\u0ae1\u0ae3\5\6\4\2\u0ae2"+
		"\u0ae1\3\2\2\2\u0ae3\u0ae4\3\2\2\2\u0ae4\u0ae2\3\2\2\2\u0ae4\u0ae5\3\2"+
		"\2\2\u0ae5\u0ae7\3\2\2\2\u0ae6\u0ae0\3\2\2\2\u0ae6\u0ae7\3\2\2\2\u0ae7"+
		"\u0ae8\3\2\2\2\u0ae8\u0ae9\5\u00b2Z\2\u0ae9\u0aeb\3\2\2\2\u0aea\u0ad7"+
		"\3\2\2\2\u0aea\u0aeb\3\2\2\2\u0aeb\u00b1\3\2\2\2\u0aec\u0aed\t\f\2\2\u0aed"+
		"\u00b3\3\2\2\2\u0aee\u0aef\7\u01a3\2\2\u0aef\u00b5\3\2\2\2\u0af0\u0af1"+
		"\7\u01a3\2\2\u0af1\u00b7\3\2\2\2\u0af2\u0af3\5\u0158\u00ad\2\u0af3\u00b9"+
		"\3\2\2\2\u0af4\u0af5\7\u01a1\2\2\u0af5\u00bb\3\2\2\2\u0af6\u0af8\7\u0127"+
		"\2\2\u0af7\u0af9\5\6\4\2\u0af8\u0af7\3\2\2\2\u0af9\u0afa\3\2\2\2\u0afa"+
		"\u0af8\3\2\2\2\u0afa\u0afb\3\2\2\2\u0afb\u0afc\3\2\2\2\u0afc\u0afd\7\u00b8"+
		"\2\2\u0afd\u0b41\3\2\2\2\u0afe\u0b41\7\u0133\2\2\u0aff\u0b01\7\u0104\2"+
		"\2\u0b00\u0b02\5\6\4\2\u0b01\u0b00\3\2\2\2\u0b02\u0b03\3\2\2\2\u0b03\u0b01"+
		"\3\2\2\2\u0b03\u0b04\3\2\2\2\u0b04\u0b05\3\2\2\2\u0b05\u0b06\7\u00b8\2"+
		"\2\u0b06\u0b41\3\2\2\2\u0b07\u0b41\7\u0109\2\2\u0b08\u0b0a\7U\2\2\u0b09"+
		"\u0b0b\5\6\4\2\u0b0a\u0b09\3\2\2\2\u0b0b\u0b0c\3\2\2\2\u0b0c\u0b0a\3\2"+
		"\2\2\u0b0c\u0b0d\3\2\2\2\u0b0d\u0b0e\3\2\2\2\u0b0e\u0b0f\7\u00b8\2\2\u0b0f"+
		"\u0b12\3\2\2\2\u0b10\u0b12\7\64\2\2\u0b11\u0b08\3\2\2\2\u0b11\u0b10\3"+
		"\2\2\2\u0b12\u0b14\3\2\2\2\u0b13\u0b15\5\6\4\2\u0b14\u0b13\3\2\2\2\u0b15"+
		"\u0b16\3\2\2\2\u0b16\u0b14\3\2\2\2\u0b16\u0b17\3\2\2\2\u0b17\u0b18\3\2"+
		"\2\2\u0b18\u0b19\5\u00be`\2\u0b19\u0b41\3\2\2\2\u0b1a\u0b41\7o\2\2\u0b1b"+
		"\u0b41\7d\2\2\u0b1c\u0b1e\7U\2\2\u0b1d\u0b1f\5\6\4\2\u0b1e\u0b1d\3\2\2"+
		"\2\u0b1f\u0b20\3\2\2\2\u0b20\u0b1e\3\2\2\2\u0b20\u0b21\3\2\2\2\u0b21\u0b22"+
		"\3\2\2\2\u0b22\u0b23\7\u00ac\2\2\u0b23\u0b26\3\2\2\2\u0b24\u0b26\7\63"+
		"\2\2\u0b25\u0b1c\3\2\2\2\u0b25\u0b24\3\2\2\2\u0b26\u0b28\3\2\2\2\u0b27"+
		"\u0b29\5\6\4\2\u0b28\u0b27\3\2\2\2\u0b29\u0b2a\3\2\2\2\u0b2a\u0b28\3\2"+
		"\2\2\u0b2a\u0b2b\3\2\2\2\u0b2b\u0b2c\3\2\2\2\u0b2c\u0b2d\5\u00be`\2\u0b2d"+
		"\u0b41\3\2\2\2\u0b2e\u0b30\7\u0104\2\2\u0b2f\u0b31\5\6\4\2\u0b30\u0b2f"+
		"\3\2\2\2\u0b31\u0b32\3\2\2\2\u0b32\u0b30\3\2\2\2\u0b32\u0b33\3\2\2\2\u0b33"+
		"\u0b34\3\2\2\2\u0b34\u0b35\7\u00ac\2\2\u0b35\u0b41\3\2\2\2\u0b36\u0b41"+
		"\7\u0108\2\2\u0b37\u0b39\7\u0127\2\2\u0b38\u0b3a\5\6\4\2\u0b39\u0b38\3"+
		"\2\2\2\u0b3a\u0b3b\3\2\2\2\u0b3b\u0b39\3\2\2\2\u0b3b\u0b3c\3\2\2\2\u0b3c"+
		"\u0b3d\3\2\2\2\u0b3d\u0b3e\7\u00ac\2\2\u0b3e\u0b41\3\2\2\2\u0b3f\u0b41"+
		"\7\u0132\2\2\u0b40\u0af6\3\2\2\2\u0b40\u0afe\3\2\2\2\u0b40\u0aff\3\2\2"+
		"\2\u0b40\u0b07\3\2\2\2\u0b40\u0b11\3\2\2\2\u0b40\u0b1a\3\2\2\2\u0b40\u0b1b"+
		"\3\2\2\2\u0b40\u0b25\3\2\2\2\u0b40\u0b2e\3\2\2\2\u0b40\u0b36\3\2\2\2\u0b40"+
		"\u0b37\3\2\2\2\u0b40\u0b3f\3\2\2\2\u0b41\u00bd\3\2\2\2\u0b42\u0b43\t\f"+
		"\2\2\u0b43\u00bf\3\2\2\2\u0b44\u0b56\5\u00c4c\2\u0b45\u0b47\7\u010c\2"+
		"\2\u0b46\u0b48\5\6\4\2\u0b47\u0b46\3\2\2\2\u0b48\u0b49\3\2\2\2\u0b49\u0b47"+
		"\3\2\2\2\u0b49\u0b4a\3\2\2\2\u0b4a\u0b4b\3\2\2\2\u0b4b\u0b4c\5\u00c4c"+
		"\2\u0b4c\u0b56\3\2\2\2\u0b4d\u0b4f\7\u00f0\2\2\u0b4e\u0b50\5\6\4\2\u0b4f"+
		"\u0b4e\3\2\2\2\u0b50\u0b51\3\2\2\2\u0b51\u0b4f\3\2\2\2\u0b51\u0b52\3\2"+
		"\2\2\u0b52\u0b53\3\2\2\2\u0b53\u0b54\7\u0104\2\2\u0b54\u0b56\3\2\2\2\u0b55"+
		"\u0b44\3\2\2\2\u0b55\u0b45\3\2\2\2\u0b55\u0b4d\3\2\2\2\u0b56\u00c1\3\2"+
		"\2\2\u0b57\u0b6d\5\u00c4c\2\u0b58\u0b5a\5\6\4\2\u0b59\u0b58\3\2\2\2\u0b5a"+
		"\u0b5b\3\2\2\2\u0b5b\u0b59\3\2\2\2\u0b5b\u0b5c\3\2\2\2\u0b5c\u0b63\3\2"+
		"\2\2\u0b5d\u0b5f\7\u00fa\2\2\u0b5e\u0b60\5\6\4\2\u0b5f\u0b5e\3\2\2\2\u0b60"+
		"\u0b61\3\2\2\2\u0b61\u0b5f\3\2\2\2\u0b61\u0b62\3\2\2\2\u0b62\u0b64\3\2"+
		"\2\2\u0b63\u0b5d\3\2\2\2\u0b63\u0b64\3\2\2\2\u0b64\u0b65\3\2\2\2\u0b65"+
		"\u0b67\7\u00f0\2\2\u0b66\u0b68\5\6\4\2\u0b67\u0b66\3\2\2\2\u0b68\u0b69"+
		"\3\2\2\2\u0b69\u0b67\3\2\2\2\u0b69\u0b6a\3\2\2\2\u0b6a\u0b6b\3\2\2\2\u0b6b"+
		"\u0b6c\7\u0104\2\2\u0b6c\u0b6e\3\2\2\2\u0b6d\u0b59\3\2\2\2\u0b6d\u0b6e"+
		"\3\2\2\2\u0b6e\u0b78\3\2\2\2\u0b6f\u0b71\7\u010c\2\2\u0b70\u0b72\5\6\4"+
		"\2\u0b71\u0b70\3\2\2\2\u0b72\u0b73\3\2\2\2\u0b73\u0b71\3\2\2\2\u0b73\u0b74"+
		"\3\2\2\2\u0b74\u0b75\3\2\2\2\u0b75\u0b76\5\u00c4c\2\u0b76\u0b78\3\2\2"+
		"\2\u0b77\u0b57\3\2\2\2\u0b77\u0b6f\3\2\2\2\u0b78\u00c3\3\2\2\2\u0b79\u0b7a"+
		"\7\u01a1\2\2\u0b7a\u00c5\3\2\2\2\u0b7b\u0b7d\7\u00ce\2\2\u0b7c\u0b7e\5"+
		"\6\4\2\u0b7d\u0b7c\3\2\2\2\u0b7e\u0b7f\3\2\2\2\u0b7f\u0b7d\3\2\2\2\u0b7f"+
		"\u0b80\3\2\2\2\u0b80\u0b82\3\2\2\2\u0b81\u0b7b\3\2\2\2\u0b81\u0b82\3\2"+
		"\2\2\u0b82\u0b83\3\2\2\2\u0b83\u0c3a\7\u00b4\2\2\u0b84\u0b86\7:\2\2\u0b85"+
		"\u0b87\5\6\4\2\u0b86\u0b85\3\2\2\2\u0b87\u0b88\3\2\2\2\u0b88\u0b86\3\2"+
		"\2\2\u0b88\u0b89\3\2\2\2\u0b89\u0b8a\3\2\2\2\u0b8a\u0b8b\5\u00d4k\2\u0b8b"+
		"\u0c3a\3\2\2\2\u0b8c\u0b94\7U\2\2\u0b8d\u0b8f\5\6\4\2\u0b8e\u0b8d\3\2"+
		"\2\2\u0b8f\u0b90\3\2\2\2\u0b90\u0b8e\3\2\2\2\u0b90\u0b91\3\2\2\2\u0b91"+
		"\u0b92\3\2\2\2\u0b92\u0b93\7\u00ce\2\2\u0b93\u0b95\3\2\2\2\u0b94\u0b8e"+
		"\3\2\2\2\u0b94\u0b95\3\2\2\2\u0b95\u0ba1\3\2\2\2\u0b96\u0b9e\7V\2\2\u0b97"+
		"\u0b99\5\6\4\2\u0b98\u0b97\3\2\2\2\u0b99\u0b9a\3\2\2\2\u0b9a\u0b98\3\2"+
		"\2\2\u0b9a\u0b9b\3\2\2\2\u0b9b\u0b9c\3\2\2\2\u0b9c\u0b9d\7\22\2\2\u0b9d"+
		"\u0b9f\3\2\2\2\u0b9e\u0b98\3\2\2\2\u0b9e\u0b9f\3\2\2\2\u0b9f\u0ba1\3\2"+
		"\2\2\u0ba0\u0b8c\3\2\2\2\u0ba0\u0b96\3\2\2\2\u0ba1\u0ba3\3\2\2\2\u0ba2"+
		"\u0ba4\5\6\4\2\u0ba3\u0ba2\3\2\2\2\u0ba4\u0ba5\3\2\2\2\u0ba5\u0ba3\3\2"+
		"\2\2\u0ba5\u0ba6\3\2\2\2\u0ba6\u0bc1\3\2\2\2\u0ba7\u0bb1\5\u00d2j\2\u0ba8"+
		"\u0baa\5\6\4\2\u0ba9\u0ba8\3\2\2\2\u0baa\u0bad\3\2\2\2\u0bab\u0ba9\3\2"+
		"\2\2\u0bab\u0bac\3\2\2\2\u0bac\u0bae\3\2\2\2\u0bad\u0bab\3\2\2\2\u0bae"+
		"\u0bb0\5\u00d2j\2\u0baf\u0bab\3\2\2\2\u0bb0\u0bb3\3\2\2\2\u0bb1\u0baf"+
		"\3\2\2\2\u0bb1\u0bb2\3\2\2\2\u0bb2\u0bc2\3\2\2\2\u0bb3\u0bb1\3\2\2\2\u0bb4"+
		"\u0bbe\7\u00a7\2\2\u0bb5\u0bb7\5\6\4\2\u0bb6\u0bb5\3\2\2\2\u0bb7\u0bba"+
		"\3\2\2\2\u0bb8\u0bb6\3\2\2\2\u0bb8\u0bb9\3\2\2\2\u0bb9\u0bbb\3\2\2\2\u0bba"+
		"\u0bb8\3\2\2\2\u0bbb\u0bbd\5\u00d2j\2\u0bbc\u0bb8\3\2\2\2\u0bbd\u0bc0"+
		"\3\2\2\2\u0bbe\u0bbc\3\2\2\2\u0bbe\u0bbf\3\2\2\2\u0bbf\u0bc2\3\2\2\2\u0bc0"+
		"\u0bbe\3\2\2\2\u0bc1\u0ba7\3\2\2\2\u0bc1\u0bb4\3\2\2\2\u0bc2\u0c3a\3\2"+
		"\2\2\u0bc3\u0bc5\7\u0104\2\2\u0bc4\u0bc6\5\6\4\2\u0bc5\u0bc4\3\2\2\2\u0bc6"+
		"\u0bc7\3\2\2\2\u0bc7\u0bc5\3\2\2\2\u0bc7\u0bc8\3\2\2\2\u0bc8\u0be5\3\2"+
		"\2\2\u0bc9\u0bcb\7\u00d9\2\2\u0bca\u0bcc\5\6\4\2\u0bcb\u0bca\3\2\2\2\u0bcc"+
		"\u0bcd\3\2\2\2\u0bcd\u0bcb\3\2\2\2\u0bcd\u0bce\3\2\2\2\u0bce\u0bd5\3\2"+
		"\2\2\u0bcf\u0bd1\7\u00ce\2\2\u0bd0\u0bd2\5\6\4\2\u0bd1\u0bd0\3\2\2\2\u0bd2"+
		"\u0bd3\3\2\2\2\u0bd3\u0bd1\3\2\2\2\u0bd3\u0bd4\3\2\2\2\u0bd4\u0bd6\3\2"+
		"\2\2\u0bd5\u0bcf\3\2\2\2\u0bd5\u0bd6\3\2\2\2\u0bd6\u0be6\3\2\2\2\u0bd7"+
		"\u0bd9\7\u00da\2\2\u0bd8\u0bda\5\6\4\2\u0bd9\u0bd8\3\2\2\2\u0bda\u0bdb"+
		"\3\2\2\2\u0bdb\u0bd9\3\2\2\2\u0bdb\u0bdc\3\2\2\2\u0bdc\u0be3\3\2\2\2\u0bdd"+
		"\u0bdf\7\22\2\2\u0bde\u0be0\5\6\4\2\u0bdf\u0bde\3\2\2\2\u0be0\u0be1\3"+
		"\2\2\2\u0be1\u0bdf\3\2\2\2\u0be1\u0be2\3\2\2\2\u0be2\u0be4\3\2\2\2\u0be3"+
		"\u0bdd\3\2\2\2\u0be3\u0be4\3\2\2\2\u0be4\u0be6\3\2\2\2\u0be5\u0bc9\3\2"+
		"\2\2\u0be5\u0bd7\3\2\2\2\u0be5\u0be6\3\2\2\2\u0be6\u0be7\3\2\2\2\u0be7"+
		"\u0bef\5\u00d0i\2\u0be8\u0bea\5\6\4\2\u0be9\u0be8\3\2\2\2\u0bea\u0beb"+
		"\3\2\2\2\u0beb\u0be9\3\2\2\2\u0beb\u0bec\3\2\2\2\u0bec\u0bed\3\2\2\2\u0bed"+
		"\u0bee\t\r\2\2\u0bee\u0bf0\3\2\2\2\u0bef\u0be9\3\2\2\2\u0bef\u0bf0\3\2"+
		"\2\2\u0bf0\u0bfe\3\2\2\2\u0bf1\u0bf3\5\6\4\2\u0bf2\u0bf1\3\2\2\2\u0bf3"+
		"\u0bf4\3\2\2\2\u0bf4\u0bf2\3\2\2\2\u0bf4\u0bf5\3\2\2\2\u0bf5\u0bf6\3\2"+
		"\2\2\u0bf6\u0bf8\7\u00b8\2\2\u0bf7\u0bf9\5\6\4\2\u0bf8\u0bf7\3\2\2\2\u0bf9"+
		"\u0bfa\3\2\2\2\u0bfa\u0bf8\3\2\2\2\u0bfa\u0bfb\3\2\2\2\u0bfb\u0bfc\3\2"+
		"\2\2\u0bfc\u0bfd\5\u00ceh\2\u0bfd\u0bff\3\2\2\2\u0bfe\u0bf2\3\2\2\2\u0bfe"+
		"\u0bff\3\2\2\2\u0bff\u0c13\3\2\2\2\u0c00\u0c02\5\6\4\2\u0c01\u0c00\3\2"+
		"\2\2\u0c02\u0c03\3\2\2\2\u0c03\u0c01\3\2\2\2\u0c03\u0c04\3\2\2\2\u0c04"+
		"\u0c05\3\2\2\2\u0c05\u0c07\7\u00a8\2\2\u0c06\u0c08\5\6\4\2\u0c07\u0c06"+
		"\3\2\2\2\u0c08\u0c09\3\2\2\2\u0c09\u0c07\3\2\2\2\u0c09\u0c0a\3\2\2\2\u0c0a"+
		"\u0c0b\3\2\2\2\u0c0b\u0c0d\7o\2\2\u0c0c\u0c0e\5\6\4\2\u0c0d\u0c0c\3\2"+
		"\2\2\u0c0e\u0c0f\3\2\2\2\u0c0f\u0c0d\3\2\2\2\u0c0f\u0c10\3\2\2\2\u0c10"+
		"\u0c11\3\2\2\2\u0c11\u0c12\5\u00ccg\2\u0c12\u0c14\3\2\2\2\u0c13\u0c01"+
		"\3\2\2\2\u0c13\u0c14\3\2\2\2\u0c14\u0c28\3\2\2\2\u0c15\u0c17\5\6\4\2\u0c16"+
		"\u0c15\3\2\2\2\u0c17\u0c18\3\2\2\2\u0c18\u0c16\3\2\2\2\u0c18\u0c19\3\2"+
		"\2\2\u0c19\u0c1a\3\2\2\2\u0c1a\u0c1c\7\u00d5\2\2\u0c1b\u0c1d\5\6\4\2\u0c1c"+
		"\u0c1b\3\2\2\2\u0c1d\u0c1e\3\2\2\2\u0c1e\u0c1c\3\2\2\2\u0c1e\u0c1f\3\2"+
		"\2\2\u0c1f\u0c20\3\2\2\2\u0c20\u0c22\7o\2\2\u0c21\u0c23\5\6\4\2\u0c22"+
		"\u0c21\3\2\2\2\u0c23\u0c24\3\2\2\2\u0c24\u0c22\3\2\2\2\u0c24\u0c25\3\2"+
		"\2\2\u0c25\u0c26\3\2\2\2\u0c26\u0c27\5\u00caf\2\u0c27\u0c29\3\2\2\2\u0c28"+
		"\u0c16\3\2\2\2\u0c28\u0c29\3\2\2\2\u0c29\u0c37\3\2\2\2\u0c2a\u0c2c\5\6"+
		"\4\2\u0c2b\u0c2a\3\2\2\2\u0c2c\u0c2d\3\2\2\2\u0c2d\u0c2b\3\2\2\2\u0c2d"+
		"\u0c2e\3\2\2\2\u0c2e\u0c2f\3\2\2\2\u0c2f\u0c31\7\u00ac\2\2\u0c30\u0c32"+
		"\5\6\4\2\u0c31\u0c30\3\2\2\2\u0c32\u0c33\3\2\2\2\u0c33\u0c31\3\2\2\2\u0c33"+
		"\u0c34\3\2\2\2\u0c34\u0c35\3\2\2\2\u0c35\u0c36\5\u00c8e\2\u0c36\u0c38"+
		"\3\2\2\2\u0c37\u0c2b\3\2\2\2\u0c37\u0c38\3\2\2\2\u0c38\u0c3a\3\2\2\2\u0c39"+
		"\u0b81\3\2\2\2\u0c39\u0b84\3\2\2\2\u0c39\u0ba0\3\2\2\2\u0c39\u0bc3\3\2"+
		"\2\2\u0c3a\u00c7\3\2\2\2\u0c3b\u0c3c\7\u01a1\2\2\u0c3c\u00c9\3\2\2\2\u0c3d"+
		"\u0c3e\7\u01a1\2\2\u0c3e\u00cb\3\2\2\2\u0c3f\u0c40\7\u01a1\2\2\u0c40\u00cd"+
		"\3\2\2\2\u0c41\u0c42\7\u01a1\2\2\u0c42\u00cf\3\2\2\2\u0c43\u0c44\7\u01a1"+
		"\2\2\u0c44\u00d1\3\2\2\2\u0c45\u0c46\5\u0158\u00ad\2\u0c46\u00d3\3\2\2"+
		"\2\u0c47\u0c48\7\u01a0\2\2\u0c48\u00d5\3\2\2\2\u0c49\u0c51\7\u0175\2\2"+
		"\u0c4a\u0c4c\5\6\4\2\u0c4b\u0c4a\3\2\2\2\u0c4c\u0c4d\3\2\2\2\u0c4d\u0c4b"+
		"\3\2\2\2\u0c4d\u0c4e\3\2\2\2\u0c4e\u0c4f\3\2\2\2\u0c4f\u0c50\7\u00ce\2"+
		"\2\u0c50\u0c52\3\2\2\2\u0c51\u0c4b\3\2\2\2\u0c51\u0c52\3\2\2\2\u0c52\u0c54"+
		"\3\2\2\2\u0c53\u0c55\5\6\4\2\u0c54\u0c53\3\2\2\2\u0c55\u0c56\3\2\2\2\u0c56"+
		"\u0c54\3\2\2\2\u0c56\u0c57\3\2\2\2\u0c57\u0c59\3\2\2\2\u0c58\u0c49\3\2"+
		"\2\2\u0c58\u0c59\3\2\2\2\u0c59\u0c5a\3\2\2\2\u0c5a\u0c5b\5\u00d8m\2\u0c5b"+
		"\u00d7\3\2\2\2\u0c5c\u0c9c\7#\2\2\u0c5d\u0c65\7$\2\2\u0c5e\u0c60\5\6\4"+
		"\2\u0c5f\u0c5e\3\2\2\2\u0c60\u0c61\3\2\2\2\u0c61\u0c5f\3\2\2\2\u0c61\u0c62"+
		"\3\2\2\2\u0c62\u0c63\3\2\2\2\u0c63\u0c64\t\16\2\2\u0c64\u0c66\3\2\2\2"+
		"\u0c65\u0c5f\3\2\2\2\u0c65\u0c66\3\2\2\2\u0c66\u0c9c\3\2\2\2\u0c67\u0c6f"+
		"\7\'\2\2\u0c68\u0c6a\5\6\4\2\u0c69\u0c68\3\2\2\2\u0c6a\u0c6b\3\2\2\2\u0c6b"+
		"\u0c69\3\2\2\2\u0c6b\u0c6c\3\2\2\2\u0c6c\u0c6d\3\2\2\2\u0c6d\u0c6e\t\16"+
		"\2\2\u0c6e\u0c70\3\2\2\2\u0c6f\u0c69\3\2\2\2\u0c6f\u0c70\3\2\2\2\u0c70"+
		"\u0c9c\3\2\2\2\u0c71\u0c79\7&\2\2\u0c72\u0c74\5\6\4\2\u0c73\u0c72\3\2"+
		"\2\2\u0c74\u0c75\3\2\2\2\u0c75\u0c73\3\2\2\2\u0c75\u0c76\3\2\2\2\u0c76"+
		"\u0c77\3\2\2\2\u0c77\u0c78\t\16\2\2\u0c78\u0c7a\3\2\2\2\u0c79\u0c73\3"+
		"\2\2\2\u0c79\u0c7a\3\2\2\2\u0c7a\u0c9c\3\2\2\2\u0c7b\u0c83\7%\2\2\u0c7c"+
		"\u0c7e\5\6\4\2\u0c7d\u0c7c\3\2\2\2\u0c7e\u0c7f\3\2\2\2\u0c7f\u0c7d\3\2"+
		"\2\2\u0c7f\u0c80\3\2\2\2\u0c80\u0c81\3\2\2\2\u0c81\u0c82\t\16\2\2\u0c82"+
		"\u0c84\3\2\2\2\u0c83\u0c7d\3\2\2\2\u0c83\u0c84\3\2\2\2\u0c84\u0c9c\3\2"+
		"\2\2\u0c85\u0c9c\7A\2\2\u0c86\u0c9c\7B\2\2\u0c87\u0c9c\7C\2\2\u0c88\u0c9c"+
		"\7D\2\2\u0c89\u0c9c\7E\2\2\u0c8a\u0c9c\7F\2\2\u0c8b\u0c9c\7G\2\2\u0c8c"+
		"\u0c9c\7@\2\2\u0c8d\u0c9c\7I\2\2\u0c8e\u0c9c\7J\2\2\u0c8f\u0c9c\7K\2\2"+
		"\u0c90\u0c9c\7L\2\2\u0c91\u0c9c\7M\2\2\u0c92\u0c9c\7N\2\2\u0c93\u0c9c"+
		"\7q\2\2\u0c94\u0c9c\7\u00ab\2\2\u0c95\u0c9c\7\u00aa\2\2\u0c96\u0c9c\7"+
		"\u00a9\2\2\u0c97\u0c9c\7\u00c3\2\2\u0c98\u0c9c\7\u0102\2\2\u0c99\u0c9c"+
		"\7\u010d\2\2\u0c9a\u0c9c\7\u010e\2\2\u0c9b\u0c5c\3\2\2\2\u0c9b\u0c5d\3"+
		"\2\2\2\u0c9b\u0c67\3\2\2\2\u0c9b\u0c71\3\2\2\2\u0c9b\u0c7b\3\2\2\2\u0c9b"+
		"\u0c85\3\2\2\2\u0c9b\u0c86\3\2\2\2\u0c9b\u0c87\3\2\2\2\u0c9b\u0c88\3\2"+
		"\2\2\u0c9b\u0c89\3\2\2\2\u0c9b\u0c8a\3\2\2\2\u0c9b\u0c8b\3\2\2\2\u0c9b"+
		"\u0c8c\3\2\2\2\u0c9b\u0c8d\3\2\2\2\u0c9b\u0c8e\3\2\2\2\u0c9b\u0c8f\3\2"+
		"\2\2\u0c9b\u0c90\3\2\2\2\u0c9b\u0c91\3\2\2\2\u0c9b\u0c92\3\2\2\2\u0c9b"+
		"\u0c93\3\2\2\2\u0c9b\u0c94\3\2\2\2\u0c9b\u0c95\3\2\2\2\u0c9b\u0c96\3\2"+
		"\2\2\u0c9b\u0c97\3\2\2\2\u0c9b\u0c98\3\2\2\2\u0c9b\u0c99\3\2\2\2\u0c9b"+
		"\u0c9a\3\2\2\2\u0c9c\u00d9\3\2\2\2\u0c9d\u0c9f\t\17\2\2\u0c9e\u0ca0\5"+
		"\6\4\2\u0c9f\u0c9e\3\2\2\2\u0ca0\u0ca1\3\2\2\2\u0ca1\u0c9f\3\2\2\2\u0ca1"+
		"\u0ca2\3\2\2\2\u0ca2\u0ca9\3\2\2\2\u0ca3\u0ca5\7\u00ce\2\2\u0ca4\u0ca6"+
		"\5\6\4\2\u0ca5\u0ca4\3\2\2\2\u0ca6\u0ca7\3\2\2\2\u0ca7\u0ca5\3\2\2\2\u0ca7"+
		"\u0ca8\3\2\2\2\u0ca8\u0caa\3\2\2\2\u0ca9\u0ca3\3\2\2\2\u0ca9\u0caa\3\2"+
		"\2\2\u0caa\u0cab\3\2\2\2\u0cab\u0cac\5\u00dco\2\u0cac\u00db\3\2\2\2\u0cad"+
		"\u0caf\5\u00dep\2\u0cae\u0cad\3\2\2\2\u0caf\u0cb0\3\2\2\2\u0cb0\u0cae"+
		"\3\2\2\2\u0cb0\u0cb1\3\2\2\2\u0cb1\u00dd\3\2\2\2\u0cb2\u0cb3\t\20\2\2"+
		"\u0cb3\u00df\3\2\2\2\u0cb4\u0cb5\7\u01a3\2\2\u0cb5\u00e1\3\2\2\2\u0cb6"+
		"\u0cb7\7\u01a3\2\2\u0cb7\u00e3\3\2\2\2\u0cb8\u0cbb\5\u00fe\u0080\2\u0cb9"+
		"\u0cbb\5\u00f4{\2\u0cba\u0cb8\3\2\2\2\u0cba\u0cb9\3\2\2\2\u0cbb\u00e5"+
		"\3\2\2\2\u0cbc\u0cc4\7\u0127\2\2\u0cbd\u0cbf\5\6\4\2\u0cbe\u0cbd\3\2\2"+
		"\2\u0cbf\u0cc0\3\2\2\2\u0cc0\u0cbe\3\2\2\2\u0cc0\u0cc1\3\2\2\2\u0cc1\u0cc2"+
		"\3\2\2\2\u0cc2\u0cc3\7\u00ce\2\2\u0cc3\u0cc5\3\2\2\2\u0cc4\u0cbe\3\2\2"+
		"\2\u0cc4\u0cc5\3\2\2\2\u0cc5\u0cd1\3\2\2\2\u0cc6\u0cce\7\u0129\2\2\u0cc7"+
		"\u0cc9\5\6\4\2\u0cc8\u0cc7\3\2\2\2\u0cc9\u0cca\3\2\2\2\u0cca\u0cc8\3\2"+
		"\2\2\u0cca\u0ccb\3\2\2\2\u0ccb\u0ccc\3\2\2\2\u0ccc\u0ccd\7\22\2\2\u0ccd"+
		"\u0ccf\3\2\2\2\u0cce\u0cc8\3\2\2\2\u0cce\u0ccf\3\2\2\2\u0ccf\u0cd1\3\2"+
		"\2\2\u0cd0\u0cbc\3\2\2\2\u0cd0\u0cc6\3\2\2\2\u0cd1\u0cd3\3\2\2\2\u0cd2"+
		"\u0cd4\5\6\4\2\u0cd3\u0cd2\3\2\2\2\u0cd4\u0cd5\3\2\2\2\u0cd5\u0cd3\3\2"+
		"\2\2\u0cd5\u0cd6\3\2\2\2\u0cd6\u0cd7\3\2\2\2\u0cd7\u0ce1\5\u00e8u\2\u0cd8"+
		"\u0cda\5\6\4\2\u0cd9\u0cd8\3\2\2\2\u0cda\u0cdd\3\2\2\2\u0cdb\u0cd9\3\2"+
		"\2\2\u0cdb\u0cdc\3\2\2\2\u0cdc\u0cde\3\2\2\2\u0cdd\u0cdb\3\2\2\2\u0cde"+
		"\u0ce0\5\u00e8u\2\u0cdf\u0cdb\3\2\2\2\u0ce0\u0ce3\3\2\2\2\u0ce1\u0cdf"+
		"\3\2\2\2\u0ce1\u0ce2\3\2\2\2\u0ce2\u00e7\3\2\2\2\u0ce3\u0ce1\3\2\2\2\u0ce4"+
		"\u0ce5\7\u01a3\2\2\u0ce5\u00e9\3\2\2\2\u0ce6\u0ce8\7\u00db\2\2\u0ce7\u0ce9"+
		"\5\6\4\2\u0ce8\u0ce7\3\2\2\2\u0ce9\u0cea\3\2\2\2\u0cea\u0ce8\3\2\2\2\u0cea"+
		"\u0ceb\3\2\2\2\u0ceb\u0cf2\3\2\2\2\u0cec\u0cee\7\u00ce\2\2\u0ced\u0cef"+
		"\5\6\4\2\u0cee\u0ced\3\2\2\2\u0cef\u0cf0\3\2\2\2\u0cf0\u0cee\3\2\2\2\u0cf0"+
		"\u0cf1\3\2\2\2\u0cf1\u0cf3\3\2\2\2\u0cf2\u0cec\3\2\2\2\u0cf2\u0cf3\3\2"+
		"\2\2\u0cf3\u0cf4\3\2\2\2\u0cf4\u0cfc\5\u00f2z\2\u0cf5\u0cf7\5\6\4\2\u0cf6"+
		"\u0cf5\3\2\2\2\u0cf7\u0cf8\3\2\2\2\u0cf8\u0cf6\3\2\2\2\u0cf8\u0cf9\3\2"+
		"\2\2\u0cf9\u0cfa\3\2\2\2\u0cfa\u0cfb\7\u00dd\2\2\u0cfb\u0cfd\3\2\2\2\u0cfc"+
		"\u0cf6\3\2\2\2\u0cfc\u0cfd\3\2\2\2\u0cfd\u0d1b\3\2\2\2\u0cfe\u0d00\5\6"+
		"\4\2\u0cff\u0cfe\3\2\2\2\u0d00\u0d01\3\2\2\2\u0d01\u0cff\3\2\2\2\u0d01"+
		"\u0d02\3\2\2\2\u0d02\u0d09\3\2\2\2\u0d03\u0d05\7\u017e\2\2\u0d04\u0d06"+
		"\5\6\4\2\u0d05\u0d04\3\2\2\2\u0d06\u0d07\3\2\2\2\u0d07\u0d05\3\2\2\2\u0d07"+
		"\u0d08\3\2\2\2\u0d08\u0d0a\3\2\2\2\u0d09\u0d03\3\2\2\2\u0d09\u0d0a\3\2"+
		"\2\2\u0d0a\u0d0b\3\2\2\2\u0d0b\u0d0d\7\u00ac\2\2\u0d0c\u0d0e\5\6\4\2\u0d0d"+
		"\u0d0c\3\2\2\2\u0d0e\u0d0f\3\2\2\2\u0d0f\u0d0d\3\2\2\2\u0d0f\u0d10\3\2"+
		"\2\2\u0d10\u0d17\3\2\2\2\u0d11\u0d13\7\33\2\2\u0d12\u0d14\5\6\4\2\u0d13"+
		"\u0d12\3\2\2\2\u0d14\u0d15\3\2\2\2\u0d15\u0d13\3\2\2\2\u0d15\u0d16\3\2"+
		"\2\2\u0d16\u0d18\3\2\2\2\u0d17\u0d11\3\2\2\2\u0d17\u0d18\3\2\2\2\u0d18"+
		"\u0d19\3\2\2\2\u0d19\u0d1a\5\u00f0y\2\u0d1a\u0d1c\3\2\2\2\u0d1b\u0cff"+
		"\3\2\2\2\u0d1b\u0d1c\3\2\2\2\u0d1c\u0d3a\3\2\2\2\u0d1d\u0d1f\5\6\4\2\u0d1e"+
		"\u0d1d\3\2\2\2\u0d1f\u0d20\3\2\2\2\u0d20\u0d1e\3\2\2\2\u0d20\u0d21\3\2"+
		"\2\2\u0d21\u0d28\3\2\2\2\u0d22\u0d24\7\u00dd\2\2\u0d23\u0d25\5\6\4\2\u0d24"+
		"\u0d23\3\2\2\2\u0d25\u0d26\3\2\2\2\u0d26\u0d24\3\2\2\2\u0d26\u0d27\3\2"+
		"\2\2\u0d27\u0d29\3\2\2\2\u0d28\u0d22\3\2\2\2\u0d28\u0d29\3\2\2\2\u0d29"+
		"\u0d30\3\2\2\2\u0d2a\u0d2c\7\33\2\2\u0d2b\u0d2d\5\6\4\2\u0d2c\u0d2b\3"+
		"\2\2\2\u0d2d\u0d2e\3\2\2\2\u0d2e\u0d2c\3\2\2\2\u0d2e\u0d2f\3\2\2\2\u0d2f"+
		"\u0d31\3\2\2\2\u0d30\u0d2a\3\2\2\2\u0d30\u0d31\3\2\2\2\u0d31\u0d32\3\2"+
		"\2\2\u0d32\u0d34\7\u0169\2\2\u0d33\u0d35\5\6\4\2\u0d34\u0d33\3\2\2\2\u0d35"+
		"\u0d36\3\2\2\2\u0d36\u0d34\3\2\2\2\u0d36\u0d37\3\2\2\2\u0d37\u0d38\3\2"+
		"\2\2\u0d38\u0d39\5\u00eex\2\u0d39\u0d3b\3\2\2\2\u0d3a\u0d1e\3\2\2\2\u0d3a"+
		"\u0d3b\3\2\2\2\u0d3b\u0d59\3\2\2\2\u0d3c\u0d3e\5\6\4\2\u0d3d\u0d3c\3\2"+
		"\2\2\u0d3e\u0d3f\3\2\2\2\u0d3f\u0d3d\3\2\2\2\u0d3f\u0d40\3\2\2\2\u0d40"+
		"\u0d47\3\2\2\2\u0d41\u0d43\7\u00dd\2\2\u0d42\u0d44\5\6\4\2\u0d43\u0d42"+
		"\3\2\2\2\u0d44\u0d45\3\2\2\2\u0d45\u0d43\3\2\2\2\u0d45\u0d46\3\2\2\2\u0d46"+
		"\u0d48\3\2\2\2\u0d47\u0d41\3\2\2\2\u0d47\u0d48\3\2\2\2\u0d48\u0d4f\3\2"+
		"\2\2\u0d49\u0d4b\7\33\2\2\u0d4a\u0d4c\5\6\4\2\u0d4b\u0d4a\3\2\2\2\u0d4c"+
		"\u0d4d\3\2\2\2\u0d4d\u0d4b\3\2\2\2\u0d4d\u0d4e\3\2\2\2\u0d4e\u0d50\3\2"+
		"\2\2\u0d4f\u0d49\3\2\2\2\u0d4f\u0d50\3\2\2\2\u0d50\u0d51\3\2\2\2\u0d51"+
		"\u0d53\7-\2\2\u0d52\u0d54\5\6\4\2\u0d53\u0d52\3\2\2\2\u0d54\u0d55\3\2"+
		"\2\2\u0d55\u0d53\3\2\2\2\u0d55\u0d56\3\2\2\2\u0d56\u0d57\3\2\2\2\u0d57"+
		"\u0d58\5\u00ecw\2\u0d58\u0d5a\3\2\2\2\u0d59\u0d3d\3\2\2\2\u0d59\u0d5a"+
		"\3\2\2\2\u0d5a\u00eb\3\2\2\2\u0d5b\u0d5e\7\u01a1\2\2\u0d5c\u0d5e\5\u0158"+
		"\u00ad\2\u0d5d\u0d5b\3\2\2\2\u0d5d\u0d5c\3\2\2\2\u0d5e\u00ed\3\2\2\2\u0d5f"+
		"\u0d62\7\u01a1\2\2\u0d60\u0d62\5\u0158\u00ad\2\u0d61\u0d5f\3\2\2\2\u0d61"+
		"\u0d60\3\2\2\2\u0d62\u00ef\3\2\2\2\u0d63\u0d66\7\u01a1\2\2\u0d64\u0d66"+
		"\5\u0158\u00ad\2\u0d65\u0d63\3\2\2\2\u0d65\u0d64\3\2\2\2\u0d66\u00f1\3"+
		"\2\2\2\u0d67\u0d6a\7\u01a1\2\2\u0d68\u0d6a\5\u0158\u00ad\2\u0d69\u0d67"+
		"\3\2\2\2\u0d69\u0d68\3\2\2\2\u0d6a\u00f3\3\2\2\2\u0d6b\u0d6d\7^\2\2\u0d6c"+
		"\u0d6e\5\6\4\2\u0d6d\u0d6c\3\2\2\2\u0d6e\u0d6f\3\2\2\2\u0d6f\u0d6d\3\2"+
		"\2\2\u0d6f\u0d70\3\2\2\2\u0d70\u0d85\3\2\2\2\u0d71\u0d79\7\u011e\2\2\u0d72"+
		"\u0d74\5\6\4\2\u0d73\u0d72\3\2\2\2\u0d74\u0d75\3\2\2\2\u0d75\u0d73\3\2"+
		"\2\2\u0d75\u0d76\3\2\2\2\u0d76\u0d77\3\2\2\2\u0d77\u0d78\7\22\2\2\u0d78"+
		"\u0d7a\3\2\2\2\u0d79\u0d73\3\2\2\2\u0d79\u0d7a\3\2\2\2\u0d7a\u0d86\3\2"+
		"\2\2\u0d7b\u0d83\7\u011d\2\2\u0d7c\u0d7e\5\6\4\2\u0d7d\u0d7c\3\2\2\2\u0d7e"+
		"\u0d7f\3\2\2\2\u0d7f\u0d7d\3\2\2\2\u0d7f\u0d80\3\2\2\2\u0d80\u0d81\3\2"+
		"\2\2\u0d81\u0d82\7\u00ce\2\2\u0d82\u0d84\3\2\2\2\u0d83\u0d7d\3\2\2\2\u0d83"+
		"\u0d84\3\2\2\2\u0d84\u0d86\3\2\2\2\u0d85\u0d71\3\2\2\2\u0d85\u0d7b\3\2"+
		"\2\2\u0d86\u0d87\3\2\2\2\u0d87\u0d91\5\u00f6|\2\u0d88\u0d8a\5\6\4\2\u0d89"+
		"\u0d88\3\2\2\2\u0d8a\u0d8b\3\2\2\2\u0d8b\u0d89\3\2\2\2\u0d8b\u0d8c\3\2"+
		"\2\2\u0d8c\u0d8d\3\2\2\2\u0d8d\u0d8e\5\u00f6|\2\u0d8e\u0d90\3\2\2\2\u0d8f"+
		"\u0d89\3\2\2\2\u0d90\u0d93\3\2\2\2\u0d91\u0d8f\3\2\2\2\u0d91\u0d92\3\2"+
		"\2\2\u0d92\u00f5\3\2\2\2\u0d93\u0d91\3\2\2\2\u0d94\u0d95\7\u01a3\2\2\u0d95"+
		"\u00f7\3\2\2\2\u0d96\u0d98\7\u0178\2\2\u0d97\u0d99\5\6\4\2\u0d98\u0d97"+
		"\3\2\2\2\u0d99\u0d9a\3\2\2\2\u0d9a\u0d98\3\2\2\2\u0d9a\u0d9b\3\2\2\2\u0d9b"+
		"\u0d9c\3\2\2\2\u0d9c\u0d9e\7\u00f7\2\2\u0d9d\u0d9f\5\6\4\2\u0d9e\u0d9d"+
		"\3\2\2\2\u0d9f\u0da0\3\2\2\2\u0da0\u0d9e\3\2\2\2\u0da0\u0da1\3\2\2\2\u0da1"+
		"\u0da2\3\2\2\2\u0da2\u0da4\t\21\2\2\u0da3\u0da5\5\6\4\2\u0da4\u0da3\3"+
		"\2\2\2\u0da5\u0da6\3\2\2\2\u0da6\u0da4\3\2\2\2\u0da6\u0da7\3\2\2\2\u0da7"+
		"\u0dae\3\2\2\2\u0da8\u0daa\7\u00ce\2\2\u0da9\u0dab\5\6\4\2\u0daa\u0da9"+
		"\3\2\2\2\u0dab\u0dac\3\2\2\2\u0dac\u0daa\3\2\2\2\u0dac\u0dad\3\2\2\2\u0dad"+
		"\u0daf\3\2\2\2\u0dae\u0da8\3\2\2\2\u0dae\u0daf\3\2\2\2\u0daf\u0db0\3\2"+
		"\2\2\u0db0\u0db1\5\u00fa~\2\u0db1\u00f9\3\2\2\2\u0db2\u0db5\7\u01a0\2"+
		"\2\u0db3\u0db5\5\u0158\u00ad\2\u0db4\u0db2\3\2\2\2\u0db4\u0db3\3\2\2\2"+
		"\u0db5\u00fb\3\2\2\2\u0db6\u0db8\7\u00d4\2\2\u0db7\u0db9\5\6\4\2\u0db8"+
		"\u0db7\3\2\2\2\u0db9\u0dba\3\2\2\2\u0dba\u0db8\3\2\2\2\u0dba\u0dbb\3\2"+
		"\2\2\u0dbb\u0dd0\3\2\2\2\u0dbc\u0dc4\7\u011e\2\2\u0dbd\u0dbf\5\6\4\2\u0dbe"+
		"\u0dbd\3\2\2\2\u0dbf\u0dc0\3\2\2\2\u0dc0\u0dbe\3\2\2\2\u0dc0\u0dc1\3\2"+
		"\2\2\u0dc1\u0dc2\3\2\2\2\u0dc2\u0dc3\7\22\2\2\u0dc3\u0dc5\3\2\2\2\u0dc4"+
		"\u0dbe\3\2\2\2\u0dc4\u0dc5\3\2\2\2\u0dc5\u0dd1\3\2\2\2\u0dc6\u0dce\7\u011d"+
		"\2\2\u0dc7\u0dc9\5\6\4\2\u0dc8\u0dc7\3\2\2\2\u0dc9\u0dca\3\2\2\2\u0dca"+
		"\u0dc8\3\2\2\2\u0dca\u0dcb\3\2\2\2\u0dcb\u0dcc\3\2\2\2\u0dcc\u0dcd\7\u00ce"+
		"\2\2\u0dcd\u0dcf\3\2\2\2\u0dce\u0dc8\3\2\2\2\u0dce\u0dcf\3\2\2\2\u0dcf"+
		"\u0dd1\3\2\2\2\u0dd0\u0dbc\3\2\2\2\u0dd0\u0dc6\3\2\2\2\u0dd1\u0dd3\3\2"+
		"\2\2\u0dd2\u0dd4\5\6\4\2\u0dd3\u0dd2\3\2\2\2\u0dd4\u0dd5\3\2\2\2\u0dd5"+
		"\u0dd3\3\2\2\2\u0dd5\u0dd6\3\2\2\2\u0dd6\u0dd7\3\2\2\2\u0dd7\u0dd8\t\22"+
		"\2\2\u0dd8\u00fd\3\2\2\2\u0dd9\u0ddb\7\u011d\2\2\u0dda\u0ddc\5\6\4\2\u0ddb"+
		"\u0dda\3\2\2\2\u0ddc\u0ddd\3\2\2\2\u0ddd\u0ddb\3\2\2\2\u0ddd\u0dde\3\2"+
		"\2\2\u0dde\u0ddf\3\2\2\2\u0ddf\u0de0\5\u0100\u0081\2\u0de0\u00ff\3\2\2"+
		"\2\u0de1\u0de3\7Q\2\2\u0de2\u0de4\5\6\4\2\u0de3\u0de2\3\2\2\2\u0de4\u0de5"+
		"\3\2\2\2\u0de5\u0de3\3\2\2\2\u0de5\u0de6\3\2\2\2\u0de6\u0de8\3\2\2\2\u0de7"+
		"\u0de1\3\2\2\2\u0de7\u0de8\3\2\2\2\u0de8\u0df5\3\2\2\2\u0de9\u0deb\5\u0104"+
		"\u0083\2\u0dea\u0dec\5\6\4\2\u0deb\u0dea\3\2\2\2\u0dec\u0ded\3\2\2\2\u0ded"+
		"\u0deb\3\2\2\2\u0ded\u0dee\3\2\2\2\u0dee\u0def\3\2\2\2\u0def\u0df1\7\u0168"+
		"\2\2\u0df0\u0df2\5\6\4\2\u0df1\u0df0\3\2\2\2\u0df2\u0df3\3\2\2\2\u0df3"+
		"\u0df1\3\2\2\2\u0df3\u0df4\3\2\2\2\u0df4\u0df6\3\2\2\2\u0df5\u0de9\3\2"+
		"\2\2\u0df5\u0df6\3\2\2\2\u0df6\u0df7\3\2\2\2\u0df7\u0dfb\5\u0106\u0084"+
		"\2\u0df8\u0dfa\5\6\4\2\u0df9\u0df8\3\2\2\2\u0dfa\u0dfd\3\2\2\2\u0dfb\u0df9"+
		"\3\2\2\2\u0dfb\u0dfc\3\2\2\2\u0dfc\u0e05\3\2\2\2\u0dfd\u0dfb\3\2\2\2\u0dfe"+
		"\u0e02\7\66\2\2\u0dff\u0e01\5\6\4\2\u0e00\u0dff\3\2\2\2\u0e01\u0e04\3"+
		"\2\2\2\u0e02\u0e00\3\2\2\2\u0e02\u0e03\3\2\2\2\u0e03\u0e06\3\2\2\2\u0e04"+
		"\u0e02\3\2\2\2\u0e05\u0dfe\3\2\2\2\u0e05\u0e06\3\2\2\2\u0e06\u0e5d\3\2"+
		"\2\2\u0e07\u0e09\7\u00ce\2\2\u0e08\u0e0a\5\6\4\2\u0e09\u0e08\3\2\2\2\u0e0a"+
		"\u0e0b\3\2\2\2\u0e0b\u0e09\3\2\2\2\u0e0b\u0e0c\3\2\2\2\u0e0c\u0e0e\3\2"+
		"\2\2\u0e0d\u0e07\3\2\2\2\u0e0d\u0e0e\3\2\2\2\u0e0e\u0e0f\3\2\2\2\u0e0f"+
		"\u0e11\7\u017a\2\2\u0e10\u0e12\5\6\4\2\u0e11\u0e10\3\2\2\2\u0e12\u0e13"+
		"\3\2\2\2\u0e13\u0e11\3\2\2\2\u0e13\u0e14\3\2\2\2\u0e14\u0e1b\3\2\2\2\u0e15"+
		"\u0e17\7\u00c2\2\2\u0e16\u0e18\5\6\4\2\u0e17\u0e16\3\2\2\2\u0e18\u0e19"+
		"\3\2\2\2\u0e19\u0e17\3\2\2\2\u0e19\u0e1a\3\2\2\2\u0e1a\u0e1c\3\2\2\2\u0e1b"+
		"\u0e15\3\2\2\2\u0e1b\u0e1c\3\2\2\2\u0e1c\u0e24\3\2\2\2\u0e1d\u0e21\7\u0145"+
		"\2\2\u0e1e\u0e20\5\6\4\2\u0e1f\u0e1e\3\2\2\2\u0e20\u0e23\3\2\2\2\u0e21"+
		"\u0e1f\3\2\2\2\u0e21\u0e22\3\2\2\2\u0e22\u0e25\3\2\2\2\u0e23\u0e21\3\2"+
		"\2\2\u0e24\u0e1d\3\2\2\2\u0e24\u0e25\3\2\2\2\u0e25\u0e2f\3\2\2\2\u0e26"+
		"\u0e28\7\u00af\2\2\u0e27\u0e29\5\6\4\2\u0e28\u0e27\3\2\2\2\u0e29\u0e2a"+
		"\3\2\2\2\u0e2a\u0e28\3\2\2\2\u0e2a\u0e2b\3\2\2\2\u0e2b\u0e2d\3\2\2\2\u0e2c"+
		"\u0e26\3\2\2\2\u0e2c\u0e2d\3\2\2\2\u0e2d\u0e2e\3\2\2\2\u0e2e\u0e30\5\u0104"+
		"\u0083\2\u0e2f\u0e2c\3\2\2\2\u0e2f\u0e30\3\2\2\2\u0e30\u0e39\3\2\2\2\u0e31"+
		"\u0e33\7\u0168\2\2\u0e32\u0e34\5\6\4\2\u0e33\u0e32\3\2\2\2\u0e34\u0e35"+
		"\3\2\2\2\u0e35\u0e33\3\2\2\2\u0e35\u0e36\3\2\2\2\u0e36\u0e37\3\2\2\2\u0e37"+
		"\u0e38\5\u0106\u0084\2\u0e38\u0e3a\3\2\2\2\u0e39\u0e31\3\2\2\2\u0e39\u0e3a"+
		"\3\2\2\2\u0e3a\u0e48\3\2\2\2\u0e3b\u0e3d\5\6\4\2\u0e3c\u0e3b\3\2\2\2\u0e3d"+
		"\u0e40\3\2\2\2\u0e3e\u0e3c\3\2\2\2\u0e3e\u0e3f\3\2\2\2\u0e3f\u0e41\3\2"+
		"\2\2\u0e40\u0e3e\3\2\2\2\u0e41\u0e45\7\66\2\2\u0e42\u0e44\5\6\4\2\u0e43"+
		"\u0e42\3\2\2\2\u0e44\u0e47\3\2\2\2\u0e45\u0e43\3\2\2\2\u0e45\u0e46\3\2"+
		"\2\2\u0e46\u0e49\3\2\2\2\u0e47\u0e45\3\2\2\2\u0e48\u0e3e\3\2\2\2\u0e48"+
		"\u0e49\3\2\2\2\u0e49\u0e5a\3\2\2\2\u0e4a\u0e4c\7m\2\2\u0e4b\u0e4d\5\6"+
		"\4\2\u0e4c\u0e4b\3\2\2\2\u0e4d\u0e4e\3\2\2\2\u0e4e\u0e4c\3\2\2\2\u0e4e"+
		"\u0e4f\3\2\2\2\u0e4f\u0e56\3\2\2\2\u0e50\u0e52\7\u00fa\2\2\u0e51\u0e53"+
		"\5\6\4\2\u0e52\u0e51\3\2\2\2\u0e53\u0e54\3\2\2\2\u0e54\u0e52\3\2\2\2\u0e54"+
		"\u0e55\3\2\2\2\u0e55\u0e57\3\2\2\2\u0e56\u0e50\3\2\2\2\u0e56\u0e57\3\2"+
		"\2\2\u0e57\u0e58\3\2\2\2\u0e58\u0e59\5\u0102\u0082\2\u0e59\u0e5b\3\2\2"+
		"\2\u0e5a\u0e4a\3\2\2\2\u0e5a\u0e5b\3\2\2\2\u0e5b\u0e5d\3\2\2\2\u0e5c\u0de7"+
		"\3\2\2\2\u0e5c\u0e0d\3\2\2\2\u0e5d\u0101\3\2\2\2\u0e5e\u0e5f\5\u0158\u00ad"+
		"\2\u0e5f\u0103\3\2\2\2\u0e60\u0e61\7\u01a1\2\2\u0e61\u0105\3\2\2\2\u0e62"+
		"\u0e63\7\u01a1\2\2\u0e63\u0107\3\2\2\2\u0e64\u0e6e\5~@\2\u0e65\u0e67\5"+
		"\6\4\2\u0e66\u0e65\3\2\2\2\u0e67\u0e68\3\2\2\2\u0e68\u0e66\3\2\2\2\u0e68"+
		"\u0e69\3\2\2\2\u0e69\u0e6c\3\2\2\2\u0e6a\u0e6d\5\u010a\u0086\2\u0e6b\u0e6d"+
		"\7\u00a5\2\2\u0e6c\u0e6a\3\2\2\2\u0e6c\u0e6b\3\2\2\2\u0e6d\u0e6f\3\2\2"+
		"\2\u0e6e\u0e66\3\2\2\2\u0e6e\u0e6f\3\2\2\2\u0e6f\u0e79\3\2\2\2\u0e70\u0e72"+
		"\5\6\4\2\u0e71\u0e70\3\2\2\2\u0e72\u0e73\3\2\2\2\u0e73\u0e71\3\2\2\2\u0e73"+
		"\u0e74\3\2\2\2\u0e74\u0e75\3\2\2\2\u0e75\u0e76\5\u010c\u0087\2\u0e76\u0e78"+
		"\3\2\2\2\u0e77\u0e71\3\2\2\2\u0e78\u0e7b\3\2\2\2\u0e79\u0e77\3\2\2\2\u0e79"+
		"\u0e7a\3\2\2\2\u0e7a\u0e7c\3\2\2\2\u0e7b\u0e79\3\2\2\2\u0e7c\u0e7d\7\u019d"+
		"\2\2\u0e7d\u0109\3\2\2\2\u0e7e\u0e7f\7\u01a3\2\2\u0e7f\u010b\3\2\2\2\u0e80"+
		"\u0e82\7(\2\2\u0e81\u0e83\5\6\4\2\u0e82\u0e81\3\2\2\2\u0e83\u0e84\3\2"+
		"\2\2\u0e84\u0e82\3\2\2\2\u0e84\u0e85\3\2\2\2\u0e85\u0e86\3\2\2\2\u0e86"+
		"\u0e87\t\4\2\2\u0e87\u0f4b\3\2\2\2\u0e88\u0e8a\7\u00ae\2\2\u0e89\u0e8b"+
		"\5\6\4\2\u0e8a\u0e89\3\2\2\2\u0e8b\u0e8c\3\2\2\2\u0e8c\u0e8a\3\2\2\2\u0e8c"+
		"\u0e8d\3\2\2\2\u0e8d\u0e94\3\2\2\2\u0e8e\u0e90\7\u00ce\2\2\u0e8f\u0e91"+
		"\5\6\4\2\u0e90\u0e8f\3\2\2\2\u0e91\u0e92\3\2\2\2\u0e92\u0e90\3\2\2\2\u0e92"+
		"\u0e93\3\2\2\2\u0e93\u0e95\3\2\2\2\u0e94\u0e8e\3\2\2\2\u0e94\u0e95\3\2"+
		"\2\2\u0e95\u0e96\3\2\2\2\u0e96\u0e97\5\u0118\u008d\2\u0e97\u0f4b\3\2\2"+
		"\2\u0e98\u0e9a\7 \2\2\u0e99\u0e9b\5\6\4\2\u0e9a\u0e99\3\2\2\2\u0e9b\u0e9c"+
		"\3\2\2\2\u0e9c\u0e9a\3\2\2\2\u0e9c\u0e9d\3\2\2\2\u0e9d\u0ea4\3\2\2\2\u0e9e"+
		"\u0ea0\7\u00ce\2\2\u0e9f\u0ea1\5\6\4\2\u0ea0\u0e9f\3\2\2\2\u0ea1\u0ea2"+
		"\3\2\2\2\u0ea2\u0ea0\3\2\2\2\u0ea2\u0ea3\3\2\2\2\u0ea3\u0ea5\3\2\2\2\u0ea4"+
		"\u0e9e\3\2\2\2\u0ea4\u0ea5\3\2\2\2\u0ea5\u0ea6\3\2\2\2\u0ea6\u0ea7\5\u0118"+
		"\u008d\2\u0ea7\u0f4b\3\2\2\2\u0ea8\u0f4b\7\35\2\2\u0ea9\u0f4b\7\u013b"+
		"\2\2\u0eaa\u0f4b\7\u012a\2\2\u0eab\u0ead\7\u0175\2\2\u0eac\u0eae\5\6\4"+
		"\2\u0ead\u0eac\3\2\2\2\u0eae\u0eaf\3\2\2\2\u0eaf\u0ead\3\2\2\2\u0eaf\u0eb0"+
		"\3\2\2\2\u0eb0\u0eb7\3\2\2\2\u0eb1\u0eb3\7\u00ce\2\2\u0eb2\u0eb4\5\6\4"+
		"\2\u0eb3\u0eb2\3\2\2\2\u0eb4\u0eb5\3\2\2\2\u0eb5\u0eb3\3\2\2\2\u0eb5\u0eb6"+
		"\3\2\2\2\u0eb6\u0eb8\3\2\2\2\u0eb7\u0eb1\3\2\2\2\u0eb7\u0eb8\3\2\2\2\u0eb8"+
		"\u0eba\3\2\2\2\u0eb9\u0eab\3\2\2\2\u0eb9\u0eba\3\2\2\2\u0eba\u0ebb\3\2"+
		"\2\2\u0ebb\u0f4b\7q\2\2\u0ebc\u0f4b\5\u00aeX\2\u0ebd\u0f4b\7\u00b0\2\2"+
		"\u0ebe\u0f4b\7\"\2\2\u0ebf\u0f4b\7)\2\2\u0ec0\u0ec2\7\u0096\2\2\u0ec1"+
		"\u0ec3\5\6\4\2\u0ec2\u0ec1\3\2\2\2\u0ec3\u0ec4\3\2\2\2\u0ec4\u0ec2\3\2"+
		"\2\2\u0ec4\u0ec5\3\2\2\2\u0ec5\u0ec6\3\2\2\2\u0ec6\u0ec7\t\23\2\2\u0ec7"+
		"\u0f4b\3\2\2\2\u0ec8\u0f4b\7\u00b9\2\2\u0ec9\u0f4b\7\u00e2\2\2\u0eca\u0f4b"+
		"\7\u0130\2\2\u0ecb\u0f4b\7\u016d\2\2\u0ecc\u0ece\7\u00dc\2\2\u0ecd\u0ecf"+
		"\5\6\4\2\u0ece\u0ecd\3\2\2\2\u0ecf\u0ed0\3\2\2\2\u0ed0\u0ece\3\2\2\2\u0ed0"+
		"\u0ed1\3\2\2\2\u0ed1\u0ed8\3\2\2\2\u0ed2\u0ed4\7\u00f3\2\2\u0ed3\u0ed5"+
		"\5\6\4\2\u0ed4\u0ed3\3\2\2\2\u0ed5\u0ed6\3\2\2\2\u0ed6\u0ed4\3\2\2\2\u0ed6"+
		"\u0ed7\3\2\2\2\u0ed7\u0ed9\3\2\2\2\u0ed8\u0ed2\3\2\2\2\u0ed8\u0ed9\3\2"+
		"\2\2\u0ed9\u0ee0\3\2\2\2\u0eda\u0edc\7\u00ce\2\2\u0edb\u0edd\5\6\4\2\u0edc"+
		"\u0edb\3\2\2\2\u0edd\u0ede\3\2\2\2\u0ede\u0edc\3\2\2\2\u0ede\u0edf\3\2"+
		"\2\2\u0edf\u0ee1\3\2\2\2\u0ee0\u0eda\3\2\2\2\u0ee0\u0ee1\3\2\2\2\u0ee1"+
		"\u0ee8\3\2\2\2\u0ee2\u0ee4\7\u010c\2\2\u0ee3\u0ee5\5\6\4\2\u0ee4\u0ee3"+
		"\3\2\2\2\u0ee5\u0ee6\3\2\2\2\u0ee6\u0ee4\3\2\2\2\u0ee6\u0ee7\3\2\2\2\u0ee7"+
		"\u0ee9\3\2\2\2\u0ee8\u0ee2\3\2\2\2\u0ee8\u0ee9\3\2\2\2\u0ee9\u0eea\3\2"+
		"\2\2\u0eea\u0eeb\5\u0116\u008c\2\u0eeb\u0f4b\3\2\2\2\u0eec\u0eee\7=\2"+
		"\2\u0eed\u0eef\5\6\4\2\u0eee\u0eed\3\2\2\2\u0eef\u0ef0\3\2\2\2\u0ef0\u0eee"+
		"\3\2\2\2\u0ef0\u0ef1\3\2\2\2\u0ef1\u0ef8\3\2\2\2\u0ef2\u0ef4\7\u00f3\2"+
		"\2\u0ef3\u0ef5\5\6\4\2\u0ef4\u0ef3\3\2\2\2\u0ef5\u0ef6\3\2\2\2\u0ef6\u0ef4"+
		"\3\2\2\2\u0ef6\u0ef7\3\2\2\2\u0ef7\u0ef9\3\2\2\2\u0ef8\u0ef2\3\2\2\2\u0ef8"+
		"\u0ef9\3\2\2\2\u0ef9\u0f00\3\2\2\2\u0efa\u0efc\7\u00ce\2\2\u0efb\u0efd"+
		"\5\6\4\2\u0efc\u0efb\3\2\2\2\u0efd\u0efe\3\2\2\2\u0efe\u0efc\3\2\2\2\u0efe"+
		"\u0eff\3\2\2\2\u0eff\u0f01\3\2\2\2\u0f00\u0efa\3\2\2\2\u0f00\u0f01\3\2"+
		"\2\2\u0f01\u0f08\3\2\2\2\u0f02\u0f04\7\u010c\2\2\u0f03\u0f05\5\6\4\2\u0f04"+
		"\u0f03\3\2\2\2\u0f05\u0f06\3\2\2\2\u0f06\u0f04\3\2\2\2\u0f06\u0f07\3\2"+
		"\2\2\u0f07\u0f09\3\2\2\2\u0f08\u0f02\3\2\2\2\u0f08\u0f09\3\2\2\2\u0f09"+
		"\u0f0a\3\2\2\2\u0f0a\u0f0b\5\u0116\u008c\2\u0f0b\u0f4b\3\2\2\2\u0f0c\u0f0e"+
		"\7\u0178\2\2\u0f0d\u0f0f\5\6\4\2\u0f0e\u0f0d\3\2\2\2\u0f0f\u0f10\3\2\2"+
		"\2\u0f10\u0f0e\3\2\2\2\u0f10\u0f11\3\2\2\2\u0f11\u0f18\3\2\2\2\u0f12\u0f14"+
		"\7\u00ce\2\2\u0f13\u0f15\5\6\4\2\u0f14\u0f13\3\2\2\2\u0f15\u0f16\3\2\2"+
		"\2\u0f16\u0f14\3\2\2\2\u0f16\u0f17\3\2\2\2\u0f17\u0f19\3\2\2\2\u0f18\u0f12"+
		"\3\2\2\2\u0f18\u0f19\3\2\2\2\u0f19\u0f1a\3\2\2\2\u0f1a\u0f1b\5\u0114\u008b"+
		"\2\u0f1b\u0f4b\3\2\2\2\u0f1c\u0f1e\7(\2\2\u0f1d\u0f1f\5\6\4\2\u0f1e\u0f1d"+
		"\3\2\2\2\u0f1f\u0f20\3\2\2\2\u0f20\u0f1e\3\2\2\2\u0f20\u0f21\3\2\2\2\u0f21"+
		"\u0f28\3\2\2\2\u0f22\u0f24\7\u017c\2\2\u0f23\u0f25\5\6\4\2\u0f24\u0f23"+
		"\3\2\2\2\u0f25\u0f26\3\2\2\2\u0f26\u0f24\3\2\2\2\u0f26\u0f27\3\2\2\2\u0f27"+
		"\u0f29\3\2\2\2\u0f28\u0f22\3\2\2\2\u0f28\u0f29\3\2\2\2\u0f29\u0f2a\3\2"+
		"\2\2\u0f2a\u0f2b\7\u0184\2\2\u0f2b\u0f4b\3\2\2\2\u0f2c\u0f34\t\7\2\2\u0f2d"+
		"\u0f2f\5\6\4\2\u0f2e\u0f2d\3\2\2\2\u0f2f\u0f30\3\2\2\2\u0f30\u0f2e\3\2"+
		"\2\2\u0f30\u0f31\3\2\2\2\u0f31\u0f32\3\2\2\2\u0f32\u0f33\7\u0134\2\2\u0f33"+
		"\u0f35\3\2\2\2\u0f34\u0f2e\3\2\2\2\u0f34\u0f35\3\2\2\2\u0f35\u0f4b\3\2"+
		"\2\2\u0f36\u0f38\5\u00dan\2\u0f37\u0f39\5\6\4\2\u0f38\u0f37\3\2\2\2\u0f39"+
		"\u0f3a\3\2\2\2\u0f3a\u0f38\3\2\2\2\u0f3a\u0f3b\3\2\2\2\u0f3b\u0f48\3\2"+
		"\2\2\u0f3c\u0f49\5\u010e\u0088\2\u0f3d\u0f45\5\u0110\u0089\2\u0f3e\u0f40"+
		"\5\6\4\2\u0f3f\u0f3e\3\2\2\2\u0f40\u0f41\3\2\2\2\u0f41\u0f3f\3\2\2\2\u0f41"+
		"\u0f42\3\2\2\2\u0f42\u0f43\3\2\2\2\u0f43\u0f44\5\u0112\u008a\2\u0f44\u0f46"+
		"\3\2\2\2\u0f45\u0f3f\3\2\2\2\u0f45\u0f46\3\2\2\2\u0f46\u0f49\3\2\2\2\u0f47"+
		"\u0f49\5\u0112\u008a\2\u0f48\u0f3c\3\2\2\2\u0f48\u0f3d\3\2\2\2\u0f48\u0f47"+
		"\3\2\2\2\u0f49\u0f4b\3\2\2\2\u0f4a\u0e80\3\2\2\2\u0f4a\u0e88\3\2\2\2\u0f4a"+
		"\u0e98\3\2\2\2\u0f4a\u0ea8\3\2\2\2\u0f4a\u0ea9\3\2\2\2\u0f4a\u0eaa\3\2"+
		"\2\2\u0f4a\u0eb9\3\2\2\2\u0f4a\u0ebc\3\2\2\2\u0f4a\u0ebd\3\2\2\2\u0f4a"+
		"\u0ebe\3\2\2\2\u0f4a\u0ebf\3\2\2\2\u0f4a\u0ec0\3\2\2\2\u0f4a\u0ec8\3\2"+
		"\2\2\u0f4a\u0ec9\3\2\2\2\u0f4a\u0eca\3\2\2\2\u0f4a\u0ecb\3\2\2\2\u0f4a"+
		"\u0ecc\3\2\2\2\u0f4a\u0eec\3\2\2\2\u0f4a\u0f0c\3\2\2\2\u0f4a\u0f1c\3\2"+
		"\2\2\u0f4a\u0f2c\3\2\2\2\u0f4a\u0f36\3\2\2\2\u0f4b\u010d\3\2\2\2\u0f4c"+
		"\u0f4e\7\u0177\2\2\u0f4d\u0f4f\5\6\4\2\u0f4e\u0f4d\3\2\2\2\u0f4f\u0f50"+
		"\3\2\2\2\u0f50\u0f4e\3\2\2\2\u0f50\u0f51\3\2\2\2\u0f51\u0f52\3\2\2\2\u0f52"+
		"\u0f53\5\u0158\u00ad\2\u0f53\u010f\3\2\2\2\u0f54\u0f56\7\u00af\2\2\u0f55"+
		"\u0f57\5\6\4\2\u0f56\u0f55\3\2\2\2\u0f57\u0f58\3\2\2\2\u0f58\u0f56\3\2"+
		"\2\2\u0f58\u0f59\3\2\2\2\u0f59\u0f5c\3\2\2\2\u0f5a\u0f5d\5\u0158\u00ad"+
		"\2\u0f5b\u0f5d\5\u0114\u008b\2\u0f5c\u0f5a\3\2\2\2\u0f5c\u0f5b\3\2\2\2"+
		"\u0f5d\u0111\3\2\2\2\u0f5e\u0f60\7\u0168\2\2\u0f5f\u0f61\5\6\4\2\u0f60"+
		"\u0f5f\3\2\2\2\u0f61\u0f62\3\2\2\2\u0f62\u0f60\3\2\2\2\u0f62\u0f63\3\2"+
		"\2\2\u0f63\u0f64\3\2\2\2\u0f64\u0f65\5\u0158\u00ad\2\u0f65\u0113\3\2\2"+
		"\2\u0f66\u0f67\7\u01a0\2\2\u0f67\u0115\3\2\2\2\u0f68\u0f6b\5\u0158\u00ad"+
		"\2\u0f69\u0f6b\7\u01a1\2\2\u0f6a\u0f68\3\2\2\2\u0f6a\u0f69\3\2\2\2\u0f6b"+
		"\u0117\3\2\2\2\u0f6c\u0f6d\7\u01a1\2\2\u0f6d\u0119\3\2\2\2\u0f6e\u0f70"+
		"\7\u00c0\2\2\u0f6f\u0f71\5\6\4\2\u0f70\u0f6f\3\2\2\2\u0f71\u0f72\3\2\2"+
		"\2\u0f72\u0f70\3\2\2\2\u0f72\u0f73\3\2\2\2\u0f73\u0f74\3\2\2\2\u0f74\u0f78"+
		"\7s\2\2\u0f75\u0f77\5\6\4\2\u0f76\u0f75\3\2\2\2\u0f77\u0f7a\3\2\2\2\u0f78"+
		"\u0f76\3\2\2\2\u0f78\u0f79\3\2\2\2\u0f79\u0f7b\3\2\2\2\u0f7a\u0f78\3\2"+
		"\2\2\u0f7b\u0f7f\7\u019d\2\2\u0f7c\u0f7e\5\6\4\2\u0f7d\u0f7c\3\2\2\2\u0f7e"+
		"\u0f81\3\2\2\2\u0f7f\u0f7d\3\2\2\2\u0f7f\u0f80\3\2\2\2\u0f80\u0f85\3\2"+
		"\2\2\u0f81\u0f7f\3\2\2\2\u0f82\u0f84\5\u011c\u008f\2\u0f83\u0f82\3\2\2"+
		"\2\u0f84\u0f87\3\2\2\2\u0f85\u0f83\3\2\2\2\u0f85\u0f86\3\2\2\2\u0f86\u011b"+
		"\3\2\2\2\u0f87\u0f85\3\2\2\2\u0f88\u0f91\5\u011e\u0090\2\u0f89\u0f91\5"+
		"\u012a\u0096\2\u0f8a\u0f91\5\u012c\u0097\2\u0f8b\u0f91\5\u012e\u0098\2"+
		"\u0f8c\u0f91\5\u0130\u0099\2\u0f8d\u0f91\5\u0132\u009a\2\u0f8e\u0f91\5"+
		"\u0134\u009b\2\u0f8f\u0f91\5\6\4\2\u0f90\u0f88\3\2\2\2\u0f90\u0f89\3\2"+
		"\2\2\u0f90\u0f8a\3\2\2\2\u0f90\u0f8b\3\2\2\2\u0f90\u0f8c\3\2\2\2\u0f90"+
		"\u0f8d\3\2\2\2\u0f90\u0f8e\3\2\2\2\u0f90\u0f8f\3\2\2\2\u0f91\u011d\3\2"+
		"\2\2\u0f92\u0f96\7\u0116\2\2\u0f93\u0f95\5\6\4\2\u0f94\u0f93\3\2\2\2\u0f95"+
		"\u0f98\3\2\2\2\u0f96\u0f94\3\2\2\2\u0f96\u0f97\3\2\2\2\u0f97\u0f99\3\2"+
		"\2\2\u0f98\u0f96\3\2\2\2\u0f99\u0f9d\7\u019d\2\2\u0f9a\u0f9c\5\6\4\2\u0f9b"+
		"\u0f9a\3\2\2\2\u0f9c\u0f9f\3\2\2\2\u0f9d\u0f9b\3\2\2\2\u0f9d\u0f9e\3\2"+
		"\2\2\u0f9e\u0fa0\3\2\2\2\u0f9f\u0f9d\3\2\2\2\u0fa0\u0fa4\5\u0120\u0091"+
		"\2\u0fa1\u0fa3\5\6\4\2\u0fa2\u0fa1\3\2\2\2\u0fa3\u0fa6\3\2\2\2\u0fa4\u0fa2"+
		"\3\2\2\2\u0fa4\u0fa5\3\2\2\2\u0fa5\u0fa8\3\2\2\2\u0fa6\u0fa4\3\2\2\2\u0fa7"+
		"\u0fa9\5\u0122\u0092\2\u0fa8\u0fa7\3\2\2\2\u0fa8\u0fa9\3\2\2\2\u0fa9\u0fad"+
		"\3\2\2\2\u0faa\u0fac\5\6\4\2\u0fab\u0faa\3\2\2\2\u0fac\u0faf\3\2\2\2\u0fad"+
		"\u0fab\3\2\2\2\u0fad\u0fae\3\2\2\2\u0fae\u0fb1\3\2\2\2\u0faf\u0fad\3\2"+
		"\2\2\u0fb0\u0fb2\5\u0124\u0093\2\u0fb1\u0fb0\3\2\2\2\u0fb1\u0fb2\3\2\2"+
		"\2\u0fb2\u0fb6\3\2\2\2\u0fb3\u0fb5\5\6\4\2\u0fb4\u0fb3\3\2\2\2\u0fb5\u0fb8"+
		"\3\2\2\2\u0fb6\u0fb4\3\2\2\2\u0fb6\u0fb7\3\2\2\2\u0fb7\u0fb9\3\2\2\2\u0fb8"+
		"\u0fb6\3\2\2\2\u0fb9\u0fba\7\u019d\2\2\u0fba\u011f\3\2\2\2\u0fbb\u0fbc"+
		"\7\u01a3\2\2\u0fbc\u0121\3\2\2\2\u0fbd\u0fbf\7\u00ce\2\2\u0fbe\u0fc0\5"+
		"\6\4\2\u0fbf\u0fbe\3\2\2\2\u0fc0\u0fc1\3\2\2\2\u0fc1\u0fbf\3\2\2\2\u0fc1"+
		"\u0fc2\3\2\2\2\u0fc2\u0fc4\3\2\2\2\u0fc3\u0fbd\3\2\2\2\u0fc3\u0fc4\3\2"+
		"\2\2\u0fc4\u0fc5\3\2\2\2\u0fc5\u0fcd\t\24\2\2\u0fc6\u0fc8\5\6\4\2\u0fc7"+
		"\u0fc6\3\2\2\2\u0fc8\u0fc9\3\2\2\2\u0fc9\u0fc7\3\2\2\2\u0fc9\u0fca\3\2"+
		"\2\2\u0fca\u0fcb\3\2\2\2\u0fcb\u0fcc\7\u0115\2\2\u0fcc\u0fce\3\2\2\2\u0fcd"+
		"\u0fc7\3\2\2\2\u0fcd\u0fce\3\2\2\2\u0fce\u0123\3\2\2\2\u0fcf\u0fd1\7\u017e"+
		"\2\2\u0fd0\u0fd2\5\6\4\2\u0fd1\u0fd0\3\2\2\2\u0fd2\u0fd3\3\2\2\2\u0fd3"+
		"\u0fd1\3\2\2\2\u0fd3\u0fd4\3\2\2\2\u0fd4\u0fd6\3\2\2\2\u0fd5\u0fcf\3\2"+
		"\2\2\u0fd5\u0fd6\3\2\2\2\u0fd6\u0fd7\3\2\2\2\u0fd7\u0fd9\7\u00be\2\2\u0fd8"+
		"\u0fda\5\6\4\2\u0fd9\u0fd8\3\2\2\2\u0fda\u0fdb\3\2\2\2\u0fdb\u0fd9\3\2"+
		"\2\2\u0fdb\u0fdc\3\2\2\2\u0fdc\u0fdd\3\2\2\2\u0fdd\u0fde\5\u0126\u0094"+
		"\2\u0fde\u0125\3\2\2\2\u0fdf\u0fe0\7\u01a0\2\2\u0fe0\u0127\3\2\2\2\u0fe1"+
		"\u0fe5\7\u01a4\2\2\u0fe2\u0fe4\n\2\2\2\u0fe3\u0fe2\3\2\2\2\u0fe4\u0fe7"+
		"\3\2\2\2\u0fe5\u0fe3\3\2\2\2\u0fe5\u0fe6\3\2\2\2\u0fe6\u0fe8\3\2\2\2\u0fe7"+
		"\u0fe5\3\2\2\2\u0fe8\u0feb\7\u01a6\2\2\u0fe9\u0feb\5\n\6\2\u0fea\u0fe1"+
		"\3\2\2\2\u0fea\u0fe9\3\2\2\2\u0feb\u0129\3\2\2\2\u0fec\u0ff0\7\34\2\2"+
		"\u0fed\u0fef\5\6\4\2\u0fee\u0fed\3\2\2\2\u0fef\u0ff2\3\2\2\2\u0ff0\u0fee"+
		"\3\2\2\2\u0ff0\u0ff1\3\2\2\2\u0ff1\u0ff3\3\2\2\2\u0ff2\u0ff0\3\2\2\2\u0ff3"+
		"\u0ff7\7\u019d\2\2\u0ff4\u0ff6\n\2\2\2\u0ff5\u0ff4\3\2\2\2\u0ff6\u0ff9"+
		"\3\2\2\2\u0ff7\u0ff5\3\2\2\2\u0ff7\u0ff8\3\2\2\2\u0ff8\u0ffa\3\2\2\2\u0ff9"+
		"\u0ff7\3\2\2\2\u0ffa\u0ffe\7\u01a6\2\2\u0ffb\u0ffd\5\u0128\u0095\2\u0ffc"+
		"\u0ffb\3\2\2\2\u0ffd\u1000\3\2\2\2\u0ffe\u0ffc\3\2\2\2\u0ffe\u0fff\3\2"+
		"\2\2\u0fff\u012b\3\2\2\2\u1000\u0ffe\3\2\2\2\u1001\u1005\7\u00cc\2\2\u1002"+
		"\u1004\5\6\4\2\u1003\u1002\3\2\2\2\u1004\u1007\3\2\2\2\u1005\u1003\3\2"+
		"\2\2\u1005\u1006\3\2\2\2\u1006\u1008\3\2\2\2\u1007\u1005\3\2\2\2\u1008"+
		"\u100c\7\u019d\2\2\u1009\u100b\n\2\2\2\u100a\u1009\3\2\2\2\u100b\u100e"+
		"\3\2\2\2\u100c\u100a\3\2\2\2\u100c\u100d\3\2\2\2\u100d\u100f\3\2\2\2\u100e"+
		"\u100c\3\2\2\2\u100f\u1013\7\u01a6\2\2\u1010\u1012\5\u0128\u0095\2\u1011"+
		"\u1010\3\2\2\2\u1012\u1015\3\2\2\2\u1013\u1011\3\2\2\2\u1013\u1014\3\2"+
		"\2\2\u1014\u012d\3\2\2\2\u1015\u1013\3\2\2\2\u1016\u101a\7a\2\2\u1017"+
		"\u1019\5\6\4\2\u1018\u1017\3\2\2\2\u1019\u101c\3\2\2\2\u101a\u1018\3\2"+
		"\2\2\u101a\u101b\3\2\2\2\u101b\u101d\3\2\2\2\u101c\u101a\3\2\2\2\u101d"+
		"\u1021\7\u019d\2\2\u101e\u1020\n\2\2\2\u101f\u101e\3\2\2\2\u1020\u1023"+
		"\3\2\2\2\u1021\u101f\3\2\2\2\u1021\u1022\3\2\2\2\u1022\u1024\3\2\2\2\u1023"+
		"\u1021\3\2\2\2\u1024\u1028\7\u01a6\2\2\u1025\u1027\5\u0128\u0095\2\u1026"+
		"\u1025\3\2\2\2\u1027\u102a\3\2\2\2\u1028\u1026\3\2\2\2\u1028\u1029\3\2"+
		"\2\2\u1029\u012f\3\2\2\2\u102a\u1028\3\2\2\2\u102b\u102f\7`\2\2\u102c"+
		"\u102e\5\6\4\2\u102d\u102c\3\2\2\2\u102e\u1031\3\2\2\2\u102f\u102d\3\2"+
		"\2\2\u102f\u1030\3\2\2\2\u1030\u1032\3\2\2\2\u1031\u102f\3\2\2\2\u1032"+
		"\u1036\7\u019d\2\2\u1033\u1035\n\2\2\2\u1034\u1033\3\2\2\2\u1035\u1038"+
		"\3\2\2\2\u1036\u1034\3\2\2\2\u1036\u1037\3\2\2\2\u1037\u1039\3\2\2\2\u1038"+
		"\u1036\3\2\2\2\u1039\u103d\7\u01a6\2\2\u103a\u103c\5\u0128\u0095\2\u103b"+
		"\u103a\3\2\2\2\u103c\u103f\3\2\2\2\u103d\u103b\3\2\2\2\u103d\u103e\3\2"+
		"\2\2\u103e\u0131\3\2\2\2\u103f\u103d\3\2\2\2\u1040\u1044\7\u013c\2\2\u1041"+
		"\u1043\5\6\4\2\u1042\u1041\3\2\2\2\u1043\u1046\3\2\2\2\u1044\u1042\3\2"+
		"\2\2\u1044\u1045\3\2\2\2\u1045\u1047\3\2\2\2\u1046\u1044\3\2\2\2\u1047"+
		"\u104b\7\u019d\2\2\u1048\u104a\n\2\2\2\u1049\u1048\3\2\2\2\u104a\u104d"+
		"\3\2\2\2\u104b\u1049\3\2\2\2\u104b\u104c\3\2\2\2\u104c\u104e\3\2\2\2\u104d"+
		"\u104b\3\2\2\2\u104e\u1052\7\u01a6\2\2\u104f\u1051\5\u0128\u0095\2\u1050"+
		"\u104f\3\2\2\2\u1051\u1054\3\2\2\2\u1052\u1050\3\2\2\2\u1052\u1053\3\2"+
		"\2\2\u1053\u0133\3\2\2\2\u1054\u1052\3\2\2\2\u1055\u1059\7\u00fd\2\2\u1056"+
		"\u1058\5\6\4\2\u1057\u1056\3\2\2\2\u1058\u105b\3\2\2\2\u1059\u1057";
	private static final String _serializedATNSegment2 =
		"\3\2\2\2\u1059\u105a\3\2\2\2\u105a\u105c\3\2\2\2\u105b\u1059\3\2\2\2\u105c"+
		"\u1060\7\u019d\2\2\u105d\u105f\5\6\4\2\u105e\u105d\3\2\2\2\u105f\u1062"+
		"\3\2\2\2\u1060\u105e\3\2\2\2\u1060\u1061\3\2\2\2\u1061\u1064\3\2\2\2\u1062"+
		"\u1060\3\2\2\2\u1063\u1065\5\u0136\u009c\2\u1064\u1063\3\2\2\2\u1064\u1065"+
		"\3\2\2\2\u1065\u1069\3\2\2\2\u1066\u1068\5\6\4\2\u1067\u1066\3\2\2\2\u1068"+
		"\u106b\3\2\2\2\u1069\u1067\3\2\2\2\u1069\u106a\3\2\2\2\u106a\u106d\3\2"+
		"\2\2\u106b\u1069\3\2\2\2\u106c\u106e\7\u019d\2\2\u106d\u106c\3\2\2\2\u106d"+
		"\u106e\3\2\2\2\u106e\u0135\3\2\2\2\u106f\u1071\7\27\2\2\u1070\u1072\5"+
		"\6\4\2\u1071\u1070\3\2\2\2\u1072\u1073\3\2\2\2\u1073\u1071\3\2\2\2\u1073"+
		"\u1074\3\2\2\2\u1074\u107b\3\2\2\2\u1075\u1077\7\u00ce\2\2\u1076\u1078"+
		"\5\6\4\2\u1077\u1076\3\2\2\2\u1078\u1079\3\2\2\2\u1079\u1077\3\2\2\2\u1079"+
		"\u107a\3\2\2\2\u107a\u107c\3\2\2\2\u107b\u1075\3\2\2\2\u107b\u107c\3\2"+
		"\2\2\u107c\u107d\3\2\2\2\u107d\u1081\t\25\2\2\u107e\u1080\5\6\4\2\u107f"+
		"\u107e\3\2\2\2\u1080\u1083\3\2\2\2\u1081\u107f\3\2\2\2\u1081\u1082\3\2"+
		"\2\2\u1082\u1084\3\2\2\2\u1083\u1081\3\2\2\2\u1084\u1085\7\u019d\2\2\u1085"+
		"\u0137\3\2\2\2\u1086\u1088\7\u0090\2\2\u1087\u1089\5\6\4\2\u1088\u1087"+
		"\3\2\2\2\u1089\u108a\3\2\2\2\u108a\u1088\3\2\2\2\u108a\u108b\3\2\2\2\u108b"+
		"\u108c\3\2\2\2\u108c\u1090\7s\2\2\u108d\u108f\5\6\4\2\u108e\u108d\3\2"+
		"\2\2\u108f\u1092\3\2\2\2\u1090\u108e\3\2\2\2\u1090\u1091\3\2\2\2\u1091"+
		"\u1093\3\2\2\2\u1092\u1090\3\2\2\2\u1093\u1097\7\u019d\2\2\u1094\u1096"+
		"\5\6\4\2\u1095\u1094\3\2\2\2\u1096\u1099\3\2\2\2\u1097\u1095\3\2\2\2\u1097"+
		"\u1098\3\2\2\2\u1098\u109b\3\2\2\2\u1099\u1097\3\2\2\2\u109a\u109c\5\u013a"+
		"\u009e\2\u109b\u109a\3\2\2\2\u109b\u109c\3\2\2\2\u109c\u109e\3\2\2\2\u109d"+
		"\u109f\5\u013c\u009f\2\u109e\u109d\3\2\2\2\u109e\u109f\3\2\2\2\u109f\u0139"+
		"\3\2\2\2\u10a0\u10a2\7O\2\2\u10a1\u10a3\5\6\4\2\u10a2\u10a1\3\2\2\2\u10a3"+
		"\u10a4\3\2\2\2\u10a4\u10a2\3\2\2\2\u10a4\u10a5\3\2\2\2\u10a5\u10a6\3\2"+
		"\2\2\u10a6\u10aa\7\u013a\2\2\u10a7\u10a9\5\6\4\2\u10a8\u10a7\3\2\2\2\u10a9"+
		"\u10ac\3\2\2\2\u10aa\u10a8\3\2\2\2\u10aa\u10ab\3\2\2\2\u10ab\u10ad\3\2"+
		"\2\2\u10ac\u10aa\3\2\2\2\u10ad\u10b1\7\u019d\2\2\u10ae\u10b0\5\6\4\2\u10af"+
		"\u10ae\3\2\2\2\u10b0\u10b3\3\2\2\2\u10b1\u10af\3\2\2\2\u10b1\u10b2\3\2"+
		"\2\2\u10b2\u10b5\3\2\2\2\u10b3\u10b1\3\2\2\2\u10b4\u10b6\5\u013e\u00a0"+
		"\2\u10b5\u10b4\3\2\2\2\u10b5\u10b6\3\2\2\2\u10b6\u10ba\3\2\2\2\u10b7\u10b9"+
		"\5\6\4\2\u10b8\u10b7\3\2\2\2\u10b9\u10bc\3\2\2\2\u10ba\u10b8\3\2\2\2\u10ba"+
		"\u10bb\3\2\2\2\u10bb\u10be\3\2\2\2\u10bc\u10ba\3\2\2\2\u10bd\u10bf\5\u0144"+
		"\u00a3\2\u10be\u10bd\3\2\2\2\u10be\u10bf\3\2\2\2\u10bf\u10c3\3\2\2\2\u10c0"+
		"\u10c2\5\6\4\2\u10c1\u10c0\3\2\2\2\u10c2\u10c5\3\2\2\2\u10c3\u10c1\3\2"+
		"\2\2\u10c3\u10c4\3\2\2\2\u10c4\u10c7\3\2\2\2\u10c5\u10c3\3\2\2\2\u10c6"+
		"\u10c8\5\u0154\u00ab\2\u10c7\u10c6\3\2\2\2\u10c7\u10c8\3\2\2\2\u10c8\u10cc"+
		"\3\2\2\2\u10c9\u10cb\5\6\4\2\u10ca\u10c9\3\2\2\2\u10cb\u10ce\3\2\2\2\u10cc"+
		"\u10ca\3\2\2\2\u10cc\u10cd\3\2\2\2\u10cd\u013b\3\2\2\2\u10ce\u10cc\3\2"+
		"\2\2\u10cf\u10d1\7\u00ca\2\2\u10d0\u10d2\5\6\4\2\u10d1\u10d0\3\2\2\2\u10d2"+
		"\u10d3\3\2\2\2\u10d3\u10d1\3\2\2\2\u10d3\u10d4\3\2\2\2\u10d4\u10d5\3\2"+
		"\2\2\u10d5\u10d9\7\u013a\2\2\u10d6\u10d8\5\6\4\2\u10d7\u10d6\3\2\2\2\u10d8"+
		"\u10db\3\2\2\2\u10d9\u10d7\3\2\2\2\u10d9\u10da\3\2\2\2\u10da\u10dc\3\2"+
		"\2\2\u10db\u10d9\3\2\2\2\u10dc\u10e0\7\u019d\2\2\u10dd\u10df\5\6\4\2\u10de"+
		"\u10dd\3\2\2\2\u10df\u10e2\3\2\2\2\u10e0\u10de\3\2\2\2\u10e0\u10e1\3\2"+
		"\2\2\u10e1\u10e4\3\2\2\2\u10e2\u10e0\3\2\2\2\u10e3\u10e5\5\u0196\u00cc"+
		"\2\u10e4\u10e3\3\2\2\2\u10e4\u10e5\3\2\2\2\u10e5\u10e7\3\2\2\2\u10e6\u10e8"+
		"\5\u01c4\u00e3\2\u10e7\u10e6\3\2\2\2\u10e7\u10e8\3\2\2\2\u10e8\u013d\3"+
		"\2\2\2\u10e9\u10ed\7\u0149\2\2\u10ea\u10ec\5\6\4\2\u10eb\u10ea\3\2\2\2"+
		"\u10ec\u10ef\3\2\2\2\u10ed\u10eb\3\2\2\2\u10ed\u10ee\3\2\2\2\u10ee\u10f0"+
		"\3\2\2\2\u10ef\u10ed\3\2\2\2\u10f0\u10f4\7\u019d\2\2\u10f1\u10f3\5\6\4"+
		"\2\u10f2\u10f1\3\2\2\2\u10f3\u10f6\3\2\2\2\u10f4\u10f2\3\2\2\2\u10f4\u10f5"+
		"\3\2\2\2\u10f5\u1109\3\2\2\2\u10f6\u10f4\3\2\2\2\u10f7\u10ff\5\u0140\u00a1"+
		"\2\u10f8\u10fa\5\6\4\2\u10f9\u10f8\3\2\2\2\u10fa\u10fb\3\2\2\2\u10fb\u10f9"+
		"\3\2\2\2\u10fb\u10fc\3\2\2\2\u10fc\u10fd\3\2\2\2\u10fd\u10fe\5\u0142\u00a2"+
		"\2\u10fe\u1100\3\2\2\2\u10ff\u10f9\3\2\2\2\u10ff\u1100\3\2\2\2\u1100\u1104"+
		"\3\2\2\2\u1101\u1103\5\6\4\2\u1102\u1101\3\2\2\2\u1103\u1106\3\2\2\2\u1104"+
		"\u1102\3\2\2\2\u1104\u1105\3\2\2\2\u1105\u1107\3\2\2\2\u1106\u1104\3\2"+
		"\2\2\u1107\u1108\7\u019d\2\2\u1108\u110a\3\2\2\2\u1109\u10f7\3\2\2\2\u1109"+
		"\u110a\3\2\2\2\u110a\u013f\3\2\2\2\u110b\u110c\t\26\2\2\u110c\u0141\3"+
		"\2\2\2\u110d\u110f\7\u017e\2\2\u110e\u1110\5\6\4\2\u110f\u110e\3\2\2\2"+
		"\u1110\u1111\3\2\2\2\u1111\u110f\3\2\2\2\u1111\u1112\3\2\2\2\u1112\u1114"+
		"\3\2\2\2\u1113\u110d\3\2\2\2\u1113\u1114\3\2\2\2\u1114\u1115\3\2\2\2\u1115"+
		"\u1117\7e\2\2\u1116\u1118\5\6\4\2\u1117\u1116\3\2\2\2\u1118\u1119\3\2"+
		"\2\2\u1119\u1117\3\2\2\2\u1119\u111a\3\2\2\2\u111a\u111b\3\2\2\2\u111b"+
		"\u111c\7\u00e9\2\2\u111c\u0143\3\2\2\2\u111d\u1121\7\u00f5\2\2\u111e\u1120"+
		"\5\6\4\2\u111f\u111e\3\2\2\2\u1120\u1123\3\2\2\2\u1121\u111f\3\2\2\2\u1121"+
		"\u1122\3\2\2\2\u1122\u1124\3\2\2\2\u1123\u1121\3\2\2\2\u1124\u1128\7\u019d"+
		"\2\2\u1125\u1127\5\6\4\2\u1126\u1125\3\2\2\2\u1127\u112a\3\2\2\2\u1128"+
		"\u1126\3\2\2\2\u1128\u1129\3\2\2\2\u1129\u114f\3\2\2\2\u112a\u1128\3\2"+
		"\2\2\u112b\u1133\5\u0140\u00a1\2\u112c\u112e\5\6\4\2\u112d\u112c\3\2\2"+
		"\2\u112e\u112f\3\2\2\2\u112f\u112d\3\2\2\2\u112f\u1130\3\2\2\2\u1130\u1131"+
		"\3\2\2\2\u1131\u1132\5\u0146\u00a4\2\u1132\u1134\3\2\2\2\u1133\u112d\3"+
		"\2\2\2\u1133\u1134\3\2\2\2\u1134\u113c\3\2\2\2\u1135\u1137\5\6\4\2\u1136"+
		"\u1135\3\2\2\2\u1137\u1138\3\2\2\2\u1138\u1136\3\2\2\2\u1138\u1139\3\2"+
		"\2\2\u1139\u113a\3\2\2\2\u113a\u113b\5\u014c\u00a7\2\u113b\u113d\3\2\2"+
		"\2\u113c\u1136\3\2\2\2\u113c\u113d\3\2\2\2\u113d\u1145\3\2\2\2\u113e\u1140"+
		"\5\6\4\2\u113f\u113e\3\2\2\2\u1140\u1141\3\2\2\2\u1141\u113f\3\2\2\2\u1141"+
		"\u1142\3\2\2\2\u1142\u1143\3\2\2\2\u1143\u1144\5\u0150\u00a9\2\u1144\u1146"+
		"\3\2\2\2\u1145\u113f\3\2\2\2\u1145\u1146\3\2\2\2\u1146\u114a\3\2\2\2\u1147"+
		"\u1149\5\6\4\2\u1148\u1147\3\2\2\2\u1149\u114c\3\2\2\2\u114a\u1148\3\2"+
		"\2\2\u114a\u114b\3\2\2\2\u114b\u114d\3\2\2\2\u114c\u114a\3\2\2\2\u114d"+
		"\u114e\7\u019d\2\2\u114e\u1150\3\2\2\2\u114f\u112b\3\2\2\2\u114f\u1150"+
		"\3\2\2\2\u1150\u0145\3\2\2\2\u1151\u1159\7\u00e7\2\2\u1152\u1154\5\6\4"+
		"\2\u1153\u1152\3\2\2\2\u1154\u1155\3\2\2\2\u1155\u1153\3\2\2\2\u1155\u1156"+
		"\3\2\2\2\u1156\u1157\3\2\2\2\u1157\u1158\7\u0145\2\2\u1158\u115a\3\2\2"+
		"\2\u1159\u1153\3\2\2\2\u1159\u115a\3\2\2\2\u115a\u115c\3\2\2\2\u115b\u115d"+
		"\5\6\4\2\u115c\u115b\3\2\2\2\u115d\u115e\3\2\2\2\u115e\u115c\3\2\2\2\u115e"+
		"\u115f\3\2\2\2\u115f\u1160\3\2\2\2\u1160\u1162\5\u0148\u00a5\2\u1161\u1163"+
		"\5\6\4\2\u1162\u1161\3\2\2\2\u1163\u1164\3\2\2\2\u1164\u1162\3\2\2\2\u1164"+
		"\u1165\3\2\2\2\u1165\u1166\3\2\2\2\u1166\u1167\5\u014a\u00a6\2\u1167\u0147"+
		"\3\2\2\2\u1168\u1169\7\u01a1\2\2\u1169\u0149\3\2\2\2\u116a\u116b\t\27"+
		"\2\2\u116b\u014b\3\2\2\2\u116c\u116e\7\u0115\2\2\u116d\u116f\5\6\4\2\u116e"+
		"\u116d\3\2\2\2\u116f\u1170\3\2\2\2\u1170\u116e\3\2\2\2\u1170\u1171\3\2"+
		"\2\2\u1171\u1173\3\2\2\2\u1172\u116c\3\2\2\2\u1172\u1173\3\2\2\2\u1173"+
		"\u117a\3\2\2\2\u1174\u1176\7<\2\2\u1175\u1177\5\6\4\2\u1176\u1175\3\2"+
		"\2\2\u1177\u1178\3\2\2\2\u1178\u1176\3\2\2\2\u1178\u1179\3\2\2\2\u1179"+
		"\u117b\3\2\2\2\u117a\u1174\3\2\2\2\u117a\u117b\3\2\2\2\u117b\u117c\3\2"+
		"\2\2\u117c\u1184\7\u0140\2\2\u117d\u117f\5\6\4\2\u117e\u117d\3\2\2\2\u117f"+
		"\u1180\3\2\2\2\u1180\u117e\3\2\2\2\u1180\u1181\3\2\2\2\u1181\u1182\3\2"+
		"\2\2\u1182\u1183\7\u00ce\2\2\u1183\u1185\3\2\2\2\u1184\u117e\3\2\2\2\u1184"+
		"\u1185\3\2\2\2\u1185\u1187\3\2\2\2\u1186\u1188\5\6\4\2\u1187\u1186\3\2"+
		"\2\2\u1188\u1189\3\2\2\2\u1189\u1187\3\2\2\2\u1189\u118a\3\2\2\2\u118a"+
		"\u118b\3\2\2\2\u118b\u118c\5\u014e\u00a8\2\u118c\u014d\3\2\2\2\u118d\u118e"+
		"\7\u01a3\2\2\u118e\u014f\3\2\2\2\u118f\u1197\7\u013d\2\2\u1190\u1192\5"+
		"\6\4\2\u1191\u1190\3\2\2\2\u1192\u1193\3\2\2\2\u1193\u1191\3\2\2\2\u1193"+
		"\u1194\3\2\2\2\u1194\u1195\3\2\2\2\u1195\u1196\7\u00ce\2\2\u1196\u1198"+
		"\3\2\2\2\u1197\u1191\3\2\2\2\u1197\u1198\3\2\2\2\u1198\u1199\3\2\2\2\u1199"+
		"\u119a\5\u0152\u00aa\2\u119a\u0151\3\2\2\2\u119b\u119c\7\u01a1\2\2\u119c"+
		"\u0153\3\2\2\2\u119d\u11a1\7\u014c\2\2\u119e\u11a0\5\6\4\2\u119f\u119e"+
		"\3\2\2\2\u11a0\u11a3\3\2\2\2\u11a1\u119f\3\2\2\2\u11a1\u11a2\3\2\2\2\u11a2"+
		"\u11a4\3\2\2\2\u11a3\u11a1\3\2\2\2\u11a4\u11a8\7\u019d\2\2\u11a5\u11a7"+
		"\5\6\4\2\u11a6\u11a5\3\2\2\2\u11a7\u11aa\3\2\2\2\u11a8\u11a6\3\2\2\2\u11a8"+
		"\u11a9\3\2\2\2\u11a9\u11b8\3\2\2\2\u11aa\u11a8\3\2\2\2\u11ab\u11af\5\u0156"+
		"\u00ac\2\u11ac\u11ae\5\6\4\2\u11ad\u11ac\3\2\2\2\u11ae\u11b1\3\2\2\2\u11af"+
		"\u11ad\3\2\2\2\u11af\u11b0\3\2\2\2\u11b0\u11b3\3\2\2\2\u11b1\u11af\3\2"+
		"\2\2\u11b2\u11ab\3\2\2\2\u11b3\u11b4\3\2\2\2\u11b4\u11b2\3\2\2\2\u11b4"+
		"\u11b5\3\2\2\2\u11b5\u11b6\3\2\2\2\u11b6\u11b7\7\u019d\2\2\u11b7\u11b9"+
		"\3\2\2\2\u11b8\u11b2\3\2\2\2\u11b8\u11b9\3\2\2\2\u11b9\u0155\3\2\2\2\u11ba"+
		"\u11bc\5\u018e\u00c8\2\u11bb\u11bd\5\6\4\2\u11bc\u11bb\3\2\2\2\u11bd\u11be"+
		"\3\2\2\2\u11be\u11bc\3\2\2\2\u11be\u11bf\3\2\2\2\u11bf\u11c6\3\2\2\2\u11c0"+
		"\u11c2\7\u00ce\2\2\u11c1\u11c3\5\6\4\2\u11c2\u11c1\3\2\2\2\u11c3\u11c4"+
		"\3\2\2\2\u11c4\u11c2\3\2\2\2\u11c4\u11c5\3\2\2\2\u11c5\u11c7\3\2\2\2\u11c6"+
		"\u11c0\3\2\2\2\u11c6\u11c7\3\2\2\2\u11c7\u11c8\3\2\2\2\u11c8\u11c9\5\u0190"+
		"\u00c9\2\u11c9\u1226\3\2\2\2\u11ca\u11cc\5\u0192\u00ca\2\u11cb\u11cd\5"+
		"\6\4\2\u11cc\u11cb\3\2\2\2\u11cd\u11ce\3\2\2\2\u11ce\u11cc\3\2\2\2\u11ce"+
		"\u11cf\3\2\2\2\u11cf\u11d6\3\2\2\2\u11d0\u11d2\7\u00ce\2\2\u11d1\u11d3"+
		"\5\6\4\2\u11d2\u11d1\3\2\2\2\u11d3\u11d4\3\2\2\2\u11d4\u11d2\3\2\2\2\u11d4"+
		"\u11d5\3\2\2\2\u11d5\u11d7\3\2\2\2\u11d6\u11d0\3\2\2\2\u11d6\u11d7\3\2"+
		"\2\2\u11d7\u11d8\3\2\2\2\u11d8\u11d9\5\u0194\u00cb\2\u11d9\u1226\3\2\2"+
		"\2\u11da\u11dc\7/\2\2\u11db\u11dd\5\6\4\2\u11dc\u11db\3\2\2\2\u11dd\u11de"+
		"\3\2\2\2\u11de\u11dc\3\2\2\2\u11de\u11df\3\2\2\2\u11df\u11e6\3\2\2\2\u11e0"+
		"\u11e2\7\u00ce\2\2\u11e1\u11e3\5\6\4\2\u11e2\u11e1\3\2\2\2\u11e3\u11e4"+
		"\3\2\2\2\u11e4\u11e2\3\2\2\2\u11e4\u11e5\3\2\2\2\u11e5\u11e7\3\2\2\2\u11e6"+
		"\u11e0\3\2\2\2\u11e6\u11e7\3\2\2\2\u11e7\u11e8\3\2\2\2\u11e8\u11e9\5\u018c"+
		"\u00c7\2\u11e9\u1226\3\2\2\2\u11ea\u1226\5\u0180\u00c1\2\u11eb\u1226\5"+
		"\u0174\u00bb\2\u11ec\u1226\5\u0168\u00b5\2\u11ed\u1226\5\u0162\u00b2\2"+
		"\u11ee\u1226\5\u015a\u00ae\2\u11ef\u11f1\7f\2\2\u11f0\u11f2\5\6\4\2\u11f1"+
		"\u11f0\3\2\2\2\u11f2\u11f3\3\2\2\2\u11f3\u11f1\3\2\2\2\u11f3\u11f4\3\2"+
		"\2\2\u11f4\u11fb\3\2\2\2\u11f5\u11f7\7\u00ce\2\2\u11f6\u11f8\5\6\4\2\u11f7"+
		"\u11f6\3\2\2\2\u11f8\u11f9\3\2\2\2\u11f9\u11f7\3\2\2\2\u11f9\u11fa\3\2"+
		"\2\2\u11fa\u11fc\3\2\2\2\u11fb\u11f5\3\2\2\2\u11fb\u11fc\3\2\2\2\u11fc"+
		"\u11fd\3\2\2\2\u11fd\u11fe\7>\2\2\u11fe\u1226\3\2\2\2\u11ff\u1201\7]\2"+
		"\2\u1200\u1202\5\6\4\2\u1201\u1200\3\2\2\2\u1202\u1203\3\2\2\2\u1203\u1201"+
		"\3\2\2\2\u1203\u1204\3\2\2\2\u1204\u120b\3\2\2\2\u1205\u1207\7\u00ce\2"+
		"\2\u1206\u1208\5\6\4\2\u1207\u1206\3\2\2\2\u1208\u1209\3\2\2\2\u1209\u1207"+
		"\3\2\2\2\u1209\u120a\3\2\2\2\u120a\u120c\3\2\2\2\u120b\u1205\3\2\2\2\u120b"+
		"\u120c\3\2\2\2\u120c\u120d\3\2\2\2\u120d\u120e\5\u0158\u00ad\2\u120e\u1226"+
		"\3\2\2\2\u120f\u1211\7Z\2\2\u1210\u1212\5\6\4\2\u1211\u1210\3\2\2\2\u1212"+
		"\u1213\3\2\2\2\u1213\u1211\3\2\2\2\u1213\u1214\3\2\2\2\u1214\u1215\3\2"+
		"\2\2\u1215\u1217\7\u0151\2\2\u1216\u1218\5\6\4\2\u1217\u1216\3\2\2\2\u1218"+
		"\u1219\3\2\2\2\u1219\u1217\3\2\2\2\u1219\u121a\3\2\2\2\u121a\u1221\3\2"+
		"\2\2\u121b\u121d\7\u00ce\2\2\u121c\u121e\5\6\4\2\u121d\u121c\3\2\2\2\u121e"+
		"\u121f\3\2\2\2\u121f\u121d\3\2\2\2\u121f\u1220\3\2\2\2\u1220\u1222\3\2"+
		"\2\2\u1221\u121b\3\2\2\2\u1221\u1222\3\2\2\2\u1222\u1223\3\2\2\2\u1223"+
		"\u1224\5\u0158\u00ad\2\u1224\u1226\3\2\2\2\u1225\u11ba\3\2\2\2\u1225\u11ca"+
		"\3\2\2\2\u1225\u11da\3\2\2\2\u1225\u11ea\3\2\2\2\u1225\u11eb\3\2\2\2\u1225"+
		"\u11ec\3\2\2\2\u1225\u11ed\3\2\2\2\u1225\u11ee\3\2\2\2\u1225\u11ef\3\2"+
		"\2\2\u1225\u11ff\3\2\2\2\u1225\u120f\3\2\2\2\u1226\u0157\3\2\2\2\u1227"+
		"\u1237\7\u01a3\2\2\u1228\u122a\5\6\4\2\u1229\u1228\3\2\2\2\u122a\u122b"+
		"\3\2\2\2\u122b\u1229\3\2\2\2\u122b\u122c\3\2\2\2\u122c\u122d\3\2\2\2\u122d"+
		"\u122f\t\30\2\2\u122e\u1230\5\6\4\2\u122f\u122e\3\2\2\2\u1230\u1231\3"+
		"\2\2\2\u1231\u122f\3\2\2\2\u1231\u1232\3\2\2\2\u1232\u1233\3\2\2\2\u1233"+
		"\u1234\7\u01a3\2\2\u1234\u1236\3\2\2\2\u1235\u1229\3\2\2\2\u1236\u1239"+
		"\3\2\2\2\u1237\u1235\3\2\2\2\u1237\u1238\3\2\2\2\u1238\u0159\3\2\2\2\u1239"+
		"\u1237\3\2\2\2\u123a\u123c\7[\2\2\u123b\u123d\5\6\4\2\u123c\u123b\3\2"+
		"\2\2\u123d\u123e\3\2\2\2\u123e\u123c\3\2\2\2\u123e\u123f\3\2\2\2\u123f"+
		"\u1246\3\2\2\2\u1240\u1242\7\u0143\2\2\u1241\u1243\5\6\4\2\u1242\u1241"+
		"\3\2\2\2\u1243\u1244\3\2\2\2\u1244\u1242\3\2\2\2\u1244\u1245\3\2\2\2\u1245"+
		"\u1247\3\2\2\2\u1246\u1240\3\2\2\2\u1246\u1247\3\2\2\2\u1247\u124e\3\2"+
		"\2\2\u1248\u124a\7\u00ce\2\2\u1249\u124b\5\6\4\2\u124a\u1249\3\2\2\2\u124b"+
		"\u124c\3\2\2\2\u124c\u124a\3\2\2\2\u124c\u124d\3\2\2\2\u124d\u124f\3\2"+
		"\2\2\u124e\u1248\3\2\2\2\u124e\u124f\3\2\2\2\u124f\u1250\3\2\2\2\u1250"+
		"\u1251\5\u015c\u00af\2\u1251\u015b\3\2\2\2\u1252\u1259\5\u015e\u00b0\2"+
		"\u1253\u1255\7\u017e\2\2\u1254\u1256\5\6\4\2\u1255\u1254\3\2\2\2\u1256"+
		"\u1257\3\2\2\2\u1257\u1255\3\2\2\2\u1257\u1258\3\2\2\2\u1258\u125a\3\2"+
		"\2\2\u1259\u1253\3\2\2\2\u1259\u125a\3\2\2\2\u125a\u125b\3\2\2\2\u125b"+
		"\u125d\7\u010b\2\2\u125c\u125e\5\6\4\2\u125d\u125c\3\2\2\2\u125e\u125f"+
		"\3\2\2\2\u125f\u125d\3\2\2\2\u125f\u1260\3\2\2\2\u1260\u1261\3\2\2\2\u1261"+
		"\u1263\7\u0159\2\2\u1262\u1264\5\6\4\2\u1263\u1262\3\2\2\2\u1264\u1265"+
		"\3\2\2\2\u1265\u1263\3\2\2\2\u1265\u1266\3\2\2\2\u1266\u1267\3\2\2\2\u1267"+
		"\u1268\5\u0160\u00b1\2\u1268\u126b\3\2\2\2\u1269\u126b\7\u01a0\2\2\u126a"+
		"\u1252\3\2\2\2\u126a\u1269\3\2\2\2\u126b\u015d\3\2\2\2\u126c\u126d\7\u01a0"+
		"\2\2\u126d\u015f\3\2\2\2\u126e\u126f\7\u01a0\2\2\u126f\u0161\3\2\2\2\u1270"+
		"\u1272\7\67\2\2\u1271\u1273\5\6\4\2\u1272\u1271\3\2\2\2\u1273\u1274\3"+
		"\2\2\2\u1274\u1272\3\2\2\2\u1274\u1275\3\2\2\2\u1275\u1276\3\2\2\2\u1276"+
		"\u1278\5\u0164\u00b3\2\u1277\u1279\5\6\4\2\u1278\u1277\3\2\2\2\u1279\u127a"+
		"\3\2\2\2\u127a\u1278\3\2\2\2\u127a\u127b\3\2\2\2\u127b\u1282\3\2\2\2\u127c"+
		"\u127e\7\u00ce\2\2\u127d\u127f\5\6\4\2\u127e\u127d\3\2\2\2\u127f\u1280"+
		"\3\2\2\2\u1280\u127e\3\2\2\2\u1280\u1281\3\2\2\2\u1281\u1283\3\2\2\2\u1282"+
		"\u127c\3\2\2\2\u1282\u1283\3\2\2\2\u1283\u128b\3\2\2\2\u1284\u1288\5\u0166"+
		"\u00b4\2\u1285\u1287\5\6\4\2\u1286\u1285\3\2\2\2\u1287\u128a\3\2\2\2\u1288"+
		"\u1286\3\2\2\2\u1288\u1289\3\2\2\2\u1289\u128c\3\2\2\2\u128a\u1288\3\2"+
		"\2\2\u128b\u1284\3\2\2\2\u128c\u128d\3\2\2\2\u128d\u128b\3\2\2\2\u128d"+
		"\u128e\3\2\2\2\u128e\u0163\3\2\2\2\u128f\u1290\7\u01a3\2\2\u1290\u0165"+
		"\3\2\2\2\u1291\u129f\5\u017a\u00be\2\u1292\u1294\5\6\4\2\u1293\u1292\3"+
		"\2\2\2\u1294\u1295\3\2\2\2\u1295\u1293\3\2\2\2\u1295\u1296\3\2\2\2\u1296"+
		"\u1297\3\2\2\2\u1297\u1299\t\b\2\2\u1298\u129a\5\6\4\2\u1299\u1298\3\2"+
		"\2\2\u129a\u129b\3\2\2\2\u129b\u1299\3\2\2\2\u129b\u129c\3\2\2\2\u129c"+
		"\u129d\3\2\2\2\u129d\u129e\5\u017c\u00bf\2\u129e\u12a0\3\2\2\2\u129f\u1293"+
		"\3\2\2\2\u129f\u12a0\3\2\2\2\u12a0\u0167\3\2\2\2\u12a1\u12a3\7\u015a\2"+
		"\2\u12a2\u12a4\5\6\4\2\u12a3\u12a2\3\2\2\2\u12a4\u12a5\3\2\2\2\u12a5\u12a3"+
		"\3\2\2\2\u12a5\u12a6\3\2\2\2\u12a6\u12ad\3\2\2\2\u12a7\u12a9\7\66\2\2"+
		"\u12a8\u12aa\5\6\4\2\u12a9\u12a8\3\2\2\2\u12aa\u12ab\3\2\2\2\u12ab\u12a9"+
		"\3\2\2\2\u12ab\u12ac\3\2\2\2\u12ac\u12ae\3\2\2\2\u12ad\u12a7\3\2\2\2\u12ad"+
		"\u12ae\3\2\2\2\u12ae\u12b0\3\2\2\2\u12af\u12b1\5\u016a\u00b6\2\u12b0\u12af"+
		"\3\2\2\2\u12b1\u12b2\3\2\2\2\u12b2\u12b0\3\2\2\2\u12b2\u12b3\3\2\2\2\u12b3"+
		"\u0169\3\2\2\2\u12b4\u12b6\5\u016c\u00b7\2\u12b5\u12b4\3\2\2\2\u12b6\u12b7"+
		"\3\2\2\2\u12b7\u12b5\3\2\2\2\u12b7\u12b8\3\2\2\2\u12b8\u12ba\3\2\2\2\u12b9"+
		"\u12bb\5\u016e\u00b8\2\u12ba\u12b9\3\2\2\2\u12ba\u12bb\3\2\2\2\u12bb\u016b"+
		"\3\2\2\2\u12bc\u12be\5\u0170\u00b9\2\u12bd\u12bf\5\6\4\2\u12be\u12bd\3"+
		"\2\2\2\u12bf\u12c0\3\2\2\2\u12c0\u12be\3\2\2\2\u12c0\u12c1\3\2\2\2\u12c1"+
		"\u12c3\3\2\2\2\u12c2\u12bc\3\2\2\2\u12c3\u12c4\3\2\2\2\u12c4\u12c2\3\2"+
		"\2\2\u12c4\u12c5\3\2\2\2\u12c5\u12cc\3\2\2\2\u12c6\u12c8\t\31\2\2\u12c7"+
		"\u12c9\5\6\4\2\u12c8\u12c7\3\2\2\2\u12c9\u12ca\3\2\2\2\u12ca\u12c8\3\2"+
		"\2\2\u12ca\u12cb\3\2\2\2\u12cb\u12cd\3\2\2\2\u12cc\u12c6\3\2\2\2\u12cc"+
		"\u12cd\3\2\2\2\u12cd\u12d4\3\2\2\2\u12ce\u12d0\5\u0172\u00ba\2\u12cf\u12d1"+
		"\5\6\4\2\u12d0\u12cf\3\2\2\2\u12d1\u12d2\3\2\2\2\u12d2\u12d0\3\2\2\2\u12d2"+
		"\u12d3\3\2\2\2\u12d3\u12d5\3\2\2\2\u12d4\u12ce\3\2\2\2\u12d5\u12d6\3\2"+
		"\2\2\u12d6\u12d4\3\2\2\2\u12d6\u12d7\3\2\2\2\u12d7\u016d\3\2\2\2\u12d8"+
		"\u12da\7\u00c2\2\2\u12d9\u12db\5\6\4\2\u12da\u12d9\3\2\2\2\u12db\u12dc"+
		"\3\2\2\2\u12dc\u12da\3\2\2\2\u12dc\u12dd\3\2\2\2\u12dd\u12de\3\2\2\2\u12de"+
		"\u12e2\5\u014e\u00a8\2\u12df\u12e1\5\6\4\2\u12e0\u12df\3\2\2\2\u12e1\u12e4"+
		"\3\2\2\2\u12e2\u12e0\3\2\2\2\u12e2\u12e3\3\2\2\2\u12e3\u016f\3\2\2\2\u12e4"+
		"\u12e2\3\2\2\2\u12e5\u12e6\7\u01a3\2\2\u12e6\u0171\3\2\2\2\u12e7\u12e8"+
		"\7\u01a1\2\2\u12e8\u0173\3\2\2\2\u12e9\u12eb\7\t\2\2\u12ea\u12ec\5\6\4"+
		"\2\u12eb\u12ea\3\2\2\2\u12ec\u12ed\3\2\2\2\u12ed\u12eb\3\2\2\2\u12ed\u12ee"+
		"\3\2\2\2\u12ee\u12ef\3\2\2\2\u12ef\u12f1\5\u014e\u00a8\2\u12f0\u12f2\5"+
		"\6\4\2\u12f1\u12f0\3\2\2\2\u12f2\u12f3\3\2\2\2\u12f3\u12f1\3\2\2\2\u12f3"+
		"\u12f4\3\2\2\2\u12f4\u12fb\3\2\2\2\u12f5\u12f7\7\u00ce\2\2\u12f6\u12f8"+
		"\5\6\4\2\u12f7\u12f6\3\2\2\2\u12f8\u12f9\3\2\2\2\u12f9\u12f7\3\2\2\2\u12f9"+
		"\u12fa\3\2\2\2\u12fa\u12fc\3\2\2\2\u12fb\u12f5\3\2\2\2\u12fb\u12fc\3\2"+
		"\2\2\u12fc\u12fd\3\2\2\2\u12fd\u12fe\5\u0176\u00bc\2\u12fe\u0175\3\2\2"+
		"\2\u12ff\u1310\7\31\2\2\u1300\u1310\7\u014e\2\2\u1301\u1310\7\u014f\2"+
		"\2\u1302\u1310\7\u00ee\2\2\u1303\u1310\7w\2\2\u1304\u1308\5\u0178\u00bd"+
		"\2\u1305\u1307\5\6\4\2\u1306\u1305\3\2\2\2\u1307\u130a\3\2\2\2\u1308\u1306"+
		"\3\2\2\2\u1308\u1309\3\2\2\2\u1309\u130c\3\2\2\2\u130a\u1308\3\2\2\2\u130b"+
		"\u1304\3\2\2\2\u130c\u130d\3\2\2\2\u130d\u130b\3\2\2\2\u130d\u130e\3\2"+
		"\2\2\u130e\u1310\3\2\2\2\u130f\u12ff\3\2\2\2\u130f\u1300\3\2\2\2\u130f"+
		"\u1301\3\2\2\2\u130f\u1302\3\2\2\2\u130f\u1303\3\2\2\2\u130f\u130b\3\2"+
		"\2\2\u1310\u0177\3\2\2\2\u1311\u131f\5\u017a\u00be\2\u1312\u1314\5\6\4"+
		"\2\u1313\u1312\3\2\2\2\u1314\u1315\3\2\2\2\u1315\u1313\3\2\2\2\u1315\u1316"+
		"\3\2\2\2\u1316\u1317\3\2\2\2\u1317\u1319\t\b\2\2\u1318\u131a\5\6\4\2\u1319"+
		"\u1318\3\2\2\2\u131a\u131b\3\2\2\2\u131b\u1319\3\2\2\2\u131b\u131c\3\2"+
		"\2\2\u131c\u131d\3\2\2\2\u131d\u131e\5\u017c\u00bf\2\u131e\u1320\3\2\2"+
		"\2\u131f\u1313\3\2\2\2\u131f\u1320\3\2\2\2\u1320\u1334\3\2\2\2\u1321\u132f"+
		"\5\u017a\u00be\2\u1322\u1324\5\6\4\2\u1323\u1322\3\2\2\2\u1324\u1325\3"+
		"\2\2\2\u1325\u1323\3\2\2\2\u1325\u1326\3\2\2\2\u1326\u1327\3\2\2\2\u1327"+
		"\u1329\7\r\2\2\u1328\u132a\5\6\4\2\u1329\u1328\3\2\2\2\u132a\u132b\3\2"+
		"\2\2\u132b\u1329\3\2\2\2\u132b\u132c\3\2\2\2\u132c\u132d\3\2\2\2\u132d"+
		"\u132e\5\u017e\u00c0\2\u132e\u1330\3\2\2\2\u132f\u1323\3\2\2\2\u1330\u1331"+
		"\3\2\2\2\u1331\u132f\3\2\2\2\u1331\u1332\3\2\2\2\u1332\u1334\3\2\2\2\u1333"+
		"\u1311\3\2\2\2\u1333\u1321\3\2\2\2\u1334\u0179\3\2\2\2\u1335\u1336\t\t"+
		"\2\2\u1336\u017b\3\2\2\2\u1337\u1338\t\t\2\2\u1338\u017d\3\2\2\2\u1339"+
		"\u133a\t\t\2\2\u133a\u017f\3\2\2\2\u133b\u133d\7\u0158\2\2\u133c\u133e"+
		"\5\6\4\2\u133d\u133c\3\2\2\2\u133e\u133f\3\2\2\2\u133f\u133d\3\2\2\2\u133f"+
		"\u1340\3\2\2\2\u1340\u1341\3\2\2\2\u1341\u1345\5\u018a\u00c6\2\u1342\u1344"+
		"\5\6\4\2\u1343\u1342\3\2\2\2\u1344\u1347\3\2\2\2\u1345\u1343\3\2\2\2\u1345"+
		"\u1346\3\2\2\2\u1346\u1356\3\2\2\2\u1347\u1345\3\2\2\2\u1348\u134a\7\u00ce"+
		"\2\2\u1349\u134b\5\6\4\2\u134a\u1349\3\2\2\2\u134b\u134c\3\2\2\2\u134c"+
		"\u134a\3\2\2\2\u134c\u134d\3\2\2\2\u134d\u134f\3\2\2\2\u134e\u1348\3\2"+
		"\2\2\u134e\u134f\3\2\2\2\u134f\u1350\3\2\2\2\u1350\u1352\5\u0188\u00c5"+
		"\2\u1351\u1353\5\6\4\2\u1352\u1351\3\2\2\2\u1353\u1354\3\2\2\2\u1354\u1352"+
		"\3\2\2\2\u1354\u1355\3\2\2\2\u1355\u1357\3\2\2\2\u1356\u134e\3\2\2\2\u1356"+
		"\u1357\3\2\2\2\u1357\u136c\3\2\2\2\u1358\u1360\5\u0182\u00c2\2\u1359\u135b"+
		"\5\6\4\2\u135a\u1359\3\2\2\2\u135b\u135c\3\2\2\2\u135c\u135a\3\2\2\2\u135c"+
		"\u135d\3\2\2\2\u135d\u135e\3\2\2\2\u135e\u135f\5\u0184\u00c3\2\u135f\u1361"+
		"\3\2\2\2\u1360\u135a\3\2\2\2\u1360\u1361\3\2\2\2\u1361\u136d\3\2\2\2\u1362"+
		"\u136a\5\u0184\u00c3\2\u1363\u1365\5\6\4\2\u1364\u1363\3\2\2\2\u1365\u1366"+
		"\3\2\2\2\u1366\u1364\3\2\2\2\u1366\u1367\3\2\2\2\u1367\u1368\3\2\2\2\u1368"+
		"\u1369\5\u0182\u00c2\2\u1369\u136b\3\2\2\2\u136a\u1364\3\2\2\2\u136a\u136b"+
		"\3\2\2\2\u136b\u136d\3\2\2\2\u136c\u1358\3\2\2\2\u136c\u1362\3\2\2\2\u136c"+
		"\u136d\3\2\2\2\u136d\u1371\3\2\2\2\u136e\u1370\5\6\4\2\u136f\u136e\3\2"+
		"\2\2\u1370\u1373\3\2\2\2\u1371\u136f\3\2\2\2\u1371\u1372\3\2\2\2\u1372"+
		"\u0181\3\2\2\2\u1373\u1371\3\2\2\2\u1374\u1376\7\u00fa\2\2\u1375\u1377"+
		"\5\6\4\2\u1376\u1375\3\2\2\2\u1377\u1378\3\2\2\2\u1378\u1376\3\2\2\2\u1378"+
		"\u1379\3\2\2\2\u1379\u1380\3\2\2\2\u137a\u137c\7\u0151\2\2\u137b\u137d"+
		"\5\6\4\2\u137c\u137b\3\2\2\2\u137d\u137e\3\2\2\2\u137e\u137c\3\2\2\2\u137e"+
		"\u137f\3\2\2\2\u137f\u1381\3\2\2\2\u1380\u137a\3\2\2\2\u1380\u1381\3\2"+
		"\2\2\u1381\u1388\3\2\2\2\u1382\u1384\7\u00ce\2\2\u1383\u1385\5\6\4\2\u1384"+
		"\u1383\3\2\2\2\u1385\u1386\3\2\2\2\u1386\u1384\3\2\2\2\u1386\u1387\3\2"+
		"\2\2\u1387\u1389\3\2\2\2\u1388\u1382\3\2\2\2\u1388\u1389\3\2\2\2\u1389"+
		"\u138a\3\2\2\2\u138a\u138b\5\u0186\u00c4\2\u138b\u0183\3\2\2\2\u138c\u138e"+
		"\7\u00f8\2\2\u138d\u138f\5\6\4\2\u138e\u138d\3\2\2\2\u138f\u1390\3\2\2"+
		"\2\u1390\u138e\3\2\2\2\u1390\u1391\3\2\2\2\u1391\u1398\3\2\2\2\u1392\u1394"+
		"\7\u0151\2\2\u1393\u1395\5\6\4\2\u1394\u1393\3\2\2\2\u1395\u1396\3\2\2"+
		"\2\u1396\u1394\3\2\2\2\u1396\u1397\3\2\2\2\u1397\u1399\3\2\2\2\u1398\u1392"+
		"\3\2\2\2\u1398\u1399\3\2\2\2\u1399\u13a0\3\2\2\2\u139a\u139c\7\u00ce\2"+
		"\2\u139b\u139d\5\6\4\2\u139c\u139b\3\2\2\2\u139d\u139e\3\2\2\2\u139e\u139c"+
		"\3\2\2\2\u139e\u139f\3\2\2\2\u139f\u13a1\3\2\2\2\u13a0\u139a\3\2\2\2\u13a0"+
		"\u13a1\3\2\2\2\u13a1\u13a2\3\2\2\2\u13a2\u13a3\5\u0186\u00c4\2\u13a3\u0185"+
		"\3\2\2\2\u13a4\u13a5\7\u01a3\2\2\u13a5\u0187\3\2\2\2\u13a6\u13a7\7\u01a3"+
		"\2\2\u13a7\u0189\3\2\2\2\u13a8\u13a9\7\u01a1\2\2\u13a9\u018b\3\2\2\2\u13aa"+
		"\u13ab\7\u01a3\2\2\u13ab\u018d\3\2\2\2\u13ac\u13ad\t\32\2\2\u13ad\u018f"+
		"\3\2\2\2\u13ae\u13af\7\u01a3\2\2\u13af\u0191\3\2\2\2\u13b0\u13b1\t\33"+
		"\2\2\u13b1\u0193\3\2\2\2\u13b2\u13b3\7\u01a3\2\2\u13b3\u0195\3\2\2\2\u13b4"+
		"\u13b8\7\u00a3\2\2\u13b5\u13b7\5\6\4\2\u13b6\u13b5\3\2\2\2\u13b7\u13ba"+
		"\3\2\2\2\u13b8\u13b6\3\2\2\2\u13b8\u13b9\3\2\2\2\u13b9\u13bb\3\2\2\2\u13ba"+
		"\u13b8\3\2\2\2\u13bb\u13bf\7\u019d\2\2\u13bc\u13be\5\6\4\2\u13bd\u13bc"+
		"\3\2\2\2\u13be\u13c1\3\2\2\2\u13bf\u13bd\3\2\2\2\u13bf\u13c0\3\2\2\2\u13c0"+
		"\u13cb\3\2\2\2\u13c1\u13bf\3\2\2\2\u13c2\u13c6\5\u0198\u00cd\2\u13c3\u13c5"+
		"\5\6\4\2\u13c4\u13c3\3\2\2\2\u13c5\u13c8\3\2\2\2\u13c6\u13c4\3\2\2\2\u13c6"+
		"\u13c7\3\2\2\2\u13c7\u13ca\3\2\2\2\u13c8\u13c6\3\2\2\2\u13c9\u13c2\3\2"+
		"\2\2\u13ca\u13cd\3\2\2\2\u13cb\u13c9\3\2\2\2\u13cb\u13cc\3\2\2\2\u13cc"+
		"\u0197\3\2\2\2\u13cd\u13cb\3\2\2\2\u13ce\u13d0\7\u013e\2\2\u13cf\u13d1"+
		"\5\6\4\2\u13d0\u13cf\3\2\2\2\u13d1\u13d2\3\2\2\2\u13d2\u13d0\3\2\2\2\u13d2"+
		"\u13d3\3\2\2\2\u13d3\u13da\3\2\2\2\u13d4\u13d6\7\u00fc\2\2\u13d5\u13d7"+
		"\5\6\4\2\u13d6\u13d5\3\2\2\2\u13d7\u13d8\3\2\2\2\u13d8\u13d6\3\2\2\2\u13d8"+
		"\u13d9\3\2\2\2\u13d9\u13db\3\2\2\2\u13da\u13d4\3\2\2\2\u13da\u13db\3\2"+
		"\2\2\u13db\u13dc\3\2\2\2\u13dc\u13e0\5\u01c2\u00e2\2\u13dd\u13df\5\6\4"+
		"\2\u13de\u13dd\3\2\2\2\u13df\u13e2\3\2\2\2\u13e0\u13de\3\2\2\2\u13e0\u13e1"+
		"\3\2\2\2\u13e1\u13e3\3\2\2\2\u13e2\u13e0\3\2\2\2\u13e3\u13e7\5\u01bc\u00df"+
		"\2\u13e4\u13e6\5\6\4\2\u13e5\u13e4\3\2\2\2\u13e6\u13e9\3\2\2\2\u13e7\u13e5"+
		"\3\2\2\2\u13e7\u13e8\3\2\2\2\u13e8\u13f1\3\2\2\2\u13e9\u13e7\3\2\2\2\u13ea"+
		"\u13ee\5\u01a4\u00d3\2\u13eb\u13ed\5\6\4\2\u13ec\u13eb\3\2\2\2\u13ed\u13f0"+
		"\3\2\2\2\u13ee\u13ec\3\2\2\2\u13ee\u13ef\3\2\2\2\u13ef\u13f2\3\2\2\2\u13f0"+
		"\u13ee\3\2\2\2\u13f1\u13ea\3\2\2\2\u13f1\u13f2\3\2\2\2\u13f2\u13fa\3\2"+
		"\2\2\u13f3\u13f7\5\u01ae\u00d8\2\u13f4\u13f6\5\6\4\2\u13f5\u13f4\3\2\2"+
		"\2\u13f6\u13f9\3\2\2\2\u13f7\u13f5\3\2\2\2\u13f7\u13f8\3\2\2\2\u13f8\u13fb"+
		"\3\2\2\2\u13f9\u13f7\3\2\2\2\u13fa\u13f3\3\2\2\2\u13fa\u13fb\3\2\2\2\u13fb"+
		"\u1403\3\2\2\2\u13fc\u1400\5\u01b6\u00dc\2\u13fd\u13ff\5\6\4\2\u13fe\u13fd"+
		"\3\2\2\2\u13ff\u1402\3\2\2\2\u1400\u13fe\3\2\2\2\u1400\u1401\3\2\2\2\u1401"+
		"\u1404\3\2\2\2\u1402\u1400\3\2\2\2\u1403\u13fc\3\2\2\2\u1403\u1404\3\2"+
		"\2\2\u1404\u140c\3\2\2\2\u1405\u1409\5\u01b4\u00db\2\u1406\u1408\5\6\4"+
		"\2\u1407\u1406\3\2\2\2\u1408\u140b\3\2\2\2\u1409\u1407\3\2\2\2\u1409\u140a"+
		"\3\2\2\2\u140a\u140d\3\2\2\2\u140b\u1409\3\2\2\2\u140c\u1405\3\2\2\2\u140c"+
		"\u140d\3\2\2\2\u140d\u1415\3\2\2\2\u140e\u1412\5\u01aa\u00d6\2\u140f\u1411"+
		"\5\6\4\2\u1410\u140f\3\2\2\2\u1411\u1414\3\2\2\2\u1412\u1410\3\2\2\2\u1412"+
		"\u1413\3\2\2\2\u1413\u1416\3\2\2\2\u1414\u1412\3\2\2\2\u1415\u140e\3\2"+
		"\2\2\u1415\u1416\3\2\2\2\u1416\u141e\3\2\2\2\u1417\u141b\5\u01a8\u00d5"+
		"\2\u1418\u141a\5\6\4\2\u1419\u1418\3\2\2\2\u141a\u141d\3\2\2\2\u141b\u1419"+
		"\3\2\2\2\u141b\u141c\3\2\2\2\u141c\u141f\3\2\2\2\u141d\u141b\3\2\2\2\u141e"+
		"\u1417\3\2\2\2\u141e\u141f\3\2\2\2\u141f\u1427\3\2\2\2\u1420\u1424\5\u01a2"+
		"\u00d2\2\u1421\u1423\5\6\4\2\u1422\u1421\3\2\2\2\u1423\u1426\3\2\2\2\u1424"+
		"\u1422\3\2\2\2\u1424\u1425\3\2\2\2\u1425\u1428\3\2\2\2\u1426\u1424\3\2"+
		"\2\2\u1427\u1420\3\2\2\2\u1427\u1428\3\2\2\2\u1428\u1432\3\2\2\2\u1429"+
		"\u142d\5\u019e\u00d0\2\u142a\u142c\5\6\4\2\u142b\u142a\3\2\2\2\u142c\u142f"+
		"\3\2\2\2\u142d\u142b\3\2\2\2\u142d\u142e\3\2\2\2\u142e\u1431\3\2\2\2\u142f"+
		"\u142d\3\2\2\2\u1430\u1429\3\2\2\2\u1431\u1434\3\2\2\2\u1432\u1430\3\2"+
		"\2\2\u1432\u1433\3\2\2\2\u1433\u143c\3\2\2\2\u1434\u1432\3\2\2\2\u1435"+
		"\u1439\5\u01b0\u00d9\2\u1436\u1438\5\6\4\2\u1437\u1436\3\2\2\2\u1438\u143b"+
		"\3\2\2\2\u1439\u1437\3\2\2\2\u1439\u143a\3\2\2\2\u143a\u143d\3\2\2\2\u143b"+
		"\u1439\3\2\2\2\u143c\u1435\3\2\2\2\u143c\u143d\3\2\2\2\u143d\u1445\3\2"+
		"\2\2\u143e\u1442\5\u019a\u00ce\2\u143f\u1441\5\6\4\2\u1440\u143f\3\2\2"+
		"\2\u1441\u1444\3\2\2\2\u1442\u1440\3\2\2\2\u1442\u1443\3\2\2\2\u1443\u1446"+
		"\3\2\2\2\u1444\u1442\3\2\2\2\u1445\u143e\3\2\2\2\u1445\u1446\3\2\2\2\u1446"+
		"\u1447\3\2\2\2\u1447\u1448\7\u019d\2\2\u1448\u0199\3\2\2\2\u1449\u144b"+
		"\7\u00a2\2\2\u144a\u144c\5\6\4\2\u144b\u144a\3\2\2\2\u144c\u144d\3\2\2"+
		"\2\u144d\u144b\3\2\2\2\u144d\u144e\3\2\2\2\u144e\u1450\3\2\2\2\u144f\u1449"+
		"\3\2\2\2\u144f\u1450\3\2\2\2\u1450\u1451\3\2\2\2\u1451\u1453\7\u0151\2"+
		"\2\u1452\u1454\5\6\4\2\u1453\u1452\3\2\2\2\u1454\u1455\3\2\2\2\u1455\u1453"+
		"\3\2\2\2\u1455\u1456\3\2\2\2\u1456\u145d\3\2\2\2\u1457\u1459\7\u00ce\2"+
		"\2\u1458\u145a\5\6\4\2\u1459\u1458\3\2\2\2\u145a\u145b\3\2\2\2\u145b\u1459"+
		"\3\2\2\2\u145b\u145c\3\2\2\2\u145c\u145e\3\2\2\2\u145d\u1457\3\2\2\2\u145d"+
		"\u145e\3\2\2\2\u145e\u145f\3\2\2\2\u145f\u1460\5\u019c\u00cf\2\u1460\u019b"+
		"\3\2\2\2\u1461\u1462\5\u0158\u00ad\2\u1462\u019d\3\2\2\2\u1463\u1465\7"+
		"\17\2\2\u1464\u1466\5\6\4\2\u1465\u1464\3\2\2\2\u1466\u1467\3\2\2\2\u1467"+
		"\u1465\3\2\2\2\u1467\u1468\3\2\2\2\u1468\u146a\3\2\2\2\u1469\u1463\3\2"+
		"\2\2\u1469\u146a\3\2\2\2\u146a\u146b\3\2\2\2\u146b\u146d\7\u011d\2\2\u146c"+
		"\u146e\5\6\4\2\u146d\u146c\3\2\2\2\u146e\u146f\3\2\2\2\u146f\u146d\3\2"+
		"\2\2\u146f\u1470\3\2\2\2\u1470\u1477\3\2\2\2\u1471\u1473\7\u00d3\2\2\u1472"+
		"\u1474\5\6\4\2\u1473\u1472\3\2\2\2\u1474\u1475\3\2\2\2\u1475\u1473\3\2"+
		"\2\2\u1475\u1476\3\2\2\2\u1476\u1478\3\2\2\2\u1477\u1471\3\2\2\2\u1477"+
		"\u1478\3\2\2\2\u1478\u147f\3\2\2\2\u1479\u147b\7\u00ce\2\2\u147a\u147c"+
		"\5\6\4\2\u147b\u147a\3\2\2\2\u147c\u147d\3\2\2\2\u147d\u147b\3\2\2\2\u147d"+
		"\u147e\3\2\2\2\u147e\u1480\3\2\2\2\u147f\u1479\3\2\2\2\u147f\u1480\3\2"+
		"\2\2\u1480\u1481\3\2\2\2\u1481\u1491\5\u01a0\u00d1\2\u1482\u1484\5\6\4"+
		"\2\u1483\u1482\3\2\2\2\u1484\u1485\3\2\2\2\u1485\u1483\3\2\2\2\u1485\u1486"+
		"\3\2\2\2\u1486\u148d\3\2\2\2\u1487\u1489\7\u017e\2\2\u1488\u148a\5\6\4"+
		"\2\u1489\u1488\3\2\2\2\u148a\u148b\3\2\2\2\u148b\u1489\3\2\2\2\u148b\u148c"+
		"\3\2\2\2\u148c\u148e\3\2\2\2\u148d\u1487\3\2\2\2\u148d\u148e\3\2\2\2\u148e"+
		"\u148f\3\2\2\2\u148f\u1490\7u\2\2\u1490\u1492\3\2\2\2\u1491\u1483\3\2"+
		"\2\2\u1491\u1492\3\2\2\2\u1492\u149a\3\2\2\2\u1493\u1495\5\6\4\2\u1494"+
		"\u1493\3\2\2\2\u1495\u1496\3\2\2\2\u1496\u1494\3\2\2\2\u1496\u1497\3\2"+
		"\2\2\u1497\u1498\3\2\2\2\u1498\u1499\t\n\2\2\u1499\u149b\3\2\2\2\u149a"+
		"\u1494\3\2\2\2\u149a\u149b\3\2\2\2\u149b\u019f\3\2\2\2\u149c\u14b9\5\u0158"+
		"\u00ad\2\u149d\u14a1\7\u01a3\2\2\u149e\u14a0\5\6\4\2\u149f\u149e\3\2\2"+
		"\2\u14a0\u14a3\3\2\2\2\u14a1\u149f\3\2\2\2\u14a1\u14a2\3\2\2\2\u14a2\u14a4"+
		"\3\2\2\2\u14a3\u14a1\3\2\2\2\u14a4\u14a8\7\u0192\2\2\u14a5\u14a7\5\6\4"+
		"\2\u14a6\u14a5\3\2\2\2\u14a7\u14aa\3\2\2\2\u14a8\u14a6\3\2\2\2\u14a8\u14a9"+
		"\3\2\2\2\u14a9\u14ab\3\2\2\2\u14aa\u14a8\3\2\2\2\u14ab\u14b5\5\u0158\u00ad"+
		"\2\u14ac\u14ae\5\6\4\2\u14ad\u14ac\3\2\2\2\u14ae\u14b1\3\2\2\2\u14af\u14ad"+
		"\3\2\2\2\u14af\u14b0\3\2\2\2\u14b0\u14b2\3\2\2\2\u14b1\u14af\3\2\2\2\u14b2"+
		"\u14b4\5\u0158\u00ad\2\u14b3\u14af\3\2\2\2\u14b4\u14b7\3\2\2\2\u14b5\u14b3"+
		"\3\2\2\2\u14b5\u14b6\3\2\2\2\u14b6\u14b9\3\2\2\2\u14b7\u14b5\3\2\2\2\u14b8"+
		"\u149c\3\2\2\2\u14b8\u149d\3\2\2\2\u14b9\u01a1\3\2\2\2\u14ba\u14bc\7\4"+
		"\2\2\u14bb\u14bd\5\6\4\2\u14bc\u14bb\3\2\2\2\u14bd\u14be\3\2\2\2\u14be"+
		"\u14bc\3\2\2\2\u14be\u14bf\3\2\2\2\u14bf\u14c6\3\2\2\2\u14c0\u14c2\7\u00e9"+
		"\2\2\u14c1\u14c3\5\6\4\2\u14c2\u14c1\3\2\2\2\u14c3\u14c4\3\2\2\2\u14c4"+
		"\u14c2\3\2\2\2\u14c4\u14c5\3\2\2\2\u14c5\u14c7\3\2\2\2\u14c6\u14c0\3\2"+
		"\2\2\u14c6\u14c7\3\2\2\2\u14c7\u14ce\3\2\2\2\u14c8\u14ca\7\u00ce\2\2\u14c9"+
		"\u14cb\5\6\4\2\u14ca\u14c9\3\2\2\2\u14cb\u14cc\3\2\2\2\u14cc\u14ca\3\2"+
		"\2\2\u14cc\u14cd\3\2\2\2\u14cd\u14cf\3\2\2\2\u14ce\u14c8\3\2\2\2\u14ce"+
		"\u14cf\3\2\2\2\u14cf\u14d1\3\2\2\2\u14d0\u14ba\3\2\2\2\u14d0\u14d1\3\2"+
		"\2\2\u14d1\u14d2\3\2\2\2\u14d2\u14f0\t\34\2\2\u14d3\u14d5\5\6\4\2\u14d4"+
		"\u14d3\3\2\2\2\u14d5\u14d6\3\2\2\2\u14d6\u14d4\3\2\2\2\u14d6\u14d7\3\2"+
		"\2\2\u14d7\u14d8\3\2\2\2\u14d8\u14da\7\u0122\2\2\u14d9\u14db\5\6\4\2\u14da"+
		"\u14d9\3\2\2\2\u14db\u14dc\3\2\2\2\u14dc\u14da\3\2\2\2\u14dc\u14dd\3\2"+
		"\2\2\u14dd\u14e4\3\2\2\2\u14de\u14e0\7\u00d3\2\2\u14df\u14e1\5\6\4\2\u14e0"+
		"\u14df\3\2\2\2\u14e1\u14e2\3\2\2\2\u14e2\u14e0\3\2\2\2\u14e2\u14e3\3\2"+
		"\2\2\u14e3\u14e5\3\2\2\2\u14e4\u14de\3\2\2\2\u14e4\u14e5\3\2\2\2\u14e5"+
		"\u14ec\3\2\2\2\u14e6\u14e8\7\u00ce\2\2\u14e7\u14e9\5\6\4\2\u14e8\u14e7"+
		"\3\2\2\2\u14e9\u14ea\3\2\2\2\u14ea\u14e8\3\2\2\2\u14ea\u14eb\3\2\2\2\u14eb"+
		"\u14ed\3\2\2\2\u14ec\u14e6\3\2\2\2\u14ec\u14ed\3\2\2\2\u14ed\u14ee\3\2"+
		"\2\2\u14ee\u14ef\5\u0158\u00ad\2\u14ef\u14f1\3\2\2\2\u14f0\u14d4\3\2\2"+
		"\2\u14f0\u14f1\3\2\2\2\u14f1\u01a3\3\2\2\2\u14f2\u14f4\7\u012c\2\2\u14f3"+
		"\u14f5\5\6\4\2\u14f4\u14f3\3\2\2\2\u14f5\u14f6\3\2\2\2\u14f6\u14f4\3\2"+
		"\2\2\u14f6\u14f7\3\2\2\2\u14f7\u14f8\3\2\2\2\u14f8\u1500\5\u01a6\u00d4"+
		"\2\u14f9\u14fb\5\6\4\2\u14fa\u14f9\3\2\2\2\u14fb\u14fc\3\2\2\2\u14fc\u14fa"+
		"\3\2\2\2\u14fc\u14fd\3\2\2\2\u14fd\u14fe\3\2\2\2\u14fe\u14ff\t\35\2\2"+
		"\u14ff\u1501\3\2\2\2\u1500\u14fa\3\2\2\2\u1500\u1501\3\2\2\2\u1501\u01a5"+
		"\3\2\2\2\u1502\u1503\7\u01a1\2\2\u1503\u01a7\3\2\2\2\u1504\u1506\7\u011d"+
		"\2\2\u1505\u1507\5\6\4\2\u1506\u1505\3\2\2\2\u1507\u1508\3\2\2\2\u1508"+
		"\u1506\3\2\2\2\u1508\u1509\3\2\2\2\u1509\u150a\3\2\2\2\u150a\u150c\7l"+
		"\2\2\u150b\u150d\5\6\4\2\u150c\u150b\3\2\2\2\u150d\u150e\3\2\2\2\u150e"+
		"\u150c\3\2\2\2\u150e\u150f\3\2\2\2\u150f\u1516\3\2\2\2\u1510\u1512\7\u00ce"+
		"\2\2\u1511\u1513\5\6\4\2\u1512\u1511\3\2\2\2\u1513\u1514\3\2\2\2\u1514"+
		"\u1512\3\2\2\2\u1514\u1515\3\2\2\2\u1515\u1517\3\2\2\2\u1516\u1510\3\2"+
		"\2\2\u1516\u1517\3\2\2\2\u1517\u1518\3\2\2\2\u1518\u1519\7\u014e\2\2\u1519"+
		"\u01a9\3\2\2\2\u151a\u151c\7\u0103\2\2\u151b\u151d\5\6\4\2\u151c\u151b"+
		"\3\2\2\2\u151d\u151e\3\2\2\2\u151e\u151c\3\2\2\2\u151e\u151f\3\2\2\2\u151f"+
		"\u1526\3\2\2\2\u1520\u1522\7\65\2\2\u1521\u1523\5\6\4\2\u1522\u1521\3"+
		"\2\2\2\u1523\u1524\3\2\2\2\u1524\u1522\3\2\2\2\u1524\u1525\3\2\2\2\u1525"+
		"\u1527\3\2\2\2\u1526\u1520\3\2\2\2\u1526\u1527\3\2\2\2\u1527\u152e\3\2"+
		"\2\2\u1528\u152a\7\u00ce\2\2\u1529\u152b\5\6\4\2\u152a\u1529\3\2\2\2\u152b"+
		"\u152c\3\2\2\2\u152c\u152a\3\2\2\2\u152c\u152d\3\2\2\2\u152d\u152f\3\2"+
		"\2\2\u152e\u1528\3\2\2\2\u152e\u152f\3\2\2\2\u152f\u1530\3\2\2\2\u1530"+
		"\u1531\5\u01ac\u00d7\2\u1531\u01ab\3\2\2\2\u1532\u1533\7\u01a0\2\2\u1533"+
		"\u01ad\3\2\2\2\u1534\u1536\7\u00ff\2\2\u1535\u1537\5\6\4\2\u1536\u1535"+
		"\3\2\2\2\u1537\u1538\3\2\2\2\u1538\u1536\3\2\2\2\u1538\u1539\3\2\2\2\u1539"+
		"\u1540\3\2\2\2\u153a\u153c\7\u00ce\2\2\u153b\u153d\5\6\4\2\u153c\u153b"+
		"\3\2\2\2\u153d\u153e\3\2\2\2\u153e\u153c\3\2\2\2\u153e\u153f\3\2\2\2\u153f"+
		"\u1541\3\2\2\2\u1540\u153a\3\2\2\2\u1540\u1541\3\2\2\2\u1541\u1543\3\2"+
		"\2\2\u1542\u1534\3\2\2\2\u1542\u1543\3\2\2\2\u1543\u154f\3\2\2\2\u1544"+
		"\u1550\7\u0141\2\2\u1545\u1547\7\u00dc\2\2\u1546\u1548\5\6\4\2\u1547\u1546"+
		"\3\2\2\2\u1548\u1549\3\2\2\2\u1549\u1547\3\2\2\2\u1549\u154a\3\2\2\2\u154a"+
		"\u154b\3\2\2\2\u154b\u154c\7\u0141\2\2\u154c\u1550\3\2\2\2\u154d\u1550"+
		"\7\u0122\2\2\u154e\u1550\7\u00c4\2\2\u154f\u1544\3\2\2\2\u154f\u1545\3"+
		"\2\2\2\u154f\u154d\3\2\2\2\u154f\u154e\3\2\2\2\u1550\u01af\3\2\2\2\u1551"+
		"\u1553\7\u00e0\2\2\u1552\u1554\5\6\4\2\u1553\u1552\3\2\2\2\u1554\u1555"+
		"\3\2\2\2\u1555\u1553\3\2\2\2\u1555\u1556\3\2\2\2\u1556\u155d\3\2\2\2\u1557"+
		"\u1559\7\u00e9\2\2\u1558\u155a\5\6\4\2\u1559\u1558\3\2\2\2\u155a\u155b"+
		"\3\2\2\2\u155b\u1559\3\2\2\2\u155b\u155c\3\2\2\2\u155c\u155e\3\2\2\2\u155d"+
		"\u1557\3\2\2\2\u155d\u155e\3\2\2\2\u155e\u1565\3\2\2\2\u155f\u1561\7\u00ce"+
		"\2\2\u1560\u1562\5\6\4\2\u1561\u1560\3\2\2\2\u1562\u1563\3\2\2\2\u1563"+
		"\u1561\3\2\2\2\u1563\u1564\3\2\2\2\u1564\u1566\3\2\2\2\u1565\u155f\3\2"+
		"\2\2\u1565\u1566\3\2\2\2\u1566\u1567\3\2\2\2\u1567\u1568\5\u01b2\u00da"+
		"\2\u1568\u01b1\3\2\2\2\u1569\u156b\7\u00e5\2\2\u156a\u156c\5\6\4\2\u156b"+
		"\u156a\3\2\2\2\u156c\u156d\3\2\2\2\u156d\u156b\3\2\2\2\u156d\u156e\3\2"+
		"\2\2\u156e\u1575\3\2\2\2\u156f\u1571\7\u017e\2\2\u1570\u1572\5\6\4\2\u1571"+
		"\u1570\3\2\2\2\u1572\u1573\3\2\2\2\u1573\u1571\3\2\2\2\u1573\u1574\3\2"+
		"\2\2\u1574\u1576\3\2\2\2\u1575\u156f\3\2\2\2\u1575\u1576\3\2\2\2\u1576"+
		"\u1577\3\2\2\2\u1577\u1579\7\u00e0\2\2\u1578\u157a\5\6\4\2\u1579\u1578"+
		"\3\2\2\2\u157a\u157b\3\2\2\2\u157b\u1579\3\2\2\2\u157b\u157c\3\2\2\2\u157c"+
		"\u157d\3\2\2\2\u157d\u157f\7\u00fa\2\2\u157e\u1580\5\6\4\2\u157f\u157e"+
		"\3\2\2\2\u1580\u1581\3\2\2\2\u1581\u157f\3\2\2\2\u1581\u1582\3\2\2\2\u1582"+
		"\u1583\3\2\2\2\u1583\u1585\7\u00ec\2\2\u1584\u1586\5\6\4\2\u1585\u1584"+
		"\3\2\2\2\u1586\u1587\3\2\2\2\u1587\u1585\3\2\2\2\u1587\u1588\3\2\2\2\u1588"+
		"\u1589\3\2\2\2\u1589\u158a\7\u011e\2\2\u158a\u15ae\3\2\2\2\u158b\u15aa"+
		"\7\36\2\2\u158c\u158e\5\6\4\2\u158d\u158c\3\2\2\2\u158e\u158f\3\2\2\2"+
		"\u158f\u158d\3\2\2\2\u158f\u1590\3\2\2\2\u1590\u1597\3\2\2\2\u1591\u1593"+
		"\7\u017e\2\2\u1592\u1594\5\6\4\2\u1593\u1592\3\2\2\2\u1594\u1595\3\2\2"+
		"\2\u1595\u1593\3\2\2\2\u1595\u1596\3\2\2\2\u1596\u1598\3\2\2\2\u1597\u1591"+
		"\3\2\2\2\u1597\u1598\3\2\2\2\u1598\u15a8\3\2\2\2\u1599\u159b\7\u00e0\2"+
		"\2\u159a\u159c\5\6\4\2\u159b\u159a\3\2\2\2\u159c\u159d\3\2\2\2\u159d\u159b"+
		"\3\2\2\2\u159d\u159e\3\2\2\2\u159e\u159f\3\2\2\2\u159f\u15a1\7\u00fa\2"+
		"\2\u15a0\u15a2\5\6\4\2\u15a1\u15a0\3\2\2\2\u15a2\u15a3\3\2\2\2\u15a3\u15a1"+
		"\3\2\2\2\u15a3\u15a4\3\2\2\2\u15a4\u15a5\3\2\2\2\u15a5\u15a6\7\u011d\2"+
		"\2\u15a6\u15a9\3\2\2\2\u15a7\u15a9\7\u0135\2\2\u15a8\u1599\3\2\2\2\u15a8"+
		"\u15a7\3\2\2\2\u15a9\u15ab\3\2\2\2\u15aa\u158d\3\2\2\2\u15aa\u15ab\3\2"+
		"\2\2\u15ab\u15ae\3\2\2\2\u15ac\u15ae\7\u009b\2\2\u15ad\u1569\3\2\2\2\u15ad"+
		"\u158b\3\2\2\2\u15ad\u15ac\3\2\2\2\u15ae\u01b3\3\2\2\2\u15af\u15b1\7;"+
		"\2\2\u15b0\u15b2\5\6\4\2\u15b1\u15b0\3\2\2\2\u15b2\u15b3\3\2\2\2\u15b3"+
		"\u15b1\3\2\2\2\u15b3\u15b4\3\2\2\2\u15b4\u15bb\3\2\2\2\u15b5\u15b7\7\u00ce"+
		"\2\2\u15b6\u15b8\5\6\4\2\u15b7\u15b6\3\2\2\2\u15b8\u15b9\3\2\2\2\u15b9"+
		"\u15b7\3\2\2\2\u15b9\u15ba\3\2\2\2\u15ba\u15bc\3\2\2\2\u15bb\u15b5\3\2"+
		"\2\2\u15bb\u15bc\3\2\2\2\u15bc\u15bd\3\2\2\2\u15bd\u15be\5\u014e\u00a8"+
		"\2\u15be\u01b5\3\2\2\2\u15bf\u15c1\7+\2\2\u15c0\u15c2\5\6\4\2\u15c1\u15c0"+
		"\3\2\2\2\u15c2\u15c3\3\2\2\2\u15c3\u15c1\3\2\2\2\u15c3\u15c4\3\2\2\2\u15c4"+
		"\u15cb\3\2\2\2\u15c5\u15c7\7Q\2\2\u15c6\u15c8\5\6\4\2\u15c7\u15c6\3\2"+
		"\2\2\u15c8\u15c9\3\2\2\2\u15c9\u15c7\3\2\2\2\u15c9\u15ca\3\2\2\2\u15ca"+
		"\u15cc\3\2\2\2\u15cb\u15c5\3\2\2\2\u15cb\u15cc\3\2\2\2\u15cc\u15d9\3\2"+
		"\2\2\u15cd\u15cf\5\u01b8\u00dd\2\u15ce\u15d0\5\6\4\2\u15cf\u15ce\3\2\2"+
		"\2\u15d0\u15d1\3\2\2\2\u15d1\u15cf\3\2\2\2\u15d1\u15d2\3\2\2\2\u15d2\u15d3"+
		"\3\2\2\2\u15d3\u15d5\7\u0168\2\2\u15d4\u15d6\5\6\4\2\u15d5\u15d4\3\2\2"+
		"\2\u15d6\u15d7\3\2\2\2\u15d7\u15d5\3\2\2\2\u15d7\u15d8\3\2\2\2\u15d8\u15da"+
		"\3\2\2\2\u15d9\u15cd\3\2\2\2\u15d9\u15da\3\2\2\2\u15da\u15db\3\2\2\2\u15db"+
		"\u15dd\5\u01ba\u00de\2\u15dc\u15de\5\6\4\2\u15dd\u15dc\3\2\2\2\u15de\u15df"+
		"\3\2\2\2\u15df\u15dd\3\2\2\2\u15df\u15e0\3\2\2\2\u15e0\u15e1\3\2\2\2\u15e1"+
		"\u15e2\t\36\2\2\u15e2\u01b7\3\2\2\2\u15e3\u15e4\7\u01a1\2\2\u15e4\u01b9"+
		"\3\2\2\2\u15e5\u15e6\7\u01a1\2\2\u15e6\u01bb\3\2\2\2\u15e7\u15e9\7\32"+
		"\2\2\u15e8\u15ea\5\6\4\2\u15e9\u15e8\3\2\2\2\u15ea\u15eb\3\2\2\2\u15eb"+
		"\u15e9\3\2\2\2\u15eb\u15ec\3\2\2\2\u15ec\u15f3\3\2\2\2\u15ed\u15ef\7\u0168"+
		"\2\2\u15ee\u15f0\5\6\4\2\u15ef\u15ee\3\2\2\2\u15f0\u15f1\3\2\2\2\u15f1"+
		"\u15ef\3\2\2\2\u15f1\u15f2\3\2\2\2\u15f2\u15f4\3\2\2\2\u15f3\u15ed\3\2"+
		"\2\2\u15f3\u15f4\3\2\2\2\u15f4\u15f5\3\2\2\2\u15f5\u15f6\5\u01be\u00e0"+
		"\2\u15f6\u01bd\3\2\2\2\u15f7\u15f9\t\37\2\2\u15f8\u15fa\5\6\4\2\u15f9"+
		"\u15f8\3\2\2\2\u15fa\u15fb\3\2\2\2\u15fb\u15f9\3\2\2\2\u15fb\u15fc\3\2"+
		"\2\2\u15fc\u15fe\3\2\2\2\u15fd\u15f7\3\2\2\2\u15fd\u15fe\3\2\2\2\u15fe"+
		"\u15ff\3\2\2\2\u15ff\u1613\5\u01c0\u00e1\2\u1600\u1602\7\u00ec\2\2\u1601"+
		"\u1603\5\6\4\2\u1602\u1601\3\2\2\2\u1603\u1604\3\2\2\2\u1604\u1602\3\2"+
		"\2\2\u1604\u1605\3\2\2\2\u1605\u1607\3\2\2\2\u1606\u1600\3\2\2\2\u1606"+
		"\u1607\3\2\2\2\u1607\u1608\3\2\2\2\u1608\u1610\t \2\2\u1609\u160b\5\6"+
		"\4\2\u160a\u1609\3\2\2\2\u160b\u160c\3\2\2\2\u160c\u160a\3\2\2\2\u160c"+
		"\u160d\3\2\2\2\u160d\u160e\3\2\2\2\u160e\u160f\7\u00a2\2\2\u160f\u1611"+
		"\3\2\2\2\u1610\u160a\3\2\2\2\u1610\u1611\3\2\2\2\u1611\u1613\3\2\2\2\u1612"+
		"\u15fd\3\2\2\2\u1612\u1606\3\2\2\2\u1613\u01bf\3\2\2\2\u1614\u1619\7\u01a0"+
		"\2\2\u1615\u1619\5\u0158\u00ad\2\u1616\u1619\7p\2\2\u1617\u1619\7\u0112"+
		"\2\2\u1618\u1614\3\2\2\2\u1618\u1615\3\2\2\2\u1618\u1616\3\2\2\2\u1618"+
		"\u1617\3\2\2\2\u1619\u01c1\3\2\2\2\u161a\u161b\7\u01a3\2\2\u161b\u01c3"+
		"\3\2\2\2\u161c\u1620\7\u00d0\2\2\u161d\u161f\5\6\4\2\u161e\u161d\3\2\2"+
		"\2\u161f\u1622\3\2\2\2\u1620\u161e\3\2\2\2\u1620\u1621\3\2\2\2\u1621\u1623"+
		"\3\2\2\2\u1622\u1620\3\2\2\2\u1623\u1627\7\u019d\2\2\u1624\u1626\5\6\4"+
		"\2\u1625\u1624\3\2\2\2\u1626\u1629\3\2\2\2\u1627\u1625\3\2\2\2\u1627\u1628"+
		"\3\2\2\2\u1628\u1661\3\2\2\2\u1629\u1627\3\2\2\2\u162a\u162e\5\u01de\u00f0"+
		"\2\u162b\u162d\5\6\4\2\u162c\u162b\3\2\2\2\u162d\u1630\3\2\2\2\u162e\u162c"+
		"\3\2\2\2\u162e\u162f\3\2\2\2\u162f\u1632\3\2\2\2\u1630\u162e\3\2\2\2\u1631"+
		"\u162a\3\2\2\2\u1632\u1635\3\2\2\2\u1633\u1631\3\2\2\2\u1633\u1634\3\2"+
		"\2\2\u1634\u163f\3\2\2\2\u1635\u1633\3\2\2\2\u1636\u163a\5\u01da\u00ee"+
		"\2\u1637\u1639\5\6\4\2\u1638\u1637\3\2\2\2\u1639\u163c\3\2\2\2\u163a\u1638"+
		"\3\2\2\2\u163a\u163b\3\2\2\2\u163b\u163e\3\2\2\2\u163c\u163a\3\2\2\2\u163d"+
		"\u1636\3\2\2\2\u163e\u1641\3\2\2\2\u163f\u163d\3\2\2\2\u163f\u1640\3\2"+
		"\2\2\u1640\u164b\3\2\2\2\u1641\u163f\3\2\2\2\u1642\u1646\5\u01ce\u00e8"+
		"\2\u1643\u1645\5\6\4\2\u1644\u1643\3\2\2\2\u1645\u1648\3\2\2\2\u1646\u1644"+
		"\3\2\2\2\u1646\u1647\3\2\2\2\u1647\u164a\3\2\2\2\u1648\u1646\3\2\2\2\u1649"+
		"\u1642\3\2\2\2\u164a\u164d\3\2\2\2\u164b\u1649\3\2\2\2\u164b\u164c\3\2"+
		"\2\2\u164c\u1657\3\2\2\2\u164d\u164b\3\2\2\2\u164e\u1652\5\u01c6\u00e4"+
		"\2\u164f\u1651\5\6\4\2\u1650\u164f\3\2\2\2\u1651\u1654\3\2\2\2\u1652\u1650"+
		"\3\2\2\2\u1652\u1653\3\2\2\2\u1653\u1656\3\2\2\2\u1654\u1652\3\2\2\2\u1655"+
		"\u164e\3\2\2\2\u1656\u1659\3\2\2\2\u1657\u1655\3\2\2\2\u1657\u1658\3\2"+
		"\2\2\u1658\u165a\3\2\2\2\u1659\u1657\3\2\2\2\u165a\u165e\7\u019d\2\2\u165b"+
		"\u165d\5\6\4\2\u165c\u165b\3\2\2\2\u165d\u1660\3\2\2\2\u165e\u165c\3\2"+
		"\2\2\u165e\u165f\3\2\2\2\u165f\u1662\3\2\2\2\u1660\u165e\3\2\2\2\u1661"+
		"\u1633\3\2\2\2\u1661\u1662\3\2\2\2\u1662\u01c5\3\2\2\2\u1663\u1665\7\u00ec"+
		"\2\2\u1664\u1666\5\6\4\2\u1665\u1664\3\2\2\2\u1666\u1667\3\2\2\2\u1667"+
		"\u1665\3\2\2\2\u1667\u1668\3\2\2\2\u1668\u1669\3\2\2\2\u1669\u166b\7\u00a2"+
		"\2\2\u166a\u166c\5\6\4\2\u166b\u166a\3\2\2\2\u166c\u166d\3\2\2\2\u166d"+
		"\u166b\3\2\2\2\u166d\u166e\3\2\2\2\u166e\u1675\3\2\2\2\u166f\u1671\7\u0161"+
		"\2\2\u1670\u1672\5\6\4\2\u1671\u1670\3\2\2\2\u1672\u1673\3\2\2\2\u1673"+
		"\u1671\3\2\2\2\u1673\u1674\3\2\2\2\u1674\u1676\3\2\2\2\u1675\u166f\3\2"+
		"\2\2\u1675\u1676\3\2\2\2\u1676\u167d\3\2\2\2\u1677\u1679\7Q\2\2\u1678"+
		"\u167a\5\6\4\2\u1679\u1678\3\2\2\2\u167a\u167b\3\2\2\2\u167b\u1679\3\2"+
		"\2\2\u167b\u167c\3\2\2\2\u167c\u167e\3\2\2\2\u167d\u1677\3\2\2\2\u167d"+
		"\u167e\3\2\2\2\u167e\u1686\3\2\2\2\u167f\u1683\5\u01c8\u00e5\2\u1680\u1682"+
		"\5\6\4\2\u1681\u1680\3\2\2\2\u1682\u1685\3\2\2\2\u1683\u1681\3\2\2\2\u1683"+
		"\u1684\3\2\2\2\u1684\u1687\3\2\2\2\u1685\u1683\3\2\2\2\u1686\u167f\3\2"+
		"\2\2\u1687\u1688\3\2\2\2\u1688\u1686\3\2\2\2\u1688\u1689\3\2\2\2\u1689"+
		"\u01c7\3\2\2\2\u168a\u1698\5\u01ca\u00e6\2\u168b\u168d\5\6\4\2\u168c\u168b"+
		"\3\2\2\2\u168d\u168e\3\2\2\2\u168e\u168c\3\2\2\2\u168e\u168f\3\2\2\2\u168f"+
		"\u1690\3\2\2\2\u1690\u1692\7\u010f\2\2\u1691\u1693\5\6\4\2\u1692\u1691"+
		"\3\2\2\2\u1693\u1694\3\2\2\2\u1694\u1692\3\2\2\2\u1694\u1695\3\2\2\2\u1695"+
		"\u1696\3\2\2\2\u1696\u1697\5\u01cc\u00e7\2\u1697\u1699\3\2\2\2\u1698\u168c"+
		"\3\2\2\2\u1698\u1699\3\2\2\2\u1699\u01c9\3\2\2\2\u169a\u169b\7\u01a3\2"+
		"\2\u169b\u01cb\3\2\2\2\u169c\u169d\7\u01a1\2\2\u169d\u01cd\3\2\2\2\u169e"+
		"\u16a0\7\u012b\2\2\u169f\u16a1\5\6\4\2\u16a0\u169f\3\2\2\2\u16a1\u16a2"+
		"\3\2\2\2\u16a2\u16a0\3\2\2\2\u16a2\u16a3\3\2\2\2\u16a3\u16b0\3\2\2\2\u16a4"+
		"\u16a6\7\u00fa\2\2\u16a5\u16a7\5\6\4\2\u16a6\u16a5\3\2\2\2\u16a7\u16a8"+
		"\3\2\2\2\u16a8\u16a6\3\2\2\2\u16a8\u16a9\3\2\2\2\u16a9\u16aa\3\2\2\2\u16aa"+
		"\u16ac\5\u01c2\u00e2\2\u16ab\u16ad\5\6\4\2\u16ac\u16ab\3\2\2\2\u16ad\u16ae"+
		"\3\2\2\2\u16ae\u16ac\3\2\2\2\u16ae\u16af\3\2\2\2\u16af\u16b1\3\2\2\2\u16b0"+
		"\u16a4\3\2\2\2\u16b0\u16b1\3\2\2\2\u16b1\u16b8\3\2\2\2\u16b2\u16b4\7\u0099"+
		"\2\2\u16b3\u16b5\5\6\4\2\u16b4\u16b3\3\2\2\2\u16b5\u16b6\3\2\2\2\u16b6"+
		"\u16b4\3\2\2\2\u16b6\u16b7\3\2\2\2\u16b7\u16b9\3\2\2\2\u16b8\u16b2\3\2"+
		"\2\2\u16b8\u16b9\3\2\2\2\u16b9\u16ba\3\2\2\2\u16ba\u16bb\5\u01d0\u00e9"+
		"\2\u16bb\u01cf\3\2\2\2\u16bc\u16be\5\u01d6\u00ec\2\u16bd\u16bf\5\6\4\2"+
		"\u16be\u16bd\3\2\2\2\u16bf\u16c0\3\2\2\2\u16c0\u16be\3\2\2\2\u16c0\u16c1"+
		"\3\2\2\2\u16c1\u16c8\3\2\2\2\u16c2\u16c4\7\u00f7\2\2\u16c3\u16c5\5\6\4"+
		"\2\u16c4\u16c3\3\2\2\2\u16c5\u16c6\3\2\2\2\u16c6\u16c4\3\2\2\2\u16c6\u16c7"+
		"\3\2\2\2\u16c7\u16c9\3\2\2\2\u16c8\u16c2\3\2\2\2\u16c8\u16c9\3\2\2\2\u16c9"+
		"\u16ca\3\2\2\2\u16ca\u16cb\5\u01c2\u00e2\2\u16cb\u16d6\3\2\2\2\u16cc\u16ce"+
		"\5\u01d2\u00ea\2\u16cd\u16cf\5\6\4\2\u16ce\u16cd\3\2\2\2\u16cf\u16d0\3"+
		"\2\2\2\u16d0\u16ce\3\2\2\2\u16d0\u16d1\3\2\2\2\u16d1\u16d2\3\2\2\2\u16d2"+
		"\u16d3\78\2\2\u16d3\u16d6\3\2\2\2\u16d4\u16d6\5\u01d4\u00eb\2\u16d5\u16bc"+
		"\3\2\2\2\u16d5\u16cc\3\2\2\2\u16d5\u16d4\3\2\2\2\u16d6\u01d1\3\2\2\2\u16d7"+
		"\u16d8\7\u01a1\2\2\u16d8\u01d3\3\2\2\2\u16d9\u16da\7\u01a3\2\2\u16da\u01d5"+
		"\3\2\2\2\u16db\u16dd\7z\2\2\u16dc\u16de\5\6\4\2\u16dd\u16dc\3\2\2\2\u16de"+
		"\u16df\3\2\2\2\u16df\u16dd\3\2\2\2\u16df\u16e0\3\2\2\2\u16e0\u16e7\3\2"+
		"\2\2\u16e1\u16e3\7\u00f7\2\2\u16e2\u16e4\5\6\4\2\u16e3\u16e2\3\2\2\2\u16e4"+
		"\u16e5\3\2\2\2\u16e5\u16e3\3\2\2\2\u16e5\u16e6\3\2\2\2\u16e6\u16e8\3\2"+
		"\2\2\u16e7\u16e1\3\2\2\2\u16e7\u16e8\3\2\2\2\u16e8\u16ea\3\2\2\2\u16e9"+
		"\u16db\3\2\2\2\u16e9\u16ea\3\2\2\2\u16ea\u16eb\3\2\2\2\u16eb\u16f5\t "+
		"\2\2\u16ec\u16ee\5\u01d8\u00ed\2\u16ed\u16ef\5\6\4\2\u16ee\u16ed\3\2\2"+
		"\2\u16ef\u16f0\3\2\2\2\u16f0\u16ee\3\2\2\2\u16f0\u16f1\3\2\2\2\u16f1\u16f2"+
		"\3\2\2\2\u16f2\u16f3\7\u011e\2\2\u16f3\u16f5\3\2\2\2\u16f4\u16e9\3\2\2"+
		"\2\u16f4\u16ec\3\2\2\2\u16f5\u01d7\3\2\2\2\u16f6\u16f7\7\u01a1\2\2\u16f7"+
		"\u01d9\3\2\2\2\u16f8\u16fa\7\u0136\2\2\u16f9\u16fb\5\6\4\2\u16fa\u16f9"+
		"\3\2\2\2\u16fb\u16fc\3\2\2\2\u16fc\u16fa\3\2\2\2\u16fc\u16fd\3\2\2\2\u16fd"+
		"\u1704\3\2\2\2\u16fe\u1700\t!\2\2\u16ff\u1701\5\6\4\2\u1700\u16ff\3\2"+
		"\2\2\u1701\u1702\3\2\2\2\u1702\u1700\3\2\2\2\u1702\u1703\3\2\2\2\u1703"+
		"\u1705\3\2\2\2\u1704\u16fe\3\2\2\2\u1704\u1705\3\2\2\2\u1705\u170c\3\2"+
		"\2\2\u1706\u1708\7\23\2\2\u1707\u1709\5\6\4\2\u1708\u1707\3\2\2\2\u1709"+
		"\u170a\3\2\2\2\u170a\u1708\3\2\2\2\u170a\u170b\3\2\2\2\u170b\u170d\3\2"+
		"\2\2\u170c\u1706\3\2\2\2\u170c\u170d\3\2\2\2\u170d\u1714\3\2\2\2\u170e"+
		"\u1710\7\u00ad\2\2\u170f\u1711\5\6\4\2\u1710\u170f\3\2\2\2\u1711\u1712"+
		"\3\2\2\2\u1712\u1710\3\2\2\2\u1712\u1713\3\2\2\2\u1713\u1715\3\2\2\2\u1714"+
		"\u170e\3\2\2\2\u1714\u1715\3\2\2\2\u1715\u1716\3\2\2\2\u1716\u171e\5\u01dc"+
		"\u00ef\2\u1717\u1719\5\6\4\2\u1718\u1717\3\2\2\2\u1719\u171a\3\2\2\2\u171a"+
		"\u1718\3\2\2\2\u171a\u171b\3\2\2\2\u171b\u171c\3\2\2\2\u171c\u171d\5\u01dc"+
		"\u00ef\2\u171d\u171f\3\2\2\2\u171e\u1718\3\2\2\2\u171f\u1720\3\2\2\2\u1720"+
		"\u171e\3\2\2\2\u1720\u1721\3\2\2\2\u1721\u01db\3\2\2\2\u1722\u1723\7\u01a3"+
		"\2\2\u1723\u01dd\3\2\2\2\u1724\u1726\7\21\2\2\u1725\u1727\5\6\4\2\u1726"+
		"\u1725\3\2\2\2\u1727\u1728\3\2\2\2\u1728\u1726\3\2\2\2\u1728\u1729\3\2"+
		"\2\2\u1729\u1730\3\2\2\2\u172a\u172c\5\u01e0\u00f1\2\u172b\u172d\5\6\4"+
		"\2\u172c\u172b\3\2\2\2\u172d\u172e\3\2\2\2\u172e\u172c\3\2\2\2\u172e\u172f"+
		"\3\2\2\2\u172f\u1731\3\2\2\2\u1730\u172a\3\2\2\2\u1731\u1732\3\2\2\2\u1732"+
		"\u1730\3\2\2\2\u1732\u1733\3\2\2\2\u1733\u1734\3\2\2\2\u1734\u1736\7\u00fa"+
		"\2\2\u1735\u1737\5\6\4\2\u1736\u1735\3\2\2\2\u1737\u1738\3\2\2\2\u1738"+
		"\u1736\3\2\2\2\u1738\u1739\3\2\2\2\u1739\u1741\3\2\2\2\u173a\u173e\5\u01c2"+
		"\u00e2\2\u173b\u173d\5\6\4\2\u173c\u173b\3\2\2\2\u173d\u1740\3\2\2\2\u173e"+
		"\u173c\3\2\2\2\u173e\u173f\3\2\2\2\u173f\u1742\3\2\2\2\u1740\u173e\3\2"+
		"\2\2\u1741\u173a\3\2\2\2\u1742\u1743\3\2\2\2\u1743\u1741\3\2\2\2\u1743"+
		"\u1744\3\2\2\2\u1744\u01df\3\2\2\2\u1745\u176b\7j\2\2\u1746\u1748\7\u009e"+
		"\2\2\u1747\u1749\5\6\4\2\u1748\u1747\3\2\2\2\u1749\u174a\3\2\2\2\u174a"+
		"\u1748\3\2\2\2\u174a\u174b\3\2\2\2\u174b\u174c\3\2\2\2\u174c\u174d\5\u01e6"+
		"\u00f4\2\u174d\u176b\3\2\2\2\u174e\u176b\7\u00a6\2\2\u174f\u176b\7\u00e1"+
		"\2\2\u1750\u176b\7\u00e6\2\2\u1751\u1753\t\"\2\2\u1752\u1754\5\6\4\2\u1753"+
		"\u1752\3\2\2\2\u1754\u1755\3\2\2\2\u1755\u1753\3\2\2\2\u1755\u1756\3\2"+
		"\2\2\u1756\u1758\3\2\2\2\u1757\u1751\3\2\2\2\u1757\u1758\3\2\2\2\u1758"+
		"\u1759\3\2\2\2\u1759\u175b\7\u0111\2\2\u175a\u175c\5\6\4\2\u175b\u175a"+
		"\3\2\2\2\u175c\u175d\3\2\2\2\u175d\u175b\3\2\2\2\u175d\u175e\3\2\2\2\u175e"+
		"\u175f\3\2\2\2\u175f\u1760\5\u01e4\u00f3\2\u1760\u176b\3\2\2\2\u1761\u176b"+
		"\7\u0113\2\2\u1762\u1764\7\u017d\2\2\u1763\u1765\5\6\4\2\u1764\u1763\3"+
		"\2\2\2\u1765\u1766\3\2\2\2\u1766\u1764\3\2\2\2\u1766\u1767\3\2\2\2\u1767"+
		"\u1768\3\2\2\2\u1768\u1769\5\u01e2\u00f2\2\u1769\u176b\3\2\2\2\u176a\u1745"+
		"\3\2\2\2\u176a\u1746\3\2\2\2\u176a\u174e\3\2\2\2\u176a\u174f\3\2\2\2\u176a"+
		"\u1750\3\2\2\2\u176a\u1757\3\2\2\2\u176a\u1761\3\2\2\2\u176a\u1762\3\2"+
		"\2\2\u176b\u01e1\3\2\2\2\u176c\u176d\7\u01a1\2\2\u176d\u01e3\3\2\2\2\u176e"+
		"\u176f\7\u01a1\2\2\u176f\u01e5\3\2\2\2\u1770\u1771\7\u01a1\2\2\u1771\u01e7"+
		"\3\2\2\2\u1772\u1773\b\u00f5\1\2\u1773\u1777\7\u0197\2\2\u1774\u1776\5"+
		"\b\5\2\u1775\u1774\3\2\2\2\u1776\u1779\3\2\2\2\u1777\u1775\3\2\2\2\u1777"+
		"\u1778\3\2\2\2\u1778\u177a\3\2\2\2\u1779\u1777\3\2\2\2\u177a\u177e\5\u01e8"+
		"\u00f5\2\u177b\u177d\5\b\5\2\u177c\u177b\3\2\2\2\u177d\u1780\3\2\2\2\u177e"+
		"\u177c\3\2\2\2\u177e\u177f\3\2\2\2\u177f\u1781\3\2\2\2\u1780\u177e\3\2"+
		"\2\2\u1781\u1782\7\u0198\2\2\u1782\u1793\3\2\2\2\u1783\u1787\5\u01ec\u00f7"+
		"\2\u1784\u1786\5\b\5\2\u1785\u1784\3\2\2\2\u1786\u1789\3\2\2\2\u1787\u1785"+
		"\3\2\2\2\u1787\u1788\3\2\2\2\u1788\u178a\3\2\2\2\u1789\u1787\3\2\2\2\u178a"+
		"\u178b\5\u01e8\u00f5\t\u178b\u1793\3\2\2\2\u178c\u1793\5\u0202\u0102\2"+
		"\u178d\u1793\7\u01a1\2\2\u178e\u1793\7\u01a0\2\2\u178f\u1793\7\u0184\2"+
		"\2\u1790\u1793\7\u0186\2\2\u1791\u1793\7\u0185\2\2\u1792\u1772\3\2\2\2"+
		"\u1792\u1783\3\2\2\2\u1792\u178c\3\2\2\2\u1792\u178d\3\2\2\2\u1792\u178e"+
		"\3\2\2\2\u1792\u178f\3\2\2\2\u1792\u1790\3\2\2\2\u1792\u1791\3\2\2\2\u1793"+
		"\u17a6\3\2\2\2\u1794\u1798\f\n\2\2\u1795\u1797\5\b\5\2\u1796\u1795\3\2"+
		"\2\2\u1797\u179a\3\2\2\2\u1798\u1796\3\2\2\2\u1798\u1799\3\2\2\2\u1799"+
		"\u179b\3\2\2\2\u179a\u1798\3\2\2\2\u179b\u179f\5\u01ea\u00f6\2\u179c\u179e"+
		"\5\b\5\2\u179d\u179c\3\2\2\2\u179e\u17a1\3\2\2\2\u179f\u179d\3\2\2\2\u179f"+
		"\u17a0\3\2\2\2\u17a0\u17a2\3\2\2\2\u17a1\u179f\3\2\2\2\u17a2\u17a3\5\u01e8"+
		"\u00f5\13\u17a3\u17a5\3\2\2\2\u17a4\u1794\3\2\2\2\u17a5\u17a8\3\2\2\2"+
		"\u17a6\u17a4\3\2\2\2\u17a6\u17a7\3\2\2\2\u17a7\u01e9\3\2\2\2\u17a8\u17a6"+
		"\3\2\2\2\u17a9\u17b0\7\u018b\2\2\u17aa\u17b0\7\u018c\2\2\u17ab\u17b0\7"+
		"\u018d\2\2\u17ac\u17b0\7\u018e\2\2\u17ad\u17ae\7\u018d\2\2\u17ae\u17b0"+
		"\7\u018d\2\2\u17af\u17a9\3\2\2\2\u17af\u17aa\3\2\2\2\u17af\u17ab\3\2\2"+
		"\2\u17af\u17ac\3\2\2\2\u17af\u17ad\3\2\2\2\u17b0\u01eb\3\2\2\2\u17b1\u17b2"+
		"\t#\2\2\u17b2\u01ed\3\2\2\2\u17b3\u17b4\b\u00f8\1\2\u17b4\u17b8\7\u0197"+
		"\2\2\u17b5\u17b7\5\b\5\2\u17b6\u17b5\3\2\2\2\u17b7\u17ba\3\2\2\2\u17b8"+
		"\u17b6\3\2\2\2\u17b8\u17b9\3\2\2\2\u17b9\u17bb\3\2\2\2\u17ba\u17b8\3\2"+
		"\2\2\u17bb\u17bf\5\u01ee\u00f8\2\u17bc\u17be\5\b\5\2\u17bd\u17bc\3\2\2"+
		"\2\u17be\u17c1\3\2\2\2\u17bf\u17bd\3\2\2\2\u17bf\u17c0\3\2\2\2\u17c0\u17c2"+
		"\3\2\2\2\u17c1\u17bf\3\2\2\2\u17c2\u17c3\7\u0198\2\2\u17c3\u17d1\3\2\2"+
		"\2\u17c4\u17c8\7\u00f2\2\2\u17c5\u17c7\5\b\5\2\u17c6\u17c5\3\2\2\2\u17c7"+
		"\u17ca\3\2\2\2\u17c8\u17c6\3\2\2\2\u17c8\u17c9\3\2\2\2\u17c9\u17cb\3\2"+
		"\2\2\u17ca\u17c8\3\2\2\2\u17cb\u17d1\5\u01ee\u00f8\7\u17cc\u17d1\5\u01fa"+
		"\u00fe\2\u17cd\u17d1\5\u01f2\u00fa\2\u17ce\u17d1\5\u01f6\u00fc\2\u17cf"+
		"\u17d1\5\u01f0\u00f9\2\u17d0\u17b3\3\2\2\2\u17d0\u17c4\3\2\2\2\u17d0\u17cc"+
		"\3\2\2\2\u17d0\u17cd\3\2\2\2\u17d0\u17ce\3\2\2\2\u17d0\u17cf\3\2\2\2\u17d1"+
		"\u17e4\3\2\2\2\u17d2\u17d6\f\b\2\2\u17d3\u17d5\5\b\5\2\u17d4\u17d3\3\2"+
		"\2\2\u17d5\u17d8\3\2\2\2\u17d6\u17d4\3\2\2\2\u17d6\u17d7\3\2\2\2\u17d7"+
		"\u17d9\3\2\2\2\u17d8\u17d6\3\2\2\2\u17d9\u17dd\5\u01f4\u00fb\2\u17da\u17dc"+
		"\5\b\5\2\u17db\u17da\3\2\2\2\u17dc\u17df\3\2\2\2\u17dd\u17db\3\2\2\2\u17dd"+
		"\u17de\3\2\2\2\u17de\u17e0\3\2\2\2\u17df\u17dd\3\2\2\2\u17e0\u17e1\5\u01ee"+
		"\u00f8\t\u17e1\u17e3\3\2\2\2\u17e2\u17d2\3\2\2\2\u17e3\u17e6\3\2\2\2\u17e4"+
		"\u17e2\3\2\2\2\u17e4\u17e5\3\2\2\2\u17e5\u01ef\3\2\2\2\u17e6\u17e4\3\2"+
		"\2\2\u17e7\u17ef\5\u0158\u00ad\2\u17e8\u17ea\5\b\5\2\u17e9\u17e8\3\2\2"+
		"\2\u17ea\u17eb\3\2\2\2\u17eb\u17e9\3\2\2\2\u17eb\u17ec\3\2\2\2\u17ec\u17ed"+
		"\3\2\2\2\u17ed\u17ee\7\u00ce\2\2\u17ee\u17f0\3\2\2\2\u17ef\u17e9\3\2\2"+
		"\2\u17ef\u17f0\3\2\2\2\u17f0\u17f2\3\2\2\2\u17f1\u17f3\5\b\5\2\u17f2\u17f1"+
		"\3\2\2\2\u17f3\u17f4\3\2\2\2\u17f4\u17f2\3\2\2\2\u17f4\u17f5\3\2\2\2\u17f5"+
		"\u17f6\3\2\2\2\u17f6\u17f7\t$\2\2\u17f7\u01f1\3\2\2\2\u17f8\u17f9\b\u00fa"+
		"\1\2\u17f9\u17fd\5\u01e8\u00f5\2\u17fa\u17fc\5\b\5\2\u17fb\u17fa\3\2\2"+
		"\2\u17fc\u17ff\3\2\2\2\u17fd\u17fb\3\2\2\2\u17fd\u17fe\3\2\2\2\u17fe\u1800"+
		"\3\2\2\2\u17ff\u17fd\3\2\2\2\u1800\u1804\5\u01fe\u0100\2\u1801\u1803\5"+
		"\b\5\2\u1802\u1801\3\2\2\2\u1803\u1806\3\2\2\2\u1804\u1802\3\2\2\2\u1804"+
		"\u1805\3\2\2\2\u1805\u1807\3\2\2\2\u1806\u1804\3\2\2\2\u1807\u1808\5\u01e8"+
		"\u00f5\2\u1808\u180c\3\2\2\2\u1809\u180c\5\u01fa\u00fe\2\u180a\u180c\5"+
		"\u0158\u00ad\2\u180b\u17f8\3\2\2\2\u180b\u1809\3\2\2\2\u180b\u180a\3\2"+
		"\2\2\u180c\u1825\3\2\2\2\u180d\u180f\f\3\2\2\u180e\u1810\5\b\5\2\u180f"+
		"\u180e\3\2\2\2\u1810\u1811\3\2\2\2\u1811\u180f\3\2\2\2\u1811\u1812\3\2"+
		"\2\2\u1812\u1813\3\2\2\2\u1813\u1817\5\u01f4\u00fb\2\u1814\u1816\5\b\5"+
		"\2\u1815\u1814\3\2\2\2\u1816\u1819\3\2\2\2\u1817\u1815\3\2\2\2\u1817\u1818"+
		"\3\2\2\2\u1818\u181a\3\2\2\2\u1819\u1817\3\2\2\2\u181a\u181e\5\u01fe\u0100"+
		"\2\u181b\u181d\5\b\5\2\u181c\u181b\3\2\2\2\u181d\u1820\3\2\2\2\u181e\u181c"+
		"\3\2\2\2\u181e\u181f\3\2\2\2\u181f\u1821\3\2\2\2\u1820\u181e\3\2\2\2\u1821"+
		"\u1822\5\u01e8\u00f5\2\u1822\u1824\3\2\2\2\u1823\u180d\3\2\2\2\u1824\u1827"+
		"\3\2\2\2\u1825\u1823\3\2\2\2\u1825\u1826\3\2\2\2\u1826\u01f3\3\2\2\2\u1827"+
		"\u1825\3\2\2\2\u1828\u1829\t%\2\2\u1829\u01f5\3\2\2\2\u182a\u1832\5\u01e8"+
		"\u00f5\2\u182b\u182d\5\b\5\2\u182c\u182b\3\2\2\2\u182d\u182e\3\2\2\2\u182e"+
		"\u182c\3\2\2\2\u182e\u182f\3\2\2\2\u182f\u1830\3\2\2\2\u1830\u1831\7\u00ce"+
		"\2\2\u1831\u1833\3\2\2\2\u1832\u182c\3\2\2\2\u1832\u1833\3\2\2\2\u1833"+
		"\u183b\3\2\2\2\u1834\u1836\5\b\5\2\u1835\u1834\3\2\2\2\u1836\u1837\3\2"+
		"\2\2\u1837\u1835\3\2\2\2\u1837\u1838\3\2\2\2\u1838\u1839\3\2\2\2\u1839"+
		"\u183a\7\u00f2\2\2\u183a\u183c\3\2\2\2\u183b\u1835\3\2\2\2\u183b\u183c"+
		"\3\2\2\2\u183c\u183e\3\2\2\2\u183d\u183f\5\b\5\2\u183e\u183d\3\2\2\2\u183f"+
		"\u1840\3\2\2\2\u1840\u183e\3\2\2\2\u1840\u1841\3\2\2\2\u1841\u1842\3\2"+
		"\2\2\u1842\u1843\5\u01f8\u00fd\2\u1843\u01f7\3\2\2\2\u1844\u1845\t&\2"+
		"\2\u1845\u01f9\3\2\2\2\u1846\u184e\5\u0202\u0102\2\u1847\u1849\5\b\5\2"+
		"\u1848\u1847\3\2\2\2\u1849\u184a\3\2\2\2\u184a\u1848\3\2\2\2\u184a\u184b"+
		"\3\2\2\2\u184b\u184c\3\2\2\2\u184c\u184d\7\u00ce\2\2\u184d\u184f\3\2\2"+
		"\2\u184e\u1848\3\2\2\2\u184e\u184f\3\2\2\2\u184f\u1857\3\2\2\2\u1850\u1852"+
		"\5\b\5\2\u1851\u1850\3\2\2\2\u1852\u1853\3\2\2\2\u1853\u1851\3\2\2\2\u1853"+
		"\u1854\3\2\2\2\u1854\u1855\3\2\2\2\u1855\u1856\7\u00f2\2\2\u1856\u1858"+
		"\3\2\2\2\u1857\u1851\3\2\2\2\u1857\u1858\3\2\2\2\u1858\u185a\3\2\2\2\u1859"+
		"\u185b\5\b\5\2\u185a\u1859\3\2\2\2\u185b\u185c\3\2\2\2\u185c\u185a\3\2"+
		"\2\2\u185c\u185d\3\2\2\2\u185d\u185e\3\2\2\2\u185e\u185f\5\u01fc\u00ff"+
		"\2\u185f\u01fb\3\2\2\2\u1860\u1861\t\'\2\2\u1861\u01fd\3\2\2\2\u1862\u1866"+
		"\7\u00ce\2\2\u1863\u1865\5\b\5\2\u1864\u1863\3\2\2\2\u1865\u1868\3\2\2"+
		"\2\u1866\u1864\3\2\2\2\u1866\u1867\3\2\2\2\u1867\u186a\3\2\2\2\u1868\u1866"+
		"\3\2\2\2\u1869\u1862\3\2\2\2\u1869\u186a\3\2\2\2\u186a\u18f2\3\2\2\2\u186b"+
		"\u186f\7\u00f2\2\2\u186c\u186e\5\b\5\2\u186d\u186c\3\2\2\2\u186e\u1871"+
		"\3\2\2\2\u186f\u186d\3\2\2\2\u186f\u1870\3\2\2\2\u1870\u1873\3\2\2\2\u1871"+
		"\u186f\3\2\2\2\u1872\u186b\3\2\2\2\u1872\u1873\3\2\2\2\u1873\u18b0\3\2"+
		"\2\2\u1874\u187c\7\u00b6\2\2\u1875\u1877\5\b\5\2\u1876\u1875\3\2\2\2\u1877"+
		"\u1878\3\2\2\2\u1878\u1876\3\2\2\2\u1878\u1879\3\2\2\2\u1879\u187a\3\2"+
		"\2\2\u187a\u187b\7\u0163\2\2\u187b\u187d\3\2\2\2\u187c\u1876\3\2\2\2\u187c"+
		"\u187d\3\2\2\2\u187d\u18b1\3\2\2\2\u187e\u1886\7\u0196\2\2\u187f\u1881"+
		"\5\b\5\2\u1880\u187f\3\2\2\2\u1881\u1882\3\2\2\2\u1882\u1880\3\2\2\2\u1882"+
		"\u1883\3\2\2\2\u1883\u1884\3\2\2\2\u1884\u1885\7\u0163\2\2\u1885\u1887"+
		"\3\2\2\2\u1886\u1880\3\2\2\2\u1886\u1887\3\2\2\2\u1887\u18b1\3\2\2\2\u1888"+
		"\u1890\7\u00d8\2\2\u1889\u188b\5\b\5\2\u188a\u1889\3\2\2\2\u188b\u188c"+
		"\3\2\2\2\u188c\u188a\3\2\2\2\u188c\u188d\3\2\2\2\u188d\u188e\3\2\2\2\u188e"+
		"\u188f\7\u0163\2\2\u188f\u1891\3\2\2\2\u1890\u188a\3\2\2\2\u1890\u1891"+
		"\3\2\2\2\u1891\u18b1\3\2\2\2\u1892\u189a\7\u0193\2\2\u1893\u1895\5\b\5"+
		"\2\u1894\u1893\3\2\2\2\u1895\u1896\3\2\2\2\u1896\u1894\3\2\2\2\u1896\u1897"+
		"\3\2\2\2\u1897\u1898\3\2\2\2\u1898\u1899\7\u0163\2\2\u1899\u189b\3\2\2"+
		"\2\u189a\u1894\3\2\2\2\u189a\u189b\3\2\2\2\u189b\u18b1\3\2\2\2\u189c\u18a4"+
		"\7\u0095\2\2\u189d\u189f\5\b\5\2\u189e\u189d\3\2\2\2\u189f\u18a0\3\2\2"+
		"\2\u18a0\u189e\3\2\2\2\u18a0\u18a1\3\2\2\2\u18a1\u18a2\3\2\2\2\u18a2\u18a3"+
		"\7\u0168\2\2\u18a3\u18a5\3\2\2\2\u18a4\u189e\3\2\2\2\u18a4\u18a5\3\2\2"+
		"\2\u18a5\u18b1\3\2\2\2\u18a6\u18ae\7\u0192\2\2\u18a7\u18a9\5\b\5\2\u18a8"+
		"\u18a7\3\2\2\2\u18a9\u18aa\3\2\2\2\u18aa\u18a8\3\2\2\2\u18aa\u18ab\3\2"+
		"\2\2\u18ab\u18ac\3\2\2\2\u18ac\u18ad\7\u0168\2\2\u18ad\u18af\3\2\2\2\u18ae"+
		"\u18a8\3\2\2\2\u18ae\u18af\3\2\2\2\u18af\u18b1\3\2\2\2\u18b0\u1874\3\2"+
		"\2\2\u18b0\u187e\3\2\2\2\u18b0\u1888\3\2\2\2\u18b0\u1892\3\2\2\2\u18b0"+
		"\u189c\3\2\2\2\u18b0\u18a6\3\2\2\2\u18b1\u18f3\3\2\2\2\u18b2\u18ba\7\u00b6"+
		"\2\2\u18b3\u18b5\5\b\5\2\u18b4\u18b3\3\2\2\2\u18b5\u18b6\3\2\2\2\u18b6"+
		"\u18b4\3\2\2\2\u18b6\u18b7\3\2\2\2\u18b7\u18b8\3\2\2\2\u18b8\u18b9\7\u0163"+
		"\2\2\u18b9\u18bb\3\2\2\2\u18ba\u18b4\3\2\2\2\u18ba\u18bb\3\2\2\2\u18bb"+
		"\u18bd\3\2\2\2\u18bc\u18be\5\b\5\2\u18bd\u18bc\3\2\2\2\u18be\u18bf\3\2"+
		"\2\2\u18bf\u18bd\3\2\2\2\u18bf\u18c0\3\2\2\2\u18c0\u18c1\3\2\2\2\u18c1"+
		"\u18c3\7\u00fe\2\2\u18c2\u18c4\5\b\5\2\u18c3\u18c2\3\2\2\2\u18c4\u18c5"+
		"\3\2\2\2\u18c5\u18c3\3\2\2\2\u18c5\u18c6\3\2\2\2\u18c6\u18c7\3\2\2\2\u18c7"+
		"\u18cf\7\u0095\2\2\u18c8\u18ca\5\b\5\2\u18c9\u18c8\3\2\2\2\u18ca\u18cb"+
		"\3\2\2\2\u18cb\u18c9\3\2\2\2\u18cb\u18cc\3\2\2\2\u18cc\u18cd\3\2\2\2\u18cd"+
		"\u18ce\7\u0168\2\2\u18ce\u18d0\3\2\2\2\u18cf\u18c9\3\2\2\2\u18cf\u18d0"+
		"\3\2\2\2\u18d0\u18f3\3\2\2\2\u18d1\u18f3\7\u0195\2\2\u18d2\u18da\7\u00d8"+
		"\2\2\u18d3\u18d5\5\b\5\2\u18d4\u18d3\3\2\2\2\u18d5\u18d6\3\2\2\2\u18d6"+
		"\u18d4\3\2\2\2\u18d6\u18d7\3\2\2\2\u18d7\u18d8\3\2\2\2\u18d8\u18d9\7\u0163"+
		"\2\2\u18d9\u18db\3\2\2\2\u18da\u18d4\3\2\2\2\u18da\u18db\3\2\2\2\u18db"+
		"\u18dd\3\2\2\2\u18dc\u18de\5\b\5\2\u18dd\u18dc\3\2\2\2\u18de\u18df\3\2"+
		"\2\2\u18df\u18dd\3\2\2\2\u18df\u18e0\3\2\2\2\u18e0\u18e1\3\2\2\2\u18e1"+
		"\u18e3\7\u00fe\2\2\u18e2\u18e4\5\b\5\2\u18e3\u18e2\3\2\2\2\u18e4\u18e5"+
		"\3\2\2\2\u18e5\u18e3\3\2\2\2\u18e5\u18e6\3\2\2\2\u18e6\u18e7\3\2\2\2\u18e7"+
		"\u18ef\7\u0095\2\2\u18e8\u18ea\5\b\5\2\u18e9\u18e8\3\2\2\2\u18ea\u18eb"+
		"\3\2\2\2\u18eb\u18e9\3\2\2\2\u18eb\u18ec\3\2\2\2\u18ec\u18ed\3\2\2\2\u18ed"+
		"\u18ee\7\u0168\2\2\u18ee\u18f0\3\2\2\2\u18ef\u18e9\3\2\2\2\u18ef\u18f0"+
		"\3\2\2\2\u18f0\u18f3\3\2\2\2\u18f1\u18f3\7\u0194\2\2\u18f2\u1872\3\2\2"+
		"\2\u18f2\u18b2\3\2\2\2\u18f2\u18d1\3\2\2\2\u18f2\u18d2\3\2\2\2\u18f2\u18f1"+
		"\3\2\2\2\u18f3\u01ff\3\2\2\2\u18f4\u18fc\5\u0158\u00ad\2\u18f5\u18f7\5"+
		"\b\5\2\u18f6\u18f5\3\2\2\2\u18f7\u18fa\3\2\2\2\u18f8\u18f6\3\2\2\2\u18f8"+
		"\u18f9\3\2\2\2\u18f9\u18fb\3\2\2\2\u18fa\u18f8\3\2\2\2\u18fb\u18fd\5\u0206"+
		"\u0104\2\u18fc\u18f8\3\2\2\2\u18fc\u18fd\3\2\2\2\u18fd\u1905\3\2\2\2\u18fe"+
		"\u1900\5\b\5\2\u18ff\u18fe\3\2\2\2\u1900\u1903\3\2\2\2\u1901\u18ff\3\2"+
		"\2\2\u1901\u1902\3\2\2\2\u1902\u1904\3\2\2\2\u1903\u1901\3\2\2\2\u1904"+
		"\u1906\5\u0208\u0105\2\u1905\u1901\3\2\2\2\u1905\u1906\3\2\2\2\u1906\u0201"+
		"\3\2\2\2\u1907\u1923\5\u0200\u0101\2\u1908\u190c\7\u00b1\2\2\u1909\u190b"+
		"\5\b\5\2\u190a\u1909\3\2\2\2\u190b\u190e\3\2\2\2\u190c\u190a\3\2\2\2\u190c"+
		"\u190d\3\2\2\2\u190d\u190f\3\2\2\2\u190e\u190c\3\2\2\2\u190f\u1917\5\u020e"+
		"\u0108\2\u1910\u1912\5\b\5\2\u1911\u1910\3\2\2\2\u1912\u1915\3\2\2\2\u1913"+
		"\u1911\3\2\2\2\u1913\u1914\3\2\2\2\u1914\u1916\3\2\2\2\u1915\u1913\3\2"+
		"\2\2\u1916\u1918\5\u0204\u0103\2\u1917\u1913\3\2\2\2\u1917\u1918\3\2\2"+
		"\2\u1918\u1920\3\2\2\2\u1919\u191b\5\b\5\2\u191a\u1919\3\2\2\2\u191b\u191e"+
		"\3\2\2\2\u191c\u191a\3\2\2\2\u191c\u191d\3\2\2\2\u191d\u191f\3\2\2\2\u191e"+
		"\u191c\3\2\2\2\u191f\u1921\5\u0208\u0105\2\u1920\u191c\3\2\2\2\u1920\u1921"+
		"\3\2\2\2\u1921\u1923\3\2\2\2\u1922\u1907\3\2\2\2\u1922\u1908\3\2\2\2\u1923"+
		"\u0203\3\2\2\2\u1924\u1925\5\u0206\u0104\2\u1925\u0205\3\2\2\2\u1926\u192a"+
		"\7\u0197\2\2\u1927\u1929\5\b\5\2\u1928\u1927\3\2\2\2\u1929\u192c\3\2\2"+
		"\2\u192a\u1928\3\2\2\2\u192a\u192b\3\2\2\2\u192b\u192f\3\2\2\2\u192c\u192a"+
		"\3\2\2\2\u192d\u1930\5\u01e8\u00f5\2\u192e\u1930\7\7\2\2\u192f\u192d\3"+
		"\2\2\2\u192f\u192e\3\2\2\2\u1930\u193d\3\2\2\2\u1931\u1933\5\6\4\2\u1932"+
		"\u1931\3\2\2\2\u1933\u1936\3\2\2\2\u1934\u1932\3\2\2\2\u1934\u1935\3\2"+
		"\2\2\u1935\u1939\3\2\2\2\u1936\u1934\3\2\2\2\u1937\u193a\5\u01e8\u00f5"+
		"\2\u1938\u193a\7\7\2\2\u1939\u1937\3\2\2\2\u1939\u1938\3\2\2\2\u193a\u193c"+
		"\3\2\2\2\u193b\u1934\3\2\2\2\u193c\u193f\3\2\2\2\u193d\u193b\3\2\2\2\u193d"+
		"\u193e\3\2\2\2\u193e\u1943\3\2\2\2\u193f\u193d\3\2\2\2\u1940\u1942\5\b"+
		"\5\2\u1941\u1940\3\2\2\2\u1942\u1945\3\2\2\2\u1943\u1941\3\2\2\2\u1943"+
		"\u1944\3\2\2\2\u1944\u1946\3\2\2\2\u1945\u1943\3\2\2\2\u1946\u1947\7\u0198"+
		"\2\2\u1947\u0207\3\2\2\2\u1948\u194c\7\u0197\2\2\u1949\u194b\5\b\5\2\u194a"+
		"\u1949\3\2\2\2\u194b\u194e\3\2\2\2\u194c\u194a\3\2\2\2\u194c\u194d\3\2"+
		"\2\2\u194d\u194f\3\2\2\2\u194e\u194c\3\2\2\2\u194f\u1953\5\u020a\u0106"+
		"\2\u1950\u1952\5\b\5\2\u1951\u1950\3\2\2\2\u1952\u1955\3\2\2\2\u1953\u1951"+
		"\3\2\2\2\u1953\u1954\3\2\2\2\u1954\u1956\3\2\2\2\u1955\u1953\3\2\2\2\u1956"+
		"\u195e\7\u0191\2\2\u1957\u1959\5\b\5\2\u1958\u1957\3\2\2\2\u1959\u195c"+
		"\3\2\2\2\u195a\u1958\3\2\2\2\u195a\u195b\3\2\2\2\u195b\u195d\3\2\2\2\u195c"+
		"\u195a\3\2\2\2\u195d\u195f\5\u020c\u0107\2\u195e\u195a\3\2\2\2\u195e\u195f"+
		"\3\2\2\2\u195f\u1963\3\2\2\2\u1960\u1962\5\b\5\2\u1961\u1960\3\2\2\2\u1962"+
		"\u1965\3\2\2\2\u1963\u1961\3\2\2\2\u1963\u1964\3\2\2\2\u1964\u1966\3\2"+
		"\2\2\u1965\u1963\3\2\2\2\u1966\u1967\7\u0198\2\2\u1967\u0209\3\2\2\2\u1968"+
		"\u1969\5\u01e8\u00f5\2\u1969\u020b\3\2\2\2\u196a\u196b\5\u01e8\u00f5\2"+
		"\u196b\u020d\3\2\2\2\u196c\u196d\7\u01a3\2\2\u196d\u020f\3\2\2\2\u0447"+
		"\u0212\u0214\u0225\u022d\u0233\u0239\u0241\u0245\u0249\u024c\u024f\u0253"+
		"\u0259\u025e\u0265\u026a\u026d\u0273\u0279\u027d\u0282\u0289\u028f\u0293"+
		"\u0298\u029c\u02a1\u02a8\u02b1\u02b8\u02bf\u02c4\u02ca\u02d0\u02d7\u02df"+
		"\u02e5\u02ee\u02f5\u02fc\u0301\u0308\u030d\u0312\u0319\u0320\u0324\u0329"+
		"\u032f\u0333\u0338\u033e\u0344\u0348\u034d\u0353\u035a\u0361\u0367\u036b"+
		"\u0373\u0379\u0380\u0386\u038c\u0390\u0395\u039c\u03a7\u03ad\u03b3\u03ba"+
		"\u03c2\u03cb\u03d1\u03db\u03e1\u03e7\u03eb\u03f1\u03f7\u03fb\u03fd\u0403"+
		"\u0409\u040d\u0413\u0419\u041d\u041f\u0425\u042b\u0431\u0437\u043b\u0440"+
		"\u0444\u044c\u0452\u0458\u045c\u0461\u0467\u046b\u0470\u0474\u0479\u047d"+
		"\u0483\u0489\u048f\u0497\u049d\u04a3\u04a8\u04ac\u04ae\u04b3\u04b7\u04bd"+
		"\u04c3\u04c5\u04cb\u04d1\u04d3\u04d9\u04df\u04e4\u04e8\u04ea\u04ef\u04f3"+
		"\u04f9\u04ff\u0503\u0508\u050c\u0511\u0515\u051b\u051d\u0523\u0527\u052d"+
		"\u0531\u0533\u0539\u053f\u0541\u0545\u054b\u0551\u0553\u0557\u055d\u055f"+
		"\u0565\u0569\u056e\u0576\u0578\u057e\u0582\u0587\u058f\u0595\u0597\u059d"+
		"\u05a1\u05a3\u05a8\u05b0\u05b2\u05b5\u05be\u05c0\u05c7\u05cb\u05d1\u05d3"+
		"\u05db\u05dd\u05e3\u05eb\u05f1\u05f3\u05fb\u05fd\u0603\u0607\u060c\u0610"+
		"\u061b\u061f\u0621\u0627\u062f\u0631\u0638\u063a\u0640\u0648\u064a\u0651"+
		"\u0653\u0659\u065d\u0663\u066a\u0670\u0674\u0676\u067c\u0680\u0682\u0688"+
		"\u068c\u0692\u0696\u069a\u06a4\u06a6\u06ac\u06b4\u06b6\u06bc\u06c4\u06ca"+
		"\u06d1\u06d8\u06db\u06e1\u06e4\u06ea\u06ed\u06f3\u06f6\u06fc\u06ff\u0705"+
		"\u070b\u0712\u0719\u071f\u0727\u072d\u0730\u0735\u073a\u0741\u0747\u074e"+
		"\u0755\u075a\u0761\u0767\u076e\u0775\u077a\u0781\u0787\u078e\u0795\u079b"+
		"\u07a1\u07a6\u07ad\u07b3\u07ba\u07c1\u07c6\u07cd\u07d3\u07da\u07df\u07e8"+
		"\u07ee\u07f5\u07fa\u0803\u0809\u0810\u0815\u081e\u0820\u0827\u0829\u0837"+
		"\u083d\u0843\u084a\u084e\u0850\u0855\u085b\u085f\u0864\u086a\u0875\u0877"+
		"\u087e\u0880\u088b\u088f\u0895\u0899\u089f\u08a5\u08a7\u08ad\u08b3\u08b9"+
		"\u08bf\u08c3\u08cd\u08d1\u08d7\u08db\u08dd\u08e2\u08e8\u08ee\u08f5\u08f9"+
		"\u0900\u0908\u090c\u0912\u0920\u0926\u092c\u0932\u0936\u093c\u0942\u0944"+
		"\u094a\u0950\u0959\u095f\u0961\u0967\u0969\u096f\u0975\u097e\u0986\u098c"+
		"\u0992\u0998\u099e\u09a4\u09a6\u09aa\u09b6\u09bc\u09c3\u09c7\u09cc\u09d2"+
		"\u09db\u09e1\u09e3\u09e9\u09eb\u09f3\u09f9\u09ff\u0a01\u0a09\u0a0f\u0a11"+
		"\u0a19\u0a1f\u0a21\u0a23\u0a2a\u0a30\u0a32\u0a3a\u0a40\u0a42\u0a48\u0a4a"+
		"\u0a52\u0a56\u0a5c\u0a60\u0a68\u0a6e\u0a70\u0a78\u0a7e\u0a80\u0a85\u0a8b"+
		"\u0a8f\u0a94\u0a96\u0a9c\u0aa2\u0aa6\u0aac\u0ab2\u0ab8\u0abe\u0ac2\u0ac7"+
		"\u0acd\u0ad2\u0ad7\u0ade\u0ae4\u0ae6\u0aea\u0afa\u0b03\u0b0c\u0b11\u0b16"+
		"\u0b20\u0b25\u0b2a\u0b32\u0b3b\u0b40\u0b49\u0b51\u0b55\u0b5b\u0b61\u0b63"+
		"\u0b69\u0b6d\u0b73\u0b77\u0b7f\u0b81\u0b88\u0b90\u0b94\u0b9a\u0b9e\u0ba0"+
		"\u0ba5\u0bab\u0bb1\u0bb8\u0bbe\u0bc1\u0bc7\u0bcd\u0bd3\u0bd5\u0bdb\u0be1"+
		"\u0be3\u0be5\u0beb\u0bef\u0bf4\u0bfa\u0bfe\u0c03\u0c09\u0c0f\u0c13\u0c18"+
		"\u0c1e\u0c24\u0c28\u0c2d\u0c33\u0c37\u0c39\u0c4d\u0c51\u0c56\u0c58\u0c61"+
		"\u0c65\u0c6b\u0c6f\u0c75\u0c79\u0c7f\u0c83\u0c9b\u0ca1\u0ca7\u0ca9\u0cb0"+
		"\u0cba\u0cc0\u0cc4\u0cca\u0cce\u0cd0\u0cd5\u0cdb\u0ce1\u0cea\u0cf0\u0cf2"+
		"\u0cf8\u0cfc\u0d01\u0d07\u0d09\u0d0f\u0d15\u0d17\u0d1b\u0d20\u0d26\u0d28"+
		"\u0d2e\u0d30\u0d36\u0d3a\u0d3f\u0d45\u0d47\u0d4d\u0d4f\u0d55\u0d59\u0d5d"+
		"\u0d61\u0d65\u0d69\u0d6f\u0d75\u0d79\u0d7f\u0d83\u0d85\u0d8b\u0d91\u0d9a"+
		"\u0da0\u0da6\u0dac\u0dae\u0db4\u0dba\u0dc0\u0dc4\u0dca\u0dce\u0dd0\u0dd5"+
		"\u0ddd\u0de5\u0de7\u0ded\u0df3\u0df5\u0dfb\u0e02\u0e05\u0e0b\u0e0d\u0e13"+
		"\u0e19\u0e1b\u0e21\u0e24\u0e2a\u0e2c\u0e2f\u0e35\u0e39\u0e3e\u0e45\u0e48"+
		"\u0e4e\u0e54\u0e56\u0e5a\u0e5c\u0e68\u0e6c\u0e6e\u0e73\u0e79\u0e84\u0e8c"+
		"\u0e92\u0e94\u0e9c\u0ea2\u0ea4\u0eaf\u0eb5\u0eb7\u0eb9\u0ec4\u0ed0\u0ed6"+
		"\u0ed8\u0ede\u0ee0\u0ee6\u0ee8\u0ef0\u0ef6\u0ef8\u0efe\u0f00\u0f06\u0f08"+
		"\u0f10\u0f16\u0f18\u0f20\u0f26\u0f28\u0f30\u0f34\u0f3a\u0f41\u0f45\u0f48"+
		"\u0f4a\u0f50\u0f58\u0f5c\u0f62\u0f6a\u0f72\u0f78\u0f7f\u0f85\u0f90\u0f96"+
		"\u0f9d\u0fa4\u0fa8\u0fad\u0fb1\u0fb6\u0fc1\u0fc3\u0fc9\u0fcd\u0fd3\u0fd5"+
		"\u0fdb\u0fe5\u0fea\u0ff0\u0ff7\u0ffe\u1005\u100c\u1013\u101a\u1021\u1028"+
		"\u102f\u1036\u103d\u1044\u104b\u1052\u1059\u1060\u1064\u1069\u106d\u1073"+
		"\u1079\u107b\u1081\u108a\u1090\u1097\u109b\u109e\u10a4\u10aa\u10b1\u10b5"+
		"\u10ba\u10be\u10c3\u10c7\u10cc\u10d3\u10d9\u10e0\u10e4\u10e7\u10ed\u10f4"+
		"\u10fb\u10ff\u1104\u1109\u1111\u1113\u1119\u1121\u1128\u112f\u1133\u1138"+
		"\u113c\u1141\u1145\u114a\u114f\u1155\u1159\u115e\u1164\u1170\u1172\u1178"+
		"\u117a\u1180\u1184\u1189\u1193\u1197\u11a1\u11a8\u11af\u11b4\u11b8\u11be"+
		"\u11c4\u11c6\u11ce\u11d4\u11d6\u11de\u11e4\u11e6\u11f3\u11f9\u11fb\u1203"+
		"\u1209\u120b\u1213\u1219\u121f\u1221\u1225\u122b\u1231\u1237\u123e\u1244"+
		"\u1246\u124c\u124e\u1257\u1259\u125f\u1265\u126a\u1274\u127a\u1280\u1282"+
		"\u1288\u128d\u1295\u129b\u129f\u12a5\u12ab\u12ad\u12b2\u12b7\u12ba\u12c0"+
		"\u12c4\u12ca\u12cc\u12d2\u12d6\u12dc\u12e2\u12ed\u12f3\u12f9\u12fb\u1308"+
		"\u130d\u130f\u1315\u131b\u131f\u1325\u132b\u1331\u1333\u133f\u1345\u134c"+
		"\u134e\u1354\u1356\u135c\u1360\u1366\u136a\u136c\u1371\u1378\u137e\u1380"+
		"\u1386\u1388\u1390\u1396\u1398\u139e\u13a0\u13b8\u13bf\u13c6\u13cb\u13d2"+
		"\u13d8\u13da\u13e0\u13e7\u13ee\u13f1\u13f7\u13fa\u1400\u1403\u1409\u140c"+
		"\u1412\u1415\u141b\u141e\u1424\u1427\u142d\u1432\u1439\u143c\u1442\u1445"+
		"\u144d\u144f\u1455\u145b\u145d\u1467\u1469\u146f\u1475\u1477\u147d\u147f"+
		"\u1485\u148b\u148d\u1491\u1496\u149a\u14a1\u14a8\u14af\u14b5\u14b8\u14be"+
		"\u14c4\u14c6\u14cc\u14ce\u14d0\u14d6\u14dc\u14e2\u14e4\u14ea\u14ec\u14f0"+
		"\u14f6\u14fc\u1500\u1508\u150e\u1514\u1516\u151e\u1524\u1526\u152c\u152e"+
		"\u1538\u153e\u1540\u1542\u1549\u154f\u1555\u155b\u155d\u1563\u1565\u156d"+
		"\u1573\u1575\u157b\u1581\u1587\u158f\u1595\u1597\u159d\u15a3\u15a8\u15aa"+
		"\u15ad\u15b3\u15b9\u15bb\u15c3\u15c9\u15cb\u15d1\u15d7\u15d9\u15df\u15eb"+
		"\u15f1\u15f3\u15fb\u15fd\u1604\u1606\u160c\u1610\u1612\u1618\u1620\u1627"+
		"\u162e\u1633\u163a\u163f\u1646\u164b\u1652\u1657\u165e\u1661\u1667\u166d"+
		"\u1673\u1675\u167b\u167d\u1683\u1688\u168e\u1694\u1698\u16a2\u16a8\u16ae"+
		"\u16b0\u16b6\u16b8\u16c0\u16c6\u16c8\u16d0\u16d5\u16df\u16e5\u16e7\u16e9"+
		"\u16f0\u16f4\u16fc\u1702\u1704\u170a\u170c\u1712\u1714\u171a\u1720\u1728"+
		"\u172e\u1732\u1738\u173e\u1743\u174a\u1755\u1757\u175d\u1766\u176a\u1777"+
		"\u177e\u1787\u1792\u1798\u179f\u17a6\u17af\u17b8\u17bf\u17c8\u17d0\u17d6"+
		"\u17dd\u17e4\u17eb\u17ef\u17f4\u17fd\u1804\u180b\u1811\u1817\u181e\u1825"+
		"\u182e\u1832\u1837\u183b\u1840\u184a\u184e\u1853\u1857\u185c\u1866\u1869"+
		"\u186f\u1872\u1878\u187c\u1882\u1886\u188c\u1890\u1896\u189a\u18a0\u18a4"+
		"\u18aa\u18ae\u18b0\u18b6\u18ba\u18bf\u18c5\u18cb\u18cf\u18d6\u18da\u18df"+
		"\u18e5\u18eb\u18ef\u18f2\u18f8\u18fc\u1901\u1905\u190c\u1913\u1917\u191c"+
		"\u1920\u1922\u192a\u192f\u1934\u1939\u193d\u1943\u194c\u1953\u195a\u195e"+
		"\u1963";
	public static final String _serializedATN = Utils.join(
		new String[] {
			_serializedATNSegment0,
			_serializedATNSegment1,
			_serializedATNSegment2
		},
		""
	);
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}