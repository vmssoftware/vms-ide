IDENTIFICATION DIVISION.
PROCEDURE DIVISION.
DECLARATIVES.
DET SECTION.
USE BEFORE REPORTING DETAIL-LINE.
DETA-1.
    ACCEPT ITEMF FROM DAY-OF-WEEK.
END DECLARATIVES.
begin.
    ACCEPT DEST-EXAMPLE FROM LINE NUMBER ITEMB PLUS 0
        ON EXCEPTION 
            ADD 2 ITEMB TO ITEMA.
        NOT ON EXCEPTION 
            ADD 38 TO ITEMA ITEMB.
    ADD 14 TO ITEMA
        NOT ON SIZE ERROR
            ACCEPT ITEMF FROM DAY-OF-WEEK.
        ON SIZE ERROR
            ACCEPT ITEMF FROM DAY-OF-WEEK.
    ADD 7 ITEMB TO ITEMD (ITEMB)
        ON SIZE ERROR
            ACCEPT ITEMF FROM DAY-OF-WEEK
    END-ADD
    ADD 1 TO ITEMB.
    ALTER PROC-A TO PROC-EE PROC-E TO PROC-CC.
    CALL "NEWPROG" USING ITEMA
        BY DESCRIPTOR ITEMB ITEMC "TOTALS"
        BY REFERENCE ITEMD "PAYROLL"
        BY VALUE ITEME 995.99
        BY DESCRIPTOR ITEMD ITEMF
        BY CONTENT ITEMG "SUMMARY FLAG".
    CALL PROG-TO-CALL USING ITEMA.
    CALL "PROG010" USING ITEMA ITEMB "XYZ"
        GIVING ITEMC
        ON EXCEPTION 
            CANCEL SUB-PROG-A "PROG12" SUB-PROG-B.
    CLOSE EMPLOYEE-FILE.
    CLOSE EMPLOYEE-FILE REEL NO REWIND.
    CLOSE EMPLOYEE-FILE LOCK.
    COMPUTE ITEMC =
        (ITEMA + 6) ** (.1 * ITEMD).
    COMPUTE ITEMC ROUNDED =
        (ITEMA + 6) ** (.1 * ITEMD)
        ON SIZE ERROR
            CANCEL SUB-PROG-A.
        NOT ON SIZE ERROR
            delete file-1.
    DISPLAY ITEMC.
    DISPLAY ITEMD UPON ERR-REPORTER.
    DISPLAY ITEMD ITEMA "ARE" ITEMB.
    DISPLAY ITEMD SPACE ITEMA "AREs" ITEMB.
    DISPLAY ITEMC "sISs" NO ADVANCING.
    DISPLAY
        ITEMF WITH CONVERSION LINE PLUS
        ITEMG WITH CONVERSION LINE PLUS
        ITEMH WITH CONVERSION LINE PLUS
        ITEMI WITH CONVERSION LINE PLUS.
    DIVIDE ITEMA INTO ITEMB.
    DIVIDE ITEMA INTO ITEMB ROUNDED.
    DIVIDE ITEMA INTO ITEMB
        GIVING ITEMD.
    DIVIDE ITEMA INTO ITEMB
        GIVING ITEMD ROUNDED.
    DIVIDE ITEMA BY ITEMB
        GIVING ITEMD.
    DIVIDE ITEMA INTO ITEMB
        GIVING ITEMD REMAINDER ITEMC.
    DIVIDE ITEMA INTO ITEMB 
        GIVING ITEMD ROUNDED REMAINDER ITEMC.
    DIVIDE ITEMA INTO ITEMB
        GIVING ITEME REMAINDER ITEMC.
    DIVIDE ITEMA INTO ITEMB
        GIVING ITEME ROUNDED REMAINDER ITEMC.
    DIVIDE ITEME INTO ITEMF GIVING ITEMG ITEMD
        ON SIZE ERROR
            DISPLAY ITEMC.
    EVALUATE ITEMA
        WHEN A-01 ALPHABETIC ACCEPT ITEMA FROM DAY-OF-WEEK
        WHEN "A02" THRU "C16" ACCEPT ITEMB FROM DAY-OF-WEEK
        WHEN "C20" THRU "L86" ACCEPT ITEMC FROM DAY-OF-WEEK
        WHEN "R20" ADD 1 TO R-TOT
                   ACCEPT ITEMD FROM DAY-OF-WEEK
        WHEN OTHER ACCEPT ITEME FROM DAY-OF-WEEK
    END-EVALUATE.
    EVALUATE LOW-STOK   WEEK-USE        LOC-VNDR    ON-ORDER    TRUE
        WHEN "Y",       16 THRU 999,    ANY,        "N"         A > 10          GO TO RUSH-ORDER
        WHEN "Y",       16 THRU 999,    ANY,        "Y"         A > 20          GO TO NORMAL-ORDER
        WHEN "Y",       8 THRU 15,      "N",        "N"         A > 30          GO TO RUSH-ORDER
        WHEN "Y",       8 THRU 15,      "N",        "Y"         A < 10          GO TO NORMAL-ORDER
        WHEN "Y",       8 THRU 15,      "Y",        "N"         A < 20          GO TO NORMAL-ORDER
        WHEN "Y",       0 THRU 7,       ANY,        "N"         A = ZERO        GO TO NORMAL-ORDER
        WHEN "N",       ANY,            ANY,        "Y"         NOT A = ZERO    GO TO CANCEL-ORDER
    END-EVALUATE.
REPORT-INVALID-ADD.
    DISPLAY " ".
    DISPLAY "INVALID ADDITION".
    DISPLAY "RECORD ALREADY EXISTS".
    DISPLAY "UPDATE ATTEMPT: " UPDATE-REC.
    DISPLAY "EXISTING RECORD: " OLD-REC.
REPORT-INVALID-ADD-EXIT.
    EXIT.
cont-para.
    IF ITEMA < 20
        MOVE "X" TO ITEMB.
* comment
    IF ITEMA > 10
        MOVE "X" TO ITEMB
    ELSE
        GO TO PROC-A.

    IF ITEMA < 10 OR > 20
        NEXT SENTENCE
    ELSE
        MOVE "X" TO ITEMB.
* comment
    IF ITEMA > 10
        IF ITEMA = ITEMC
            MOVE "X" TO ITEMB
        ELSE
            MOVE "Y" TO ITEMB
    ELSE
        GO TO PROC-A.
    IF ITEMA > 10
        IF ITEMA = ITEMC
            ADD 1 TO ITEMD
            MOVE "X" TO ITEMB
        END-IF
        ADD 1 TO ITEMD.
    INITIALIZE ITEMA.
    INITIALIZE ITEMB ITEMG.
    INITIALIZE ITEMA REPLACING ALPHANUMERIC BY "ABCDE".
    INITIALIZE ITEMG REPLACING NUMERIC BY 9.
    INITIALIZE ITEMA REPLACING NUMERIC-EDITED BY 16.
    INITIALIZE ITEMA REPLACING ALPHANUMERIC-EDITED BY "ABCD".
    INITIALIZE ITEMA REPLACING ALPHANUMERIC BY "99".
    INITIALIZE ITEMB ITEMG 
        REPLACING 
            ALPHANUMERIC BY "ABCDE"
            NUMERIC BY 9.
    INSPECT ITEMA TALLYING COUNT1 FOR LEADING "L" BEFORE "A",
        COUNT2 FOR LEADING "A" BEFORE "L".
    INSPECT ITEMA TALLYING COUNT1 FOR ALL "L" "R"
        REPLACING LEADING "A" BY "E" AFTER INITIAL "L".
    INSPECT ITEMA REPLACING ALL "A" BY "G" BEFORE "X".
    INSPECT ITEMA TALLYING COUNT1 FOR CHARACTERS AFTER "J"
        REPLACING ALL "A" BY "B".
    INSPECT ITEMA REPLACING ALL "X" BY "Y", "B" BY "Z",
        "W" BY "Q" AFTER "R".
    INSPECT ITEMA REPLACING CHARACTERS BY "B" BEFORE "A".
    INSPECT ITEMA REPLACING ALL "A" BY "X" ALL "R" BY "X"
        AFTER "XXL".
    INSPECT ITEMA CONVERTING "SIR" TO "DTA"
        AFTER QUOTE BEFORE "@".
    if a < 100 then
        merge file-1 ascending key-1 key-2 descending key-3
            sequence alph-1
            using file-2 file-3 file-4
            output procedure is out-proc-1 thru end-proc-1
    else 
        exit
    end-if
    MULTIPLY 2 BY ITEMB.
    MULTIPLY 3 BY 1-A of 2-a in 3-b-group giving ITEMB
        ON SIZE ERROR
            MOVE 0 TO ITEMC.
    MULTIPLY 4 BY ITEMA ITEMB ITEMC
        ON SIZE ERROR
            MOVE 1 TO ITEMD
    END-MULTIPLY
    MULTIPLY 2 BY ITEMA ITEMB ITEMC
        ON SIZE ERROR
            ADD 1 TO ITEMD
    END-MULTIPLY.
    OPEN INPUT MASTER-FILE NO REWIND ALLOWING UPDATERS READERS
         I-O employee-file LOCK.
    OPEN INPUT FILE1-SEQ file2-seq file-3seq allowing no 
         extend ext-file-1.
    OPEN OUTPUT FILE1-RAN no-rewind.
    OPEN I-O FILE1-DYN.
    OPEN EXTEND FILE1-EXT.
    PERFORM PROC-A THRU PROC-B
        TEST BEFORE
        VARYING ITEMA
        FROM ITEMB BY ITEMC
        UNTIL CONDITION-A.
    PERFORM PROC-A THRU PROC-B
        TEST BEFORE
        VARYING ITEMA
            FROM ITEMB BY ITEMC
            UNTIL CONDITION-A
        AFTER ITEMD
            FROM ITEME BY ITEMF
            UNTIL CONDITION-B.
    PERFORM PROC-A THRU PROC-B
        TEST AFTER
        VARYING ITEMA
            FROM ITEMB BY ITEMC
            UNTIL CONDITION-A.
    PERFORM PROC-A THRU PROC-C 3 TIMES.
    PERFORM PROC-A THRU PROC-B
        VARYING ITEMC FROM 1 BY 1
        UNTIL ITEMC > 5.
    PERFORM PROC-A THRU PROC-B TEST AFTER VARYING ITEMC FROM 1 BY 1 UNTIL ITEMC > 5.
    PERFORM
        VARYING ITEMC FROM 1 BY 2
        UNTIL ITEMC > 7
            MOVE CHARA (ITEMC) TO CHARB (ITEMC)
            MOVE CHARA (ITEMC) TO CHARB (ITEMC + 3)
    END-PERFORM.
    READ MASTER-FILE KEY IS MASTER-KEY ALLOWING NO OTHERS.
    READ employee-file NEXT RECORD WITH LOCK
        AT END GO TO 999-EOJ..
    READ employee-file NEXT WITH LOCK.
    READ FILE-A INTO rec-a
        REGARDLESS OF LOCK
        AT END PERFORM NO-MORE-RECS
               DISPLAY "No more records." END-READ.
    IF ITEMA = ITEMB
        READ FILEA ALLOWING UPDATERS
            AT END MOVE ITEMC TO ITEMB
                   MOVE ITEMC-1 TO ITEMB-1
    ELSE
        MOVE ITEMD TO ITEME.
    READ FILE-A INVALID KEY CONTINUE.
    RECORD DEPENDENCY path-name TYPE IS relation-type IN DICTIONARY.
    RELEASE rec FROM src-area.
    RETURN smrg-file RECORD INTO dest-area 
        AT END CONTINUE
        NOT AT END 
            DISPLAY "No more records."
            exit
    END-RETURN
    REWRITE rec-name FROM src-item
        ALLOWING NO OTHERS
        INVALID KEY CONTINUE
        NOT INVALID KEY EXIT
    END-REWRITE
END PROGRAM.
