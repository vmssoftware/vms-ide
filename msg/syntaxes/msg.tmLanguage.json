{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "MSG",
	"patterns": 
	[
		{
			"include": "#title"
		},
		{
			"include": "#ident"
		},
		{
			"include": "#facility"
		},
		{
			"include": "#page"
		},
		{
			"include": "#line"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#test-order"
		}
	],
	"repository": 
	{
		"test-order":
		{
			"patterns": 
			[
				{
					"name": "msg.test-order",
					"begin": "(\\.test)",
					"beginCaptures": 
					{
						"1":
						{
							"name": "msg.test-order.keyword keyword.control"
						}
					},
					"end": "\\n",
					"patterns": 
					[
						{
							"begin": "(\"|')",
							"beginCaptures": 
							{
								"1":
								{
									"name": "string.quoted.start"
								}
							},
							"end": "(\\1)(.*)",
							"endCaptures": 
							{
								"1":
								{
									"name": "string.quoted.end"
								},
								"2":
								{
									"patterns": 
									[
										{
											"include": "#comment"
										},
										{
											"name": "invalid.illegal",
											"match": "\\S.*"
										}
									]
								}
							},
							"patterns": 
							[
								{
									"include": "#string-content"
								}
							]
						},
						{
							"name": "msg.token",
							"begin": "(?i)([a-z$_][a-z$_0-9]{,30})",
							"beginCaptures": 
							{
								"1":
								{
									"name": "constant.character"
								}
							},
							"end": "(?=\\n)",
							"patterns": 
							[
								{
									"include": "#comment"
								},
								{
									"name": "invalid.illegal",
									"match": "\\S.*"
								}
							]
						},
						{
							"include": "#continuation"
						},
						{
							"include": "#comment"
						}
					]
				}
			]
		},
		"token":
		{
			"patterns": 
			[
				{
					"name": "msg.token",
					"match": "(?i)([a-z$_][a-z$_0-9]{,30})",
					"captures": 
					{
						"1":
						{
							"name": "constant.character"
						}
					}
				}
			]
		},
		"continuation":
		{
			"patterns": 
			[
				{
					"name": "msg.continuation",
					"match": "\\s*(-)\\s*$\\n",
					"captures": 
					{
						"1":
						{
							"name": "msg.continuation string.regexp"
						}
					}
				},
				{
					"name": "msg.continuation-with-comment",
					"match": "\\s*(-)\\s*(!.*)$\\n",
					"captures": 
					{
						"1":
						{
							"name": "msg.continuation string.regexp"
						},
						"2":
						{
							"patterns": 
							[
								{
									"include": "#comment"
								}
							]
						}
					}
				}
			]
		},
		"comment": 
		{
			"patterns": 
			[
				{
					"name": "comment",
					"begin": "!",
					"end": "(?=\\n)",
					"patterns": 
					[
						{
							"include": "#comment-continuation"
						}
					]
				}
			]
		},
		"comment-continuation": 
		{
			"patterns": 
			[
				{
					"match": "\\s*(-)\\s*\\n",
					"captures": 
					{
						"1":
						{
							"name": "msg.comment.continuation string.regexp"
						}
					}
				}
			]
		},
		"line":
		{
			"patterns": 
			[
				{
					"name": "msg.line",
					"begin": "(?i)(\\.line)",
					"beginCaptures": 
					{
						"1":
						{
							"name": "msg.line.keyword keyword.control"
						}
					},
					"end": "\\n",
					"patterns": 
					[
						{
							"name": "msg.line.expression",
							"match": "\\G\\s*(?i)([a-z$_][a-z$_0-9]{,30})",
							"captures": 
							{
								"1":
								{
									"name": "msg.line.name constant.character"
								}
							}
						},
						{
							"include": "#continuation"
						},
						{
							"include": "#comment"
						},
						{
							"name": "invalid.illegal",
							"begin": "(?<!\\G)",
							"end": "(?=\\n)",
							"patterns": 
							[
								{
									"include": "#continuation"
								}
							]
						}
					]
				}
			]
		},
		"title": 
		{
			"patterns": 
			[
				{
					"name": "msg.title",
					"match" : "(?i)(\\.title)\\s+([a-z$_][a-z$_0-9]{,30})(\\s+(\\S.{,27})(.*))",
					"captures": 
					{
						"1":
						{
							"name": "msg.title.keyword keyword.control"
						},
						"2":
						{
							"name": "msg.title.modname constant.character"
						},
						"4":
						{
							"name": "msg.title.listing-title string.unquoted"
						},
						"5":
						{
							"name": "invalid.illegal"
						}
					}
				}
			]
		},
		"ident": 
		{
			"patterns": 
			[
				{
					"name": "msg.ident",
					"begin": "(?i)(\\.ident)(?=\\s|$|\\n|-)",
					"beginCaptures": 
					{
						"1":
						{
							"name": "keyword.control"
						}
					},
					"end": "\\n",
					"patterns": 
					[
						{
							"name": "msg.ident.identifier",
							"begin": "(?i)([a-z$_][a-z$_0-9]{,30})",
							"beginCaptures": 
							{
								"1":
								{
									"name": "constant.character"
								}
							},
							"end": "(?=\\n)",
							"patterns": 
							[
								{
									"include": "#comment"
								},
								{
									"include": "#continuation"
								},
								{
									"name": "invalid.illegal",
									"match": "."
								}
							]
						},
						{
							"include": "#string"
						},
						{
							"include": "#comment"
						},
						{
							"include": "#continuation"
						},
						{
							"name": "invalid.illegal",
							"match": "\\S.*"
						}
					]
				}
			]
		},
		"facility": 
		{
			"patterns": 
			[
				{
					"name": "msg.facility",
					"begin": "(?i)(\\.facility)",
					"beginCaptures": 
					{
						"1":
						{
							"name": "msg.facility.keyword keyword.control"
						}
					},
					"end" : "(?i)(?=\\.facility|\\.end)",
					"patterns": 
					[
						{
							"name": "msg.facility.body",
							"begin": "\\G",
							"end": "(?<!-)(\\s*)(?=$\\n)",
							"patterns": 
							[
								{
									"include": "#facility.qualifiers"
								},
								{
									"include": "#facility.name"
								}
							]
						},
						{
							"include": "#severity"
						},
						{
							"include": "#literal"
						}
					]
				}
			]
		},
		"facility.qualifiers":
		{
			"patterns": 
			[
				{
					"name": "msg.facility.shared",
					"match": "(?i)(/shared)",
					"captures": 
					{
						"1":
						{
							"name": "msg.facility.shared.keyword variable.parameter "
						}
					}
				},
				{
					"name": "msg.facility.system",
					"match": "(?i)(/system)",
					"captures": 
					{
						"1":
						{
							"name": "msg.facility.system.keyword variable.parameter "
						}
					}
				},
				{
					"name": "msg.facility.prefix",
					"match": "(?i)(/prefix)(\\s*)=(\\s*)([a-z$_][a-z$_0-9]{,7})(\\S*)",
					"captures": 
					{
						"1":
						{
							"name": "msg.facility.prefix.keyword variable.parameter "
						},
						"4":
						{
							"name": "msg.facility.prefix.value constant.character"
						},
						"5":
						{
							"name": "invalid.illegal"
						}
					}
				}
			]
		},
		"facility.name":
		{
			"patterns": 
			[
				{
					"begin": "(?i)([a-z$_][a-z$_0-9]{,8})((\\s*)(\\s|,)(\\s*))",
					"beginCaptures": 
					{
						"1":
						{
							"name": "msg.facility.name constant.character"
						},
						"2":
						{
							"name": "msg.facility.separator"
						}
					},
					"end": "(?<!-)(\\s*)(?=$\\n)",
					"patterns": 
					[
						{
							"include": "#facility.expression"
						},
						{
							"include": "#facility.qualifiers"
						}
					]
				}
			]
		},
		"facility.expression":
		{
			"patterns": 
			[
				{
					"name": "msg.facility.expression",
					"begin": "\\G",
					"end": "((?<!-)(\\s*)(?=$\\n))|/",
					"patterns": 
					[
						{
							"name": "msg.facility.number constant.numeric",
							"match": "\\G\\s*\\d+"
						}
					]
				}
			]
		},
		"page": 
		{
			"patterns": 
			[
				{
					"name": "msg.page",
					"match": "(?i)(\\.page)",
					"captures": 
					{
						"1":
						{
							"name": "msg.page.keyword keyword.control"
						}
					}
				}
			]
		},
		"severity": 
		{
			"patterns": 
			[
				{
					"name": "msg.severity",
					"begin": "(?i)(\\.severity)",
					"beginCaptures": 
					{
						"1":
						{
							"name": "msg.severity.keyword keyword.control"
						}
					},
					"end": "(?<!-|^)\\s*\\n",
					"patterns": 
					[
						{
							"name": "msg.severity.success constant.character",
							"match": "\\G\\s+(?i)success"
						},
						{
							"name": "msg.severity.informational constant.character",
							"match": "\\G\\s+(?i)informational"
						},
						{
							"name": "msg.severity.warning constant.character",
							"match": "\\G\\s+(?i)warning"
						},
						{
							"name": "msg.severity.error constant.character",
							"match": "\\G\\s+(?i)error"
						},
						{
							"name": "msg.severity.severe constant.character",
							"match": "\\G\\s+(?i)severe"
						},
						{
							"name": "msg.severity.fatal constant.character",
							"match": "\\G\\s+(?i)fatal"
						},
						{
							"name": "invalid.illegal",
							"match": "\\G[^-\\s]*"
						},
						{
							"name": "invalid.illegal",
							"match": "(?<!\\G)[^-\\s]*"
						}
					]
				}
			]
		},
		"string": 
		{
			"name": "msg.string.$1 string.qouted",
			"begin": "(\"|')",
			"beginCaptures": 
			{
				"1":
				{
					"name": "msg.punctuation.string.open"
				}
			},
			"end": "(\\1)",
			"endCaptures": 
			{
				"1":
				{
					"name": "msg.punctuation.string.close"
				}
			},
			"patterns": 
			[
				{
					"name": "msg.string.fao",
					"match": "\\![A-Z][A-Z]"
				}
			]
		},
		"string-content":
		{
			"patterns": 
			[
				{
					"name": "msg.string.fao",
					"match": "(![A-Z][A-Z])",
					"captures": 
					{
						"1":
						{
							"name": "variable.parameter"
						}
					}
				},
				{
					"name": "msg.string.content",
					"match": ".",
					"captures": 
					{
						"0":
						{
							"name": "string.quoted"
						}
					}
				}
			]
		}
	},
	"scopeName": "source.msg"
}