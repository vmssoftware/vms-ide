{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "MSG",
	"patterns": 
	[
		{
			"include": "#title"
		},
		{
			"include": "#ident"
		},
		{
			"include": "#facility"
		},
		{
			"include": "#page"
		}
	],
	"repository": 
	{
		"title": 
		{
			"patterns": 
			[
				{
					"comment": "single line command, without begin-end",
					"name": "msg.title",
					"match" : "(?i)\\.title\\s+([a-z$_][a-z$_0-9]{,30})(\\s+(\\S.{,27})(.*))",
					"captures": 
					{
						"1":
						{
							"name": "msg.modname"
						},
						"3":
						{
							"name": "msg.listing-title"
						},
						"4":
						{
							"name": "invalid.illegal"
						}
					}
				}
			]
		},
		"ident": 
		{
			"patterns": 
			[
				{
					"name": "msg.ident",
					"begin": "(?i)\\.ident\\s",
					"end": "(?i)(?=(\\.facility|\\.severity|\\.base|\\.end|\\.literal|\\.ident|\\.title|\\.page))",
					"patterns": 
					[
						{
							"name": "msg.ident.identifier",
							"match": "(?i)([a-z$_][a-z$_0-9]{,30})"
						},
						{
							"include": "#string"
						},
						{
							"name": "invalid.illegal",
							"match": "(?<!\\G).*"
						}
					]
				}
			]
		},
		"facility": 
		{
			"patterns": 
			[
				{
					"name": "msg.facility",
					"begin": "(?i)(\\.facility)",
					"beginCaptures": 
					{
						"1":
						{
							"name": "msg.facility.definition"
						}
					},
					"end" : "(?i)(?=\\.facility|\\.end)",
					"patterns": 
					[
						{
							"name": "msg.facility.body",
							"begin": "\\G",
							"end": "([^-]|^)(?=(\\s*)\\n)",
							"patterns": 
							[
								{
									"include": "#facility.qualifiers"
								},
								{
									"include": "#facility.name"
								}
							]
						},
						{
							"include": "severity"
						}
					]
				}
			]
		},
		"facility.qualifiers":
		{
			"patterns": 
			[
				{
					"name": "msg.facility.shared",
					"match": "(?i)/shared"
				},
				{
					"name": "msg.facility.system",
					"match": "(?i)/system"
				},
				{
					"name": "msg.facility.prefix",
					"match": "(?i)/prefix(\\s*)=(\\s*)([a-z$_][a-z$_0-9]{,7})(\\S*)",
					"captures": 
					{
						"3":
						{
							"name": "msg.facility.prefix.value"
						},
						"4":
						{
							"name": "invalid.illegal"
						}
					}
				}
			]
		},
		"facility.name":
		{
			"patterns": 
			[
				{
					"begin": "(?i)([a-z$_][a-z$_0-9]{,8})((\\s*)(\\s|,)(\\s*))",
					"beginCaptures": 
					{
						"1":
						{
							"name": "msg.facility.name"
						},
						"2":
						{
							"name": "msg.facility.separator"
						}
					},
					"end": "(?=([^-]|^)(\\s*)\\n)",
					"patterns": 
					[
						{
							"include": "#facility.expression"
						},
						{
							"include": "#facility.qualifiers"
						}
					]
				}
			]
		},
		"facility.expression":
		{
			"patterns": 
			[
				{
					"name": "msg.facility.expression",
					"begin": "\\G",
					"end": "(?=(([^-]|^)(\\s*)\\n)|/)",
					"patterns": 
					[
						{
							"name": "msg.facility.number",
							"match": "\\G\\s*\\d+"
						}
					]
				}
			]
		},
		"page": 
		{
			"patterns": 
			[
				{
					"name": "msg.page",
					"match": "(?i)\\.page"
				}
			]
		},
		"string": 
		{
			"name": "msg.string.$1",
			"begin": "(\"|')",
			"beginCaptures": 
			{
				"1":
				{
					"name": "msg.punctuation.string.open"
				}
			},
			"end": "(\\1)",
			"endCaptures": 
			{
				"1":
				{
					"name": "msg.punctuation.string.close"
				}
			},
			"patterns": 
			[
				{
					"name": "msg.string.fao",
					"match": "\\![A-Z][A-Z]"
				}
			]
		},
		"comment": 
		{
			"patterns": 
			[
				{
					"name": "comment"
				}
			]
		}
	},
	"scopeName": "source.msg"
}