{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "VMS-COBOL",
  "scopeName": "source.vms-cobol",
  "comment": "/NOANSI_FORMAT",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#linenum"
    },
    {
      "include": "#conditional"
    },
    {
      "include": "#system-name"
    },
    {
      "include": "#identification-division"
    },
    {
      "include": "#environment-division"
    },
    {
      "include": "#data-division"
    },
    {
      "include": "#procedure-division"
    },
    {
      "include": "#end-program"
    },
    {
      "include": "#compiler.directives"
    },
    {
      "include": "#exec"
    }
  ],
  "repository": {
    "expression": {
      "name": "expression",
      "begin": "(?i)(?=[-a-z0-9$_><=+*/(\"']|\\.\\d)",
      "comment": "not ends on space, new line, comment, operator, open bracket, keyword-operator",
      "end": "(?i)(?<!\\G)(?!\\s|\n|^(\\\\[a-z])?(\\d{6}|\\s{6})?[*/]|[-><=+*/]|[(]|(IS|NOT|GREATER|LESS|EQUAL|OR|AND|IN|OF)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#expression.brackets"
        },
        {
          "include": "#operator.qualifier"
        },
        {
          "include": "#operator.arithmetic"
        },
        {
          "include": "#operator.compare"
        },
        {
          "include": "#operator.logic"
        },
        {
          "name": "entity.name.class.logic.class",
          "match": "(?i)(SUCCESS|FAILURE|POSITIVE|NEGATIVE|ZERO|NUMERIC|DBCS|KANJI|JAPANESE|ALPHABETIC(?:-(?:LOWER|UPPER))?)(?=[^-a-z0-9$_])",
          "captures": {
            "0": {
              "name": "markup.italic"
            }
          }
        },
        {
          "include": "#function"
        },
        {
          "include": "#cobol.name"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "identifier": {
      "name": "identifier",
      "begin": "(?i)(?=[-a-z0-9$_])",
      "end": "(?i)(?!\\G)(?!\\s|\n|^(\\\\[a-z])?(\\d{6}|\\s{6})?[*/]|[(]|(IN|OF)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#function"
        },
        {
          "include": "#expression.brackets"
        },
        {
          "include": "#operator.qualifier"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "function": {
      "name": "function",
      "begin": "(?i)(FUNCTION)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "markup.bold.function"
        }
      },
      "end": "(?i)(ACOS|ANNUITY|ARGCOUNT|ASIN|ATAN|CHAR|COS|CURRENT-DATE|DATE-OF-INTEGER|DATE-TO-YYYYMMDD|DAY-OF-INTEGER|DAY-TO-YYYYDDD|FACTORIAL|INTEGER-OF-DATE|INTEGER-OF-DAY|INTEGER-PART|INTEGER|LENGTH|LOG(?:10)?|LOWER-CASE|MAX|MEAN|MEDIAN|MIDRANGE|MIN|MOD|NUMVAL(?:-C)?|ORD(?:-(?:MAX|MIN))?|PRESENT-VALUE|RANDOM|RANGE|REM|REVERSE|SIN|SQRT|STANDARD-DEVIATION|SUM|TAN|TEST-DATE-YYYYMMDD|TEST-DAY-YYYYDDD|UPPER-CASE|VARIANCE|WHEN-COMPILED|YEAR-TO-YYYY)(?=[^-a-z0-9$_])|([a-z0-9$_](?:[-a-z0-9$_]*[a-z0-9$_])?)",
      "endCaptures": {
        "0": {
          "name": "markup.italic"
        },
        "1": {
          "name": "entity.name.class.function.name"
        },
        "2": {
          "name": "variable.other.function.name"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        }
      ]
    },
    "cobol.name": {
      "name": "cobol.name",
      "comment": "any acceptable name",
      "match": "(?i)((ZERO(?:(?:E)?S)?|SPACE(?:S)?|HIGH-VALUE(?:S)?|LOW-VALUE(?:S)?|QUOTE(?:S)?|ALL|RETURN-CODE|LINAGE-COUNTER|PAGE-COUNTER|LINE-COUNTER|RMS-STS|RMS-STV|RMS-FILENAME|RMS-CURRENT-STS|RMS-CURRENT-STV|RMS-CURRENT-FILENAME|ADDRESS))(?=[^-a-z0-9$_])|(?:[a-z0-9$_](?:[-a-z0-9$_]*[a-z0-9$_])?)",
      "captures": {
        "0": {
          "name": "variable.other.start"
        },
        "1": {
          "name": "markup.italic"
        },
        "2": {
          "name": "entity.name.class.special.purpose"
        }
      }
    },
    "operator.qualifier": {
      "name": "operator.qualifier",
      "begin": "(?i)(IN|OF)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "markup.bold.operator.qualifier"
        }
      },
      "end": "(?i)([a-z0-9$_](?:[-a-z0-9$_]*[a-z0-9$_])?)",
      "endCaptures": {
        "1": {
          "name": "variable.other.qualifier"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "operator.arithmetic": {
      "name": "operator.arithmetic",
      "begin": "(?i)[*]{2}|[-+*/]",
      "beginCaptures": {
        "0": {
          "name": "markup.bold.operator.arithmetic"
        }
      },
      "end": "(?i)(?<=\\))|(?=N[\"'])|(?=[\"'])|([0-9]*(?:\\.|,)[0-9]+(?:E[-+]?\\d+)?|[0-9]+(?:\\.|,)[0-9]*(?:E[-+]?\\d+)|(?:[0-9]+)(?=[^-a-z0-9$_])|X\"[0-9a-f]+\"|X'[0-9a-f]+')|((ZERO(?:(?:E)?S)?|SPACE(?:S)?|HIGH-VALUE(?:S)?|LOW-VALUE(?:S)?|QUOTE(?:S)?|ALL|RETURN-CODE|LINAGE-COUNTER|PAGE-COUNTER|LINE-COUNTER|RMS-STS|RMS-STV|RMS-FILENAME|RMS-CURRENT-STS|RMS-CURRENT-STV|RMS-CURRENT-FILENAME|ADDRESS)|(ACOS|ANNUITY|ARGCOUNT|ASIN|ATAN|CHAR|COS|CURRENT-DATE|DATE-OF-INTEGER|DATE-TO-YYYYMMDD|DAY-OF-INTEGER|DAY-TO-YYYYDDD|FACTORIAL|INTEGER-OF-DATE|INTEGER-OF-DAY|INTEGER-PART|INTEGER|LENGTH|LOG(?:10)?|LOWER-CASE|MAX|MEAN|MEDIAN|MIDRANGE|MIN|MOD|NUMVAL(?:-C)?|ORD(?:-(?:MAX|MIN))?|PRESENT-VALUE|RANDOM|RANGE|REM|REVERSE|SIN|SQRT|STANDARD-DEVIATION|SUM|TAN|TEST-DATE-YYYYMMDD|TEST-DAY-YYYYDDD|UPPER-CASE|VARIANCE|WHEN-COMPILED|YEAR-TO-YYYY))(?=[^-a-z0-9$_])|(?!(?:FUNCTION)[^-a-z0-9$_])([a-z0-9$_](?:[-a-z0-9$_]*[a-z0-9$_])?)",
      "endCaptures": {
        "1": {
          "name": "constant.numeric.arithmetic.end"
        },
        "2": {
          "name": "markup.italic"
        },
        "3": {
          "name": "entity.name.class.special.purpose.arithmetic.end"
        },
        "4": {
          "name": "entity.name.class.function.name.arithmetic.end"
        },
        "5": {
          "name": "variable.other.arithmetic.end"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#expression.brackets"
        },
        {
          "name": "function",
          "match": "(?i)(FUNCTION)(?=[^-a-z0-9$_])",
          "captures": {
            "0": {
              "name": "markup.bold.function.inside"
            }
          }
        },
        {
          "name": "operator.unary",
          "begin": "(?i)[-+]",
          "beginCaptures": {
            "0": {
              "name": "markup.bold.operator.unary"
            }
          },
          "end": "(?i)(?=\\(|\\.\\d|[a-z0-9$_])",
          "patterns": [
            {
              "name": "operator.unary.double",
              "match": "(?i)[-+]",
              "captures": {
                "0": {
                  "name": "markup.bold.operator.unary.double"
                }
              }
            },
            {
              "include": "#invalid-char"
            }
          ]
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "operator.logic": {
      "name": "operator.logic",
      "begin": "(?i)(?:OR|AND)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "markup.bold.operator.logic.begin"
        }
      },
      "comment": "exclude compare operators",
      "end": "(?i)(?<=\\))|(?=N[\"'])|(?=[\"'])|([0-9]*(?:\\.|,)[0-9]+(?:E[-+]?\\d+)?|[0-9]+(?:\\.|,)[0-9]*(?:E[-+]?\\d+)|(?:[0-9]+)(?=[^-a-z0-9$_])|X\"[0-9a-f]+\"|X'[0-9a-f]+')|((ZERO(?:(?:E)?S)?|SPACE(?:S)?|HIGH-VALUE(?:S)?|LOW-VALUE(?:S)?|QUOTE(?:S)?|ALL|RETURN-CODE|LINAGE-COUNTER|PAGE-COUNTER|LINE-COUNTER|RMS-STS|RMS-STV|RMS-FILENAME|RMS-CURRENT-STS|RMS-CURRENT-STV|RMS-CURRENT-FILENAME|ADDRESS)|(ACOS|ANNUITY|ARGCOUNT|ASIN|ATAN|CHAR|COS|CURRENT-DATE|DATE-OF-INTEGER|DATE-TO-YYYYMMDD|DAY-OF-INTEGER|DAY-TO-YYYYDDD|FACTORIAL|INTEGER-OF-DATE|INTEGER-OF-DAY|INTEGER-PART|INTEGER|LENGTH|LOG(?:10)?|LOWER-CASE|MAX|MEAN|MEDIAN|MIDRANGE|MIN|MOD|NUMVAL(?:-C)?|ORD(?:-(?:MAX|MIN))?|PRESENT-VALUE|RANDOM|RANGE|REM|REVERSE|SIN|SQRT|STANDARD-DEVIATION|SUM|TAN|TEST-DATE-YYYYMMDD|TEST-DAY-YYYYDDD|UPPER-CASE|VARIANCE|WHEN-COMPILED|YEAR-TO-YYYY)|(SUCCESS|FAILURE|POSITIVE|NEGATIVE|ZERO|NUMERIC|DBCS|KANJI|JAPANESE|ALPHABETIC(?:-(?:LOWER|UPPER))?))(?=[^-a-z0-9$_])|(?!(?:IS|TO|THAN|OR|NOT|GREATER|LESS|EQUAL|FUNCTION)[^-a-z0-9$_])([a-z0-9$_](?:[-a-z0-9$_]*[a-z0-9$_])?)",
      "endCaptures": {
        "1": {
          "name": "constant.numeric.logic.end"
        },
        "2": {
          "name": "markup.italic"
        },
        "3": {
          "name": "entity.name.class.special.purpose.logic.end"
        },
        "4": {
          "name": "entity.name.class.function.name.logic.end"
        },
        "5": {
          "name": "entity.name.class.class.logic.end"
        },
        "6": {
          "name": "variable.other.logic.end"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#expression.brackets"
        },
        {
          "name": "function",
          "match": "(?i)(FUNCTION)(?=[^-a-z0-9$_])",
          "captures": {
            "0": {
              "name": "markup.bold.function.inside"
            }
          }
        },
        {
          "name": "operator.compare",
          "match": "(?i)>=|<=|[><=]|(?:(IS|TO|THAN|OR)|NOT|GREATER|LESS|EQUAL)(?=[^-a-z0-9$_])",
          "captures": {
            "0": {
              "name": "markup.bold.operator.logic.compare"
            },
            "1": {
              "name": "entity.name.function.operator.logic.compare"
            }
          }
        },
        {
          "name": "operator.unary",
          "begin": "(?i)[-+]",
          "beginCaptures": {
            "0": {
              "name": "markup.bold.operator.unary"
            }
          },
          "end": "(?i)(?=\\(|\\.\\d|[a-z0-9$_])",
          "patterns": [
            {
              "name": "operator.unary.double",
              "match": "(?i)[-+]",
              "captures": {
                "0": {
                  "name": "markup.bold.operator.unary.double"
                }
              }
            },
            {
              "include": "#invalid-char"
            }
          ]
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "operator.compare": {
      "name": "operator.compare",
      "begin": "(?i)>=|<=|[><=]|(?:(IS)|NOT|GREATER|LESS|EQUAL)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "markup.bold.operator.compare.begin"
        },
        "1": {
          "name": "entity.name.function.compare.begin"
        }
      },
      "end": "(?i)(?<=\\))|(?=N[\"'])|(?=[\"'])|([0-9]*(?:\\.|,)[0-9]+(?:E[-+]?\\d+)?|[0-9]+(?:\\.|,)[0-9]*(?:E[-+]?\\d+)|(?:[0-9]+)(?=[^-a-z0-9$_])|X\"[0-9a-f]+\"|X'[0-9a-f]+')|((ZERO(?:(?:E)?S)?|SPACE(?:S)?|HIGH-VALUE(?:S)?|LOW-VALUE(?:S)?|QUOTE(?:S)?|ALL|RETURN-CODE|LINAGE-COUNTER|PAGE-COUNTER|LINE-COUNTER|RMS-STS|RMS-STV|RMS-FILENAME|RMS-CURRENT-STS|RMS-CURRENT-STV|RMS-CURRENT-FILENAME|ADDRESS)|(ACOS|ANNUITY|ARGCOUNT|ASIN|ATAN|CHAR|COS|CURRENT-DATE|DATE-OF-INTEGER|DATE-TO-YYYYMMDD|DAY-OF-INTEGER|DAY-TO-YYYYDDD|FACTORIAL|INTEGER-OF-DATE|INTEGER-OF-DAY|INTEGER-PART|INTEGER|LENGTH|LOG(?:10)?|LOWER-CASE|MAX|MEAN|MEDIAN|MIDRANGE|MIN|MOD|NUMVAL(?:-C)?|ORD(?:-(?:MAX|MIN))?|PRESENT-VALUE|RANDOM|RANGE|REM|REVERSE|SIN|SQRT|STANDARD-DEVIATION|SUM|TAN|TEST-DATE-YYYYMMDD|TEST-DAY-YYYYDDD|UPPER-CASE|VARIANCE|WHEN-COMPILED|YEAR-TO-YYYY)|(SUCCESS|FAILURE|POSITIVE|NEGATIVE|ZERO|NUMERIC|DBCS|KANJI|JAPANESE|ALPHABETIC(?:-(?:LOWER|UPPER))?))(?=[^-a-z0-9$_])|(?!(?:NOT|THAN|TO|OR|GREATER|LESS|EQUAL|FUNCTION)[^-a-z0-9$_])([a-z0-9$_](?:[-a-z0-9$_]*[a-z0-9$_])?)",
      "endCaptures": {
        "1": {
          "name": "constant.numeric.compare.end"
        },
        "2": {
          "name": "markup.italic"
        },
        "3": {
          "name": "entity.name.class.special.purpose.logic.end"
        },
        "4": {
          "name": "entity.name.class.function.name.end"
        },
        "5": {
          "name": "entity.name.class.class.logic.end"
        },
        "6": {
          "name": "variable.other.logic.end"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#expression.brackets"
        },
        {
          "name": "function",
          "match": "(?i)(FUNCTION)(?=[^-a-z0-9$_])",
          "captures": {
            "0": {
              "name": "markup.bold.function.inside"
            }
          }
        },
        {
          "name": "operator.compare.tail",
          "match": "(?i)(?:TO|THAN|OR)(?=[^-a-z0-9$_])",
          "captures": {
            "0": {
              "name": "entity.name.function.compare.tail"
            }
          }
        },
        {
          "name": "operator.compare.inner",
          "match": "(?i)>=|<=|[><=]|(?:GREATER|LESS|EQUAL|NOT)(?=[^-a-z0-9$_])",
          "captures": {
            "0": {
              "name": "markup.bold.operator.compare.inner"
            }
          }
        },
        {
          "name": "operator.compare.unary",
          "match": "(?i)[-+]",
          "captures": {
            "0": {
              "name": "markup.bold.operator.compare.unary"
            }
          }
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "expression.brackets": {
      "name": "expression.brackets",
      "begin": "[(]",
      "beginCaptures": {
        "0": {
          "name": "markup.bold.bracket.open"
        }
      },
      "end": "[)]",
      "endCaptures": {
        "0": {
          "name": "markup.bold.bracket.close"
        }
      },
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    },
    "invalid-char": {
      "match": "\\S",
      "name": "invalid.illegal"
    },
    "comment": {
      "name": "comment.line",
      "match": "(?i)^(?:\\\\[a-z])?((\\d{6})|(\\s{6}))?[*/].*$\n",
      "captures": {
        "1": {
          "name": "markup.bold"
        },
        "2": {
          "name": "comment.line"
        }
      }
    },
    "linenum": {
      "name": "cobol.linenum",
      "match": "^((\\d){6})",
      "captures": {
        "0": {
          "name": "markup.bold"
        },
        "1": {
          "name": "comment.line"
        }
      }
    },
    "conditional": {
      "name": "cobol.conditional",
      "match": "(?i)^(\\\\[a-z])",
      "captures": {
        "0": {
          "name": "markup.bold"
        },
        "1": {
          "name": "comment.line"
        }
      }
    },
    "literal.number": {
      "patterns": [
        {
          "name": "constant.numeric.float",
          "match": "(?i)[0-9]*(\\.|,)[0-9]+(E[-+]?\\d+)?"
        },
        {
          "name": "constant.numeric.float",
          "match": "(?i)[0-9]+(\\.|,)[0-9]*(E[-+]?\\d+)"
        },
        {
          "include": "#literal.integer"
        }
      ]
    },
    "literal.integer": {
      "patterns": [
        {
          "name": "constant.numeric.integer",
          "match": "(?i)(?:^|(?<=[^a-z0-9$_]))([0-9]+)(?=[^-a-z0-9$_])"
        },
        {
          "name": "constant.numeric.integer",
          "match": "(?i)X\"[0-9a-f]+\""
        },
        {
          "name": "constant.numeric.integer",
          "match": "(?i)X'[0-9a-f]+'"
        }
      ]
    },
    "literal.text": {
      "name": "cobol.text",
      "begin": "(?i)==",
      "beginCaptures": {
        "0": {
          "name": "string.quoted"
        }
      },
      "end": "==",
      "endCaptures": {
        "0": {
          "name": "string.quoted"
        }
      },
      "contentName": "string.quoted"
    },
    "literal.string": {
      "begin": "(?i)(?=(N)?(\"|'))",
      "end": "(?!\\G)",
      "patterns": [
        {
          "name": "string.quoted.double",
          "begin": "(?i)\\G(N)?\"",
          "end": "\"(?=[^\"])|\n",
          "patterns": [
            {
              "name": "constant.character.escape",
              "match": "\"\""
            }
          ]
        },
        {
          "name": "string.quoted.single",
          "begin": "(?i)\\G(N)?'",
          "end": "'(?=[^'])|\n",
          "patterns": [
            {
              "name": "constant.character.escape",
              "match": "''"
            }
          ]
        }
      ]
    },
    "character-string": {
      "name": "markup.bold",
      "match": "\\S+?(?=\\.?[\\s$])"
    },

    "identification-division": {
      "name": "cobol.identification.division",
      "begin": "(?i)(IDENTIFICATION)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(ENVIRONMENT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "begin": "(?i)(DIVISION)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "keyword"
            }
          },
          "end": "(?i)(?=(ENVIRONMENT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#program-id"
            },
            {
              "include": "#author"
            },
            {
              "include": "#installation"
            },
            {
              "include": "#date-written"
            },
            {
              "include": "#date-compiled"
            },
            {
              "include": "#security"
            },
            {
              "include": "#options"
            },
            {
              "include": "#compiler.directives"
            }
          ]
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "program-id": {
      "name": "cobol.program.id",
      "begin": "(?i)(PROGRAM-ID)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(AUTHOR|INSTALLATION|DATE-WRITTEN|DATE-COMPILED|SECURITY|OPTIONS|ENVIRONMENT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "comment": "catching dot",
          "begin": "\\G",
          "end": "\\.[^-a-z0-9$_]",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#invalid-char"
            }
          ]
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS|WITH|PROGRAM)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(COMMON|INITIAL|IDENT)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "author": {
      "name": "cobol.author",
      "begin": "(?i)(AUTHOR)(?=[^-a-z0-9$_])(?:\\s*[.](.*)|(.*))",
      "beginCaptures": {
        "1": {
          "name": "keyword"
        }
        ,"2": {
          "name": "comment"
        }
        ,"3": {
          "name": "comment"
        }
      },
      "end": "(?i)(?=(INSTALLATION|DATE-WRITTEN|DATE-COMPILED|SECURITY|OPTIONS|ENVIRONMENT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "comment.line",
          "match": "^(?: {4}|\t).+"
        }
      ]
    },
    "installation": {
      "name": "cobol.installation",
      "begin": "(?i)(INSTALLATION)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(AUTHOR|DATE-WRITTEN|DATE-COMPILED|SECURITY|OPTIONS|ENVIRONMENT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "comment": "catching dot",
          "begin": "\\G",
          "end": "\\.[^-a-z0-9$_]",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#invalid-char"
            }
          ]
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "comment.line",
          "match": "."
        }
      ]
    },
    "date-written": {
      "name": "cobol.date.written",
      "begin": "(?i)(DATE-WRITTEN)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(INSTALLATION|AUTHOR|DATE-COMPILED|SECURITY|OPTIONS|ENVIRONMENT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "comment": "catching dot",
          "begin": "\\G",
          "end": "\\.[^-a-z0-9$_]",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#invalid-char"
            }
          ]
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "comment.line",
          "match": "."
        }
      ]
    },
    "security": {
      "name": "cobol.security",
      "begin": "(?i)(SECURITY)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(INSTALLATION|DATE-WRITTEN|DATE-COMPILED|AUTHOR|OPTIONS|ENVIRONMENT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "comment": "catching dot",
          "begin": "\\G",
          "end": "\\.[^-a-z0-9$_]",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#invalid-char"
            }
          ]
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "comment.line",
          "match": "."
        }
      ]
    },
    "date-compiled": {
      "name": "cobol.date.compiled",
      "begin": "(?i)(DATE-COMPILED)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(INSTALLATION|DATE-WRITTEN|AUTHOR|SECURITY|OPTIONS|ENVIRONMENT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "comment": "catching dot",
          "begin": "\\G",
          "end": "\\.[^-a-z0-9$_]",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#invalid-char"
            }
          ]
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "comment.line",
          "match": "."
        }
      ]
    },
    "options": {
      "name": "cobol.options",
      "begin": "(?i)(OPTIONS)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(INSTALLATION|DATE-WRITTEN|DATE-COMPILED|SECURITY|AUTHOR|ENVIRONMENT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(ARITHMETIC|NATIVE|STANDARD)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "environment-division": {
      "name": "cobol.environment.division",
      "begin": "(?i)(ENVIRONMENT)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "begin": "(?i)(DIVISION)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "keyword"
            }
          },
          "end": "(?i)(?=(DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#compiler.directives"
            },
            {
              "include": "#configuration-section"
            },
            {
              "include": "#input-output-section"
            }
          ]
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "configuration-section": {
      "name": "cobol.configuration.section",
      "begin": "(?i)(CONFIGURATION)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "begin": "(?i)(SECTION)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "keyword"
            }
          },
          "end": "(?i)(?=(INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#source-computer"
            },
            {
              "include": "#object-computer"
            },
            {
              "include": "#special-names"
            },
            {
              "include": "#compiler.directives"
            }
          ]
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "source-computer": {
      "name": "cobol.source.computer",
      "begin": "(?i)(SOURCE-COMPUTER)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(OBJECT-COMPUTER|SPECIAL-NAMES|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "variable.other",
          "match": "(?i)(ALPHA|I64|VAX)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(WITH)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(DEBUGGING|MODE)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "object-computer": {
      "name": "cobol.object.computer",
      "begin": "(?i)(OBJECT-COMPUTER)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(SOURCE-COMPUTER|SPECIAL-NAMES|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "variable.other",
          "match": "(?i)(ALPHA|I64|VAX)(?=[^-a-z0-9$_])"
        },
        {
          "name": "cobol.memory",
          "begin": "(?i)(MEMORY)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "entity.name.class"
            }
          },
          "end": "(?i)(?=(SEGMENT-LIMIT|PROGRAM|COLLATING|SEQUENCE|SOURCE-COMPUTER|SPECIAL-NAMES|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#compiler.directives"
            },
            {
              "name": "entity.name.function",
              "match": "(?i)(SIZE)(?=[^-a-z0-9$_])"
            },
            {
              "name": "constant.numeric",
              "match": "(?i)(\\d+)(?=[^-a-z0-9$_])"
            },
            {
              "name": "entity.name.class",
              "match": "(?i)(WORDS|CHARACTERS|MODULES)(?=[^-a-z0-9$_])"
            }
          ]
        },
        {
          "name": "cobol.sequence",
          "begin": "(?i)(PROGRAM|COLLATING|(SEQUENCE))(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function"
            },
            "2": {
              "name": "entity.name.class"
            }
          },
          "end": "(?i)(?=(SEGMENT-LIMIT|SOURCE-COMPUTER|SPECIAL-NAMES|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#compiler.directives"
            },
            {
              "match": "(?i)(PROGRAM|COLLATING|(SEQUENCE)|IS)(?=[^-a-z0-9$_])",
              "captures": {
                "2": {
                  "name": "entity.name.class"
                }
              },
              "name": "entity.name.function"
            },
            {
              "include": "#cobol.name"
            }
          ]
        },
        {
          "name": "cobol.segment.limit",
          "begin": "(?i)(SEGMENT-LIMIT)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "entity.name.class"
            }
          },
          "end": "(?i)(?=(SOURCE-COMPUTER|SPECIAL-NAMES|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#compiler.directives"
            },
            {
              "name": "entity.name.function",
              "match": "(?i)(IS)(?=[^-a-z0-9$_])"
            },
            {
              "name": "constant.numeric",
              "match": "(?i)(\\d+)(?=[^-a-z0-9$_])"
            }
          ]
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "special-names": {
      "name": "cobol.special.names",
      "begin": "(?i)(SPECIAL-NAMES)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(SOURCE-COMPUTER|OBJECT-COMPUTER|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#device"
        },
        {
          "include": "#argument-environment"
        },
        {
          "include": "#c01"
        },
        {
          "include": "#switch"
        },
        {
          "include": "#alphabet"
        },
        {
          "include": "#symbolic"
        },
        {
          "include": "#class"
        },
        {
          "include": "#currency"
        },
        {
          "include": "#decimal-point"
        },
        {
          "include": "#cursor"
        },
        {
          "include": "#crt"
        }
      ]
    },
    "device": {
      "name": "cobol.device",
      "begin": "(?i)(CARD-READER|PAPER-TAPE-READER|CONSOLE|LINE-PRINTER|PAPER-TAPE-PUNCH|SYSIN|SYSOUT|SYSERR)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=(SWITCH(-\\d(\\d)?)?|CARD-READER|PAPER-TAPE-READER|CONSOLE|LINE-PRINTER|PAPER-TAPE-PUNCH|SYSIN|SYSOUT|SYSERR|C01|ARGUMENT-NUMBER|ARGUMENT-VALUE|ENVIRONMENT-NAME|ENVIRONMENT-VALUE|ALPHABET|SYMBOLIC|CLASS|CURRENCY|DECIMAL-POINT|CURSOR|CRT|SOURCE-COMPUTER|OBJECT-COMPUTER|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "argument-environment": {
      "name": "cobol.argument_environment",
      "begin": "(?i)(ARGUMENT-NUMBER|ARGUMENT-VALUE|ENVIRONMENT-NAME|ENVIRONMENT-VALUE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=(SWITCH(-\\d(\\d)?)?|CARD-READER|PAPER-TAPE-READER|CONSOLE|LINE-PRINTER|PAPER-TAPE-PUNCH|SYSIN|SYSOUT|SYSERR|C01|ARGUMENT-NUMBER|ARGUMENT-VALUE|ENVIRONMENT-NAME|ENVIRONMENT-VALUE|ALPHABET|SYMBOLIC|CLASS|CURRENCY|DECIMAL-POINT|CURSOR|CRT|SOURCE-COMPUTER|OBJECT-COMPUTER|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "c01": {
      "name": "cobol.c01",
      "begin": "(?i)(C01)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=(SWITCH(-\\d(\\d)?)?|CARD-READER|PAPER-TAPE-READER|CONSOLE|LINE-PRINTER|PAPER-TAPE-PUNCH|SYSIN|SYSOUT|SYSERR|C01|ARGUMENT-NUMBER|ARGUMENT-VALUE|ENVIRONMENT-NAME|ENVIRONMENT-VALUE|ALPHABET|SYMBOLIC|CLASS|CURRENCY|DECIMAL-POINT|CURSOR|CRT|SOURCE-COMPUTER|OBJECT-COMPUTER|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "switch": {
      "name": "cobol.switch",
      "begin": "(?i)(SWITCH(-\\d(\\d)?)?)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=(SWITCH(-\\d(\\d)?)?|CARD-READER|PAPER-TAPE-READER|CONSOLE|LINE-PRINTER|PAPER-TAPE-PUNCH|SYSIN|SYSOUT|SYSERR|C01|ARGUMENT-NUMBER|ARGUMENT-VALUE|ENVIRONMENT-NAME|ENVIRONMENT-VALUE|ALPHABET|SYMBOLIC|CLASS|CURRENCY|DECIMAL-POINT|CURSOR|CRT|SOURCE-COMPUTER|OBJECT-COMPUTER|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(STATUS|IS)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(ON|OFF)(?=[^-a-z0-9$_])"
        },
        {
          "name": "constant.numeric",
          "match": "(?i)(\\d+)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "alphabet": {
      "name": "cobol.alphabet",
      "begin": "(?i)(ALPHABET)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=(SWITCH(-\\d(\\d)?)?|CARD-READER|PAPER-TAPE-READER|CONSOLE|LINE-PRINTER|PAPER-TAPE-PUNCH|SYSIN|SYSOUT|SYSERR|C01|ARGUMENT-NUMBER|ARGUMENT-VALUE|ENVIRONMENT-NAME|ENVIRONMENT-VALUE|ALPHABET|SYMBOLIC|CLASS|CURRENCY|DECIMAL-POINT|CURSOR|CRT|SOURCE-COMPUTER|OBJECT-COMPUTER|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(ASCII|STANDARD-1|STANDARD-2|NATIVE|EBCDIC|THRU|THROUGH|ALSO)(?=[^-a-z0-9$_])"
        },
        {
          "name": "constant.numeric",
          "match": "(?i)(\\d+)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#cobol.name"
        },
        {
          "include": "#literal.string"
        }
      ]
    },
    "symbolic": {
      "name": "cobol.symbolic",
      "begin": "(?i)(SYMBOLIC)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=(SWITCH(-\\d(\\d)?)?|CARD-READER|PAPER-TAPE-READER|CONSOLE|LINE-PRINTER|PAPER-TAPE-PUNCH|SYSIN|SYSOUT|SYSERR|C01|ARGUMENT-NUMBER|ARGUMENT-VALUE|ENVIRONMENT-NAME|ENVIRONMENT-VALUE|ALPHABET|SYMBOLIC|CLASS|CURRENCY|DECIMAL-POINT|CURSOR|CRT|SOURCE-COMPUTER|OBJECT-COMPUTER|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(CHARACTERS|IS|ARE|IN)(?=[^-a-z0-9$_])"
        },
        {
          "name": "constant.numeric",
          "match": "(?i)(\\d+)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "class": {
      "name": "cobol.class",
      "begin": "(?i)(CLASS)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=(SWITCH(-\\d(\\d)?)?|CARD-READER|PAPER-TAPE-READER|CONSOLE|LINE-PRINTER|PAPER-TAPE-PUNCH|SYSIN|SYSOUT|SYSERR|C01|ARGUMENT-NUMBER|ARGUMENT-VALUE|ENVIRONMENT-NAME|ENVIRONMENT-VALUE|ALPHABET|SYMBOLIC|CLASS|CURRENCY|DECIMAL-POINT|CURSOR|CRT|SOURCE-COMPUTER|OBJECT-COMPUTER|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(THRU|THROUGH)(?=[^-a-z0-9$_])"
        },
        {
          "name": "constant.numeric",
          "match": "(?i)(\\d+)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#cobol.name"
        },
        {
          "include": "#literal.string"
        }
      ]
    },
    "currency": {
      "name": "cobol.currency",
      "begin": "(?i)(CURRENCY)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=(SWITCH(-\\d(\\d)?)?|CARD-READER|PAPER-TAPE-READER|CONSOLE|LINE-PRINTER|PAPER-TAPE-PUNCH|SYSIN|SYSOUT|SYSERR|C01|ARGUMENT-NUMBER|ARGUMENT-VALUE|ENVIRONMENT-NAME|ENVIRONMENT-VALUE|ALPHABET|SYMBOLIC|CLASS|CURRENCY|DECIMAL-POINT|CURSOR|CRT|SOURCE-COMPUTER|OBJECT-COMPUTER|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(SIGN|IS|WITH)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(PICTURE|SYMBOL)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        }
      ]
    },
    "decimal-point": {
      "name": "cobol.decimal.point",
      "begin": "(?i)(DECIMAL-POINT)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(COMMA)(?=[^-a-z0-9$_])",
      "endCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "cursor": {
      "name": "cobol.cursor",
      "begin": "(?i)(CURSOR)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=(SWITCH(-\\d(\\d)?)?|CARD-READER|PAPER-TAPE-READER|CONSOLE|LINE-PRINTER|PAPER-TAPE-PUNCH|SYSIN|SYSOUT|SYSERR|C01|ARGUMENT-NUMBER|ARGUMENT-VALUE|ENVIRONMENT-NAME|ENVIRONMENT-VALUE|ALPHABET|SYMBOLIC|CLASS|CURRENCY|DECIMAL-POINT|CURSOR|CRT|SOURCE-COMPUTER|OBJECT-COMPUTER|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "crt": {
      "name": "cobol.crt",
      "begin": "(?i)(CRT)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=(SWITCH(-\\d(\\d)?)?|CARD-READER|PAPER-TAPE-READER|CONSOLE|LINE-PRINTER|PAPER-TAPE-PUNCH|SYSIN|SYSOUT|SYSERR|C01|ARGUMENT-NUMBER|ARGUMENT-VALUE|ENVIRONMENT-NAME|ENVIRONMENT-VALUE|ALPHABET|SYMBOLIC|CLASS|CURRENCY|DECIMAL-POINT|CURSOR|CRT|SOURCE-COMPUTER|OBJECT-COMPUTER|INPUT-OUTPUT|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(STATUS|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "input-output-section": {
      "name": "cobol.input_output.section",
      "begin": "(?i)(INPUT-OUTPUT)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(CONFIGURATION|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "begin": "(?i)(SECTION)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "keyword"
            }
          },
          "end": "(?i)(?=(CONFIGURATION|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#compiler.directives"
            },
            {
              "include": "#file-control"
            },
            {
              "include": "#i-o-control"
            }
          ]
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "file-control": {
      "name": "cobol.file.control",
      "begin": "(?i)(FILE-CONTROL)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(FILE-CONTROL|I-O-CONTROL|CONFIGURATION|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#select"
        }
      ]
    },
    "select": {
      "name": "cobol.select",
      "begin": "(?i)(SELECT)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "name": "entity.name.class",
          "match": "(?i)(OPTIONAL)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#select.assign"
        },
        {
          "include": "#select.block"
        },
        {
          "include": "#code-set"
        },
        {
          "include": "#select.lock"
        },
        {
          "include": "#select.organization"
        },
        {
          "include": "#select.padding"
        },
        {
          "include": "#select.record"
        },
        {
          "include": "#select.access"
        },
        {
          "include": "#select.reserve"
        },
        {
          "include": "#select.file_status"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "select.assign": {
      "name": "cobol.select.assign",
      "begin": "(?i)(ASSIGN)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(RESERVE|ORGANIZATION|SEQUENTIAL|LINE|RELATIVE|INDEXED|BLOCK|CODE-SET|PADDING|RECORD|ACCESS|LOCK|FILE|STATUS|ALTERNATE)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(DISK|PRINTER|REEL|UNIT)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(TO|MULTIPLE|FILE|EXTERNAL|DYNAMIC)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "select.block": {
      "name": "cobol.select.block",
      "begin": "(?i)(BLOCK)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(RESERVE|ORGANIZATION|SEQUENTIAL|LINE|RELATIVE|INDEXED|BLOCK|CODE-SET|PADDING|RECORD|ACCESS|LOCK|FILE|STATUS|ALTERNATE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(TO|RECORDS)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(CONTAINS|CHARACTERS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "code-set": {
      "name": "cobol.code_set",
      "begin": "(?i)(CODE-SET)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?!(?:IS)[^-a-z0-9$_])([a-z0-9$_](?:[-a-z0-9$_]*[a-z0-9$_])?)",
      "endCaptures": {
        "0": {
          "name": "variable.other.code_set.end"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "cobol.code_set.is",
          "match": "(?i)(?:IS)(?=[^-a-z0-9$_])",
          "captures": {
            "0": {
              "name": "entity.name.function.code_set.is"
            }
          }
        }
      ]
    },
    "select.lock": {
      "name": "cobol.select.lock",
      "begin": "(?i)(LOCK)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(RESERVE|ORGANIZATION|SEQUENTIAL|LINE|RELATIVE|INDEXED|BLOCK|CODE-SET|PADDING|RECORD|ACCESS|LOCK|FILE|STATUS|ALTERNATE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(MANUAL|AUTOMATIC|EXCLUSIVE|LOCK|ON|RECORD(S)|MULTIPLE|ROLLBACK)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(MODE|IS|WITH)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "select.organization": {
      "name": "cobol.select.organization",
      "begin": "(?i)(ORGANIZATION|SEQUENTIAL|LINE|RELATIVE|INDEXED)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(RESERVE|ORGANIZATION|SEQUENTIAL|LINE|RELATIVE|INDEXED|BLOCK|CODE-SET|PADDING|RECORD|ACCESS|LOCK|FILE|STATUS|ALTERNATE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(SEQUENTIAL|LINE|RELATIVE|INDEXED)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "select.padding": {
      "name": "cobol.select.padding",
      "begin": "(?i)(PADDING)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(RESERVE|ORGANIZATION|SEQUENTIAL|LINE|RELATIVE|INDEXED|BLOCK|CODE-SET|PADDING|RECORD|ACCESS|LOCK|FILE|STATUS|ALTERNATE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(CHARACTER|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "select.record": {
      "name": "cobol.select.record",
      "begin": "(?i)(ALTERNATE|RECORD)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(RESERVE|ORGANIZATION|SEQUENTIAL|LINE|RELATIVE|INDEXED|BLOCK|CODE-SET|PADDING|RECORD|ACCESS|LOCK|FILE|STATUS|ALTERNATE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(DUPLICATES|DESCENDING|DELIMITER|STANDARD-1)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(KEY|IS|WITH|ASCENDING)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#identifier"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "select.access": {
      "name": "cobol.select.access",
      "begin": "(?i)(ACCESS)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(RESERVE|ORGANIZATION|SEQUENTIAL|LINE|RELATIVE|INDEXED|BLOCK|CODE-SET|PADDING|RECORD|ACCESS|LOCK|FILE|STATUS|ALTERNATE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(SEQUENTIAL|RANDOM|DYNAMIC|RELATIVE)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(MODE|IS|KEY)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "select.reserve": {
      "name": "cobol.select.reserve",
      "begin": "(?i)(RESERVE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(RESERVE|ORGANIZATION|SEQUENTIAL|LINE|RELATIVE|INDEXED|BLOCK|CODE-SET|PADDING|RECORD|ACCESS|LOCK|FILE|STATUS|ALTERNATE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(AREA(S)?)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "select.file_status": {
      "name": "cobol.select.file_status",
      "begin": "(?i)(FILE|(STATUS))(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function"
        },
        "2": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(RESERVE|ORGANIZATION|SEQUENTIAL|LINE|RELATIVE|INDEXED|BLOCK|CODE-SET|PADDING|RECORD|ACCESS|LOCK|FILE|ALTERNATE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(STATUS)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "i-o-control": {
      "name": "cobol.i_o.control",
      "begin": "(?i)(I-O-CONTROL)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(FILE-CONTROL|I-O-CONTROL|CONFIGURATION|DATA|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#apply"
        },
        {
          "include": "#same"
        },
        {
          "include": "#rerun"
        },
        {
          "include": "#multiple"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "apply": {
      "name": "cobol.apply",
      "begin": "(?i)(APPLY)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(APPLY|SAME|RERUN|MULTIPLE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(CORE-INDEX|RECORD-OVERFLOW|REORG-CRITERIA|DEFERRED-WRITE|EXTENSION|FILL-SIZE|LOCK-HOLDING|MASS-INSERT|CONTIGUOUS-BEST-TRY|CONTIGUOUS|PREALLOCATION|PRINT-CONTROL|WINDOW|ON)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(TO)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "same": {
      "name": "cobol.same",
      "begin": "(?i)(SAME)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(APPLY|SAME|RERUN|MULTIPLE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(RECORD|SORT|SORT-MERGE)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(AREA|FOR)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "rerun": {
      "name": "cobol.rerun",
      "begin": "(?i)(RERUN)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(APPLY|SAME|RERUN|MULTIPLE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(ON|END|REEL|UNIT|RECORDS|CLOCK-UNITS)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(EVERY|OF)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "multiple": {
      "name": "cobol.multiple",
      "begin": "(?i)(MULTIPLE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(APPLY|SAME|RERUN|MULTIPLE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(FILE|POSITION)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(TAPE|CONTAINS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "data-division": {
      "name": "cobol.data.division",
      "begin": "(?i)(DATA)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "begin": "(?i)(DIVISION)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "keyword"
            }
          },
          "end": "(?i)(?=(PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#file-section"
            },
            {
              "include": "#working-storage-section"
            },
            {
              "include": "#linkage-section"
            },
            {
              "include": "#report-section"
            },
            {
              "include": "#screen-section"
            },
            {
              "include": "#compiler.directives"
            }
          ]
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "file-section": {
      "name": "cobol.file.section",
      "begin": "(?i)(FILE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(WORKING-STORAGE|LINKAGE|REPORT|SCREEN|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "begin": "(?i)(SECTION)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "keyword"
            }
          },
          "end": "(?i)(?=(WORKING-STORAGE|LINKAGE|REPORT|SCREEN|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#fd"
            },
            {
              "include": "#sd"
            },
            {
              "include": "#data-description"
            },
            {
              "include": "#compiler.directives"
            }
          ]
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "data-description": {
      "name": "cobol.data_description",
      "begin": "(?i)(\\d+)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "markup.bold"
        },
        "1": {
          "name": "keyword.operator"
        }
      },
      "end": "(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "name": "cobol.data_description.66",
          "begin": "(?i)(?<=^66|[^-a-z0-9$_]66)\\G(?=[^-a-z0-9$_])",
          "end": "(?i)(?=\\.[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "name": "entity.name.class",
              "match": "(?i)(RENAMES|THRU|THROUGH)(?=[^-a-z0-9$_])"
            },
            {
              "include": "#compiler.directives"
            },
            {
              "include": "#identifier"
            }
          ]
        },
        {
          "name": "cobol.data_description.88",
          "begin": "(?i)(?<=^88|[^-a-z0-9$_]88)\\G(?=[^-a-z0-9$_])",
          "end": "(?i)(?=\\.[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "name": "entity.name.class",
              "match": "(?i)(VALUE(S)?|EXTERNAL|REFERENCE|THRU|THROUGH)(?=[^-a-z0-9$_])"
            },
            {
              "include": "#literal.string"
            },
            {
              "include": "#literal.integer"
            },
            {
              "include": "#compiler.directives"
            },
            {
              "include": "#identifier"
            }
          ]
        },
        {
          "begin": "\\G",
          "end": "(?i)(?=\\.[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "name": "entity.name.function",
              "match": "(?i)(FILLER|IS)(?=[^-a-z0-9$_])"
            },
            {
              "name": "entity.name.class",
              "match": "(?i)(EXTERNAL|GLOBAL)(?=[^-a-z0-9$_])"
            },
            {
              "include": "#data.redefines"
            },
            {
              "include": "#data.picture"
            },
            {
              "include": "#data.usage"
            },
            {
              "include": "#data.sign"
            },
            {
              "include": "#data.occurs"
            },
            {
              "include": "#data.sync"
            },
            {
              "include": "#data.just"
            },
            {
              "include": "#data.blank"
            },
            {
              "include": "#data.value"
            },
            {
              "include": "#compiler.directives"
            },
            {
              "include": "#cobol.name"
            }
          ]
        }
      ]
    },
    "data.redefines": {
      "name": "cobol.data.redefines",
      "begin": "(?i)(REDEFINES)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)[a-z0-9$_](?:[-a-z0-9$_]*[a-z0-9$_])?",
      "endCaptures": {
        "0": {
          "name": "variable.other"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "data.picture": {
      "name": "cobol.data.picture",
      "begin": "(?i)(?=PIC(TURE)?(?=[^-a-z0-9$_]))",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(IS|EXTERNAL|GLOBAL|USAGE|BINARY(?:-(?:CHAR|SHORT|LONG|DOUBLE))?|COMP(UTATIONAL)?(?:-(?:1|2|3|5|6|N|X))?|DISPLAY(?:-1)?|FLOAT(?:-(?:SHORT|LONG|EXTENDED))?|INDEX|PACKED-DECIMAL|POINTER(-64)?|SIGN|LEADING|TRAILING|OCCURS|SYNC(HRONIZED)?|JUST(IFIED)?|BLANK|VALUE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#picture"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(USING|FROM|TO)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "picture": {
      "name": "cobol.picture",
      "begin": "(?i)(PIC(TURE)?)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?<!\\G)(?!\\s|\n|^(\\\\[a-z])?(\\d{6}|\\s{6})?[*/]|(IS)[^-a-z0-9$_])(\\S+?(?=\\.?[\\s$]))",
      "endCaptures": {
        "0": {
          "name": "markup.bold"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "data.usage": {
      "name": "cobol.data.usage",
      "begin": "(?i)(USAGE|BINARY(?:-(?:CHAR|SHORT|LONG|DOUBLE))?|COMP(UTATIONAL)?(?:-(?:1|2|3|5|6|N|X))?|DISPLAY(?:-1)?|FLOAT(?:-(?:SHORT|LONG|EXTENDED))?|INDEX|PACKED-DECIMAL|POINTER(-64)?)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|PIC(TURE)?|USAGE|SIGN|LEADING|TRAILING|OCCURS|SYNC(HRONIZED)?|JUST(IFIED)?|BLANK|VALUE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(BINARY(?:-(?:CHAR|SHORT|LONG|DOUBLE))?|COMP(UTATIONAL)?(?:-(?:1|2|3|5|6|N|X))?|DISPLAY(?:-1)?|FLOAT(?:-(?:SHORT|LONG|EXTENDED))?|INDEX|PACKED-DECIMAL|POINTER(-64)?)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "data.sign": {
      "name": "cobol.data.sign",
      "begin": "(?i)(SIGN|LEADING|TRAILING)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|PIC(TURE)?|USAGE|BINARY(?:-(?:CHAR|SHORT|LONG|DOUBLE))?|COMP(UTATIONAL)?(?:-(?:1|2|3|5|6|N|X))?|DISPLAY(?:-1)?|FLOAT(?:-(?:SHORT|LONG|EXTENDED))?|INDEX|PACKED-DECIMAL|POINTER(-64)?|SIGN|OCCURS|SYNC(HRONIZED)?|JUST(IFIED)?|BLANK|VALUE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(LEADING|TRAILING|SEPARATE)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS|CHARACTER)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "data.occurs": {
      "name": "cobol.data.occurs",
      "begin": "(?i)(OCCURS)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|PIC(TURE)?|USAGE|BINARY(?:-(?:CHAR|SHORT|LONG|DOUBLE))?|COMP(UTATIONAL)?(?:-(?:1|2|3|5|6|N|X))?|DISPLAY(?:-1)?|FLOAT(?:-(?:SHORT|LONG|EXTENDED))?|INDEX|PACKED-DECIMAL|POINTER(-64)?|SIGN|LEADING|TRAILING|OCCURS|SYNC(HRONIZED)?|JUST(IFIED)?|BLANK|VALUE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(ASCENDING|DESCENDING|INDEXED|TO|DEPENDING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(TIMES|KEY|IS|BY)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "data.sync": {
      "name": "cobol.data.sync",
      "begin": "(?i)(SYNC(HRONIZED)?)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|PIC(TURE)?|USAGE|BINARY(?:-(?:CHAR|SHORT|LONG|DOUBLE))?|COMP(UTATIONAL)?(?:-(?:1|2|3|5|6|N|X))?|DISPLAY(?:-1)?|FLOAT(?:-(?:SHORT|LONG|EXTENDED))?|INDEX|PACKED-DECIMAL|POINTER(-64)?|SIGN|LEADING|TRAILING|OCCURS|SYNC(HRONIZED)?|JUST(IFIED)?|BLANK|VALUE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(LEFT|RIGHT)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "data.just": {
      "name": "cobol.data.just",
      "begin": "(?i)(JUST(IFIED)?)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|PIC(TURE)?|USAGE|BINARY(?:-(?:CHAR|SHORT|LONG|DOUBLE))?|COMP(UTATIONAL)?(?:-(?:1|2|3|5|6|N|X))?|DISPLAY(?:-1)?|FLOAT(?:-(?:SHORT|LONG|EXTENDED))?|INDEX|PACKED-DECIMAL|POINTER(-64)?|SIGN|LEADING|TRAILING|OCCURS|SYNC(HRONIZED)?|JUST(IFIED)?|BLANK|VALUE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(RIGHT)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "data.blank": {
      "name": "cobol.data.blank",
      "begin": "(?i)(BLANK)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|PIC(TURE)?|USAGE|BINARY(?:-(?:CHAR|SHORT|LONG|DOUBLE))?|COMP(UTATIONAL)?(?:-(?:1|2|3|5|6|N|X))?|DISPLAY(?:-1)?|FLOAT(?:-(?:SHORT|LONG|EXTENDED))?|INDEX|PACKED-DECIMAL|POINTER(-64)?|SIGN|LEADING|TRAILING|OCCURS|SYNC(HRONIZED)?|JUST(IFIED)?|BLANK|VALUE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(ZERO((E)S)?)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(WHEN)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "data.value": {
      "name": "cobol.data.value",
      "begin": "(?i)(VALUE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(PIC(TURE)?|USAGE|BINARY(?:-(?:CHAR|SHORT|LONG|DOUBLE))?|COMP(UTATIONAL)?(?:-(?:1|2|3|5|6|N|X))?|DISPLAY(?:-1)?|FLOAT(?:-(?:SHORT|LONG|EXTENDED))?|INDEX|PACKED-DECIMAL|POINTER(-64)?|SIGN|LEADING|TRAILING|OCCURS|SYNC(HRONIZED)?|JUST(IFIED)?|BLANK|VALUE)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(EXTERNAL|REFERENCE)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "fd": {
      "name": "cobol.fd",
      "begin": "(?i)(FD)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "name": "entity.name.class",
          "match": "(?i)(EXTERNAL|GLOBAL|ALTERNATE)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#fd.block"
        },
        {
          "include": "#fd.recording"
        },
        {
          "include": "#fd.record"
        },
        {
          "include": "#fd.label"
        },
        {
          "include": "#fd.value"
        },
        {
          "include": "#fd.data"
        },
        {
          "include": "#fd.linage"
        },
        {
          "include": "#fd.access"
        },
        {
          "include": "#fd.report"
        },
        {
          "include": "#code-set"
        },
        {
          "include": "#fd.file_status"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "fd.block": {
      "name": "cobol.fd.block",
      "begin": "(?i)(BLOCK)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|RECORDING|RECORD|LABEL|VALUE|DATA|LINAGE|CODE-SET|ACCESS|SEQUENTIAL|FILE|STATUS|ALTERNATE|REPORT(S)?|RANDOM|DYNAMIC)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(TO|RECORDS)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(CONTAINS|CHARACTERS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "fd.record": {
      "name": "cobol.fd.record",
      "begin": "(?i)(RECORD)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|RECORDING|RECORD|LABEL|VALUE|DATA|LINAGE|CODE-SET|ACCESS|SEQUENTIAL|FILE|STATUS|ALTERNATE|REPORT(S)?|RANDOM|DYNAMIC)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#fd.record.key"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(TO|VARYING|DEPENDING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(CONTAINS|CHARACTERS|IS|IN|SIZE|FROM|ON)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "fd.recording": {
      "name": "cobol.fd.recording",
      "begin": "(?i)(RECORDING)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|RECORDING|RECORD|LABEL|VALUE|DATA|LINAGE|CODE-SET|ACCESS|SEQUENTIAL|FILE|STATUS|ALTERNATE|REPORT(S)?|RANDOM|DYNAMIC)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(F(IXED)?|V(ARIABLE)?|U|S)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(MODE|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "fd.record.key": {
      "name": "cobol.fd.record.key",
      "begin": "(?i)(KEY)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|RECORDING|RECORD|LABEL|VALUE|DATA|LINAGE|CODE-SET|ACCESS|SEQUENTIAL|FILE|STATUS|ALTERNATE|REPORT(S)?|RANDOM|DYNAMIC)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(DUPLICATES|DESCENDING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS|WITH|ASCENDING)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "fd.label": {
      "name": "cobol.fd.label",
      "begin": "(?i)(LABEL)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|RECORDING|LABEL|VALUE|DATA|LINAGE|CODE-SET|ACCESS|SEQUENTIAL|FILE|STATUS|ALTERNATE|REPORT(S)?|RANDOM|DYNAMIC)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(RECORD(S)?|STANDARD|OMITTED)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(ARE|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "fd.value": {
      "name": "cobol.fd.value",
      "begin": "(?i)(VALUE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|RECORDING|RECORD|LABEL|VALUE|DATA|LINAGE|CODE-SET|ACCESS|SEQUENTIAL|FILE|STATUS|ALTERNATE|REPORT(S)?|RANDOM|DYNAMIC)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(OF|ID|FILE-ID)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "fd.data": {
      "name": "cobol.fd.data",
      "begin": "(?i)(DATA)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|LABEL|RECORDING|VALUE|DATA|LINAGE|CODE-SET|ACCESS|SEQUENTIAL|FILE|STATUS|ALTERNATE|REPORT(S)?|RANDOM|DYNAMIC)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(RECORD(S)?)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(ARE|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "fd.linage": {
      "name": "cobol.fd.linage",
      "begin": "(?i)(LINAGE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|RECORDING|RECORD|LABEL|VALUE|DATA|LINAGE|CODE-SET|ACCESS|SEQUENTIAL|FILE|STATUS|ALTERNATE|REPORT(S)?|RANDOM|DYNAMIC)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(FOOTING|TOP|BOTTOM)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS|LINES|WITH|AT)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "fd.access": {
      "name": "cobol.fd.access",
      "begin": "(?i)(ACCESS|SEQUENTIAL|RANDOM|DYNAMIC)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|RECORDING|RECORD|LABEL|VALUE|DATA|LINAGE|CODE-SET|FILE|STATUS|ALTERNATE|REPORT(S)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(SEQUENTIAL|RANDOM|DYNAMIC|RELATIVE)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(MODE|KEY|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "fd.report": {
      "name": "cobol.fd.report",
      "begin": "(?i)(REPORT(S)?)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|RECORDING|RECORD|LABEL|VALUE|DATA|LINAGE|CODE-SET|ACCESS|SEQUENTIAL|FILE|STATUS|ALTERNATE|REPORT(S)?|RANDOM|DYNAMIC)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS|ARE)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "fd.file_status": {
      "name": "cobol.fd.file_status",
      "begin": "(?i)(FILE|(STATUS))(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function"
        },
        "2": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(EXTERNAL|GLOBAL|BLOCK|RECORDING|RECORD|LABEL|VALUE|DATA|LINAGE|CODE-SET|ACCESS|SEQUENTIAL|FILE|ALTERNATE|REPORT(S)?|RANDOM|DYNAMIC)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(STATUS)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "sd": {
      "name": "cobol.sd",
      "begin": "(?i)(SD)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#sd.record"
        },
        {
          "include": "#sd.data"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "sd.record": {
      "name": "cobol.sd.record",
      "begin": "(?i)(RECORD)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(RECORD|DATA)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(TO|VARYING|DEPENDING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(CONTAINS|CHARACTERS|IS|IN|SIZE|FROM|ON)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "sd.data": {
      "name": "cobol.sd.data",
      "begin": "(?i)(DATA)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(RECORD|DATA)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(RECORD(S)?)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(ARE|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "working-storage-section": {
      "name": "cobol.working_storage.section",
      "begin": "(?i)(WORKING-STORAGE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(FILE|LINKAGE|REPORT|SCREEN|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "begin": "(?i)(SECTION)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "keyword"
            }
          },
          "end": "(?i)(?=(FILE|LINKAGE|REPORT|SCREEN|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#data-description"
            },
            {
              "include": "#exec"
            },
            {
              "include": "#compiler.directives"
            }
          ]
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "linkage-section": {
      "name": "cobol.linkage.section",
      "begin": "(?i)(LINKAGE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(FILE|WORKING-STORAGE|REPORT|SCREEN|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "begin": "(?i)(SECTION)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "keyword"
            }
          },
          "end": "(?i)(?=(FILE|WORKING-STORAGE|REPORT|SCREEN|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#data-description"
            },
            {
              "include": "#compiler.directives"
            }
          ]
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "report-section": {
      "name": "cobol.report.section",
      "begin": "(?i)(REPORT)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(FILE|WORKING-STORAGE|LINKAGE|SCREEN|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "begin": "(?i)(SECTION)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "keyword"
            }
          },
          "end": "(?i)(?=(FILE|WORKING-STORAGE|LINKAGE|SCREEN|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#rd"
            },
            {
              "include": "#report-description"
            },
            {
              "include": "#compiler.directives"
            }
          ]
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "report-description": {
      "name": "cobol.report_description",
      "begin": "(?i)(\\d+)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "markup.bold"
        },
        "1": {
          "name": "keyword.operator"
        }
      },
      "end": "(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#report.line"
        },
        {
          "include": "#report.next"
        },
        {
          "include": "#report.type"
        },
        {
          "include": "#report.usage"
        },
        {
          "include": "#report.blank"
        },
        {
          "include": "#report.column"
        },
        {
          "include": "#report.group"
        },
        {
          "include": "#report.just"
        },
        {
          "include": "#report.picture"
        },
        {
          "include": "#report.sign"
        },
        {
          "include": "#report.source"
        },
        {
          "include": "#report.value"
        },
        {
          "include": "#report.sum"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "report.line": {
      "name": "cobol.report.line",
      "begin": "(?i)(LINE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(LINE|NEXT|TYPE|USAGE|DISPLAY|BLANK|COL(?:UMN)?|GROUP|JUST(IFIED)?|PIC(TURE)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(NEXT|PAGE|PLUS)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(NUMBER|IS|ON)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "report.next": {
      "name": "cobol.report.next",
      "begin": "(?i)(NEXT)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(LINE|NEXT|TYPE|USAGE|DISPLAY|BLANK|COL(?:UMN)?|JUST(IFIED)?|PIC(TURE)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(GROUP|PAGE|PLUS)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "report.type": {
      "name": "cobol.report.type",
      "begin": "(?i)(TYPE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(LINE|NEXT|TYPE|USAGE|DISPLAY|BLANK|COL(?:UMN)?|GROUP|JUST(IFIED)?|PIC(TURE)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(REPORT|HEADING|RH|PAGE|PH|CONTROL|CH|FINAL|DE(TAIL)?|FOOTING|CF|PF|RF)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "report.usage": {
      "name": "cobol.report.usage",
      "begin": "(?i)(USAGE|DISPLAY)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(LINE|NEXT|TYPE|USAGE|BLANK|COL(?:UMN)?|GROUP|JUST(IFIED)?|PIC(TURE)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(DISPLAY)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "report.blank": {
      "name": "cobol.report.blank",
      "begin": "(?i)(BLANK)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(LINE|NEXT|TYPE|USAGE|DISPLAY|BLANK|COL(?:UMN)?|GROUP|JUST(IFIED)?|PIC(TURE)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(ZERO((E)S)?)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(WHEN)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "report.column": {
      "name": "cobol.report.column",
      "begin": "(?i)(COL(?:UMN)?)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(LINE|NEXT|TYPE|USAGE|DISPLAY|BLANK|COL(?:UMN)?|GROUP|JUST(IFIED)?|PIC(TURE)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(NUMBER|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "report.group": {
      "name": "cobol.report.group",
      "begin": "(?i)(GROUP)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(LINE|NEXT|TYPE|USAGE|DISPLAY|BLANK|COL(?:UMN)?|GROUP|JUST(IFIED)?|PIC(TURE)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(INDICATE)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "report.just": {
      "name": "cobol.report.just",
      "begin": "(?i)(JUST(IFIED)?)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(LINE|NEXT|TYPE|USAGE|DISPLAY|BLANK|COL(?:UMN)?|GROUP|JUST(IFIED)?|PIC(TURE)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(RIGHT)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "report.picture": {
      "name": "cobol.report.picture",
      "begin": "(?i)(?=PIC(TURE)?(?=[^-a-z0-9$_]))",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(IS|LINE|NEXT|TYPE|USAGE|DISPLAY|BLANK|COL(?:UMN)?|GROUP|JUST(IFIED)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#picture"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(USING|FROM|TO)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "report.sign": {
      "name": "cobol.report.sign",
      "begin": "(?i)(SIGN|LEADING|TRAILING)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(LINE|NEXT|TYPE|USAGE|DISPLAY|BLANK|COL(?:UMN)?|GROUP|JUST(IFIED)?|PIC(TURE)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(LEADING|TRAILING|SEPARATE)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS|CHARACTER)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "report.source": {
      "name": "cobol.report.source",
      "begin": "(?i)(SOURCE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(LINE|NEXT|TYPE|USAGE|DISPLAY|BLANK|COL(?:UMN)?|GROUP|JUST(IFIED)?|PIC(TURE)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "report.value": {
      "name": "cobol.report.value",
      "begin": "(?i)(VALUE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(LINE|NEXT|TYPE|USAGE|DISPLAY|BLANK|COL(?:UMN)?|GROUP|JUST(IFIED)?|PIC(TURE)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "report.sum": {
      "name": "cobol.report.sum",
      "begin": "(?i)(SUM)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(LINE|NEXT|TYPE|USAGE|DISPLAY|BLANK|COL(?:UMN)?|GROUP|JUST(IFIED)?|PIC(TURE)?|SIGN|LEADING|TRAILING|SOURCE|VALUE|SUM)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(RESET|FINAL)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(UPON|ON)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "rd": {
      "name": "cobol.rd",
      "begin": "(?i)(RD)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "name": "entity.name.class",
          "match": "(?i)(GLOBAL)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#rd.code"
        },
        {
          "include": "#rd.control"
        },
        {
          "include": "#rd.page"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "rd.code": {
      "name": "cobol.rd.code",
      "begin": "(?i)(CODE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(PAGE|CONTROL(S)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "rd.control": {
      "name": "cobol.rd.control",
      "begin": "(?i)(CONTROL(S)?)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(PAGE|CONTROL(S)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(FINAL)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(ARE|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "rd.page": {
      "name": "cobol.rd.page",
      "begin": "(?i)(PAGE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(PAGE|CONTROL(S)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(LIMIT(S)?|LINE(S)?|HEADING|FIRST|LAST|DETAIL|FOOTING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(ARE|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "screen-section": {
      "name": "cobol.screen.section",
      "begin": "(?i)(SCREEN)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=(FILE|WORKING-STORAGE|LINKAGE|REPORT|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "begin": "(?i)(SECTION)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "keyword"
            }
          },
          "end": "(?i)(?=(FILE|WORKING-STORAGE|LINKAGE|REPORT|PROCEDURE|END|IDENTIFICATION)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "include": "#screen-description"
            },
            {
              "include": "#compiler.directives"
            }
          ]
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#invalid-char"
        }
      ]
    },
    "screen-description": {
      "name": "cobol.screen_description",
      "begin": "(?i)(\\d+)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "markup.bold"
        },
        "1": {
          "name": "keyword.operator"
        }
      },
      "end": "(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(AUTO|SECURE|REQUIRED|DISPLAY|FULL|BELL|BLINK|HIGHLIGHT|LOWLIGHT|REVERSE-VIDEO|UNDERLINE)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#screen.blank"
        },
        {
          "include": "#screen.color"
        },
        {
          "include": "#screen.usage"
        },
        {
          "include": "#screen.sign"
        },
        {
          "include": "#screen.erase"
        },
        {
          "include": "#screen.line"
        },
        {
          "include": "#screen.column"
        },
        {
          "include": "#screen.value"
        },
        {
          "include": "#screen.picture"
        },
        {
          "include": "#screen.just"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "screen.blank": {
      "name": "cobol.screen.blank",
      "begin": "(?i)(BLANK)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(BLANK|FOREGROUND-COLOR|BACKGROUND-COLOR|AUTO|SECURE|REQUIRED|USAGE|DISPLAY|SIGN|LEADING|TRAILING|FULL|BELL|BLINK|ERASE|HIGHLIGHT|LOWLIGHT|REVERSE-VIDEO|UNDERLINE|LINE|COL(?:UMN)?|VALUE|PIC(TURE)?|JUST(IFIED)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(LINE|SCREEN|ZERO((E)S)?)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(WHEN)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "screen.color": {
      "name": "cobol.screen.color",
      "begin": "(?i)(FOREGROUND-COLOR|BACKGROUND-COLOR)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(BLANK|FOREGROUND-COLOR|BACKGROUND-COLOR|AUTO|SECURE|REQUIRED|USAGE|DISPLAY|SIGN|LEADING|TRAILING|FULL|BELL|BLINK|ERASE|HIGHLIGHT|LOWLIGHT|REVERSE-VIDEO|UNDERLINE|LINE|COL(?:UMN)?|VALUE|PIC(TURE)?|JUST(IFIED)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "screen.usage": {
      "name": "cobol.screen.usage",
      "begin": "(?i)(USAGE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(BLANK|FOREGROUND-COLOR|BACKGROUND-COLOR|AUTO|SECURE|REQUIRED|USAGE|DISPLAY|SIGN|LEADING|TRAILING|FULL|BELL|BLINK|ERASE|HIGHLIGHT|LOWLIGHT|REVERSE-VIDEO|UNDERLINE|LINE|COL(?:UMN)?|VALUE|PIC(TURE)?|JUST(IFIED)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "screen.sign": {
      "name": "cobol.screen.sign",
      "begin": "(?i)(SIGN|LEADING|TRAILING)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(BLANK|FOREGROUND-COLOR|BACKGROUND-COLOR|AUTO|SECURE|REQUIRED|USAGE|DISPLAY|SIGN|LEADING|TRAILING|FULL|BELL|BLINK|ERASE|HIGHLIGHT|LOWLIGHT|REVERSE-VIDEO|UNDERLINE|LINE|COL(?:UMN)?|VALUE|PIC(TURE)?|JUST(IFIED)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(LEADING|TRAILING|SEPARATE)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS|CHARACTER)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "screen.erase": {
      "name": "cobol.screen.erase",
      "begin": "(?i)(ERASE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(BLANK|FOREGROUND-COLOR|BACKGROUND-COLOR|AUTO|SECURE|REQUIRED|USAGE|DISPLAY|SIGN|LEADING|TRAILING|FULL|BELL|BLINK|ERASE|HIGHLIGHT|LOWLIGHT|REVERSE-VIDEO|UNDERLINE|LINE|COL(?:UMN)?|VALUE|PIC(TURE)?|JUST(IFIED)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(EOL|EOS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "screen.line": {
      "name": "cobol.screen.line",
      "begin": "(?i)(LINE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(BLANK|FOREGROUND-COLOR|BACKGROUND-COLOR|AUTO|SECURE|REQUIRED|USAGE|DISPLAY|SIGN|LEADING|TRAILING|FULL|BELL|BLINK|ERASE|HIGHLIGHT|LOWLIGHT|REVERSE-VIDEO|UNDERLINE|LINE|COL(?:UMN)?|VALUE|PIC(TURE)?|JUST(IFIED)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(NEXT|PAGE|PLUS)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(NUMBER|IS|ON)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "screen.column": {
      "name": "cobol.screen.column",
      "begin": "(?i)(COL(?:UMN)?)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(BLANK|FOREGROUND-COLOR|BACKGROUND-COLOR|AUTO|SECURE|REQUIRED|USAGE|DISPLAY|SIGN|LEADING|TRAILING|FULL|BELL|BLINK|ERASE|HIGHLIGHT|LOWLIGHT|REVERSE-VIDEO|UNDERLINE|LINE|COL(?:UMN)?|VALUE|PIC(TURE)?|JUST(IFIED)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(PLUS)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(NUMBER|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "screen.value": {
      "name": "cobol.screen.value",
      "begin": "(?i)(VALUE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(BLANK|FOREGROUND-COLOR|BACKGROUND-COLOR|AUTO|SECURE|REQUIRED|USAGE|DISPLAY|SIGN|LEADING|TRAILING|FULL|BELL|BLINK|ERASE|HIGHLIGHT|LOWLIGHT|REVERSE-VIDEO|UNDERLINE|LINE|COL(?:UMN)?|VALUE|PIC(TURE)?|JUST(IFIED)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "screen.picture": {
      "name": "cobol.screen.picture",
      "begin": "(?i)(?=PIC(TURE)?(?=[^-a-z0-9$_]))",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(IS|BLANK|FOREGROUND-COLOR|BACKGROUND-COLOR|AUTO|SECURE|REQUIRED|USAGE|DISPLAY|SIGN|LEADING|TRAILING|FULL|BELL|BLINK|ERASE|HIGHLIGHT|LOWLIGHT|REVERSE-VIDEO|UNDERLINE|LINE|COL(?:UMN)?|VALUE|JUST(IFIED)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#picture"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(USING|FROM|TO)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "screen.just": {
      "name": "cobol.screen.just",
      "begin": "(?i)(JUST(IFIED)?)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(BLANK|FOREGROUND-COLOR|BACKGROUND-COLOR|AUTO|SECURE|REQUIRED|USAGE|DISPLAY|SIGN|LEADING|TRAILING|FULL|BELL|BLINK|ERASE|HIGHLIGHT|LOWLIGHT|REVERSE-VIDEO|UNDERLINE|LINE|COL(?:UMN)?|VALUE|PIC(TURE)?|JUST(IFIED)?)(?=[^-a-z0-9$_]))",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(RIGHT)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "procedure-division": {
      "name": "cobol.procedure.devision",
      "begin": "(?i)(?=PROCEDURE[^-a-z0-9$_])",
      "end": "(?i)(?=(END|IDENTIFICATION)[^-a-z0-9$_])",
      "patterns": [
        {
          "begin": "(?i)(PROCEDURE)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "keyword"
            }
          },
          "end": "(?=\\.[^-a-z0-9$_])",
          "name": "cobol.procedure.devision.header",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "name": "keyword",
              "match": "(?i)(DIVISION)(?=[^-a-z0-9$_])"
            },
            {
              "name": "entity.name.class",
              "match": "(?i)(USING|GIVING)(?=[^-a-z0-9$_])"
            },
            {
              "include": "#compiler.directives"
            },
            {
              "include": "#identifier"
            }
          ]
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#declaratives"
        },
        {
          "include": "#statement"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#section"
        }
      ]
    },
    "declaratives": {
      "name": "cobol.declaratives",
      "begin": "(?i)(DECLARATIVES)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(DECLARATIVES)(?=[^-a-z0-9$_])",
      "endCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#end.declaratives"
        },
        {
          "include": "#statement"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#section"
        }
      ]
    },
    "end.declaratives": {
      "name": "cobol.end.declaratives",
      "begin": "(?i)(END)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?i)(?=DECLARATIVES[^-a-z0-9$_])",
      "endCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        }
      ]
    },
    "section": {
      "name": "cobol.section",
      "begin": "(?i)[a-z0-9$_](?:[-a-z0-9$_]*[a-z0-9$_])?",
      "beginCaptures": {
        "0": {
          "name": "variable.other"
        }
      },
      "end": "(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(SECTION)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#literal.integer"
        }
      ]
    },
    "end-program": {
      "name": "cobol.end.program",
      "begin": "(?i)(END)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword"
        }
      },
      "end": "(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "keyword",
          "match": "(?i)(PROGRAM)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "statement": {
      "name": "cobol.statement",
      "begin": "(?i)((ON|AT)|TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|NOT|EXCEPTION|END|SIZE|ERROR|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "1": {
          "name": "keyword.control"
        },
        "2": {
          "name": "entity.name.function"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#accept"
        },
        {
          "include": "#add"
        },
        {
          "include": "#alter"
        },
        {
          "include": "#call"
        },
        {
          "include": "#exec"
        },
        {
          "include": "#cancel"
        },
        {
          "include": "#close"
        },
        {
          "include": "#compute"
        },
        {
          "include": "#delete"
        },
        {
          "include": "#display"
        },
        {
          "include": "#divide"
        },
        {
          "include": "#evaluate"
        },
        {
          "include": "#when"
        },
        {
          "include": "#examine"
        },
        {
          "include": "#exhibit"
        },
        {
          "include": "#exit"
        },
        {
          "include": "#entry"
        },
        {
          "include": "#generate"
        },
        {
          "include": "#go"
        },
        {
          "include": "#goback"
        },
        {
          "include": "#if"
        },
        {
          "include": "#else"
        },
        {
          "include": "#initialize"
        },
        {
          "include": "#initiate"
        },
        {
          "include": "#inspect"
        },
        {
          "include": "#merge"
        },
        {
          "include": "#move"
        },
        {
          "include": "#multiply"
        },
        {
          "include": "#note"
        },
        {
          "include": "#open"
        },
        {
          "include": "#perform"
        },
        {
          "include": "#read"
        },
        {
          "include": "#release"
        },
        {
          "include": "#return"
        },
        {
          "include": "#rewrite"
        },
        {
          "include": "#search"
        },
        {
          "include": "#service"
        },
        {
          "include": "#set"
        },
        {
          "include": "#sort"
        },
        {
          "include": "#start"
        },
        {
          "include": "#stop"
        },
        {
          "include": "#unstring"
        },
        {
          "include": "#string"
        },
        {
          "include": "#subtract"
        },
        {
          "include": "#suppress"
        },
        {
          "include": "#terminate"
        },
        {
          "include": "#transform"
        },
        {
          "include": "#unlock"
        },
        {
          "include": "#write"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.number"
        }
      ]
    },
    "condition.branch": {
      "name": "cobol.condition.branch",
      "match": "(?i)(?:(?:NOT\\s+)?(AT\\s+)?END|(?:NOT\\s+)?(ON\\s+)?EXCEPTION|(?:NOT\\s+)?(ON\\s+)?(?:SIZE\\s+)?ERROR|(?:NOT\\s+)?(ON\\s+)?OVERFLOW|(?:NOT\\s+)?INVALID(\\s+KEY)?|(?:NOT\\s+)?(AT\\s+)?(?:END-OF-PAGE|EOP))(?=[^-a-z0-9$_])",
      "captures": {
        "0": {
          "name": "keyword.control"
        },
        "1": {
          "name": "entity.name.function"
        },
        "2": {
          "name": "entity.name.function"
        },
        "3": {
          "name": "entity.name.function"
        },
        "4": {
          "name": "entity.name.function"
        },
        "5": {
          "name": "entity.name.function"
        },
        "6": {
          "name": "entity.name.function"
        }
      }
    },
    "compiler.directives": {
      "name": "cobol.compiler.directives",
      "begin": "(?i)(COPY|REPLACE|RECORD|USE|EJECT|SKIP[1-3]|TITLE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "meta.preprocessor"
        }
      },
      "end": "(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#copy"
        },
        {
          "include": "#replace"
        },
        {
          "include": "#use"
        },
        {
          "include": "#skip"
        },
        {
          "include": "#title"
        },
        {
          "include": "#eject"
        },
        {
          "include": "#record"
        }
      ]
    },
    "compiler.directives.without_record": {
      "name": "cobol.compiler.directives",
      "begin": "(?i)(COPY|REPLACE|USE|EJECT|SKIP[1-3]|TITLE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "meta.preprocessor"
        }
      },
      "end": "(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#copy"
        },
        {
          "include": "#replace"
        },
        {
          "include": "#use"
        },
        {
          "include": "#skip"
        },
        {
          "include": "#title"
        },
        {
          "include": "#eject"
        }
      ]
    },
    "copy": {
      "name": "cobol.copy",
      "begin": "(?i)(?<=COPY)\\G|COPY(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "meta.preprocessor"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(OF|IN|REPLACING|BY|FROM|DICTIONARY)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.text"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "replace": {
      "name": "cobol.replace",
      "begin": "(?i)(?<=REPLACE)\\G|REPLACE(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "meta.preprocessor"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(BY|OFF)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.text"
        }
      ]
    },
    "record": {
      "name": "cobol.record",
      "begin": "(?i)(?<=RECORD)\\G|RECORD(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "meta.preprocessor"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "meta.preprocessor",
          "match": "(?i)(DEPENDENCY)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(TYPE|DICTIONARY)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(IS|IN)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "use": {
      "name": "cobol.use",
      "begin": "(?i)(?<=USE)\\G|USE(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "meta.preprocessor"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(GLOBAL|AFTER|EXCEPTION|ERROR|PROCEDURE|INPUT|OUTPUT|I-O|EXTEND|BEFORE|REPORTING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(STANDARD|ON)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#cobol.name"
        }
      ]
    },
    "eject": {
      "name": "cobol.eject",
      "begin": "(?i)(?<=EJECT)\\G|EJECT(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "meta.preprocessor"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        }
      ]
    },
    "skip": {
      "name": "cobol.skip",
      "begin": "(?i)(?<=SKIP[1-3])\\G|SKIP[1-3](?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "meta.preprocessor"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        }
      ]
    },
    "title": {
      "name": "cobol.title",
      "begin": "(?i)(?<=TITLE)\\G|TITLE(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "meta.preprocessor"
        }
      },
      "end": "(?i)(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#literal.string"
        }
      ]
    },
    "exec": {
      "name": "cobol.exec",
      "begin": "(?i)(?<=EXEC)\\G|EXEC(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "keyword.control"
        }
      },
      "end": "(?i)(END-EXEC)[^-a-z0-9$_]",
      "endCaptures": {
        "0": {
          "name": "keyword.control"
        }
      },
      "contentName" : "entity.name.function",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#literal.string"
        },
        {
          "name": "keyword.control",
          "match": "(?i)(SQL)(?=[^-a-z0-9$_])"
        }
      ]
    },
    "accept": {
      "name": "cobol.accept",
      "begin": "(?i)(?<=ACCEPT)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)((FROM\\s+)?LINE|(FROM\\s+)?COLUMN|FROM|(WITH\\s+)?CONVERSION|DATE|DAY|DAY-OF-WEEK|TIME|PLUS|BELL|UNDERLINED|BOLD|BLINKING|PROTECTED|SIZE|AUTOTERMINATE|NO|BLANK|EDITING|FILLER|CONVERSION|REVERSED|ECHO|DEFAULT|CURRENT|KEY)(?=[^-a-z0-9$_])",
          "captures": {
            "2": {
              "name": "entity.name.function"
            },
            "3": {
              "name": "entity.name.function"
            },
            "4": {
              "name": "entity.name.function"
            }
          }
        },
        {
          "name": "markup.bold.datemask",
          "match": "(?i)(YYYYMMDD|YYYYDDD)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(NUMBER|WITH|IS|CONTROL|IN|VALUE)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#accept.erase"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "accept.erase": {
      "name": "cobol.accept.erase",
      "begin": "(?i)(?<=[^-a-z0-9$_])(ERASE)(?=[^-a-z0-9$_])",
      "beginCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "end": "(?i)(?<=[^-a-z0-9$_])(SCREEN|LINE)(?=[^-a-z0-9$_])",
      "endCaptures": {
        "0": {
          "name": "entity.name.class"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(END)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(TO|OF)(?=[^-a-z0-9$_])"
        }
      ]
    },
    "add": {
      "name": "cobol.add",
      "begin": "(?i)(?<=ADD)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(TO|ROUNDED|GIVING|CORR(ESPONDING)?)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(TO|OF)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "alter": {
      "name": "cobol.alter",
      "begin": "(?i)(?<=ALTER)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(TO|PROCEED)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "call": {
      "name": "cobol.call",
      "begin": "(?i)(?<=CALL)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(USING|REFERENCE|CONTENT|DESCRIPTOR|VALUE|OMITTED|GIVING|RETURNING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(BY)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "cancel": {
      "name": "cobol.cancel",
      "begin": "(?i)(?<=CANCEL)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "close": {
      "name": "cobol.close",
      "begin": "(?i)(?<=CLOSE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(REEL|UNIT|REMOVAL|NO|REWIND|LOCK|DISP)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(WITH|FOR)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "compute": {
      "name": "cobol.compute",
      "begin": "(?i)(?<=COMPUTE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "name": "entity.name.class",
          "match": "(?i)(ROUNDED)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "delete": {
      "name": "cobol.delete",
      "begin": "(?i)(?<=DELETE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(RECORD)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives.without_record"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "display": {
      "name": "cobol.display",
      "begin": "(?i)(?<=DISPLAY)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(CONVERSION|UPON|NO|(AT\\s+)?LINE|(AT\\s+)?COLUMN|PLUS|BELL|UNDERLINED|BOLD|BLINKING|REVERSED|CONVERSION)(?=[^-a-z0-9$_])",
          "captures": {
            "2": {
              "name": "entity.name.function"
            },
            "3": {
              "name": "entity.name.function"
            }
          }
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(WITH|ADVANCING|NUMBER)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#accept.erase"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "divide": {
      "name": "cobol.divide",
      "begin": "(?i)(?<=DIVIDE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(INTO|ROUNDED|GIVING|BY|REMAINDER)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "evaluate": {
      "name": "cobol.evaluate",
      "begin": "(?i)(?<=EVALUATE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(TRUE|FALSE)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(ALSO)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#expression"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "when": {
      "name": "cobol.when",
      "begin": "(?i)(?<=WHEN)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "keyword.control",
          "match": "(?i)(OTHER)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(ANY|TRUE|FALSE|NOT|THRU|THROUGH|OTHER)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(ALSO)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#expression"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "examine": {
      "name": "cobol.examine",
      "begin": "(?i)(?<=EXAMINE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(TALLYING|UNTIL|FIRST|ALL|LEADING|REPLACING|BY)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "exhibit": {
      "name": "cobol.exhibit",
      "begin": "(?i)(?<=EXHIBIT)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(CHANGED|NAMED|UPON|ERASE)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#expression.brackets"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "exit": {
      "name": "cobol.exit",
      "begin": "(?i)(?<=EXIT)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "keyword.control",
          "match": "(?i)(PROGRAM)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "entry": {
      "name": "cobol.entry",
      "begin": "(?i)(?<=ENTRY)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(?:USING|REFERENCE|VALUE|DELIMITED|(BY\\s+)?SIZE|ANY|REPEATED|TO|GIVING|RETURNING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(BY)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "generate": {
      "name": "cobol.generate",
      "begin": "(?i)(?<=GENERATE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "go": {
      "name": "cobol.go",
      "begin": "(?i)(?<=GO)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(DEPENDING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(TO|ON)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "goback": {
      "name": "cobol.goback",
      "begin": "(?i)(?<=GOBACK)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "if": {
      "name": "cobol.if",
      "begin": "(?i)(?<=IF)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(NEXT|SENTENCE)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(THEN)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#expression"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "else": {
      "name": "cobol.else",
      "begin": "(?i)(?<=ELSE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(NEXT|SENTENCE)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "initialize": {
      "name": "cobol.initialize",
      "begin": "(?i)(?<=INITIALIZE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(REPLACING|ALPHABETIC|ALPHANUMERIC|NUMERIC|ALPHANUMERIC-EDITED|NUMERIC-EDITED|BY)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(DATA)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "initiate": {
      "name": "cobol.initiate",
      "begin": "(?i)(?<=INITIATE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "inspect": {
      "name": "cobol.inspect",
      "begin": "(?i)(?<=INSPECT)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(TALLYING|FOR|CHARACTERS|BEFORE|AFTER|ALL|LEADING|BY|REPLACING|FIRST|CONVERTING|TO)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(INITIAL)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "merge": {
      "name": "cobol.merge",
      "begin": "(?i)(?<=MERGE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(DESCENDING|ASCENDING|SEQUENCE|USING|OUTPUT|PROCEDURE|THRU|THROUGH|GIVING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(ON|KEY|COLLATING|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "move": {
      "name": "cobol.move",
      "begin": "(?i)(?<=MOVE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(TO|CORR(ESPONDING)?)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "multiply": {
      "name": "cobol.multiply",
      "begin": "(?i)(?<=MULTIPLY)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(BY|ROUNDED|GIVING)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "note": {
      "name": "cobol.note",
      "begin": "(?i)(?<=NOTE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "comment"
          ,"match": "."
        }
      ]
    },
    "open": {
      "name": "cobol.open",
      "begin": "(?i)(?<=OPEN)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(INPUT|OUTPUT|NO|REWIND|LOCK|ALLOWING|READERS|WRITERS|UPDATERS|ALL|EXTEND|I-O)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(WITH|OTHERS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "perform": {
      "name": "cobol.perform",
      "begin": "(?i)(?<=PERFORM)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(THRU|THROUGH|TIMES|TEST|BEFORE|AFTER|VARYING|FROM|BY|UNTIL)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(WITH)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "read": {
      "name": "cobol.read",
      "begin": "(?i)(?<=READ)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(NEXT|PREVIOUS|PRIOR|INTO|NO|LOCK|REGARDLESS(\\s+OF\\s+LOCK)?|ALLOWING|UPDATERS|READERS|KEY)(?=[^-a-z0-9$_])",
          "captures": {
            "2": {
              "name": "entity.name.function"
            }
          }
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(RECORD|WITH|OTHERS|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "release": {
      "name": "cobol.release",
      "begin": "(?i)(?<=RELEASE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(FROM)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "return": {
      "name": "cobol.return",
      "begin": "(?i)(?<=RETURN)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(INTO)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(RECORD)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "rewrite": {
      "name": "cobol.rewrite",
      "begin": "(?i)(?<=REWRITE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(FROM|ALLOWING|NO)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(OTHERS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "search": {
      "name": "cobol.search",
      "begin": "(?i)(?<=SEARCH)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(VARYING|ALL)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "service": {
      "name": "cobol.service",
      "begin": "(?i)(?<=SERVICE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(LABEL|RELOAD)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "set": {
      "name": "cobol.set",
      "begin": "(?i)(?<=SET)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(TO|UP|BY|DOWN|TRUE|ON|OFF|REFERENCE|SUCCESS|FAILURE)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(OF)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "sort": {
      "name": "cobol.sort",
      "begin": "(?i)(?<=SORT)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(DESCENDING|ASCENDING|DUPLICATES|SEQUENCE|INPUT|PROCEDURE|THRU|THROUGH|USING|OUTPUT|GIVING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(ON|KEY|WITH|IN|ORDER|COLLATING|IS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "start": {
      "name": "cobol.start",
      "begin": "(?i)(?<=START)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "cobol.start.key",
          "begin": "(?i)(KEY)(?=[^-a-z0-9$_])",
          "beginCaptures": {
            "0": {
              "name": "entity.name.class"
            }
          },
          "end": "(?i)(?!\\s|$|^(\\\\[a-z])?(\\d{6}|\\s{6})?[*/]|[><=]|(IS|NOT|GREATER|LESS|OR|EQUAL|TO|THAN)[^-a-z0-9$_])",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#linenum"
            },
            {
              "include": "#conditional"
            },
            {
              "name": "entity.name.function",
              "match": "(?i)(IS|TO|THAN|OR)(?=[^-a-z0-9$_])"
            },
            {
              "name": "markup.bold",
              "match": "(?i)(NOT|EQUAL|GREATER|LESS)(?=[^-a-z0-9$_])"
            },
            {
              "name": "markup.bold",
              "match": "[=><]"
            }
          ]
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(REGARDLESS|ALLOWING|UPDATERS|READERS|NO)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(OF|LOCK|OTHERS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "stop": {
      "name": "cobol.stop",
      "begin": "(?i)(?<=STOP)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(RUN)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "string": {
      "name": "cobol.string",
      "begin": "(?i)(?<=STRING)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(DELIMITED|SIZE|INTO|POINTER)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(BY|WITH)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "subtract": {
      "name": "cobol.subtract",
      "begin": "(?i)(?<=SUBTRACT)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(FROM|ROUNDED|GIVING|CORR(ESPONDING)?)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(BY|WITH)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#literal.number"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "suppress": {
      "name": "cobol.suppress",
      "begin": "(?i)(?<=SUPPRESS)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(PRINTING)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        }
      ]
    },
    "terminate": {
      "name": "cobol.terminate",
      "begin": "(?i)(?<=TERMINATE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "transform": {
      "name": "cobol.transform",
      "begin": "(?i)(?<=TRANSFORM)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(FROM|TO)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(CHARACTERS)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "unlock": {
      "name": "cobol.unlock",
      "begin": "(?i)(?<=UNLOCK)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(ALL(\\s+RECORDS)?|RECORD(S)?)(?=[^-a-z0-9$_])",
          "captures": {
            "2": {
              "name": "entity.name.function"
            }
          }
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "unstring": {
      "name": "cobol.unstring",
      "begin": "(?i)(?<=UNSTRING)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(DELIMITED|ALL|OR|INTO|DELIMITER|COUNT|POINTER|TALLYING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(BY|IN|WITH)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.string"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "write": {
      "name": "cobol.write",
      "begin": "(?i)(?<=WRITE)\\G",
      "end": "(?i)(?=\\.[^-a-z0-9$_])|(?=(TRANSFORM|SERVICE|NOTE|ENTRY|EXHIBIT|EXAMINE|GOBACK|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DISPLAY|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-PERFORM|END-READ|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ACCEPT|ADD|ALTER|CALL|CANCEL|CLOSE|COMPUTE|CONTINUE|DELETE|DISPLAY|DIVIDE|EVALUATE|EXIT|GENERATE|GO|IF|ELSE|INITIALIZE|INITIATE|INSPECT|MERGE|MOVE|MULTIPLY|OPEN|PERFORM|READ|RELEASE|RETURN|REWRITE|SEARCH|SET|SORT|START|STOP|STRING|SUBTRACT|SUPPRESS|TERMINATE|UNLOCK|UNSTRING|WRITE|WHEN|EXEC)[^-a-z0-9$_])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#linenum"
        },
        {
          "include": "#conditional"
        },
        {
          "name": "entity.name.class",
          "match": "(?i)(FROM|ALLOWING|NO|BEFORE|AFTER|PAGE|POSITIONING)(?=[^-a-z0-9$_])"
        },
        {
          "name": "entity.name.function",
          "match": "(?i)(OTHERS|ADVANCING|LINE(S)?)(?=[^-a-z0-9$_])"
        },
        {
          "include": "#literal.integer"
        },
        {
          "include": "#condition.branch"
        },
        {
          "include": "#compiler.directives"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "foreign": {
      "name": "cobol.foreign",
      "match": "(?i)(ID|OTHERWISE|PASSWORD|REMARKS|TRACE)(?=[^-a-z0-9$_])",
      "captures": {
        "1": {
          "name": "markup.underline"
        }
      }
    }
  }
}