{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json"
    ,"name": "CLD"
    ,"patterns": [
        {
            "include": "#statement"
        }
    ]
    ,"repository": {
        "statement": {
            "patterns": [
                {
                    "include": "#define"
                }
                ,{
                    "include": "#ident"
                }
                ,{
                    "include": "#module"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }

        ,"define": {
            "name": "define"
            ,"begin": "(?i)define"
            ,"beginCaptures": {
                "0": {
                    "name": "markup.bold"
                }
            }
            ,"end": "(?i)(?=(define|ident|module))"
            ,"patterns": [
                {
                    "include": "#syntax"
                }
                ,{
                    "include": "#type"
                }
                ,{
                    "include": "#verb"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"syntax": {
            "name": "syntax"
            ,"begin": "(?i)(?=syntax)"
            ,"end": "(?i)(?=define|ident|module)"
            ,"patterns": [
                {
                    "begin": "(?i)syntax"
                    ,"beginCaptures": {
                        "0":
                        {
                            "name": "constant.numeric"
                        }
                    }
                    ,"end": "(?i)[a-z$][a-z$_0-9]*"
                    ,"endCaptures": {
                        "0":
                        {
                            "name": "markup.italic"
                        }
                    }
                    ,"patterns": [
                        {
                            "include": "#comment"
                        }
                    ]
                }
                ,{
                    "include": "#syntax.clauses"
                }
            ]
        }
        ,"syntax.clauses":
        {
            "patterns": [
                {
                    "include": "#disallow"
                }
                ,{
                    "include": "#nodisallows"
                }
                ,{
                    "include": "#image"
                }
                ,{
                    "include": "#parameter"
                }
                ,{
                    "include": "#noparameters"
                }
                ,{
                    "include": "#qualifier"
                }
                ,{
                    "include": "#noqualifiers"
                }
                ,{
                    "include": "#routine"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"nodisallows": 
        {
            "patterns": 
            [
                {
                    "name": "nodisallows"
                    ,"match": "(?i)nodisallows"
                    ,"captures": {
                        "0":
                        {
                            "name": "constant.numeric"
                        }
                    }
                }
            ]
        }
        ,"noparameters": 
        {
            "patterns": 
            [
                {
                    "name": "noparameters"
                    ,"match": "(?i)noparameters"
                    ,"captures": {
                        "0":
                        {
                            "name": "constant.numeric"
                        }
                    }
                }
            ]
        }
        ,"noqualifiers": 
        {
            "patterns": 
            [
                {
                    "name": "noqualifiers"
                    ,"match": "(?i)noqualifiers"
                    ,"captures": {
                        "0":
                        {
                            "name": "constant.numeric"
                        }
                    }
                }
            ]
        }
        ,"image": {
            "name": "image"
            ,"begin": "(?i)image"
            ,"beginCaptures": {
                "0": {
                    "name": "constant.numeric"
                }
            }
            ,"end": "(?<=\")"
            ,"patterns": [
                {
                    "include": "#string"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"routine": {
            "name": "routine"
            ,"begin": "(?i)routine"
            ,"beginCaptures": {
                "0": {
                    "name": "constant.numeric"
                }
            }
            ,"end": "(?<=\\S)(?!\\G)"
            ,"patterns": [
                {
                    "include": "#name"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"parameter": {
            "name": "parameter"
            ,"begin": "(?i)(?=parameter)"
            ,"end": "(?i)(?!\\G)(?=define|ident|module|routine|image|disallow|nodisallows|noparameters|noqualifiers|parameter|qualifier)"
            ,"patterns": [
                {
                    "begin": "(?i)parameter"
                    ,"beginCaptures": {
                        "0":
                        {
                            "name": "constant.numeric"
                        }
                    }
                    ,"end": "(?i)[a-z$][a-z$_0-9]*"
                    ,"endCaptures": {
                        "0":
                        {
                            "name": "markup.italic"
                        }
                    }
                    ,"patterns": [
                        {
                            "include": "#comment"
                        }
                    ]
                }
                ,{
                    "include": "#parameter.clauses"
                }
            ]
        }
        ,"parameter.clauses":
        {
            "patterns": [
                {
                    "include": "#default"
                }
                ,{
                    "include": "#label"
                }
                ,{
                    "include": "#prompt"
                }
                ,{
                    "include": "#parameter.value"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"default": 
        {
            "patterns": 
            [
                {
                    "name": "default"
                    ,"match": "(?i)default"
                    ,"captures": {
                        "0":
                        {
                            "name": "constant.character"
                        }
                    }
                }
            ]
        }
        ,"label": 
        {
            "name": "label"
            ,"begin": "(?i)label"
            ,"beginCaptures": {
                "0": {
                    "name": "constant.character"
                }
            }
            ,"end": "(?i)(?<=[a-z$_0-9])(?!\\G)"
            ,"patterns": [
                {
                    "include": "#name"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"prompt": {
            "name": "prompt"
            ,"begin": "(?i)prompt"
            ,"beginCaptures": {
                "0": {
                    "name": "constant.character"
                }
            }
            ,"end": "(?<=\")"
            ,"patterns": [
                {
                    "include": "#string"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"parameter.value": {
            "name": "parameter.value"
            ,"begin": "(?i)value"
            ,"beginCaptures": {
                "0": {
                    "name": "constant.character"
                }
            }
            ,"end": "(?<=\\))"
            ,"patterns": [
                {
                    "include": "#concatenate"
                }
                ,{
                    "include": "#noconcatenate"
                }
                ,{
                    "include": "#list"
                }
                ,{
                    "include": "#required"
                }
                ,{
                    "include": "#defstring"
                }
                ,{
                    "include": "#typename"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"concatenate": 
        {
            "patterns": 
            [
                {
                    "name": "concatenate"
                    ,"match": "(?i)concatenate"
                    ,"captures": {
                        "0":
                        {
                            "name": "constant.character"
                        }
                    }
                }
            ]
        }
        ,"noconcatenate": 
        {
            "patterns": 
            [
                {
                    "name": "noconcatenate"
                    ,"match": "(?i)noconcatenate"
                    ,"captures": {
                        "0":
                        {
                            "name": "constant.character"
                        }
                    }
                }
            ]
        }
        ,"list": 
        {
            "patterns": 
            [
                {
                    "name": "list"
                    ,"match": "(?i)list"
                    ,"captures": {
                        "0":
                        {
                            "name": "constant.character"
                        }
                    }
                }
            ]
        }
        ,"required": 
        {
            "patterns": 
            [
                {
                    "name": "required"
                    ,"match": "(?i)required"
                    ,"captures": {
                        "0":
                        {
                            "name": "constant.character"
                        }
                    }
                }
            ]
        }
        ,"defstring": {
            "name": "defstring"
            ,"begin": "(?i)default"
            ,"beginCaptures": {
                "0": {
                    "name": "constant.character"
                }
            }
            ,"end": "(?<=\")"
            ,"patterns": [
                {
                    "include": "#string"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"typename": 
        {
            "name": "typename"
            ,"begin": "(?i)type"
            ,"beginCaptures": {
                "0": {
                    "name": "constant.character"
                }
            }
            ,"end": "(?i)(?<=[a-z$_0-9])(?!\\G)"
            ,"patterns": [
                {
                    "include": "#name"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"qualifier": {
            "name": "qualifier"
            ,"begin": "(?i)(?=qualifier)"
            ,"end": "(?i)(?!\\G)(?=define|ident|module|routine|image|disallow|nodisallows|noparameters|noqualifiers|parameter|qualifier)"
            ,"patterns": [
                {
                    "begin": "(?i)qualifier"
                    ,"beginCaptures": {
                        "0":
                        {
                            "name": "constant.numeric"
                        }
                    }
                    ,"end": "(?i)[a-z$][a-z$_0-9]*"
                    ,"endCaptures": {
                        "0":
                        {
                            "name": "markup.italic"
                        }
                    }
                    ,"patterns": [
                        {
                            "include": "#comment"
                        }
                    ]
                }
                ,{
                    "include": "#qualifier.clauses"
                }
            ]
        }
        ,"qualifier.clauses":
        {
            "patterns": [
                {
                    "include": "#batch"
                }
                ,{
                    "include": "#default"
                }
                ,{
                    "include": "#label"
                }
                ,{
                    "include": "#negatable"
                }
                ,{
                    "include": "#nonnegatable"
                }
                ,{
                    "include": "#placement"
                }
                ,{
                    "include": "#qualifier.syntax"
                }
                ,{
                    "include": "#qualifier.value"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"batch": 
        {
            "patterns": 
            [
                {
                    "name": "batch"
                    ,"match": "(?i)batch"
                    ,"captures": {
                        "0":
                        {
                            "name": "constant.character"
                        }
                    }
                }
            ]
        }
        ,"negatable": 
        {
            "patterns": 
            [
                {
                    "name": "negatable"
                    ,"match": "(?i)negatable"
                    ,"captures": {
                        "0":
                        {
                            "name": "constant.character"
                        }
                    }
                }
            ]
        }
        ,"nonnegatable": 
        {
            "patterns": 
            [
                {
                    "name": "nonnegatable"
                    ,"match": "(?i)nonnegatable"
                    ,"captures": {
                        "0":
                        {
                            "name": "constant.character"
                        }
                    }
                }
            ]
        }
        ,"placement": 
        {
            "name": "placement"
            ,"begin": "(?i)placement"
            ,"beginCaptures": {
                "0": {
                    "name": "constant.character"
                }
            }
            ,"end": "(?i)(?<=[a-z$_0-9])(?!\\G)"
            ,"patterns": [
                {
                    "include": "#name"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"qualifier.syntax": 
        {
            "name": "qualifier.syntax"
            ,"begin": "(?i)syntax"
            ,"beginCaptures": {
                "0": {
                    "name": "constant.character"
                }
            }
            ,"end": "(?i)(?<=[a-z$_0-9])(?!\\G)"
            ,"patterns": [
                {
                    "include": "#name"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"qualifier.value": {
            "name": "qualifier.value"
            ,"begin": "(?i)value"
            ,"beginCaptures": {
                "0": {
                    "name": "constant.character"
                }
            }
            ,"end": "(?<=\\))"
            ,"patterns": [
                {
                    "include": "#list"
                }
                ,{
                    "include": "#required"
                }
                ,{
                    "include": "#defstring"
                }
                ,{
                    "include": "#typename"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"disallow": {
            "name": "disallow"
            ,"begin": "(?i)disallow"
            ,"beginCaptures": {
                "0": {
                    "name": "constant.numeric"
                }
            }
            ,"end": "(?i)(?=(define|ident|module|routine|image|disallow|nodisallows|noparameters|noqualifiers|parameter|qualifier))"
            ,"patterns": [
                {
                    "include": "#expression"
                }
                ,{
                    "include": "#comment"
                }
            ]
        }
        ,"expression":
        {
            "patterns": [
                {
                    "begin": "\\("
                    ,"end": "\\)"
                    ,"patterns": [
                        {
                            "include": "#expression"
                        }
                        ,{
                            "include": "#comment"
                        }
                    ]
                }
                ,{
                    "begin": "(?i)any2"
                    ,"beginCaptures": {
                        "0":
                        {
                            "name": "constant.regexp"
                        }
                    }
                    ,"end": "\\)"
                    ,"patterns": [
                        {
                            "include": "#entity"
                        }
                        ,{
                            "include": "#comment"
                        }
                    ]
                }
                ,{
                    "match": "(?i)or|and|not|neg"
                    ,"captures": {
                        "0":
                        {
                            "name": "constant.regexp"
                        }
                    }
                }
                ,{
                    "include": "#entity"
                }
            ]
        }
        ,"entity":
        {
            "patterns": 
            [
                {
                    "name": "entity"
                    ,"match": "(?i)(<[a-z$][a-z$_0-9]*>)?[a-z$][a-z$_0-9]*([.][a-z$][a-z$_0-9]*)*"
                    ,"captures": {
                        "0":
                        {
                            "name": "markup.italic"
                        }
                    }
                }
            ]

        }
        ,"string": {
            "name": "string.quoted.cld"
            ,"begin": "\""
            ,"end": "\"(?=[^\"])"
            ,"patterns": [
                {
                    "name": "constant.character.escape.cld"
                    ,"match": "\"\""
                }
            ]
        }
        ,"name": 
        {
            "patterns": 
            [
                {
                    "name": "name"
                    ,"match": "(?i)[a-z$][a-z$_0-9]*"
                    ,"captures": {
                        "0":
                        {
                            "name": "markup.italic"
                        }
                    }
                }
            ]
        }
        ,"comment": 
        {
            "patterns": 
            [
                {
                    "name": "comment.line.cld"
                    ,"begin": "!"
                    ,"end": "\\n"
                }
            ]
        }
        ,"space": 
        {
            "patterns": 
            [
                {
                    "name": "space"
                    ,"begin": "\\s"
                    ,"end": "(?=\\S)"
                }
            ]
        }
    }
    ,"scopeName": "source.cld"
}